format 222
"serializer" // jdk1.8::com::sun::org::apache::xml::internal::serializer
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/serializer/"
  java_package "com.sun.org.apache.xml.internal.serializer"
  classview 157954 "serializer"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 590210 "SerializationHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface is the one that a serializer implements. It is a group of
other interfaces, such as ExtendedContentHandler, ExtendedLexicalHandler etc.
In addition there are other methods, such as reset().

This class is public only because it is used in another package,
it is not a public API.

@xsl.usage internal
"
      classrelation 1697538 // <generalisation>
	relation 1697538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1697538 // <generalisation>
	  b parent class_ref 617090 // ExtendedContentHandler
      end

      classrelation 1697794 // <generalisation>
	relation 1697794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1697794 // <generalisation>
	  b parent class_ref 617474 // ExtendedLexicalHandler
      end

      classrelation 1697922 // <generalisation>
	relation 1697922 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1697922 // <generalisation>
	  b parent class_ref 617730 // XSLOutputAttributes
      end

      classrelation 1698050 // <generalisation>
	relation 1698050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1698050 // <generalisation>
	  b parent class_ref 617858 // DeclHandler
      end

      classrelation 1698178 // <generalisation>
	relation 1698178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1698178 // <generalisation>
	  b parent class_ref 617986 // DTDHandler
      end

      classrelation 1698306 // <generalisation>
	relation 1698306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1698306 // <generalisation>
	  b parent class_ref 618114 // ErrorHandler
      end

      classrelation 1698434 // <generalisation>
	relation 1698434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1698434 // <generalisation>
	  b parent class_ref 618370 // DOMSerializer
      end

      classrelation 1698562 // <generalisation>
	relation 1698562 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1698562 // <generalisation>
	  b parent class_ref 618498 // Serializer
      end

      operation 3901442 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SAX Content handler that the serializer sends its output to. This
method only applies to a ToSAXHandler, not to a ToStream serializer.

@see Serializer#asContentHandler()
@see ToSAXHandler
"
      end

      operation 3901570 "close"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3901698 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify that the serializer should take this DOM node as input to be
serialized.

@param node the DOM node to be serialized.
@throws IOException
"
      end

      operation 3901826 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turns special character escaping on/off.

Note that characters will
never, even if this option is set to 'true', be escaped within
CDATA sections in output XML documents.

@param escape true if escaping is to be set on.
"
      end

      operation 3901954 "setIndentAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "spaces" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the number of spaces to indent for each indentation level.
@param spaces the number of spaces to indent for each indentation level.
"
      end

      operation 3902082 "setTransformer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transformer" type class_ref 618626 // Transformer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the transformer associated with the serializer.
@param transformer the transformer associated with the serializer.
"
      end

      operation 3902210 "getTransformer"
	public return_type class_ref 618626 // Transformer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the transformer associated with the serializer.
@return Transformer the transformer associated with the serializer.
"
      end

      operation 3902338 "setNamespaceMappings"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mappings" type class_ref 617218 // NamespaceMappings
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used only by TransformerSnapshotImpl to restore the serialization
to a previous state.

@param mappings NamespaceMappings
"
      end

      operation 3902466 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush any pending events currently queued up in the serializer. This will
flush any input that the serializer has which it has not yet sent as
output.
"
      end

      operation 3902594 "setDTDEntityExpansion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expand" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default behavior is to expand DTD entities,
that is the initall default value is true.
@param expand true if DTD entities are to be expanded,
false if they are to be left as DTD entity references.
"
      end

      operation 3902722 "setIsStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify if the output will be treated as a standalone  property
@param isStandalone true if the http://www.oracle.com/xml/is-standalone is set to yes
@see OutputPropertiesFactory ORACLE_IS_STANDALONE
"
      end
    end

    class 602754 "ElemDesc"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class has a series of flags (bit values) that describe an HTML element

This class is public because XSLTC uses it, it is not a public API.

@xsl.usage internal
"
      attribute 1209986 "m_flags"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit flags to tell about this element type. 
"
      end

      classrelation 2521474 // m_attrs (<unidirectional association>)
	relation 2521474 --->
	  a role_name "m_attrs" init_value " null" private
	    comment "
Table of attribute names to integers, which contain bit flags telling about
 the attributes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521474 // m_attrs (<unidirectional association>)
	  b parent class_ref 788226 // StringToIntTable
      end

      attribute 1210114 "EMPTY"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is empty. 
"
      end

      attribute 1210242 "FLOW"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a flow. 
"
      end

      attribute 1210370 "BLOCK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 3)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a block. 
"
      end

      attribute 1210498 "BLOCKFORM"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a block form. 
"
      end

      attribute 1210626 "BLOCKFORMFIELDSET"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 5)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a block form field set. 
"
      end

      attribute 1210754 "CDATA"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 6)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is CDATA. 
"
      end

      attribute 1210882 "PCDATA"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 7)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is PCDATA. 
"
      end

      attribute 1211010 "RAW"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 8)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is should be raw characters. 
"
      end

      attribute 1211138 "INLINE"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 9)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type should be inlined. 
"
      end

      attribute 1211266 "INLINEA"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 10)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is INLINEA. 
"
      end

      attribute 1211394 "INLINELABEL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 11)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is an inline label. 
"
      end

      attribute 1211522 "FONTSTYLE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 12)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a font style. 
"
      end

      attribute 1211650 "PHRASE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 13)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a phrase. 
"
      end

      attribute 1211778 "FORMCTRL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 14)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a form control. 
"
      end

      attribute 1211906 "SPECIAL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 15)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is ???. 
"
      end

      attribute 1212034 "ASPECIAL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 16)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is ???. 
"
      end

      attribute 1212162 "HEADMISC"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 17)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is an odd header element. 
"
      end

      attribute 1212290 "HEAD"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 18)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a head element (i.e. H1, H2, etc.) 
"
      end

      attribute 1212418 "LIST"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 19)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a list. 
"
      end

      attribute 1212546 "PREFORMATTED"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 20)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a preformatted type. 
"
      end

      attribute 1212674 "WHITESPACESENSITIVE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 21)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is whitespace sensitive. 
"
      end

      attribute 1212802 "HEADELEM"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 22)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element type is a header element (i.e. HEAD). 
"
      end

      attribute 1212930 "HTMLELEM"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 23)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this element is the \"HTML\" element 
"
      end

      attribute 1213058 "ATTRURL"
	class_attribute const_attribute public explicit_type "int"
	init_value " (1 << 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this attribute type is a URL. 
"
      end

      attribute 1213186 "ATTREMPTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " (1 << 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit position if this attribute type is an empty type. 
"
      end

      operation 5560834 "ElemDesc"
	package explicit_return_type ""
	nparams 1
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an ElemDesc from a set of bit flags.


@param flags Bit flags that describe the basic properties of this element type.
"
      end

      operation 5560962 "is"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this element type has the basic bit properties that are passed
as an argument.

@param flags Bit flags that describe the basic properties of interest.

@return true if any of the flag bits are true.
"
      end

      operation 5561090 "getFlags"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5561218 "setAttr"
	package explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an attribute name and it's bit properties.


@param name non-null name of attribute, in upper case.
@param flags flag bits.
"
      end

      operation 5561346 "isAttrFlagSet"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if any of the bits of interest are set for a named attribute type.

@param name non-null reference to attribute name, in any case.
@param flags flag mask.

@return true if any of the flags are set for the named attribute.
"
      end
    end

    class 616962 "EmptySerializer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is an adapter class. Its only purpose is to be extended and
for that extended class to over-ride all methods that are to be used.

This class is not a public API, it is only public because it is used
across package boundaries.

@xsl.usage internal
"
      classrelation 1698690 // <realization>
	relation 1698690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1698690 // <realization>
	  b parent class_ref 590210 // SerializationHandler
      end

      classrelation 1698818 // ERR (<unidirectional association>)
	relation 1698818 --->
	  a role_name "ERR" init_value " \"EmptySerializer method not over-ridden\"" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1698818 // ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 3902850 "couldThrowIOException"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#asContentHandler()
"
      end

      operation 3902978 "couldThrowSAXException"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903106 "couldThrowSAXException"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903234 "couldThrowSAXException"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elemQName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903362 "aMethodIsCalled"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903490 "asContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#asContentHandler()
"
      end

      operation 3903618 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setContentHandler(org.xml.sax.ContentHandler)
"
      end

      operation 3903746 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#close()
"
      end

      operation 3903874 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#getOutputFormat()
"
      end

      operation 3904002 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#getOutputStream()
"
      end

      operation 3904130 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#getWriter()
"
      end

      operation 3904258 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#reset()
"
      end

      operation 3904386 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#serialize(org.w3c.dom.Node)
"
      end

      operation 3904514 "setCdataSectionElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "URI_and_localNames" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setCdataSectionElements(java.util.Vector)
"
      end

      operation 3904642 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setEscaping(boolean)
"
      end

      operation 3904770 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "indent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setIndent(boolean)
"
      end

      operation 3904898 "setIndentAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "spaces" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setIndentAmount(int)
"
      end

      operation 3905026 "setIsStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isStandalone" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setIsStandalone(boolean)
"
      end

      operation 3905154 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setOutputFormat(java.util.Properties)
"
      end

      operation 3905282 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setOutputStream(java.io.OutputStream)
"
      end

      operation 3905410 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setVersion(java.lang.String)
"
      end

      operation 3905538 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setWriter(java.io.Writer)
"
      end

      operation 3905666 "setTransformer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transformer" type class_ref 618626 // Transformer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setTransformer(javax.xml.transform.Transformer)
"
      end

      operation 3905794 "getTransformer"
	public return_type class_ref 618626 // Transformer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#getTransformer()
"
      end

      operation 3905922 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#flushPending()
"
      end

      operation 3906050 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3906178 "addAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttributes(org.xml.sax.Attributes)
"
      end

      operation 3906306 "addAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttribute(java.lang.String, java.lang.String)
"
      end

      operation 3906434 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#characters(java.lang.String)
"
      end

      operation 3906562 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#endElement(java.lang.String)
"
      end

      operation 3906690 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#startDocument()
"
      end

      operation 3906818 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3906946 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#startElement(java.lang.String)
"
      end

      operation 3907074 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#namespaceAfterStartElement(java.lang.String, java.lang.String)
"
      end

      operation 3907202 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#startPrefixMapping(java.lang.String, java.lang.String, boolean)
"
      end

      operation 3907330 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#entityReference(java.lang.String)
"
      end

      operation 3907458 "getNamespaceMappings"
	public return_type class_ref 617218 // NamespaceMappings
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#getNamespaceMappings()
"
      end

      operation 3907586 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#getPrefix(java.lang.String)
"
      end

      operation 3907714 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "isElement" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#getNamespaceURI(java.lang.String, boolean)
"
      end

      operation 3907842 "getNamespaceURIFromPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#getNamespaceURIFromPrefix(java.lang.String)
"
      end

      operation 3907970 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#setDocumentLocator(org.xml.sax.Locator)
"
      end

      operation 3908098 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endDocument()
"
      end

      operation 3908226 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startPrefixMapping(java.lang.String, java.lang.String)
"
      end

      operation 3908354 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endPrefixMapping(java.lang.String)
"
      end

      operation 3908482 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
"
      end

      operation 3908610 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3908738 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" explicit_type "char"
	multiplicity "[]"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#characters(char[], int, int)
"
      end

      operation 3908866 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" explicit_type "char"
	multiplicity "[]"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)
"
      end

      operation 3908994 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#processingInstruction(java.lang.String, java.lang.String)
"
      end

      operation 3909122 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#skippedEntity(java.lang.String)
"
      end

      operation 3909250 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedLexicalHandler#comment(java.lang.String)
"
      end

      operation 3909378 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#startDTD(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3909506 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endDTD()
"
      end

      operation 3909634 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#startEntity(java.lang.String)
"
      end

      operation 3909762 "endEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endEntity(java.lang.String)
"
      end

      operation 3909890 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#startCDATA()
"
      end

      operation 3910018 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endCDATA()
"
      end

      operation 3910146 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" explicit_type "char"
	multiplicity "[]"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#comment(char[], int, int)
"
      end

      operation 3910274 "getDoctypePublic"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getDoctypePublic()
"
      end

      operation 3910402 "getDoctypeSystem"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getDoctypeSystem()
"
      end

      operation 3910530 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getEncoding()
"
      end

      operation 3910658 "getIndent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getIndent()
"
      end

      operation 3910786 "getIndentAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getIndentAmount()
"
      end

      operation 3910914 "getMediaType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getMediaType()
"
      end

      operation 3911042 "getOmitXMLDeclaration"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getOmitXMLDeclaration()
"
      end

      operation 3911170 "getStandalone"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getStandalone()
"
      end

      operation 3911298 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#getVersion()
"
      end

      operation 3911426 "setDoctype"
	public explicit_return_type "void"
	nparams 2
	  param inout name "system" type class_ref 128130 // String
	  param inout name "pub" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setDoctype(java.lang.String, java.lang.String)
"
      end

      operation 3911554 "setDoctypePublic"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctype" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setDoctypePublic(java.lang.String)
"
      end

      operation 3911682 "setDoctypeSystem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctype" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setDoctypeSystem(java.lang.String)
"
      end

      operation 3911810 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setEncoding(java.lang.String)
"
      end

      operation 3911938 "setMediaType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mediatype" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setMediaType(java.lang.String)
"
      end

      operation 3912066 "setOmitXMLDeclaration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setOmitXMLDeclaration(boolean)
"
      end

      operation 3912194 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "standalone" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setStandalone(java.lang.String)
"
      end

      operation 3912322 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#elementDecl(java.lang.String, java.lang.String)
"
      end

      operation 3912450 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 128130 // String
	  param inout name "arg4" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3912578 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#internalEntityDecl(java.lang.String, java.lang.String)
"
      end

      operation 3912706 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3912834 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#warning(org.xml.sax.SAXParseException)
"
      end

      operation 3912962 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#error(org.xml.sax.SAXParseException)
"
      end

      operation 3913090 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#fatalError(org.xml.sax.SAXParseException)
"
      end

      operation 3913218 "asDOMSerializer"
	public return_type class_ref 618370 // DOMSerializer
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#asDOMSerializer()
"
      end

      operation 3913346 "setNamespaceMappings"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mappings" type class_ref 617218 // NamespaceMappings
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setNamespaceMappings(NamespaceMappings)
"
      end

      operation 3913474 "setSourceLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#setSourceLocator(javax.xml.transform.SourceLocator)
"
      end

      operation 3913602 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addUniqueAttribute(java.lang.String, java.lang.String, int)
"
      end

      operation 3913730 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#characters(org.w3c.dom.Node)
"
      end

      operation 3913858 "addXSLAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addXSLAttribute(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3913986 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3914114 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.DTDHandler#notationDecl(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3914242 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.DTDHandler#unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 3914370 "setDTDEntityExpansion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expand" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setDTDEntityExpansion(boolean)
"
      end
    end

    class 617090 "ExtendedContentHandler"
      abstract visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface describes extensions to the SAX ContentHandler interface.
It is intended to be used by a serializer. The methods on this interface will
implement SAX- like behavior. This allows the gradual collection of
information rather than having it all up front. For example the call
<pre>
startElement(namespaceURI,localName,qName,atts)
</pre>
could be replaced with the calls
<pre>
startElement(namespaceURI,localName,qName)
addAttributes(atts)
</pre>
If there are no attributes the second call can be dropped. If attributes are
to be added one at a time with calls to
<pre>
addAttribute(namespaceURI, localName, qName, type, value)
</pre>
@xsl.usage internal
"
      classrelation 1697410 // <generalisation>
	relation 1697410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1697410 // <generalisation>
	  b parent class_ref 605954 // ContentHandler
      end

      operation 3893122 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add at attribute to the current element
@param uri the namespace URI of the attribute name
@param localName the local name of the attribute (without prefix)
@param rawName the qualified name of the attribute
@param type the attribute type typically character data (CDATA)
@param value the value of the attribute
@param XSLAttribute true if the added attribute is coming from an xsl:attribute element
@throws SAXException
"
      end

      operation 3893250 "addAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add attributes to the current element
@param atts the attributes to add.
@throws SAXException
"
      end

      operation 3893378 "addAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an attribute to the current element. The namespace URI of the
attribute will be calculated from the prefix of qName. The local name
will be derived from qName and the type will be assumed to be \"CDATA\".
@param qName
@param value
"
      end

      operation 3893506 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify of a character event, but passing the data
as a character String rather than the standard character array.
@param chars the character data
@throws SAXException
"
      end

      operation 3893634 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify of a character event, but passing the data
as a DOM Node rather than the standard character array.
@param node a DOM Node containing text.
@throws SAXException
"
      end

      operation 3893762 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify that an element has ended. Unlike the
standard SAX method
<pre>
endElement(namespaceURI,localName,qName)
</pre>
only the last parameter is passed. If needed the serializer can derive
the localName from the qualified name and derive the namespaceURI from
its implementation.
@param elemName the fully qualified element name.
@throws SAXException
"
      end

      operation 3893890 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify that an element is starting.
This method is just like the standard SAX method
<pre>
startElement(uri,localName,qname,atts)
</pre>
but without the attributes.
@param uri the namespace URI of the element
@param localName the local name (without prefix) of the element
@param qName the qualified name of the element

@throws SAXException
"
      end

      operation 3894018 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify of the start of an element
@param qName the fully qualified name of the element
@throws SAXException
"
      end

      operation 3894146 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify that a prefix mapping is to start, but
after an element is started. The SAX method call
<pre>
startPrefixMapping(prefix,uri)
</pre>
is used just before an element starts and applies to the element to come,
not to the current element.  This method applies to the current element.
For example one could make the calls in this order:
<pre>
startElement(\"prfx8:elem9\")
namespaceAfterStartElement(\"http://namespace8\",\"prfx8\")
</pre>

@param uri the namespace URI being declared
@param prefix the prefix that maps to the given namespace
@throws SAXException
"
      end

      operation 3894274 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify that a prefix maping is to start, which can
be for the current element, or for the one to come.
@param prefix the prefix that maps to the given URI
@param uri the namespace URI of the given prefix
@param shouldFlush if true this call is like the SAX
startPrefixMapping(prefix,uri) call and the mapping applies to the
element to come.  If false the mapping applies to the current element.
@return boolean false if the prefix mapping was already in effect (in
other words we are just re-declaring), true if this is a new, never
before seen mapping for the element.
@throws SAXException
"
      end

      operation 3894402 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify of an entity reference.
@param entityName the name of the entity
@throws SAXException
"
      end

      operation 3894530 "getNamespaceMappings"
	public return_type class_ref 617218 // NamespaceMappings
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an object that has the current namespace mappings in
effect.

@return NamespaceMappings an object that has the current namespace
mappings in effect.
"
      end

      operation 3894658 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the prefix that currently maps to the given namespace
URI.
@param uri the namespace URI
@return String the prefix that currently maps to the given URI.
"
      end

      operation 3894786 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "isElement" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets the prefix associated with a current element or
attribute name.
@param name the qualified name of an element, or attribute
@param isElement true if it is an element name, false if it is an
atttribute name
@return String the namespace URI associated with the element or
attribute.
"
      end

      operation 3894914 "getNamespaceURIFromPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the namespace URI currently associated with the
prefix.
@param prefix a prefix of an element or attribute.
@return String the namespace URI currently associated with the prefix.
"
      end

      operation 3895042 "setSourceLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 617346 // SourceLocator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to set the source locator, which might be used to
generated an error message.
@param locator the source locator
"
      end

      attribute 845186 "NO_BAD_CHARS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit constants for addUniqueAttribute().
 The attribute value contains no bad characters. A \"bad\" character is one which
 is greater than 126 or it is one of '<', '>', '&' or '\"'.
"
      end

      attribute 845314 "HTML_ATTREMPTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An HTML empty attribute (e.g. <OPTION selected>).
"
      end

      attribute 845442 "HTML_ATTRURL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An HTML URL attribute
"
      end

      operation 3895170 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a unique attribute to the current element.
The attribute is guaranteed to be unique here. The serializer can write
it out immediately without saving it in a table first. The integer
flag contains information about the attribute, which helps the serializer
to decide whether a particular processing is needed.

@param qName the fully qualified attribute name.
@param value the attribute value
@param flags a bitwise flag
"
      end

      operation 3895298 "addXSLAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "qName" type class_ref 128130 // String
	  param in name "value" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an attribute from an xsl:attribute element.
@param qName the qualified attribute name (prefix:localName)
@param value the attributes value
@param uri the uri that the prefix of the qName is mapped to.
"
      end

      operation 3895426 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add at attribute to the current element, not from an xsl:attribute
element.
@param uri the namespace URI of the attribute name
@param localName the local name of the attribute (without prefix)
@param rawName the qualified name of the attribute
@param type the attribute type typically character data (CDATA)
@param value the value of the attribute
@throws SAXException
"
      end
    end

    class 617218 "NamespaceMappings"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class keeps track of the currently defined namespaces. Conceptually the
prefix/uri/depth triplets are pushed on a stack pushed on a stack. The depth
indicates the nesting depth of the element for which the mapping was made.

<p>For example:
<pre>
<chapter xmlns:p1=\"def\">
  <paragraph xmlns:p2=\"ghi\">
     <sentance xmlns:p3=\"jkl\">
     </sentance>
   </paragraph>
   <paragraph xlmns:p4=\"mno\">
   </paragraph>
</chapter>
</pre>

When the <chapter> element is encounted the prefix \"p1\" associated with uri
\"def\" is pushed on the stack with depth 1.
When the first <paragraph> is encountered \"p2\" and \"ghi\" are pushed with
depth 2.
When the <sentance> is encountered \"p3\" and \"jkl\" are pushed with depth 3.
When </sentance> occurs the popNamespaces(3) will pop \"p3\"/\"jkl\" off the
stack.  Of course popNamespaces(2) would pop anything with depth 2 or
greater.

So prefix/uri pairs are pushed and poped off the stack as elements are
processed.  At any given moment of processing the currently visible prefixes
are on the stack and a prefix can be found given a uri, or a uri can be found
given a prefix.

This class is public only because it is used by Xalan. It is not a public API

@xsl.usage internal
"
      attribute 1214338 "count"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This member is continually incremented when new prefixes need to be
generated. (\"ns0\"  \"ns1\" ...)

"
      end

      classrelation 2524290 // m_namespaces (<unidirectional association>)
	relation 2524290 --->
	  a role_name "m_namespaces" init_value " new HashMap()" private
	    comment "
Each entry (prefix) in this hashmap points to a Stack of URIs
This maps a prefix (String) to a Stack of prefix mappings.
All mappings in that retrieved stack have the same prefix,
though possibly different URI's or depths. Such a stack must have
mappings at deeper depths push later on such a stack.  Mappings pushed
earlier on the stack will have smaller values for MappingRecord.m_declarationDepth.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2524290 // m_namespaces (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 2524418 // m_nodeStack (<unidirectional association>)
	relation 2524418 --->
	  a role_name "m_nodeStack" init_value " new Stack()" private
	    comment "
The top of this stack contains the MapRecord
of the last declared a namespace.
Used to know how many prefix mappings to pop when leaving
the current element depth.
For every prefix mapping the current element depth is
pushed on this stack.
That way all prefixes pushed at the current depth can be
removed at the same time.
Used to ensure prefix/uri map scopes are closed correctly


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2524418 // m_nodeStack (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      classrelation 2524546 // EMPTYSTRING (<unidirectional association>)
	relation 2524546 --->
	  a role_name "EMPTYSTRING" init_value " \"\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2524546 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2524674 // XML_PREFIX (<unidirectional association>)
	relation 2524674 --->
	  a role_name "XML_PREFIX" init_value " \"xml\"" class_relation const_relation private
	    comment " was \"xmlns\""
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2524674 // XML_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5565954 "NamespaceMappings"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor
@see java.lang.Object#Object()
"
      end

      operation 5566082 "initNamespaces"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method initializes the namespace object with appropriate stacks
and predefines a few prefix/uri pairs which always exist.
"
      end

      operation 5566210 "lookupNamespace"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use a namespace prefix to lookup a namespace URI.

@param prefix String the prefix of the namespace
@return the URI corresponding to the prefix
"
      end

      class 789122 "MappingRecord"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2524802 // m_prefix (<unidirectional association>)
	  relation 2524802 --->
	    a role_name "m_prefix" const_relation package
	      comment " the prefix"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2524802 // m_prefix (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2524930 // m_uri (<unidirectional association>)
	  relation 2524930 --->
	    a role_name "m_uri" const_relation package
	      comment " the uri"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2524930 // m_uri (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1214466 "m_declarationDepth"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " the depth of the element where declartion was made
"
	end

	operation 5567490 "MappingRecord"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "prefix" type class_ref 128130 // String
	    param inout name "uri" type class_ref 128130 // String
	    param in name "depth" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 5566338 "getMappingFromPrefix"
	package return_type class_ref 789122 // MappingRecord
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5566466 "lookupPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a namespace uri, and the namespaces mappings for the
current element, return the current prefix for that uri.

@param uri the namespace URI to be search for
@return an existing prefix that maps to the given URI, null if no prefix
maps to the given namespace URI.
"
      end

      operation 5566594 "getMappingFromURI"
	package return_type class_ref 789122 // MappingRecord
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5566722 "popNamespace"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Undeclare the namespace that is currently pointed to by a given prefix
"
      end

      operation 5566850 "pushNamespace"
	package explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param in name "elemDepth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Declare a mapping of a prefix to namespace URI at the given element depth.
@param prefix a String with the prefix for a qualified name
@param uri a String with the uri to which the prefix is to map
@param elemDepth the depth of current declaration
"
      end

      operation 5566978 "popNamespaces"
	package explicit_return_type "void"
	nparams 2
	  param in name "elemDepth" explicit_type "int"
	  param inout name "saxHandler" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop, or undeclare all namespace definitions that are currently
declared at the given element depth, or deepter.
@param elemDepth the element depth for which mappings declared at this
depth or deeper will no longer be valid
@param saxHandler The ContentHandler to notify of any endPrefixMapping()
calls.  This parameter can be null.
"
      end

      operation 5567106 "generateNextPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate a new namespace prefix ( ns0, ns1 ...) not used before
@return String a new namespace prefix ( ns0, ns1, ns2 ...)
"
      end

      operation 5567234 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method makes a clone of this object.

"
      end

      operation 5567362 "reset"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 617474 "ExtendedLexicalHandler"
      abstract visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface has extensions to the standard SAX LexicalHandler interface.
This interface is intended to be used by a serializer.
@xsl.usage internal
"
      classrelation 1697666 // <generalisation>
	relation 1697666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1697666 // <generalisation>
	  b parent class_ref 617602 // LexicalHandler
      end

      operation 3896450 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify of a comment
@param comment the comment, but unlike the SAX comment() method this
method takes a String rather than a character array.
@throws SAXException
"
      end
    end

    class 617730 "XSLOutputAttributes"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface has methods associated with the XSLT xsl:output attribues
specified in the stylesheet that effect the format of the document output.

In an XSLT stylesheet these attributes appear for example as:
<pre>
<xsl:output method=\"xml\" omit-xml-declaration=\"no\" indent=\"yes\"/>
</pre>
The xsl:output attributes covered in this interface are:
<pre>
version
encoding
omit-xml-declarations
standalone
doctype-public
doctype-system
cdata-section-elements
indent
media-type
</pre>

The one attribute not covered in this interface is <code>method</code> as
this value is implicitly chosen by the serializer that is created, for
example ToXMLStream vs. ToHTMLStream or another one.

This interface is only used internally within Xalan.

@xsl.usage internal
"
      operation 3896578 "getDoctypePublic"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previously set value of the value to be used as the public
identifier in the document type declaration (DTD).

@return the public identifier to be used in the DOCTYPE declaration in the
output document.
"
      end

      operation 3896706 "getDoctypeSystem"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previously set value of the value to be used
as the system identifier in the document type declaration (DTD).
@return the system identifier to be used in the DOCTYPE declaration in
the output document.

"
      end

      operation 3896834 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the character encoding to be used in the output document.
"
      end

      operation 3896962 "getIndent"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the output document should be indented to visually
indicate its structure.
"
      end

      operation 3897090 "getIndentAmount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the number of spaces to indent for each indentation level.
"
      end

      operation 3897218 "getMediaType"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the mediatype the media-type or MIME type associated with the
output document.
"
      end

      operation 3897346 "getOmitXMLDeclaration"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the XML declaration is to be omitted from the output
document.
"
      end

      operation 3897474 "getStandalone"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a value of \"yes\" if the <code>standalone</code> delaration is to
be included in the output document.
"
      end

      operation 3897602 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the version of the output format.
"
      end

      operation 3897730 "setCdataSectionElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "URI_and_localNames" type class_ref 141442 // Vector
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output cdata-section-elements
stylesheet property.

This sets the elements whose text elements are to be output as CDATA
sections.
@param URI_and_localNames pairs of namespace URI and local names that
identify elements whose text elements are to be output as CDATA sections.
The namespace of the local element must be the given URI to match. The
qName is not given because the prefix does not matter, only the namespace
URI to which that prefix would map matters, so the prefix itself is not
relevant in specifying which elements have their text to be output as
CDATA sections.
"
      end

      operation 3897858 "setDoctype"
	public explicit_return_type "void"
	nparams 2
	  param inout name "system" type class_ref 128130 // String
	  param inout name "pub" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the value coming from the xsl:output doctype-public and doctype-system stylesheet properties
@param system the system identifier to be used in the DOCTYPE declaration
in the output document.
@param pub the public identifier to be used in the DOCTYPE declaration in
the output document.
"
      end

      operation 3897986 "setDoctypePublic"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctype" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the value coming from the xsl:output doctype-public stylesheet attribute.
@param doctype the public identifier to be used in the DOCTYPE
declaration in the output document.
"
      end

      operation 3898114 "setDoctypeSystem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctype" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the value coming from the xsl:output doctype-system stylesheet attribute.
@param doctype the system identifier to be used in the DOCTYPE
declaration in the output document.
"
      end

      operation 3898242 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the character encoding coming from the xsl:output encoding stylesheet attribute.
@param encoding the character encoding
"
      end

      operation 3898370 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "indent" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output indent stylesheet
attribute.
@param indent true if the output document should be indented to visually
indicate its structure.
"
      end

      operation 3898498 "setMediaType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mediatype" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output media-type stylesheet attribute.
@param mediatype the media-type or MIME type associated with the output
document.
"
      end

      operation 3898626 "setOmitXMLDeclaration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output omit-xml-declaration stylesheet attribute
@param b true if the XML declaration is to be omitted from the output
document.
"
      end

      operation 3898754 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "standalone" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output standalone stylesheet attribute.
@param standalone a value of \"yes\" indicates that the
<code>standalone</code> delaration is to be included in the output
document.
"
      end

      operation 3898882 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "version" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output version attribute.
@param version the version of the output format.
"
      end
    end

    class 618370 "DOMSerializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for a DOM serializer implementation.
<p>
The DOMSerializer is a facet of a serializer and is obtained from the
asDOMSerializer() method of the Serializer interface.
A serializer may or may not support a DOM serializer, if it does not then the
return value from asDOMSerializer() is null.
<p>
Example:
<pre>
Document     doc;
Serializer   ser;
OutputStream os;

ser = ...;
os = ...;

ser.setOutputStream( os );
DOMSerialzier dser = ser.asDOMSerializer();
dser.serialize(doc);
</pre>

@see Serializer

@xsl.usage general

"
      operation 3900162 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes the DOM node. Throws an exception only if an I/O
exception occured while serializing.

This interface is a public API.

@param node the DOM node to serialize
@throws IOException if an I/O exception occured while serializing
"
      end
    end

    class 618498 "Serializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Serializer interface is implemented by a serializer to enable users to:
<ul>
<li>get and set streams or writers
<li>configure the serializer with key/value properties
<li>get an org.xml.sax.ContentHandler or a DOMSerializer to provide input to
</ul>

<p>
Here is an example using the asContentHandler() method:
<pre>
java.util.Properties props =
  OutputPropertiesFactory.getDefaultMethodProperties(Method.TEXT);
Serializer ser = SerializerFactory.getSerializer(props);
java.io.PrintStream ostream = System.out;
ser.setOutputStream(ostream);

// Provide the SAX input events
ContentHandler handler = ser.asContentHandler();
handler.startDocument();
char[] chars = { 'a', 'b', 'c' };
handler.characters(chars, 0, chars.length);
handler.endDocument();

ser.reset(); // get ready to use the serializer for another document
             // of the same output method (TEXT).
</pre>

<p>
As an alternate to supplying a series of SAX events as input through the
ContentHandler interface, the input to serialize may be given as a DOM.
<p>
For example:
<pre>
org.w3c.dom.Document     inputDoc;
com.sun.org.apache.xml.internal.serializer.Serializer   ser;
java.io.Writer owriter;

java.util.Properties props =
  OutputPropertiesFactory.getDefaultMethodProperties(Method.XML);
Serializer ser = SerializerFactory.getSerializer(props);
owriter = ...;  // create a writer to serialize the document to
ser.setWriter( owriter );

inputDoc = ...; // create the DOM document to be serialized
DOMSerializer dser = ser.asDOMSerializer(); // a DOM will be serialized
dser.serialize(inputDoc); // serialize the DOM, sending output to owriter

ser.reset(); // get ready to use the serializer for another document
             // of the same output method.
</pre>

This interface is a public API.

@see Method
@see OutputPropertiesFactory
@see SerializerFactory
@see DOMSerializer
@see ContentHandler

@xsl.usage general
"
      operation 3900290 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output stream to which the document should be
serialized. This method should not be called while the
serializer is in the process of serializing a document.
<p>
The encoding specified in the output {@link Properties} is used, or
if no encoding was specified, the default for the selected
output method.
<p>
Only one of setWriter() or setOutputStream() should be called.

@param output The output stream
"
      end

      operation 3900418 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the output stream where the events will be serialized to.

@return reference to the result stream, or null if only a writer was
set.
"
      end

      operation 3900546 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies a writer to which the document should be serialized.
This method should not be called while the serializer is in
the process of serializing a document.
<p>
The encoding specified for the output {@link Properties} must be
identical to the output format used with the writer.

<p>
Only one of setWriter() or setOutputStream() should be called.

@param writer The output writer stream
"
      end

      operation 3900674 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character stream where the events will be serialized to.

@return Reference to the result Writer, or null.
"
      end

      operation 3900802 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output format for this serializer. It the
serializer has already been associated with an output format,
it will switch to the new format. This method should not be
called while the serializer is in the process of serializing
a document.
<p>
The standard property keys supported are: \"method\", \"version\", \"encoding\",
\"omit-xml-declaration\", \"standalone\", doctype-public\",
\"doctype-system\", \"cdata-section-elements\", \"indent\", \"media-type\".
These property keys and their values are described in the XSLT recommendation,
see {@link <a href=\"http://www.w3.org/TR/1999/REC-xslt-19991116\"> XSLT 1.0 recommendation</a>}
<p>
The non-standard property keys supported are defined in {@link OutputPropertiesFactory}.

<p>
This method can be called multiple times before a document is serialized. Each
time it is called more, or over-riding property values, can be specified. One
property value that can not be changed is that of the \"method\" property key.
<p>
The value of the \"cdata-section-elements\" property key is a whitespace
separated list of elements. If the element is in a namespace then
value is passed in this format: {uri}localName
<p>
If the \"cdata-section-elements\" key is specified on multiple calls
to this method the set of elements specified in the value
is not replaced from one call to the
next, but it is cumulative across the calls.

@param format The output format to use, as a set of key/value pairs.
"
      end

      operation 3900930 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the output format properties for this serializer.

@return The output format key/value pairs in use.
"
      end

      operation 3901058 "asContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link ContentHandler} interface to provide SAX input to.
Through the returned object the document to be serailized,
as a series of SAX events, can be provided to the serialzier.
If the serializer does not support the {@link ContentHandler}
interface, it will return null.
<p>
In principle only one of asDOMSerializer() or asContentHander()
should be called.

@return A {@link ContentHandler} interface into this serializer,
 or null if the serializer is not SAX 2 capable
@throws IOException An I/O exception occured
"
      end

      operation 3901186 "asDOMSerializer"
	public return_type class_ref 618370 // DOMSerializer
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link DOMSerializer} interface into this serializer.
Through the returned object the document to be serialized,
a DOM, can be provided to the serializer.
If the serializer does not support the {@link DOMSerializer}
interface, it should return null.
<p>
In principle only one of asDOMSerializer() or asContentHander()
should be called.

@return A {@link DOMSerializer} interface into this serializer,
 or null if the serializer is not DOM capable
@throws IOException An I/O exception occured
"
      end

      operation 3901314 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method resets the serializer.
If this method returns true, the
serializer may be used for subsequent serialization of new
documents. It is possible to change the output format and
output stream prior to serializing, or to reuse the existing
output format and output stream or writer.

@return True if serializer has been reset and can be reused
"
      end
    end

    class 787714 "AttributesImplSerializer"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class extends org.xml.sax.helpers.AttributesImpl which implements org.
xml.sax.Attributes. But for optimization this class adds a Map for
faster lookup of an index by qName, which is commonly done in the stream
serializer.

@see org.xml.sax.Attributes

@xsl.usage internal
"
      classrelation 2519682 // <generalisation>
	relation 2519682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2519682 // <generalisation>
	  b parent class_ref 593282 // AttributesImpl
      end

      classrelation 2519810 // m_indexFromQName (<unidirectional association>)
	relation 2519810 --->
	  a role_name "m_indexFromQName" init_value " new HashMap<>()" const_relation private
	    comment "
Hash table of qName/index values to quickly lookup the index
of an attributes qName.  qNames are in uppercase in the hash table
to make the search case insensitive.

The keys to the hashtable to find the index are either
\"prefix:localName\"  or \"{uri}localName\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2519810 // m_indexFromQName (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2519938 // m_buff (<unidirectional association>)
	relation 2519938 --->
	  a role_name "m_buff" init_value " new StringBuffer()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2519938 // m_buff (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      attribute 1207554 "MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the number of attributes before switching to the hash table,
and can be tuned, but 12 seems good for now - Brian M.

"
      end

      attribute 1207682 "MAXMinus1"
	class_attribute const_attribute private explicit_type "int"
	init_value " MAX - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "One less than the number of attributes before switching to
the Map.

"
      end

      operation 5556482 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets the index of an attribute given its qName.
@param qname the qualified name of the attribute, e.g. \"prefix1:locName1\"
@return the integer index of the attribute.
@see org.xml.sax.Attributes#getIndex(String)
"
      end

      operation 5556610 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "local" type class_ref 128130 // String
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "val" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method adds the attribute, but also records its qName/index pair in
the hashtable for fast lookup by getIndex(qName).
@param uri the URI of the attribute
@param local the local name of the attribute
@param qname the qualified name of the attribute
@param type the type of the attribute
@param val the value of the attribute

@see org.xml.sax.helpers.AttributesImpl#addAttribute(String, String, String, String, String)
@see #getIndex(String)
"
      end

      operation 5556738 "switchOverToHash"
	private explicit_return_type "void"
	nparams 1
	  param in name "numAtts" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We are switching over to having a hash table for quick look
up of attributes, but up until now we haven't kept any
information in the Map, so we now update the Map.
Future additional attributes will update the Map as
they are added.
@param numAtts
"
      end

      operation 5556866 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method clears the accumulated attributes.

@see org.xml.sax.helpers.AttributesImpl#clear()
"
      end

      operation 5556994 "setAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method sets the attributes, previous attributes are cleared,
it also keeps the hashtable up to date for quick lookup via
getIndex(qName).
@param atts the attributes to copy into these attributes.
@see org.xml.sax.helpers.AttributesImpl#setAttributes(Attributes)
@see #getIndex(String)
"
      end

      operation 5557122 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets the index of an attribute given its uri and locanName.
@param uri the URI of the attribute name.
@param localName the local namer (after the ':' ) of the attribute name.
@return the integer index of the attribute.
@see org.xml.sax.Attributes#getIndex(String)
"
      end
    end

    class 787842 "CharInfo"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides services that tell if a character should have
special treatement, such as entity reference substitution or normalization
of a newline character.  It also provides character to entity reference
lookup.

DEVELOPERS: See Known Issue in the constructor.

@xsl.usage internal
"
      classrelation 2520066 // m_charToString (<unidirectional association>)
	relation 2520066 --->
	  a role_name "m_charToString" init_value " new HashMap()" private
	    comment " Given a character, lookup a String to output (e.g. a decorated entity reference). 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520066 // m_charToString (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 2520194 // HTML_ENTITIES_RESOURCE (<unidirectional association>)
	relation 2520194 --->
	  a role_name "HTML_ENTITIES_RESOURCE" init_value "
                \"com.sun.org.apache.xml.internal.serializer.HTMLEntities\"" class_relation const_relation public
	    comment "
The name of the HTML entities file.
If specified, the file will be resource loaded with the default class loader.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520194 // HTML_ENTITIES_RESOURCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2520322 // XML_ENTITIES_RESOURCE (<unidirectional association>)
	relation 2520322 --->
	  a role_name "XML_ENTITIES_RESOURCE" init_value "
                \"com.sun.org.apache.xml.internal.serializer.XMLEntities\"" class_relation const_relation public
	    comment "
The name of the XML entities file.
If specified, the file will be resource loaded with the default class loader.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520322 // XML_ENTITIES_RESOURCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1207810 "S_HORIZONAL_TAB"
	class_attribute const_attribute public explicit_type "char"
	init_value " 0x09"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The horizontal tab character, which the parser should always normalize. 
"
      end

      attribute 1207938 "S_LINEFEED"
	class_attribute const_attribute public explicit_type "char"
	init_value " 0x0A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The linefeed character, which the parser should always normalize. 
"
      end

      attribute 1208066 "S_CARRIAGERETURN"
	class_attribute const_attribute public explicit_type "char"
	init_value " 0x0D"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The carriage return character, which the parser should always normalize. 
"
      end

      attribute 1208194 "onlyQuotAmpLtGt"
	const_attribute package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This flag is an optimization for HTML entities. It false if entities
other than quot (34), amp (38), lt (60) and gt (62) are defined
in the range 0 to 127.
@xsl.usage internal

"
      end

      attribute 1208322 "ASCII_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 128"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Copy the first 0,1 ... ASCII_MAX values into an array 
"
      end

      attribute 1208450 "isSpecialAttrASCII"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[ASCII_MAX]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of values is faster access than a set of bits
to quickly check ASCII characters in attribute values.

"
      end

      attribute 1208578 "isSpecialTextASCII"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[ASCII_MAX]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of values is faster access than a set of bits
to quickly check ASCII characters in text nodes.

"
      end

      attribute 1208706 "isCleanTextASCII"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[ASCII_MAX]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1208834 "array_of_bits"
	private explicit_type "int"
	multiplicity "[]"
	init_value " createEmptySetOfIntegers(65535)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An array of bits to record if the character is in the set.
Although information in this array is complete, the
isSpecialAttrASCII array is used first because access to its values
is common and faster.

"
      end

      attribute 1208962 "SHIFT_PER_WORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 5 for 32 bit words,  6 for 64 bit words ...

This constant is used to shift an integer to quickly
calculate which element its bit is stored in.
5 for 32 bit words (int) ,  6 for 64 bit words (long)

"
      end

      attribute 1209090 "LOW_ORDER_BITMASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x1f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A mask to get the low order bits which are used to
calculate the value of the bit within a given word,
that will represent the presence of the integer in the
set.

0x1F for 32 bit words (int),
or 0x3F for 64 bit words (long)

"
      end

      attribute 1209218 "firstWordNotUsed"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is used for optimizing the lookup of bits representing
the integers in the set. It is the index of the first element
in the array array_of_bits[] that is not used.

"
      end

      operation 5557250 "CharInfo"
	private explicit_return_type ""
	nparams 2
	  param inout name "entitiesResource" type class_ref 128130 // String
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that reads in a resource file that describes the mapping of
characters to entity references.
This constructor is private, just to force the use
of the getCharInfo(entitiesResource) factory

Resource files must be encoded in UTF-8 and can either be properties
files with a .properties extension assumed.  Alternatively, they can
have the following form, with no particular extension assumed:

<pre>
# First char # is a comment
Entity numericValue
quot 34
amp 38
</pre>

@param entitiesResource Name of properties or resource file that should
be loaded, which describes that mapping of characters to entity
references.
"
      end

      operation 5557378 "CharInfo"
	private explicit_return_type ""
	nparams 3
	  param inout name "entitiesResource" type class_ref 128130 // String
	  param inout name "method" type class_ref 128130 // String
	  param inout name "internal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5557506 "defineEntity"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "value" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines a new character reference. The reference's name and value are
supplied. Nothing happens if the character reference is already defined.
<p>Unlike internal entities, character references are a string to single
character mapping. They are used to map non-ASCII characters both on
parsing and printing, primarily for HTML documents. '&lt;amp;' is an
example of a character reference.</p>

@param name The entity's name
@param value The entity's value
"
      end

      operation 5557634 "getOutputStringForChar"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "value" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Map a character to a String. For example given
the character '>' this method would return the fully decorated
entity name \"&lt;\".
Strings for entity references are loaded from a properties file,
but additional mappings defined through calls to defineChar2String()
are possible. Such entity reference mappings could be over-ridden.

This is reusing a stored key object, in an effort to avoid
heap activity. Unfortunately, that introduces a threading risk.
Simplest fix for now is to make it a synchronized method, or to give
up the reuse; I see very little performance difference between them.
Long-term solution would be to replace the hashtable with a sparse array
keyed directly from the character's integer value; see DTM's
string pool for a related solution.

@param value The character that should be resolved to
a String, e.g. resolve '>' to  \"&lt;\".

@return The String that the character is mapped to, or null if not found.
@xsl.usage internal
"
      end

      operation 5557762 "isSpecialAttrChar"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the character argument that is from
an attribute value should have special treatment.

@param value the value of a character that is in an attribute value
@return true if the character should have any special treatment,
such as when writing out attribute values,
or entity references.
@xsl.usage internal
"
      end

      operation 5557890 "isSpecialTextChar"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the character argument that is from a
text node should have special treatment.

@param value the value of a character that is in a text node
@return true if the character should have any special treatment,
such as when writing out attribute values,
or entity references.
@xsl.usage internal
"
      end

      operation 5558018 "isTextASCIIClean"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to determine if an ASCII character in
a text node (not an attribute value) is \"clean\".
@param value the character to check (0 to 127).
@return true if the character can go to the writer as-is
@xsl.usage internal
"
      end

      operation 5558146 "getCharInfoInternal"
	class_operation package return_type class_ref 787842 // CharInfo
	nparams 2
	  param inout name "entitiesFileName" type class_ref 128130 // String
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an internal resource file that describes the mapping of
characters to entity references; Construct a CharInfo object.

@param entitiesFileName Name of entities resource file that should
be loaded, which describes the mapping of characters to entity references.
@param method the output method type, which should be one of \"xml\", \"html\", and \"text\".
@return an instance of CharInfo

@xsl.usage internal
"
      end

      operation 5558274 "getCharInfo"
	class_operation package return_type class_ref 787842 // CharInfo
	nparams 2
	  param inout name "entitiesFileName" type class_ref 128130 // String
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CharInfo object using the following process to try reading
the entitiesFileName parameter:

  1) attempt to load it as a ResourceBundle
  2) try using the class loader to find the specified file
  3) try opening it as an URI

In case of 2 and 3, the resource file must be encoded in UTF-8 and have the
following format:
<pre>
# First char # is a comment
Entity numericValue
quot 34
amp 38
</pre>

@param entitiesFileName Name of entities resource file that should
be loaded, which describes the mapping of characters to entity references.
@param method the output method type, which should be one of \"xml\", \"html\", and \"text\".
@return an instance of CharInfo
"
      end

      classrelation 2520450 // m_getCharInfoCache (<unidirectional association>)
	relation 2520450 --->
	  a role_name "m_getCharInfoCache" init_value " new HashMap()" class_relation private
	    comment " Table of user-specified char infos. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520450 // m_getCharInfoCache (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      operation 5558402 "arrayIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array element holding the bit value for the
given integer
@param i the integer that might be in the set of integers

"
      end

      operation 5558530 "bit"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For a given integer in the set it returns the single bit
value used within a given word that represents whether
the integer is in the set or not.
"
      end

      operation 5558658 "createEmptySetOfIntegers"
	private explicit_return_type "int"
	nparams 1
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new empty set of integers (characters)
@param max the maximum integer to be in the set.
"
      end

      operation 5558786 "set"
	private explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the integer (character) to the set of integers.
@param i the integer to add to the set, valid values are
0, 1, 2 ... up to the maximum that was specified at
the creation of the set.
"
      end

      operation 5558914 "get"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the integer (character)is in the set of integers.

This implementation uses an array of integers with 32 bits per
integer.  If a bit is set to 1 the corresponding integer is
in the set of integers.

@param i an integer that is tested to see if it is the
set of integers, or not.
"
      end

      operation 5559042 "extraEntity"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "entityValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " record if there are any entities other than
 quot, amp, lt, gt  (probably user defined)

@return true if the entity
@param code The value of the character that has an entity defined
for it.
"
      end

      operation 5559170 "setASCIIdirty"
	private explicit_return_type "void"
	nparams 1
	  param in name "j" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the character is a printable ASCII character then
mark it as not clean and needing replacement with
a String on output.
@param ch
"
      end

      operation 5559298 "setASCIIclean"
	private explicit_return_type "void"
	nparams 1
	  param in name "j" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the character is a printable ASCII character then
mark it as and not needing replacement with
a String on output.
@param ch
"
      end

      operation 5559426 "defineChar2StringMapping"
	private explicit_return_type "void"
	nparams 2
	  param inout name "outputString" type class_ref 128130 // String
	  param in name "inputChar" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 787970 "CharKey"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2520578 // <generalisation>
	  relation 2520578 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2520578 // <generalisation>
	    b parent class_ref 129538 // Object
	end

	attribute 1209346 "m_char"
	  private explicit_type "char"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " String value          
"
	end

	operation 5559554 "CharKey"
	  public explicit_return_type ""
	  nparams 1
	    param in name "key" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor CharKey

@param key char value of this object.
"
	end

	operation 5559682 "CharKey"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Default constructor for a CharKey.

@param key char value of this object.
"
	end

	operation 5559810 "setChar"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the hash value of the character.

@return hash value of the character.
"
	end

	operation 5559938 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the hash value of the character.

@return hash value of the character.
"
	end

	operation 5560066 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Override of equals() for this object

@param obj to compare to

@return True if this object equals this string value
"
	end
      end
    end

    class 788098 "ElemContext"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is a stack frame that consists of
information about the element currently being processed
by a serializer. Consider this example:
<pre>
  <A>
    <B1>
    </B1>
    <B2>
    </B2>
  <A>
</pre>

A stack frame will be pushed for \"A\" at depth 1,
then another one for \"B1\" at depth 2.
Then \"B1\" stackframe is popped.  When the stack frame for \"B2\" is
pushed, this implementation re-uses the old stack fram object used
by \"B1\" to be efficient at not creating too many of these object.

This is by no means a public class, and neither are its fields or methods,
they are all helper fields for a serializer.

The purpose of this class is to be more consistent with pushing information
when a new element is being serialized and more quickly restoring the old
information about the parent element with a simple pop() when the
child element is done.  Previously there was some redundant and error-prone
calculations going on to retore information.

@xsl.usage internal
"
      attribute 1209474 "m_currentElemDepth"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fields that form the context of the element

The nesting depth of the element inside other elements.

"
      end

      classrelation 2520706 // m_elementDesc (<unidirectional association>)
	relation 2520706 --->
	  a role_name "m_elementDesc" init_value " null" package
	    comment " HTML field, the element description of the HTML element 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520706 // m_elementDesc (<unidirectional association>)
	  b parent class_ref 602754 // ElemDesc
      end

      classrelation 2520834 // m_elementLocalName (<unidirectional association>)
	relation 2520834 --->
	  a role_name "m_elementLocalName" init_value " null" package
	    comment "
The local name of the element.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520834 // m_elementLocalName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2520962 // m_elementName (<unidirectional association>)
	relation 2520962 --->
	  a role_name "m_elementName" init_value " null" package
	    comment "
The fully qualified name of the element (with prefix, if any).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2520962 // m_elementName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2521090 // m_elementURI (<unidirectional association>)
	relation 2521090 --->
	  a role_name "m_elementURI" init_value " null" package
	    comment "
The URI of the element.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521090 // m_elementURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1209602 "m_isCdataSection"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If the element is in the cdata-section-names list
then the value is true. If it is true the text children of the element
should be output in CDATA section blocks.

"
      end

      attribute 1209730 "m_isRaw"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the current element has output escaping disabled.
This is true for SCRIPT and STYLE elements.

"
      end

      classrelation 2521218 // m_next (<unidirectional association>)
	relation 2521218 --->
	  a role_name "m_next" private
	    comment " The next element \"stack frame\". This value will only be
set once as deeper stack frames are not deleted when popped off,
but are rather re-used when a push is required.

This makes for very fast pushing and popping of stack frames
because very few stack frame objects are ever created, they are
mostly re-used.  This re-use saves object creation but it also means
that connections between the frames via m_next and m_prev
never changes either. Just the contents of the frames change
as they are re-used. Only the reference to the current stack frame, which
is held by the serializer is changed via a quick pop() or push().

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521218 // m_next (<unidirectional association>)
	  b parent class_ref 788098 // ElemContext
      end

      classrelation 2521346 // m_prev (<unidirectional association>)
	relation 2521346 --->
	  a role_name "m_prev" const_relation package
	    comment " The previous element \"stack frame\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521346 // m_prev (<unidirectional association>)
	  b parent class_ref 788098 // ElemContext
      end

      attribute 1209858 "m_startTagOpen"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set to true when a start tag is started, or open, but not all the
attributes or namespace information is yet collected.

"
      end

      operation 5560194 "ElemContext"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor to create the root of the element contexts.

"
      end

      operation 5560322 "ElemContext"
	private explicit_return_type ""
	nparams 1
	  param in name "previous" type class_ref 788098 // ElemContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor to create the \"stack frame\" for a given element depth.

This implementation will re-use the context at each depth. If
a documents deepest element depth is N then there will be (N+1)
such objects created, no more than that.

@param previous The \"stack frame\" corresponding to the new
elements parent element.
"
      end

      operation 5560450 "pop"
	package return_type class_ref 788098 // ElemContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current \"stack frame\".
@return Returns the parent \"stack frame\" of the one popped.
"
      end

      operation 5560578 "push"
	package return_type class_ref 788098 // ElemContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method pushes an element \"stack frame\"
but with no initialization of values in that frame.
This method is used for optimization purposes, like when pushing
a stack frame for an HTML \"IMG\" tag which has no children and
the stack frame will almost immediately be popped.
"
      end

      operation 5560706 "push"
	package return_type class_ref 788098 // ElemContext
	nparams 3
	  param in name "uri" type class_ref 128130 // String
	  param in name "localName" type class_ref 128130 // String
	  param in name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push an element context on the stack. This context keeps track of
information gathered about the element.
@param uri The URI for the namespace for the element name,
can be null if it is not yet known.
@param localName The local name of the element (no prefix),
can be null.
@param qName The qualified name (with prefix, if any)
of the element, this parameter is required.
"
      end
    end

    class 788354 "EncodingInfo"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Holds information about a given encoding, which is the Java name for the
encoding, the equivalent ISO name.
<p>
An object of this type has two useful methods
<pre>
isInEncoding(char ch);
</pre>
which can be called if the character is not the high one in
a surrogate pair and:
<pre>
isInEncoding(char high, char low);
</pre>
which can be called if the two characters from a high/low surrogate pair.
<p>
An EncodingInfo object is a node in a binary search tree. Such a node
will answer if a character is in the encoding, and do so for a given
range of unicode values (<code>m_first</code> to
<code>m_last</code>). It will handle a certain range of values
explicitly (<code>m_explFirst</code> to <code>m_explLast</code>).
If the unicode point is before that explicit range, that is it
is in the range <code>m_first <= value < m_explFirst</code>, then it will delegate to another EncodingInfo object for The root
of such a tree, m_before.  Likewise for values in the range
<code>m_explLast < value <= m_last</code>, but delgating to <code>m_after</code>
<p>
Actually figuring out if a code point is in the encoding is expensive. So the
purpose of this tree is to cache such determinations, and not to build the
entire tree of information at the start, but only build up as much of the
tree as is used during the transformation.
<p>
This Class is not a public API, and should only be used internally within
the serializer.

@xsl.usage internal
"
      classrelation 2521602 // <generalisation>
	relation 2521602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2521602 // <generalisation>
	  b parent class_ref 129538 // Object
      end

      classrelation 2521730 // name (<unidirectional association>)
	relation 2521730 --->
	  a role_name "name" const_relation package
	    comment "
The ISO encoding name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521730 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2521858 // javaName (<unidirectional association>)
	relation 2521858 --->
	  a role_name "javaName" const_relation package
	    comment "
The name used by the Java convertor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521858 // javaName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 788482 "InEncoding"
	visibility private stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 5561858 "isInEncoding"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "char"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the char is in the encoding
"
	end

	operation 5561986 "isInEncoding"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "high" explicit_type "char"
	    param in name "low" explicit_type "char"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the high/low surrogate pair forms
a character that is in the encoding.
"
	end
      end

      classrelation 2521986 // m_encoding (<unidirectional association>)
	relation 2521986 --->
	  a role_name "m_encoding" private
	    comment "
A helper object that we can ask if a
single char, or a surrogate UTF-16 pair
of chars that form a single character,
is in this encoding.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2521986 // m_encoding (<unidirectional association>)
	  b parent class_ref 788482 // InEncoding
      end

      operation 5561474 "isInEncoding"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is not a public API. It returns true if the
char in question is in the encoding.
@param ch the char in question.
@xsl.usage internal
"
      end

      operation 5561602 "isInEncoding"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "high" explicit_type "char"
	  param in name "low" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is not a public API. It returns true if the
character formed by the high/low pair is in the encoding.
@param high a char that the a high char of a high/low surrogate pair.
@param low a char that is the low char of a high/low surrogate pair.
@xsl.usage internal
"
      end

      operation 5561730 "EncodingInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "javaName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an EncodingInfo object based on the ISO name and Java name.
If both parameters are null any character will be considered to
be in the encoding. This is useful for when the serializer is in
temporary output state, and has no assciated encoding.

@param name reference to the ISO name.
@param javaName reference to the Java encoding name.
"
      end

      class 788610 "EncodingImpl"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2522114 // <realization>
	  relation 2522114 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2522114 // <realization>
	    b parent class_ref 788482 // InEncoding
	end

	operation 5562114 "isInEncoding"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "ch1" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5562242 "isInEncoding"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "high" explicit_type "char"
	    param in name "low" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 2522242 // m_encoding (<unidirectional association>)
	  relation 2522242 --->
	    a role_name "m_encoding" const_relation private
	      comment "
The encoding.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2522242 // m_encoding (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1213314 "m_first"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "m_first through m_last is the range of unicode
values that this object will return an answer on.
It may delegate to a similar object with a different
range

"
	end

	attribute 1213442 "m_explFirst"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "m_explFirst through m_explLast is the range of unicode
value that this object handles explicitly and does not
delegate to a similar object.

"
	end

	attribute 1213570 "m_explLast"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1213698 "m_last"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2522370 // m_before (<unidirectional association>)
	  relation 2522370 --->
	    a role_name "m_before" private
	      comment "
The object, of the same type as this one,
that handles unicode values in a range before
the range explictly handled by this object, and
to which this object may delegate.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2522370 // m_before (<unidirectional association>)
	    b parent class_ref 788482 // InEncoding
	end

	classrelation 2522498 // m_after (<unidirectional association>)
	  relation 2522498 --->
	    a role_name "m_after" private
	      comment "
The object, of the same type as this one,
that handles unicode values in a range after
the range explictly handled by this object, and
to which this object may delegate.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2522498 // m_after (<unidirectional association>)
	    b parent class_ref 788482 // InEncoding
	end

	attribute 1213826 "RANGE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 128"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The number of unicode values explicitly handled
by a single EncodingInfo object. This value is
tuneable, but is set to 128 because that covers the
entire low range of ASCII type chars within a single
object.

"
	end

	attribute 1213954 "m_alreadyKnown"
	  const_attribute private explicit_type "boolean"
	  multiplicity "[]"
	  init_value " new boolean[RANGE]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A flag to record if we already know the answer
for the given unicode value.

"
	end

	attribute 1214082 "m_isInEncoding"
	  const_attribute private explicit_type "boolean"
	  multiplicity "[]"
	  init_value " new boolean[RANGE]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A table holding the answer on whether the given unicode
value is in the encoding.

"
	end

	operation 5562370 "EncodingImpl"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5562498 "EncodingImpl"
	  private explicit_return_type ""
	  nparams 4
	    param inout name "encoding" type class_ref 128130 // String
	    param in name "first" explicit_type "int"
	    param in name "last" explicit_type "int"
	    param in name "codePoint" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 5562626 "inEncoding"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "ch" explicit_type "char"
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is heart of the code that determines if a given character
is in the given encoding. This method is probably expensive,
and the answer should be cached.
<p>
This method is not a public API,
and should only be used internally within the serializer.
@param ch the char in question, that is not a high char of
a high/low surrogate pair.
@param encoding the Java name of the enocding.

@xsl.usage internal

"
      end

      operation 5562754 "inEncoding"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param in name "high" explicit_type "char"
	  param in name "low" explicit_type "char"
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is heart of the code that determines if a given high/low
surrogate pair forms a character that is in the given encoding.
This method is probably expensive, and the answer should be cached.
<p>
This method is not a public API,
and should only be used internally within the serializer.
@param high the high char of
a high/low surrogate pair.
@param low the low char of a high/low surrogate pair.
@param encoding the Java name of the encoding.

@xsl.usage internal

"
      end

      operation 5562882 "inEncoding"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "ch" explicit_type "char"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is the core of determining if character
is in the encoding. The method is not foolproof, because
s.getBytes(encoding) has specified behavior only if the
characters are in the specified encoding. However this
method tries it's best.
@param ch the char that was converted using getBytes, or
the first char of a high/low pair that was converted.
@param data the bytes written out by the call to s.getBytes(encoding);
@return true if the character is in the encoding.
"
      end
    end

    class 788738 "Encodings"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides information about encodings. Depends on the Java runtime
to provides writers for the different encodings, but can be used
to override encoding names and provide the last printable character
for each encoding.

@version $Revision: 1.11 $ $Date: 2010-11-01 04:34:44 $
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      classrelation 2522626 // <generalisation>
	relation 2522626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2522626 // <generalisation>
	  b parent class_ref 129538 // Object
      end

      attribute 1214210 "m_defaultLastPrintable"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x7F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The last printable character for unknown encodings.

"
      end

      classrelation 2522754 // ENCODINGS_FILE (<unidirectional association>)
	relation 2522754 --->
	  a role_name "ENCODINGS_FILE" init_value " \"com/sun/org/apache/xml/internal/serializer/Encodings.properties\"" class_relation const_relation private
	    comment "
Standard filename for properties file with encodings data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2522754 // ENCODINGS_FILE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2522882 // ENCODINGS_PROP (<unidirectional association>)
	relation 2522882 --->
	  a role_name "ENCODINGS_PROP" init_value " \"com.sun.org.apache.xalan.internal.serialize.encodings\"" class_relation const_relation private
	    comment "
Standard filename for properties file with encodings data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2522882 // ENCODINGS_PROP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5563010 "getWriter"
	class_operation package return_type class_ref 428034 // Writer
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "encoding" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a writer for the specified encoding based on
an output stream.

@param output The output stream
@param encoding The encoding
@return A suitable writer
@throws UnsupportedEncodingException There is no convertor
 to support this encoding
"
      end

      operation 5563138 "getLastPrintable"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last printable character for an unspecified
encoding.

@return the default size
"
      end

      operation 5563266 "getEncodingInfo"
	class_operation package return_type class_ref 788354 // EncodingInfo
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the EncodingInfo object for the specified
encoding.
<p>
This is not a public API.

@param encoding The encoding
@return The object that is used to determine if
characters are in the given encoding.
@xsl.usage internal
"
      end

      operation 5563394 "toUpperCaseFast"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A fast and cheap way to uppercase a String that is
only made of printable ASCII characters.
<p>
This is not a public API.
@param s a String of ASCII characters
@return an uppercased version of the input String,
possibly the same String.
@xsl.usage internal
"
      end

      classrelation 2523010 // DEFAULT_MIME_ENCODING (<unidirectional association>)
	relation 2523010 --->
	  a role_name "DEFAULT_MIME_ENCODING" init_value " \"UTF-8\"" class_relation const_relation package
	    comment " The default encoding, ISO style, ISO style.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2523010 // DEFAULT_MIME_ENCODING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5563522 "getMimeEncoding"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the proper mime encoding.  From the XSLT recommendation: \"The encoding
attribute specifies the preferred encoding to use for outputting the result
tree. XSLT processors are required to respect values of UTF-8 and UTF-16.
For other values, if the XSLT processor does not support the specified
encoding it may signal an error; if it does not signal an error it should
use UTF-8 or UTF-16 instead. The XSLT processor must not use an encoding
whose name does not match the EncName production of the XML Recommendation
[XML]. If no encoding attribute is specified, then the XSLT processor should
use either UTF-8 or UTF-16.\"

@param encoding Reference to java-style encoding string, which may be null,
in which case a default will be found.

@return The ISO-style encoding string, or null if failure.
"
      end

      operation 5563650 "convertJava2MimeEncoding"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try the best we can to convert a Java encoding to a XML-style encoding.

@param encoding non-null reference to encoding string, java style.

@return ISO-style encoding string.
"
      end

      operation 5563778 "convertMime2JavaEncoding"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try the best we can to convert a Java encoding to a XML-style encoding.

@param encoding non-null reference to encoding string, java style.

@return ISO-style encoding string.
"
      end

      class 788866 "EncodingInfos"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2523138 // _encodingTableKeyJava (<unidirectional association>)
	  relation 2523138 --->
	    a role_name "_encodingTableKeyJava" init_value " new HashMap<>()" const_relation private
	      comment " These maps are final and not modified after initialization.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, EncodingInfo> ${name}${value};
"
	      classrelation_ref 2523138 // _encodingTableKeyJava (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 2523266 // _encodingTableKeyMime (<unidirectional association>)
	  relation 2523266 --->
	    a role_name "_encodingTableKeyMime" init_value " new HashMap<>()" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, EncodingInfo> ${name}${value};
"
	      classrelation_ref 2523266 // _encodingTableKeyMime (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 2523394 // _encodingDynamicTable (<unidirectional association>)
	  relation 2523394 --->
	    a role_name "_encodingDynamicTable" init_value "
                Collections.synchronizedMap(new HashMap<String, EncodingInfo>())" const_relation private
	      comment " This map will be added to after initialization: make sure it's
 thread-safe. This map should not be used frequently - only in cases
 where the mapping requested was not declared in the Encodings.properties
 file.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, EncodingInfo> ${name}${value};
"
	      classrelation_ref 2523394 // _encodingDynamicTable (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	operation 5563906 "EncodingInfos"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5564034 "openEncodingsFileStream"
	  private return_type class_ref 146434 // InputStream
	  nparams 0
	  nexceptions 2
	    exception class_ref 253442 // MalformedURLException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Opens the file/resource containing java charset name -> preferred mime
 name mapping and returns it as an InputStream."
	end

	operation 5564162 "loadProperties"
	  private return_type class_ref 240130 // Properties
	  nparams 0
	  nexceptions 2
	    exception class_ref 253442 // MalformedURLException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Loads the Properties resource containing the mapping:
    java charset name -> preferred mime name
 and returns it."
	end

	operation 5564290 "parseMimeTypes"
	  private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "val" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Parses the mime list associated to a java charset name.
 The first mime name in the list is supposed to be the preferred
 mime name."
	end

	operation 5564418 "findCharsetNameFor"
	  private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This method here attempts to find the canonical charset name for the
 the given name - which is supposed to be either a java name or a mime
 name.
 For that, it attempts to load the charset using the given name, and
 then returns the charset's canonical name.
 If the charset could not be loaded from the given name,
 the method returns null."
	end

	operation 5564546 "findCharsetNameFor"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param inout name "javaName" type class_ref 128130 // String
	    param inout name "mimes" type class_ref 128130 // String
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This method here attempts to find the canonical charset name for the
 the set javaName+mimeNames - which are supposed to all refer to the
 same charset.
 For that it attempts to load the charset using the javaName, and if
 not found, attempts again using each of the mime names in turn.
 If the charset could be loaded from the javaName, then the javaName
 itself is returned as charset name. Otherwise, each of the mime names
 is tried in turn, until a charset can be loaded from one of the names,
 and the loaded charset's canonical name is returned.
 If no charset can be loaded from either the javaName or one of the
 mime names, then null is returned.

 Note that the returned name is the 'java' name that will be used in
 instances of EncodingInfo.
 This is important because EncodingInfo uses that 'java name' later on
 in calls to String.getBytes(javaName).
 As it happens, sometimes only one element of the set mime names/javaName
 is known by Charset: sometimes only one of the mime names is known,
 sometime only the javaName is known, sometimes all are known.

 By using this method here, we fix the problem where one of the mime
 names is known but the javaName is unknown, by associating the charset
 loaded from one of the mime names with the unrecognized javaName.

 When none of the mime names or javaName are known - there's not much we can
 do... It can mean that this encoding is not supported for this
 OS. If such a charset is ever use it will result in having all characters
 escaped.
"
	end

	operation 5564674 "loadEncodingInfo"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Loads a list of all the supported encodings.

System property \"encodings\" formatted using URL syntax may define an
external encodings list. Thanks to Sergey Ushakov for the code
contribution!
"
	end

	operation 5564802 "findEncoding"
	  package return_type class_ref 788354 // EncodingInfo
	  nparams 1
	    param inout name "normalizedEncoding" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5564930 "getEncodingFromMimeKey"
	  package return_type class_ref 788354 // EncodingInfo
	  nparams 1
	    param inout name "normalizedMimeName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5565058 "getEncodingFromJavaKey"
	  package return_type class_ref 788354 // EncodingInfo
	  nparams 1
	    param inout name "normalizedJavaName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5565186 "putEncoding"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 128130 // String
	    param inout name "info" type class_ref 788354 // EncodingInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 5565314 "isHighUTF16Surrogate"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the character is the high member of a surrogate pair.
<p>
This is not a public API.
@param ch the character to test
@xsl.usage internal
"
      end

      operation 5565442 "isLowUTF16Surrogate"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the character is the low member of a surrogate pair.
<p>
This is not a public API.
@param ch the character to test
@xsl.usage internal
"
      end

      operation 5565570 "toCodePoint"
	class_operation package explicit_return_type "int"
	nparams 2
	  param in name "highSurrogate" explicit_type "char"
	  param in name "lowSurrogate" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the unicode code point represented by the high/low surrogate pair.
<p>
This is not a public API.
@param highSurrogate the high char of the high/low pair
@param lowSurrogate the low char of the high/low pair
@xsl.usage internal
"
      end

      operation 5565698 "toCodePoint"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the unicode code point represented by the char.
A bit of a dummy method, since all it does is return the char,
but as an int value.
<p>
This is not a public API.
@param ch the char.
@xsl.usage internal
"
      end

      classrelation 2523522 // _encodingInfos (<unidirectional association>)
	relation 2523522 --->
	  a role_name "_encodingInfos" init_value " new EncodingInfos()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2523522 // _encodingInfos (<unidirectional association>)
	  b parent class_ref 788866 // EncodingInfos
      end
    end

    class 788994 "Method"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines the constants which are the names of the four default
output methods.
<p>
Three default output methods are defined: XML, HTML, and TEXT.
These constants can be used as an argument to the
OutputPropertiesFactory.getDefaultMethodProperties() method to get
the properties to create a serializer.

This class is a public API.

@see OutputPropertiesFactory
@see Serializer

@xsl.usage general
"
      operation 5565826 "Method"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A private constructor to prevent the creation of such a class.
"
      end

      classrelation 2523650 // XML (<unidirectional association>)
	relation 2523650 --->
	  a role_name "XML" init_value " \"xml\"" class_relation const_relation public
	    comment "
The output method type for XML documents: <tt>xml</tt>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2523650 // XML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2523778 // HTML (<unidirectional association>)
	relation 2523778 --->
	  a role_name "HTML" init_value " \"html\"" class_relation const_relation public
	    comment "
The output method type for HTML documents: <tt>html</tt>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2523778 // HTML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2523906 // XHTML (<unidirectional association>)
	relation 2523906 --->
	  a role_name "XHTML" init_value " \"xhtml\"" class_relation const_relation public
	    comment "
The output method for XHTML documents,
this method type is not currently supported: <tt>xhtml</tt>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2523906 // XHTML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2524034 // TEXT (<unidirectional association>)
	relation 2524034 --->
	  a role_name "TEXT" init_value " \"text\"" class_relation const_relation public
	    comment "
The output method type for text documents: <tt>text</tt>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2524034 // TEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2524162 // UNKNOWN (<unidirectional association>)
	relation 2524162 --->
	  a role_name "UNKNOWN" init_value " \"\"" class_relation const_relation public
	    comment "
The \"internal\" method, just used when no method is
specified in the style sheet, and a serializer of this type wraps either an
XML or HTML type (depending on the first tag in the output being html or
not)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2524162 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 789250 "OutputPropertiesFactory"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is a factory to generate a set of default properties
of key/value pairs that are used to create a serializer through the
factory {@link SerializerFactory SerilizerFactory}.
The properties generated by this factory
may be modified to non-default values before the SerializerFactory is used to
create a Serializer.
<p>
The given output types supported are \"xml\", \"text\", and \"html\".
These type strings can be obtained from the
{@link Method Method} class in this package.
<p>
Other constants defined in this class are the non-standard property keys
that can be used to set non-standard property values on a java.util.Properties object
that is used to create or configure a serializer. Here are the non-standard keys:
<ul>
<li> <b>S_KEY_INDENT_AMOUNT </b> -
The non-standard property key to use to set the indentation amount.
The \"indent\" key needs to have a value of \"yes\", and this
properties value is a the number of whitespaces to indent by per
indentation level.

<li> <b>S_KEY_CONTENT_HANDLER </b> -
This non-standard property key is used to set the name of the fully qualified
Java class that implements the ContentHandler interface.
The output of the serializer will be SAX events sent to this an
object of this class.

<li> <b>S_KEY_ENTITIES </b> -
This non-standard property key is used to specify the name of the property file
that specifies character to entity reference mappings. A line in such a
file is has the name of the entity and the numeric (base 10) value
of the corresponding character, like this one: <br> quot=34 <br>

<li> <b>S_USE_URL_ESCAPING </b> -
This non-standard property key is used to set a value of \"yes\" if the href values for HTML serialization should
 use %xx escaping.

<li> <b>S_OMIT_META_TAG </b> -
This non-standard property key is used to set a value of \"yes\" if the META tag should be omitted where it would
 otherwise be supplied.
</ul>

@see SerializerFactory
@see Method
@see Serializer
"
      classrelation 2525058 // S_BUILTIN_EXTENSIONS_URL (<unidirectional association>)
	relation 2525058 --->
	  a role_name "S_BUILTIN_EXTENSIONS_URL" init_value " \"http://xml.apache.org/xalan\"" class_relation const_relation private
	    comment " S_BUILTIN_EXTENSIONS_URL is a mnemonic for the XML Namespace
(http://xml.apache.org/xalan) predefined to signify Xalan's
built-in XSLT Extensions. When used in stylesheets, this is often
bound to the \"xalan:\" prefix.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525058 // S_BUILTIN_EXTENSIONS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525186 // S_BUILTIN_OLD_EXTENSIONS_URL (<unidirectional association>)
	relation 2525186 --->
	  a role_name "S_BUILTIN_OLD_EXTENSIONS_URL" init_value " \"http://xml.apache.org/xslt\"" class_relation const_relation private
	    comment "
The old built-in extension url. It is still supported for
backward compatibility.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525186 // S_BUILTIN_OLD_EXTENSIONS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525314 // S_BUILTIN_EXTENSIONS_UNIVERSAL (<unidirectional association>)
	relation 2525314 --->
	  a role_name "S_BUILTIN_EXTENSIONS_UNIVERSAL" init_value "
        \"{\" + S_BUILTIN_EXTENSIONS_URL + \"}\"" class_relation const_relation public
	    comment "************************************************************
*  PUBLIC CONSTANTS
************************************************************

This is not a public API.
This is the built-in extensions namespace,
reexpressed in {namespaceURI} syntax
suitable for prepending to a localname to produce a \"universal
name\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525314 // S_BUILTIN_EXTENSIONS_UNIVERSAL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525442 // S_KEY_INDENT_AMOUNT (<unidirectional association>)
	relation 2525442 --->
	  a role_name "S_KEY_INDENT_AMOUNT" init_value "
        S_BUILTIN_EXTENSIONS_UNIVERSAL + \"indent-amount\"" class_relation const_relation public
	    comment " Some special Xalan keys.

The non-standard property key to use to set the
number of whitepaces to indent by, per indentation level,
if indent=\"yes\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525442 // S_KEY_INDENT_AMOUNT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525570 // S_KEY_LINE_SEPARATOR (<unidirectional association>)
	relation 2525570 --->
	  a role_name "S_KEY_LINE_SEPARATOR" init_value "
        S_BUILTIN_EXTENSIONS_UNIVERSAL + \"line-separator\"" class_relation const_relation public
	    comment "
The non-standard property key to use to set the
number of whitepaces to indent by, per indentation level,
if indent=\"yes\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525570 // S_KEY_LINE_SEPARATOR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525698 // S_KEY_CONTENT_HANDLER (<unidirectional association>)
	relation 2525698 --->
	  a role_name "S_KEY_CONTENT_HANDLER" init_value "
        S_BUILTIN_EXTENSIONS_UNIVERSAL + \"content-handler\"" class_relation const_relation public
	    comment " This non-standard property key is used to set the name of the fully qualified
Java class that implements the ContentHandler interface.
Fully qualified name of class with a default constructor that
 implements the ContentHandler interface, where the result tree events
 will be sent to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525698 // S_KEY_CONTENT_HANDLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525826 // S_KEY_ENTITIES (<unidirectional association>)
	relation 2525826 --->
	  a role_name "S_KEY_ENTITIES" init_value "
        S_BUILTIN_EXTENSIONS_UNIVERSAL + \"entities\"" class_relation const_relation public
	    comment "
This non-standard property key is used to specify the name of the property file
that specifies character to entity reference mappings.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525826 // S_KEY_ENTITIES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2525954 // S_USE_URL_ESCAPING (<unidirectional association>)
	relation 2525954 --->
	  a role_name "S_USE_URL_ESCAPING" init_value "
        S_BUILTIN_EXTENSIONS_UNIVERSAL + \"use-url-escaping\"" class_relation const_relation public
	    comment "
This non-standard property key is used to set a value of \"yes\" if the href values for HTML serialization should
 use %xx escaping. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525954 // S_USE_URL_ESCAPING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2526082 // S_OMIT_META_TAG (<unidirectional association>)
	relation 2526082 --->
	  a role_name "S_OMIT_META_TAG" init_value "
        S_BUILTIN_EXTENSIONS_UNIVERSAL + \"omit-meta-tag\"" class_relation const_relation public
	    comment "
This non-standard property key is used to set a value of \"yes\" if the META tag should be omitted where it would
 otherwise be supplied.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526082 // S_OMIT_META_TAG (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2526210 // S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL (<unidirectional association>)
	relation 2526210 --->
	  a role_name "S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL" init_value "
        \"{\" + S_BUILTIN_OLD_EXTENSIONS_URL + \"}\"" class_relation const_relation public
	    comment "
The old built-in extension namespace, this is not a public API.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526210 // S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1214594 "S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN"
	class_attribute const_attribute public explicit_type "int"
	init_value "
        S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL.length()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is not a public API, it is only public because it is used
by outside of this package,
it is the length of the old built-in extension namespace.

"
      end

      classrelation 2526338 // ORACLE_IS_STANDALONE (<unidirectional association>)
	relation 2526338 --->
	  a role_name "ORACLE_IS_STANDALONE" init_value " \"http://www.oracle.com/xml/is-standalone\"" class_relation const_relation public
	    comment "
This non-standard, Oracle-impl only property key is used as if OutputKeys.STANDALONE is specified but
without writing it out in the declaration; It can be used to reverse the change by Xalan patch 1495.
Since Xalan patch 1495 can cause incompatible behavior, this property is add for application to neutralize
the effect of Xalan patch 1495


<p>Is Standalone</p>

<ul>
  <li>
    <code>yes</code> to indicate the output is intended to be used as standalone
  </li>
  <li>
    <code>no</code> has no effect.
  </li>
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526338 // ORACLE_IS_STANDALONE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2526466 // S_XSLT_PREFIX (<unidirectional association>)
	relation 2526466 --->
	  a role_name "S_XSLT_PREFIX" init_value " \"xslt.output.\"" class_relation const_relation private
	    comment "************************************************************
*  PRIVATE CONSTANTS
************************************************************
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526466 // S_XSLT_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1214722 "S_XSLT_PREFIX_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " S_XSLT_PREFIX.length()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2526594 // S_XALAN_PREFIX (<unidirectional association>)
	relation 2526594 --->
	  a role_name "S_XALAN_PREFIX" init_value " \"org.apache.xslt.\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526594 // S_XALAN_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1214850 "S_XALAN_PREFIX_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " S_XALAN_PREFIX.length()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2526722 // m_synch_object (<unidirectional association>)
	relation 2526722 --->
	  a role_name "m_synch_object" init_value " new Integer(1)" class_relation private
	    comment " Synchronization object for lazy initialization of the above tables. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526722 // m_synch_object (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 2526850 // PROP_DIR (<unidirectional association>)
	relation 2526850 --->
	  a role_name "PROP_DIR" init_value " \"com/sun/org/apache/xml/internal/serializer/\"" class_relation const_relation private
	    comment " the directory in which the various method property files are located 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526850 // PROP_DIR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2526978 // PROP_FILE_XML (<unidirectional association>)
	relation 2526978 --->
	  a role_name "PROP_FILE_XML" init_value " \"output_xml.properties\"" class_relation const_relation private
	    comment " property file for default XML properties 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526978 // PROP_FILE_XML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2527106 // PROP_FILE_TEXT (<unidirectional association>)
	relation 2527106 --->
	  a role_name "PROP_FILE_TEXT" init_value " \"output_text.properties\"" class_relation const_relation private
	    comment " property file for default TEXT properties 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527106 // PROP_FILE_TEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2527234 // PROP_FILE_HTML (<unidirectional association>)
	relation 2527234 --->
	  a role_name "PROP_FILE_HTML" init_value " \"output_html.properties\"" class_relation const_relation private
	    comment " property file for default HTML properties 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527234 // PROP_FILE_HTML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2527362 // PROP_FILE_UNKNOWN (<unidirectional association>)
	relation 2527362 --->
	  a role_name "PROP_FILE_UNKNOWN" init_value " \"output_unknown.properties\"" class_relation const_relation private
	    comment " property file for default UNKNOWN (Either XML or HTML, to be determined later) properties 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527362 // PROP_FILE_UNKNOWN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2527490 // m_xml_properties (<unidirectional association>)
	relation 2527490 --->
	  a role_name "m_xml_properties" init_value " null" class_relation private
	    comment "************************************************************
*  PRIVATE STATIC FIELDS
************************************************************
 The default properties of all output files. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527490 // m_xml_properties (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      classrelation 2527618 // m_html_properties (<unidirectional association>)
	relation 2527618 --->
	  a role_name "m_html_properties" init_value " null" class_relation private
	    comment " The default properties when method=\"html\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527618 // m_html_properties (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      classrelation 2527746 // m_text_properties (<unidirectional association>)
	relation 2527746 --->
	  a role_name "m_text_properties" init_value " null" class_relation private
	    comment " The default properties when method=\"text\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527746 // m_text_properties (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      classrelation 2527874 // m_unknown_properties (<unidirectional association>)
	relation 2527874 --->
	  a role_name "m_unknown_properties" init_value " null" class_relation private
	    comment " The properties when method=\"\" for the \"unknown\" wrapper 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2527874 // m_unknown_properties (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      classrelation 2528002 // ACCESS_CONTROLLER_CLASS (<unidirectional association>)
	relation 2528002 --->
	  a role_name "ACCESS_CONTROLLER_CLASS" init_value " findAccessControllerClass()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528002 // ACCESS_CONTROLLER_CLASS (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 5567618 "findAccessControllerClass"
	class_operation private return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5567746 "getDefaultMethodProperties"
	class_operation public return_type class_ref 240130 // Properties
	nparams 1
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty OutputProperties with the property key/value defaults specified by
a property file.  The method argument is used to construct a string of
the form output_[method].properties (for instance, output_html.properties).
The output_xml.properties file is always used as the base.

<p>Anything other than 'text', 'xml', and 'html', will
use the output_xml.properties file.</p>

@param   method non-null reference to method name.

@return Properties object that holds the defaults for the given method.
"
      end

      operation 5567874 "loadPropertiesFile"
	class_operation private return_type class_ref 240130 // Properties
	nparams 2
	  param in name "resourceName" type class_ref 128130 // String
	  param inout name "defaults" type class_ref 240130 // Properties
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load the properties file from a resource stream.  If a
key name such as \"org.apache.xslt.xxx\", fix up the start of
string to be a curly namespace.  If a key name starts with
\"xslt.output.xxx\", clip off \"xslt.output.\".  If a key name *or* a
key value is discovered, check for \\u003a in the text, and
fix it up to be \":\", since earlier versions of the JDK do not
handle the escape sequence (at least in key names).

@param resourceName non-null reference to resource name.
@param defaults Default properties, which may be null.
"
      end

      operation 5568002 "fixupPropertyString"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "doClipping" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fix up a string in an output properties file according to
the rules of {@link #loadPropertiesFile}.

@param s non-null reference to string that may need to be fixed up.
@return A new string if fixup occured, otherwise the s argument.
"
      end
    end

    class 789378 "OutputPropertyUtils"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains some static methods that act as helpers when parsing a
Java Property object.

This class is not a public API.
It is only public because it is used outside of this package.

@see java.util.Properties
@xsl.usage internal
"
      operation 5568130 "getBooleanProperty"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "props" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the boolean property with the specified key in the property list.
If the key is not found in this property list, the default property list,
and its defaults, recursively, are then checked. The method returns
<code>false</code> if the property is not found, or if the value is other
than \"yes\".

@param   key   the property key.
@param   props   the list of properties that will be searched.
@return  the value in this property list as a boolean value, or false
if null or not \"yes\".
"
      end

      operation 5568258 "getIntProperty"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "props" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the int property with the specified key in the property list.
If the key is not found in this property list, the default property list,
and its defaults, recursively, are then checked. The method returns
<code>false</code> if the property is not found, or if the value is other
than \"yes\".

@param   key   the property key.
@param   props   the list of properties that will be searched.
@return  the value in this property list as a int value, or 0
if null or not a number.
"
      end
    end

    class 789506 "SerializerBase"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class acts as a base class for the XML \"serializers\"
and the stream serializers.
It contains a number of common fields and methods.

@xsl.usage internal
"
      classrelation 2528130 // <realization>
	relation 2528130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2528130 // <realization>
	  b parent class_ref 590210 // SerializationHandler
      end

      classrelation 2530178 // <realization>
	relation 2530178 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2530178 // <realization>
	  b parent class_ref 789634 // SerializerConstants
      end

      operation 5568386 "fireEndElem"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off the end element trace event
@param name Name of element
"
      end

      operation 5568514 "fireCharEvent"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the characters trace event
@param chars  content of characters
@param start  starting index of characters to output
@param length  number of characters to output
"
      end

      attribute 1214978 "m_needToCallStartDocument"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if we still need to call startDocumentInternal()

"
      end

      attribute 1215106 "m_cdataTagOpen"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if a trailing \"]]>\" still needs to be written to be
written out. Used to merge adjacent CDATA sections

"
      end

      classrelation 2530306 // m_attributes (<unidirectional association>)
	relation 2530306 --->
	  a role_name "m_attributes" init_value " new AttributesImplSerializer()" protected
	    comment "
All the attributes of the current element, collected from
startPrefixMapping() calls, or addAddtribute() calls, or
from the SAX attributes in a startElement() call.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530306 // m_attributes (<unidirectional association>)
	  b parent class_ref 787714 // AttributesImplSerializer
      end

      attribute 1215234 "m_inEntityRef"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tells if we're in an EntityRef event.

"
      end

      attribute 1215362 "m_inExternalDTD"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This flag is set while receiving events from the external DTD 
"
      end

      classrelation 2530434 // m_doctypeSystem (<unidirectional association>)
	relation 2530434 --->
	  a role_name "m_doctypeSystem" private
	    comment "
The System ID for the doc type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530434 // m_doctypeSystem (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2530562 // m_doctypePublic (<unidirectional association>)
	relation 2530562 --->
	  a role_name "m_doctypePublic" private
	    comment "
The public ID for the doc type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530562 // m_doctypePublic (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1215490 "m_needToOutputDocTypeDecl"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag to tell that we need to add the doctype decl, which we can't do
until the first element is encountered.

"
      end

      classrelation 2530690 // m_encoding (<unidirectional association>)
	relation 2530690 --->
	  a role_name "m_encoding" init_value " null" private
	    comment "
The character encoding.  Must match the encoding used for the
printWriter.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530690 // m_encoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1215618 "m_shouldNotWriteXMLHeader"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tells if we should write the XML declaration.

"
      end

      classrelation 2530818 // m_standalone (<unidirectional association>)
	relation 2530818 --->
	  a role_name "m_standalone" private
	    comment "
The standalone value for the doctype.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530818 // m_standalone (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1215746 "m_standaloneWasSpecified"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if standalone was specified.

"
      end

      attribute 1215874 "m_isStandalone"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Determine if the output is a standalone.

"
      end

      attribute 1216002 "m_doIndent"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag to tell if indenting (pretty-printing) is on.

"
      end

      attribute 1216130 "m_indentAmount"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Amount to indent.

"
      end

      classrelation 2530946 // m_version (<unidirectional association>)
	relation 2530946 --->
	  a role_name "m_version" init_value " null" private
	    comment "
Tells the XML version, for writing out to the XML decl.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530946 // m_version (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2531074 // m_mediatype (<unidirectional association>)
	relation 2531074 --->
	  a role_name "m_mediatype" private
	    comment "
The mediatype.  Not used right now.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531074 // m_mediatype (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2531202 // m_transformer (<unidirectional association>)
	relation 2531202 --->
	  a role_name "m_transformer" private
	    comment "
The transformer that was around when this output handler was created (if
any).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531202 // m_transformer (<unidirectional association>)
	  b parent class_ref 618626 // Transformer
      end

      classrelation 2531330 // m_cdataSectionElements (<unidirectional association>)
	relation 2531330 --->
	  a role_name "m_cdataSectionElements" init_value " null" protected
	    comment "
Pairs of local names and corresponding URIs of CDATA sections. This list
comes from the cdata-section-elements attribute. Every second one is a
local name, and every other second one is the URI for the local name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531330 // m_cdataSectionElements (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2531458 // m_prefixMap (<unidirectional association>)
	relation 2531458 --->
	  a role_name "m_prefixMap" protected
	    comment "
Namespace support, that keeps track of currently defined
prefix/uri mappings. As processed elements come and go, so do
the associated mappings for that element.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531458 // m_prefixMap (<unidirectional association>)
	  b parent class_ref 617218 // NamespaceMappings
      end

      classrelation 2531586 // m_tracer (<unidirectional association>)
	relation 2531586 --->
	  a role_name "m_tracer" protected
	    comment "
Handle for firing generate events.  This interface may be implemented
by the referenced transformer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531586 // m_tracer (<unidirectional association>)
	  b parent class_ref 789762 // SerializerTrace
      end

      classrelation 2531714 // m_sourceLocator (<unidirectional association>)
	relation 2531714 --->
	  a role_name "m_sourceLocator" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531714 // m_sourceLocator (<unidirectional association>)
	  b parent class_ref 617346 // SourceLocator
      end

      classrelation 2531842 // m_writer (<unidirectional association>)
	relation 2531842 --->
	  a role_name "m_writer" init_value " null" protected
	    comment "
The writer to send output to. This field is only used in the ToStream
serializers, but exists here just so that the fireStartDoc() and
other fire... methods can flush this writer when tracing.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531842 // m_writer (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end

      classrelation 2531970 // m_elemContext (<unidirectional association>)
	relation 2531970 --->
	  a role_name "m_elemContext" init_value " new ElemContext()" protected
	    comment "
A reference to \"stack frame\" corresponding to
the current element. Such a frame is pushed at a startElement()
and popped at an endElement(). This frame contains information about
the element, such as its namespace URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2531970 // m_elemContext (<unidirectional association>)
	  b parent class_ref 788098 // ElemContext
      end

      attribute 1216258 "m_charsBuff"
	protected explicit_type "char"
	multiplicity "[]"
	init_value " new char[60]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A utility buffer for converting Strings passed to
character() methods to character arrays.
Reusing this buffer means not creating a new character array
everytime and it runs faster.

"
      end

      attribute 1216386 "m_attrBuff"
	protected explicit_type "char"
	multiplicity "[]"
	init_value " new char[30]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A utility buffer for converting Strings passed to
attribute methods to character arrays.
Reusing this buffer means not creating a new character array
everytime and it runs faster.

"
      end

      classrelation 2532098 // m_locator (<unidirectional association>)
	relation 2532098 --->
	  a role_name "m_locator" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2532098 // m_locator (<unidirectional association>)
	  b parent class_ref 606082 // Locator
      end

      attribute 1216514 "m_needToCallSetDocumentInfo"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5568642 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a comment.

@see ExtendedLexicalHandler#comment(String)
"
      end

      operation 5568770 "patchName"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If at runtime, when the qname of the attribute is
known, another prefix is specified for the attribute, then we can
patch or hack the name with this method. For
a qname of the form \"ns?:otherprefix:name\", this function patches the
qname by simply ignoring \"otherprefix\".
TODO: This method is a HACK! We do not have access to the
XML file, it sometimes generates a NS prefix of the form \"ns?\" for
an attribute.
"
      end

      operation 5568898 "getLocalName"
	class_operation protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of a qualified name. If the name has no prefix,
then it works as the identity (SAX2).
@param qname the qualified name
@return the name, but excluding any prefix and colon.
"
      end

      operation 5569026 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive an object for locating the origin of SAX document events.

@param locator An object that can return the location of any SAX document
event.

Receive an object for locating the origin of SAX document events.

<p>SAX parsers are strongly encouraged (though not absolutely
required) to supply a locator: if it does so, it must supply
the locator to the application by invoking this method before
invoking any of the other methods in the DocumentHandler
interface.</p>

<p>The locator allows the application to determine the end
position of any document-related event, even if the parser is
not reporting an error.  Typically, the application will
use this information for reporting its own errors (such as
character content that does not match an application's
business rules).  The information returned by the locator
is probably not sufficient for use with a search engine.</p>

<p>Note that the locator will return correct information only
during the invocation of the events in this interface.  The
application should not attempt to use it at any other time.</p>
"
      end

      operation 5569154 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given attribute to the set of collected attributes , but only if
there is a currently open element.

An element is currently open if a startElement() notification has
occured but the start of the element has not yet been written to the
output.  In the stream case this means that we have not yet been forced
to close the elements opening tag by another notification, such as a
character notification.

@param uri the URI of the attribute
@param localName the local name of the attribute
@param rawName    the qualified name of the attribute
@param type the type of the attribute (probably CDATA)
@param value the value of the attribute
@param XSLAttribute true if this attribute is coming from an xsl:attriute element
@see ExtendedContentHandler#addAttribute(String, String, String, String, String)
"
      end

      operation 5569282 "addAttributeAlways"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given attribute to the set of attributes, even if there is
no currently open element. This is useful if a SAX startPrefixMapping()
should need to add an attribute before the element name is seen.

@param uri the URI of the attribute
@param localName the local name of the attribute
@param rawName   the qualified name of the attribute
@param type the type of the attribute (probably CDATA)
@param value the value of the attribute
@param XSLAttribute true if this attribute is coming from an xsl:attribute element
@return true if the attribute was added,
false if an existing value was replaced.
"
      end

      operation 5569410 "addAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds  the given attribute to the set of collected attributes,
but only if there is a currently open element.

@param name the attribute's qualified name
@param value the value of the attribute
"
      end

      operation 5569538 "addXSLAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param in name "value" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given xsl:attribute to the set of collected attributes,
but only if there is a currently open element.

@param name the attribute's qualified name (prefix:localName)
@param value the value of the attribute
@param uri the URI that the prefix of the name points to
"
      end

      operation 5569666 "addAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the given attributes to the currently collected ones. These
attributes are always added, regardless of whether on not an element
is currently open.
@param atts List of attributes to add to this list
"
      end

      operation 5569794 "asContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link ContentHandler} interface into this serializer.
If the serializer does not support the {@link ContentHandler}
interface, it should return null.

@return A {@link ContentHandler} interface into this serializer,
 or null if the serializer is not SAX 2 capable
@throws IOException An I/O exception occured
"
      end

      operation 5569922 "endEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of an entity.

@param name The name of the entity that is ending.
@throws org.xml.sax.SAXException The application may raise an exception.
@see #startEntity
"
      end

      operation 5570050 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush and close the underlying java.io.Writer. This method applies to
ToStream serializers, not ToSAXHandler serializers.
@see ToStream
"
      end

      operation 5570178 "initCDATA"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize global variables
"
      end

      operation 5570306 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character encoding to be used in the output document.
@return the character encoding to be used in the output document.
"
      end

      operation 5570434 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m_encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the character encoding coming from the xsl:output encoding stylesheet attribute.
@param m_encoding the character encoding
"
      end

      operation 5570562 "setOmitXMLDeclaration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output omit-xml-declaration stylesheet attribute
@param b true if the XML declaration is to be omitted from the output
document.
"
      end

      operation 5570690 "getOmitXMLDeclaration"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the XML declaration is to be omitted from the output
document.
"
      end

      operation 5570818 "getDoctypePublic"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previously set value of the value to be used as the public
identifier in the document type declaration (DTD).

@return the public identifier to be used in the DOCTYPE declaration in the
output document.
"
      end

      operation 5570946 "setDoctypePublic"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctypePublic" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the value coming from the xsl:output doctype-public stylesheet attribute.
@param doctypePublic the public identifier to be used in the DOCTYPE
declaration in the output document.
"
      end

      operation 5571074 "getDoctypeSystem"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previously set value of the value to be used
as the system identifier in the document type declaration (DTD).
@return the system identifier to be used in the DOCTYPE declaration in
the output document.

"
      end

      operation 5571202 "setDoctypeSystem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctypeSystem" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the value coming from the xsl:output doctype-system stylesheet attribute.
@param doctypeSystem the system identifier to be used in the DOCTYPE
declaration in the output document.
"
      end

      operation 5571330 "setDoctype"
	public explicit_return_type "void"
	nparams 2
	  param inout name "doctypeSystem" type class_ref 128130 // String
	  param inout name "doctypePublic" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the value coming from the xsl:output doctype-public and doctype-system stylesheet properties
@param doctypeSystem the system identifier to be used in the DOCTYPE
declaration in the output document.
@param doctypePublic the public identifier to be used in the DOCTYPE
declaration in the output document.
"
      end

      operation 5571458 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "standalone" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output standalone stylesheet attribute.
@param standalone a value of \"yes\" indicates that the
<code>standalone</code> delaration is to be included in the output
document. This method remembers if the value was explicitly set using
this method, verses if the value is the default value.
"
      end

      operation 5571586 "setStandaloneInternal"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "standalone" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the XSL standalone attribute, but does not remember if this is a
default or explicite setting.
@param standalone \"yes\" | \"no\"
"
      end

      operation 5571714 "getStandalone"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the XSL standalone attribute
@return a value of \"yes\" if the <code>standalone</code> delaration is to
be included in the output document.
 @see XSLOutputAttributes#getStandalone()
"
      end

      operation 5571842 "getIndent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the output document should be indented to visually
indicate its structure.
"
      end

      operation 5571970 "getMediaType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the mediatype the media-type or MIME type associated with the output
document.
@return the mediatype the media-type or MIME type associated with the
output document.
"
      end

      operation 5572098 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the version of the output format.
@return the version of the output format.
"
      end

      operation 5572226 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output version attribute.
@param version the version of the output format.
@see SerializationHandler#setVersion(String)
"
      end

      operation 5572354 "setMediaType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mediaType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output media-type stylesheet attribute.
@param mediaType the non-null media-type or MIME type associated with the
output document.
@see javax.xml.transform.OutputKeys#MEDIA_TYPE
@see SerializationHandler#setMediaType(String)
"
      end

      operation 5572482 "getIndentAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the number of spaces to indent for each indentation level.
"
      end

      operation 5572610 "setIndentAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "m_indentAmount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the indentation amount.
@param m_indentAmount The m_indentAmount to set
"
      end

      operation 5572738 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doIndent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value coming from the xsl:output indent stylesheet
attribute.
@param doIndent true if the output document should be indented to
visually indicate its structure.
@see XSLOutputAttributes#setIndent(boolean)
"
      end

      operation 5572866 "setIsStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isStandalone" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the isStandalone property
@param isStandalone true if the ORACLE_IS_STANDALONE is set to yes
@see OutputPropertiesFactory ORACLE_IS_STANDALONE
"
      end

      operation 5572994 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used when a prefix/uri namespace mapping
is indicated after the element was started with a
startElement() and before and endElement().
startPrefixMapping(prefix,uri) would be used before the
startElement() call.
@param uri the URI of the namespace
@param prefix the prefix associated with the given URI.

@see ExtendedContentHandler#namespaceAfterStartElement(String, String)
"
      end

      operation 5573122 "asDOMSerializer"
	public return_type class_ref 618370 // DOMSerializer
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link DOMSerializer} interface into this serializer. If the
serializer does not support the {@link DOMSerializer} interface, it should
return null.

@return A {@link DOMSerializer} interface into this serializer,  or null
if the serializer is not DOM capable
@throws IOException An I/O exception occured
@see Serializer#asDOMSerializer()
"
      end

      operation 5573250 "isCdataSection"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a boolean state based on if the name of the current element
is found in the list of qnames.  A state is only pushed if
there were some cdata-section-names were specified.
<p>
Hidden parameters are the vector of qualified elements specified in
cdata-section-names attribute, and the m_cdataSectionStates stack
onto which whether the current element is in the list is pushed (true or
false). Other hidden parameters are the current elements namespaceURI,
localName and qName
"
      end

      operation 5573378 "subPartMatch"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "p" type class_ref 128130 // String
	  param inout name "t" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two strings are equal, without worry if the first string is null.

@param p String reference, which may be null.
@param t String reference, which may be null.

@return true if strings are equal.
"
      end

      operation 5573506 "getPrefixPart"
	class_operation protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of a qualified name.
If the name has no prefix,
then it works as the identity (SAX2).

@param qname a qualified name
@return returns the prefix of the qualified name,
or null if there is no prefix.
"
      end

      operation 5573634 "getNamespaceMappings"
	public return_type class_ref 617218 // NamespaceMappings
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Some users of the serializer may need the current namespace mappings
@return the current namespace mappings (prefix/uri)
@see ExtendedContentHandler#getNamespaceMappings()
"
      end

      operation 5573762 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prefix currently pointing to the given URI (if any).
@param namespaceURI the uri of the namespace in question
@return a prefix pointing to the given URI (if any).
@see ExtendedContentHandler#getPrefix(String)
"
      end

      operation 5573890 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "isElement" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI of an element or attribute. Note that default namespaces
do not apply directly to attributes.
@param qname a qualified name
@param isElement true if the qualified name is the name of
an element.
@return returns the namespace URI associated with the qualified name.
"
      end

      operation 5574018 "getNamespaceURIFromPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI of prefix (if any)

@param prefix the prefix whose URI is searched for
@return the namespace URI currently associated with the
prefix, null if the prefix is undefined.
"
      end

      operation 5574146 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Entity reference event.

@param name Name of entity

@throws org.xml.sax.SAXException
"
      end

      operation 5574274 "setTransformer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 618626 // Transformer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the transformer associated with this serializer
@param t the transformer associated with this serializer.
@see SerializationHandler#setTransformer(Transformer)
"
      end

      operation 5574402 "getTransformer"
	public return_type class_ref 618626 // Transformer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the transformer associated with this serializer
@return returns the transformer associated with this serializer.
@see SerializationHandler#getTransformer()
"
      end

      operation 5574530 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets the nodes value as a String and uses that String as if
it were an input character notification.
@param node the Node to serialize
@throws org.xml.sax.SAXException
"
      end

      operation 5574658 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exc" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#error(SAXParseException)
"
      end

      operation 5574786 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exc" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#fatalError(SAXParseException)
"
      end

      operation 5574914 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exc" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#warning(SAXParseException)
"
      end

      operation 5575042 "fireStartEntity"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off start entity trace event
@param name Name of entity
"
      end

      operation 5575170 "flushMyWriter"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the characters event
@param chars  content of characters
@param start  starting index of characters to output
@param length  number of characters to output

    protected void fireCharEvent(char[] chars, int start, int length)
        throws org.xml.sax.SAXException
    {
        if (m_tracer != null)
            m_tracer.fireGenerateEvent(SerializerTrace.EVENTTYPE_CHARACTERS, chars, start,length);
    }


This method is only used internally when flushing the writer from the
various fire...() trace events.  Due to the writer being wrapped with
SerializerTraceWriter it may cause the flush of these trace events:
EVENTTYPE_OUTPUT_PSEUDO_CHARACTERS
EVENTTYPE_OUTPUT_CHARACTERS
which trace the output written to the output stream.

"
      end

      operation 5575298 "fireCDATAEvent"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the CDATA trace event
@param chars  content of CDATA
@param start  starting index of characters to output
@param length  number of characters to output
"
      end

      operation 5575426 "fireCommentEvent"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the comment trace event
@param chars  content of comment
@param start  starting index of comment to output
@param length  number of characters to output
"
      end

      operation 5575554 "fireEndEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off end entity trace event
@param name Name of entity
"
      end

      operation 5575682 "fireStartDoc"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off start document trace  event
"
      end

      operation 5575810 "fireEndDoc"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off end document trace event
"
      end

      operation 5575938 "fireStartElem"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the start element trace event. This trace method needs to be
called just before the attributes are cleared.

@param elemName the qualified name of the element

"
      end

      operation 5576066 "fireEscapingEvent"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off the end element event
@param name Name of element

    protected void fireEndElem(String name)
        throws org.xml.sax.SAXException
    {
        if (m_tracer != null)
            m_tracer.fireGenerateEvent(SerializerTrace.EVENTTYPE_ENDELEMENT,name, (Attributes)null);
    }

To fire off the PI trace event
@param name Name of PI
"
      end

      operation 5576194 "fireEntityReference"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off the entity reference trace event
@param name Name of entity reference
"
      end

      operation 5576322 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of a document.
This method is never a self generated call,
but only called externally.

<p>The SAX parser will invoke this method only once, before any
other methods in this interface or in DTDHandler (except for
setDocumentLocator).</p>

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5576450 "startDocumentInternal"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method handles what needs to be done at a startDocument() call,
whether from an external caller, or internally called in the
serializer.  For historical reasons the serializer is flexible to
startDocument() not always being called.
Even if no external call is
made into startDocument() this method will always be called as a self
generated internal startDocument, it handles what needs to be done at a
startDocument() call.

This method exists just to make sure that startDocument() is only ever
called from an external caller, which in principle is just a matter of
style.

@throws SAXException
"
      end

      operation 5576578 "setDocumentInfo"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method extracts version and encoding information from SAX events.
"
      end

      operation 5576706 "setSourceLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to set the source locator, which might be used to
generated an error message.
@param locator the source locator

@see ExtendedContentHandler#setSourceLocator(javax.xml.transform.SourceLocator)
"
      end

      operation 5576834 "setNamespaceMappings"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mappings" type class_ref 617218 // NamespaceMappings
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used only by TransformerSnapshotImpl to restore the serialization
to a previous state.

@param mappings NamespaceMappings
"
      end

      operation 5576962 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5577090 "resetSerializerBase"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all of the fields owned by SerializerBase

"
      end

      operation 5577218 "inTemporaryOutputState"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the serializer is used for temporary output rather than
final output.

This concept is made clear in the XSLT 2.0 draft.
"
      end

      operation 5577346 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method adds an attribute the the current element,
but should not be used for an xsl:attribute child.
@see ExtendedContentHandler#addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 5577474 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.DTDHandler#notationDecl(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 5577602 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.DTDHandler#unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 5577730 "setDTDEntityExpansion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expand" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If set to false the serializer does not expand DTD entities,
but leaves them as is, the default value is true.
"
      end
    end

    class 789634 "SerializerConstants"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Constants used in serialization, such as the string \"xmlns\"
@xsl.usage internal
"
      classrelation 2528258 // CDATA_CONTINUE (<unidirectional association>)
	relation 2528258 --->
	  a role_name "CDATA_CONTINUE" init_value " \"]]]]><![CDATA[>\"" class_relation const_relation public
	    comment " To insert ]]> in a CDATA section by ending the last CDATA section with
]] and starting the next CDATA section with >

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528258 // CDATA_CONTINUE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2528386 // CDATA_DELIMITER_CLOSE (<unidirectional association>)
	relation 2528386 --->
	  a role_name "CDATA_DELIMITER_CLOSE" init_value " \"]]>\"" class_relation const_relation public
	    comment "
The constant \"]]>\"

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528386 // CDATA_DELIMITER_CLOSE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2528514 // CDATA_DELIMITER_OPEN (<unidirectional association>)
	relation 2528514 --->
	  a role_name "CDATA_DELIMITER_OPEN" init_value " \"<![CDATA[\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528514 // CDATA_DELIMITER_OPEN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2528642 // EMPTYSTRING (<unidirectional association>)
	relation 2528642 --->
	  a role_name "EMPTYSTRING" init_value " \"\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528642 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2528770 // ENTITY_AMP (<unidirectional association>)
	relation 2528770 --->
	  a role_name "ENTITY_AMP" init_value " \"&amp;\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528770 // ENTITY_AMP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2528898 // ENTITY_CRLF (<unidirectional association>)
	relation 2528898 --->
	  a role_name "ENTITY_CRLF" init_value " \"&#xA;\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2528898 // ENTITY_CRLF (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529026 // ENTITY_GT (<unidirectional association>)
	relation 2529026 --->
	  a role_name "ENTITY_GT" init_value " \"&gt;\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529026 // ENTITY_GT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529154 // ENTITY_LT (<unidirectional association>)
	relation 2529154 --->
	  a role_name "ENTITY_LT" init_value " \"&lt;\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529154 // ENTITY_LT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529282 // ENTITY_QUOT (<unidirectional association>)
	relation 2529282 --->
	  a role_name "ENTITY_QUOT" init_value " \"&quot;\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529282 // ENTITY_QUOT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529410 // XML_PREFIX (<unidirectional association>)
	relation 2529410 --->
	  a role_name "XML_PREFIX" init_value " \"xml\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529410 // XML_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529538 // XMLNS_PREFIX (<unidirectional association>)
	relation 2529538 --->
	  a role_name "XMLNS_PREFIX" init_value " \"xmlns\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529538 // XMLNS_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529666 // XMLNS_URI (<unidirectional association>)
	relation 2529666 --->
	  a role_name "XMLNS_URI" init_value " \"http://www.w3.org/2000/xmlns/\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529666 // XMLNS_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529794 // DEFAULT_SAX_SERIALIZER (<unidirectional association>)
	relation 2529794 --->
	  a role_name "DEFAULT_SAX_SERIALIZER" init_value "\"com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529794 // DEFAULT_SAX_SERIALIZER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2529922 // XMLVERSION11 (<unidirectional association>)
	relation 2529922 --->
	  a role_name "XMLVERSION11" init_value " \"1.1\"" class_relation const_relation public
	    comment "
Define the XML version.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2529922 // XMLVERSION11 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2530050 // XMLVERSION10 (<unidirectional association>)
	relation 2530050 --->
	  a role_name "XMLVERSION10" init_value " \"1.0\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2530050 // XMLVERSION10 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 789762 "SerializerTrace"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines a set of integer constants that identify trace event
types.

@xsl.usage internal
"
      attribute 1216642 "EVENTTYPE_STARTDOCUMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated when a document begins.


"
      end

      attribute 1216770 "EVENTTYPE_ENDDOCUMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated when a document ends.

"
      end

      attribute 1216898 "EVENTTYPE_STARTELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated when an element begins (after the attributes have been processed but before the children have been added).

"
      end

      attribute 1217026 "EVENTTYPE_ENDELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated when an element ends, after it's children have been added.

"
      end

      attribute 1217154 "EVENTTYPE_CHARACTERS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated for character data (CDATA and Ignorable Whitespace have their own events).

"
      end

      attribute 1217282 "EVENTTYPE_IGNORABLEWHITESPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated for ignorable whitespace (I'm not sure how much this is actually called.

"
      end

      attribute 1217410 "EVENTTYPE_PI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated for processing instructions.

"
      end

      attribute 1217538 "EVENTTYPE_COMMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated after a comment has been added.

"
      end

      attribute 1217666 "EVENTTYPE_ENTITYREF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generate after an entity ref is created.

"
      end

      attribute 1217794 "EVENTTYPE_CDATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated after CDATA is generated.

"
      end

      attribute 1217922 "EVENTTYPE_OUTPUT_PSEUDO_CHARACTERS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated when characters might be written to an output stream,
 but  these characters never are. They will ultimately be written out via
EVENTTYPE_OUTPUT_CHARACTERS. This type is used as attributes are collected.
Whenever the attributes change this event type is fired. At the very end
however, when the attributes do not change anymore and are going to be
ouput to the document the real characters will be written out using the
EVENTTYPE_OUTPUT_CHARACTERS.

"
      end

      attribute 1218050 "EVENTTYPE_OUTPUT_CHARACTERS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Event type generated when characters are written to an output stream.

"
      end

      operation 5578114 "hasTraceListeners"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if trace listeners are present.

@return True if there are trace listeners
"
      end

      operation 5578242 "fireGenerateEvent"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventType" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire startDocument, endDocument events.

@param eventType One of the EVENTTYPE_XXX constants.
"
      end

      operation 5578370 "fireGenerateEvent"
	public explicit_return_type "void"
	nparams 3
	  param in name "eventType" explicit_type "int"
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire startElement, endElement events.

@param eventType One of the EVENTTYPE_XXX constants.
@param name The name of the element.
@param atts The SAX attribute list.
"
      end

      operation 5578498 "fireGenerateEvent"
	public explicit_return_type "void"
	nparams 4
	  param in name "eventType" explicit_type "int"
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire characters, cdata events.

@param eventType One of the EVENTTYPE_XXX constants.
@param ch The char array from the SAX event.
@param start The start offset to be used in the char array.
@param length The end offset to be used in the chara array.
"
      end

      operation 5578626 "fireGenerateEvent"
	public explicit_return_type "void"
	nparams 3
	  param in name "eventType" explicit_type "int"
	  param inout name "name" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire processingInstruction events.

@param eventType One of the EVENTTYPE_XXX constants.
@param name The name of the processing instruction.
@param data The processing instruction data.
"
      end

      operation 5578754 "fireGenerateEvent"
	public explicit_return_type "void"
	nparams 2
	  param in name "eventType" explicit_type "int"
	  param inout name "data" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire comment and entity ref events.

@param eventType One of the EVENTTYPE_XXX constants.
@param data The comment or entity ref data.
"
      end
    end

    class 789890 "SerializerFactory"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is a public API, it is a factory for creating serializers.

The properties object passed to the getSerializer() method should be created by
the OutputPropertiesFactory. Although the properties object
used to create a serializer does not need to be obtained
from OutputPropertiesFactory,
using this factory ensures that the default key/value properties
are set for the given output \"method\".

<p>
The standard property keys supported are: \"method\", \"version\", \"encoding\",
\"omit-xml-declaration\", \"standalone\", doctype-public\",
\"doctype-system\", \"cdata-section-elements\", \"indent\", \"media-type\".
These property keys and their values are described in the XSLT recommendation,
see {@link <a href=\"http://www.w3.org/TR/1999/REC-xslt-19991116\"> XSLT 1.0 recommendation</a>}

<p>
The value of the \"cdata-section-elements\" property key is a whitespace
separated list of elements. If the element is in a namespace then
value is passed in this format: {uri}localName

<p>
The non-standard property keys supported are defined in {@link OutputPropertiesFactory}.

@see OutputPropertiesFactory
@see Method
@see Serializer
"
      operation 5577858 "SerializerFactory"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is private just to prevent the creation of such an object.
"
      end

      operation 5577986 "getSerializer"
	class_operation public return_type class_ref 618498 // Serializer
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a serializer for the specified output method. The output method
is specified by the value of the property associated with the \"method\" key.
If no implementation exists that supports the specified output method
an exception of some type will be thrown.
For a list of the output \"method\" key values see {@link Method}.

@param format The output format, minimally the \"method\" property must be set.
@return A suitable serializer.
@throws IllegalArgumentException if method is
null or an appropriate serializer can't be found
@throws Exception if the class for the serializer is found but does not
implement ContentHandler.
@throws WrappedRuntimeException if an exception is thrown while trying to find serializer
"
      end
    end

    class 790018 "SerializerTraceWriter"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class wraps the real writer, it only purpose is to send
CHARACTERTOSTREAM events to the trace listener.
Each method immediately sends the call to the wrapped writer unchanged, but
in addition it collects characters to be issued to a trace listener.

In this way the trace
listener knows what characters have been written to the output Writer.

There may still be differences in what the trace events say is going to the
output writer and what is really going there. These differences will be due
to the fact that this class is UTF-8 encoding before emiting the trace event
and the underlying writer may not be UTF-8 encoding. There may also be
encoding differences.  So the main pupose of this class is to provide a
resonable facsimile of the true output.

@xsl.usage internal
"
      classrelation 2532226 // <generalisation>
	relation 2532226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2532226 // <generalisation>
	  b parent class_ref 428034 // Writer
      end

      classrelation 2532354 // <realization>
	relation 2532354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2532354 // <realization>
	  b parent class_ref 790146 // WriterChain
      end

      classrelation 2532482 // m_writer (<unidirectional association>)
	relation 2532482 --->
	  a role_name "m_writer" const_relation private
	    comment " The real writer to immediately write to.
This reference may be null, in which case nothing is written out, but
only the trace events are fired for output.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2532482 // m_writer (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end

      classrelation 2532610 // m_tracer (<unidirectional association>)
	relation 2532610 --->
	  a role_name "m_tracer" const_relation private
	    comment " The tracer to send events to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2532610 // m_tracer (<unidirectional association>)
	  b parent class_ref 789762 // SerializerTrace
      end

      attribute 1218178 "buf_length"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The size of the internal buffer, just to keep too many
events from being sent to the tracer

"
      end

      attribute 1218306 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Internal buffer to collect the characters to go to the trace listener.


"
      end

      attribute 1218434 "count"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How many bytes have been collected and still need to go to trace
listener.

"
      end

      operation 5580034 "setBufferSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates or replaces the internal buffer, and makes sure it has a few
extra bytes slight overflow of the last UTF8 encoded character.
@param size
"
      end

      operation 5580162 "SerializerTraceWriter"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 428034 // Writer
	  param inout name "tracer" type class_ref 789762 // SerializerTrace
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
If the writer passed in is null, then this SerializerTraceWriter will
only signal trace events of what would have been written to that writer.
If the writer passed in is not null then the trace events will mirror
what is going to that writer. In this way tools, such as a debugger, can
gather information on what is being written out.

@param out the Writer to write to (possibly null)
@param tracer the tracer to inform that characters are being written
"
      end

      operation 5580290 "flushBuffer"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush out the collected characters by sending them to the trace
listener.  These characters are never written to the real writer
(m_writer) because that has already happened with every method
call. This method simple informs the listener of what has already
happened.
@throws IOException
"
      end

      operation 5580418 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the internal buffer and flush the Writer
@see java.io.Writer#flush()
"
      end

      operation 5580546 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the internal buffer and close the Writer
@see java.io.Writer#close()
"
      end

      operation 5580674 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a single character.  The character to be written is contained in
the 16 low-order bits of the given integer value; the 16 high-order bits
are ignored.

<p> Subclasses that intend to support efficient single-character output
should override this method.

@param c  int specifying a character to be written.
@exception  IOException  If an I/O error occurs
"
      end

      operation 5580802 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a portion of an array of characters.

@param  chars  Array of characters
@param  start   Offset from which to start writing characters
@param  length   Number of characters to write

@exception  IOException  If an I/O error occurs

@throws java.io.IOException
"
      end

      operation 5580930 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a string.

@param  s  String to be written

@exception  IOException  If an I/O error occurs
"
      end

      operation 5581058 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the writer that this one directly wraps.
"
      end

      operation 5581186 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the OutputStream that is the at the end of the
chain of writers.
"
      end
    end

    class 790146 "WriterChain"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "It is unfortunate that java.io.Writer is a class rather than an interface.
The serializer has a number of classes that extend java.io.Writer
and which send their ouput to a yet another wrapped Writer or OutputStream.

The purpose of this interface is to force such classes to over-ride all of
the important methods defined on the java.io.Writer class, namely these:
<code>
write(int val)
write(char[] chars)
write(char[] chars, int start, int count)
write(String chars)
write(String chars, int start, int count)
flush()
close()
</code>
In this manner nothing will accidentally go directly to
the base class rather than to the wrapped Writer or OutputStream.

The purpose of this class is to have a uniform way of chaining the output of one writer to
the next writer in the chain. In addition there are methods to obtain the Writer or
OutputStream that this object sends its output to.

This interface is only for internal use withing the serializer.
@xsl.usage internal
"
      operation 5578882 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579010 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579138 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579266 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579394 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579522 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579650 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method forces us to over-ride the method defined in java.io.Writer "
      end

      operation 5579778 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this method returns null, getOutputStream() must return non-null.
Get the writer that this writer sends its output to.

It is possible that the Writer returned by this method does not
implement the WriterChain interface.
"
      end

      operation 5579906 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this method returns null, getWriter() must return non-null.
Get the OutputStream that this writer sends its output to.
"
      end
    end

    class 790274 "ToHTMLSAXHandler"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class accepts SAX-like calls, then sends true SAX calls to a
wrapped SAX handler.  There is optimization done knowing that the ultimate
output is HTML.

This class is not a public API.

@xsl.usage internal
"
      classrelation 2533250 // <generalisation>
	relation 2533250 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2533250 // <generalisation>
	  b parent class_ref 790402 // ToSAXHandler
      end

      attribute 1218690 "m_dtdHandled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Handle document type declaration (for first element only)

"
      end

      attribute 1218818 "m_escapeSetting"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Keeps track of whether output escaping is currently enabled

"
      end

      operation 5584770 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns null.
@return null
@see Serializer#getOutputFormat()
"
      end

      operation 5584898 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reurns null
@return null
@see Serializer#getOutputStream()
"
      end

      operation 5585026 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns null
@return null
@see Serializer#getWriter()
"
      end

      operation 5585154 "indent"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.

"
      end

      operation 5585282 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see DOMSerializer#serialize(Node)
"
      end

      operation 5585410 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turns special character escaping on/off.


@param escape true if escaping is to be set on.

@see SerializationHandler#setEscaping(boolean)
"
      end

      operation 5585538 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "indent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing
@param indent the number of spaces to indent per indentation level
(ignored)
@see SerializationHandler#setIndent(boolean)
"
      end

      operation 5585666 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@param format this parameter is not used
@see Serializer#setOutputFormat(Properties)
"
      end

      operation 5585794 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@param output this parameter is ignored
@see Serializer#setOutputStream(OutputStream)
"
      end

      operation 5585922 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@param writer this parameter is ignored.
@see Serializer#setWriter(Writer)
"
      end

      operation 5586050 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "eName" type class_ref 128130 // String
	  param inout name "aName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "valueDefault" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#attributeDecl(String, String, String, String, String)


Does nothing.

@param eName this parameter is ignored
@param aName this parameter is ignored
@param type this parameter is ignored
@param valueDefault this parameter is ignored
@param value this parameter is ignored
@see org.xml.sax.ext.DeclHandler#attributeDecl(String, String, String,String,String)
"
      end

      operation 5586178 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "model" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ext.DeclHandler#elementDecl(String, String)
"
      end

      operation 5586306 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#externalEntityDecl(String, String, String)
"
      end

      operation 5586434 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.

@see org.xml.sax.DTDHandler#unparsedEntityDecl
"
      end

      operation 5586562 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of an element.

<p>The SAX parser will invoke this method at the end of every
element in the XML document; there will be a corresponding
startElement() event for every endElement() event (even when the
element is empty).</p>

<p>If the element name has a namespace prefix, the prefix will
still be attached to the name.</p>


@param uri The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param qName The qualified name (with prefix), or the
       empty string if qualified names are not available.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#endElement(String, String, String)
"
      end

      operation 5586690 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
"
      end

      operation 5586818 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)
"
      end

      operation 5586946 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a processing instruction.

<p>The Parser will invoke this method once for each processing
instruction found: note that processing instructions may occur
before or after the main document element.</p>

<p>A SAX parser should never report an XML declaration (XML 1.0,
section 2.8) or a text declaration (XML 1.0, section 4.3.1)
using this method.</p>

@param target The processing instruction target.
@param data The processing instruction data, or null if
       none was supplied.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
@see org.xml.sax.ContentHandler#processingInstruction(String, String)
"
      end

      operation 5587074 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ContentHandler#setDocumentLocator(Locator)
"
      end

      operation 5587202 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ContentHandler#skippedEntity(String)
"
      end

      operation 5587330 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of an element, although this is a
SAX method additional namespace or attribute information can occur before
or after this call, that is associated with this element.


@param namespaceURI The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param qName The elements name.
@param atts The attributes attached to the element, if any.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startElement
@see org.xml.sax.ContentHandler#endElement
@see org.xml.sax.AttributeList

@throws org.xml.sax.SAXException

@see org.xml.sax.ContentHandler#startElement(String, String, String, Attributes)
"
      end

      operation 5587458 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a comment anywhere in the document. This callback
will be used for comments inside or outside the document element.
@param ch An array holding the characters in the comment.
@param start The starting position in the array.
@param length The number of characters to use from the array.
@throws org.xml.sax.SAXException The application may raise an exception.

@see org.xml.sax.ext.LexicalHandler#comment(char[], int, int)
"
      end

      operation 5587586 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ext.LexicalHandler#endCDATA()
"
      end

      operation 5587714 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ext.LexicalHandler#endDTD()
"
      end

      operation 5587842 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ext.LexicalHandler#startCDATA()
"
      end

      operation 5587970 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing.
@see org.xml.sax.ext.LexicalHandler#startEntity(String)
"
      end

      operation 5588098 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of a document.

<p>The SAX parser will invoke this method only once, and it will
be the last method invoked during the parse.  The parser shall
not invoke this method until it has either abandoned parsing
(because of an unrecoverable error) or reached the end of
input.</p>

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException


"
      end

      operation 5588226 "closeStartTag"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when all the data needed for a call to the
SAX handler's startElement() method has been gathered.
"
      end

      operation 5588354 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Do nothing.
@see SerializationHandler#close()
"
      end

      operation 5588482 "characters"
	public explicit_return_type "void"
	nparams 1
	  param in name "chars" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

@param chars The string of characters to process.

@throws org.xml.sax.SAXException

@see ExtendedContentHandler#characters(String)
"
      end

      operation 5588610 "ToHTMLSAXHandler"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A constructor
@param handler the wrapped SAX content handler
@param encoding the encoding of the output HTML document
"
      end

      operation 5588738 "ToHTMLSAXHandler"
	public explicit_return_type ""
	nparams 3
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param inout name "lex" type class_ref 617602 // LexicalHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A constructor.
@param handler the wrapped SAX content handler
@param lex the wrapped lexical handler
@param encoding the encoding of the output HTML document
"
      end

      operation 5588866 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "elementNamespaceURI" type class_ref 128130 // String
	  param inout name "elementLocalName" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An element starts, but attributes are not fully known yet.

@param elementNamespaceURI the URI of the namespace of the element
(optional)
@param elementLocalName the element name, but without prefix
(optional)
@param elementName the element name, with prefix, if any (required)

@see ExtendedContentHandler#startElement(String)
"
      end

      operation 5588994 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An element starts, but attributes are not fully known yet.

@param elementName the element name, with prefix, if any

@see ExtendedContentHandler#startElement(String)
"
      end

      operation 5589122 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of an element.
@param elementName The element type name
@throws org.xml.sax.SAXException Any SAX exception, possibly
    wrapping another exception.

@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5589250 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param ch The characters from the XML document.
@param off The start position in the array.
@param len The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #ignorableWhitespace
@see org.xml.sax.Locator

@throws org.xml.sax.SAXException

@see org.xml.sax.ContentHandler#characters(char[], int, int)
"
      end

      operation 5589378 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method flushes any pending events, which can be startDocument()
closing the opening tag of an element, or closing an open CDATA section.
"
      end

      operation 5589506 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle a prefix/uri mapping, which is associated with a startElement()
that is soon to follow. Need to close any open start tag to make
sure than any name space attributes due to this event are associated wih
the up comming element, not the current one.
@see ExtendedContentHandler#startPrefixMapping

@param prefix The Namespace prefix being declared.
@param uri The Namespace URI the prefix is mapped to.
@param shouldFlush true if any open tags need to be closed first, this
will impact which element the mapping applies to (open parent, or its up
comming child)
@return returns true if the call made a change to the current
namespace information, false if it did not change anything, e.g. if the
prefix/namespace mapping was already in scope from before.

@throws org.xml.sax.SAXException The client may throw
           an exception during processing.
"
      end

      operation 5589634 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the scope of a prefix-URI Namespace mapping
just before another element is about to start.
This call will close any open tags so that the prefix mapping
will not apply to the current element, but the up comming child.

@see org.xml.sax.ContentHandler#startPrefixMapping

@param prefix The Namespace prefix being declared.
@param uri The Namespace URI the prefix is mapped to.

@throws org.xml.sax.SAXException The client may throw
           an exception during processing.

"
      end

      operation 5589762 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param in name "prefix" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used when a prefix/uri namespace mapping
is indicated after the element was started with a
startElement() and before and endElement().
startPrefixMapping(prefix,uri) would be used before the
startElement() call.
@param prefix the prefix associated with the given URI.
@param uri the URI of the namespace

@see ExtendedContentHandler#namespaceAfterStartElement(String, String)
"
      end

      operation 5589890 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try's to reset the super class and reset this class for
re-use, so that you don't need to create a new serializer
(mostly for performance reasons).

@return true if the class was successfuly reset.
@see Serializer#reset()
"
      end

      operation 5590018 "resetToHTMLSAXHandler"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all of the fields owned by ToHTMLSAXHandler class

"
      end
    end

    class 790402 "ToSAXHandler"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to provide a base behavior to be inherited
by other To...SAXHandler serializers.

This class is not a public API.

@xsl.usage internal
"
      classrelation 2532738 // <generalisation>
	relation 2532738 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2532738 // <generalisation>
	  b parent class_ref 789506 // SerializerBase
      end

      operation 5581314 "ToSAXHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5581442 "ToSAXHandler"
	public explicit_return_type ""
	nparams 3
	  param inout name "hdlr" type class_ref 605954 // ContentHandler
	  param inout name "lex" type class_ref 617602 // LexicalHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5581570 "ToSAXHandler"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2532866 // m_saxHandler (<unidirectional association>)
	relation 2532866 --->
	  a role_name "m_saxHandler" protected
	    comment "
Underlying SAX handler. Taken from XSLTC

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2532866 // m_saxHandler (<unidirectional association>)
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2532994 // m_lexHandler (<unidirectional association>)
	relation 2532994 --->
	  a role_name "m_lexHandler" protected
	    comment "
Underlying LexicalHandler. Taken from XSLTC

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2532994 // m_lexHandler (<unidirectional association>)
	  b parent class_ref 617602 // LexicalHandler
      end

      attribute 1218562 "m_shouldGenerateNSAttribute"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A startPrefixMapping() call on a ToSAXHandler will pass that call
on to the wrapped ContentHandler, but should we also mirror these calls
with matching attributes, if so this field is true.
For example if this field is true then a call such as
startPrefixMapping(\"prefix1\",\"uri1\") will also cause the additional
internally generated attribute xmlns:prefix1=\"uri1\" to be effectively added
to the attributes passed to the wrapped ContentHandler.

"
      end

      classrelation 2533122 // m_state (<unidirectional association>)
	relation 2533122 --->
	  a role_name "m_state" init_value " null" protected
	    comment " If this is true, then the content handler wrapped by this
serializer implements the TransformState interface which
will give the content handler access to the state of
the transform. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2533122 // m_state (<unidirectional association>)
	  b parent class_ref 790530 // TransformStateSetter
      end

      operation 5581698 "startDocumentInternal"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass callback to the SAX Handler
"
      end

      operation 5581826 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Do nothing.
@see org.xml.sax.ext.LexicalHandler#startDTD(String, String, String)
"
      end

      operation 5581954 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "characters" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

@param characters The string of characters to process.

@throws org.xml.sax.SAXException

@see ExtendedContentHandler#characters(String)
"
      end

      operation 5582082 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a comment.

@see ExtendedLexicalHandler#comment(String)
"
      end

      operation 5582210 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Do nothing as this is an abstract class. All subclasses will need to
define their behavior if it is different.
@see org.xml.sax.ContentHandler#processingInstruction(String, String)
"
      end

      operation 5582338 "closeStartTag"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5582466 "closeCDATA"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5582594 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of an element, although this is a
SAX method additional namespace or attribute information can occur before
or after this call, that is associated with this element.

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startElement
@see org.xml.sax.ContentHandler#endElement
@see org.xml.sax.AttributeList

@throws org.xml.sax.SAXException

@see org.xml.sax.ContentHandler#startElement(String,String,String,Attributes)
"
      end

      operation 5582722 "setLexHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "_lexHandler" type class_ref 617602 // LexicalHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the LexicalHandler.
@param _lexHandler The LexicalHandler to set
"
      end

      operation 5582850 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "_saxHandler" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SAX ContentHandler.
@param _saxHandler The ContentHandler to set
"
      end

      operation 5582978 "setCdataSectionElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "URI_and_localNames" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing. The setting of CDATA section elements has an impact on
stream serializers.
@see SerializationHandler#setCdataSectionElements(java.util.Vector)
"
      end

      operation 5583106 "setShouldOutputNSAttr"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doOutputNSAttr" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set whether or not namespace declarations (e.g.
xmlns:foo) should appear as attributes of
elements
@param doOutputNSAttr whether or not namespace declarations
should appear as attributes
"
      end

      operation 5583234 "getShouldOutputNSAttr"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if namespace declarations from calls such as
startPrefixMapping(\"prefix1\",\"uri1\") should
also be mirrored with self generated additional attributes of elements
that declare the namespace, for example the attribute xmlns:prefix1=\"uri1\"
"
      end

      operation 5583362 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method flushes any pending events, which can be startDocument()
closing the opening tag of an element, or closing an open CDATA section.
"
      end

      operation 5583490 "setTransformState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ts" type class_ref 790530 // TransformStateSetter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass in a reference to a TransformState object, which
can be used during SAX ContentHandler events to obtain
information about he state of the transformation. This
method will be called  before each startDocument event.

@param ts A reference to a TransformState object
"
      end

      operation 5583618 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives notification that an element starts, but attributes are not
fully known yet.

@param uri the URI of the namespace of the element (optional)
@param localName the element name, but without prefix (optional)
@param qName the element name, with prefix, if any (required)

@see ExtendedContentHandler#startElement(String, String, String)
"
      end

      operation 5583746 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An element starts, but attributes are not fully known yet.

@param qName the element name, with prefix (if any).

@see ExtendedContentHandler#startElement(String)
"
      end

      operation 5583874 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets the node's value as a String and uses that String as if
it were an input character notification.
@param node the Node to serialize
@throws org.xml.sax.SAXException
"
      end

      operation 5584002 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exc" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#fatalError(SAXParseException)
"
      end

      operation 5584130 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exc" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#error(SAXParseException)
"
      end

      operation 5584258 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exc" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ErrorHandler#warning(SAXParseException)
"
      end

      operation 5584386 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try's to reset the super class and reset this class for
re-use, so that you don't need to create a new serializer
(mostly for performance reasons).

@return true if the class was successfuly reset.
@see Serializer#reset()
"
      end

      operation 5584514 "resetToSAXHandler"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all of the fields owned by ToSAXHandler class

"
      end

      operation 5584642 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a unique attribute
"
      end
    end

    class 790530 "TransformStateSetter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface is meant to be used by a base interface to
TransformState, but which as only the setters which have non Xalan
specific types in their signature, so that there are no dependancies
of the serializer on Xalan.

This interface is not a public API, it is only public because it is
used by Xalan.

@see com.sun.org.apache.xalan.internal.transformer.TransformState
@xsl.usage internal
"
      operation 5635714 "setCurrentNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current node.

@param n The current node.
"
      end

      operation 5635842 "resetState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transformer" type class_ref 618626 // Transformer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the state on the given transformer object.

@param transformer
"
      end
    end

    class 790658 "ToHTMLStream"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This serializer takes a series of SAX or
SAX-like events and writes its output
to the given stream.

This class is not a public API, it is public
because it is used from another package.

@xsl.usage internal
"
      classrelation 2534914 // <generalisation>
	relation 2534914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2534914 // <generalisation>
	  b parent class_ref 790786 // ToStream
      end

      attribute 1221250 "m_inDTD"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This flag is set while receiving events from the DTD 
"
      end

      attribute 1221378 "m_inBlockElem"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the current element is a block element.  (seems like
 this needs to be a stack. -sb). 
"
      end

      classrelation 2535042 // m_htmlcharInfo (<unidirectional association>)
	relation 2535042 --->
	  a role_name "m_htmlcharInfo" init_value "
//        new CharInfo(CharInfo.HTML_ENTITIES_RESOURCE);
        CharInfo.getCharInfoInternal(CharInfo.HTML_ENTITIES_RESOURCE, Method.HTML)" class_relation const_relation private
	    comment "
Map that tells which XML characters should have special treatment, and it
 provides character to entity name lookup.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2535042 // m_htmlcharInfo (<unidirectional association>)
	  b parent class_ref 787842 // CharInfo
      end

      class 791170 "Trie"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1221762 "ALPHA_SIZE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 128"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A digital search trie for 7-bit ASCII text
The API is a subset of java.util.Hashtable
The key must be a 7-bit ASCII string
The value may be any Java Object
One can get an object stored in a trie from its key,
but the search is either case sensitive or case
insensitive to the characters in the key, and this
choice of sensitivity or insensitivity is made when
the Trie is created, before any objects are put in it.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

@xsl.usage internal

 Size of the m_nextChar array.  
"
	end

	class 791298 "Node"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  operation 5608322 "Node"
	    package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Constructor, creates a Node[ALPHA_SIZE].
"
	  end

	  classrelation 2535682 // m_nextChar (<unidirectional association>)
	    relation 2535682 --->
	      a role_name "m_nextChar" multiplicity "[]" const_relation package
		comment " The next nodes.   
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
		classrelation_ref 2535682 // m_nextChar (<unidirectional association>)
	      b parent class_ref 791298 // Node
	  end

	  classrelation 2535810 // m_Value (<unidirectional association>)
	    relation 2535810 --->
	      a role_name "m_Value" package
		comment " The value.   
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 2535810 // m_Value (<unidirectional association>)
	      b parent class_ref 129538 // Object
	  end
	end

	classrelation 2535554 // m_Root (<unidirectional association>)
	  relation 2535554 --->
	    a role_name "m_Root" const_relation package
	      comment " The root node of the tree.    
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2535554 // m_Root (<unidirectional association>)
	    b parent class_ref 791298 // Node
	end

	attribute 1221890 "m_charBuffer"
	  private explicit_type "char"
	  multiplicity "[]"
	  init_value " new char[0]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " helper buffer to convert Strings to char arrays 
"
	end

	attribute 1222018 "m_lowerCaseOnly"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " true if the search for an object is lower case only with the key 
"
	end

	operation 5607810 "Trie"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct the trie that has a case insensitive search.
"
	end

	operation 5607938 "Trie"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "lowerCaseOnly" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct the trie given the desired case sensitivity with the key.
@param lowerCaseOnly true if the search keys are to be loser case only,
not case insensitive.
"
	end

	operation 5608066 "put"
	  public return_type class_ref 129538 // Object
	  nparams 2
	    param inout name "key" type class_ref 128130 // String
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Put an object into the trie for lookup.

@param key must be a 7-bit ASCII string
@param value any java object.

@return The old object that matched key, or null.
"
	end

	operation 5608194 "get"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param in name "key" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get an object that matches the key.

@param key must be a 7-bit ASCII string

@return The object that matches the key, or null.
"
	end

	operation 5608450 "Trie"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "existingTrie" type class_ref 791170 // Trie
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct the trie from another Trie.
Both the existing Trie and this new one share the same table for
lookup, and it is assumed that the table is fully populated and
not changing anymore.

@param existingTrie the Trie that this one is a copy of.
"
	end

	operation 5608578 "get2"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param in name "key" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get an object that matches the key.
This method is faster than get(), but is not thread-safe.

@param key must be a 7-bit ASCII string

@return The object that matches the key, or null.
"
	end

	operation 5608706 "getLongestKeyLength"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the length of the longest key used in the table.
"
	end
      end

      classrelation 2535170 // m_elementFlags (<unidirectional association>)
	relation 2535170 --->
	  a role_name "m_elementFlags" init_value " new Trie()" class_relation const_relation package
	    comment " A digital search trie for fast, case insensitive lookup of ElemDesc objects. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2535170 // m_elementFlags (<unidirectional association>)
	  b parent class_ref 791170 // Trie
      end

      extra_member 146690 "initialization"
	
	cpp "" ""
	java "  static {
        initTagReference(m_elementFlags);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5602818 "initTagReference"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "m_elementFlags" type class_ref 791170 // Trie
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2535298 // m_dummy (<unidirectional association>)
	relation 2535298 --->
	  a role_name "m_dummy" init_value " new ElemDesc(0 | ElemDesc.BLOCK)" class_relation const_relation private
	    comment "
Dummy element for elements not found.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2535298 // m_dummy (<unidirectional association>)
	  b parent class_ref 602754 // ElemDesc
      end

      attribute 1221506 "m_specialEscapeURLs"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if URLs should be specially escaped with the %xx form. 
"
      end

      attribute 1221634 "m_omitMetaTag"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the META tag should be omitted. 
"
      end

      operation 5602946 "setSpecialEscapeURLs"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bool" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the formatter should use special URL escaping.

@param bool True if URLs should be specially escaped with the %xx form.
"
      end

      operation 5603074 "setOmitMetaTag"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bool" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the formatter should omit the META tag.

@param bool True if the META tag should be omitted.
"
      end

      operation 5603202 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output format for this serializer. It the
serializer has already been associated with an output format,
it will switch to the new format. This method should not be
called while the serializer is in the process of serializing
a document.

This method can be called multiple times before starting
the serialization of a particular result-tree. In principle
all serialization parameters can be changed, with the exception
of method=\"html\" (it must be method=\"html\" otherwise we
shouldn't even have a ToHTMLStream object here!)

@param format The output format or serialzation parameters
to use.
"
      end

      operation 5603330 "getSpecialEscapeURLs"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the formatter should use special URL escaping.

@return True if URLs should be specially escaped with the %xx form.
"
      end

      operation 5603458 "getOmitMetaTag"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the formatter should omit the META tag.

@return True if the META tag should be omitted.
"
      end

      operation 5603586 "getElemDesc"
	class_operation public return_type class_ref 602754 // ElemDesc
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a description of the given element.

@param name non-null name of element, case insensitive.

@return non-null reference to ElemDesc, which may be m_dummy if no
        element description matches the given name.
"
      end

      classrelation 2535426 // m_htmlInfo (<unidirectional association>)
	relation 2535426 --->
	  a role_name "m_htmlInfo" init_value " new Trie(m_elementFlags)" private
	    comment "
A Trie that is just a copy of the \"static\" one.
We need this one to be able to use the faster, but not thread-safe
method Trie.get2(name)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2535426 // m_htmlInfo (<unidirectional association>)
	  b parent class_ref 791170 // Trie
      end

      operation 5603714 "getElemDesc2"
	private return_type class_ref 602754 // ElemDesc
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls to this method could be replaced with calls to
getElemDesc(name), but this one should be faster.
"
      end

      operation 5603842 "ToHTMLStream"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
"
      end

      operation 5603970 "startDocumentInternal"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The name of the current element. 
    private String m_currentElementName = null;

Receive notification of the beginning of a document.

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5604098 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of a document.

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5604226 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Receive notification of the beginning of an element.


 @param namespaceURI
 @param localName
 @param name The element type name.
 @param atts The attributes attached to the element, if any.
 @throws org.xml.sax.SAXException Any SAX exception, possibly
            wrapping another exception.
 @see #endElement
 @see org.xml.sax.AttributeList
"
      end

      operation 5604354 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param in name "namespaceURI" type class_ref 128130 // String
	  param in name "localName" type class_ref 128130 // String
	  param in name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Receive notification of the end of an element.


 @param namespaceURI
 @param localName
 @param name The element type name
 @throws org.xml.sax.SAXException Any SAX exception, possibly
            wrapping another exception.
"
      end

      operation 5604482 "processAttribute"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "elemDesc" type class_ref 602754 // ElemDesc
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process an attribute.
@param   writer The writer to write the processed output to.
@param   name   The name of the attribute.
@param   value   The value of the attribute.
@param   elemDesc The description of the HTML element
          that has this attribute.

@throws org.xml.sax.SAXException
"
      end

      operation 5604610 "isASCIIDigit"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if a character is an ASCII digit.
"
      end

      operation 5604738 "makeHHString"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make an integer into an HH hex value.
Does no checking on the size of the input, since this
is only meant to be used locally by writeAttrURI.

@param i must be a value less than 255.

@return should be a two character string.
"
      end

      operation 5604866 "isHHSign"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dmitri Ilyin: Makes sure if the String is HH encoded sign.
@param str must be 2 characters long

@return true or false
"
      end

      operation 5604994 "writeAttrURI"
	public explicit_return_type "void"
	nparams 3
	  param in name "writer" type class_ref 428034 // Writer
	  param inout name "string" type class_ref 128130 // String
	  param inout name "doURLEscaping" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write the specified <var>string</var> after substituting non ASCII characters,
with <CODE>%HH</CODE>, where HH is the hex of the byte value.

@param   string      String to convert to XML format.
@param doURLEscaping True if we should try to encode as
                     per http://www.ietf.org/rfc/rfc2396.txt.

@throws org.xml.sax.SAXException if a bad surrogate pair is detected.
"
      end

      operation 5605122 "writeAttrString"
	public explicit_return_type "void"
	nparams 3
	  param in name "writer" type class_ref 428034 // Writer
	  param inout name "string" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the specified <var>string</var> after substituting <VAR>specials</VAR>,
and UTF-16 surrogates for character references <CODE>&amp;#xnn</CODE>.

@param   string      String to convert to XML format.
@param   encoding    CURRENTLY NOT IMPLEMENTED.

@throws org.xml.sax.SAXException
"
      end

      operation 5605250 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param chars The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #ignorableWhitespace
@see org.xml.sax.Locator

@throws org.xml.sax.SAXException
"
      end

      operation 5605378 "cdata"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Receive notification of cdata.

 <p>The Parser will call this method to report each chunk of
 character data.  SAX parsers may return all contiguous character
 data in a single chunk, or they may split it into several
 chunks; however, all of the characters in any single event
 must come from the same external entity, so that the Locator
 provides useful information.</p>

 <p>The application must not attempt to read from the array
 outside of the specified range.</p>

 <p>Note that some parsers will report whitespace using the
 ignorableWhitespace() method rather than this one (validating
 parsers must do so).</p>

 @param ch The characters from the XML document.
 @param start The start position in the array.
 @param length The number of characters to read from the array.
 @throws org.xml.sax.SAXException Any SAX exception, possibly
            wrapping another exception.
 @see #ignorableWhitespace
 @see org.xml.sax.Locator

@throws org.xml.sax.SAXException
"
      end

      operation 5605506 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Receive notification of a processing instruction.

 @param target The processing instruction target.
 @param data The processing instruction data, or null if
        none was supplied.
 @throws org.xml.sax.SAXException Any SAX exception, possibly
            wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5605634 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notivication of a entityReference.

@param name non-null reference to entity name string.

@throws org.xml.sax.SAXException
"
      end

      operation 5605762 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5605890 "processAttributes"
	public explicit_return_type "void"
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param in name "nAttrs" explicit_type "int"
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process the attributes, which means to write out the currently
collected attributes to the writer. The attributes are not
cleared by this method

@param writer the writer to write processed attributes to.
@param nAttrs the number of attributes in m_attributes
to be processed

@throws org.xml.sax.SAXException
"
      end

      operation 5606018 "closeStartTag"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For the enclosing elements starting tag write out out any attributes
followed by \">\"

@throws org.xml.sax.SAXException
"
      end

      operation 5606146 "init"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 240130 // Properties
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the serializer with the specified output stream and output
format. Must be called before calling any of the serialize methods.

@param output The output stream to use
@param format The output format
@throws UnsupportedEncodingException The encoding specified   in the
output format is not supported
"
      end

      operation 5606274 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output stream to which the document should be
serialized. This method should not be called while the
serializer is in the process of serializing a document.
<p>
The encoding specified in the output properties is used, or
if no encoding was specified, the default for the selected
output method.

@param output The output stream
"
      end

      operation 5606402 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used when a prefix/uri namespace mapping
is indicated after the element was started with a
startElement() and before and endElement().
startPrefixMapping(prefix,uri) would be used before the
startElement() call.
@param uri the URI of the namespace
@param prefix the prefix associated with the given URI.

@see ExtendedContentHandler#namespaceAfterStartElement(String, String)
"
      end

      operation 5606530 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5606658 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of DTD declarations.
@throws org.xml.sax.SAXException The application may raise an exception.
@see #startDTD
"
      end

      operation 5606786 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "eName" type class_ref 128130 // String
	  param inout name "aName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "valueDefault" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method does nothing.
"
      end

      operation 5606914 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "model" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method does nothing.
"
      end

      operation 5607042 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method does nothing.
"
      end

      operation 5607170 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method does nothing.
"
      end

      operation 5607298 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to add an attribute to the currently open element.
The caller has guaranted that this attribute is unique, which means that it
not been seen before and will not be seen again.

@param name the qualified name of the attribute
@param value the value of the attribute which can contain only
ASCII printable characters characters in the range 32 to 127 inclusive.
@param flags the bit values of this integer give optimization information.
"
      end

      operation 5607426 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5607554 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5607682 "initToHTMLStream"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 790786 "ToStream"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "import com.sun.media.sound.IESecurity;

This abstract class is a base class for other stream
serializers (xml, html, text ...) that write output to a stream.

@xsl.usage internal
"
      classrelation 2533378 // <generalisation>
	relation 2533378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2533378 // <generalisation>
	  b parent class_ref 789506 // SerializerBase
      end

      classrelation 2533506 // COMMENT_BEGIN (<unidirectional association>)
	relation 2533506 --->
	  a role_name "COMMENT_BEGIN" init_value " \"<!--\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2533506 // COMMENT_BEGIN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2533634 // COMMENT_END (<unidirectional association>)
	relation 2533634 --->
	  a role_name "COMMENT_END" init_value " \"-->\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2533634 // COMMENT_END (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 790914 "BoolStack"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1220866 "m_values"
	  private explicit_type "boolean"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Array of boolean values          
"
	end

	attribute 1220994 "m_allocatedSize"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Array size allocated           
"
	end

	attribute 1221122 "m_index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Index into the array of booleans          
"
	end

	operation 5600642 "BoolStack"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
	end

	operation 5600770 "BoolStack"
	  public explicit_return_type ""
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a IntVector, using the given block size.

@param size array size to allocate
"
	end

	operation 5600898 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the length of the list.

@return Current length of the list
"
	end

	operation 5601026 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the stack.

"
	end

	operation 5601154 "push"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "val" explicit_type "boolean"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pushes an item onto the top of this stack.


@param val the boolean to be pushed onto this stack.
@return  the <code>item</code> argument.
"
	end

	operation 5601282 "pop"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the object at the top of this stack and returns that
object as the value of this function.

@return     The object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
	end

	operation 5601410 "popAndTop"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the object at the top of this stack and returns the
next object at the top as the value of this function.


@return Next object to the top or false if none there
"
	end

	operation 5601538 "setTop"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the item at the top of this stack


@param b Object to set at the top of this stack
"
	end

	operation 5601666 "peek"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Looks at the object at the top of this stack without removing it
from the stack.

@return     the object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
	end

	operation 5601794 "peekOrFalse"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Looks at the object at the top of this stack without removing it
from the stack.  If the stack is empty, it returns false.

@return     the object at the top of this stack.
"
	end

	operation 5601922 "peekOrTrue"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Looks at the object at the top of this stack without removing it
from the stack.  If the stack is empty, it returns true.

@return     the object at the top of this stack.
"
	end

	operation 5602050 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Tests if this stack is empty.

@return  <code>true</code> if this stack is empty;
         <code>false</code> otherwise.
"
	end

	operation 5602178 "grow"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Grows the size of the stack

"
	end
      end

      classrelation 2533762 // m_disableOutputEscapingStates (<unidirectional association>)
	relation 2533762 --->
	  a role_name "m_disableOutputEscapingStates" init_value " new BoolStack()" protected
	    comment " Stack to keep track of disabling output escaping. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2533762 // m_disableOutputEscapingStates (<unidirectional association>)
	  b parent class_ref 790914 // BoolStack
      end

      classrelation 2533890 // m_encodingInfo (<unidirectional association>)
	relation 2533890 --->
	  a role_name "m_encodingInfo" init_value " new EncodingInfo(null,null)" package
	    comment "
The encoding information associated with this serializer.
Although initially there is no encoding,
there is a dummy EncodingInfo object that will say
that every character is in the encoding. This is useful
for a serializer that is in temporary output state and has
no associated encoding. A serializer in final output state
will have an encoding, and will worry about whether
single chars or surrogate pairs of high/low chars form
characters in the output encoding.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2533890 // m_encodingInfo (<unidirectional association>)
	  b parent class_ref 788354 // EncodingInfo
      end

      classrelation 2534018 // m_canConvertMeth (<unidirectional association>)
	relation 2534018 --->
	  a role_name "m_canConvertMeth" package
	    comment "
Method reference to the sun.io.CharToByteConverter#canConvert method
for this encoding.  Invalid if m_charToByteConverter is null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534018 // m_canConvertMeth (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      attribute 1218946 "m_triedToGetConverter"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Boolean that tells if we already tried to get the converter.

"
      end

      classrelation 2534146 // m_charToByteConverter (<unidirectional association>)
	relation 2534146 --->
	  a role_name "m_charToByteConverter" init_value " null" package
	    comment "
Opaque reference to the sun.io.CharToByteConverter for this
encoding.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534146 // m_charToByteConverter (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2534274 // m_preserves (<unidirectional association>)
	relation 2534274 --->
	  a role_name "m_preserves" init_value " new BoolStack()" protected
	    comment "
Stack to keep track of whether or not we need to
preserve whitespace.

Used to push/pop values used for the field m_ispreserve, but
m_ispreserve is only relevant if m_doIndent is true.
If m_doIndent is false this field has no impact.


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534274 // m_preserves (<unidirectional association>)
	  b parent class_ref 790914 // BoolStack
      end

      attribute 1219074 "m_ispreserve"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "State flag to tell if preservation of whitespace
is important.

Used only in shouldIndent() but only if m_doIndent is true.
If m_doIndent is false this flag has no impact.


"
      end

      attribute 1219202 "m_isprevtext"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "State flag that tells if the previous node processed
was text, so we can tell if we should preserve whitespace.

Used in endDocument() and shouldIndent() but
only if m_doIndent is true.
If m_doIndent is false this flag has no impact.

"
      end

      attribute 1219330 "m_maxCharacter"
	protected explicit_type "int"
	init_value " Encodings.getLastPrintable()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum character size before we have to resort
to escaping.

"
      end

      attribute 1219458 "m_lineSep"
	protected explicit_type "char"
	multiplicity "[]"
	init_value "
        SecuritySupport.getSystemProperty(\"line.separator\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The system line separator for writing out line breaks.
The default value is from the system property,
but this value can be set through the xsl:output
extension attribute xalan:line-separator.

"
      end

      attribute 1219586 "m_lineSepUse"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if the the system line separator is to be used.

"
      end

      attribute 1219714 "m_lineSepLen"
	protected explicit_type "int"
	init_value " m_lineSep.length"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The length of the line seperator, since the write is done
one character at a time.

"
      end

      classrelation 2534402 // m_charInfo (<unidirectional association>)
	relation 2534402 --->
	  a role_name "m_charInfo" protected
	    comment "
Map that tells which characters should have special treatment, and it
 provides character to entity name lookup.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534402 // m_charInfo (<unidirectional association>)
	  b parent class_ref 787842 // CharInfo
      end

      attribute 1219842 "m_shouldFlush"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if we control the buffer, and we should flush the output on endDocument. 
"
      end

      attribute 1219970 "m_spaceBeforeClose"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Add space before '/>' for XHTML.

"
      end

      attribute 1220098 "m_startNewLine"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag to signal that a newline should be added.

Used only in indent() which is called only if m_doIndent is true.
If m_doIndent is false this flag has no impact.

"
      end

      attribute 1220226 "m_inDoctype"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tells if we're in an internal document type subset.

"
      end

      attribute 1220354 "m_isUTF8"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag to quickly tell if the encoding is UTF8.

"
      end

      classrelation 2534530 // m_format (<unidirectional association>)
	relation 2534530 --->
	  a role_name "m_format" protected
	    comment " The xsl:output properties. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534530 // m_format (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      attribute 1220482 "m_cdataStartCalled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "remembers if we are in between the startCDATA() and endCDATA() callbacks

"
      end

      attribute 1220610 "m_expandDTDEntities"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If this flag is true DTD entity references are not left as-is,
which is exiting older behavior.

"
      end

      operation 5590146 "ToStream"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor
"
      end

      operation 5590274 "closeCDATA"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This helper method to writes out \"]]>\" when closing a CDATA section.

@throws org.xml.sax.SAXException
"
      end

      operation 5590402 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes the DOM node. Throws an exception only if an I/O
exception occured while serializing.

@param node Node to serialize.
@throws IOException An I/O exception occured while serializing
"
      end

      operation 5590530 "isUTF16Surrogate"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the character is the high member of a surrogate pair.

NEEDSDOC @param c

NEEDSDOC ($objectName$) @return
"
      end

      attribute 1220738 "m_escaping"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Taken from XSLTC

"
      end

      operation 5590658 "flushWriter"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the formatter's result stream.

@throws org.xml.sax.SAXException
"
      end

      operation 5590786 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the output stream where the events will be serialized to.

@return reference to the result stream, or null of only a writer was
set.
"
      end

      operation 5590914 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "model" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement DeclHandler

  Report an element type declaration.

  <p>The content model will consist of the string \"EMPTY\", the
  string \"ANY\", or a parenthesised group, optionally followed
  by an occurrence indicator.  The model will be normalized so
  that all whitespace is removed,and will include the enclosing
  parentheses.</p>

  @param name The element type name.
  @param model The content model as a normalized string.
  @exception SAXException The application may raise an exception.
"
      end

      operation 5591042 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report an internal entity declaration.

<p>Only the effective (first) declaration for each entity
will be reported.</p>

@param name The name of the entity.  If it is a parameter
       entity, the name will begin with '%'.
@param value The replacement text of the entity.
@exception SAXException The application may raise an exception.
@see #externalEntityDecl
@see org.xml.sax.DTDHandler#unparsedEntityDecl
"
      end

      operation 5591170 "outputEntityDecl"
	package explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Output the doc type declaration.

@param name non-null reference to document type name.
NEEDSDOC @param value

@throws org.xml.sax.SAXException
"
      end

      operation 5591298 "outputLineSep"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Output a system-dependent line break.

@throws org.xml.sax.SAXException
"
      end

      operation 5591426 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output format for this serializer. It the
serializer has already been associated with an output format,
it will switch to the new format. This method should not be
called while the serializer is in the process of serializing
a document.

@param format The output format to use
"
      end

      operation 5591554 "init"
	private explicit_return_type "void"
	nparams 4
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 240130 // Properties
	  param inout name "defaultProperties" explicit_type "boolean"
	  param inout name "shouldFlush" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the serializer with the specified writer and output format.
Must be called before calling any of the serialize methods.
This method can be called multiple times and the xsl:output properties
passed in the 'format' parameter are accumulated across calls.

@param writer The writer to use
@param format The output format
@param shouldFlush True if the writer should be flushed at EndDocument.
"
      end

      operation 5591682 "init"
	private explicit_return_type "void"
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the serializer with the specified writer and output format.
Must be called before calling any of the serialize methods.

@param writer The writer to use
@param format The output format
"
      end

      operation 5591810 "init"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 240130 // Properties
	  param inout name "defaultProperties" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the serializer with the specified output stream and output
format. Must be called before calling any of the serialize methods.

@param output The output stream to use
@param format The output format
@param defaultProperties true if the properties are the default
properties

@throws UnsupportedEncodingException The encoding specified   in the
output format is not supported
"
      end

      operation 5591938 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the output format for this serializer.

@return The output format in use
"
      end

      operation 5592066 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies a writer to which the document should be serialized.
This method should not be called while the serializer is in
the process of serializing a document.

@param writer The output writer stream
"
      end

      operation 5592194 "setLineSepUse"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "use_sytem_line_break" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set if the operating systems end-of-line line separator should
be used when serializing.  If set false NL character
(decimal 10) is left alone, otherwise the new-line will be replaced on
output with the systems line separator. For example on UNIX this is
NL, while on Windows it is two characters, CR NL, where CR is the
carriage-return (decimal 13).

@param use_sytem_line_break True if an input NL is replaced with the
operating systems end-of-line separator.
@return The previously set value of the serializer.
"
      end

      operation 5592322 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output stream to which the document should be
serialized. This method should not be called while the
serializer is in the process of serializing a document.
<p>
The encoding specified in the output properties is used, or
if no encoding was specified, the default for the selected
output method.

@param output The output stream
"
      end

      operation 5592450 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setEscaping(boolean)
"
      end

      operation 5592578 "indent"
	protected explicit_return_type "void"
	nparams 1
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Might print a newline character and the indentation amount
of the given depth.

@param depth the indentation depth (element nesting depth)

@throws org.xml.sax.SAXException if an error occurs during writing.
"
      end

      operation 5592706 "indent"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indent at the current element nesting depth.
@throws IOException
"
      end

      operation 5592834 "printSpace"
	private explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints <var>n</var> spaces.
@param n         Number of spaces to print.

@throws org.xml.sax.SAXException if an error occurs when writing.
"
      end

      operation 5592962 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "eName" type class_ref 128130 // String
	  param inout name "aName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "valueDefault" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report an attribute type declaration.

<p>Only the effective (first) declaration for an attribute will
be reported.  The type will be one of the strings \"CDATA\",
\"ID\", \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\",
\"ENTITIES\", or \"NOTATION\", or a parenthesized token group with
the separator \"|\" and all whitespace removed.</p>

@param eName The name of the associated element.
@param aName The name of the attribute.
@param type A string representing the attribute type.
@param valueDefault A string representing the attribute default
       (\"#IMPLIED\", \"#REQUIRED\", or \"#FIXED\") or null if
       none of these applies.
@param value A string representing the attribute's default value,
       or null if there is none.
@exception SAXException The application may raise an exception.
"
      end

      operation 5593090 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character stream where the events will be serialized to.

@return Reference to the result Writer, or null.
"
      end

      operation 5593218 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a parsed external entity declaration.

<p>Only the effective (first) declaration for each entity
will be reported.</p>

@param name The name of the entity.  If it is a parameter
       entity, the name will begin with '%'.
@param publicId The declared public identifier of the entity, or
       null if none was declared.
@param systemId The declared system identifier of the entity.
@exception SAXException The application may raise an exception.
@see #internalEntityDecl
@see org.xml.sax.DTDHandler#unparsedEntityDecl
"
      end

      operation 5593346 "escapingNotNeeded"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this character can be written without escaping.
"
      end

      operation 5593474 "writeUTF16Surrogate"
	protected explicit_return_type "int"
	nparams 4
	  param in name "c" explicit_type "char"
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "i" explicit_type "int"
	  param in name "end" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Once a surrogate has been detected, write out the pair of
characters if it is in the encoding, or if there is no
encoding, otherwise write out an entity reference
of the value of the unicode code point of the character
represented by the high/low surrogate pair.
<p>
An exception is thrown if there is no low surrogate in the pair,
because the array ends unexpectely, or if the low char is there
but its value is such that it is not a low surrogate.

@param c the first (high) part of the surrogate, which
must be confirmed before calling this method.
@param ch Character array.
@param i position Where the surrogate was detected.
@param end The end index of the significant characters.
@return 0 if the pair of characters was written out as-is,
the unicode code point of the character represented by
the surrogate pair if an entity reference with that value
was written out.

@throws IOException
@throws org.xml.sax.SAXException if invalid UTF-16 surrogate detected.
"
      end

      operation 5593602 "accumDefaultEntity"
	protected explicit_return_type "int"
	nparams 7
	  param inout name "writer" type class_ref 428034 // Writer
	  param in name "ch" explicit_type "char"
	  param in name "i" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "len" explicit_type "int"
	  param inout name "fromTextNode" explicit_type "boolean"
	  param inout name "escLF" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle one of the default entities, return false if it
is not a default entity.

@param ch character to be escaped.
@param i index into character array.
@param chars non-null reference to character array.
@param len length of chars.
@param fromTextNode true if the characters being processed
are from a text node, false if they are from an attribute value
@param escLF true if the linefeed should be escaped.

@return i+1 if the character was written, else i.

@throws java.io.IOException
"
      end

      operation 5593730 "writeNormalizedChars"
	package explicit_return_type "void"
	nparams 5
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "isCData" explicit_type "boolean"
	  param inout name "useSystemLineSeparator" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize the characters, but don't escape.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@param isCData true if a CDATA block should be built around the characters.
@param useSystemLineSeparator true if the operating systems
end-of-line separator should be output rather than a new-line character.

@throws IOException
@throws org.xml.sax.SAXException
"
      end

      operation 5593858 "endNonEscaping"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ends an un-escaping section.

@see #startNonEscaping

@throws org.xml.sax.SAXException
"
      end

      operation 5593986 "startNonEscaping"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts an un-escaping section. All characters printed within an un-
escaping section are printed as is, without escaping special characters
into entity references. Only XML and HTML serializers need to support
this method.
<p> The contents of the un-escaping section will be delivered through the
regular <tt>characters</tt> event.

@throws org.xml.sax.SAXException
"
      end

      operation 5594114 "cdata"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of cdata.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #ignorableWhitespace
@see org.xml.sax.Locator

@throws org.xml.sax.SAXException
"
      end

      operation 5594242 "isEscapingDisabled"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the character escaping should be disabled for the current state.

@return true if the character escaping should be disabled.
"
      end

      operation 5594370 "charactersRaw"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If available, when the disable-output-escaping attribute is used,
output raw text without escaping.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.

@throws org.xml.sax.SAXException
"
      end

      operation 5594498 "characters"
	public explicit_return_type "void"
	nparams 3
	  param in name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param chars The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #ignorableWhitespace
@see org.xml.sax.Locator

@throws org.xml.sax.SAXException
"
      end

      operation 5594626 "isCharacterInC0orC1Range"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method checks if a given character is between C0 or C1 range
of Control characters.
This method is added to support Control Characters for XML 1.1
If a given character is TAB (0x09), LF (0x0A) or CR (0x0D), this method
return false. Since they are whitespace characters, no special processing is needed.

@param ch
@return boolean
"
      end

      operation 5594754 "isNELorLSEPCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method checks if a given character either NEL (0x85) or LSEP (0x2028)
These are new end of line charcters added in XML 1.1.  These characters must be
written as Numeric Character References (NCR) in XML 1.1 output document.

@param ch
@return boolean
"
      end

      operation 5594882 "processDirty"
	private explicit_return_type "int"
	nparams 6
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "end" explicit_type "int"
	  param in name "i" explicit_type "int"
	  param in name "ch" explicit_type "char"
	  param in name "lastDirty" explicit_type "int"
	  param inout name "fromTextNode" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a dirty character and any preeceding clean characters
that were not yet processed.
@param chars array of characters being processed
@param end one (1) beyond the last character
in chars to be processed
@param i the index of the dirty character
@param ch the character in chars[i]
@param lastDirty the last dirty character previous to i
@param fromTextNode true if the characters being processed are
from a text node, false if they are from an attribute value.
@return the index of the last character processed
"
      end

      operation 5595010 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

@param s The string of characters to process.

@throws org.xml.sax.SAXException
"
      end

      operation 5595138 "accumDefaultEscape"
	protected explicit_return_type "int"
	nparams 7
	  param inout name "writer" type class_ref 428034 // Writer
	  param in name "ch" explicit_type "char"
	  param in name "i" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "len" explicit_type "int"
	  param inout name "fromTextNode" explicit_type "boolean"
	  param inout name "escLF" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Escape and writer.write a character.

@param ch character to be escaped.
@param i index into character array.
@param chars non-null reference to character array.
@param len length of chars.
@param fromTextNode true if the characters being processed are
from a text node, false if the characters being processed are from
an attribute value.
@param escLF true if the linefeed should be escaped.

@return i+1 if a character was written, i+2 if two characters
were written out, else return i.

@throws org.xml.sax.SAXException
"
      end

      operation 5595266 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of an element, although this is a
SAX method additional namespace or attribute information can occur before
or after this call, that is associated with this element.


@param namespaceURI The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param name The element type name.
@param atts The attributes attached to the element, if any.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startElement
@see org.xml.sax.ContentHandler#endElement
@see org.xml.sax.AttributeList

@throws org.xml.sax.SAXException
"
      end

      operation 5595394 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "elementNamespaceURI" type class_ref 128130 // String
	  param inout name "elementLocalName" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of an element, additional
namespace or attribute information can occur before or after this call,
that is associated with this element.


@param elementNamespaceURI The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param elementLocalName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param elementName The element type name.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startElement
@see org.xml.sax.ContentHandler#endElement
@see org.xml.sax.AttributeList

@throws org.xml.sax.SAXException
"
      end

      operation 5595522 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5595650 "outputDocTypeDecl"
	package explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "closeDecl" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Output the doc type declaration.

@param name non-null reference to document type name.
NEEDSDOC @param closeDecl

@throws java.io.IOException
"
      end

      operation 5595778 "processAttributes"
	public explicit_return_type "void"
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param in name "nAttrs" explicit_type "int"
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process the attributes, which means to write out the currently
collected attributes to the writer. The attributes are not
cleared by this method

@param writer the writer to write processed attributes to.
@param nAttrs the number of attributes in m_attributes
to be processed

@throws java.io.IOException
@throws org.xml.sax.SAXException
"
      end

      operation 5595906 "writeAttrString"
	public explicit_return_type "void"
	nparams 3
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "string" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified <var>string</var> after substituting <VAR>specials</VAR>,
and UTF-16 surrogates for chracter references <CODE>&amp;#xnn</CODE>.

@param   string      String to convert to XML format.
@param   encoding    CURRENTLY NOT IMPLEMENTED.

@throws java.io.IOException
"
      end

      operation 5596034 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of an element.


@param namespaceURI The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param name The element type name
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5596162 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of an element.
@param name The element type name
@throws org.xml.sax.SAXException Any SAX exception, possibly
    wrapping another exception.
"
      end

      operation 5596290 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the scope of a prefix-URI Namespace mapping
just before another element is about to start.
This call will close any open tags so that the prefix mapping
will not apply to the current element, but the up comming child.

@see org.xml.sax.ContentHandler#startPrefixMapping

@param prefix The Namespace prefix being declared.
@param uri The Namespace URI the prefix is mapped to.

@throws org.xml.sax.SAXException The client may throw
           an exception during processing.

"
      end

      operation 5596418 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle a prefix/uri mapping, which is associated with a startElement()
that is soon to follow. Need to close any open start tag to make
sure than any name space attributes due to this event are associated wih
the up comming element, not the current one.
@see ExtendedContentHandler#startPrefixMapping

@param prefix The Namespace prefix being declared.
@param uri The Namespace URI the prefix is mapped to.
@param shouldFlush true if any open tags need to be closed first, this
will impact which element the mapping applies to (open parent, or its up
comming child)
@return returns true if the call made a change to the current
namespace information, false if it did not change anything, e.g. if the
prefix/namespace mapping was already in scope from before.

@throws org.xml.sax.SAXException The client may throw
           an exception during processing.


"
      end

      operation 5596546 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of an XML comment anywhere in the document. This
callback will be used for comments inside or outside the document
element, including comments in the external DTD subset (if read).
@param ch An array holding the characters in the comment.
@param start The starting position in the array.
@param length The number of characters to use from the array.
@throws org.xml.sax.SAXException The application may raise an exception.
"
      end

      operation 5596674 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of a CDATA section.
@throws org.xml.sax.SAXException The application may raise an exception.

 @see  #startCDATA
"
      end

      operation 5596802 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of DTD declarations.
@throws org.xml.sax.SAXException The application may raise an exception.
@see #startDTD
"
      end

      operation 5596930 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End the scope of a prefix-URI Namespace mapping.
@see org.xml.sax.ContentHandler#endPrefixMapping

@param prefix The prefix that was being mapping.
@throws org.xml.sax.SAXException The client may throw
           an exception during processing.
"
      end

      operation 5597058 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of ignorable whitespace in element content.

Not sure how to get this invoked quite yet.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #characters

@throws org.xml.sax.SAXException
"
      end

      operation 5597186 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a skipped entity.
@see org.xml.sax.ContentHandler#skippedEntity

@param name The name of the skipped entity.  If it is a
      parameter                   entity, the name will begin with '%',
and if it is the external DTD subset, it will be the string
\"[dtd]\".
@throws org.xml.sax.SAXException Any SAX exception, possibly wrapping
another exception.
"
      end

      operation 5597314 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the start of a CDATA section.

@throws org.xml.sax.SAXException The application may raise an exception.
@see #endCDATA
"
      end

      operation 5597442 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the beginning of an entity.

The start and end of the document entity are not reported.
The start and end of the external DTD subset are reported
using the pseudo-name \"[dtd]\".  All other events must be
properly nested within start/end entity events.

@param name The name of the entity.  If it is a parameter
       entity, the name will begin with '%'.
@throws org.xml.sax.SAXException The application may raise an exception.
@see #endEntity
@see org.xml.sax.ext.DeclHandler#internalEntityDecl
@see org.xml.sax.ext.DeclHandler#externalEntityDecl
"
      end

      operation 5597570 "closeStartTag"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For the enclosing elements starting tag write out
out any attributes followed by \">\"

@throws org.xml.sax.SAXException
"
      end

      operation 5597698 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the start of DTD declarations, if any.

Any declarations are assumed to be in the internal subset unless
otherwise indicated.

@param name The document type name.
@param publicId The declared public identifier for the
       external DTD subset, or null if none was declared.
@param systemId The declared system identifier for the
       external DTD subset, or null if none was declared.
@throws org.xml.sax.SAXException The application may raise an
           exception.
@see #endDTD
@see #startEntity
"
      end

      operation 5597826 "getIndentAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the m_indentAmount.
@return int
"
      end

      operation 5597954 "setIndentAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "m_indentAmount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the m_indentAmount.

@param m_indentAmount The m_indentAmount to set
"
      end

      operation 5598082 "shouldIndent"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if, based on space preservation constraints and the doIndent property,
if an indent should occur.

@return True if an indent should occur.
"
      end

      operation 5598210 "setCdataSectionElements"
	private explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "props" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the list of qname properties with the specified key in the
property list. If the key is not found in this property list, the default
property list, and its defaults, recursively, are then checked. The
method returns <code>null</code> if the property is not found.

@param   key   the property key.
@param props the list of properties to search in.

Sets the vector of local-name/URI pairs of the cdata section elements
specified in the cdata-section-elements property.

This method is essentially a copy of getQNameProperties() from
OutputProperties. Eventually this method should go away and a call
to setCdataSectionElements(Vector v) should be made directly.
"
      end

      operation 5598338 "addCdataSectionElement"
	private explicit_return_type "void"
	nparams 2
	  param inout name "URI_and_localName" type class_ref 128130 // String
	  param inout name "v" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a URI/LocalName pair of strings to the list.

@param URI_and_localName String of the form \"{uri}local\" or \"local\"

@return a QName object
"
      end

      operation 5598466 "setCdataSectionElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "URI_and_localNames" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remembers the cdata sections specified in the cdata-section-elements.
The \"official way to set URI and localName pairs.
This method should be used by both Xalan and XSLTC.

@param URI_and_localNames a vector of pairs of Strings (URI/local)
"
      end

      operation 5598594 "ensureAttributesNamespaceIsDeclared"
	protected return_type class_ref 128130 // String
	nparams 3
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes sure that the namespace URI for the given qualified attribute name
is declared.
@param ns the namespace URI
@param rawName the qualified name
@return returns null if no action is taken, otherwise it returns the
prefix used in declaring the namespace.
@throws SAXException
"
      end

      operation 5598722 "ensurePrefixIsDeclared"
	package explicit_return_type "void"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5598850 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method flushes any pending events, which can be startDocument()
closing the opening tag of an element, or closing an open CDATA section.
"
      end

      operation 5598978 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5599106 "addAttributeAlways"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "xslAttribute" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given attribute to the set of attributes, even if there is
no currently open element. This is useful if a SAX startPrefixMapping()
should need to add an attribute before the element name is seen.

This method is a copy of its super classes method, except that some
tracing of events is done.  This is so the tracing is only done for
stream serializers, not for SAX ones.

@param uri the URI of the attribute
@param localName the local name of the attribute
@param rawName   the qualified name of the attribute
@param type the type of the attribute (probably CDATA)
@param value the value of the attribute
@param xslAttribute true if this attribute is coming from an xsl:attribute element.
@return true if the attribute value was added,
false if the attribute already existed and the value was
replaced with the new value.
"
      end

      operation 5599234 "firePseudoAttributes"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To fire off the pseudo characters of attributes, as they currently
exist. This method should be called everytime an attribute is added,
or when an attribute value is changed, or an element is created.
"
      end

      class 791042 "WritertoStringBuffer"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2534658 // <generalisation>
	  relation 2534658 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2534658 // <generalisation>
	    b parent class_ref 428034 // Writer
	end

	classrelation 2534786 // m_stringbuf (<unidirectional association>)
	  relation 2534786 --->
	    a role_name "m_stringbuf" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2534786 // m_stringbuf (<unidirectional association>)
	    b parent class_ref 166018 // StringBuffer
	end

	operation 5599362 "WritertoStringBuffer"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "sb" type class_ref 166018 // StringBuffer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.io.Writer#write(char[], int, int)
"
	end

	operation 5599490 "write"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "arg0" explicit_type "char"
	  multiplicity "[]"
	    param in name "arg1" explicit_type "int"
	    param in name "arg2" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5599618 "flush"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.io.Writer#flush()
"
	end

	operation 5599746 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.io.Writer#close()
"
	end

	operation 5599874 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5600002 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 5600130 "setTransformer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transformer" type class_ref 618626 // Transformer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setTransformer(Transformer)
"
      end

      operation 5600258 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try's to reset the super class and reset this class for
re-use, so that you don't need to create a new serializer
(mostly for performance reasons).

@return true if the class was successfuly reset.
"
      end

      operation 5600386 "resetToStream"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all of the fields owned by ToStream class

"
      end

      operation 5600514 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the character encoding coming from the xsl:output encoding stylesheet attribute.
@param encoding the character encoding
"
      end

      operation 5602306 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "pubID" type class_ref 128130 // String
	  param inout name "sysID" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement DTDHandler

If this method is called, the serializer is used as a
DTDHandler, which changes behavior how the serializer
handles document entities.
@see org.xml.sax.DTDHandler#notationDecl(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 5602434 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "pubID" type class_ref 128130 // String
	  param inout name "sysID" type class_ref 128130 // String
	  param inout name "notationName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this method is called, the serializer is used as a
DTDHandler, which changes behavior how the serializer
handles document entities.
@see org.xml.sax.DTDHandler#unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 5602562 "DTDprolog"
	private explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A private helper method to output the
@throws SAXException
@throws IOException
"
      end

      operation 5602690 "setDTDEntityExpansion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expand" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If set to false the serializer does not expand DTD entities,
but leaves them as is, the default value is true;
"
      end
    end

    class 791426 "ToTextSAXHandler"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class converts SAX-like event to SAX events for
xsl:output method \"text\".

This class is only to be used internally. This class is not a public API.

@xsl.usage internal
"
      classrelation 2535938 // <generalisation>
	relation 2535938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2535938 // <generalisation>
	  b parent class_ref 790402 // ToSAXHandler
      end

      operation 5608834 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5608962 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endElement(String, String, String)
"
      end

      operation 5609090 "ToTextSAXHandler"
	public explicit_return_type ""
	nparams 3
	  param inout name "hdlr" type class_ref 605954 // ContentHandler
	  param inout name "lex" type class_ref 617602 // LexicalHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5609218 "ToTextSAXHandler"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
"
      end

      operation 5609346 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5609474 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5609602 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getOutputFormat()
"
      end

      operation 5609730 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getOutputStream()
"
      end

      operation 5609858 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getWriter()
"
      end

      operation 5609986 "indent"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing because
the indent attribute is ignored for text output.

"
      end

      operation 5610114 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#reset()
"
      end

      operation 5610242 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DOMSerializer#serialize(Node)
"
      end

      operation 5610370 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setEscaping(boolean)
"
      end

      operation 5610498 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "indent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setIndent(boolean)
"
      end

      operation 5610626 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#setOutputFormat(Properties)
"
      end

      operation 5610754 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#setOutputStream(OutputStream)
"
      end

      operation 5610882 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#setWriter(Writer)
"
      end

      operation 5611010 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttribute(String, String, String, String, String)
"
      end

      operation 5611138 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 128130 // String
	  param inout name "arg4" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#attributeDecl(String, String, String, String, String)
"
      end

      operation 5611266 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#elementDecl(String, String)
"
      end

      operation 5611394 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#externalEntityDecl(String, String, String)
"
      end

      operation 5611522 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#internalEntityDecl(String, String)
"
      end

      operation 5611650 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endPrefixMapping(String)
"
      end

      operation 5611778 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" explicit_type "char"
	multiplicity "[]"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)
"
      end

      operation 5611906 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
@see org.xml.sax.ContentHandler#processingInstruction(String, String)
"
      end

      operation 5612034 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#setDocumentLocator(Locator)
"
      end

      operation 5612162 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#skippedEntity(String)
"
      end

      operation 5612290 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startElement(String, String, String, Attributes)
"
      end

      operation 5612418 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endCDATA()
"
      end

      operation 5612546 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endDTD()
"
      end

      operation 5612674 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#startCDATA()
"
      end

      operation 5612802 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#startEntity(String)
"
      end

      operation 5612930 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "elementNamespaceURI" type class_ref 128130 // String
	  param inout name "elementLocalName" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
@see ExtendedContentHandler#startElement(String)
"
      end

      operation 5613058 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5613186 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
@see org.xml.sax.ContentHandler#endDocument()
"
      end

      operation 5613314 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "characters" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see ExtendedContentHandler#characters(String)
"
      end

      operation 5613442 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characters" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#characters(char[], int, int)
"
      end

      operation 5613570 "addAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
"
      end

      operation 5613698 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5613826 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5613954 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param in name "prefix" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 791554 "ToTextStream"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is not a public API.
It is only public because it is used in other packages.
This class converts SAX or SAX-like calls to a
serialized document for xsl:output method of \"text\".
@xsl.usage internal
"
      classrelation 2536066 // <generalisation>
	relation 2536066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2536066 // <generalisation>
	  b parent class_ref 790786 // ToStream
      end

      operation 5614082 "ToTextStream"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
"
      end

      operation 5614210 "startDocumentInternal"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of a document.

<p>The SAX parser will invoke this method only once, before any
other methods in this interface or in DTDHandler (except for
setDocumentLocator).</p>

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5614338 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of a document.

<p>The SAX parser will invoke this method only once, and it will
be the last method invoked during the parse.  The parser shall
not invoke this method until it has either abandoned parsing
(because of an unrecoverable error) or reached the end of
input.</p>

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5614466 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of an element.

<p>The Parser will invoke this method at the beginning of every
element in the XML document; there will be a corresponding
endElement() event for every startElement() event (even when the
element is empty). All of the element's content will be
reported, in order, before the corresponding endElement()
event.</p>

<p>If the element name has a namespace prefix, the prefix will
still be attached.  Note that the attribute list provided will
contain only attributes with explicit values (specified or
defaulted): #IMPLIED attributes will be omitted.</p>


@param namespaceURI The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param name The qualified name (with prefix), or the
       empty string if qualified names are not available.
@param atts The attributes attached to the element, if any.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #endElement
@see org.xml.sax.AttributeList

@throws org.xml.sax.SAXException
"
      end

      operation 5614594 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of an element.

<p>The SAX parser will invoke this method at the end of every
element in the XML document; there will be a corresponding
startElement() event for every endElement() event (even when the
element is empty).</p>

<p>If the element name has a namespace prefix, the prefix will
still be attached to the name.</p>


@param namespaceURI The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param name The qualified name (with prefix), or the
       empty string if qualified names are not available.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5614722 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #ignorableWhitespace
@see org.xml.sax.Locator
"
      end

      operation 5614850 "charactersRaw"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If available, when the disable-output-escaping attribute is used,
output raw text without escaping.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5614978 "writeNormalizedChars"
	package explicit_return_type "void"
	nparams 4
	  param in name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "useLineSep" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize the characters, but don't escape.  Different from
SerializerToXML#writeNormalizedChars because it does not attempt to do
XML escaping at all.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@param useLineSep true if the operating systems
end-of-line separator should be output rather than a new-line character.

@throws IOException
@throws org.xml.sax.SAXException
"
      end

      operation 5615106 "cdata"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of cdata.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #ignorableWhitespace
@see org.xml.sax.Locator
"
      end

      operation 5615234 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of ignorable whitespace in element content.

<p>Validating Parsers must use this method to report each chunk
of ignorable whitespace (see the W3C XML 1.0 recommendation,
section 2.10): non-validating parsers may also use this method
if they are capable of parsing and using content models.</p>

<p>SAX parsers may return all contiguous whitespace in a single
chunk, or they may split it into several chunks; however, all of
the characters in any single event must come from the same
external entity, so that the Locator provides useful
information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see #characters

@throws org.xml.sax.SAXException
"
      end

      operation 5615362 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a processing instruction.

<p>The Parser will invoke this method once for each processing
instruction found: note that processing instructions may occur
before or after the main document element.</p>

<p>A SAX parser should never report an XML declaration (XML 1.0,
section 2.8) or a text declaration (XML 1.0, section 4.3.1)
using this method.</p>

@param target The processing instruction target.
@param data The processing instruction data, or null if
       none was supplied.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5615490 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a Comment is to be constructed.
Note that Xalan will normally invoke the other version of this method.
%REVIEW% In fact, is this one ever needed, or was it a mistake?

@param   data  The comment data.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5615618 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report an XML comment anywhere in the document.

This callback will be used for comments inside or outside the
document element, including comments in the external DTD
subset (if read).

@param ch An array holding the characters in the comment.
@param start The starting position in the array.
@param length The number of characters to use from the array.
@throws org.xml.sax.SAXException The application may raise an exception.
"
      end

      operation 5615746 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notivication of a entityReference.

@param name non-null reference to the name of the entity.

@throws org.xml.sax.SAXException
"
      end

      operation 5615874 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttribute(String, String, String, String, String)
"
      end

      operation 5616002 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endCDATA()
"
      end

      operation 5616130 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5616258 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "elementNamespaceURI" type class_ref 128130 // String
	  param inout name "elementLocalName" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
"
      end

      operation 5616386 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "characters" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
"
      end

      operation 5616514 "addAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
"
      end

      operation 5616642 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a unique attribute
"
      end

      operation 5616770 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5616898 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5617026 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param in name "prefix" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5617154 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 791682 "ToUnknownStream"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class wraps another SerializationHandler. The wrapped object will either
handler XML or HTML, which is not known until a little later when the first XML
tag is seen.  If the first tag is <html> then the wrapped object is an HTML
handler, otherwise it is an XML handler.

This class effectively caches the first few calls to it then passes them
on to the wrapped handler (once it exists).  After that subsequent calls a
simply passed directly to the wrapped handler.

The user of this class doesn't know if the output is ultimatley XML or HTML.

This class is not a public API, it is public because it is used within Xalan.
@xsl.usage internal
"
      classrelation 2536194 // <generalisation>
	relation 2536194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2536194 // <generalisation>
	  b parent class_ref 789506 // SerializerBase
      end

      classrelation 2536322 // m_handler (<unidirectional association>)
	relation 2536322 --->
	  a role_name "m_handler" private
	    comment "
The wrapped handler, initially XML but possibly switched to HTML

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2536322 // m_handler (<unidirectional association>)
	  b parent class_ref 590210 // SerializationHandler
      end

      classrelation 2536450 // EMPTYSTRING (<unidirectional association>)
	relation 2536450 --->
	  a role_name "EMPTYSTRING" init_value " \"\"" class_relation const_relation private
	    comment "
A String with no characters

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2536450 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1222146 "m_wrapped_handler_not_initialized"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if the underlying handler (XML or HTML) is fully initialized

"
      end

      classrelation 2536578 // m_firstElementPrefix (<unidirectional association>)
	relation 2536578 --->
	  a role_name "m_firstElementPrefix" private
	    comment "
the prefix of the very first tag in the document

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2536578 // m_firstElementPrefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2536706 // m_firstElementName (<unidirectional association>)
	relation 2536706 --->
	  a role_name "m_firstElementName" private
	    comment "
the element name (including any prefix) of the very first tag in the document

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2536706 // m_firstElementName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2536834 // m_firstElementURI (<unidirectional association>)
	relation 2536834 --->
	  a role_name "m_firstElementURI" private
	    comment "
the namespace URI associated with the first element

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2536834 // m_firstElementURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2536962 // m_firstElementLocalName (<unidirectional association>)
	relation 2536962 --->
	  a role_name "m_firstElementLocalName" init_value " null" private
	    comment "
the local name (no prefix) associated with the first element

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2536962 // m_firstElementLocalName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1222274 "m_firstTagNotEmitted"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if the first tag has been emitted to the wrapped handler

"
      end

      classrelation 2537090 // m_namespaceURI (<unidirectional association>)
	relation 2537090 --->
	  a role_name "m_namespaceURI" init_value " null" private
	    comment "
A collection of namespace URI's (only for first element).
_namespacePrefix has the matching prefix for these URI's

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2537090 // m_namespaceURI (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2537218 // m_namespacePrefix (<unidirectional association>)
	relation 2537218 --->
	  a role_name "m_namespacePrefix" init_value " null" private
	    comment "
A collection of namespace Prefix (only for first element)
_namespaceURI has the matching URIs for these prefix'

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2537218 // m_namespacePrefix (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1222402 "m_needToCallStartDocument"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if startDocument() was called before the underlying handler
was initialized

"
      end

      attribute 1222530 "m_setVersion_called"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if setVersion() was called before the underlying handler
was initialized

"
      end

      attribute 1222658 "m_setDoctypeSystem_called"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if setDoctypeSystem() was called before the underlying handler
was initialized

"
      end

      attribute 1222786 "m_setDoctypePublic_called"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if setDoctypePublic() was called before the underlying handler
was initialized

"
      end

      attribute 1222914 "m_setMediaType_called"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "true if setMediaType() was called before the underlying handler
was initialized

"
      end

      operation 5617282 "ToUnknownStream"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
Initially this object wraps an XML Stream object, so _handler is never null.
That may change later to an HTML Stream object.
"
      end

      operation 5617410 "asContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#asContentHandler()
@return the wrapped XML or HTML handler
"
      end

      operation 5617538 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#close()
"
      end

      operation 5617666 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getOutputFormat()
@return the properties of the underlying handler
"
      end

      operation 5617794 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getOutputStream()
@return the OutputStream of the underlying XML or HTML handler
"
      end

      operation 5617922 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getWriter()
@return the Writer of the underlying XML or HTML handler
"
      end

      operation 5618050 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "passes the call on to the underlying HTML or XML handler
@see Serializer#reset()
@return ???
"
      end

      operation 5618178 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the DOM node to output
@param node the DOM node to transform to output
@see DOMSerializer#serialize(Node)

"
      end

      operation 5618306 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setEscaping(boolean)
"
      end

      operation 5618434 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the properties of the handler
@param format the output properties to set
@see Serializer#setOutputFormat(Properties)
"
      end

      operation 5618562 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the output stream to write to
@param output the OutputStream to write to
@see Serializer#setOutputStream(OutputStream)
"
      end

      operation 5618690 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the writer to write to
@param writer the writer to write to
@see Serializer#setWriter(Writer)
"
      end

      operation 5618818 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an attribute to the currenly open tag
@param uri the URI of a namespace
@param localName the attribute name, without prefix
@param rawName the attribute name, with prefix (if any)
@param type the type of the attribute, typically \"CDATA\"
@param value the value of the parameter
@param XSLAttribute true if this attribute is coming from an xsl:attribute element
@see ExtendedContentHandler#addAttribute(String, String, String, String, String)
"
      end

      operation 5618946 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an attribute to the currenly open tag
@param uri the URI of a namespace
@param localName the attribute name, without prefix
@param rawName the attribute name, with prefix (if any)
@param type the type of the attribute, typically \"CDATA\"
@param value the value of the parameter
@param XSLAttribute true if this attribute is coming from an xsl:attribute element
@see ExtendedContentHandler#addAttribute(String, String, String, String, String)
"
      end

      operation 5619074 "addAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an attribute to the currenly open tag
@param rawName the attribute name, with prefix (if any)
@param value the value of the parameter
@see ExtendedContentHandler#addAttribute(String, String)
"
      end

      operation 5619202 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a unique attribute to the currenly open tag
"
      end

      operation 5619330 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the String to a character array and calls the SAX method
characters(char[],int,int);

@see ExtendedContentHandler#characters(String)
"
      end

      operation 5619458 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5619586 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startPrefixMapping(String, String)
@param prefix The prefix that maps to the URI
@param uri The URI for the namespace
"
      end

      operation 5619714 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used when a prefix/uri namespace mapping
is indicated after the element was started with a
startElement() and before and endElement().
startPrefixMapping(prefix,uri) would be used before the
startElement() call.
@param uri the URI of the namespace
@param prefix the prefix associated with the given URI.

@see ExtendedContentHandler#namespaceAfterStartElement(String, String)
"
      end

      operation 5619842 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5619970 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method cannot be cached because default is different in
HTML and XML (we need more than a boolean).
"
      end

      operation 5620098 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startDocument()
"
      end

      operation 5620226 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5620354 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5620482 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5620610 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see ExtendedLexicalHandler#comment(String)
"
      end

      operation 5620738 "getDoctypePublic"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getDoctypePublic()
"
      end

      operation 5620866 "getDoctypeSystem"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getDoctypeSystem()
"
      end

      operation 5620994 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getEncoding()
"
      end

      operation 5621122 "getIndent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getIndent()
"
      end

      operation 5621250 "getIndentAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getIndentAmount()
"
      end

      operation 5621378 "getMediaType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getMediaType()
"
      end

      operation 5621506 "getOmitXMLDeclaration"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getOmitXMLDeclaration()
"
      end

      operation 5621634 "getStandalone"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getStandalone()
"
      end

      operation 5621762 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#getVersion()
"
      end

      operation 5621890 "setDoctype"
	public explicit_return_type "void"
	nparams 2
	  param inout name "system" type class_ref 128130 // String
	  param inout name "pub" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setDoctype(String, String)
"
      end

      operation 5622018 "setDoctypePublic"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctype" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the doctype in the underlying XML handler. Remember that this method
was called, just in case we need to transfer this doctype to an HTML handler
@param doctype the public doctype to set
@see XSLOutputAttributes#setDoctypePublic(String)
"
      end

      operation 5622146 "setDoctypeSystem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doctype" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the doctype in the underlying XML handler. Remember that this method
was called, just in case we need to transfer this doctype to an HTML handler
@param doctype the system doctype to set
@see XSLOutputAttributes#setDoctypeSystem(String)
"
      end

      operation 5622274 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#setEncoding(String)
"
      end

      operation 5622402 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "indent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#setIndent(boolean)
"
      end

      operation 5622530 "setIndentAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
"
      end

      operation 5622658 "setMediaType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mediaType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setMediaType(String)
"
      end

      operation 5622786 "setOmitXMLDeclaration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#setOmitXMLDeclaration(boolean)
"
      end

      operation 5622914 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "standalone" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see XSLOutputAttributes#setStandalone(String)
"
      end

      operation 5623042 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 128130 // String
	  param inout name "arg4" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see XSLOutputAttributes#setVersion(String)


Pass the call on to the underlying handler
@see org.xml.sax.ext.DeclHandler#attributeDecl(String, String, String, String, String)
"
      end

      operation 5623170 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.DeclHandler#elementDecl(String, String)
"
      end

      operation 5623298 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.DeclHandler#externalEntityDecl(String, String, String)
"
      end

      operation 5623426 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.DeclHandler#internalEntityDecl(String, String)
"
      end

      operation 5623554 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characters" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#characters(char[], int, int)
"
      end

      operation 5623682 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#endDocument()
"
      end

      operation 5623810 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#endElement(String, String, String)
"
      end

      operation 5623938 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#endPrefixMapping(String)
"
      end

      operation 5624066 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)
"
      end

      operation 5624194 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#processingInstruction(String, String)
"
      end

      operation 5624322 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#setDocumentLocator(Locator)
"
      end

      operation 5624450 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ContentHandler#skippedEntity(String)
"
      end

      operation 5624578 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#comment(char[], int, int)
"
      end

      operation 5624706 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#endCDATA()
"
      end

      operation 5624834 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#endDTD()
"
      end

      operation 5624962 "endEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#endEntity(String)
"
      end

      operation 5625090 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#startCDATA()
"
      end

      operation 5625218 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#startDTD(String, String, String)
"
      end

      operation 5625346 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass the call on to the underlying handler
@see org.xml.sax.ext.LexicalHandler#startEntity(String)
"
      end

      operation 5625474 "initStreamOutput"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the wrapped output stream (XML or HTML).
If the stream handler should be HTML, then replace the XML handler with
an HTML handler. After than send the starting method calls that were cached
to the wrapped handler.

"
      end

      operation 5625602 "emitFirstTag"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5625730 "getLocalNameUnknown"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function for calls to local-name().

Don't want to override static function on SerializerBase
So added Unknown suffix to method name.
"
      end

      operation 5625858 "getPrefixPartUnknown"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to return prefix

Don't want to override static function on SerializerBase
So added Unknown suffix to method name.
"
      end

      operation 5625986 "isFirstElemHTML"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if the firts element in the document is <html> or <HTML>
This uses the cached first element name, first element prefix and the
cached namespaces from previous method calls

@return true if the first element is an opening <html> tag
"
      end

      operation 5626114 "asDOMSerializer"
	public return_type class_ref 618370 // DOMSerializer
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#asDOMSerializer()
"
      end

      operation 5626242 "setCdataSectionElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "URI_and_localNames" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param URI_and_localNames Vector a list of pairs of URI/localName
specified in the cdata-section-elements attribute.
@see SerializationHandler#setCdataSectionElements(java.util.Vector)
"
      end

      operation 5626370 "addAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#addAttributes(org.xml.sax.Attributes)
"
      end

      operation 5626498 "getNamespaceMappings"
	public return_type class_ref 617218 // NamespaceMappings
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current namespace mappings.
Simply returns the mappings of the wrapped handler.
@see ExtendedContentHandler#getNamespaceMappings()
"
      end

      operation 5626626 "flushPending"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#flushPending()
"
      end

      operation 5626754 "flush"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5626882 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#getPrefix
"
      end

      operation 5627010 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#entityReference(java.lang.String)
"
      end

      operation 5627138 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "isElement" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#getNamespaceURI(java.lang.String, boolean)
"
      end

      operation 5627266 "getNamespaceURIFromPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5627394 "setTransformer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 618626 // Transformer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5627522 "getTransformer"
	public return_type class_ref 618626 // Transformer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5627650 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setContentHandler(org.xml.sax.ContentHandler)
"
      end

      operation 5627778 "setSourceLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to set the source locator, which might be used to
generated an error message.
@param locator the source locator

@see ExtendedContentHandler#setSourceLocator(javax.xml.transform.SourceLocator)
"
      end

      operation 5627906 "firePseudoElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 791810 "ToXMLSAXHandler"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class receives notification of SAX-like events, and with gathered
information over these calls it will invoke the equivalent SAX methods
on a handler, the ultimate xsl:output method is known to be \"xml\".

This class is not a public API, it is only public because it is used by Xalan.
@xsl.usage internal
"
      classrelation 2537346 // <generalisation>
	relation 2537346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2537346 // <generalisation>
	  b parent class_ref 790402 // ToSAXHandler
      end

      attribute 1223042 "m_escapeSetting"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Keeps track of whether output escaping is currently enabled

"
      end

      operation 5628034 "ToXMLSAXHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5628162 "getOutputFormat"
	public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getOutputFormat()
"
      end

      operation 5628290 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getOutputStream()
"
      end

      operation 5628418 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#getWriter()
"
      end

      operation 5628546 "indent"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Do nothing for SAX.
"
      end

      operation 5628674 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DOMSerializer#serialize(Node)
"
      end

      operation 5628802 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "escape" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see SerializationHandler#setEscaping(boolean)
"
      end

      operation 5628930 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#setOutputFormat(Properties)
"
      end

      operation 5629058 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#setOutputStream(OutputStream)
"
      end

      operation 5629186 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Serializer#setWriter(Writer)
"
      end

      operation 5629314 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	  param inout name "arg3" type class_ref 128130 // String
	  param inout name "arg4" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#attributeDecl(String, String, String, String, String)
"
      end

      operation 5629442 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#elementDecl(String, String)
"
      end

      operation 5629570 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#externalEntityDecl(String, String, String)
"
      end

      operation 5629698 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "arg0" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.DeclHandler#internalEntityDecl(String, String)
"
      end

      operation 5629826 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives notification of the end of the document.
@see org.xml.sax.ContentHandler#endDocument()
"
      end

      operation 5629954 "closeStartTag"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when all the data needed for a call to the
SAX handler's startElement() method has been gathered.
"
      end

      operation 5630082 "closeCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes ane open cdata tag, and
unlike the this.endCDATA() method (from the LexicalHandler) interface,
this \"internal\" method will send the endCDATA() call to the wrapped
handler.

"
      end

      operation 5630210 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endElement(String, String, String)
"
      end

      operation 5630338 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endPrefixMapping(String)
"
      end

      operation 5630466 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" explicit_type "char"
	multiplicity "[]"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)
"
      end

      operation 5630594 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#setDocumentLocator(Locator)
"
      end

      operation 5630722 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#skippedEntity(String)
"
      end

      operation 5630850 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startPrefixMapping(String, String)
@param prefix The prefix that maps to the URI
@param uri The URI for the namespace
"
      end

      operation 5630978 "startPrefixMapping"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "shouldFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remember the prefix/uri mapping at the current nested element depth.

@see org.xml.sax.ContentHandler#startPrefixMapping(String, String)
@param prefix The prefix that maps to the URI
@param uri The URI for the namespace
@param shouldFlush a flag indicating if the mapping applies to the
current element or an up coming child (not used).
"
      end

      operation 5631106 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "arg0" explicit_type "char"
	multiplicity "[]"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#comment(char[], int, int)
"
      end

      operation 5631234 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endCDATA()
"
      end

      operation 5631362 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#endDTD()
"
      end

      operation 5631490 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ext.LexicalHandler#startEntity(String)
"
      end

      operation 5631618 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#characters(String)
"
      end

      operation 5631746 "ToXMLSAXHandler"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////// from XSLTC //////////////"
      end

      operation 5631874 "ToXMLSAXHandler"
	public explicit_return_type ""
	nparams 3
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param inout name "lex" type class_ref 617602 // LexicalHandler
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5632002 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "elementNamespaceURI" type class_ref 128130 // String
	  param inout name "elementLocalName" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start an element in the output document. This might be an XML element
(<elem>data</elem> type) or a CDATA section.
"
      end

      operation 5632130 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5632258 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5632386 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5632514 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param in name "prefix" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a namespace declaration in the output document. The namespace
declaration will not be include if the namespace is already in scope
with the same prefix.
"
      end

      operation 5632642 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see org.xml.sax.ContentHandler#processingInstruction(String, String)
Send a processing instruction to the output document
"
      end

      operation 5632770 "popNamespace"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Undeclare the namespace that is currently pointed to by a given
prefix. Inform SAX handler if prefix was previously mapped.
"
      end

      operation 5632898 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5633026 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startElement(String, String, String, Attributes)
"
      end

      operation 5633154 "ensurePrefixIsDeclared"
	private explicit_return_type "void"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5633282 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "XSLAttribute" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given attribute to the set of attributes, and also makes sure
that the needed prefix/uri mapping is declared, but only if there is a
currently open element.

@param uri the URI of the attribute
@param localName the local name of the attribute
@param rawName    the qualified name of the attribute
@param type the type of the attribute (probably CDATA)
@param value the value of the attribute
@param XSLAttribute true if this attribute is coming from an xsl:attribute element
@see ExtendedContentHandler#addAttribute(String, String, String, String, String)
"
      end

      operation 5633410 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try's to reset the super class and reset this class for
re-use, so that you don't need to create a new serializer
(mostly for performance reasons).

@return true if the class was successfuly reset.
@see Serializer#reset()
"
      end

      operation 5633538 "resetToXMLSAXHandler"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all of the fields owned by ToXMLSAXHandler class

"
      end
    end

    class 791938 "ToXMLStream"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class converts SAX or SAX-like calls to a
serialized xml document.  The xsl:output method is \"xml\".

This class is used explicitly in code generated by XSLTC,
so it is \"public\", but it should
be viewed as internal or package private, this is not an API.

@xsl.usage internal
"
      classrelation 2537474 // <generalisation>
	relation 2537474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2537474 // <generalisation>
	  b parent class_ref 790786 // ToStream
      end

      attribute 1223170 "m_cdataTagOpen"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "remembers if we need to write out \"]]>\" to close the CDATA

"
      end

      classrelation 2537602 // m_xmlcharInfo (<unidirectional association>)
	relation 2537602 --->
	  a role_name "m_xmlcharInfo" init_value "
//      new CharInfo(CharInfo.XML_ENTITIES_RESOURCE);
        CharInfo.getCharInfoInternal(CharInfo.XML_ENTITIES_RESOURCE, Method.XML)" class_relation private
	    comment "
Map that tells which XML characters should have special treatment, and it
 provides character to entity name lookup.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2537602 // m_xmlcharInfo (<unidirectional association>)
	  b parent class_ref 787842 // CharInfo
      end

      operation 5633666 "ToXMLStream"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
"
      end

      operation 5633794 "CopyFrom"
	public explicit_return_type "void"
	nparams 1
	  param inout name "xmlListener" type class_ref 791938 // ToXMLStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy properties from another SerializerToXML.

@param xmlListener non-null reference to a SerializerToXML object.
"
      end

      operation 5633922 "startDocumentInternal"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of a document.

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5634050 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of a document.

@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5634178 "startPreserving"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a whitespace preserving section. All characters printed
within a preserving section are printed without indentation and
without consolidating multiple spaces. This is equivalent to
the <tt>xml:space=&quot;preserve&quot;</tt> attribute. Only XML
and HTML serializers need to support this method.
<p>
The contents of the whitespace preserving section will be delivered
through the regular <tt>characters</tt> event.

@throws org.xml.sax.SAXException
"
      end

      operation 5634306 "endPreserving"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ends a whitespace preserving section.

@see #startPreserving

@throws org.xml.sax.SAXException
"
      end

      operation 5634434 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a processing instruction.

@param target The processing instruction target.
@param data The processing instruction data, or null if
       none was supplied.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.

@throws org.xml.sax.SAXException
"
      end

      operation 5634562 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notivication of a entityReference.

@param name The name of the entity.

@throws org.xml.sax.SAXException
"
      end

      operation 5634690 "addUniqueAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to add an attribute to the currently open element.
The caller has guaranted that this attribute is unique, which means that it
not been seen before and will not be seen again.

@param name the qualified name of the attribute
@param value the value of the attribute which can contain only
ASCII printable characters characters in the range 32 to 127 inclusive.
@param flags the bit values of this integer give optimization information.
"
      end

      operation 5634818 "addAttribute"
	public explicit_return_type "void"
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "xslAttribute" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an attribute to the current element.
@param uri the URI associated with the element name
@param localName local part of the attribute name
@param rawName   prefix:localName
@param type
@param value the value of the attribute
@param xslAttribute true if this attribute is from an xsl:attribute,
false if declared within the elements opening tag.
@throws SAXException
"
      end

      operation 5634946 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExtendedContentHandler#endElement(String)
"
      end

      operation 5635074 "namespaceAfterStartElement"
	public explicit_return_type "void"
	nparams 2
	  param in name "prefix" type class_ref 128130 // String
	  param in name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to notify the serializer of a namespace mapping (or node)
that applies to the current element whose startElement() call has already been seen.
The official SAX startPrefixMapping(prefix,uri) is to define a mapping for a child
element that is soon to be seen with a startElement() call. The official SAX call
does not apply to the current element, hence the reason for this method.
"
      end

      operation 5635202 "pushNamespace"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From XSLTC
Declare a prefix to point to a namespace URI. Inform SAX handler
if this is a new prefix mapping.
"
      end

      operation 5635330 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try's to reset the super class and reset this class for
re-use, so that you don't need to create a new serializer
(mostly for performance reasons).

@return true if the class was successfuly reset.
"
      end

      operation 5635458 "resetToXMLStream"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all of the fields owned by ToStream class

"
      end

      operation 5635586 "getXMLVersion"
	private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method checks for the XML version of output document.
If XML version of output document is not specified, then output
document is of version XML 1.0.
If XML version of output doucment is specified, but it is not either
XML 1.0 or XML 1.1, a warning message is generated, the XML Version of
output document is set to XML 1.0 and processing continues.
@return string (XML version)
"
      end
    end

    class 792066 "TreeWalker"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class does a pre-order walk of the DOM tree, calling a ContentHandler
interface as it goes.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

@xsl.usage internal
"
      classrelation 2537730 // m_contentHandler (<unidirectional association>)
	relation 2537730 --->
	  a role_name "m_contentHandler" const_relation private
	    comment " Local reference to a ContentHandler          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2537730 // m_contentHandler (<unidirectional association>)
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2537858 // m_Serializer (<unidirectional association>)
	relation 2537858 --->
	  a role_name "m_Serializer" const_relation private
	    comment "
If m_contentHandler is a SerializationHandler, then this is
a reference to the same object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2537858 // m_Serializer (<unidirectional association>)
	  b parent class_ref 590210 // SerializationHandler
      end

      classrelation 2537986 // m_dh (<unidirectional association>)
	relation 2537986 --->
	  a role_name "m_dh" const_relation protected
	    comment " ARGHH!!  JAXP Uses Xerces without setting the namespace processing to ON!
 DOM2Helper m_dh = new DOM2Helper();
 DomHelper for this TreeWalker          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2537986 // m_dh (<unidirectional association>)
	  b parent class_ref 792194 // DOM2Helper
      end

      classrelation 2538114 // m_locator (<unidirectional association>)
	relation 2538114 --->
	  a role_name "m_locator" init_value " new LocatorImpl()" const_relation private
	    comment " Locator object for this TreeWalker          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2538114 // m_locator (<unidirectional association>)
	  b parent class_ref 792322 // LocatorImpl
      end

      operation 5635970 "getContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ContentHandler used for the tree walk.

@return the ContentHandler used for the tree walk
"
      end

      operation 5636098 "TreeWalker"
	public explicit_return_type ""
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5636226 "TreeWalker"
	public explicit_return_type ""
	nparams 2
	  param inout name "contentHandler" type class_ref 605954 // ContentHandler
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
@param   contentHandler The implemention of the
contentHandler operation (toXMLString, digest, ...)
"
      end

      operation 5636354 "traverse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pos" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a pre-order traversal non-recursive style.

Note that TreeWalker assumes that the subtree is intended to represent
a complete (though not necessarily well-formed) document and, during a
traversal, startDocument and endDocument will always be issued to the
SAX listener.

@param pos Node in the tree where to start traversal

@throws TransformerException
"
      end

      operation 5636482 "traverse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pos" type class_ref 317570 // Node
	  param inout name "top" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a pre-order traversal non-recursive style.

Note that TreeWalker assumes that the subtree is intended to represent
a complete (though not necessarily well-formed) document and, during a
traversal, startDocument and endDocument will always be issued to the
SAX listener.

@param pos Node in the tree where to start traversal
@param top Node in the tree where to end traversal

@throws TransformerException
"
      end

      attribute 1223298 "nextIsRaw"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating whether following text to be processed is raw text          
"
      end

      operation 5636610 "dispatachChars"
	private explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Optimized dispatch of characters.
"
      end

      operation 5636738 "startNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start processing given node


@param node Node to process

@throws org.xml.sax.SAXException
"
      end

      operation 5636866 "endNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End processing of given node


@param node Node we just finished processing

@throws org.xml.sax.SAXException
"
      end
    end

    class 792450 "Version"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Administrative class to keep track of the version number of
the Serializer release.
<P>This class implements the upcoming standard of having
org.apache.project-name.Version.getVersion() be a standard way
to get version information.</P>
@xsl.usage general
"
      operation 5636994 "getVersion"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the basic version string for the current Serializer.
Version String formatted like
<CODE>\"<B>Serializer</B> <B>Java</B> v.r[.dd| <B>D</B>nn]\"</CODE>.

Futurework: have this read version info from jar manifest.

@return String denoting our current version
"
      end

      operation 5637122 "_main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "argv" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the processor version to the command line.

@param argv command line arguments, unused.
"
      end

      operation 5637250 "getProduct"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Name of product: Serializer.
"
      end

      operation 5637378 "getImplementationLanguage"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implementation Language: Java.
"
      end

      operation 5637506 "getMajorVersionNum"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Major version number.
Version number. This changes only when there is a
         significant, externally apparent enhancement from
         the previous release. 'n' represents the n'th
         version.

         Clients should carefully consider the implications
         of new versions as external interfaces and behaviour
         may have changed.
"
      end

      operation 5637634 "getReleaseVersionNum"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release Number.
Release number. This changes when:
           -  a new set of functionality is to be added, eg,
              implementation of a new W3C specification.
           -  API or behaviour change.
           -  its designated as a reference release.
"
      end

      operation 5637762 "getMaintenanceVersionNum"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maintenance Drop Number.
Optional identifier used to designate maintenance
         drop applied to a specific release and contains
         fixes for defects reported. It maintains compatibility
         with the release and contains no API changes.
         When missing, it designates the final and complete
         development drop for a release.
"
      end

      operation 5637890 "getDevelopmentVersionNum"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Development Drop Number.
Optional identifier designates development drop of
         a specific release. D01 is the first development drop
         of a new release.

         Development drops are works in progress towards a
         compeleted, final release. A specific development drop
         may not completely implement all aspects of a new
         feature, which may take several development drops to
         complete. At the point of the final drop for the
         release, the D suffix will be omitted.

         Each 'D' drops can contain functional enhancements as
         well as defect fixes. 'D' drops may not be as stable as
         the final releases.
"
      end
    end

    class 792578 "WriterToASCI"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class writes ASCII to a byte stream as quickly as possible.  For the
moment it does not do buffering, though I reserve the right to do some
buffering down the line if I can prove that it will be faster even if the
output stream is buffered.

This class is only used internally within Xalan.

@xsl.usage internal
"
      classrelation 2538242 // <generalisation>
	relation 2538242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2538242 // <generalisation>
	  b parent class_ref 428034 // Writer
      end

      classrelation 2538370 // <realization>
	relation 2538370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2538370 // <realization>
	  b parent class_ref 790146 // WriterChain
      end

      classrelation 2538498 // m_os (<unidirectional association>)
	relation 2538498 --->
	  a role_name "m_os" const_relation private
	    comment " The byte stream to write to.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2538498 // m_os (<unidirectional association>)
	  b parent class_ref 151298 // OutputStream
      end

      operation 5638018 "WriterToASCI"
	public explicit_return_type ""
	nparams 1
	  param inout name "os" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an unbuffered ASCII writer.


@param os The byte stream to write to.
"
      end

      operation 5638146 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a portion of an array of characters.

@param  chars  Array of characters
@param  start   Offset from which to start writing characters
@param  length   Number of characters to write

@exception  IOException  If an I/O error occurs

@throws java.io.IOException
"
      end

      operation 5638274 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a single character.  The character to be written is contained in
the 16 low-order bits of the given integer value; the 16 high-order bits
are ignored.

<p> Subclasses that intend to support efficient single-character output
should override this method.

@param c  int specifying a character to be written.
@exception  IOException  If an I/O error occurs
"
      end

      operation 5638402 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a string.

@param  s String to be written

@exception  IOException  If an I/O error occurs
"
      end

      operation 5638530 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the stream.  If the stream has saved any characters from the
various write() methods in a buffer, write them immediately to their
intended destination.  Then, if that destination is another character or
byte stream, flush it.  Thus one flush() invocation will flush all the
buffers in a chain of Writers and OutputStreams.

@exception  IOException  If an I/O error occurs
"
      end

      operation 5638658 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the stream, flushing it first.  Once a stream has been closed,
further write() or flush() invocations will cause an IOException to be
thrown.  Closing a previously-closed stream, however, has no effect.

@exception  IOException  If an I/O error occurs
"
      end

      operation 5638786 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the output stream where the events will be serialized to.

@return reference to the result stream, or null of only a writer was
set.
"
      end

      operation 5638914 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the writer that this writer directly chains to.
"
      end
    end

    class 792706 "WriterToUTF8Buffered"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class writes unicode characters to a byte stream (java.io.OutputStream)
as quickly as possible. It buffers the output in an internal
buffer which must be flushed to the OutputStream when done. This flushing
is done via the close() flush() or flushBuffer() method.

This class is only used internally within Xalan.

@xsl.usage internal
"
      classrelation 2538626 // <generalisation>
	relation 2538626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2538626 // <generalisation>
	  b parent class_ref 428034 // Writer
      end

      classrelation 2538754 // <realization>
	relation 2538754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2538754 // <realization>
	  b parent class_ref 790146 // WriterChain
      end

      attribute 1223426 "BYTES_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value "16*1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of bytes that the byte buffer can hold.
This is a fixed constant is used rather than m_outputBytes.lenght for performance.

"
      end

      attribute 1223554 "CHARS_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value "(BYTES_MAX/3)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of characters that the character buffer can hold.
This is 1/3 of the number of bytes because UTF-8 encoding
can expand one unicode character by up to 3 bytes.

"
      end

      classrelation 2538882 // m_os (<unidirectional association>)
	relation 2538882 --->
	  a role_name "m_os" const_relation private
	    comment " private static final int
 The byte stream to write to. (sc & sb remove final to compile in JDK 1.1.8) 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2538882 // m_os (<unidirectional association>)
	  b parent class_ref 151298 // OutputStream
      end

      attribute 1223682 "m_outputBytes"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The internal buffer where data is stored.
(sc & sb remove final to compile in JDK 1.1.8)

"
      end

      attribute 1223810 "m_inputChars"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1223938 "count"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of valid bytes in the buffer. This value is always
in the range <tt>0</tt> through <tt>m_outputBytes.length</tt>; elements
<tt>m_outputBytes[0]</tt> through <tt>m_outputBytes[count-1]</tt> contain valid
byte data.

"
      end

      operation 5639042 "WriterToUTF8Buffered"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an buffered UTF-8 writer.


@param   out    the underlying output stream.

@throws UnsupportedEncodingException
"
      end

      operation 5639170 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an buffered UTF-8 writer to write data to the
specified underlying output stream with the specified buffer
size.

@param   out    the underlying output stream.
@param   size   the buffer size.
@exception IllegalArgumentException if size <= 0.

  public WriterToUTF8Buffered(final OutputStream out, final int size)
  {

    m_os = out;

    if (size <= 0)
    {
      throw new IllegalArgumentException(
        SerializerMessages.createMessage(SerializerErrorResources.ER_BUFFER_SIZE_LESSTHAN_ZERO, null)); //\"Buffer size <= 0\");
    }

    m_outputBytes = new byte[size];
    count = 0;
  }

Write a single character.  The character to be written is contained in
the 16 low-order bits of the given integer value; the 16 high-order bits
are ignored.

<p> Subclasses that intend to support efficient single-character output
should override this method.

@param c  int specifying a character to be written.
@exception  IOException  If an I/O error occurs
"
      end

      operation 5639298 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a portion of an array of characters.

@param  chars  Array of characters
@param  start   Offset from which to start writing characters
@param  length   Number of characters to write

@exception  IOException  If an I/O error occurs

@throws java.io.IOException
"
      end

      operation 5639426 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a string.

@param  s  String to be written

@exception  IOException  If an I/O error occurs
"
      end

      operation 5639554 "flushBuffer"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the internal buffer

@throws IOException
"
      end

      operation 5639682 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the stream.  If the stream has saved any characters from the
various write() methods in a buffer, write them immediately to their
intended destination.  Then, if that destination is another character or
byte stream, flush it.  Thus one flush() invocation will flush all the
buffers in a chain of Writers and OutputStreams.

@exception  IOException  If an I/O error occurs

@throws java.io.IOException
"
      end

      operation 5639810 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the stream, flushing it first.  Once a stream has been closed,
further write() or flush() invocations will cause an IOException to be
thrown.  Closing a previously-closed stream, however, has no effect.

@exception  IOException  If an I/O error occurs

@throws java.io.IOException
"
      end

      operation 5639938 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the output stream where the events will be serialized to.

@return reference to the result stream, or null of only a writer was
set.
"
      end

      operation 5640066 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 152194 "serializer"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 430082 "ExtendedContentHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.SourceLocator;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 617090 // ExtendedContentHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ExtendedContentHandler.java,v 1.2.4.1 2005/09/15 08:15:17 suresh_emailid Exp $
"
    end

    artifact 430338 "ExtendedLexicalHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 617474 // ExtendedLexicalHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ExtendedLexicalHandler.java,v 1.2.4.1 2005/09/15 08:15:18 suresh_emailid Exp $
"
    end

    artifact 430466 "XSLOutputAttributes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 617730 // XSLOutputAttributes
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XSLOutputAttributes.java,v 1.2.4.1 2005/09/15 08:15:32 suresh_emailid Exp $
"
    end

    artifact 430978 "DOMSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 618370 // DOMSerializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DOMSerializer.java,v 1.2.4.1 2005/09/15 08:15:15 suresh_emailid Exp $
"
    end

    artifact 431106 "Serializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Properties;
import org.xml.sax.ContentHandler;
${definition}"
      associated_elems
	class_ref 618498 // Serializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Serializer.java,v 1.2.4.1 2005/09/15 08:15:22 suresh_emailid Exp $
"
    end

    artifact 431234 "SerializationHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.xml.transform.Transformer;
import org.w3c.dom.Node;
import org.xml.sax.ContentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.ext.DeclHandler;
${definition}"
      associated_elems
	class_ref 590210 // SerializationHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializationHandler.java,v 1.2.4.1 2005/09/15 08:15:22 suresh_emailid Exp $
"
    end

    artifact 431362 "EmptySerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Properties;
import java.util.Vector;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.Transformer;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_elems
	class_ref 616962 // EmptySerializer
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: EmptySerializer.java,v 1.2.4.1 2005/09/15 08:15:16 suresh_emailid Exp $
"
    end

    artifact 556802 "AttributesImplSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.Map;
import org.xml.sax.Attributes;
import org.xml.sax.helpers.AttributesImpl;
${definition}"
      associated_elems
	class_ref 787714 // AttributesImplSerializer
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: AttributesImplSerializer.java,v 1.2.4.1 2005/09/15 08:15:14 suresh_emailid Exp $
"
    end

    artifact 556930 "CharInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.SystemIDResolver;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import com.sun.org.apache.xml.internal.serializer.utils.WrappedRuntimeException;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import javax.xml.transform.TransformerException;
${definition}"
      associated_elems
	class_ref 787842 // CharInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: CharInfo.java,v 1.2.4.1 2005/09/15 08:15:14 suresh_emailid Exp $
"
    end

    artifact 557058 "ElemContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 788098 // ElemContext
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ElemContext.java,v 1.2.4.1 2005/09/15 08:15:15 suresh_emailid Exp $
"
    end

    artifact 557186 "ElemDesc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.serializer.utils.StringToIntTable;
${definition}"
      associated_elems
	class_ref 602754 // ElemDesc
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ElemDesc.java,v 1.2.4.1 2005/09/15 08:15:15 suresh_emailid Exp $
"
    end

    artifact 557314 "EncodingInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.UnsupportedEncodingException;
${definition}"
      associated_elems
	class_ref 788354 // EncodingInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: EncodingInfo.java,v 1.2.4.2 2005/09/15 12:01:24 suresh_emailid Exp $
"
    end

    artifact 557442 "Encodings"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.io.BufferedWriter;
import java.net.URL;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Properties;
import java.util.StringTokenizer;
import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Collections;
import java.util.Map;
import java.util.Map.Entry;
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
${definition}"
      associated_elems
	class_ref 788738 // Encodings
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Encodings.java,v 1.3 2005/09/28 13:49:04 pvedula Exp $
"
    end

    artifact 557570 "Method"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 788994 // Method
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Method.java,v 1.2.4.1 2005/09/15 08:15:19 suresh_emailid Exp $
"
    end

    artifact 557698 "NamespaceMappings"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.Iterator;
import java.util.Stack;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 617218 // NamespaceMappings
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NamespaceMappings.java,v 1.2.4.1 2005/09/15 08:15:19 suresh_emailid Exp $
"
    end

    artifact 557826 "OutputPropertiesFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Enumeration;
import java.util.Properties;
import javax.xml.transform.OutputKeys;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import com.sun.org.apache.xml.internal.serializer.utils.WrappedRuntimeException;
${definition}"
      associated_elems
	class_ref 789250 // OutputPropertiesFactory
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OutputPropertiesFactory.java,v 1.2.4.1 2005/09/15 08:15:21 suresh_emailid Exp $
"
    end

    artifact 557954 "OutputPropertyUtils"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Properties;
${definition}"
      associated_elems
	class_ref 789378 // OutputPropertyUtils
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OutputPropertyUtils.java,v 1.2.4.1 2005/09/15 08:15:21 suresh_emailid Exp $
"
    end

    artifact 558082 "SerializerConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 789634 // SerializerConstants
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerConstants.java,v 1.2.4.1 2005/09/15 08:15:23 suresh_emailid Exp $
"
    end

    artifact 558210 "SerializerBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Vector;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.Transformer;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Locator2;
${definition}"
      associated_elems
	class_ref 789506 // SerializerBase
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerBase.java,v 1.5 2006/04/14 12:09:19 sunithareddy Exp $
"
    end

    artifact 558338 "SerializerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.ObjectFactory;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import java.util.Properties;
import javax.xml.transform.OutputKeys;
import org.xml.sax.ContentHandler;
${definition}"
      associated_elems
	class_ref 789890 // SerializerFactory
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerFactory.java,v 1.2.4.1 2005/09/15 08:15:24 suresh_emailid Exp $
"
    end

    artifact 558466 "SerializerTrace"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.Attributes;
${definition}"
      associated_elems
	class_ref 789762 // SerializerTrace
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerTrace.java,v 1.2.4.1 2005/09/15 08:15:24 suresh_emailid Exp $
"
    end

    artifact 558594 "WriterChain"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 790146 // WriterChain
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WriterChain.java,v 1.1.4.1 2005/09/08 10:58:44 suresh_emailid Exp $
"
    end

    artifact 558722 "SerializerTraceWriter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
${definition}"
      associated_elems
	class_ref 790018 // SerializerTraceWriter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerTraceWriter.java,v 1.2.4.1 2005/09/15 08:15:25 suresh_emailid Exp $
"
    end

    artifact 558850 "ToSAXHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 790402 // ToSAXHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToSAXHandler.java,v 1.2.4.1 2005/09/22 11:03:15 pvedula Exp $
"
    end

    artifact 558978 "ToHTMLSAXHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Properties;
import javax.xml.transform.Result;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 790274 // ToHTMLSAXHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToHTMLSAXHandler.java,v 1.3 2005/09/28 13:49:07 pvedula Exp $
"
    end

    artifact 559106 "ToStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import com.sun.org.apache.xml.internal.serializer.utils.WrappedRuntimeException;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 790786 // ToStream
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToStream.java,v 1.4 2005/11/10 06:43:26 suresh_emailid Exp $
"
    end

    artifact 559234 "ToHTMLStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.Properties;
import javax.xml.transform.Result;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 790658 // ToHTMLStream
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToHTMLStream.java,v 1.2.4.1 2005/09/15 08:15:26 suresh_emailid Exp $
"
    end

    artifact 559362 "ToTextSAXHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Properties;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 791426 // ToTextSAXHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToTextSAXHandler.java,v 1.3 2005/09/28 13:49:08 pvedula Exp $
"
    end

    artifact 559490 "ToTextStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 791554 // ToTextStream
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToTextStream.java,v 1.2.4.1 2005/09/21 10:35:34 pvedula Exp $
"
    end

    artifact 559618 "ToUnknownStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Properties;
import java.util.Vector;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.Transformer;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 791682 // ToUnknownStream
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToUnknownStream.java,v 1.3 2005/09/28 13:49:08 pvedula Exp $
"
    end

    artifact 559746 "ToXMLSAXHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Properties;
import javax.xml.transform.Result;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 791810 // ToXMLSAXHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToXMLSAXHandler.java,v 1.3 2005/09/28 13:49:08 pvedula Exp $
"
    end

    artifact 559874 "ToXMLStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.Result;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.serializer.utils.MsgKey;
import com.sun.org.apache.xml.internal.serializer.utils.Utils;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 791938 // ToXMLStream
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ToXMLStream.java,v 1.2.4.2 2005/09/15 12:01:25 suresh_emailid Exp $
"
    end

    artifact 560002 "TransformStateSetter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Transformer;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 790530 // TransformStateSetter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: TransformStateSetter.java,v 1.2.4.1 2005/09/15 08:15:29 suresh_emailid Exp $
"
    end

    artifact 560130 "TreeWalker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import java.io.File;
import com.sun.org.apache.xml.internal.serializer.utils.AttList;
import com.sun.org.apache.xml.internal.serializer.utils.DOM2Helper;
import org.w3c.dom.Comment;
import org.w3c.dom.Element;
import org.w3c.dom.EntityReference;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.ext.LexicalHandler;
import org.xml.sax.helpers.LocatorImpl;
${definition}"
      associated_elems
	class_ref 792066 // TreeWalker
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 560258 "Version"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 792450 // Version
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Version.java,v 1.2 2005/09/28 13:49:09 pvedula Exp $
"
    end

    artifact 560386 "WriterToASCI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
${definition}"
      associated_elems
	class_ref 792578 // WriterToASCI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WriterToASCI.java,v 1.2.4.1 2005/09/15 08:15:31 suresh_emailid Exp $
"
    end

    artifact 560514 "WriterToUTF8Buffered"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
${definition}"
      associated_elems
	class_ref 792706 // WriterToUTF8Buffered
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WriterToUTF8Buffered.java,v 1.2.4.1 2005/09/15 08:15:31 suresh_emailid Exp $
"
    end
  end

  package_ref 176386 // utils
end
