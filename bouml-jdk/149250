format 222
"zip" // jdk1.8::java::util::zip
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/util/zip/"
  java_package "java.util.zip"
  classview 145538 "zip"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 334722 "Deflater"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides support for general purpose compression using the
popular ZLIB compression library. The ZLIB compression library was
initially developed as part of the PNG graphics standard and is not
protected by patents. It is fully described in the specifications at
the <a href=\"package-summary.html#package_description\">java.util.zip
package description</a>.

<p>The following code fragment demonstrates a trivial compression
and decompression of a string using <tt>Deflater</tt> and
<tt>Inflater</tt>.

<blockquote><pre>
try {
    // Encode a String into bytes
    String inputString = \"blahblahblah\";
    byte[] input = inputString.getBytes(\"UTF-8\");

    // Compress the bytes
    byte[] output = new byte[100];
    Deflater compresser = new Deflater();
    compresser.setInput(input);
    compresser.finish();
    int compressedDataLength = compresser.deflate(output);
    compresser.end();

    // Decompress the bytes
    Inflater decompresser = new Inflater();
    decompresser.setInput(output, 0, compressedDataLength);
    byte[] result = new byte[100];
    int resultLength = decompresser.inflate(result);
    decompresser.end();

    // Decode the bytes into a String
    String outputString = new String(result, 0, resultLength, \"UTF-8\");
} catch(java.io.UnsupportedEncodingException ex) {
    // handle
} catch (java.util.zip.DataFormatException ex) {
    // handle
}
</pre></blockquote>

@see         Inflater
@author      David Connelly
"
      classrelation 3731842 // zsRef (<unidirectional association>)
	relation 3731842 --->
	  a role_name "zsRef" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3731842 // zsRef (<unidirectional association>)
	  b parent class_ref 1169410 // ZStreamRef
      end

      attribute 2231298 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2231426 "off"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2231554 "len"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2231682 "level"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2231810 "strategy"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2231938 "setParams"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2232066 "finish"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2232194 "finished"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2232322 "bytesRead"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2232450 "bytesWritten"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2232578 "DEFLATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression method for the deflate algorithm (the only one currently
supported).

"
      end

      attribute 2232706 "NO_COMPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression level for no compression.

"
      end

      attribute 2232834 "BEST_SPEED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression level for fastest compression.

"
      end

      attribute 2232962 "BEST_COMPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression level for best compression.

"
      end

      attribute 2233090 "DEFAULT_COMPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default compression level.

"
      end

      attribute 2233218 "FILTERED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression strategy best used for data consisting mostly of small
values with a somewhat random distribution. Forces more Huffman coding
and less string matching.

"
      end

      attribute 2233346 "HUFFMAN_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression strategy for Huffman coding only.

"
      end

      attribute 2233474 "DEFAULT_STRATEGY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default compression strategy.

"
      end

      attribute 2233602 "NO_FLUSH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression flush mode used to achieve best compression result.

@see Deflater#deflate(byte[], int, int, int)
@since 1.7

"
      end

      attribute 2233730 "SYNC_FLUSH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression flush mode used to flush out all pending output; may
degrade compression for some compression algorithms.

@see Deflater#deflate(byte[], int, int, int)
@since 1.7

"
      end

      attribute 2233858 "FULL_FLUSH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression flush mode used to flush out all pending output and
reset the deflater. Using this mode too often can seriously degrade
compression.

@see Deflater#deflate(byte[], int, int, int)
@since 1.7

"
      end

      extra_member 178818 "initialization"
	
	cpp "" ""
	java "  static {
        /* Zip library is loaded from System.initializeSystemClass */
        initIDs();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9607298 "Deflater"
	public explicit_return_type ""
	nparams 2
	  param in name "level" explicit_type "int"
	  param inout name "nowrap" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new compressor using the specified compression level.
If 'nowrap' is true then the ZLIB header and checksum fields will
not be used in order to support the compression format used in
both GZIP and PKZIP.
@param level the compression level (0-9)
@param nowrap if true then use GZIP compatible compression
"
      end

      operation 9607426 "Deflater"
	public explicit_return_type ""
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new compressor using the specified compression level.
Compressed data will be generated in ZLIB format.
@param level the compression level (0-9)
"
      end

      operation 9607554 "Deflater"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new compressor with the default compression level.
Compressed data will be generated in ZLIB format.
"
      end

      operation 9607682 "setInput"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for compression. This should be called whenever
needsInput() returns true indicating that more input data is required.
@param b the input data bytes
@param off the start offset of the data
@param len the length of the data
@see Deflater#needsInput
"
      end

      operation 9607810 "setInput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for compression. This should be called whenever
needsInput() returns true indicating that more input data is required.
@param b the input data bytes
@see Deflater#needsInput
"
      end

      operation 9607938 "setDictionary"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets preset dictionary for compression. A preset dictionary is used
when the history buffer can be predetermined. When the data is later
uncompressed with Inflater.inflate(), Inflater.getAdler() can be called
in order to get the Adler-32 value of the dictionary required for
decompression.
@param b the dictionary data bytes
@param off the start offset of the data
@param len the length of the data
@see Inflater#inflate
@see Inflater#getAdler
"
      end

      operation 9608066 "setDictionary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets preset dictionary for compression. A preset dictionary is used
when the history buffer can be predetermined. When the data is later
uncompressed with Inflater.inflate(), Inflater.getAdler() can be called
in order to get the Adler-32 value of the dictionary required for
decompression.
@param b the dictionary data bytes
@see Inflater#inflate
@see Inflater#getAdler
"
      end

      operation 9608194 "setStrategy"
	public explicit_return_type "void"
	nparams 1
	  param in name "strategy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression strategy to the specified value.

<p> If the compression strategy is changed, the next invocation
of {@code deflate} will compress the input available so far with
the old strategy (and may be flushed); the new strategy will take
effect only after that invocation.

@param strategy the new compression strategy
@exception IllegalArgumentException if the compression strategy is
                                    invalid
"
      end

      operation 9608322 "setLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression level to the specified value.

<p> If the compression level is changed, the next invocation
of {@code deflate} will compress the input available so far
with the old level (and may be flushed); the new level will
take effect only after that invocation.

@param level the new compression level (0-9)
@exception IllegalArgumentException if the compression level is invalid
"
      end

      operation 9608450 "needsInput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the input data buffer is empty and setInput()
should be called in order to provide more input.
@return true if the input data buffer is empty and setInput()
should be called in order to provide more input
"
      end

      operation 9608578 "finish"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When called, indicates that compression should end with the current
contents of the input buffer.
"
      end

      operation 9608706 "finished"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the end of the compressed data output stream has
been reached.
@return true if the end of the compressed data output stream has
been reached
"
      end

      operation 9608834 "deflate"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compresses the input data and fills specified buffer with compressed
data. Returns actual number of bytes of compressed data. A return value
of 0 indicates that {@link #needsInput() needsInput} should be called
in order to determine if more input data is required.

<p>This method uses {@link #NO_FLUSH} as its compression flush mode.
An invocation of this method of the form {@code deflater.deflate(b, off, len)}
yields the same result as the invocation of
{@code deflater.deflate(b, off, len, Deflater.NO_FLUSH)}.

@param b the buffer for the compressed data
@param off the start offset of the data
@param len the maximum number of bytes of compressed data
@return the actual number of bytes of compressed data written to the
        output buffer
"
      end

      operation 9608962 "deflate"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compresses the input data and fills specified buffer with compressed
data. Returns actual number of bytes of compressed data. A return value
of 0 indicates that {@link #needsInput() needsInput} should be called
in order to determine if more input data is required.

<p>This method uses {@link #NO_FLUSH} as its compression flush mode.
An invocation of this method of the form {@code deflater.deflate(b)}
yields the same result as the invocation of
{@code deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)}.

@param b the buffer for the compressed data
@return the actual number of bytes of compressed data written to the
        output buffer
"
      end

      operation 9609090 "deflate"
	public explicit_return_type "int"
	nparams 4
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "flush" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compresses the input data and fills the specified buffer with compressed
data. Returns actual number of bytes of data compressed.

<p>Compression flush mode is one of the following three modes:

<ul>
<li>{@link #NO_FLUSH}: allows the deflater to decide how much data
to accumulate, before producing output, in order to achieve the best
compression (should be used in normal use scenario). A return value
of 0 in this flush mode indicates that {@link #needsInput()} should
be called in order to determine if more input data is required.

<li>{@link #SYNC_FLUSH}: all pending output in the deflater is flushed,
to the specified output buffer, so that an inflater that works on
compressed data can get all input data available so far (In particular
the {@link #needsInput()} returns {@code true} after this invocation
if enough output space is provided). Flushing with {@link #SYNC_FLUSH}
may degrade compression for some compression algorithms and so it
should be used only when necessary.

<li>{@link #FULL_FLUSH}: all pending output is flushed out as with
{@link #SYNC_FLUSH}. The compression state is reset so that the inflater
that works on the compressed output data can restart from this point
if previous compressed data has been damaged or if random access is
desired. Using {@link #FULL_FLUSH} too often can seriously degrade
compression.
</ul>

<p>In the case of {@link #FULL_FLUSH} or {@link #SYNC_FLUSH}, if
the return value is {@code len}, the space available in output
buffer {@code b}, this method should be invoked again with the same
{@code flush} parameter and more output space.

@param b the buffer for the compressed data
@param off the start offset of the data
@param len the maximum number of bytes of compressed data
@param flush the compression flush mode
@return the actual number of bytes of compressed data written to
        the output buffer

@throws IllegalArgumentException if the flush mode is invalid
@since 1.7
"
      end

      operation 9609218 "getAdler"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ADLER-32 value of the uncompressed data.
@return the ADLER-32 value of the uncompressed data
"
      end

      operation 9609346 "getTotalIn"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes input so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesRead()} method is now
the preferred means of obtaining this information.</p>

@return the total number of uncompressed bytes input so far
"
      end

      operation 9609474 "getBytesRead"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes input so far.

@return the total (non-negative) number of uncompressed bytes input so far
@since 1.5
"
      end

      operation 9609602 "getTotalOut"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes output so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesWritten()} method is now
the preferred means of obtaining this information.</p>

@return the total number of compressed bytes output so far
"
      end

      operation 9609730 "getBytesWritten"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes output so far.

@return the total (non-negative) number of compressed bytes output so far
@since 1.5
"
      end

      operation 9609858 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets deflater so that a new set of input data can be processed.
Keeps current compression level and strategy settings.
"
      end

      operation 9609986 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the compressor and discards any unprocessed input.
This method should be called when the compressor is no longer
being used, but will also be called automatically by the
finalize() method. Once this method is called, the behavior
of the Deflater object is undefined.
"
      end

      operation 9610114 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the compressor when garbage is collected.
"
      end

      operation 9610242 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9610370 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 9610498 "init"
	class_operation private explicit_return_type "long"
	nparams 3
	  param in name "level" explicit_type "int"
	  param in name "strategy" explicit_type "int"
	  param inout name "nowrap" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end

      operation 9610626 "setDictionary"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "addr" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 9610754 "deflateBytes"
	private explicit_return_type "int"
	nparams 5
	  param in name "addr" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "flush" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
s"
	
	
	
      end

      operation 9610882 "getAdler"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "addr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9611010 "reset"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "addr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9611138 "end"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "addr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 542466 "ZipFile"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to read entries from a zip file.

<p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

@author      David Connelly
"
      classrelation 3658498 // <realization>
	relation 3658498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3658498 // <realization>
	  b parent class_ref 1134850 // ZipConstants
      end

      classrelation 3658626 // <realization>
	relation 3658626 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3658626 // <realization>
	  b parent class_ref 146562 // Closeable
      end

      attribute 2178178 "jzfile"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " address of jzfile data"
      end

      classrelation 3658754 // name (<unidirectional association>)
	relation 3658754 --->
	  a role_name "name" const_relation private
	    comment " zip file name"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3658754 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2178306 "total"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " total number of entries"
      end

      attribute 2178434 "locsig"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if zip file starts with LOCSIG (usually true)"
      end

      attribute 2178562 "closeRequested"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2178690 "STORED"
	class_attribute const_attribute private explicit_type "int"
	init_value " ZipEntry.STORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2178818 "DEFLATED"
	class_attribute const_attribute private explicit_type "int"
	init_value " ZipEntry.DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2178946 "OPEN_READ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mode flag to open a zip file for reading.

"
      end

      attribute 2179074 "OPEN_DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mode flag to open a zip file and mark it for deletion.  The file will be
deleted some time between the moment that it is opened and the moment
that it is closed, but its contents will remain accessible via the
<tt>ZipFile</tt> object until either the close method is invoked or the
virtual machine exits.

"
      end

      extra_member 177666 "initialization"
	
	cpp "" ""
	java "  static {
        /* Zip library is loaded from System.initializeSystemClass */
        initIDs();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9336706 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      attribute 2179202 "usemmap"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2179330 "ensuretrailingslash"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 177794 "initialization"
	
	cpp "" ""
	java "  static {
        // A system prpperty to disable mmap use to avoid vm crash when
        // in-use zip file is accidently overwritten by others.
        String prop = sun.misc.VM.getSavedProperty(\"sun.zip.disableMemoryMapping\");
        usemmap = (prop == null ||
                   !(prop.length() == 0 || prop.equalsIgnoreCase(\"true\")));

        // see getEntry() for details
        prop = sun.misc.VM.getSavedProperty(\"jdk.util.zip.ensureTrailingSlash\");
        ensuretrailingslash = prop == null || !prop.equalsIgnoreCase(\"false\");
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9336834 "ZipFile"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a zip file for reading.

<p>First, if there is a security manager, its <code>checkRead</code>
method is called with the <code>name</code> argument as its argument
to ensure the read is allowed.

<p>The UTF-8 {@link java.nio.charset.Charset charset} is used to
decode the entry names and comments.

@param name the name of the zip file
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws SecurityException if a security manager exists and its
        <code>checkRead</code> method doesn't allow read access to the file.

@see SecurityManager#checkRead(java.lang.String)
"
      end

      operation 9336962 "ZipFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "file" type class_ref 131970 // File
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a new <code>ZipFile</code> to read from the specified
<code>File</code> object in the specified mode.  The mode argument
must be either <tt>OPEN_READ</tt> or <tt>OPEN_READ | OPEN_DELETE</tt>.

<p>First, if there is a security manager, its <code>checkRead</code>
method is called with the <code>name</code> argument as its argument to
ensure the read is allowed.

<p>The UTF-8 {@link java.nio.charset.Charset charset} is used to
decode the entry names and comments

@param file the ZIP file to be opened for reading
@param mode the mode in which the file is to be opened
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws SecurityException if a security manager exists and
        its <code>checkRead</code> method
        doesn't allow read access to the file,
        or its <code>checkDelete</code> method doesn't allow deleting
        the file when the <tt>OPEN_DELETE</tt> flag is set.
@throws IllegalArgumentException if the <tt>mode</tt> argument is invalid
@see SecurityManager#checkRead(java.lang.String)
@since 1.3
"
      end

      operation 9337090 "ZipFile"
	public explicit_return_type ""
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 2
	  exception class_ref 1135106 // ZipException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a ZIP file for reading given the specified File object.

<p>The UTF-8 {@link java.nio.charset.Charset charset} is used to
decode the entry names and comments.

@param file the ZIP file to be opened for reading
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
"
      end

      classrelation 3658882 // zc (<unidirectional association>)
	relation 3658882 --->
	  a role_name "zc" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3658882 // zc (<unidirectional association>)
	  b parent class_ref 1135234 // ZipCoder
      end

      operation 9337218 "ZipFile"
	public explicit_return_type ""
	nparams 3
	  param inout name "file" type class_ref 131970 // File
	  param in name "mode" explicit_type "int"
	  param inout name "charset" type class_ref 853634 // Charset
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a new <code>ZipFile</code> to read from the specified
<code>File</code> object in the specified mode.  The mode argument
must be either <tt>OPEN_READ</tt> or <tt>OPEN_READ | OPEN_DELETE</tt>.

<p>First, if there is a security manager, its <code>checkRead</code>
method is called with the <code>name</code> argument as its argument to
ensure the read is allowed.

@param file the ZIP file to be opened for reading
@param mode the mode in which the file is to be opened
@param charset
       the {@linkplain java.nio.charset.Charset charset} to
       be used to decode the ZIP entry name and comment that are not
       encoded by using UTF-8 encoding (indicated by entry's general
       purpose flag).

@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred

@throws SecurityException
        if a security manager exists and its <code>checkRead</code>
        method doesn't allow read access to the file,or its
        <code>checkDelete</code> method doesn't allow deleting the
        file when the <tt>OPEN_DELETE</tt> flag is set

@throws IllegalArgumentException if the <tt>mode</tt> argument is invalid

@see SecurityManager#checkRead(java.lang.String)

@since 1.7
"
      end

      operation 9337346 "ZipFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "charset" type class_ref 853634 // Charset
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a zip file for reading.

<p>First, if there is a security manager, its <code>checkRead</code>
method is called with the <code>name</code> argument as its argument
to ensure the read is allowed.

@param name the name of the zip file
@param charset
       the {@linkplain java.nio.charset.Charset charset} to
       be used to decode the ZIP entry name and comment that are not
       encoded by using UTF-8 encoding (indicated by entry's general
       purpose flag).

@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws SecurityException
        if a security manager exists and its <code>checkRead</code>
        method doesn't allow read access to the file

@see SecurityManager#checkRead(java.lang.String)

@since 1.7
"
      end

      operation 9337474 "ZipFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "file" type class_ref 131970 // File
	  param inout name "charset" type class_ref 853634 // Charset
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a ZIP file for reading given the specified File object.
@param file the ZIP file to be opened for reading
@param charset
       The {@linkplain java.nio.charset.Charset charset} to be
       used to decode the ZIP entry name and comment (ignored if
       the <a href=\"package-summary.html#lang_encoding\"> language
       encoding bit</a> of the ZIP entry's general purpose bit
       flag is set).

@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred

@since 1.7
"
      end

      operation 9337602 "getComment"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the zip file comment, or null if none.

@return the comment string for the zip file, or null if none

@throws IllegalStateException if the zip file has been closed

Since 1.7
"
      end

      operation 9337730 "getEntry"
	public return_type class_ref 1134722 // ZipEntry
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the zip file entry for the specified name, or null
if not found.

@param name the name of the entry
@return the zip file entry, or null if not found
@throws IllegalStateException if the zip file has been closed
"
      end

      operation 9337858 "getEntry"
	class_operation private explicit_return_type "long"
	nparams 3
	  param in name "jzfile" explicit_type "long"
	  param inout name "name" explicit_type "byte"
	multiplicity "[]"
	  param inout name "addSlash" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end

      operation 9337986 "freeEntry"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "jzfile" explicit_type "long"
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
	comment " freeEntry releases the C jzentry struct."
      end

      classrelation 3659010 // streams (<unidirectional association>)
	relation 3659010 --->
	  a role_name "streams" init_value " new WeakHashMap<>()" const_relation private
	    comment " the outstanding inputstreams that need to be closed,
 mapped to the inflater objects they use.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<InputStream, Inflater> ${name}${value};
"
	    classrelation_ref 3659010 // streams (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 9338114 "getInputStream"
	public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "entry" type class_ref 1134722 // ZipEntry
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for reading the contents of the specified
zip file entry.

<p> Closing this ZIP file will, in turn, close all input
streams that have been returned by invocations of this method.

@param entry the zip file entry
@return the input stream for reading the contents of the specified
zip file entry.
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws IllegalStateException if the zip file has been closed
"
      end

      class 1135362 "ZipFileInflaterInputStream"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3659394 // <generalisation>
	  relation 3659394 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3659394 // <generalisation>
	    b parent class_ref 1135490 // InflaterInputStream
	end

	attribute 2180354 "closeRequested"
	  volatile private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2180482 "eof"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3659522 // zfin (<unidirectional association>)
	  relation 3659522 --->
	    a role_name "zfin" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3659522 // zfin (<unidirectional association>)
	    b parent class_ref 1135746 // ZipFileInputStream
	end

	operation 9339906 "ZipFileInflaterInputStream"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "zfin" type class_ref 1135746 // ZipFileInputStream
	    param inout name "inf" type class_ref 1135618 // Inflater
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9340034 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9340162 "fill"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Override fill() method to provide an extra \"dummy\" byte
 at the end of the input stream. This is required when
 using the \"nowrap\" Inflater option."
	end

	operation 9340290 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9340418 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 129922 // Throwable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1135746 "ZipFileInputStream"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3660034 // <generalisation>
	  relation 3660034 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3660034 // <generalisation>
	    b parent class_ref 146434 // InputStream
	end

	attribute 2180738 "zfisCloseRequested"
	  volatile private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2180866 "jzentry"
	  protected explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " address of jzentry data"
	end

	attribute 2180994 "pos"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current position within entry data"
	end

	attribute 2181122 "rem"
	  protected explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " number of remaining bytes within entry"
	end

	attribute 2181250 "size"
	  protected explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " uncompressed size of this entry"
	end

	operation 9342850 "ZipFileInputStream"
	  package explicit_return_type ""
	  nparams 1
	    param in name "jzentry" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9342978 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9343106 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9343234 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9343362 "available"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9343490 "size"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9343618 "close"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9343746 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9340546 "getInflater"
	private return_type class_ref 1135618 // Inflater
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an inflater from the list of available inflaters or allocates
a new one.
"
      end

      operation 9340674 "releaseInflater"
	private explicit_return_type "void"
	nparams 1
	  param inout name "inf" type class_ref 1135618 // Inflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the specified inflater to the list of available inflaters.
"
      end

      classrelation 3659650 // inflaterCache (<unidirectional association>)
	relation 3659650 --->
	  a role_name "inflaterCache" init_value " new ArrayDeque<>()" private
	    comment " List of available Inflater objects for decompression
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Inflater> ${name}${value};
"
	    classrelation_ref 3659650 // inflaterCache (<unidirectional association>)
	  b parent class_ref 1064450 // Deque
      end

      operation 9340802 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path name of the ZIP file.
@return the path name of the ZIP file
"
      end

      class 1135874 "ZipEntryIterator"
	visibility private 
	nactuals 2
	actual class class_ref 185986 // Enumeration
	  rank 0 explicit_value ""
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3659778 // <realization>
	  relation 3659778 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3659778 // <realization>
	    b parent class_ref 185986 // Enumeration
	end

	classrelation 3659906 // <realization>
	  relation 3659906 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3659906 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 2180610 "i"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9340930 "ZipEntryIterator"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9341058 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9341186 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9341314 "nextElement"
	  public return_type class_ref 1134722 // ZipEntry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9341442 "next"
	  public return_type class_ref 1134722 // ZipEntry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9341570 "entries"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends ZipEntry> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the ZIP file entries.
@return an enumeration of the ZIP file entries
@throws IllegalStateException if the zip file has been closed
"
      end

      operation 9341698 "stream"
	public return_type class_ref 184706 // Stream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends ZipEntry> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an ordered {@code Stream} over the ZIP file entries.
Entries appear in the {@code Stream} in the order they appear in
the central directory of the ZIP file.

@return an ordered {@code Stream} of entries in this ZIP file
@throws IllegalStateException if the zip file has been closed
@since 1.8
"
      end

      operation 9341826 "getZipEntry"
	private return_type class_ref 1134722 // ZipEntry
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "jzentry" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9341954 "getNextEntry"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "jzfile" explicit_type "long"
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 9342082 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of entries in the ZIP file.
@return the number of entries in the ZIP file
@throws IllegalStateException if the zip file has been closed
"
      end

      operation 9342210 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the ZIP file.
<p> Closing this ZIP file will close all of the input streams
previously returned by invocations of the {@link #getInputStream
getInputStream} method.

@throws IOException if an I/O error has occurred
"
      end

      operation 9342338 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the system resources held by this ZipFile object are
released when there are no more references to it.

<p>
Since the time when GC would invoke this method is undetermined,
it is strongly recommended that applications invoke the <code>close</code>
method as soon they have finished accessing this <code>ZipFile</code>.
This will prevent holding up system resources for an undetermined
length of time.

@throws IOException if an I/O error has occurred
@see    java.util.zip.ZipFile#close()
"
      end

      operation 9342466 "close"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9342594 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9342722 "ensureOpenOrZipException"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 177922 "initialization"
	
	cpp "" ""
	java "  static {
        sun.misc.SharedSecrets.setJavaUtilZipFileAccess(
            new sun.misc.JavaUtilZipFileAccess() {
                public boolean startsWithLocHeader(ZipFile zip) {
                    return zip.startsWithLocHeader();
                }
             }
        );
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9343874 "startsWithLocHeader"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if, and only if, the zip file begins with {@code
LOCSIG}.
"
      end

      operation 9344002 "open"
	class_operation private explicit_return_type "long"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param in name "mode" explicit_type "int"
	  param in name "lastModified" explicit_type "long"
	  param inout name "usemmap" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 9344130 "getTotal"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9344258 "startsWithLOC"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9344386 "read"
	class_operation private explicit_return_type "int"
	nparams 6
	  param in name "jzfile" explicit_type "long"
	  param in name "jzentry" explicit_type "long"
	  param in name "pos" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
s"
	
	
	
      end

      operation 9344514 "getEntryTime"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment " access to the native zentry object"
      end

      operation 9344642 "getEntryCrc"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9344770 "getEntryCSize"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9344898 "getEntrySize"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9345026 "getEntryMethod"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9345154 "getEntryFlag"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9345282 "getCommentBytes"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      attribute 2181378 "JZENTRY_NAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2181506 "JZENTRY_EXTRA"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2181634 "JZENTRY_COMMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9345410 "getEntryBytes"
	class_operation private explicit_return_type "byte"
	nparams 2
	  param in name "jzentry" explicit_type "long"
	  param in name "type" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 9345538 "getZipMessage"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 1134722 "ZipEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to represent a ZIP file entry.

@author      David Connelly
"
      classrelation 3656834 // <realization>
	relation 3656834 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3656834 // <realization>
	  b parent class_ref 1134850 // ZipConstants
      end

      classrelation 3656962 // <realization>
	relation 3656962 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3656962 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3657090 // name (<unidirectional association>)
	relation 3657090 --->
	  a role_name "name" package
	    comment " entry name"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3657090 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2176514 "xdostime"
	package explicit_type "long"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " last modification time (in extended DOS time,"
      end

      classrelation 3657218 // mtime (<unidirectional association>)
	relation 3657218 --->
	  a role_name "mtime" package
	    comment " where milliseconds lost in conversion might
 be encoded into the upper half)
 last modification time, from extra field data"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3657218 // mtime (<unidirectional association>)
	  b parent class_ref 996354 // FileTime
      end

      classrelation 3657346 // atime (<unidirectional association>)
	relation 3657346 --->
	  a role_name "atime" package
	    comment " last access time, from extra field data"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3657346 // atime (<unidirectional association>)
	  b parent class_ref 996354 // FileTime
      end

      classrelation 3657474 // ctime (<unidirectional association>)
	relation 3657474 --->
	  a role_name "ctime" package
	    comment " creation time, from extra field data"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3657474 // ctime (<unidirectional association>)
	  b parent class_ref 996354 // FileTime
      end

      attribute 2176642 "crc"
	package explicit_type "long"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " crc-32 of entry data"
      end

      attribute 2176770 "size"
	package explicit_type "long"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed size of entry data"
      end

      attribute 2176898 "csize"
	package explicit_type "long"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compressed size of entry data"
      end

      attribute 2177026 "method"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compression method"
      end

      attribute 2177154 "flag"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " general purpose flag"
      end

      attribute 2177282 "extra"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " optional extra field data for entry"
      end

      classrelation 3657602 // comment (<unidirectional association>)
	relation 3657602 --->
	  a role_name "comment" package
	    comment " optional comment string for entry"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3657602 // comment (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2177410 "STORED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression method for uncompressed entries.

"
      end

      attribute 2177538 "DEFLATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression method for compressed (deflated) entries.

"
      end

      attribute 2177666 "DOSTIME_BEFORE_1980"
	class_attribute const_attribute package explicit_type "long"
	init_value " (1 << 21) | (1 << 16)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "DOS time constant for representing timestamps before 1980.

"
      end

      attribute 2177794 "UPPER_DOSTIME_BOUND"
	class_attribute const_attribute private explicit_type "long"
	init_value "
            128L * 365 * 24 * 60 * 60 * 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Approximately 128 years, in milliseconds (ignoring leap years etc).

This establish an approximate high-bound value for DOS times in
milliseconds since epoch, used to enable an efficient but
sufficient bounds check to avoid generating extended last modified
time entries.

Calculating the exact number is locale dependent, would require loading
TimeZone data eagerly, and would make little practical sense. Since DOS
times theoretically go to 2107 - with compatibility not guaranteed
after 2099 - setting this to a time that is before but near 2099
should be sufficient.

"
      end

      operation 9331714 "ZipEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new zip entry with the specified name.

@param  name
        The entry name

@throws NullPointerException if the entry name is null
@throws IllegalArgumentException if the entry name is longer than
        0xFFFF bytes
"
      end

      operation 9331842 "ZipEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 1134722 // ZipEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new zip entry with fields taken from the specified
zip entry.

@param  e
        A zip Entry object

@throws NullPointerException if the entry object is null
"
      end

      operation 9331970 "ZipEntry"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new un-initialized zip entry
"
      end

      operation 9332098 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the entry.
@return the name of the entry
"
      end

      operation 9332226 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the last modification time of the entry.

<p> If the entry is output to a ZIP file or ZIP file formatted
output stream the last modification time set by this method will
be stored into the {@code date and time fields} of the zip file
entry and encoded in standard {@code MS-DOS date and time format}.
The {@link java.util.TimeZone#getDefault() default TimeZone} is
used to convert the epoch time to the MS-DOS data and time.

@param  time
        The last modification time of the entry in milliseconds
        since the epoch

@see #getTime()
@see #getLastModifiedTime()
"
      end

      operation 9332354 "getTime"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last modification time of the entry.

<p> If the entry is read from a ZIP file or ZIP file formatted
input stream, this is the last modification time from the {@code
date and time fields} of the zip file entry. The
{@link java.util.TimeZone#getDefault() default TimeZone} is used
to convert the standard MS-DOS formatted date and time to the
epoch time.

@return  The last modification time of the entry in milliseconds
         since the epoch, or -1 if not specified

@see #setTime(long)
@see #setLastModifiedTime(FileTime)
"
      end

      operation 9332482 "setLastModifiedTime"
	public return_type class_ref 1134722 // ZipEntry
	nparams 1
	  param inout name "time" type class_ref 996354 // FileTime
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the last modification time of the entry.

<p> When output to a ZIP file or ZIP file formatted output stream
the last modification time set by this method will be stored into
zip file entry's {@code date and time fields} in {@code standard
MS-DOS date and time format}), and the extended timestamp fields
in {@code optional extra data} in UTC time.

@param  time
        The last modification time of the entry
@return This zip entry

@throws NullPointerException if the {@code time} is null

@see #getLastModifiedTime()
@since 1.8
"
      end

      operation 9332610 "getLastModifiedTime"
	public return_type class_ref 996354 // FileTime
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last modification time of the entry.

<p> If the entry is read from a ZIP file or ZIP file formatted
input stream, this is the last modification time from the zip
file entry's {@code optional extra data} if the extended timestamp
fields are present. Otherwise the last modification time is read
from the entry's {@code date and time fields}, the {@link
java.util.TimeZone#getDefault() default TimeZone} is used to convert
the standard MS-DOS formatted date and time to the epoch time.

@return The last modification time of the entry, null if not specified

@see #setLastModifiedTime(FileTime)
@since 1.8
"
      end

      operation 9332738 "setLastAccessTime"
	public return_type class_ref 1134722 // ZipEntry
	nparams 1
	  param inout name "time" type class_ref 996354 // FileTime
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the last access time of the entry.

<p> If set, the last access time will be stored into the extended
timestamp fields of entry's {@code optional extra data}, when output
to a ZIP file or ZIP file formatted stream.

@param  time
        The last access time of the entry
@return This zip entry

@throws NullPointerException if the {@code time} is null

@see #getLastAccessTime()
@since 1.8
"
      end

      operation 9332866 "getLastAccessTime"
	public return_type class_ref 996354 // FileTime
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last access time of the entry.

<p> The last access time is from the extended timestamp fields
of entry's {@code optional extra data} when read from a ZIP file
or ZIP file formatted stream.

@return The last access time of the entry, null if not specified

@see #setLastAccessTime(FileTime)
@since 1.8
"
      end

      operation 9332994 "setCreationTime"
	public return_type class_ref 1134722 // ZipEntry
	nparams 1
	  param inout name "time" type class_ref 996354 // FileTime
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the creation time of the entry.

<p> If set, the creation time will be stored into the extended
timestamp fields of entry's {@code optional extra data}, when
output to a ZIP file or ZIP file formatted stream.

@param  time
        The creation time of the entry
@return This zip entry

@throws NullPointerException if the {@code time} is null

@see #getCreationTime()
@since 1.8
"
      end

      operation 9333122 "getCreationTime"
	public return_type class_ref 996354 // FileTime
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the creation time of the entry.

<p> The creation time is from the extended timestamp fields of
entry's {@code optional extra data} when read from a ZIP file
or ZIP file formatted stream.

@return the creation time of the entry, null if not specified
@see #setCreationTime(FileTime)
@since 1.8
"
      end

      operation 9333250 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the uncompressed size of the entry data.

@param size the uncompressed size in bytes

@throws IllegalArgumentException if the specified size is less
        than 0, is greater than 0xFFFFFFFF when
        <a href=\"package-summary.html#zip64\">ZIP64 format</a> is not supported,
        or is less than 0 when ZIP64 is supported
@see #getSize()
"
      end

      operation 9333378 "getSize"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the uncompressed size of the entry data.

@return the uncompressed size of the entry data, or -1 if not known
@see #setSize(long)
"
      end

      operation 9333506 "getCompressedSize"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the compressed entry data.

<p> In the case of a stored entry, the compressed size will be the same
as the uncompressed size of the entry.

@return the size of the compressed entry data, or -1 if not known
@see #setCompressedSize(long)
"
      end

      operation 9333634 "setCompressedSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "csize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the compressed entry data.

@param csize the compressed size to set to

@see #getCompressedSize()
"
      end

      operation 9333762 "setCrc"
	public explicit_return_type "void"
	nparams 1
	  param in name "crc" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the CRC-32 checksum of the uncompressed entry data.

@param crc the CRC-32 value

@throws IllegalArgumentException if the specified CRC-32 value is
        less than 0 or greater than 0xFFFFFFFF
@see #getCrc()
"
      end

      operation 9333890 "getCrc"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRC-32 checksum of the uncompressed entry data.

@return the CRC-32 checksum of the uncompressed entry data, or -1 if
not known

@see #setCrc(long)
"
      end

      operation 9334018 "setMethod"
	public explicit_return_type "void"
	nparams 1
	  param in name "method" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression method for the entry.

@param method the compression method, either STORED or DEFLATED

@throws  IllegalArgumentException if the specified compression
         method is invalid
@see #getMethod()
"
      end

      operation 9334146 "getMethod"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the compression method of the entry.

@return the compression method of the entry, or -1 if not specified
@see #setMethod(int)
"
      end

      operation 9334274 "setExtra"
	public explicit_return_type "void"
	nparams 1
	  param inout name "extra" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the optional extra field data for the entry.

<p> Invoking this method may change this entry's last modification
time, last access time and creation time, if the {@code extra} field
data includes the extensible timestamp fields, such as {@code NTFS tag
0x0001} or {@code Info-ZIP Extended Timestamp}, as specified in
<a href=\"http://www.info-zip.org/doc/appnote-19970311-iz.zip\">Info-ZIP
Application Note 970311</a>.

@param  extra
        The extra field data bytes

@throws IllegalArgumentException if the length of the specified
        extra field data is greater than 0xFFFF bytes

@see #getExtra()
"
      end

      operation 9334402 "setExtra0"
	package explicit_return_type "void"
	nparams 2
	  param inout name "extra" explicit_type "byte"
	multiplicity "[]"
	  param inout name "doZIP64" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the optional extra field data for the entry.

@param extra
       the extra field data bytes
@param doZIP64
       if true, set size and csize from ZIP64 fields if present
"
      end

      operation 9334530 "getExtra"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extra field data for the entry.

@return the extra field data for the entry, or null if none

@see #setExtra(byte[])
"
      end

      operation 9334658 "setComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the optional comment string for the entry.

<p>ZIP entry comments have maximum length of 0xffff. If the length of the
specified comment string is greater than 0xFFFF bytes after encoding, only
the first 0xFFFF bytes are output to the ZIP file entry.

@param comment the comment string

@see #getComment()
"
      end

      operation 9334786 "getComment"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comment string for the entry.

@return the comment string for the entry, or null if none

@see #setComment(String)
"
      end

      operation 9334914 "isDirectory"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this is a directory entry. A directory entry is
defined to be one whose name ends with a '/'.
@return true if this is a directory entry
"
      end

      operation 9335042 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the ZIP entry.
"
      end

      operation 9335170 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this entry.
"
      end

      operation 9335298 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of this entry.
"
      end
    end

    class 1134850 "ZipConstants"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines the constants that are used by the classes
which manipulate ZIP files.

@author      David Connelly
"
      attribute 2171394 "LOCSIG"
	class_attribute public explicit_type "long"
	init_value " 0x04034b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Header signatures

 \"PK\\003\\004\""
      end

      attribute 2171522 "EXTSIG"
	class_attribute public explicit_type "long"
	init_value " 0x08074b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"PK\\007\\008\""
      end

      attribute 2171650 "CENSIG"
	class_attribute public explicit_type "long"
	init_value " 0x02014b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"PK\\001\\002\""
      end

      attribute 2171778 "ENDSIG"
	class_attribute public explicit_type "long"
	init_value " 0x06054b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"PK\\005\\006\""
      end

      attribute 2171906 "LOCHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Header sizes in bytes (including signatures)

 LOC header size"
      end

      attribute 2172034 "EXTHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " EXT header size"
      end

      attribute 2172162 "CENHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 46"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " CEN header size"
      end

      attribute 2172290 "ENDHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " END header size"
      end

      attribute 2172418 "LOCVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Local file (LOC) header field offsets

 version needed to extract"
      end

      attribute 2172546 "LOCFLG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " general purpose bit flag"
      end

      attribute 2172674 "LOCHOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compression method"
      end

      attribute 2172802 "LOCTIM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " modification time"
      end

      attribute 2172930 "LOCCRC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed file crc-32 value"
      end

      attribute 2173058 "LOCSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compressed size"
      end

      attribute 2173186 "LOCLEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed size"
      end

      attribute 2173314 "LOCNAM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " filename length"
      end

      attribute 2173442 "LOCEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " extra field length"
      end

      attribute 2173570 "EXTCRC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Extra local (EXT) header field offsets

 uncompressed file crc-32 value"
      end

      attribute 2173698 "EXTSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compressed size"
      end

      attribute 2173826 "EXTLEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed size"
      end

      attribute 2173954 "CENVEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Central directory (CEN) header field offsets

 version made by"
      end

      attribute 2174082 "CENVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " version needed to extract"
      end

      attribute 2174210 "CENFLG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " encrypt, decrypt flags"
      end

      attribute 2174338 "CENHOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compression method"
      end

      attribute 2174466 "CENTIM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " modification time"
      end

      attribute 2174594 "CENCRC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed file crc-32 value"
      end

      attribute 2174722 "CENSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compressed size"
      end

      attribute 2174850 "CENLEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed size"
      end

      attribute 2174978 "CENNAM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " filename length"
      end

      attribute 2175106 "CENEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " extra field length"
      end

      attribute 2175234 "CENCOM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " comment length"
      end

      attribute 2175362 "CENDSK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 34"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " disk number start"
      end

      attribute 2175490 "CENATT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " internal file attributes"
      end

      attribute 2175618 "CENATX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 38"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " external file attributes"
      end

      attribute 2175746 "CENOFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 42"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " LOC header offset"
      end

      attribute 2175874 "ENDSUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "End of central directory (END) header field offsets

 number of entries on this disk"
      end

      attribute 2176002 "ENDTOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " total number of entries"
      end

      attribute 2176130 "ENDSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " central directory size in bytes"
      end

      attribute 2176258 "ENDOFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " offset of first CEN header"
      end

      attribute 2176386 "ENDCOM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " zip file comment length"
      end
    end

    class 1135106 "ZipException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a Zip exception of some sort has occurred.

@author  unascribed
@see     java.io.IOException
@since   JDK1.0
"
      classrelation 3658242 // <generalisation>
	relation 3658242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3658242 // <generalisation>
	  b parent class_ref 146818 // IOException
      end

      attribute 2177922 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8000196834066748623L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9336194 "ZipException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ZipException</code> with <code>null</code>
as its error detail message.
"
      end

      operation 9336322 "ZipException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ZipException</code> with the specified detail
message.

@param   s   the detail message.
"
      end
    end

    class 1135234 "ZipCoder"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for zipfile name and comment decoding and encoding
"
      operation 9620354 "toString"
	package return_type class_ref 128130 // String
	nparams 2
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9620482 "toString"
	package return_type class_ref 128130 // String
	nparams 1
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9620610 "getBytes"
	package explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9620738 "getBytesUTF8"
	package explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " assume invoked only if \"this\" is not utf8"
      end

      operation 9620866 "toStringUTF8"
	package return_type class_ref 128130 // String
	nparams 2
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9620994 "isUTF8"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3733122 // cs (<unidirectional association>)
	relation 3733122 --->
	  a role_name "cs" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3733122 // cs (<unidirectional association>)
	  b parent class_ref 853634 // Charset
      end

      classrelation 3733250 // dec (<unidirectional association>)
	relation 3733250 --->
	  a role_name "dec" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3733250 // dec (<unidirectional association>)
	  b parent class_ref 167554 // CharsetDecoder
      end

      classrelation 3733378 // enc (<unidirectional association>)
	relation 3733378 --->
	  a role_name "enc" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3733378 // enc (<unidirectional association>)
	  b parent class_ref 167682 // CharsetEncoder
      end

      attribute 2237442 "isUTF8"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3733506 // utf8 (<unidirectional association>)
	relation 3733506 --->
	  a role_name "utf8" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3733506 // utf8 (<unidirectional association>)
	  b parent class_ref 1135234 // ZipCoder
      end

      operation 9621122 "ZipCoder"
	private explicit_return_type ""
	nparams 1
	  param inout name "cs" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9621250 "get"
	class_operation package return_type class_ref 1135234 // ZipCoder
	nparams 1
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9621378 "decoder"
	private return_type class_ref 167554 // CharsetDecoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9621506 "encoder"
	private return_type class_ref 167682 // CharsetEncoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1135490 "InflaterInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a stream filter for uncompressing data in the
\"deflate\" compression format. It is also used as the basis for other
decompression filters, such as GZIPInputStream.

@see         Inflater
@author      David Connelly
"
      classrelation 3659138 // <generalisation>
	relation 3659138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3659138 // <generalisation>
	  b parent class_ref 577922 // FilterInputStream
      end

      classrelation 3659266 // inf (<unidirectional association>)
	relation 3659266 --->
	  a role_name "inf" protected
	    comment "
Decompressor for this stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3659266 // inf (<unidirectional association>)
	  b parent class_ref 1135618 // Inflater
      end

      attribute 2179458 "buf"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Input buffer for decompression.

"
      end

      attribute 2179586 "len"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Length of input buffer.

"
      end

      attribute 2179714 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2179842 "reachEOF"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " this flag is set to true after EOF has reached
"
      end

      operation 9338242 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed
"
      end

      operation 9338370 "InflaterInputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "inf" type class_ref 1135618 // Inflater
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified decompressor and
buffer size.
@param in the input stream
@param inf the decompressor (\"inflater\")
@param size the input buffer size
@exception IllegalArgumentException if {@code size <= 0}
"
      end

      operation 9338498 "InflaterInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "inf" type class_ref 1135618 // Inflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified decompressor and a
default buffer size.
@param in the input stream
@param inf the decompressor (\"inflater\")
"
      end

      attribute 2179970 "usesDefaultInflater"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9338626 "InflaterInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with a default decompressor and buffer size.
@param in the input stream
"
      end

      attribute 2180098 "singleByteBuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9338754 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a byte of uncompressed data. This method will block until
enough input is available for decompression.
@return the byte read, or -1 if end of compressed input is reached
@exception IOException if an I/O error has occurred
"
      end

      operation 9338882 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads uncompressed data into an array of bytes. If <code>len</code> is not
zero, the method will block until some input can be decompressed; otherwise,
no bytes are read and <code>0</code> is returned.
@param b the buffer into which the data is read
@param off the start offset in the destination array <code>b</code>
@param len the maximum number of bytes read
@return the actual number of bytes read, or -1 if the end of the
        compressed input is reached or a preset dictionary is needed
@exception  NullPointerException If <code>b</code> is <code>null</code>.
@exception  IndexOutOfBoundsException If <code>off</code> is negative,
<code>len</code> is negative, or <code>len</code> is greater than
<code>b.length - off</code>
@exception ZipException if a ZIP format error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9339010 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 after EOF has been reached, otherwise always return 1.
<p>
Programs should not count on this method to return the actual number
of bytes that could be read without blocking.

@return     1 before EOF and 0 after EOF.
@exception  IOException  if an I/O error occurs.

"
      end

      attribute 2180226 "b"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[512]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9339138 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips specified number of bytes of uncompressed data.
@param n the number of bytes to skip
@return the actual number of bytes skipped.
@exception IOException if an I/O error has occurred
@exception IllegalArgumentException if {@code n < 0}
"
      end

      operation 9339266 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and releases any system resources associated
with the stream.
@exception IOException if an I/O error has occurred
"
      end

      operation 9339394 "fill"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills input buffer with more data to decompress.
@exception IOException if an I/O error has occurred
"
      end

      operation 9339522 "markSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this input stream supports the <code>mark</code> and
<code>reset</code> methods. The <code>markSupported</code>
method of <code>InflaterInputStream</code> returns
<code>false</code>.

@return  a <code>boolean</code> indicating if this stream type supports
         the <code>mark</code> and <code>reset</code> methods.
@see     java.io.InputStream#mark(int)
@see     java.io.InputStream#reset()
"
      end

      operation 9339650 "mark"
	public explicit_return_type "void"
	nparams 1
	  param in name "readlimit" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks the current position in this input stream.

<p> The <code>mark</code> method of <code>InflaterInputStream</code>
does nothing.

@param   readlimit   the maximum limit of bytes that can be read before
                     the mark position becomes invalid.
@see     java.io.InputStream#reset()
"
      end

      operation 9339778 "reset"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repositions this stream to the position at the time the
<code>mark</code> method was last called on this input stream.

<p> The method <code>reset</code> for class
<code>InflaterInputStream</code> does nothing except throw an
<code>IOException</code>.

@exception  IOException  if this method is invoked.
@see     java.io.InputStream#mark(int)
@see     java.io.IOException
"
      end
    end

    class 1135618 "Inflater"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides support for general purpose decompression using the
popular ZLIB compression library. The ZLIB compression library was
initially developed as part of the PNG graphics standard and is not
protected by patents. It is fully described in the specifications at
the <a href=\"package-summary.html#package_description\">java.util.zip
package description</a>.

<p>The following code fragment demonstrates a trivial compression
and decompression of a string using <tt>Deflater</tt> and
<tt>Inflater</tt>.

<blockquote><pre>
try {
    // Encode a String into bytes
    String inputString = \"blahblahblah\\u20AC\\u20AC\";
    byte[] input = inputString.getBytes(\"UTF-8\");

    // Compress the bytes
    byte[] output = new byte[100];
    Deflater compresser = new Deflater();
    compresser.setInput(input);
    compresser.finish();
    int compressedDataLength = compresser.deflate(output);

    // Decompress the bytes
    Inflater decompresser = new Inflater();
    decompresser.setInput(output, 0, compressedDataLength);
    byte[] result = new byte[100];
    int resultLength = decompresser.inflate(result);
    decompresser.end();

    // Decode the bytes into a String
    String outputString = new String(result, 0, resultLength, \"UTF-8\");
} catch(java.io.UnsupportedEncodingException ex) {
    // handle
} catch (java.util.zip.DataFormatException ex) {
    // handle
}
</pre></blockquote>

@see         Deflater
@author      David Connelly

"
      classrelation 3732738 // zsRef (<unidirectional association>)
	relation 3732738 --->
	  a role_name "zsRef" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3732738 // zsRef (<unidirectional association>)
	  b parent class_ref 1169410 // ZStreamRef
      end

      attribute 2235906 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " defaultBuf"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236034 "off"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236162 "len"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236290 "finished"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236418 "needDict"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236546 "bytesRead"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236674 "bytesWritten"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2236802 "defaultBuf"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 178946 "initialization"
	
	cpp "" ""
	java "  static {
        /* Zip library is loaded from System.initializeSystemClass */
        initIDs();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9615490 "Inflater"
	public explicit_return_type ""
	nparams 1
	  param inout name "nowrap" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new decompressor. If the parameter 'nowrap' is true then
the ZLIB header and checksum fields will not be used. This provides
compatibility with the compression format used by both GZIP and PKZIP.
<p>
Note: When using the 'nowrap' option it is also necessary to provide
an extra \"dummy\" byte as input. This is required by the ZLIB native
library in order to support certain optimizations.

@param nowrap if true then support GZIP compatible compression
"
      end

      operation 9615618 "Inflater"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new decompressor.
"
      end

      operation 9615746 "setInput"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for decompression. Should be called whenever
needsInput() returns true indicating that more input data is
required.
@param b the input data bytes
@param off the start offset of the input data
@param len the length of the input data
@see Inflater#needsInput
"
      end

      operation 9615874 "setInput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for decompression. Should be called whenever
needsInput() returns true indicating that more input data is
required.
@param b the input data bytes
@see Inflater#needsInput
"
      end

      operation 9616002 "setDictionary"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preset dictionary to the given array of bytes. Should be
called when inflate() returns 0 and needsDictionary() returns true
indicating that a preset dictionary is required. The method getAdler()
can be used to get the Adler-32 value of the dictionary needed.
@param b the dictionary data bytes
@param off the start offset of the data
@param len the length of the data
@see Inflater#needsDictionary
@see Inflater#getAdler
"
      end

      operation 9616130 "setDictionary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preset dictionary to the given array of bytes. Should be
called when inflate() returns 0 and needsDictionary() returns true
indicating that a preset dictionary is required. The method getAdler()
can be used to get the Adler-32 value of the dictionary needed.
@param b the dictionary data bytes
@see Inflater#needsDictionary
@see Inflater#getAdler
"
      end

      operation 9616258 "getRemaining"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of bytes remaining in the input buffer.
This can be used to find out what bytes still remain in the input
buffer after decompression has finished.
@return the total number of bytes remaining in the input buffer
"
      end

      operation 9616386 "needsInput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if no data remains in the input buffer. This can
be used to determine if #setInput should be called in order
to provide more input.
@return true if no data remains in the input buffer
"
      end

      operation 9616514 "needsDictionary"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a preset dictionary is needed for decompression.
@return true if a preset dictionary is needed for decompression
@see Inflater#setDictionary
"
      end

      operation 9616642 "finished"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the end of the compressed data stream has been
reached.
@return true if the end of the compressed data stream has been
reached
"
      end

      operation 9616770 "inflate"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1169282 // DataFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Uncompresses bytes into specified buffer. Returns actual number
of bytes uncompressed. A return value of 0 indicates that
needsInput() or needsDictionary() should be called in order to
determine if more input data or a preset dictionary is required.
In the latter case, getAdler() can be used to get the Adler-32
value of the dictionary required.
@param b the buffer for the uncompressed data
@param off the start offset of the data
@param len the maximum number of uncompressed bytes
@return the actual number of uncompressed bytes
@exception DataFormatException if the compressed data format is invalid
@see Inflater#needsInput
@see Inflater#needsDictionary
"
      end

      operation 9616898 "inflate"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 1169282 // DataFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Uncompresses bytes into specified buffer. Returns actual number
of bytes uncompressed. A return value of 0 indicates that
needsInput() or needsDictionary() should be called in order to
determine if more input data or a preset dictionary is required.
In the latter case, getAdler() can be used to get the Adler-32
value of the dictionary required.
@param b the buffer for the uncompressed data
@return the actual number of uncompressed bytes
@exception DataFormatException if the compressed data format is invalid
@see Inflater#needsInput
@see Inflater#needsDictionary
"
      end

      operation 9617026 "getAdler"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ADLER-32 value of the uncompressed data.
@return the ADLER-32 value of the uncompressed data
"
      end

      operation 9617154 "getTotalIn"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes input so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesRead()} method is now
the preferred means of obtaining this information.</p>

@return the total number of compressed bytes input so far
"
      end

      operation 9617282 "getBytesRead"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes input so far.

@return the total (non-negative) number of compressed bytes input so far
@since 1.5
"
      end

      operation 9617410 "getTotalOut"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes output so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesWritten()} method is now
the preferred means of obtaining this information.</p>

@return the total number of uncompressed bytes output so far
"
      end

      operation 9617538 "getBytesWritten"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes output so far.

@return the total (non-negative) number of uncompressed bytes output so far
@since 1.5
"
      end

      operation 9617666 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets inflater so that a new set of input data can be processed.
"
      end

      operation 9617794 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the decompressor and discards any unprocessed input.
This method should be called when the decompressor is no longer
being used, but will also be called automatically by the finalize()
method. Once this method is called, the behavior of the Inflater
object is undefined.
"
      end

      operation 9617922 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the decompressor when garbage is collected.
"
      end

      operation 9618050 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9618178 "ended"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9618306 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 9618434 "init"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "nowrap" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9618562 "setDictionary"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "addr" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 9618690 "inflateBytes"
	private explicit_return_type "int"
	nparams 4
	  param in name "addr" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1169282 // DataFormatException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 9618818 "getAdler"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "addr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9618946 "reset"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "addr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 9619074 "end"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "addr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 1136514 "ZipInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an input stream filter for reading files in the
ZIP file format. Includes support for both compressed and uncompressed
entries.

@author      David Connelly
"
      classrelation 3661570 // <generalisation>
	relation 3661570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3661570 // <generalisation>
	  b parent class_ref 1135490 // InflaterInputStream
      end

      classrelation 3661698 // <realization>
	relation 3661698 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3661698 // <realization>
	  b parent class_ref 1134850 // ZipConstants
      end

      classrelation 3661826 // entry (<unidirectional association>)
	relation 3661826 --->
	  a role_name "entry" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3661826 // entry (<unidirectional association>)
	  b parent class_ref 1134722 // ZipEntry
      end

      attribute 2182658 "flag"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3661954 // crc (<unidirectional association>)
	relation 3661954 --->
	  a role_name "crc" init_value " new CRC32()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3661954 // crc (<unidirectional association>)
	  b parent class_ref 1136642 // CRC32
      end

      attribute 2182786 "remaining"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2182914 "tmpbuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[512]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2183042 "STORED"
	class_attribute const_attribute private explicit_type "int"
	init_value " ZipEntry.STORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2183170 "DEFLATED"
	class_attribute const_attribute private explicit_type "int"
	init_value " ZipEntry.DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2183298 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2183426 "entryEOF"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " this flag is set to true after EOF has reached for
 one entry
"
      end

      classrelation 3662082 // zc (<unidirectional association>)
	relation 3662082 --->
	  a role_name "zc" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3662082 // zc (<unidirectional association>)
	  b parent class_ref 1135234 // ZipCoder
      end

      operation 9350530 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed
"
      end

      operation 9350658 "ZipInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ZIP input stream.

<p>The UTF-8 {@link java.nio.charset.Charset charset} is used to
decode the entry names.

@param in the actual input stream
"
      end

      operation 9350786 "ZipInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ZIP input stream.

@param in the actual input stream

@param charset
       The {@linkplain java.nio.charset.Charset charset} to be
       used to decode the ZIP entry name (ignored if the
       <a href=\"package-summary.html#lang_encoding\"> language
       encoding bit</a> of the ZIP entry's general purpose bit
       flag is set).

@since 1.7
"
      end

      operation 9350914 "getNextEntry"
	public return_type class_ref 1134722 // ZipEntry
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next ZIP file entry and positions the stream at the
beginning of the entry data.
@return the next ZIP file entry, or null if there are no more entries
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9351042 "closeEntry"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the current ZIP entry and positions the stream for reading the
next entry.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9351170 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 after EOF has reached for the current entry data,
otherwise always return 1.
<p>
Programs should not count on this method to return the actual number
of bytes that could be read without blocking.

@return     1 before EOF and 0 after EOF has reached for current entry.
@exception  IOException  if an I/O error occurs.

"
      end

      operation 9351298 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads from the current ZIP entry into an array of bytes.
If <code>len</code> is not zero, the method
blocks until some input is available; otherwise, no
bytes are read and <code>0</code> is returned.
@param b the buffer into which the data is read
@param off the start offset in the destination array <code>b</code>
@param len the maximum number of bytes read
@return the actual number of bytes read, or -1 if the end of the
        entry is reached
@exception  NullPointerException if <code>b</code> is <code>null</code>.
@exception  IndexOutOfBoundsException if <code>off</code> is negative,
<code>len</code> is negative, or <code>len</code> is greater than
<code>b.length - off</code>
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9351426 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips specified number of bytes in the current ZIP entry.
@param n the number of bytes to skip
@return the actual number of bytes skipped
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
@exception IllegalArgumentException if {@code n < 0}
"
      end

      operation 9351554 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and releases any system resources associated
with the stream.
@exception IOException if an I/O error has occurred
"
      end

      attribute 2183554 "b"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[256]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9351682 "readLOC"
	private return_type class_ref 1134722 // ZipEntry
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads local file (LOC) header for next entry.
"
      end

      operation 9351810 "createZipEntry"
	protected return_type class_ref 1134722 // ZipEntry
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>ZipEntry</code> object for the specified
entry name.

@param name the ZIP file entry name
@return the ZipEntry just created
"
      end

      operation 9351938 "readEnd"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1134722 // ZipEntry
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads end of deflated entry as well as EXT descriptor if present.
"
      end

      operation 9352066 "readFully"
	private explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads bytes, blocking until all bytes are read.
"
      end
    end

    class 1136642 "CRC32"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that can be used to compute the CRC-32 of a data stream.

<p> Passing a {@code null} argument to a method in this class will cause
a {@link NullPointerException} to be thrown.

@see         Checksum
@author      David Connelly
"
      classrelation 3731586 // <realization>
	relation 3731586 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3731586 // <realization>
	  b parent class_ref 1168898 // Checksum
      end

      attribute 2231042 "crc"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9605762 "CRC32"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new CRC32 object.
"
      end

      operation 9605890 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the CRC-32 checksum with the specified byte (the low
eight bits of the argument b).

@param b the byte to update the checksum with
"
      end

      operation 9606018 "update"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the CRC-32 checksum with the specified array of bytes.

@throws  ArrayIndexOutOfBoundsException
         if {@code off} is negative, or {@code len} is negative,
         or {@code off+len} is greater than the length of the
         array {@code b}
"
      end

      operation 9606146 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the CRC-32 checksum with the specified array of bytes.

@param b the array of bytes to update the checksum with
"
      end

      operation 9606274 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "buffer" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the checksum with the bytes from the specified buffer.

The checksum is updated using
buffer.{@link java.nio.Buffer#remaining() remaining()}
bytes starting at
buffer.{@link java.nio.Buffer#position() position()}
Upon return, the buffer's position will
be updated to its limit; its limit will not have been changed.

@param buffer the ByteBuffer to update the checksum with
@since 1.8
"
      end

      operation 9606402 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets CRC-32 to initial value.
"
      end

      operation 9606530 "getValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns CRC-32 value.
"
      end

      operation 9606658 "update"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "crc" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 9606786 "updateBytes"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "crc" explicit_type "int"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 9606914 "updateByteBuffer"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "adler" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end
    end

    class 1136898 "ZipOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an output stream filter for writing files in the
ZIP file format. Includes support for both compressed and uncompressed
entries.

@author      David Connelly
"
      classrelation 3662978 // <generalisation>
	relation 3662978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3662978 // <generalisation>
	  b parent class_ref 1137026 // DeflaterOutputStream
      end

      classrelation 3663106 // <realization>
	relation 3663106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3663106 // <realization>
	  b parent class_ref 1134850 // ZipConstants
      end

      attribute 2184578 "inhibitZip64"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "
        Boolean.parseBoolean(
            java.security.AccessController.doPrivileged(
                new sun.security.action.GetPropertyAction(
                    \"jdk.util.zip.inhibitZip64\", \"false\")))"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether to use ZIP64 for zip files with more than 64k entries.
Until ZIP64 support in zip implementations is ubiquitous, this
system property allows the creation of zip files which can be
read by legacy zip implementations which tolerate \"incorrect\"
total entry count fields, such as the ones in jdk6, and even
some in jdk7.

"
      end

      class 1137154 "XEntry"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3663234 // entry (<unidirectional association>)
	  relation 3663234 --->
	    a role_name "entry" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3663234 // entry (<unidirectional association>)
	    b parent class_ref 1134722 // ZipEntry
	end

	attribute 2184706 "offset"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9354882 "XEntry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "entry" type class_ref 1134722 // ZipEntry
	    param in name "offset" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3663362 // current (<unidirectional association>)
	relation 3663362 --->
	  a role_name "current" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3663362 // current (<unidirectional association>)
	  b parent class_ref 1137154 // XEntry
      end

      classrelation 3663490 // xentries (<unidirectional association>)
	relation 3663490 --->
	  a role_name "xentries" init_value " new Vector<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<XEntry> ${name}${value};
"
	    classrelation_ref 3663490 // xentries (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 3663618 // names (<unidirectional association>)
	relation 3663618 --->
	  a role_name "names" init_value " new HashSet<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 3663618 // names (<unidirectional association>)
	  b parent class_ref 388482 // HashSet
      end

      classrelation 3663746 // crc (<unidirectional association>)
	relation 3663746 --->
	  a role_name "crc" init_value " new CRC32()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3663746 // crc (<unidirectional association>)
	  b parent class_ref 1136642 // CRC32
      end

      attribute 2184834 "written"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2184962 "locoff"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2185090 "comment"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2185218 "method"
	private explicit_type "int"
	init_value " DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2185346 "finished"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2185474 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3663874 // zc (<unidirectional association>)
	relation 3663874 --->
	  a role_name "zc" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3663874 // zc (<unidirectional association>)
	  b parent class_ref 1135234 // ZipCoder
      end

      operation 9355010 "version"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "e" type class_ref 1134722 // ZipEntry
	nexceptions 1
	  exception class_ref 1135106 // ZipException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9355138 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to make sure that this stream has not been closed.
"
      end

      attribute 2185602 "STORED"
	class_attribute const_attribute public explicit_type "int"
	init_value " ZipEntry.STORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression method for uncompressed (STORED) entries.

"
      end

      attribute 2185730 "DEFLATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " ZipEntry.DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compression method for compressed (DEFLATED) entries.

"
      end

      operation 9355266 "ZipOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ZIP output stream.

<p>The UTF-8 {@link java.nio.charset.Charset charset} is used
to encode the entry names and comments.

@param out the actual output stream
"
      end

      operation 9355394 "ZipOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ZIP output stream.

@param out the actual output stream

@param charset the {@linkplain java.nio.charset.Charset charset}
               to be used to encode the entry names and comments

@since 1.7
"
      end

      operation 9355522 "setComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ZIP file comment.
@param comment the comment string
@exception IllegalArgumentException if the length of the specified
           ZIP file comment is greater than 0xFFFF bytes
"
      end

      operation 9355650 "setMethod"
	public explicit_return_type "void"
	nparams 1
	  param in name "method" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default compression method for subsequent entries. This
default will be used whenever the compression method is not specified
for an individual ZIP file entry, and is initially set to DEFLATED.
@param method the default compression method
@exception IllegalArgumentException if the specified compression method
           is invalid
"
      end

      operation 9355778 "setLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression level for subsequent entries which are DEFLATED.
The default setting is DEFAULT_COMPRESSION.
@param level the compression level (0-9)
@exception IllegalArgumentException if the compression level is invalid
"
      end

      operation 9355906 "putNextEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1134722 // ZipEntry
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begins writing a new ZIP file entry and positions the stream to the
start of the entry data. Closes the current entry if still active.
The default compression method will be used if no compression method
was specified for the entry, and the current time will be used if
the entry has no set modification time.
@param e the ZIP entry to be written
@exception ZipException if a ZIP format error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9356034 "closeEntry"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the current ZIP entry and positions the stream for writing
the next entry.
@exception ZipException if a ZIP format error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9356162 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the current ZIP entry data. This method
will block until all the bytes are written.
@param b the data to be written
@param off the start offset in the data
@param len the number of bytes that are written
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9356290 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing the contents of the ZIP output stream without closing
the underlying stream. Use this method when applying multiple filters
in succession to the same output stream.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O exception has occurred
"
      end

      operation 9356418 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the ZIP output stream as well as the stream being filtered.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
"
      end

      operation 9356546 "writeLOC"
	private explicit_return_type "void"
	nparams 1
	  param inout name "xentry" type class_ref 1137154 // XEntry
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes local file (LOC) header for specified entry.
"
      end

      operation 9356674 "writeEXT"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1134722 // ZipEntry
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes extra data descriptor (EXT) for specified entry.
"
      end

      operation 9356802 "writeCEN"
	private explicit_return_type "void"
	nparams 1
	  param inout name "xentry" type class_ref 1137154 // XEntry
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write central directory (CEN) header for specified entry.
REMIND: add support for file attributes
"
      end

      operation 9356930 "writeEND"
	private explicit_return_type "void"
	nparams 2
	  param in name "off" explicit_type "long"
	  param in name "len" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes end of central directory (END) header.
"
      end

      operation 9357058 "getExtraLen"
	private explicit_return_type "int"
	nparams 1
	  param inout name "extra" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of extra data without EXTT and ZIP64.
"
      end

      operation 9357186 "writeExtra"
	private explicit_return_type "void"
	nparams 1
	  param inout name "extra" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes extra data without EXTT and ZIP64.

Extra timestamp and ZIP64 data is handled/output separately
in writeLOC and writeCEN.
"
      end

      operation 9357314 "writeByte"
	private explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a 8-bit byte to the output stream.
"
      end

      operation 9357442 "writeShort"
	private explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a 16-bit short to the output stream in little-endian byte order.
"
      end

      operation 9357570 "writeInt"
	private explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a 32-bit int to the output stream in little-endian byte order.
"
      end

      operation 9357698 "writeLong"
	private explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a 64-bit int to the output stream in little-endian byte order.
"
      end

      operation 9357826 "writeBytes"
	private explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the output stream.
"
      end
    end

    class 1137026 "DeflaterOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an output stream filter for compressing data in
the \"deflate\" compression format. It is also used as the basis for other
types of compression filters, such as GZIPOutputStream.

@see         Deflater
@author      David Connelly
"
      classrelation 3662722 // <generalisation>
	relation 3662722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3662722 // <generalisation>
	  b parent class_ref 921730 // FilterOutputStream
      end

      classrelation 3662850 // def (<unidirectional association>)
	relation 3662850 --->
	  a role_name "def" protected
	    comment "
Compressor for this stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3662850 // def (<unidirectional association>)
	  b parent class_ref 334722 // Deflater
      end

      attribute 2184066 "buf"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Output buffer for writing compressed data.

"
      end

      attribute 2184194 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the stream has been closed.

"
      end

      attribute 2184322 "syncFlush"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9353346 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 4
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "def" type class_ref 334722 // Deflater
	  param in name "size" explicit_type "int"
	  param inout name "syncFlush" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified compressor,
buffer size and flush mode.

@param out the output stream
@param def the compressor (\"deflater\")
@param size the output buffer size
@param syncFlush
       if {@code true} the {@link #flush()} method of this
       instance flushes the compressor with flush mode
       {@link Deflater#SYNC_FLUSH} before flushing the output
       stream, otherwise only flushes the output stream

@throws IllegalArgumentException if {@code size <= 0}

@since 1.7
"
      end

      operation 9353474 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "def" type class_ref 334722 // Deflater
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified compressor and
buffer size.

<p>The new output stream instance is created as if by invoking
the 4-argument constructor DeflaterOutputStream(out, def, size, false).

@param out the output stream
@param def the compressor (\"deflater\")
@param size the output buffer size
@exception IllegalArgumentException if {@code size <= 0}
"
      end

      operation 9353602 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "def" type class_ref 334722 // Deflater
	  param inout name "syncFlush" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified compressor, flush
mode and a default buffer size.

@param out the output stream
@param def the compressor (\"deflater\")
@param syncFlush
       if {@code true} the {@link #flush()} method of this
       instance flushes the compressor with flush mode
       {@link Deflater#SYNC_FLUSH} before flushing the output
       stream, otherwise only flushes the output stream

@since 1.7
"
      end

      operation 9353730 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "def" type class_ref 334722 // Deflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified compressor and
a default buffer size.

<p>The new output stream instance is created as if by invoking
the 3-argument constructor DeflaterOutputStream(out, def, false).

@param out the output stream
@param def the compressor (\"deflater\")
"
      end

      attribute 2184450 "usesDefaultDeflater"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9353858 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "syncFlush" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default compressor, a default
buffer size and the specified flush mode.

@param out the output stream
@param syncFlush
       if {@code true} the {@link #flush()} method of this
       instance flushes the compressor with flush mode
       {@link Deflater#SYNC_FLUSH} before flushing the output
       stream, otherwise only flushes the output stream

@since 1.7
"
      end

      operation 9353986 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default compressor and buffer size.

<p>The new output stream instance is created as if by invoking
the 2-argument constructor DeflaterOutputStream(out, false).

@param out the output stream
"
      end

      operation 9354114 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a byte to the compressed output stream. This method will
block until the byte can be written.
@param b the byte to be written
@exception IOException if an I/O error has occurred
"
      end

      operation 9354242 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the compressed output stream. This
method will block until all the bytes are written.
@param b the data to be written
@param off the start offset of the data
@param len the length of the data
@exception IOException if an I/O error has occurred
"
      end

      operation 9354370 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing compressed data to the output stream without closing
the underlying stream. Use this method when applying multiple filters
in succession to the same output stream.
@exception IOException if an I/O error has occurred
"
      end

      operation 9354498 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes remaining compressed data to the output stream and closes the
underlying stream.
@exception IOException if an I/O error has occurred
"
      end

      operation 9354626 "deflate"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes next block of compressed data to the output stream.
@throws IOException if an I/O error has occurred
"
      end

      operation 9354754 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes the compressed output stream.

If {@link #DeflaterOutputStream(OutputStream, Deflater, int, boolean)
syncFlush} is {@code true} when this compressed output stream is
constructed, this method first flushes the underlying {@code compressor}
with the flush mode {@link Deflater#SYNC_FLUSH} to force
all pending data to be flushed out to the output stream and then
flushes the output stream. Otherwise this method only flushes the
output stream without flushing the {@code compressor}.

@throws IOException if an I/O error has occurred

@since 1.7
"
      end
    end

    class 1168770 "Adler32"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that can be used to compute the Adler-32 checksum of a data
stream. An Adler-32 checksum is almost as reliable as a CRC-32 but
can be computed much faster.

<p> Passing a {@code null} argument to a method in this class will cause
a {@link NullPointerException} to be thrown.

@see         Checksum
@author      David Connelly
"
      classrelation 3730946 // <realization>
	relation 3730946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3730946 // <realization>
	  b parent class_ref 1168898 // Checksum
      end

      attribute 2230914 "adler"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9603330 "Adler32"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Adler32 object.
"
      end

      operation 9603458 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the checksum with the specified byte (the low eight
bits of the argument b).

@param b the byte to update the checksum with
"
      end

      operation 9603586 "update"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the checksum with the specified array of bytes.

@throws  ArrayIndexOutOfBoundsException
         if {@code off} is negative, or {@code len} is negative,
         or {@code off+len} is greater than the length of the
         array {@code b}
"
      end

      operation 9603714 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the checksum with the specified array of bytes.

@param b the byte array to update the checksum with
"
      end

      operation 9603842 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "buffer" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the checksum with the bytes from the specified buffer.

The checksum is updated using
buffer.{@link java.nio.Buffer#remaining() remaining()}
bytes starting at
buffer.{@link java.nio.Buffer#position() position()}
Upon return, the buffer's position will be updated to its
limit; its limit will not have been changed.

@param buffer the ByteBuffer to update the checksum with
@since 1.8
"
      end

      operation 9603970 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the checksum to initial value.
"
      end

      operation 9604098 "getValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the checksum value.
"
      end

      operation 9604226 "update"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "adler" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 9604354 "updateBytes"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "adler" explicit_type "int"
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 9604482 "updateByteBuffer"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "adler" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end
    end

    class 1168898 "Checksum"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface representing a data checksum.

@author      David Connelly
"
      operation 9602818 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the current checksum with the specified byte.

@param b the byte to update the checksum with
"
      end

      operation 9602946 "update"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the current checksum with the specified array of bytes.
@param b the byte array to update the checksum with
@param off the start offset of the data
@param len the number of bytes to use for the update
"
      end

      operation 9603074 "getValue"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current checksum value.
@return the current checksum value
"
      end

      operation 9603202 "reset"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the checksum to its initial value.
"
      end
    end

    class 1169026 "CheckedInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An input stream that also maintains a checksum of the data being read.
The checksum can then be used to verify the integrity of the input data.

@see         Checksum
@author      David Connelly
"
      classrelation 3731074 // <generalisation>
	relation 3731074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3731074 // <generalisation>
	  b parent class_ref 577922 // FilterInputStream
      end

      classrelation 3731202 // cksum (<unidirectional association>)
	relation 3731202 --->
	  a role_name "cksum" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3731202 // cksum (<unidirectional association>)
	  b parent class_ref 1168898 // Checksum
      end

      operation 9604610 "CheckedInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "cksum" type class_ref 1168898 // Checksum
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an input stream using the specified Checksum.
@param in the input stream
@param cksum the Checksum
"
      end

      operation 9604738 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a byte. Will block if no input is available.
@return the byte read, or -1 if the end of the stream is reached.
@exception IOException if an I/O error has occurred
"
      end

      operation 9604866 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads into an array of bytes. If <code>len</code> is not zero, the method
blocks until some input is available; otherwise, no
bytes are read and <code>0</code> is returned.
@param buf the buffer into which the data is read
@param off the start offset in the destination array <code>b</code>
@param len the maximum number of bytes read
@return    the actual number of bytes read, or -1 if the end
           of the stream is reached.
@exception  NullPointerException If <code>buf</code> is <code>null</code>.
@exception  IndexOutOfBoundsException If <code>off</code> is negative,
<code>len</code> is negative, or <code>len</code> is greater than
<code>buf.length - off</code>
@exception IOException if an I/O error has occurred
"
      end

      operation 9604994 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips specified number of bytes of input.
@param n the number of bytes to skip
@return the actual number of bytes skipped
@exception IOException if an I/O error has occurred
"
      end

      operation 9605122 "getChecksum"
	public return_type class_ref 1168898 // Checksum
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Checksum for this input stream.
@return the Checksum value
"
      end
    end

    class 1169154 "CheckedOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An output stream that also maintains a checksum of the data being
written. The checksum can then be used to verify the integrity of
the output data.

@see         Checksum
@author      David Connelly
"
      classrelation 3731330 // <generalisation>
	relation 3731330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3731330 // <generalisation>
	  b parent class_ref 921730 // FilterOutputStream
      end

      classrelation 3731458 // cksum (<unidirectional association>)
	relation 3731458 --->
	  a role_name "cksum" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3731458 // cksum (<unidirectional association>)
	  b parent class_ref 1168898 // Checksum
      end

      operation 9605250 "CheckedOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "cksum" type class_ref 1168898 // Checksum
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an output stream with the specified Checksum.
@param out the output stream
@param cksum the checksum
"
      end

      operation 9605378 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a byte. Will block until the byte is actually written.
@param b the byte to be written
@exception IOException if an I/O error has occurred
"
      end

      operation 9605506 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes. Will block until the bytes are
actually written.
@param b the data to be written
@param off the start offset of the data
@param len the number of bytes to be written
@exception IOException if an I/O error has occurred
"
      end

      operation 9605634 "getChecksum"
	public return_type class_ref 1168898 // Checksum
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Checksum for this output stream.
@return the Checksum
"
      end
    end

    class 1169282 "DataFormatException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a data format error has occurred.

@author      David Connelly
"
      classrelation 3731714 // <generalisation>
	relation 3731714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3731714 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2231170 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2219632870893641452L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9607042 "DataFormatException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DataFormatException with no detail message.
"
      end

      operation 9607170 "DataFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DataFormatException with the specified detail message.
A detail message is a String that describes this particular exception.
@param s the String containing a detail message
"
      end
    end

    class 1169410 "ZStreamRef"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A reference to the native zlib's z_stream structure.
"
      attribute 2241922 "address"
	volatile private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9623298 "ZStreamRef"
	package explicit_return_type ""
	nparams 1
	  param in name "address" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9623426 "address"
	package explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9623554 "clear"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1169538 "DeflaterInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an input stream filter for compressing data in the \"deflate\"
compression format.

@since       1.6
@author      David R Tribble (david@tribble.com)

@see DeflaterOutputStream
@see InflaterOutputStream
@see InflaterInputStream
"
      classrelation 3731970 // <generalisation>
	relation 3731970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3731970 // <generalisation>
	  b parent class_ref 577922 // FilterInputStream
      end

      classrelation 3732098 // def (<unidirectional association>)
	relation 3732098 --->
	  a role_name "def" const_relation protected
	    comment " Compressor for this stream. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3732098 // def (<unidirectional association>)
	  b parent class_ref 334722 // Deflater
      end

      attribute 2233986 "buf"
	const_attribute protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Input buffer for reading compressed data. 
"
      end

      attribute 2234114 "rbuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Temporary read buffer. 
"
      end

      attribute 2234242 "usesDefaultDeflater"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default compressor is used. 
"
      end

      attribute 2234370 "reachEOF"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " End of the underlying input stream has been reached. 
"
      end

      operation 9611266 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed.
"
      end

      operation 9611394 "DeflaterInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with a default compressor and buffer
size.

@param in input stream to read the uncompressed data to
@throws NullPointerException if {@code in} is null
"
      end

      operation 9611522 "DeflaterInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "defl" type class_ref 334722 // Deflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified compressor and a
default buffer size.

@param in input stream to read the uncompressed data to
@param defl compressor (\"deflater\") for this stream
@throws NullPointerException if {@code in} or {@code defl} is null
"
      end

      operation 9611650 "DeflaterInputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "defl" type class_ref 334722 // Deflater
	  param in name "bufLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified compressor and buffer
size.

@param in input stream to read the uncompressed data to
@param defl compressor (\"deflater\") for this stream
@param bufLen compression buffer size
@throws IllegalArgumentException if {@code bufLen <= 0}
@throws NullPointerException if {@code in} or {@code defl} is null
"
      end

      operation 9611778 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and its underlying input stream, discarding
any pending uncompressed data.

@throws IOException if an I/O error occurs
"
      end

      operation 9611906 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a single byte of compressed data from the input stream.
This method will block until some input can be read and compressed.

@return a single byte of compressed data, or -1 if the end of the
uncompressed input stream is reached
@throws IOException if an I/O error occurs or if this stream is
already closed
"
      end

      operation 9612034 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads compressed data into a byte array.
This method will block until some input can be read and compressed.

@param b buffer into which the data is read
@param off starting offset of the data within {@code b}
@param len maximum number of compressed bytes to read into {@code b}
@return the actual number of bytes read, or -1 if the end of the
uncompressed input stream is reached
@throws IndexOutOfBoundsException  if {@code len > b.length - off}
@throws IOException if an I/O error occurs or if this input stream is
already closed
"
      end

      operation 9612162 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips over and discards data from the input stream.
This method may block until the specified number of bytes are read and
skipped. <em>Note:</em> While {@code n} is given as a {@code long},
the maximum number of bytes which can be skipped is
{@code Integer.MAX_VALUE}.

@param n number of bytes to be skipped
@return the actual number of bytes skipped
@throws IOException if an I/O error occurs or if this stream is
already closed
"
      end

      operation 9612290 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 after EOF has been reached, otherwise always return 1.
<p>
Programs should not count on this method to return the actual number
of bytes that could be read without blocking
@return zero after the end of the underlying input stream has been
reached, otherwise always returns 1
@throws IOException if an I/O error occurs or if this stream is
already closed
"
      end

      operation 9612418 "markSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns {@code false} because this input stream does not support
the {@link #mark mark()} and {@link #reset reset()} methods.

@return false, always
"
      end

      operation 9612546 "mark"
	public explicit_return_type "void"
	nparams 1
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<i>This operation is not supported</i>.

@param limit maximum bytes that can be read before invalidating the position marker
"
      end

      operation 9612674 "reset"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<i>This operation is not supported</i>.

@throws IOException always thrown
"
      end
    end

    class 1169666 "GZIPInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a stream filter for reading compressed data in
the GZIP file format.

@see         InflaterInputStream
@author      David Connelly

"
      classrelation 3732226 // <generalisation>
	relation 3732226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3732226 // <generalisation>
	  b parent class_ref 1135490 // InflaterInputStream
      end

      classrelation 3732354 // crc (<unidirectional association>)
	relation 3732354 --->
	  a role_name "crc" init_value " new CRC32()" protected
	    comment "
CRC-32 for uncompressed data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3732354 // crc (<unidirectional association>)
	  b parent class_ref 1136642 // CRC32
      end

      attribute 2234498 "eos"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates end of input stream.

"
      end

      attribute 2234626 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9612802 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed
"
      end

      operation 9612930 "GZIPInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified buffer size.
@param in the input stream
@param size the input buffer size

@exception ZipException if a GZIP format error has occurred or the
                        compression method used is unsupported
@exception IOException if an I/O error has occurred
@exception IllegalArgumentException if {@code size <= 0}
"
      end

      operation 9613058 "GZIPInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with a default buffer size.
@param in the input stream

@exception ZipException if a GZIP format error has occurred or the
                        compression method used is unsupported
@exception IOException if an I/O error has occurred
"
      end

      operation 9613186 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads uncompressed data into an array of bytes. If <code>len</code> is not
zero, the method will block until some input can be decompressed; otherwise,
no bytes are read and <code>0</code> is returned.
@param buf the buffer into which the data is read
@param off the start offset in the destination array <code>b</code>
@param len the maximum number of bytes read
@return  the actual number of bytes read, or -1 if the end of the
         compressed input stream is reached

@exception  NullPointerException If <code>buf</code> is <code>null</code>.
@exception  IndexOutOfBoundsException If <code>off</code> is negative,
<code>len</code> is negative, or <code>len</code> is greater than
<code>buf.length - off</code>
@exception ZipException if the compressed input data is corrupt.
@exception IOException if an I/O error has occurred.

"
      end

      operation 9613314 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and releases any system resources associated
with the stream.
@exception IOException if an I/O error has occurred
"
      end

      attribute 2234754 "GZIP_MAGIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8b1f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "GZIP header magic number.

"
      end

      attribute 2234882 "FTEXT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "File header flags.

 Extra text"
      end

      attribute 2235010 "FHCRC"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Header CRC"
      end

      attribute 2235138 "FEXTRA"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Extra field"
      end

      attribute 2235266 "FNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " File name"
      end

      attribute 2235394 "FCOMMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " File comment"
      end

      operation 9613442 "readHeader"
	private explicit_return_type "int"
	nparams 1
	  param inout name "this_in" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads GZIP member header and returns the total byte number
of this member header.
"
      end

      operation 9613570 "readTrailer"
	private explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads GZIP member trailer and returns true if the eos
reached, false if there are more (concatenated gzip
data set)
"
      end

      operation 9613698 "readUInt"
	private explicit_return_type "long"
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads unsigned integer in Intel byte order.
"
      end

      operation 9613826 "readUShort"
	private explicit_return_type "int"
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads unsigned short in Intel byte order.
"
      end

      operation 9613954 "readUByte"
	private explicit_return_type "int"
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads unsigned byte.
"
      end

      attribute 2235522 "tmpbuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[128]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9614082 "skipBytes"
	private explicit_return_type "void"
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param in name "n" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips bytes of input data blocking until all bytes are skipped.
Does not assume that the input stream is capable of seeking.
"
      end
    end

    class 1169794 "GZIPOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a stream filter for writing compressed data in
the GZIP file format.
@author      David Connelly

"
      classrelation 3732482 // <generalisation>
	relation 3732482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3732482 // <generalisation>
	  b parent class_ref 1137026 // DeflaterOutputStream
      end

      classrelation 3732610 // crc (<unidirectional association>)
	relation 3732610 --->
	  a role_name "crc" init_value " new CRC32()" protected
	    comment "
CRC-32 of uncompressed data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3732610 // crc (<unidirectional association>)
	  b parent class_ref 1136642 // CRC32
      end

      attribute 2235650 "GZIP_MAGIC"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x8b1f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "GZIP header magic number.

"
      end

      attribute 2235778 "TRAILER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Trailer size in bytes.


"
      end

      operation 9614210 "GZIPOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified buffer size.

<p>The new output stream instance is created as if by invoking
the 3-argument constructor GZIPOutputStream(out, size, false).

@param out the output stream
@param size the output buffer size
@exception IOException If an I/O error has occurred.
@exception IllegalArgumentException if {@code size <= 0}
"
      end

      operation 9614338 "GZIPOutputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" type class_ref 151298 // OutputStream
	  param in name "size" explicit_type "int"
	  param inout name "syncFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified buffer size and
flush mode.

@param out the output stream
@param size the output buffer size
@param syncFlush
       if {@code true} invocation of the inherited
       {@link DeflaterOutputStream#flush() flush()} method of
       this instance flushes the compressor with flush mode
       {@link Deflater#SYNC_FLUSH} before flushing the output
       stream, otherwise only flushes the output stream
@exception IOException If an I/O error has occurred.
@exception IllegalArgumentException if {@code size <= 0}

@since 1.7
"
      end

      operation 9614466 "GZIPOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default buffer size.

<p>The new output stream instance is created as if by invoking
the 2-argument constructor GZIPOutputStream(out, false).

@param out the output stream
@exception IOException If an I/O error has occurred.
"
      end

      operation 9614594 "GZIPOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "syncFlush" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default buffer size and
the specified flush mode.

@param out the output stream
@param syncFlush
       if {@code true} invocation of the inherited
       {@link DeflaterOutputStream#flush() flush()} method of
       this instance flushes the compressor with flush mode
       {@link Deflater#SYNC_FLUSH} before flushing the output
       stream, otherwise only flushes the output stream

@exception IOException If an I/O error has occurred.

@since 1.7
"
      end

      operation 9614722 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes array of bytes to the compressed output stream. This method
will block until all the bytes are written.
@param buf the data to be written
@param off the start offset of the data
@param len the length of the data
@exception IOException If an I/O error has occurred.
"
      end

      operation 9614850 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing compressed data to the output stream without closing
the underlying stream. Use this method when applying multiple filters
in succession to the same output stream.
@exception IOException if an I/O error has occurred
"
      end

      operation 9614978 "writeHeader"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes GZIP member header.
"
      end

      operation 9615106 "writeTrailer"
	private explicit_return_type "void"
	nparams 2
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes GZIP member trailer to a byte array, starting at a given
offset.
"
      end

      operation 9615234 "writeInt"
	private explicit_return_type "void"
	nparams 3
	  param in name "i" explicit_type "int"
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes integer in Intel byte order to a byte array, starting at a
given offset.
"
      end

      operation 9615362 "writeShort"
	private explicit_return_type "void"
	nparams 3
	  param in name "s" explicit_type "int"
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes short integer in Intel byte order to a byte array, starting
at a given offset
"
      end
    end

    class 1169922 "InflaterOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an output stream filter for uncompressing data stored in the
\"deflate\" compression format.

@since       1.6
@author      David R Tribble (david@tribble.com)

@see InflaterInputStream
@see DeflaterInputStream
@see DeflaterOutputStream
"
      classrelation 3732866 // <generalisation>
	relation 3732866 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3732866 // <generalisation>
	  b parent class_ref 921730 // FilterOutputStream
      end

      classrelation 3732994 // inf (<unidirectional association>)
	relation 3732994 --->
	  a role_name "inf" const_relation protected
	    comment " Decompressor for this stream. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3732994 // inf (<unidirectional association>)
	  b parent class_ref 1135618 // Inflater
      end

      attribute 2236930 "buf"
	const_attribute protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Output buffer for writing uncompressed data. 
"
      end

      attribute 2237058 "wbuf"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Temporary write buffer. 
"
      end

      attribute 2237186 "usesDefaultInflater"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default decompressor is used. 
"
      end

      attribute 2237314 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " true iff {@link #close()} has been called. 
"
      end

      operation 9619202 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to make sure that this stream has not been closed.
"
      end

      operation 9619330 "InflaterOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default decompressor and buffer
size.

@param out output stream to write the uncompressed data to
@throws NullPointerException if {@code out} is null
"
      end

      operation 9619458 "InflaterOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "infl" type class_ref 1135618 // Inflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified decompressor and a
default buffer size.

@param out output stream to write the uncompressed data to
@param infl decompressor (\"inflater\") for this stream
@throws NullPointerException if {@code out} or {@code infl} is null
"
      end

      operation 9619586 "InflaterOutputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "infl" type class_ref 1135618 // Inflater
	  param in name "bufLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified decompressor and
buffer size.

@param out output stream to write the uncompressed data to
@param infl decompressor (\"inflater\") for this stream
@param bufLen decompression buffer size
@throws IllegalArgumentException if {@code bufLen <= 0}
@throws NullPointerException if {@code out} or {@code infl} is null
"
      end

      operation 9619714 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes any remaining uncompressed data to the output stream and closes
the underlying output stream.

@throws IOException if an I/O error occurs
"
      end

      operation 9619842 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes this output stream, forcing any pending buffered output bytes to be
written.

@throws IOException if an I/O error occurs or this stream is already
closed
"
      end

      operation 9619970 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing uncompressed data to the output stream without closing
the underlying stream.  Use this method when applying multiple filters in
succession to the same output stream.

@throws IOException if an I/O error occurs or this stream is already
closed
"
      end

      operation 9620098 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a byte to the uncompressed output stream.

@param b a single byte of compressed data to decompress and write to
the output stream
@throws IOException if an I/O error occurs or this stream is already
closed
@throws ZipException if a compression (ZIP) format error occurs
"
      end

      operation 9620226 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the uncompressed output stream.

@param b buffer containing compressed data to decompress and write to
the output stream
@param off starting offset of the compressed data within {@code b}
@param len number of bytes to decompress from {@code b}
@throws IndexOutOfBoundsException if {@code off < 0}, or if
{@code len < 0}, or if {@code len > b.length - off}
@throws IOException if an I/O error occurs or this stream is already
closed
@throws NullPointerException if {@code b} is null
@throws ZipException if a compression (ZIP) format error occurs
"
      end
    end

    class 1170050 "ZipConstants64"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines the constants that are used by the classes
which manipulate Zip64 files.
"
      attribute 2237570 "ZIP64_ENDSIG"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0x06064b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ZIP64 constants

 \"PK\\006\\006\""
      end

      attribute 2237698 "ZIP64_LOCSIG"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0x07064b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"PK\\006\\007\""
      end

      attribute 2237826 "ZIP64_ENDHDR"
	class_attribute const_attribute package explicit_type "int"
	init_value " 56"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ZIP64 end header size"
      end

      attribute 2237954 "ZIP64_LOCHDR"
	class_attribute const_attribute package explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ZIP64 end loc header size"
      end

      attribute 2238082 "ZIP64_EXTHDR"
	class_attribute const_attribute package explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " EXT header size"
      end

      attribute 2238210 "ZIP64_EXTID"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x0001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Extra field Zip64 header ID"
      end

      attribute 2238338 "ZIP64_MAGICCOUNT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0xFFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2238466 "ZIP64_MAGICVAL"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0xFFFFFFFFL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2238594 "ZIP64_ENDLEN"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Zip64 End of central directory (END) header field offsets

 size of zip64 end of central dir"
      end

      attribute 2238722 "ZIP64_ENDVEM"
	class_attribute const_attribute package explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " version made by"
      end

      attribute 2238850 "ZIP64_ENDVER"
	class_attribute const_attribute package explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " version needed to extract"
      end

      attribute 2238978 "ZIP64_ENDNMD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of this disk"
      end

      attribute 2239106 "ZIP64_ENDDSK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " disk number of start"
      end

      attribute 2239234 "ZIP64_ENDTOD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " total number of entries on this disk"
      end

      attribute 2239362 "ZIP64_ENDTOT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " total number of entries"
      end

      attribute 2239490 "ZIP64_ENDSIZ"
	class_attribute const_attribute package explicit_type "int"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " central directory size in bytes"
      end

      attribute 2239618 "ZIP64_ENDOFF"
	class_attribute const_attribute package explicit_type "int"
	init_value " 48"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " offset of first CEN header"
      end

      attribute 2239746 "ZIP64_ENDEXT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 56"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " zip64 extensible data sector"
      end

      attribute 2239874 "ZIP64_LOCDSK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Zip64 End of central directory locator field offsets

 disk number start"
      end

      attribute 2240002 "ZIP64_LOCOFF"
	class_attribute const_attribute package explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " offset of zip64 end"
      end

      attribute 2240130 "ZIP64_LOCTOT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " total number of disks"
      end

      attribute 2240258 "ZIP64_EXTCRC"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Zip64 Extra local (EXT) header field offsets

 uncompressed file crc-32 value"
      end

      attribute 2240386 "ZIP64_EXTSIZ"
	class_attribute const_attribute package explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " compressed size, 8-byte"
      end

      attribute 2240514 "ZIP64_EXTLEN"
	class_attribute const_attribute package explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " uncompressed size, 8-byte"
      end

      attribute 2240642 "EFS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x800"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Language encoding flag EFS

 If this bit is set the filename and"
      end

      attribute 2240770 "EXTID_ZIP64"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x0001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " comment fields for this file must be
 encoded using UTF-8.

Constants below are defined here (instead of in ZipConstants)
to avoid being exposed as public fields of ZipFile, ZipEntry,
ZipInputStream and ZipOutputstream.


Extra field header ID

 Zip64"
      end

      attribute 2240898 "EXTID_NTFS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x000a"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NTFS"
      end

      attribute 2241026 "EXTID_UNIX"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x000d"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " UNIX"
      end

      attribute 2241154 "EXTID_EXTT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x5455"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Info-ZIP Extended Timestamp"
      end

      attribute 2241282 "EXTT_FLAG_LMT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "EXTT timestamp flags

 LastModifiedTime"
      end

      attribute 2241410 "EXTT_FLAG_LAT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " LastAccessTime"
      end

      attribute 2241538 "EXTT_FLAT_CT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " CreationTime"
      end

      operation 9621634 "ZipConstants64"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1170178 "ZipError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that an unrecoverable error has occurred.

@author  Dave Bristor
@since   1.6
"
      classrelation 3733634 // <generalisation>
	relation 3733634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3733634 // <generalisation>
	  b parent class_ref 934274 // InternalError
      end

      attribute 2241666 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 853973422266861979L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9621762 "ZipError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ZipError with the given detail message.
@param s the {@code String} containing a detail message
"
      end
    end

    class 1170306 "ZipUtils"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 2241794 "WINDOWS_EPOCH_IN_MICROSECONDS"
	class_attribute const_attribute private explicit_type "long"
	init_value " -11644473600000000L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " used to adjust values between Windows and java epoch
"
      end

      operation 9621890 "winTimeToFileTime"
	class_operation public return_type class_ref 996354 // FileTime
	nparams 1
	  param in name "wtime" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts Windows time (in microseconds, UTC/GMT) time to FileTime.
"
      end

      operation 9622018 "fileTimeToWinTime"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "ftime" type class_ref 996354 // FileTime
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts FileTime to Windows time.
"
      end

      operation 9622146 "unixTimeToFileTime"
	class_operation public return_type class_ref 996354 // FileTime
	nparams 1
	  param in name "utime" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts \"standard Unix time\"(in seconds, UTC/GMT) to FileTime
"
      end

      operation 9622274 "fileTimeToUnixTime"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "ftime" type class_ref 996354 // FileTime
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts FileTime to \"standard Unix time\".
"
      end

      operation 9622402 "dosToJavaTime"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "dtime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts DOS time to Java time (number of milliseconds since epoch).
"
      end

      operation 9622530 "extendedDosToJavaTime"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "xdostime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts extended DOS time to Java time, where up to 1999 milliseconds
might be encoded into the upper half of the returned long.

@param xdostime the extended DOS time value
@return milliseconds since epoch
"
      end

      operation 9622658 "javaToDosTime"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Converts Java time to DOS time.
"
      end

      operation 9622786 "javaToExtendedDosTime"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts Java time to DOS time, encoding any milliseconds lost
in the conversion into the upper half of the returned long.

@param time milliseconds since epoch
@return DOS time with 2s remainder encoded into upper half
"
      end

      operation 9622914 "get16"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches unsigned 16-bit value from byte array at specified offset.
The bytes are assumed to be in Intel (little-endian) byte order.
"
      end

      operation 9623042 "get32"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches unsigned 32-bit value from byte array at specified offset.
The bytes are assumed to be in Intel (little-endian) byte order.
"
      end

      operation 9623170 "get64"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches signed 64-bit value from byte array at specified offset.
The bytes are assumed to be in Intel (little-endian) byte order.
"
      end
    end
  end

  deploymentview 171138 "zip"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 818690 "ZipConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1134850 // ZipConstants
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 818818 "ZipEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.file.attribute.FileTime;
import java.util.Objects;
import java.util.concurrent.TimeUnit;
${definition}"
      associated_elems
	class_ref 1134722 // ZipEntry
      end
      comment "Copyright (c) 1995, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 819074 "ZipException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1135106 // ZipException
      end
      comment "Copyright (c) 1995, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 819330 "InflaterInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
${definition}"
      associated_elems
	class_ref 1135490 // InflaterInputStream
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 819458 "ZipFile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Closeable;
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
import java.io.File;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.WeakHashMap;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 542466 // ZipFile
      end
      comment "Copyright (c) 1995, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 819714 "ZipInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
import java.io.PushbackInputStream;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import static java.util.zip.ZipConstants64.*;
import static java.util.zip.ZipUtils.*;
${definition}"
      associated_elems
	class_ref 1136514 // ZipInputStream
      end
      comment "Copyright (c) 1996, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 819970 "DeflaterOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1137026 // DeflaterOutputStream
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 820098 "ZipOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.Vector;
import java.util.HashSet;
${definition}"
      associated_elems
	class_ref 1136898 // ZipOutputStream
      end
      comment "Copyright (c) 1996, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830210 "Checksum"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1168898 // Checksum
      end
      comment "Copyright (c) 1996, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830338 "Adler32"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 1168770 // Adler32
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830466 "CheckedInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1169026 // CheckedInputStream
      end
      comment "Copyright (c) 1996, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830594 "CheckedOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1169154 // CheckedOutputStream
      end
      comment "Copyright (c) 1996, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830722 "CRC32"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 1136642 // CRC32
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830850 "DataFormatException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1169282 // DataFormatException
      end
      comment "Copyright (c) 1996, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 830978 "Deflater"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 334722 // Deflater
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831106 "DeflaterInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1169538 // DeflaterInputStream
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831234 "GZIPInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.SequenceInputStream;
import java.io.ByteArrayInputStream;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
${definition}"
      associated_elems
	class_ref 1169666 // GZIPInputStream
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831362 "GZIPOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1169794 // GZIPOutputStream
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831490 "Inflater"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1135618 // Inflater
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831618 "InflaterOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
${definition}"
      associated_elems
	class_ref 1169922 // InflaterOutputStream
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831746 "ZipCoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.CoderResult;
import java.nio.charset.CodingErrorAction;
import java.util.Arrays;
import sun.nio.cs.ArrayDecoder;
import sun.nio.cs.ArrayEncoder;
${definition}"
      associated_elems
	class_ref 1135234 // ZipCoder
      end
      comment "Copyright (c) 2009, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 831874 "ZipConstants64"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1170050 // ZipConstants64
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 832002 "ZipError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1170178 // ZipError
      end
      comment "Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 832130 "ZipUtils"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.file.attribute.FileTime;
import java.util.Date;
import java.util.concurrent.TimeUnit;
${definition}"
      associated_elems
	class_ref 1170306 // ZipUtils
      end
      comment "Copyright (c) 2013, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 832258 "ZStreamRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1169410 // ZStreamRef
      end
      comment "Copyright (c) 2009, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
