class SkinPainter
!!!2775298.java!!!	SkinPainter()
            super(30);
            flush();
!!!2775426.java!!!	flush() : void
            super.flush();
!!!2775554.java!!!	paintToImage(inout c : Component, inout image : Image, inout g : Graphics, in w : int, in h : int, inout args : Object [[]]) : void
            boolean accEnabled = false;
            Skin skin = (Skin)args[0];
            Part part = skin.part;
            State state = (State)args[1];
            if (state == null) {
                state = skin.state;
            }
            if (c == null) {
                c = skin.component;
            }
            BufferedImage bi = (BufferedImage)image;

            WritableRaster raster = bi.getRaster();
            DataBufferInt dbi = (DataBufferInt)raster.getDataBuffer();
            // Note that stealData() requires a markDirty() afterwards
            // since we modify the data in it.
            ThemeReader.paintBackground(SunWritableRaster.stealData(dbi, 0),
                                        part.getControlName(c), part.getValue(),
                                        State.getValue(part, state),
                                        0, 0, w, h, w);
            SunWritableRaster.markDirty(dbi);
!!!2775682.java!!!	createImage(inout c : Component, in w : int, in h : int, inout config : GraphicsConfiguration, inout args : Object [[]]) : Image
            return new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
