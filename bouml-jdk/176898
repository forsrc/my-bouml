format 222
"operations" // jdk1.8::com::sun::org::apache::xpath::internal::operations
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xpath/internal/operations/"
  java_package "com.sun.org.apache.xpath.internal.operations"
  classview 170242 "operations"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 806914 "Operation"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The baseclass for a binary operation.
"
      classrelation 2620162 // <generalisation>
	relation 2620162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2620162 // <generalisation>
	  b parent class_ref 775682 // Expression
      end

      classrelation 2620290 // <realization>
	relation 2620290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2620290 // <realization>
	  b parent class_ref 776066 // ExpressionOwner
      end

      attribute 1288834 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3037139537171050430L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2620418 // m_left (<unidirectional association>)
	relation 2620418 --->
	  a role_name "m_left" protected
	    comment " The left operand expression.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2620418 // m_left (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      classrelation 2620546 // m_right (<unidirectional association>)
	relation 2620546 --->
	  a role_name "m_right" protected
	    comment " The right operand expression.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2620546 // m_right (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      operation 5944066 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5944194 "canTraverseOutsideSubtree"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this expression or it's subexpressions can traverse outside
the current subtree.

@return true if traversal outside the context node's subtree can occur.
"
      end

      operation 5944322 "setLeftRight"
	public explicit_return_type "void"
	nparams 2
	  param inout name "l" type class_ref 775682 // Expression
	  param inout name "r" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the left and right operand expressions for this operation.


@param l The left expression operand.
@param r The right expression operand.
"
      end

      operation 5944450 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute a binary operation by calling execute on each of the operands,
and then calling the operate method on the derived class.


@param xctxt The runtime execution context.

@return The XObject result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5944578 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5944706 "getLeftOperand"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the left operand of binary operation, as an Expression.
"
      end

      operation 5944834 "getRightOperand"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the right operand of binary operation, as an Expression.
"
      end

      class 824066 "LeftExprOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2620674 // <realization>
	  relation 2620674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2620674 // <realization>
	    b parent class_ref 776066 // ExpressionOwner
	end

	operation 5944962 "getExpression"
	  public return_type class_ref 775682 // Expression
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#getExpression()
"
	end

	operation 5945090 "setExpression"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "exp" type class_ref 775682 // Expression
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#setExpression(Expression)
"
	end
      end

      operation 5945218 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      operation 5945346 "getExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#getExpression()
"
      end

      operation 5945474 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#setExpression(Expression)
"
      end

      operation 5945602 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 807042 "UnaryOperation"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The unary operation base class.
"
      classrelation 2620930 // <generalisation>
	relation 2620930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2620930 // <generalisation>
	  b parent class_ref 775682 // Expression
      end

      classrelation 2621058 // <realization>
	relation 2621058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2621058 // <realization>
	  b parent class_ref 776066 // ExpressionOwner
      end

      attribute 1289090 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6536083808424286166L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2621186 // m_right (<unidirectional association>)
	relation 2621186 --->
	  a role_name "m_right" protected
	    comment " The operand for the operation.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2621186 // m_right (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      operation 5945986 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5946114 "canTraverseOutsideSubtree"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this expression or it's subexpressions can traverse outside
the current subtree.

@return true if traversal outside the context node's subtree can occur.
"
      end

      operation 5946242 "setRight"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the expression operand for the operation.


@param r The expression operand to which the unary operation will be
         applied.
"
      end

      operation 5946370 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the operand and apply the unary operation to the result.


@param xctxt The runtime execution context.

@return An XObject that represents the result of applying the unary
        operation to the evaluated operand.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5946498 "operate"
	abstract public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5946626 "getOperand"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the operand of unary operation, as an Expression.
"
      end

      operation 5946754 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      operation 5946882 "getExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#getExpression()
"
      end

      operation 5947010 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#setExpression(Expression)
"
      end

      operation 5947138 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 807170 "Variable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The variable reference expression executer.
"
      classrelation 2623490 // <generalisation>
	relation 2623490 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2623490 // <generalisation>
	  b parent class_ref 775682 // Expression
      end

      classrelation 2623618 // <realization>
	relation 2623618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2623618 // <realization>
	  b parent class_ref 808450 // PathComponent
      end

      attribute 1291394 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4334975375609297049L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1291522 "m_fixUpWasCalled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Tell if fixupVariables was called.
 @serial   
"
      end

      classrelation 2623746 // m_qname (<unidirectional association>)
	relation 2623746 --->
	  a role_name "m_qname" protected
	    comment " The qualified name of the variable.
 @serial   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2623746 // m_qname (<unidirectional association>)
	  b parent class_ref 583426 // QName
      end

      attribute 1291650 "m_index"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the variable, which is either an absolute index to a
global, or, if higher than the globals area, must be adjusted by adding
the offset to the current stack frame.

"
      end

      operation 5950722 "setIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the index for the variable into the stack.  For advanced use only. You
must know what you are doing to use this.

@param index a global or local index.
"
      end

      operation 5950850 "getIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the index for the variable into the stack.  For advanced use only.

@return index a global or local index.
"
      end

      operation 5950978 "setIsGlobal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isGlobal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether or not this is a global reference.  For advanced use only.

@param isGlobal true if this should be a global variable reference.
"
      end

      operation 5951106 "getGlobal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the index for the variable into the stack.  For advanced use only.

@return true if this should be a global variable reference.
"
      end

      attribute 1291778 "m_isGlobal"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5951234 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5951362 "setQName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qname" type class_ref 583426 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the qualified name of the variable.

@param qname Must be a non-null reference to a qualified name.
"
      end

      operation 5951490 "getQName"
	public return_type class_ref 583426 // QName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the qualified name of the variable.

@return A non-null reference to a qualified name.
"
      end

      operation 5951618 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an expression in the XPath runtime context, and return the
result of the expression.


@param xctxt The XPath runtime context.

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
"
      end

      operation 5951746 "execute"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "destructiveOK" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dereference the variable, and return the reference value.  Note that lazy
evaluation will occur.  If a variable within scope is not found, a warning
will be sent to the error listener, and an empty nodeset will be returned.


@param xctxt The runtime execution context.

@return The evaluated variable, or an empty nodeset if not found.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5951874 "isStableNumber"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XSLT ElemVariable that this sub-expression references.  In order for
this to work, the SourceLocator must be the owning ElemTemplateElement.
@return The dereference to the ElemVariable, or null if not found.

 J2SE does not support Xalan interpretive

public com.sun.org.apache.xalan.internal.templates.ElemVariable getElemVariable()
{

// Get the current ElemTemplateElement, and then walk backwards in
// document order, searching
// for an xsl:param element or xsl:variable element that matches our
// qname.  If we reach the top level, use the StylesheetRoot's composed
// list of top level variables and parameters.

com.sun.org.apache.xalan.internal.templates.ElemVariable vvar = null;
com.sun.org.apache.xpath.internal.ExpressionNode owner = getExpressionOwner();

if (null != owner && owner instanceof com.sun.org.apache.xalan.internal.templates.ElemTemplateElement)
{

com.sun.org.apache.xalan.internal.templates.ElemTemplateElement prev =
(com.sun.org.apache.xalan.internal.templates.ElemTemplateElement) owner;

if (!(prev instanceof com.sun.org.apache.xalan.internal.templates.Stylesheet))
{
while ( prev != null && !(prev.getParentNode() instanceof com.sun.org.apache.xalan.internal.templates.Stylesheet) )
{
com.sun.org.apache.xalan.internal.templates.ElemTemplateElement savedprev = prev;

while (null != (prev = prev.getPreviousSiblingElem()))
{
if(prev instanceof com.sun.org.apache.xalan.internal.templates.ElemVariable)
{
vvar = (com.sun.org.apache.xalan.internal.templates.ElemVariable) prev;

if (vvar.getName().equals(m_qname))
{
return vvar;
}
vvar = null;
}
}
prev = savedprev.getParentElem();
}
}
if (prev != null)
vvar = prev.getStylesheetRoot().getVariableOrParamComposed(m_qname);
}
return vvar;

}


Tell if this expression returns a stable number that will not change during
iterations within the expression.  This is used to determine if a proximity
position predicate can indicate that no more searching has to occur.


@return true if the expression represents a stable number.
"
      end

      operation 5952002 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5952130 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      operation 5952258 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end

      classrelation 2623874 // PSUEDOVARNAMESPACE (<unidirectional association>)
	relation 2623874 --->
	  a role_name "PSUEDOVARNAMESPACE" init_value " \"http://xml.apache.org/xalan/psuedovar\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2623874 // PSUEDOVARNAMESPACE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5952386 "isPsuedoVarRef"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this is a psuedo variable reference, declared by Xalan instead
of by the user.
"
      end
    end

    class 823938 "And"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'and' operation expression executer.
"
      classrelation 2620802 // <generalisation>
	relation 2620802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2620802 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1288962 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 392330077126534022L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5945730 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "AND two expressions and return the boolean result. Override
superclass method for optimization purposes.

@param xctxt The runtime execution context.

@return {@link com.sun.org.apache.xpath.internal.objects.XBoolean#S_TRUE} or
{@link com.sun.org.apache.xpath.internal.objects.XBoolean#S_FALSE}.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5945858 "bool"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a boolean.

@param xctxt The runtime execution context.

@return The result of the operation as a boolean.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824194 "Bool"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'boolean()' operation expression executer.
"
      classrelation 2621314 // <generalisation>
	relation 2621314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2621314 // <generalisation>
	  b parent class_ref 807042 // UnaryOperation
      end

      attribute 1289218 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 44705375321914635L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5947266 "operate"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5947394 "bool"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a boolean.

@param xctxt The runtime execution context.

@return The result of the operation as a boolean.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824322 "Div"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'div' operation expression executer.
"
      classrelation 2621442 // <generalisation>
	relation 2621442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2621442 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1289346 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6220756595959798135L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5947522 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5947650 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824450 "Equals"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '=' operation expression executer.
"
      classrelation 2621570 // <generalisation>
	relation 2621570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2621570 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1289474 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2658315633903426134L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5947778 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5947906 "bool"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute a binary operation by calling execute on each of the operands,
and then calling the operate method on the derived class.


@param xctxt The runtime execution context.

@return The XObject result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824578 "Gt"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '>' operation expression executer.
"
      classrelation 2621698 // <generalisation>
	relation 2621698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2621698 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1289602 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 8927078751014375950L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5948034 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824706 "Gte"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '>=' operation expression executer.
"
      classrelation 2621826 // <generalisation>
	relation 2621826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2621826 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1289730 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 9142945909906680220L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5948162 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824834 "Lt"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '<' operation expression executer.
"
      classrelation 2621954 // <generalisation>
	relation 2621954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2621954 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1289858 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3388420509289359422L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5948290 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 824962 "Lte"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '<=' operation expression executer.
"
      classrelation 2622082 // <generalisation>
	relation 2622082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622082 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1289986 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6945650810527140228L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5948418 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825090 "Minus"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The binary '-' operation expression executer.
"
      classrelation 2622210 // <generalisation>
	relation 2622210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622210 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1290114 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5297672838170871043L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5948546 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the
        result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5948674 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825218 "Mod"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'mod' operation expression executer.
"
      classrelation 2622338 // <generalisation>
	relation 2622338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622338 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1290242 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 5009471154238918201L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5948802 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5948930 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825346 "Mult"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '*' operation expression executer.
"
      classrelation 2622466 // <generalisation>
	relation 2622466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622466 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1290370 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4956770147013414675L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5949058 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5949186 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825474 "Neg"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The unary '-' operation expression executer.
"
      classrelation 2622594 // <generalisation>
	relation 2622594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622594 // <generalisation>
	  b parent class_ref 807042 // UnaryOperation
      end

      attribute 1290498 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6280607702375702291L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5949314 "operate"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5949442 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825602 "NotEquals"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '!=' operation expression executer.
"
      classrelation 2622722 // <generalisation>
	relation 2622722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622722 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1290626 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7869072863070586900L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5949570 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825730 "Number"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'number()' operation expression executer.
"
      classrelation 2622850 // <generalisation>
	relation 2622850 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622850 // <generalisation>
	  b parent class_ref 807042 // UnaryOperation
      end

      attribute 1290754 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7196954482871619765L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5949698 "operate"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5949826 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825858 "Or"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'or' operation expression executer.
"
      classrelation 2622978 // <generalisation>
	relation 2622978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2622978 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1290882 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -644107191353853079L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5949954 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "OR two expressions and return the boolean result. Override
superclass method for optimization purposes.

@param xctxt The runtime execution context.

@return {@link com.sun.org.apache.xpath.internal.objects.XBoolean#S_TRUE} or
{@link com.sun.org.apache.xpath.internal.objects.XBoolean#S_FALSE}.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5950082 "bool"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a boolean.

@param xctxt The runtime execution context.

@return The result of the operation as a boolean.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 825986 "Plus"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The '+' operation expression executer.
"
      classrelation 2623106 // <generalisation>
	relation 2623106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2623106 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1291010 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4492072861616504256L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5950210 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5950338 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a double.

@param xctxt The runtime execution context.

@return The result of the operation as a double.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 826114 "Quo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'quo' operation expression executer. (no longer supported by XPath).
@deprecated
"
      classrelation 2623234 // <generalisation>
	relation 2623234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2623234 // <generalisation>
	  b parent class_ref 806914 // Operation
      end

      attribute 1291138 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 693765299196169905L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5950466 "operate"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "left" type class_ref 583298 // XObject
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actually, this is no longer supported by xpath...

Apply the operation to two operands, and return the result.


@param left non-null reference to the evaluated left operand.
@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 826242 "String"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 'string()' operation expression executer.
"
      classrelation 2623362 // <generalisation>
	relation 2623362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2623362 // <generalisation>
	  b parent class_ref 807042 // UnaryOperation
      end

      attribute 1291266 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2973374377453022888L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5950594 "operate"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "right" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply the operation to two operands, and return the result.


@param right non-null reference to the evaluated right operand.

@return non-null reference to the XObject that represents the result of the operation.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 826370 "VariableSafeAbsRef"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a \"smart\" variable reference that is used in situations where
an absolute path is optimized into a variable reference, but may
be used in some situations where the document context may have changed.
For instance, in select=\"document(doc/@href)//name[//salary &gt; 7250]\", the
root in the predicate will be different for each node in the set.  While
this is easy to detect statically in this case, in other cases static
detection would be very hard or impossible.  So, this class does a dynamic check
to make sure the document context of the referenced variable is the same as
the current document context, and, if it is not, execute the referenced variable's
expression with the current context instead.
"
      classrelation 2624002 // <generalisation>
	relation 2624002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2624002 // <generalisation>
	  b parent class_ref 807170 // Variable
      end

      attribute 1291906 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -9174661990819967452L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5952514 "execute"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "destructiveOK" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dereference the variable, and return the reference value.  Note that lazy
evaluation will occur.  If a variable within scope is not found, a warning
will be sent to the error listener, and an empty nodeset will be returned.


@param xctxt The runtime execution context.

@return The evaluated variable, or an empty nodeset if not found.

@throws javax.xml.transform.TransformerException
"
      end
    end
  end

  deploymentview 164354 "operations"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 590722 "Operation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 806914 // Operation
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Operation.java,v 1.2.4.1 2005/09/14 21:31:42 jeffsuttor Exp $
"
    end

    artifact 590850 "And"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 823938 // And
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: And.java,v 1.2.4.1 2005/09/14 21:31:42 jeffsuttor Exp $
"
    end

    artifact 590978 "UnaryOperation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 807042 // UnaryOperation
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: UnaryOperation.java,v 1.2.4.1 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 591106 "Bool"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824194 // Bool
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Bool.java,v 1.2.4.1 2005/09/14 21:31:43 jeffsuttor Exp $
"
    end

    artifact 591234 "Div"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824322 // Div
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Div.java,v 1.2.4.1 2005/09/14 21:31:45 jeffsuttor Exp $
"
    end

    artifact 591362 "Equals"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824450 // Equals
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Equals.java,v 1.2.4.1 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 591490 "Gt"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824578 // Gt
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Gt.java,v 1.2.4.1 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 591618 "Gte"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824706 // Gte
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Gte.java,v 1.2.4.1 2005/09/14 21:31:42 jeffsuttor Exp $
"
    end

    artifact 591746 "Lt"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824834 // Lt
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Lt.java,v 1.2.4.1 2005/09/14 21:31:41 jeffsuttor Exp $
"
    end

    artifact 591874 "Lte"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 824962 // Lte
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Lte.java,v 1.2.4.1 2005/09/14 21:31:45 jeffsuttor Exp $
"
    end

    artifact 592002 "Minus"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825090 // Minus
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Minus.java,v 1.2.4.1 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 592130 "Mod"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825218 // Mod
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Mod.java,v 1.2.4.1 2005/09/14 21:31:45 jeffsuttor Exp $
"
    end

    artifact 592258 "Mult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825346 // Mult
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Mult.java,v 1.2.4.1 2005/09/14 21:31:46 jeffsuttor Exp $
"
    end

    artifact 592386 "Neg"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825474 // Neg
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Neg.java,v 1.2.4.1 2005/09/14 21:31:45 jeffsuttor Exp $
"
    end

    artifact 592514 "NotEquals"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825602 // NotEquals
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NotEquals.java,v 1.2.4.1 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 592642 "Number"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825730 // Number
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Number.java,v 1.2.4.1 2005/09/14 21:31:42 jeffsuttor Exp $
"
    end

    artifact 592770 "Or"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XBoolean;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825858 // Or
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Or.java,v 1.2.4.1 2005/09/14 21:31:41 jeffsuttor Exp $
"
    end

    artifact 592898 "Plus"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 825986 // Plus
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Plus.java,v 1.2.4.1 2005/09/14 21:31:43 jeffsuttor Exp $
"
    end

    artifact 593026 "Quo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 826114 // Quo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Quo.java,v 1.2.4.2 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 593154 "String"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.objects.XString;
${definition}"
      associated_elems
	class_ref 826242 // String
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: String.java,v 1.2.4.1 2005/09/14 21:31:44 jeffsuttor Exp $
"
    end

    artifact 593282 "Variable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.utils.QName;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPath;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.axes.PathComponent;
import com.sun.org.apache.xpath.internal.axes.WalkerFactory;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 807170 // Variable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Variable.java,v 1.2.4.1 2005/09/14 21:24:33 jeffsuttor Exp $
"
    end

    artifact 593410 "VariableSafeAbsRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 826370 // VariableSafeAbsRef
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: VariableSafeAbsRef.java,v 1.2.4.1 2005/09/14 21:31:45 jeffsuttor Exp $
"
    end
  end
end
