class AccessibleRelationSet
!!!9630594.java!!!	AccessibleRelationSet()
        relations = null;
!!!9630722.java!!!	AccessibleRelationSet(inout relations : AccessibleRelation [[]])
        if (relations.length != 0) {
            this.relations = new Vector(relations.length);
            for (int i = 0; i < relations.length; i++) {
                add(relations[i]);
            }
        }
!!!9630850.java!!!	add(inout relation : AccessibleRelation) : boolean
        if (relations == null) {
            relations = new Vector();
        }

        // Merge the relation targets if the key exists
        AccessibleRelation existingRelation = get(relation.getKey());
        if (existingRelation == null) {
            relations.addElement(relation);
            return true;
        } else {
            Object [] existingTarget = existingRelation.getTarget();
            Object [] newTarget = relation.getTarget();
            int mergedLength = existingTarget.length + newTarget.length;
            Object [] mergedTarget = new Object[mergedLength];
            for (int i = 0; i < existingTarget.length; i++) {
                mergedTarget[i] = existingTarget[i];
            }
            for (int i = existingTarget.length, j = 0;
                 i < mergedLength;
                 i++, j++) {
                mergedTarget[i] = newTarget[j];
            }
            existingRelation.setTarget(mergedTarget);
        }
        return true;
!!!9630978.java!!!	addAll(inout relations : AccessibleRelation [[]]) : void
        if (relations.length != 0) {
            if (this.relations == null) {
                this.relations = new Vector(relations.length);
            }
            for (int i = 0; i < relations.length; i++) {
                add(relations[i]);
            }
        }
!!!9631106.java!!!	remove(inout relation : AccessibleRelation) : boolean
        if (relations == null) {
            return false;
        } else {
            return relations.removeElement(relation);
        }
!!!9631234.java!!!	clear() : void
        if (relations != null) {
            relations.removeAllElements();
        }
!!!9631362.java!!!	size() : int
        if (relations == null) {
            return 0;
        } else {
            return relations.size();
        }
!!!9631490.java!!!	contains(inout key : String) : boolean
        return get(key) != null;
!!!9631618.java!!!	get(inout key : String) : AccessibleRelation
        if (relations == null) {
            return null;
        } else {
            int len = relations.size();
            for (int i = 0; i < len; i++) {
                AccessibleRelation relation =
                    (AccessibleRelation)relations.elementAt(i);
                if (relation != null && relation.getKey().equals(key)) {
                    return relation;
                }
            }
            return null;
        }
!!!9631746.java!!!	toArray() : AccessibleRelation
        if (relations == null) {
            return new AccessibleRelation[0];
        } else {
            AccessibleRelation[] relationArray
                = new AccessibleRelation[relations.size()];
            for (int i = 0; i < relationArray.length; i++) {
                relationArray[i] = (AccessibleRelation) relations.elementAt(i);
            }
            return relationArray;
        }
!!!9631874.java!!!	toString() : String
        String ret = "";
        if ((relations != null) && (relations.size() > 0)) {
            ret = ((AccessibleRelation) (relations.elementAt(0))).toDisplayString();
            for (int i = 1; i < relations.size(); i++) {
                ret = ret + ","
                        + ((AccessibleRelation) (relations.elementAt(i))).
                                              toDisplayString();
            }
        }
        return ret;
