format 222
"axes" // jdk1.8::com::sun::org::apache::xpath::internal::axes
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xpath/internal/axes/"
  java_package "com.sun.org.apache.xpath.internal.axes"
  classview 169986 "axes"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 804866 "ContextNodeList"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Classes who implement this interface can be a
<a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>,
also refered to here as a <term>context node list</term>.
@xsl.usage advanced
"
      operation 5760642 "getCurrentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a>.


@return The current node, or null.
"
      end

      operation 5760770 "getCurrentPos"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current position, which is one less than
the next nextNode() call will retrieve.  i.e. if
you call getCurrentPos() and the return is 0, the next
fetch will take place at index 1.

@return The position of the
<a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a>
in the  <a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>.
"
      end

      operation 5760898 "reset"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator.
"
      end

      operation 5761026 "setShouldCacheNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If setShouldCacheNodes(true) is called, then nodes will
be cached.  They are not cached by default.

@param b true if the nodes should be cached.
"
      end

      operation 5761154 "runTo"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If an index is requested, NodeSetDTM will call this method
to run the iterator to the index.  By default this sets
m_next to the index.  If the index argument is -1, this
signals that the iterator should be run to the end.

@param index The index to run to, or -1 if the iterator should be run
             to the end.
"
      end

      operation 5761282 "setCurrentPos"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current position in the node set.
@param i Must be a valid index.
"
      end

      operation 5761410 "size"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return The number of nodes in this node list.
"
      end

      operation 5761538 "isFresh"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this NodeSetDTM is \"fresh\", in other words, if
the first nextNode() that is called will return the
first node in the set.

@return true if the iteration of this list has not yet begun.
"
      end

      operation 5761666 "cloneWithReset"
	public return_type class_ref 583042 // NodeIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned Iterator that is reset to the start of the iteration.

@return A clone of this iteration that has been reset.

@throws CloneNotSupportedException
"
      end

      operation 5761794 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a clone of this iterator.  Be aware that this operation may be
somewhat expensive.


@return A clone of this object.

@throws CloneNotSupportedException
"
      end

      operation 5761922 "getLast"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the index of the last node in this list.


@return the index of the last node in this list.
"
      end

      operation 5762050 "setLast"
	public explicit_return_type "void"
	nparams 1
	  param in name "last" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the index of the last node in this list.


@param last the index of the last node in this list.
"
      end
    end

    class 805762 "SubContextList"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that implements this interface is a sub context node list, meaning it
is a node list for a location path step for a predicate.
@xsl.usage advanced
"
      operation 5805954 "getLastPos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of nodes in the node list, which, in the XSLT 1 based
counting system, is the last index position.


@param xctxt The XPath runtime context.

@return the number of nodes in the node list.
"
      end

      operation 5806082 "getProximityPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current sub-context position.

@param xctxt The XPath runtime context.

@return The position of the current node in the list.
"
      end
    end

    class 806530 "LocPathIterator"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class extends NodeSetDTM, which implements NodeIterator,
and fetches nodes one at a time in document order based on a XPath
<a href=\"http://www.w3.org/TR/xpath#NT-LocationPath>LocationPath</a>.

<p>If setShouldCacheNodes(true) is called,
as each node is iterated via nextNode(), the node is also stored
in the NodeVector, so that previousNode() can easily be done, except in
the case where the LocPathIterator is \"owned\" by a UnionPathIterator,
in which case the UnionPathIterator will cache the nodes.</p>
@xsl.usage advanced
"
      classrelation 2580226 // <generalisation>
	relation 2580226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2580226 // <generalisation>
	  b parent class_ref 808194 // PredicatedNodeTest
      end

      classrelation 2580354 // <realization>
	relation 2580354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2580354 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2580482 // <realization>
	relation 2580482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2580482 // <realization>
	  b parent class_ref 635522 // DTMIterator
      end

      classrelation 2580610 // <realization>
	relation 2580610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2580610 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2580738 // <realization>
	relation 2580738 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2580738 // <realization>
	  b parent class_ref 808450 // PathComponent
      end

      attribute 1250818 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4602476357268405754L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5810050 "LocPathIterator"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object.

"
      end

      operation 5810178 "LocPathIterator"
	protected explicit_return_type ""
	nparams 1
	  param inout name "nscontext" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object.

@param nscontext The namespace context for this iterator,
should be OK if null.
"
      end

      operation 5810306 "LocPathIterator"
	protected explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5810434 "LocPathIterator"
	protected explicit_return_type ""
	nparams 4
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	  param inout name "shouldLoadWalkers" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.
@param shouldLoadWalkers True if walkers should be
loaded, or false if this is a derived iterator and
it doesn't wish to load child walkers.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5810562 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5810690 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the object from a serialization stream.

@param stream Input stream to read from

@throws java.io.IOException
@throws javax.xml.transform.TransformerException
"
      end

      operation 5810818 "setEnvironment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the environment in which this iterator operates, which should provide:
a node (the context node... same value as \"root\" defined below)
a pair of non-zero positive integers (the context position and the context size)
a set of variable bindings
a function library
the set of namespace declarations in scope for the expression.

<p>At this time the exact implementation of this environment is application
dependent.  Probably a proper interface will be created fairly soon.</p>

@param environment The environment object.
"
      end

      operation 5810946 "getDTM"
	public return_type class_ref 618754 // DTM
	nparams 1
	  param in name "nodeHandle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of a DTM that \"owns\" a node handle.  Since a node
iterator may be passed without a DTMManager, this allows the
caller to easily get the DTM using just the iterator.

@param nodeHandle the nodeHandle.

@return a non-null DTM reference.
"
      end

      operation 5811074 "getDTMManager"
	public return_type class_ref 619266 // DTMManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the DTMManager.  Since a node
iterator may be passed without a DTMManager, this allows the
caller to easily get the DTMManager using just the iterator.

@return a non-null DTMManager reference.
"
      end

      operation 5811202 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute this iterator, meaning create a clone that can
store state, and initialize it for fast execution from
the current runtime state.  When this is called, no actual
query from the current context node is performed.

@param xctxt The XPath execution context.

@return An XNodeSet reference that holds this iterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5811330 "executeCharsToContentHandler"
	public explicit_return_type "void"
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "handler" type class_ref 605954 // ContentHandler
	nexceptions 2
	  exception class_ref 583554 // TransformerException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an expression in the XPath runtime context, and return the
result of the expression.


@param xctxt The XPath runtime context.
@param handler The target content handler.

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
@throws org.xml.sax.SAXException
"
      end

      operation 5811458 "asIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "contextNode" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an select expression and a context, evaluate the XPath
and return the resulting iterator.

@param xctxt The execution context.
@param contextNode The node that \".\" expresses.
@throws TransformerException thrown if the active ProblemListener decides
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
@xsl.usage experimental
"
      end

      operation 5811586 "isNodesetExpr"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the expression is a nodeset expression.

@return true if the expression can be represented as a nodeset.
"
      end

      operation 5811714 "asNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first node out of the nodeset, if this expression is
a nodeset expression.  This is the default implementation for
nodesets.  Derived classes should try and override this and return a
value without having to do a clone operation.
@param xctxt The XPath runtime context.
@return the first node out of the nodeset, or DTM.NULL.
"
      end

      operation 5811842 "bool"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate this operation directly to a boolean.

@param xctxt The runtime execution context.

@return The result of the operation as a boolean.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5811970 "setIsTopLevel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set if this is an iterator at the upper level of
the XPath.

@param b true if this location path is at the top level of the
         expression.
@xsl.usage advanced
"
      end

      operation 5812098 "getIsTopLevel"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get if this is an iterator at the upper level of
the XPath.

@return true if this location path is at the top level of the
         expression.
@xsl.usage advanced
"
      end

      operation 5812226 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5812354 "setNextPosition"
	protected explicit_return_type "void"
	nparams 1
	  param in name "next" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the next position index of this iterator.

@param next A value greater than or equal to zero that indicates the next
node position to fetch.
"
      end

      operation 5812482 "getCurrentPos"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current position, which is one less than
the next nextNode() call will retrieve.  i.e. if
you call getCurrentPos() and the return is 0, the next
fetch will take place at index 1.

@return A value greater than or equal to zero that indicates the next
node position to fetch.
"
      end

      operation 5812610 "setShouldCacheNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If setShouldCacheNodes(true) is called, then nodes will
be cached.  They are not cached by default.

@param b True if this iterator should cache nodes.
"
      end

      operation 5812738 "isMutable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this iterator can have nodes added to it or set via
the <code>setItem(int node, int index)</code> method.

@return True if the nodelist can be mutated.
"
      end

      operation 5812866 "setCurrentPos"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current position in the node set.

@param i Must be a valid index greater
than or equal to zero and less than m_cachedNodes.size().
"
      end

      operation 5812994 "incrementCurrentPos"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increment the current position in the node set.
"
      end

      operation 5813122 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the cached nodes.

<p>Note: for the moment at least, this only returns
the size of the nodes that have been fetched to date,
it doesn't attempt to run to the end to make sure we
have found everything.  This should be reviewed.</p>

@return The size of the current cache list.
"
      end

      operation 5813250 "item"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code> th item in the collection. If
<code>index</code> is greater than or equal to the number of nodes in
the list, this returns <code>null</code> .
@param index  Index into the collection.
@return  The node at the <code>index</code> th position in the
  <code>NodeList</code> , or <code>null</code> if that is not a valid
  index.
"
      end

      operation 5813378 "setItem"
	public explicit_return_type "void"
	nparams 2
	  param in name "node" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node at the specified index of this vector to be the
specified node. The previous component at that position is discarded.

<p>The index must be a value greater than or equal to 0 and less
than the current size of the vector.
The iterator must be in cached mode.</p>

<p>Meant to be used for sorted iterators.</p>

@param node Node to set
@param index Index of where to set the node
"
      end

      operation 5813506 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of nodes in the list. The range of valid child node indices
is 0 to <code>length-1</code> inclusive.

@return The number of nodes in the list, always greater or equal to zero.
"
      end

      operation 5813634 "isFresh"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this NodeSetDTM is \"fresh\", in other words, if
the first nextNode() that is called will return the
first node in the set.

@return true of nextNode has not been called.
"
      end

      operation 5813762 "previousNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the previous node in the set and moves the position of the
iterator backwards in the set.
@return  The previous <code>Node</code> in the set being iterated over,
  or<code>null</code> if there are no more members in that set.
"
      end

      operation 5813890 "getWhatToShow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute determines which node types are presented via the
iterator. The available set of constants is defined in the
<code>NodeFilter</code> interface.

<p>This is somewhat useless at this time, since it doesn't
really return information that tells what this iterator will
show.  It is here only to fullfill the DOM NodeIterator
interface.</p>

@return For now, always NodeFilter.SHOW_ALL & ~NodeFilter.SHOW_ENTITY_REFERENCE.
@see org.w3c.dom.traversal.NodeIterator
"
      end

      operation 5814018 "getFilter"
	public return_type class_ref 623362 // DTMFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The filter used to screen nodes.  Not used at this time,
this is here only to fullfill the DOM NodeIterator
interface.

@return Always null.
@see org.w3c.dom.traversal.NodeIterator
"
      end

      operation 5814146 "getRoot"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The root node of the Iterator, as specified when it was created.

@return The \"root\" of this iterator, which, in XPath terms,
is the node context for this iterator.
"
      end

      operation 5814274 "getExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The value of this flag determines whether the children of entity
reference nodes are visible to the iterator. If false, they will be
skipped over.
<br> To produce a view of the document that has entity references
expanded and does not expose the entity reference node itself, use the
whatToShow flags to hide the entity reference node and set
expandEntityReferences to true when creating the iterator. To produce
a view of the document that has entity reference nodes but no entity
expansion, use the whatToShow flags to show the entity reference node
and set expandEntityReferences to false.

@return Always true, since entity reference nodes are not
visible in the XPath model.
"
      end

      attribute 1250946 "m_allowDetach"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Control over whether it is OK for detach to reset the iterator. 
"
      end

      operation 5814402 "allowDetachToRelease"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify if it's OK for detach to release the iterator for reuse.

@param allowRelease true if it is OK for detach to release this iterator
for pooling.
"
      end

      operation 5814530 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end

      operation 5814658 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator.
"
      end

      operation 5814786 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned Iterator that is reset to the beginning
of the query.

@return A cloned NodeIterator set of the start of the query.

@throws CloneNotSupportedException
"
      end

      operation 5814914 "nextNode"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Get a cloned LocPathIterator that holds the same
   * position as this iterator.
   *
   * @return A clone of this iterator that holds the same node position.
   *
   * @throws CloneNotSupportedException
   */
  public Object clone() throws CloneNotSupportedException
  {

    LocPathIterator clone = (LocPathIterator) super.clone();

    return clone;
  }

 Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.
@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5815042 "returnNextNode"
	protected explicit_return_type "int"
	nparams 1
	  param in name "nextNode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bottleneck the return of a next node, to make returns
easier from nextNode().

@param nextNode The next node found, may be null.

@return The same node that was passed as an argument.
"
      end

      operation 5815170 "getCurrentNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the last fetched node.  Needed to support the UnionPathIterator.

@return The last fetched node, or null if the last fetch was null.
"
      end

      operation 5815298 "runTo"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If an index is requested, NodeSetDTM will call this method
to run the iterator to the index.  By default this sets
m_next to the index.  If the index argument is -1, this
signals that the iterator should be run to the end.

@param index The index to run to, or -1 if the iterator
should run to the end.
"
      end

      operation 5815426 "getFoundLast"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if we've found the last node yet.

@return true if the last nextNode returned null.
"
      end

      operation 5815554 "getXPathContext"
	public return_type class_ref 583682 // XPathContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The XPath execution context we are operating on.

@return XPath execution context this iterator is operating on,
or null if setRoot has not been called.
"
      end

      operation 5815682 "getContext"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The node context for the iterator.

@return The node context, same as getRoot().
"
      end

      operation 5815810 "getCurrentContextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The node context from where the expression is being
executed from (i.e. for current() support).

@return The top-level node context of the entire expression.
"
      end

      operation 5815938 "setCurrentContextNode"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current context node for this iterator.

@param n Must be a non-null reference to the node context.
"
      end

      operation 5816066 "getPrefixResolver"
	public return_type class_ref 635650 // PrefixResolver
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Set the current context node for this iterator.
   *
   * @param n Must be a non-null reference to the node context.
   */
  public void setRoot(int n)
  {
    m_context = n;
    m_cdtm = m_execContext.getDTM(n);
  }

Return the saved reference to the prefix resolver that
was in effect when this iterator was created.

@return The prefix resolver or this iterator, which may be null.
"
      end

      operation 5816194 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Get the analysis pattern built by the WalkerFactory.
   *
   * @return The analysis pattern built by the WalkerFactory.
   */
  int getAnalysis()
  {
    return m_analysis;
  }
  /**
   * Set the analysis pattern built by the WalkerFactory.
   *
   * @param a The analysis pattern built by the WalkerFactory.
   */
  void setAnalysis(int a)
  {
    m_analysis = a;
  }

@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      classrelation 2580866 // m_clones (<unidirectional association>)
	relation 2580866 --->
	  a role_name "m_clones" init_value " new IteratorPool(this)" protected
	    comment "============= State Data =============

The pool for cloned iterators.  Iterators need to be cloned
because the hold running state, and thus the original iterator
expression from the stylesheet pool can not be used.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2580866 // m_clones (<unidirectional association>)
	  b parent class_ref 808578 // IteratorPool
      end

      classrelation 2580994 // m_cdtm (<unidirectional association>)
	relation 2580994 --->
	  a role_name "m_cdtm" protected
	    comment "
The dtm of the context node.  Careful about using this... it may not
be the dtm of the current node.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2580994 // m_cdtm (<unidirectional association>)
	  b parent class_ref 618754 // DTM
      end

      attribute 1251074 "m_stackFrame"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The stack frame index for this iterator.

"
      end

      attribute 1251202 "m_isTopLevel"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value determined at compile time, indicates that this is an
iterator at the top level of the expression, rather than inside
a predicate.
@serial

"
      end

      attribute 1251330 "m_lastFetched"
	public explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The last node that was fetched, usually by nextNode. 
"
      end

      attribute 1251458 "m_context"
	protected explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The context node for this iterator, which doesn't change through
the course of the iteration.

"
      end

      attribute 1251586 "m_currentContextNode"
	protected explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The node context from where the expression is being
executed from (i.e. for current() support).  Different
from m_context in that this is the context for the entire
expression, rather than the context for the subexpression.

"
      end

      attribute 1251714 "m_pos"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The current position of the context node.

"
      end

      attribute 1251842 "m_length"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2581122 // m_prefixResolver (<unidirectional association>)
	relation 2581122 --->
	  a role_name "m_prefixResolver" private
	    comment "
Fast access to the current prefix resolver.  It isn't really
clear that this is needed.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2581122 // m_prefixResolver (<unidirectional association>)
	  b parent class_ref 635650 // PrefixResolver
      end

      classrelation 2581250 // m_execContext (<unidirectional association>)
	relation 2581250 --->
	  a role_name "m_execContext" protected
	    comment "
The XPathContext reference, needed for execution of many
operations.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2581250 // m_execContext (<unidirectional association>)
	  b parent class_ref 583682 // XPathContext
      end

      operation 5816322 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.

@return true as a default.
"
      end

      operation 5816450 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      operation 5816578 "getLastPos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * The analysis pattern built by the WalkerFactory.
   * TODO: Move to LocPathIterator.
   * @see com.sun.org.apache.xpath.internal.axes.WalkerFactory
   * @serial
   */
  protected int m_analysis = 0x00000000;

@see PredicatedNodeTest#getLastPos(XPathContext)
"
      end
    end

    class 806658 "UnionPathIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class extends NodeSetDTM, which implements DTMIterator,
and fetches nodes one at a time in document order based on a XPath
<a href=\"http://www.w3.org/TR/xpath#NT-UnionExpr\">UnionExpr</a>.
As each node is iterated via nextNode(), the node is also stored
in the NodeVector, so that previousNode() can easily be done.
@xsl.usage advanced
"
      classrelation 2588418 // <generalisation>
	relation 2588418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2588418 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      classrelation 2588546 // <realization>
	relation 2588546 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2588546 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2588674 // <realization>
	relation 2588674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2588674 // <realization>
	  b parent class_ref 635522 // DTMIterator
      end

      classrelation 2588802 // <realization>
	relation 2588802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2588802 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2588930 // <realization>
	relation 2588930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2588930 // <realization>
	  b parent class_ref 808450 // PathComponent
      end

      attribute 1258242 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3910351546843826781L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5848578 "UnionPathIterator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor to create an instance which you can add location paths to.
"
      end

      operation 5848706 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5848834 "addIterator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expr" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an iterator to the union list.

@param expr non-null reference to a location path iterator.
"
      end

      operation 5848962 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end

      operation 5849090 "UnionPathIterator"
	public explicit_return_type ""
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a UnionPathIterator object, including creation
of location path iterators from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5849218 "createUnionIterator"
	class_operation public return_type class_ref 806530 // LocPathIterator
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will return an iterator capable of handling the union of paths given.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.

@return Object that is derived from LocPathIterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5849346 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5849474 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the object from a serialization stream.

@param stream Input stream to read from

@throws java.io.IOException
@throws javax.xml.transform.TransformerException
"
      end

      operation 5849602 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned LocPathIterator that holds the same
position as this iterator.

@return A clone of this iterator that holds the same node position.

@throws CloneNotSupportedException
"
      end

      operation 5849730 "createDTMIterator"
	protected return_type class_ref 806530 // LocPathIterator
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new location path iterator.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the

@return New location path iterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5849858 "loadLocationPaths"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the location path iterators.  Recursive.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.
@param count The insert position of the iterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5849986 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a DTMIterator is created, the first call
to nextNode() returns the first node in the set.
@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5850114 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      classrelation 2589058 // m_exprs (<unidirectional association>)
	relation 2589058 --->
	  a role_name "m_exprs" multiplicity "[]" protected
	    comment "
The location path iterators, one for each
<a href=\"http://www.w3.org/TR/xpath#NT-LocationPath\">location
path</a> contained in the union expression.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2589058 // m_exprs (<unidirectional association>)
	  b parent class_ref 806530 // LocPathIterator
      end

      classrelation 2589186 // m_iterators (<unidirectional association>)
	relation 2589186 --->
	  a role_name "m_iterators" multiplicity "[]" protected
	    comment "
The location path iterators, one for each
<a href=\"http://www.w3.org/TR/xpath#NT-LocationPath\">location
path</a> contained in the union expression.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2589186 // m_iterators (<unidirectional association>)
	  b parent class_ref 635522 // DTMIterator
      end

      operation 5850242 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      class 811394 "iterOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2589314 // <realization>
	  relation 2589314 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2589314 // <realization>
	    b parent class_ref 776066 // ExpressionOwner
	end

	attribute 1258370 "m_index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 5850370 "iterOwner"
	  package explicit_return_type ""
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5850498 "getExpression"
	  public return_type class_ref 775682 // Expression
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#getExpression()
"
	end

	operation 5850626 "setExpression"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "exp" type class_ref 775682 // Expression
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#setExpression(Expression)
"
	end
      end

      operation 5850754 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      operation 5850882 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 807810 "AttributeIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an optimized iterator for
attribute axes patterns.
@see com.sun.org.apache.xpath.internal.axes#ChildTestIterator
@xsl.usage advanced
"
      classrelation 2581762 // <generalisation>
	relation 2581762 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2581762 // <generalisation>
	  b parent class_ref 807938 // ChildTestIterator
      end

      attribute 1252226 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8417986700712229686L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5818498 "AttributeIterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a AttributeIterator object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5818626 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node via getFirstAttribute && getNextAttribute.
"
      end

      operation 5818754 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end
    end

    class 807938 "ChildTestIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an optimized iterator for
children patterns that have a node test, and possibly a predicate.
@see com.sun.org.apache.xpath.internal.axes.BasicTestIterator
@xsl.usage advanced
"
      classrelation 2581506 // <generalisation>
	relation 2581506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2581506 // <generalisation>
	  b parent class_ref 808066 // BasicTestIterator
      end

      attribute 1252098 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7936835957960705722L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2581634 // m_traverser (<unidirectional association>)
	relation 2581634 --->
	  a role_name "m_traverser" protected
	    comment " The traverser to use to navigate over the descendants. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2581634 // m_traverser (<unidirectional association>)
	  b parent class_ref 618882 // DTMAxisTraverser
      end

      operation 5817602 "ChildTestIterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The extended type ID, not set until setRoot. 
  protected int m_extendedTypeID;

Create a ChildTestIterator object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5817730 "ChildTestIterator"
	public explicit_return_type ""
	nparams 1
	  param inout name "traverser" type class_ref 618882 // DTMAxisTraverser
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a ChildTestIterator object.

@param traverser Traverser that tells how the KeyIterator is to be handled.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5817858 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node via getNextXXX.  Bottlenecked for derived class override.
@return The next node on the axis, or DTM.NULL.
"
      end

      operation 5817986 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get a cloned Iterator that is reset to the beginning
 of the query.

 @return A cloned NodeIterator set of the start of the query.

 @throws CloneNotSupportedException
"
      end

      operation 5818114 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5818242 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      operation 5818370 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end
    end

    class 808066 "BasicTestIterator"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base for iterators that handle predicates.  Does the basic next
node logic, so all the derived iterator has to do is get the
next node.
"
      classrelation 2581378 // <generalisation>
	relation 2581378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2581378 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1251970 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3505378079378096623L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5816706 "BasicTestIterator"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object.

@param nscontext The namespace context for this iterator,
should be OK if null.
"
      end

      operation 5816834 "BasicTestIterator"
	protected explicit_return_type ""
	nparams 1
	  param inout name "nscontext" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object.

@param nscontext The namespace context for this iterator,
should be OK if null.
"
      end

      operation 5816962 "BasicTestIterator"
	protected explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5817090 "BasicTestIterator"
	protected explicit_return_type ""
	nparams 4
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	  param inout name "shouldLoadWalkers" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a LocPathIterator object, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.
@param shouldLoadWalkers True if walkers should be
loaded, or false if this is a derived iterator and
it doesn't wish to load child walkers.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5817218 "getNextNode"
	abstract protected explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node via getNextXXX.  Bottlenecked for derived class override.
@return The next node on the axis, or DTM.NULL.
"
      end

      operation 5817346 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.

@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5817474 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get a cloned Iterator that is reset to the beginning
 of the query.

 @return A cloned NodeIterator set of the start of the query.

 @throws CloneNotSupportedException
"
      end
    end

    class 808194 "PredicatedNodeTest"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2579586 // <generalisation>
	relation 2579586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2579586 // <generalisation>
	  b parent class_ref 806786 // NodeTest
      end

      classrelation 2579714 // <realization>
	relation 2579714 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2579714 // <realization>
	  b parent class_ref 805762 // SubContextList
      end

      attribute 1249922 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6193530757296377351L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5806210 "PredicatedNodeTest"
	package explicit_return_type ""
	nparams 1
	  param inout name "locPathIterator" type class_ref 806530 // LocPathIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an AxesWalker using a LocPathIterator.

@param locPathIterator non-null reference to the parent iterator.
"
      end

      operation 5806338 "PredicatedNodeTest"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an AxesWalker.  The location path iterator will have to be set
before use.
"
      end

      operation 5806466 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the object from a serialization stream.

@param stream Input stream to read from

@throws java.io.IOException
@throws javax.xml.transform.TransformerException
"
      end

      operation 5806594 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned PrdicatedNodeTest.

@return A new PredicatedNodeTest that can be used without mutating this one.

@throws CloneNotSupportedException
"
      end

      attribute 1250050 "m_predCount"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Only for clones for findLastPos.  See bug4638.
"
      end

      operation 5806722 "getPredicateCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of predicates that this walker has.

@return the number of predicates that this walker has.
"
      end

      operation 5806850 "setPredicateCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the number of predicates that this walker has.  This does more
that one would think, as it creates a new predicate array of the
size of the count argument, and copies count predicates into the new
one from the old, and then reassigns the predicates value.  All this
to keep from having to have a predicate count value.

@param count The number of predicates, which must be equal or less
              than the existing count.
"
      end

      operation 5806978 "initPredicateInfo"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Init predicate info.

@param compiler The Compiler object that has information about this
                walker in the op map.
@param opPos The op code position of this location step.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5807106 "getPredicate"
	public return_type class_ref 775682 // Expression
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a predicate expression at the given index.


@param index Index of the predicate.

@return A predicate expression.
"
      end

      operation 5807234 "getProximityPosition"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current sub-context position.

@return The node position of this walker in the sub-context node list.
"
      end

      operation 5807362 "getProximityPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current sub-context position.

@param xctxt The XPath runtime context.

@return The node position of this walker in the sub-context node list.
"
      end

      operation 5807490 "getLastPos"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the index of the last node that can be itterated to.


@param xctxt XPath runtime context.

@return the index of the last node that can be itterated to.
"
      end

      operation 5807618 "getProximityPosition"
	protected explicit_return_type "int"
	nparams 1
	  param in name "predicateIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current sub-context position.

@param predicateIndex The index of the predicate where the proximity
                      should be taken from.

@return The node position of this walker in the sub-context node list.
"
      end

      operation 5807746 "resetProximityPositions"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the proximity positions counts.
"
      end

      operation 5807874 "initProximityPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Init the proximity position to zero for a forward axes.

@param i The index into the m_proximityPositions array.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5808002 "countProximityPosition"
	protected explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Count forward one proximity position.

@param i The index into the m_proximityPositions array, where the increment
         will occur.
"
      end

      operation 5808130 "isReverseAxes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this is a reverse axes.

@return false, unless a derived class overrides.
"
      end

      operation 5808258 "getPredicateIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get which predicate is executing.

@return The current predicate index, or -1 if no predicate is executing.
"
      end

      operation 5808386 "executePredicates"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process the predicates.

@param context The current context node.
@param xctxt The XPath runtime context.

@return the result of executing the predicate expressions.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5808514 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5808642 "nodeToString"
	protected return_type class_ref 128130 // String
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Diagnostics.

@param n Node to give diagnostic information about, or null.

@return Informative string about the argument.
"
      end

      operation 5808770 "acceptNode"
	public explicit_return_type "short"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "=============== NodeFilter Implementation ===============

 Test whether a specified node is visible in the logical view of a
TreeWalker or NodeIterator. This function will be called by the
implementation of TreeWalker and NodeIterator; it is not intended to
be called directly from user code.
@param n  The node to check to see if it passes the filter or not.
@return  a constant to determine whether the node is accepted,
  rejected, or skipped, as defined  above .
"
      end

      operation 5808898 "getLocPathIterator"
	public return_type class_ref 806530 // LocPathIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the owning location path iterator.

@return the owning location path iterator, which should not be null.
"
      end

      operation 5809026 "setLocPathIterator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "li" type class_ref 806530 // LocPathIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the location path iterator owner for this walker.  Besides
initialization, this function is called during cloning operations.

@param li non-null reference to the owning location path iterator.
"
      end

      operation 5809154 "canTraverseOutsideSubtree"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this expression or it's subexpressions can traverse outside
the current subtree.

@return true if traversal outside the context node's subtree can occur.
"
      end

      operation 5809282 "callPredicateVisitors"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param visitor The visitor whose appropriate method will be called.
"
      end

      operation 5809410 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end

      attribute 1250178 "m_foundLast"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This is true if nextNode returns null. 
"
      end

      classrelation 2579842 // m_lpi (<unidirectional association>)
	relation 2579842 --->
	  a role_name "m_lpi" protected
	    comment " The owning location path iterator.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2579842 // m_lpi (<unidirectional association>)
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1250306 "m_predicateIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Which predicate we are executing.

"
      end

      classrelation 2579970 // m_predicates (<unidirectional association>)
	relation 2579970 --->
	  a role_name "m_predicates" multiplicity "[]" private
	    comment " The list of predicate expressions. Is static and does not need
 to be deep cloned.
 @serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2579970 // m_predicates (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      attribute 1250434 "m_proximityPositions"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An array of counts that correspond to the number
of predicates the step contains.

"
      end

      attribute 1250562 "DEBUG_PREDICATECOUNTING"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, diagnostic messages about predicate execution will be posted.  
"
      end

      class 808322 "PredOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2580098 // <realization>
	  relation 2580098 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2580098 // <realization>
	    b parent class_ref 776066 // ExpressionOwner
	end

	attribute 1250690 "m_index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 5809538 "PredOwner"
	  package explicit_return_type ""
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5809666 "getExpression"
	  public return_type class_ref 775682 // Expression
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#getExpression()
"
	end

	operation 5809794 "setExpression"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "exp" type class_ref 775682 // Expression
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#setExpression(Expression)
"
	end
      end
    end

    class 808450 "PathComponent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Classes who implement this information provide information needed for
static analysis of a path component.
"
      operation 5809922 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this path component, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end
    end

    class 808578 "IteratorPool"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pool of object of a given type to pick from to help memory usage
@xsl.usage internal
"
      classrelation 2584962 // <realization>
	relation 2584962 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2584962 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1254914 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -460927331149566998L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2585090 // m_orig (<unidirectional association>)
	relation 2585090 --->
	  a role_name "m_orig" const_relation private
	    comment "
Type of objects in this pool.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2585090 // m_orig (<unidirectional association>)
	  b parent class_ref 635522 // DTMIterator
      end

      classrelation 2585218 // m_freeStack (<unidirectional association>)
	relation 2585218 --->
	  a role_name "m_freeStack" const_relation private
	    comment "
Stack of given objects this points to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2585218 // m_freeStack (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      operation 5830530 "IteratorPool"
	public explicit_return_type ""
	nparams 1
	  param inout name "original" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor IteratorPool

@param original The original iterator from which all others will be cloned.
"
      end

      operation 5830658 "getInstanceOrThrow"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the given object in this pool

@return An instance of the given object
"
      end

      operation 5830786 "getInstance"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the given object in this pool

@return An instance of the given object
"
      end

      operation 5830914 "freeInstance"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an instance of the given object to the pool


@param obj Object to add.
"
      end
    end

    class 808706 "AxesWalker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Serves as common interface for axes Walkers, and stores common
state variables.
"
      classrelation 2581890 // <generalisation>
	relation 2581890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2581890 // <generalisation>
	  b parent class_ref 808194 // PredicatedNodeTest
      end

      classrelation 2582018 // <realization>
	relation 2582018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2582018 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2582146 // <realization>
	relation 2582146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2582146 // <realization>
	  b parent class_ref 808450 // PathComponent
      end

      classrelation 2582274 // <realization>
	relation 2582274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2582274 // <realization>
	  b parent class_ref 776066 // ExpressionOwner
      end

      attribute 1252354 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2966031951306601247L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5818882 "AxesWalker"
	public explicit_return_type ""
	nparams 2
	  param inout name "locPathIterator" type class_ref 806530 // LocPathIterator
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an AxesWalker using a LocPathIterator.

@param locPathIterator non-null reference to the parent iterator.
"
      end

      operation 5819010 "wi"
	public return_type class_ref 808834 // WalkingIterator
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5819138 "init"
	public explicit_return_type "void"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "stepType" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize an AxesWalker during the parse of the XPath expression.

@param compiler The Compiler object that has information about this
                walker in the op map.
@param opPos The op code position of this location step.
@param stepType  The type of location step.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5819266 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned AxesWalker.

@return A new AxesWalker that can be used without mutating this one.

@throws CloneNotSupportedException
"
      end

      operation 5819394 "cloneDeep"
	package return_type class_ref 808706 // AxesWalker
	nparams 2
	  param inout name "cloneOwner" type class_ref 808834 // WalkingIterator
	  param inout name "cloneList" type class_ref 141442 // Vector
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Do a deep clone of this walker, including next and previous walkers.
If the this AxesWalker is on the clone list, don't clone but
return the already cloned version.

@param cloneOwner non-null reference to the cloned location path
                  iterator to which this clone will be added.
@param cloneList non-null vector of sources in odd elements, and the
                 corresponding clones in even vectors.

@return non-null clone, which may be a new clone, or may be a clone
        contained on the cloneList.
"
      end

      operation 5819522 "findClone"
	class_operation package return_type class_ref 808706 // AxesWalker
	nparams 2
	  param inout name "key" type class_ref 808706 // AxesWalker
	  param inout name "cloneList" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find a clone that corresponds to the key argument.

@param key The original AxesWalker for which there may be a clone.
@param cloneList vector of sources in odd elements, and the
                 corresponding clones in even vectors, may be null.

@return A clone that corresponds to the key, or null if key not found.
"
      end

      operation 5819650 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the walker from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state.
"
      end

      operation 5819778 "getRoot"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "=============== TreeWalker Implementation ===============

The root node of the TreeWalker, as specified in setRoot(int root).
Note that this may actually be below the current node.

@return The context node of the step.
"
      end

      operation 5819906 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5820034 "setRoot"
	public explicit_return_type "void"
	nparams 1
	  param in name "root" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the root node of the TreeWalker.
(Not part of the DOM2 TreeWalker interface).

@param root The context node of this step.
"
      end

      operation 5820162 "getCurrentNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The node at which the TreeWalker is currently positioned.
<br> The value must not be null. Alterations to the DOM tree may cause
the current node to no longer be accepted by the TreeWalker's
associated filter. currentNode may also be explicitly set to any node,
whether or not it is within the subtree specified by the root node or
would be accepted by the filter and whatToShow flags. Further
traversal occurs relative to currentNode even if it is not part of the
current view by applying the filters in the requested direction (not
changing currentNode where no traversal is possible).

@return The node at which the TreeWalker is currently positioned, only null
if setRoot has not yet been called.
"
      end

      operation 5820290 "setNextWalker"
	public explicit_return_type "void"
	nparams 1
	  param inout name "walker" type class_ref 808706 // AxesWalker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the next walker in the location step chain.


@param walker Reference to AxesWalker derivative, or may be null.
"
      end

      operation 5820418 "getNextWalker"
	public return_type class_ref 808706 // AxesWalker
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next walker in the location step chain.


@return Reference to AxesWalker derivative, or null.
"
      end

      operation 5820546 "setPrevWalker"
	public explicit_return_type "void"
	nparams 1
	  param inout name "walker" type class_ref 808706 // AxesWalker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set or clear the previous walker reference in the location step chain.


@param walker Reference to previous walker reference in the location
              step chain, or null.
"
      end

      operation 5820674 "getPrevWalker"
	public return_type class_ref 808706 // AxesWalker
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the previous walker reference in the location step chain.


@return Reference to previous walker reference in the location
              step chain, or null.
"
      end

      operation 5820802 "returnNextNode"
	private explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is simply a way to bottle-neck the return of the next node, for
diagnostic purposes.

@param n Node to return, or null.

@return The argument.
"
      end

      operation 5820930 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node in document order on the axes.

@return the next node in document order on the axes, or null.
"
      end

      operation 5821058 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Moves the <code>TreeWalker</code> to the next visible node in document
order relative to the current node, and returns the new node. If the
current node has no next node,  or if the search for nextNode attempts
to step upward from the TreeWalker's root node, returns
<code>null</code> , and retains the current node.
@return  The new node, or <code>null</code> if the current node has no
  next node  in the TreeWalker's logical view.
"
      end

      operation 5821186 "getLastPos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "============= End TreeWalker Implementation =============

Get the index of the last node that can be itterated to.


@param xctxt XPath runtime context.

@return the index of the last node that can be itterated to.
"
      end

      classrelation 2582402 // m_dtm (<unidirectional association>)
	relation 2582402 --->
	  a role_name "m_dtm" private
	    comment "============= State Data =============

The DTM for the root.  This can not be used, or must be changed,
for the filter walker, or any walker that can have nodes
from multiple documents.
Never, ever, access this value without going through getDTM(int node).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582402 // m_dtm (<unidirectional association>)
	  b parent class_ref 618754 // DTM
      end

      operation 5821314 "setDefaultDTM"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtm" type class_ref 618754 // DTM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the DTM for this walker.

@param dtm Non-null reference to a DTM.
"
      end

      operation 5821442 "getDTM"
	public return_type class_ref 618754 // DTM
	nparams 1
	  param in name "node" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the DTM for this walker.

@return Non-null reference to a DTM.
"
      end

      operation 5821570 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.
Warning: This can only be called after setRoot has been called!

@return true as a default.
"
      end

      operation 5821698 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      operation 5821826 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param owner The owner of the visitor, where that path may be
             rewritten if needed.
@param visitor The visitor whose appropriate method will be called.
"
      end

      operation 5821954 "getExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#getExpression()
"
      end

      operation 5822082 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#setExpression(Expression)
"
      end

      operation 5822210 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end

      attribute 1252482 "m_root"
	package explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The root node of the TreeWalker, as specified when it was created.

"
      end

      attribute 1252610 "m_currentNode"
	private explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The node at which the TreeWalker is currently positioned.

"
      end

      attribute 1252738 "m_isFresh"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if an itteration has not begun.  
"
      end

      classrelation 2582530 // m_nextWalker (<unidirectional association>)
	relation 2582530 --->
	  a role_name "m_nextWalker" protected
	    comment " The next walker in the location step chain.
 @serial  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582530 // m_nextWalker (<unidirectional association>)
	  b parent class_ref 808706 // AxesWalker
      end

      classrelation 2582658 // m_prevWalker (<unidirectional association>)
	relation 2582658 --->
	  a role_name "m_prevWalker" package
	    comment " The previous walker in the location step chain, or null.
 @serial   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582658 // m_prevWalker (<unidirectional association>)
	  b parent class_ref 808706 // AxesWalker
      end

      attribute 1252866 "m_axis"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The traversal axis from where the nodes will be filtered. 
"
      end

      classrelation 2582786 // m_traverser (<unidirectional association>)
	relation 2582786 --->
	  a role_name "m_traverser" protected
	    comment " The DTM inner traversal class, that corresponds to the super axis. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582786 // m_traverser (<unidirectional association>)
	  b parent class_ref 618882 // DTMAxisTraverser
      end
    end

    class 808834 "WalkingIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Location path iterator that uses Walkers.
"
      classrelation 2589442 // <generalisation>
	relation 2589442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2589442 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      classrelation 2589570 // <realization>
	relation 2589570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2589570 // <realization>
	  b parent class_ref 776066 // ExpressionOwner
      end

      attribute 1261826 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 9110225941815665906L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5857410 "WalkingIterator"
	package explicit_return_type ""
	nparams 4
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	  param inout name "shouldLoadWalkers" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a WalkingIterator iterator, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.
@param shouldLoadWalkers True if walkers should be
loaded, or false if this is a derived iterator and
it doesn't wish to load child walkers.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5857538 "WalkingIterator"
	public explicit_return_type ""
	nparams 1
	  param inout name "nscontext" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a WalkingIterator object.

@param nscontext The namespace context for this iterator,
should be OK if null.
"
      end

      operation 5857666 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5857794 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned WalkingIterator that holds the same
position as this iterator.

@return A clone of this iterator that holds the same node position.

@throws CloneNotSupportedException
"
      end

      operation 5857922 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator.
"
      end

      operation 5858050 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5858178 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.
@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5858306 "getFirstWalker"
	public return_type class_ref 808706 // AxesWalker
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the head of the walker list.

@return The head of the walker list, or null
if this iterator does not implement walkers.
@xsl.usage advanced
"
      end

      operation 5858434 "setFirstWalker"
	public explicit_return_type "void"
	nparams 1
	  param inout name "walker" type class_ref 808706 // AxesWalker
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the head of the walker list.

@param walker Should be a valid AxesWalker.
@xsl.usage advanced
"
      end

      operation 5858562 "setLastUsedWalker"
	public explicit_return_type "void"
	nparams 1
	  param inout name "walker" type class_ref 808706 // AxesWalker
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the last used walker.

@param walker The last used walker, or null.
@xsl.usage advanced
"
      end

      operation 5858690 "getLastUsedWalker"
	public return_type class_ref 808706 // AxesWalker
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the last used walker.

@return The last used walker, or null.
@xsl.usage advanced
"
      end

      operation 5858818 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end

      operation 5858946 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5859074 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      classrelation 2589698 // m_lastUsedWalker (<unidirectional association>)
	relation 2589698 --->
	  a role_name "m_lastUsedWalker" protected
	    comment " The last used step walker in the walker list.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2589698 // m_lastUsedWalker (<unidirectional association>)
	  b parent class_ref 808706 // AxesWalker
      end

      classrelation 2589826 // m_firstWalker (<unidirectional association>)
	relation 2589826 --->
	  a role_name "m_firstWalker" protected
	    comment " The head of the step walker list.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2589826 // m_firstWalker (<unidirectional association>)
	  b parent class_ref 808706 // AxesWalker
      end

      operation 5859202 "getExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#getExpression()
"
      end

      operation 5859330 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see ExpressionOwner#setExpression(Expression)
"
      end

      operation 5859458 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 808962 "ChildIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an optimized iterator for
\"node()\" patterns, that is, any children of the
context node.
@see com.sun.org.apache.xpath.internal.axes.LocPathIterator
@xsl.usage advanced
"
      classrelation 2582914 // <generalisation>
	relation 2582914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2582914 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1252994 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6935428015142993583L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5822338 "ChildIterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a ChildIterator object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.
@param analysis Analysis bits of the entire pattern.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5822466 "asNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first node out of the nodeset, if this expression is
a nodeset expression.  This is the default implementation for
nodesets.
<p>WARNING: Do not mutate this class from this function!</p>
@param xctxt The XPath runtime context.
@return the first node out of the nodeset, or DTM.NULL.
"
      end

      operation 5822594 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.

@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5822722 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end
    end

    class 809090 "DescendantIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an optimized iterator for
descendant, descendant-or-self, or \"//foo\" patterns.
@see com.sun.org.apache.xpath.internal.axes.LocPathIterator
@xsl.usage advanced
"
      classrelation 2583042 // <generalisation>
	relation 2583042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2583042 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1253122 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1190338607743976938L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5822850 "DescendantIterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a DescendantIterator object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5822978 "DescendantIterator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a DescendantIterator object.

"
      end

      operation 5823106 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get a cloned Iterator that is reset to the beginning
 of the query.

 @return A cloned NodeIterator set of the start of the query.

 @throws CloneNotSupportedException
"
      end

      operation 5823234 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.

@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.

@throws DOMException
   INVALID_STATE_ERR: Raised if this method is called after the
  <code>detach</code> method was invoked.
"
      end

      operation 5823362 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5823490 "asNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first node out of the nodeset, if this expression is
a nodeset expression.  This is the default implementation for
nodesets.
<p>WARNING: Do not mutate this class from this function!</p>
@param xctxt The XPath runtime context.
@return the first node out of the nodeset, or DTM.NULL.
"
      end

      operation 5823618 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end

      operation 5823746 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      classrelation 2583170 // m_traverser (<unidirectional association>)
	relation 2583170 --->
	  a role_name "m_traverser" protected
	    comment " The traverser to use to navigate over the descendants. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583170 // m_traverser (<unidirectional association>)
	  b parent class_ref 618882 // DTMAxisTraverser
      end

      attribute 1253250 "m_axis"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The axis that we are traversing. 
"
      end

      attribute 1253378 "m_extendedTypeID"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The extended type ID, not set until setRoot. 
"
      end

      operation 5823874 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 809218 "FilterExprIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2583298 // <generalisation>
	relation 2583298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2583298 // <generalisation>
	  b parent class_ref 808066 // BasicTestIterator
      end

      attribute 1253506 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2552176105165737614L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2583426 // m_expr (<unidirectional association>)
	relation 2583426 --->
	  a role_name "m_expr" private
	    comment " The contained expression. Should be non-null.
 @serial   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583426 // m_expr (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      classrelation 2583554 // m_exprObj (<unidirectional association>)
	relation 2583554 --->
	  a role_name "m_exprObj" private
	    comment " The result of executing m_expr.  Needs to be deep cloned on clone op.  
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583554 // m_exprObj (<unidirectional association>)
	  b parent class_ref 809346 // XNodeSet
      end

      attribute 1253634 "m_mustHardReset"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1253762 "m_canDetachNodeset"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5824002 "FilterExprIterator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a FilterExprIterator object.

"
      end

      operation 5824130 "FilterExprIterator"
	public explicit_return_type ""
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a FilterExprIterator object.

"
      end

      operation 5824258 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5824386 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node via getNextXXX.  Bottlenecked for derived class override.
@return The next node on the axis, or DTM.NULL.
"
      end

      operation 5824514 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the walker from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state.
"
      end

      operation 5824642 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5824770 "getInnerExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the inner contained expression of this filter.
"
      end

      operation 5824898 "setInnerExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the inner contained expression of this filter.
"
      end

      operation 5825026 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5825154 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.
Warning: This can only be called after setRoot has been called!

@return true as a default.
"
      end

      class 809474 "filterExprOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2583682 // <realization>
	  relation 2583682 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2583682 // <realization>
	    b parent class_ref 776066 // ExpressionOwner
	end

	operation 5825282 "getExpression"
	  public return_type class_ref 775682 // Expression
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#getExpression()
"
	end

	operation 5825410 "setExpression"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "exp" type class_ref 775682 // Expression
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#setExpression(Expression)
"
	end
      end

      operation 5825538 "callPredicateVisitors"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param visitor The visitor whose appropriate method will be called.
"
      end

      operation 5825666 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 809602 "FilterExprIteratorSimple"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to use for one-step iteration that doesn't have a predicate, and
doesn't need to set the context.
"
      classrelation 2583810 // <generalisation>
	relation 2583810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2583810 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1253890 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6978977187025375579L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2583938 // m_expr (<unidirectional association>)
	relation 2583938 --->
	  a role_name "m_expr" private
	    comment " The contained expression. Should be non-null.
 @serial   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583938 // m_expr (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      classrelation 2584066 // m_exprObj (<unidirectional association>)
	relation 2584066 --->
	  a role_name "m_exprObj" private
	    comment " The result of executing m_expr.  Needs to be deep cloned on clone op.  
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584066 // m_exprObj (<unidirectional association>)
	  b parent class_ref 809346 // XNodeSet
      end

      attribute 1254018 "m_mustHardReset"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1254146 "m_canDetachNodeset"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5825794 "FilterExprIteratorSimple"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a FilterExprIteratorSimple object.

"
      end

      operation 5825922 "FilterExprIteratorSimple"
	public explicit_return_type ""
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a FilterExprIteratorSimple object.

"
      end

      operation 5826050 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5826178 "executeFilterExpr"
	class_operation public return_type class_ref 809346 // XNodeSet
	nparams 6
	  param in name "context" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	  param inout name "isTopLevel" explicit_type "boolean"
	  param in name "stackFrame" explicit_type "int"
	  param inout name "expr" type class_ref 775682 // Expression
	nexceptions 1
	  exception class_ref 800898 // WrappedRuntimeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the expression.  Meant for reuse by other FilterExpr iterators
that are not derived from this object.
"
      end

      operation 5826306 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.

@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5826434 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the walker from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state.
"
      end

      operation 5826562 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5826690 "getInnerExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the inner contained expression of this filter.
"
      end

      operation 5826818 "setInnerExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the inner contained expression of this filter.
"
      end

      operation 5826946 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5827074 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.
Warning: This can only be called after setRoot has been called!

@return true as a default.
"
      end

      class 809730 "filterExprOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2584194 // <realization>
	  relation 2584194 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2584194 // <realization>
	    b parent class_ref 776066 // ExpressionOwner
	end

	operation 5827202 "getExpression"
	  public return_type class_ref 775682 // Expression
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#getExpression()
"
	end

	operation 5827330 "setExpression"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "exp" type class_ref 775682 // Expression
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#setExpression(Expression)
"
	end
      end

      operation 5827458 "callPredicateVisitors"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param visitor The visitor whose appropriate method will be called.
"
      end

      operation 5827586 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end

      operation 5827714 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end
    end

    class 809858 "FilterExprWalker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Walker for the OP_VARIABLE, or OP_EXTFUNCTION, or OP_FUNCTION, or OP_GROUP,
op codes.
@see <a href=\"http://www.w3.org/TR/xpath#NT-FilterExpr\">XPath FilterExpr descriptions</a>
"
      classrelation 2584322 // <generalisation>
	relation 2584322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2584322 // <generalisation>
	  b parent class_ref 808706 // AxesWalker
      end

      attribute 1254274 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 5457182471424488375L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5827842 "FilterExprWalker"
	public explicit_return_type ""
	nparams 1
	  param inout name "locPathIterator" type class_ref 808834 // WalkingIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a FilterExprWalker using a LocPathIterator.

@param locPathIterator non-null reference to the parent iterator.
"
      end

      operation 5827970 "init"
	public explicit_return_type "void"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "stepType" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Init a FilterExprWalker.

@param compiler non-null reference to the Compiler that is constructing.
@param opPos positive opcode position for this step.
@param stepType The type of step.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5828098 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the walker from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state.
"
      end

      operation 5828226 "setRoot"
	public explicit_return_type "void"
	nparams 1
	  param in name "root" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the root node of the TreeWalker.

@param root non-null reference to the root, or starting point of
       the query.
"
      end

      operation 5828354 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned FilterExprWalker.

@return A new FilterExprWalker that can be used without mutating this one.

@throws CloneNotSupportedException
"
      end

      operation 5828482 "acceptNode"
	public explicit_return_type "short"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method needs to override AxesWalker.acceptNode because FilterExprWalkers
don't need to, and shouldn't, do a node test.
@param n  The node to check to see if it passes the filter or not.
@return  a constant to determine whether the node is accepted,
  rejected, or skipped, as defined  above .
"
      end

      operation 5828610 "getNextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Moves the <code>TreeWalker</code> to the next visible node in document
order relative to the current node, and returns the new node. If the
current node has no next node,  or if the search for nextNode attempts
to step upward from the TreeWalker's root node, returns
<code>null</code> , and retains the current node.
@return  The new node, or <code>null</code> if the current node has no
  next node  in the TreeWalker's logical view.
"
      end

      operation 5828738 "getLastPos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the index of the last node that can be itterated to.


@param xctxt XPath runtime context.

@return the index of the last node that can be itterated to.
"
      end

      classrelation 2584450 // m_expr (<unidirectional association>)
	relation 2584450 --->
	  a role_name "m_expr" private
	    comment " The contained expression. Should be non-null.
 @serial   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584450 // m_expr (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      classrelation 2584578 // m_exprObj (<unidirectional association>)
	relation 2584578 --->
	  a role_name "m_exprObj" private
	    comment " The result of executing m_expr.  Needs to be deep cloned on clone op.  
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584578 // m_exprObj (<unidirectional association>)
	  b parent class_ref 809346 // XNodeSet
      end

      attribute 1254402 "m_mustHardReset"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1254530 "m_canDetachNodeset"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5828866 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5828994 "getInnerExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the inner contained expression of this filter.
"
      end

      operation 5829122 "setInnerExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the inner contained expression of this filter.
"
      end

      operation 5829250 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the analysis bits for this walker, as defined in the WalkerFactory.
@return One of WalkerFactory#BIT_DESCENDANT, etc.
"
      end

      operation 5829378 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.
Warning: This can only be called after setRoot has been called!

@return true as a default.
"
      end

      operation 5829506 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      class 809986 "filterExprOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2584706 // <realization>
	  relation 2584706 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2584706 // <realization>
	    b parent class_ref 776066 // ExpressionOwner
	end

	operation 5829634 "getExpression"
	  public return_type class_ref 775682 // Expression
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#getExpression()
"
	end

	operation 5829762 "setExpression"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "exp" type class_ref 775682 // Expression
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see ExpressionOwner#setExpression(Expression)
"
	end
      end

      operation 5829890 "callPredicateVisitors"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param visitor The visitor whose appropriate method will be called.
"
      end

      operation 5830018 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 810114 "HasPositionalPredChecker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2584834 // <generalisation>
	relation 2584834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2584834 // <generalisation>
	  b parent class_ref 776194 // XPathVisitor
      end

      attribute 1254658 "m_hasPositionalPred"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1254786 "m_predDepth"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5830146 "check"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "path" type class_ref 806530 // LocPathIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process the LocPathIterator to see if it contains variables
or functions that may make it context dependent.
@param path LocPathIterator that is assumed to be absolute, but needs checking.
@return true if the path is confirmed to be absolute, false if it
may contain context dependencies.
"
      end

      operation 5830274 "visitFunction"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "func" type class_ref 775554 // Function
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a function.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param func The function reference object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5830402 "visitPredicate"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "pred" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "      /**
       * Visit a variable reference.
       * @param owner The owner of the expression, to which the expression can
       *              be reset if rewriting takes place.
       * @param var The variable reference object.
       * @return true if the sub expressions should be traversed.
       */
      public boolean visitVariableRef(ExpressionOwner owner, Variable var)
      {
              m_hasPositionalPred = true;
              return true;
      }

Visit a predicate within a location path.  Note that there isn't a
proper unique component for predicates, and that the expression will
be called also for whatever type Expression is.

@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param pred The predicate object.
@return true if the sub expressions should be traversed.
"
      end
    end

    class 810242 "MatchPatternIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class treats a
<a href=\"http://www.w3.org/TR/xpath#location-paths\">LocationPath</a> as a
filtered iteration over the tree, evaluating each node in a super axis
traversal against the LocationPath interpreted as a match pattern.  This
class is useful to find nodes in document order that are complex paths
whose steps probably criss-cross each other.
"
      classrelation 2585346 // <generalisation>
	relation 2585346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2585346 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1255042 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5201153767396296474L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2585474 // m_pattern (<unidirectional association>)
	relation 2585474 --->
	  a role_name "m_pattern" protected
	    comment " This is the select pattern, translated into a match pattern. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2585474 // m_pattern (<unidirectional association>)
	  b parent class_ref 807298 // StepPattern
      end

      attribute 1255170 "m_superAxis"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The traversal axis from where the nodes will be filtered. 
"
      end

      classrelation 2585602 // m_traverser (<unidirectional association>)
	relation 2585602 --->
	  a role_name "m_traverser" protected
	    comment " The DTM inner traversal class, that corresponds to the super axis. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2585602 // m_traverser (<unidirectional association>)
	  b parent class_ref 618882 // DTMAxisTraverser
      end

      attribute 1255298 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DEBUG flag for diagnostic dumps. 
"
      end

      operation 5831042 "MatchPatternIterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  protected int m_nsElemBase = DTM.NULL;

Create a LocPathIterator object, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.
@param analysis Analysis bits that give general information about the
LocationPath.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5831170 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5831298 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end

      operation 5831426 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node via getNextXXX.  Bottlenecked for derived class override.
@return The next node on the axis, or DTM.NULL.
"
      end

      operation 5831554 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.
@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5831682 "acceptNode"
	public explicit_return_type "short"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Test whether a specified node is visible in the logical view of a
TreeWalker or NodeIterator. This function will be called by the
implementation of TreeWalker and NodeIterator; it is not intended to
be called directly from user code.
@param n  The node to check to see if it passes the filter or not.
@return  a constant to determine whether the node is accepted,
  rejected, or skipped, as defined  above .
"
      end
    end

    class 810370 "NodeSequence"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is the dynamic wrapper for a Xalan DTMIterator instance, and
provides random access capabilities.
"
      classrelation 2586242 // <generalisation>
	relation 2586242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2586242 // <generalisation>
	  b parent class_ref 583298 // XObject
      end

      classrelation 2586370 // <realization>
	relation 2586370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2586370 // <realization>
	  b parent class_ref 635522 // DTMIterator
      end

      classrelation 2586498 // <realization>
	relation 2586498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2586498 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2586626 // <realization>
	relation 2586626 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2586626 // <realization>
	  b parent class_ref 808450 // PathComponent
      end

      attribute 1256578 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3866261934726581044L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1256706 "m_last"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The index of the last node in the iteration. 
"
      end

      attribute 1256834 "m_next"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the next node to be fetched.  Useful if this
is a cached iterator, and is being used as random access
NodeList.

"
      end

      class 810498 "IteratorCache"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2587138 // m_vec2 (<unidirectional association>)
	  relation 2587138 --->
	    a role_name "m_vec2" private
	      comment "
A list of nodes already obtained from the iterator.
As the iterator is walked the nodes obtained from
it are appended to this list.
<p>
Both an iterator and its corresponding cache can
be shared by multiple NodeSequence objects.
<p>
For example, consider three NodeSequence objects
ns1, ns2 and ns3 doing such sharing, and the
nodes to be obtaind from the iterator being
the sequence { 33, 11, 44, 22, 55 }.
<p>
If ns3.nextNode() is called 3 times the the
underlying iterator will have walked through
33, 11, 55 and these three nodes will have been put
in the cache.
<p>
If ns2.nextNode() is called 2 times it will return
33 and 11 from the cache, leaving the iterator alone.
<p>
If ns1.nextNode() is called 6 times it will return
33 and 11 from the cache, then get 44, 22, 55 from
the iterator, and appending 44, 22, 55 to the cache.
On the sixth call it is found that the iterator is
exhausted and the cache is marked complete.
<p>
Should ns2 or ns3 have nextNode() called they will
know that the cache is complete, and they will
obtain all subsequent nodes from the cache.
<p>
Note that the underlying iterator, though shared
is only ever walked once.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2587138 // m_vec2 (<unidirectional association>)
	    b parent class_ref 632706 // NodeVector
	end

	attribute 1256962 "m_isComplete2"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "true if the associated iterator is exhausted and
all nodes obtained from it are in the cache.

"
	end

	attribute 1257090 "m_useCount2"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 5842562 "IteratorCache"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5842690 "useCount"
	  private explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns count of how many NodeSequence objects share this
IteratorCache object.
"
	end

	operation 5842818 "increaseUseCount"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method is called when yet another
NodeSequence object uses, or shares
this same cache.

"
	end

	operation 5842946 "setVector"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "nv" type class_ref 632706 // NodeVector
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the NodeVector that holds the
growing list of nodes as they are appended
to the cached list.
"
	end

	operation 5843074 "getVector"
	  private return_type class_ref 632706 // NodeVector
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the cached list of nodes obtained from
the iterator so far.
"
	end

	operation 5843202 "setCacheComplete"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Call this method with 'true' if the
iterator is exhausted and the cached list
is complete, or no longer growing.
"
	end

	operation 5843330 "isComplete"
	  private explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if no cache is complete
and immutable.
"
	end
      end

      classrelation 2586754 // m_cache (<unidirectional association>)
	relation 2586754 --->
	  a role_name "m_cache" private
	    comment "
A cache of a list of nodes obtained from the iterator so far.
This list is appended to until the iterator is exhausted and
the cache is complete.
<p>
Multiple NodeSequence objects may share the same cache.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2586754 // m_cache (<unidirectional association>)
	  b parent class_ref 810498 // IteratorCache
      end

      operation 5837314 "getVector"
	protected return_type class_ref 632706 // NodeVector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this iterator needs to cache nodes that are fetched, they
are stored in the Vector in the generic object.
"
      end

      operation 5837442 "getCache"
	private return_type class_ref 810498 // IteratorCache
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the cache (if any) of nodes obtained from
the iterator so far. Note that the cache keeps
growing until the iterator is walked to exhaustion,
at which point the cache is \"complete\".
"
      end

      operation 5837570 "SetVector"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 632706 // NodeVector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the vector where nodes will be cached.
"
      end

      operation 5837698 "hasCache"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the iterator needs to cache nodes as they are fetched,
then this method returns true.
"
      end

      operation 5837826 "cacheComplete"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this NodeSequence has a cache, and that cache is
fully populated then this method returns true, otherwise
if there is no cache or it is not complete it returns false.
"
      end

      operation 5837954 "markCacheComplete"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this NodeSequence has a cache, mark that it is complete.
This method should be called after the iterator is exhausted.
"
      end

      classrelation 2586882 // m_iter (<unidirectional association>)
	relation 2586882 --->
	  a role_name "m_iter" protected
	    comment "
The functional iterator that fetches nodes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2586882 // m_iter (<unidirectional association>)
	  b parent class_ref 635522 // DTMIterator
      end

      operation 5838082 "setIter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iter" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the functional iterator that fetches nodes.
@param iter The iterator that is to be contained.
"
      end

      operation 5838210 "getContainedIter"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the functional iterator that fetches nodes.
@return The contained iterator.
"
      end

      classrelation 2587010 // m_dtmMgr (<unidirectional association>)
	relation 2587010 --->
	  a role_name "m_dtmMgr" protected
	    comment "
The DTMManager to use if we're using a NodeVector only.
We may well want to do away with this, and store it in the NodeVector.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2587010 // m_dtmMgr (<unidirectional association>)
	  b parent class_ref 619266 // DTMManager
      end

      operation 5838338 "NodeSequence"
	private explicit_return_type ""
	nparams 4
	  param inout name "iter" type class_ref 635522 // DTMIterator
	  param in name "context" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "shouldCacheNodes" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ==== Constructors ====

Create a new NodeSequence from a (already cloned) iterator.

@param iter Cloned (not static) DTMIterator.
@param context The initial context node.
@param xctxt The execution context.
@param shouldCacheNodes True if this sequence can random access.
"
      end

      operation 5838466 "NodeSequence"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodeVector" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new NodeSequence from a (already cloned) iterator.

@param nodeVector
"
      end

      operation 5838594 "NodeSequence"
	private explicit_return_type ""
	nparams 1
	  param inout name "dtmMgr" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty XNodeSet object.  This is used to create a mutable
nodeset to which random nodes may be added.
"
      end

      operation 5838722 "NodeSequence"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new NodeSequence in an invalid (null) state.
"
      end

      operation 5838850 "getDTM"
	public return_type class_ref 618754 // DTM
	nparams 1
	  param in name "nodeHandle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getDTM(int)
"
      end

      operation 5838978 "getDTMManager"
	public return_type class_ref 619266 // DTMManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getDTMManager()
"
      end

      operation 5839106 "getRoot"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getRoot()
"
      end

      operation 5839234 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "nodeHandle" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#setRoot(int, Object)
"
      end

      operation 5839362 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#reset()
"
      end

      operation 5839490 "getWhatToShow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getWhatToShow()
"
      end

      operation 5839618 "getExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getExpandEntityReferences()
"
      end

      operation 5839746 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#nextNode()
"
      end

      operation 5839874 "previousNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#previousNode()
"
      end

      operation 5840002 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#detach()
"
      end

      operation 5840130 "allowDetachToRelease"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calling this with a value of false will cause the nodeset
to be cached.
@see DTMIterator#allowDetachToRelease(boolean)
"
      end

      operation 5840258 "getCurrentNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getCurrentNode()
"
      end

      operation 5840386 "isFresh"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#isFresh()
"
      end

      operation 5840514 "setShouldCacheNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#setShouldCacheNodes(boolean)
"
      end

      operation 5840642 "isMutable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#isMutable()
"
      end

      operation 5840770 "getCurrentPos"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getCurrentPos()
"
      end

      operation 5840898 "runTo"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#runTo(int)
"
      end

      operation 5841026 "setCurrentPos"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#setCurrentPos(int)
"
      end

      operation 5841154 "item"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#item(int)
"
      end

      operation 5841282 "setItem"
	public explicit_return_type "void"
	nparams 2
	  param in name "node" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#setItem(int, int)
"
      end

      operation 5841410 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getLength()
"
      end

      operation 5841538 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Note: Not a deep clone.
@see DTMIterator#cloneWithReset()
"
      end

      operation 5841666 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a clone of this iterator, but don't reset the iteration in the
process, so that it may be used from the current position.
Note: Not a deep clone.

@return A clone of this object.

@throws CloneNotSupportedException
"
      end

      operation 5841794 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#isDocOrdered()
"
      end

      operation 5841922 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see DTMIterator#getAxis()
"
      end

      operation 5842050 "getAnalysisBits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see PathComponent#getAnalysisBits()
"
      end

      operation 5842178 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.apache.xpath.Expression#fixupVariables(Vector, int)
"
      end

      operation 5842306 "addNodeInDocOrder"
	protected explicit_return_type "int"
	nparams 1
	  param in name "node" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the node into a vector of nodes where it should occur in
document order.
@param node The node to be added.
@return insertIndex.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5842434 "setObject"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end addNodeInDocOrder(Vector v, Object obj)

It used to be that many locations in the code simply
did an assignment to this.m_obj directly, rather than
calling the setObject(Object) method. The problem is
that our super-class would be updated on what the
cache associated with this NodeSequence, but
we wouldn't know ourselves.
<p>
All setting of m_obj is done through setObject() now,
and this method over-rides the super-class method.
So now we are in the loop have an opportunity
to update some caching information.

"
      end

      operation 5843458 "getIteratorCache"
	protected return_type class_ref 810498 // IteratorCache
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the cached list of nodes appended with
values obtained from the iterator as
a NodeSequence is walked when its
nextNode() method is called.
"
      end
    end

    class 810626 "OneStepIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a general iterator for
those LocationSteps with only one step, and perhaps a predicate.
@see com.sun.org.apache.xpath.internal.axes#LocPathIterator
@xsl.usage advanced
"
      classrelation 2587266 // <generalisation>
	relation 2587266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2587266 // <generalisation>
	  b parent class_ref 807938 // ChildTestIterator
      end

      attribute 1257218 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 4623710779664998283L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1257346 "m_axis"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The traversal axis from where the nodes will be filtered. 
"
      end

      classrelation 2587394 // m_iterator (<unidirectional association>)
	relation 2587394 --->
	  a role_name "m_iterator" protected
	    comment " The DTM inner traversal class, that corresponds to the super axis. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2587394 // m_iterator (<unidirectional association>)
	  b parent class_ref 590082 // DTMAxisIterator
      end

      operation 5843586 "OneStepIterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a OneStepIterator object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5843714 "OneStepIterator"
	public explicit_return_type ""
	nparams 2
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	  param in name "axis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a OneStepIterator object.

@param iterator The DTM iterator which this iterator will use.
@param axis One of Axis.Child, etc., or -1 if the axis is unknown.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5843842 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5843970 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
"
      end

      operation 5844098 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node via getFirstAttribute && getNextAttribute.
"
      end

      operation 5844226 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned iterator.

@return A new iterator that can be used without mutating this one.

@throws CloneNotSupportedException
"
      end

      operation 5844354 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get a cloned Iterator that is reset to the beginning
 of the query.

 @return A cloned NodeIterator set of the start of the query.

 @throws CloneNotSupportedException
"
      end

      operation 5844482 "isReverseAxes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this is a reverse axes.  Overrides AxesWalker#isReverseAxes.

@return true for this class.
"
      end

      operation 5844610 "getProximityPosition"
	protected explicit_return_type "int"
	nparams 1
	  param in name "predicateIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current sub-context position.  In order to do the
reverse axes count, for the moment this re-searches the axes
up to the predicate.  An optimization on this is to cache
the nodes searched, but, for the moment, this case is probably
rare enough that the added complexity isn't worth it.

@param predicateIndex The predicate index of the proximity position.

@return The pridicate index, or -1.
"
      end

      operation 5844738 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of nodes in the list. The range of valid child node indices
is 0 to <code>length-1</code> inclusive.

@return The number of nodes in the list, always greater or equal to zero.
"
      end

      operation 5844866 "countProximityPosition"
	protected explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Count backwards one proximity position.

@param i The predicate index.
"
      end

      operation 5844994 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator.
"
      end

      operation 5845122 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      operation 5845250 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 810754 "OneStepIteratorForward"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a general iterator for
those LocationSteps with only one step, and perhaps a predicate,
that only go forward (i.e. it can not be used with ancestors,
preceding, etc.)
@see com.sun.org.apache.xpath.internal.axes#ChildTestIterator
@xsl.usage advanced
"
      classrelation 2587522 // <generalisation>
	relation 2587522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2587522 // <generalisation>
	  b parent class_ref 807938 // ChildTestIterator
      end

      attribute 1257474 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1576936606178190566L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1257602 "m_axis"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The traversal axis from where the nodes will be filtered. 
"
      end

      operation 5845378 "OneStepIteratorForward"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a OneStepIterator object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5845506 "OneStepIteratorForward"
	public explicit_return_type ""
	nparams 1
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a OneStepIterator object that will just traverse the self axes.

@param axis One of the com.sun.org.apache.xml.internal.dtm.Axis integers.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5845634 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5845762 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Return the first node out of the nodeset, if this expression is
   * a nodeset expression.  This is the default implementation for
   * nodesets.
   * <p>WARNING: Do not mutate this class from this function!</p>
   * @param xctxt The XPath runtime context.
   * @return the first node out of the nodeset, or DTM.NULL.
   */
  public int asNode(XPathContext xctxt)
    throws javax.xml.transform.TransformerException
  {
    if(getPredicateCount() > 0)
      return super.asNode(xctxt);

    int current = xctxt.getCurrentNode();

    DTM dtm = xctxt.getDTM(current);
    DTMAxisTraverser traverser = dtm.getAxisTraverser(m_axis);

    String localName = getLocalName();
    String namespace = getNamespace();
    int what = m_whatToShow;

    // System.out.println(\"what: \");
    // NodeTest.debugWhatToShow(what);
    if(DTMFilter.SHOW_ALL == what
       || ((DTMFilter.SHOW_ELEMENT & what) == 0)
       || localName == NodeTest.WILD
       || namespace == NodeTest.WILD)
    {
      return traverser.first(current);
    }
    else
    {
      int type = getNodeTypeTest(what);
      int extendedType = dtm.getExpandedTypeID(namespace, localName, type);
      return traverser.first(current, extendedType);
    }
  }

Get the next node via getFirstAttribute && getNextAttribute.
"
      end

      operation 5845890 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end

      operation 5846018 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 810882 "ReverseAxesWalker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Walker for a reverse axes.
@see <a href=\"http://www.w3.org/TR/xpath#predicates\">XPath 2.4 Predicates</a>
"
      classrelation 2587650 // <generalisation>
	relation 2587650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2587650 // <generalisation>
	  b parent class_ref 808706 // AxesWalker
      end

      attribute 1257730 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2847007647832768941L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5846146 "ReverseAxesWalker"
	package explicit_return_type ""
	nparams 2
	  param inout name "locPathIterator" type class_ref 806530 // LocPathIterator
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an AxesWalker using a LocPathIterator.

@param locPathIterator The location path iterator that 'owns' this walker.
"
      end

      operation 5846274 "setRoot"
	public explicit_return_type "void"
	nparams 1
	  param in name "root" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the root node of the TreeWalker.
(Not part of the DOM2 TreeWalker interface).

@param root The context node of this step.
"
      end

      operation 5846402 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the walker from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state.
"
      end

      operation 5846530 "getNextNode"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next node in document order on the axes.

@return the next node in document order on the axes, or null.
"
      end

      operation 5846658 "isReverseAxes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this is a reverse axes.  Overrides AxesWalker#isReverseAxes.

@return true for this class.
"
      end

      operation 5846786 "getProximityPosition"
	protected explicit_return_type "int"
	nparams 1
	  param in name "predicateIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   *  Set the root node of the TreeWalker.
   *
   * @param root The context node of this step.
   */
  public void setRoot(int root)
  {
    super.setRoot(root);
  }

Get the current sub-context position.  In order to do the
reverse axes count, for the moment this re-searches the axes
up to the predicate.  An optimization on this is to cache
the nodes searched, but, for the moment, this case is probably
rare enough that the added complexity isn't worth it.

@param predicateIndex The predicate index of the proximity position.

@return The pridicate index, or -1.
"
      end

      operation 5846914 "countProximityPosition"
	protected explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Count backwards one proximity position.

@param i The predicate index.
"
      end

      operation 5847042 "getLastPos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of nodes in this node list.  The function is probably ill
named?


@param xctxt The XPath runtime context.

@return the number of nodes in this node list.
"
      end

      operation 5847170 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.
Warning: This can only be called after setRoot has been called!

@return false.
"
      end

      classrelation 2587778 // m_iterator (<unidirectional association>)
	relation 2587778 --->
	  a role_name "m_iterator" protected
	    comment " The DTM inner traversal class, that corresponds to the super axis. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2587778 // m_iterator (<unidirectional association>)
	  b parent class_ref 590082 // DTMAxisIterator
      end
    end

    class 811010 "RTFIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2587906 // <generalisation>
	relation 2587906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2587906 // <generalisation>
	  b parent class_ref 804994 // NodeSetDTM
      end

      attribute 1257858 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7658117366258528996L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5847298 "RTFIterator"
	public explicit_return_type ""
	nparams 2
	  param in name "root" explicit_type "int"
	  param inout name "manager" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for RTFIterator
"
      end
    end

    class 811138 "SelfIteratorNoPredicate"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an optimized iterator for
\".\" patterns, that is, the self axes without any predicates.
@see com.sun.org.apache.xpath.internal.axes.LocPathIterator
@xsl.usage advanced
"
      classrelation 2588034 // <generalisation>
	relation 2588034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2588034 // <generalisation>
	  b parent class_ref 806530 // LocPathIterator
      end

      attribute 1257986 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4226887905279814201L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5847426 "SelfIteratorNoPredicate"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a SelfIteratorNoPredicate object.

@param compiler A reference to the Compiler that contains the op map.
@param opPos The position within the op map, which contains the
location path expression for this itterator.
@param analysis Analysis bits.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5847554 "SelfIteratorNoPredicate"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a SelfIteratorNoPredicate object.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5847682 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.

@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
"
      end

      operation 5847810 "asNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first node out of the nodeset, if this expression is
a nodeset expression.  This is the default implementation for
nodesets.  Derived classes should try and override this and return a
value without having to do a clone operation.
@param xctxt The XPath runtime context.
@return the first node out of the nodeset, or DTM.NULL.
"
      end

      operation 5847938 "getLastPos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the index of the last node that can be itterated to.
This probably will need to be overridded by derived classes.

@param xctxt XPath runtime context.

@return the index of the last node that can be itterated to.
"
      end
    end

    class 811266 "UnionChildIterator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines a simplified type of union iterator that only
tests along the child axes.  If the conditions are right, it is
much faster than using a UnionPathIterator.
"
      classrelation 2588162 // <generalisation>
	relation 2588162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2588162 // <generalisation>
	  b parent class_ref 807938 // ChildTestIterator
      end

      attribute 1258114 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3500298482193003495L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2588290 // m_nodeTests (<unidirectional association>)
	relation 2588290 --->
	  a role_name "m_nodeTests" multiplicity "[]" init_value " null" private
	    comment "
Even though these may hold full LocPathIterators, this array does
not have to be cloned, since only the node test and predicate
portion are used, and these only need static information.  However,
also note that index predicates can not be used!

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2588290 // m_nodeTests (<unidirectional association>)
	  b parent class_ref 808194 // PredicatedNodeTest
      end

      operation 5848066 "UnionChildIterator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for UnionChildIterator
"
      end

      operation 5848194 "addNodeTest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "test" type class_ref 808194 // PredicatedNodeTest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a node test to the union list.

@param test reference to a NodeTest, which will be added
directly to the list of node tests (in other words, it will
not be cloned).  The parent of this test will be set to
this object.
"
      end

      operation 5848322 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5848450 "acceptNode"
	public explicit_return_type "short"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether a specified node is visible in the logical view of a
TreeWalker or NodeIterator. This function will be called by the
implementation of TreeWalker and NodeIterator; it is not intended to
be called directly from user code.
@param n  The node to check to see if it passes the filter or not.
@return  a constant to determine whether the node is accepted,
  rejected, or skipped, as defined  above .
"
      end
    end

    class 811522 "WalkerFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is both a factory for XPath location path expressions,
which are built from the opcode map output, and an analysis engine
for the location path expressions in order to provide optimization hints.
"
      operation 5851010 "loadOneWalker"
	class_operation package return_type class_ref 808706 // AxesWalker
	nparams 3
	  param inout name "lpi" type class_ref 808834 // WalkingIterator
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is for building an array of possible levels
where the target element(s) could be found for a match.
@param lpi The owning location path iterator.
@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param stepOpCodePos The opcode position for the step.

@return non-null AxesWalker derivative.

@throws javax.xml.transform.TransformerException
@xsl.usage advanced
"
      end

      operation 5851138 "loadWalkers"
	class_operation package return_type class_ref 808706 // AxesWalker
	nparams 4
	  param inout name "lpi" type class_ref 808834 // WalkingIterator
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	  param in name "stepIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is for building an array of possible levels
where the target element(s) could be found for a match.
@param lpi The owning location path iterator object.
@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param stepOpCodePos The opcode position for the step.
@param stepIndex The top-level step index withing the iterator.

@return non-null AxesWalker derivative.

@throws javax.xml.transform.TransformerException
@xsl.usage advanced
"
      end

      operation 5851266 "isSet"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "analysis" explicit_type "int"
	  param in name "bits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5851394 "diagnoseIterator"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param in name "analysis" explicit_type "int"
	  param inout name "compiler" type class_ref 776450 // Compiler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5851522 "newDTMIterator"
	class_operation public return_type class_ref 635522 // DTMIterator
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param inout name "isTopLevel" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new LocPathIterator iterator.  The exact type of iterator
returned is based on an analysis of the XPath operations.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param opPos The position of the operation code for this itterator.

@return non-null reference to a LocPathIterator or derivative.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5851650 "getAxisFromStep"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special purpose function to see if we can optimize the pattern for
a DescendantIterator.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param stepOpCodePos The opcode position for the step.

@return 32 bits as an integer that give information about the location
path as a whole.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5851778 "getAnalysisBitFromAxes"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a corresponding BIT_XXX from an axis.
@param axis One of Axis.ANCESTOR, etc.
@return One of BIT_ANCESTOR, etc.
"
      end

      operation 5851906 "functionProximateOrContainsProximate"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5852034 "isProximateInnerExpr"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5852162 "mightBeProximate"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "stepType" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the predicates need to have proximity knowledge.
"
      end

      operation 5852290 "isOptimizableForDescendantIterator"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	  param in name "stepIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special purpose function to see if we can optimize the pattern for
a DescendantIterator.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param stepOpCodePos The opcode position for the step.
@param stepIndex The top-level step index withing the iterator.

@return 32 bits as an integer that give information about the location
path as a whole.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5852418 "analyze"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	  param in name "stepIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Analyze the location path and return 32 bits that give information about
the location path as a whole.  See the BIT_XXX constants for meaning about
each of the bits.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param stepOpCodePos The opcode position for the step.
@param stepIndex The top-level step index withing the iterator.

@return 32 bits as an integer that give information about the location
path as a whole.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5852546 "isDownwardAxisOfMany"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the given axis goes downword.  Bogus name, if you can think of
a better one, please do tell.  This really has to do with inverting
attribute axis.
@param axis One of Axis.XXX.
@return true if the axis is not a child axis and does not go up from
the axis root.
"
      end

      operation 5852674 "loadSteps"
	class_operation package return_type class_ref 807298 // StepPattern
	nparams 4
	  param inout name "mpi" type class_ref 810242 // MatchPatternIterator
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	  param in name "stepIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a <a href=\"http://www.w3.org/TR/xpath#location-paths\">LocationPath</a>
as a generalized match pattern.  What this means is that the LocationPath
is read backwards, as a test on a given node, to see if it matches the
criteria of the selection, and ends up at the context node.  Essentially,
this is a backwards query from a given node, to find the context node.
<p>So, the selection \"foo/daz[2]\" is, in non-abreviated expanded syntax,
\"self::node()/following-sibling::foo/child::daz[position()=2]\".
Taking this as a match pattern for a probable node, it works out to
\"self::daz/parent::foo[child::daz[position()=2 and isPrevStepNode()]
precedingSibling::node()[isContextNodeOfLocationPath()]\", adding magic
isPrevStepNode and isContextNodeOfLocationPath operations.  Predicates in
the location path have to be executed by the following step,
because they have to know the context of their execution.

@param mpi The MatchPatternIterator to which the steps will be attached.
@param compiler The compiler that holds the syntax tree/op map to
construct from.
@param stepOpCodePos The current op code position within the opmap.
@param stepIndex The top-level step index withing the iterator.

@return A StepPattern object, which may contain relative StepPatterns.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5852802 "createDefaultStepPattern"
	class_operation private return_type class_ref 807298 // StepPattern
	nparams 6
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param inout name "mpi" type class_ref 810242 // MatchPatternIterator
	  param in name "analysis" explicit_type "int"
	  param inout name "tail" type class_ref 807298 // StepPattern
	  param inout name "head" type class_ref 807298 // StepPattern
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a StepPattern that is contained within a LocationPath.


@param compiler The compiler that holds the syntax tree/op map to
construct from.
@param stepOpCodePos The current op code position within the opmap.
@param mpi The MatchPatternIterator to which the steps will be attached.
@param analysis 32 bits of analysis, from which the type of AxesWalker
                may be influenced.
@param tail The step that is the first step analyzed, but the last
                 step in the relative match linked list, i.e. the tail.
                 May be null.
@param head The step that is the current head of the relative
                match step linked list.
                May be null.

@return the head of the list.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5852930 "analyzePredicate"
	class_operation package explicit_return_type "boolean"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "stepType" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Analyze a step and give information about it's predicates.  Right now this
just returns true or false if the step has a predicate.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param opPos The opcode position for the step.
@param stepType The type of step, one of OP_GROUP, etc.

@return true if step has a predicate.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5853058 "createDefaultWalker"
	class_operation private return_type class_ref 808706 // AxesWalker
	nparams 4
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param inout name "lpi" type class_ref 808834 // WalkingIterator
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the proper Walker from the axes type.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param opPos The opcode position for the step.
@param lpi The owning location path iterator.
@param analysis 32 bits of analysis, from which the type of AxesWalker
                may be influenced.

@return non-null reference to AxesWalker derivative.
@throws RuntimeException if the input is bad.
"
      end

      operation 5853186 "getAnalysisString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1258498 "DEBUG_PATTERN_CREATION"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set to true for diagnostics about walker creation 
"
      end

      attribute 1258626 "DEBUG_WALKER_CREATION"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set to true for diagnostics about walker creation 
"
      end

      attribute 1258754 "DEBUG_ITERATOR_CREATION"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set to true for diagnostics about iterator creation 
"
      end

      operation 5853314 "hasPredicate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5853442 "isWild"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5853570 "walksAncestors"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5853698 "walksAttributes"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5853826 "walksNamespaces"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5853954 "walksChildren"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854082 "walksDescendants"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854210 "walksSubtree"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854338 "walksSubtreeOnlyMaybeAbsolute"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854466 "walksSubtreeOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854594 "walksFilteredList"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854722 "walksSubtreeOnlyFromRootOrContext"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854850 "walksInDocOrder"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5854978 "walksFollowingOnlyMaybeAbsolute"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855106 "walksUp"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855234 "walksSideways"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855362 "walksExtraNodes"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855490 "walksExtraNodesOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855618 "isAbsolute"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855746 "walksChildrenOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5855874 "walksChildrenAndExtraAndSelfOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856002 "walksDescendantsAndExtraAndSelfOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856130 "walksSelfOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856258 "walksUpOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856386 "walksDownOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856514 "walksDownExtraOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856642 "canSkipSubtrees"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856770 "canCrissCross"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5856898 "isNaturalDocOrder"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the pattern can be 'walked' with the iteration steps in natural
document order, without duplicates.

@param analysis The general analysis of the pattern.

@return true if the walk can be done in natural order.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5857026 "isNaturalDocOrder"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "stepOpCodePos" explicit_type "int"
	  param in name "stepIndex" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the pattern can be 'walked' with the iteration steps in natural
document order, without duplicates.

@param compiler non-null reference to compiler object that has processed
                the XPath operations into an opcode map.
@param stepOpCodePos The opcode position for the step.
@param stepIndex The top-level step index withing the iterator.
@param analysis The general analysis of the pattern.

@return true if the walk can be done in natural order.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5857154 "isOneStep"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5857282 "getStepCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "analysis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1258882 "BITS_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x000000FF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "First 8 bits are the number of top-level location steps.  Hopefully
 there will never be more that 255 location steps!!!

"
      end

      attribute 1259010 "BITS_RESERVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000F00"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 4 bits are reserved for future use. 
"
      end

      attribute 1259138 "BIT_PREDICATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if the expression contains a top-level predicate. 
"
      end

      attribute 1259266 "BIT_ANCESTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain an ancestor step. 
"
      end

      attribute 1259394 "BIT_ANCESTOR_OR_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain an ancestor-or-self step. 
"
      end

      attribute 1259522 "BIT_ATTRIBUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 3)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain an attribute step. 
"
      end

      attribute 1259650 "BIT_CHILD"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a child step. 
"
      end

      attribute 1259778 "BIT_DESCENDANT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 5)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a descendant step. 
"
      end

      attribute 1259906 "BIT_DESCENDANT_OR_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 6)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a descendant-or-self step. 
"
      end

      attribute 1260034 "BIT_FOLLOWING"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 7)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a following step. 
"
      end

      attribute 1260162 "BIT_FOLLOWING_SIBLING"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 8)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a following-sibiling step. 
"
      end

      attribute 1260290 "BIT_NAMESPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 9)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a namespace step. 
"
      end

      attribute 1260418 "BIT_PARENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 10)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a parent step. 
"
      end

      attribute 1260546 "BIT_PRECEDING"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 11)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a preceding step. 
"
      end

      attribute 1260674 "BIT_PRECEDING_SIBLING"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 12)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a preceding-sibling step. 
"
      end

      attribute 1260802 "BIT_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 13)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a self step. 
"
      end

      attribute 1260930 "BIT_FILTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 14)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bit is on if any of the walkers contain a filter (i.e. id(), extension
 function, etc.) step.

"
      end

      attribute 1261058 "BIT_ROOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 15)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit is on if any of the walkers contain a root step. 
"
      end

      attribute 1261186 "BITMASK_TRAVERSES_OUTSIDE_SUBTREE"
	class_attribute const_attribute public explicit_type "int"
	init_value " (BIT_NAMESPACE  // ??
                                                                | BIT_PRECEDING_SIBLING
                                                                | BIT_PRECEDING
                                                                | BIT_FOLLOWING_SIBLING
                                                                | BIT_FOLLOWING
                                                                | BIT_PARENT  // except parent of attrs.
                                                                | BIT_ANCESTOR_OR_SELF
                                                                | BIT_ANCESTOR
                                                                | BIT_FILTER
                                                                | BIT_ROOT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If any of these bits are on, the expression may likely traverse outside
 the given subtree.

"
      end

      attribute 1261314 "BIT_BACKWARDS_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 16)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bit is on if any of the walkers can go backwards in document
 order from the context node.

"
      end

      attribute 1261442 "BIT_ANY_DESCENDANT_FROM_ROOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 17)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Found \"//foo\" pattern 
"
      end

      attribute 1261570 "BIT_NODETEST_ANY"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 18)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bit is on if any of the walkers contain an node() test.  This is
 really only useful if the count is 1.

"
      end

      attribute 1261698 "BIT_MATCH_PATTERN"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00001000 << 19)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " can't go higher than 18!
 Bit is on if the expression is a match pattern. 
"
      end
    end

    class 811650 "WalkingIteratorSorted"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class iterates over set of nodes that needs to be sorted.
@xsl.usage internal
"
      classrelation 2589954 // <generalisation>
	relation 2589954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2589954 // <generalisation>
	  b parent class_ref 808834 // WalkingIterator
      end

      attribute 1261954 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4512512007542368213L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1262082 "m_inNaturalOrderStatic"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  /** True if the nodes will be found in document order */
  protected boolean m_inNaturalOrder = false;
 True if the nodes will be found in document order, and this can
be determined statically. 
"
      end

      operation 5859586 "WalkingIteratorSorted"
	public explicit_return_type ""
	nparams 1
	  param inout name "nscontext" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a WalkingIteratorSorted object.

@param nscontext The namespace context for this iterator,
should be OK if null.
"
      end

      operation 5859714 "WalkingIteratorSorted"
	package explicit_return_type ""
	nparams 4
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param in name "opPos" explicit_type "int"
	  param in name "analysis" explicit_type "int"
	  param inout name "shouldLoadWalkers" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a WalkingIterator iterator, including creation
of step walkers from the opcode list, and call back
into the Compiler to create predicate expressions.

@param compiler The Compiler which is creating
this expression.
@param opPos The position of this iterator in the
opcode list from the compiler.
@param shouldLoadWalkers True if walkers should be
loaded, or false if this is a derived iterator and
it doesn't wish to load child walkers.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5859842 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.

@return true as a default.
"
      end

      operation 5859970 "canBeWalkedInNaturalDocOrderStatic"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the nodeset can be walked in doc order, via static analysis.


@return true if the nodeset can be walked in doc order, without sorting.
"
      end

      operation 5860098 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * NEEDSDOC Method canBeWalkedInNaturalDocOrder
   *
   *
   * NEEDSDOC (canBeWalkedInNaturalDocOrder) @return
   */
  boolean canBeWalkedInNaturalDocOrder()
  {

    if (null != m_firstWalker)
    {
      AxesWalker walker = m_firstWalker;
      int prevAxis = -1;
      boolean prevIsSimpleDownAxis = true;

      for(int i = 0; null != walker; i++)
      {
        int axis = walker.getAxis();

        if(walker.isDocOrdered())
        {
          boolean isSimpleDownAxis = ((axis == Axis.CHILD)
                                   || (axis == Axis.SELF)
                                   || (axis == Axis.ROOT));
          // Catching the filtered list here is only OK because
          // FilterExprWalker#isDocOrdered() did the right thing.
          if(isSimpleDownAxis || (axis == -1))
            walker = walker.getNextWalker();
          else
          {
            boolean isLastWalker = (null == walker.getNextWalker());
            if(isLastWalker)
            {
              if(walker.isDocOrdered() && (axis == Axis.DESCENDANT ||
                 axis == Axis.DESCENDANTORSELF || axis == Axis.DESCENDANTSFROMROOT
                 || axis == Axis.DESCENDANTSORSELFFROMROOT) || (axis == Axis.ATTRIBUTE))
                return true;
            }
            return false;
          }
        }
        else
          return false;
      }
      return true;
    }
    return false;
  }

This function is used to perform some extra analysis of the iterator.

@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end
    end
  end

  deploymentview 163330 "axes"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 573954 "ContextNodeList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 804866 // ContextNodeList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ContextNodeList.java,v 1.1.2.1 2005/08/01 01:30:20 jeffsuttor Exp $
"
    end

    artifact 576002 "SubContextList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.XPathContext;
${definition}"
      associated_elems
	class_ref 805762 // SubContextList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SubContextList.java,v 1.1.2.1 2005/08/01 01:30:28 jeffsuttor Exp $
"
    end

    artifact 576130 "PredicatedNodeTest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
${definition}"
      associated_elems
	class_ref 808194 // PredicatedNodeTest
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: PredicatedNodeTest.java,v 1.2.4.2 2005/09/14 19:45:20 jeffsuttor Exp $
"
    end

    artifact 576258 "PathComponent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 808450 // PathComponent
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: PathComponent.java,v 1.1.2.1 2005/08/01 01:30:27 jeffsuttor Exp $
"
    end

    artifact 576386 "LocPathIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 806530 // LocPathIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: LocPathIterator.java,v 1.2.4.2 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 576514 "BasicTestIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
${definition}"
      associated_elems
	class_ref 808066 // BasicTestIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: BasicTestIterator.java,v 1.2.4.1 2005/09/14 19:45:20 jeffsuttor Exp $
"
    end

    artifact 576642 "ChildTestIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
${definition}"
      associated_elems
	class_ref 807938 // ChildTestIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ChildTestIterator.java,v 1.2.4.2 2005/09/14 19:45:20 jeffsuttor Exp $
"
    end

    artifact 576770 "AttributeIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
${definition}"
      associated_elems
	class_ref 807810 // AttributeIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: AttributeIterator.java,v 1.2.4.1 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 576898 "AxesWalker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 808706 // AxesWalker
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: AxesWalker.java,v 1.2.4.1 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 577026 "ChildIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
${definition}"
      associated_elems
	class_ref 808962 // ChildIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ChildIterator.java,v 1.2.4.2 2005/09/14 19:45:20 jeffsuttor Exp $
"
    end

    artifact 577154 "DescendantIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpCodes;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 809090 // DescendantIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DescendantIterator.java,v 1.2.4.2 2005/09/14 19:45:21 jeffsuttor Exp $
"
    end

    artifact 577282 "FilterExprIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
${definition}"
      associated_elems
	class_ref 809218 // FilterExprIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FilterExprIterator.java,v 1.2.4.2 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 577410 "FilterExprIteratorSimple"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.VariableStack;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
${definition}"
      associated_elems
	class_ref 809602 // FilterExprIteratorSimple
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FilterExprIteratorSimple.java,v 1.2.4.2 2005/09/14 19:45:21 jeffsuttor Exp $
"
    end

    artifact 577538 "FilterExprWalker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpCodes;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
${definition}"
      associated_elems
	class_ref 809858 // FilterExprWalker
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FilterExprWalker.java,v 1.2.4.2 2005/09/14 19:45:23 jeffsuttor Exp $
"
    end

    artifact 577666 "HasPositionalPredChecker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.functions.FuncLast;
import com.sun.org.apache.xpath.internal.functions.FuncPosition;
import com.sun.org.apache.xpath.internal.functions.Function;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.operations.Div;
import com.sun.org.apache.xpath.internal.operations.Minus;
import com.sun.org.apache.xpath.internal.operations.Mod;
import com.sun.org.apache.xpath.internal.operations.Mult;
import com.sun.org.apache.xpath.internal.operations.Plus;
import com.sun.org.apache.xpath.internal.operations.Quo;
import com.sun.org.apache.xpath.internal.operations.Variable;
${definition}"
      associated_elems
	class_ref 810114 // HasPositionalPredChecker
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: HasPositionalPredChecker.java,v 1.1.2.1 2005/08/01 01:30:24 jeffsuttor Exp $
"
    end

    artifact 577794 "IteratorPool"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.WrappedRuntimeException;
${definition}"
      associated_elems
	class_ref 808578 // IteratorPool
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: IteratorPool.java,v 1.2.4.1 2005/09/14 19:45:19 jeffsuttor Exp $
"
    end

    artifact 577922 "MatchPatternIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
import com.sun.org.apache.xpath.internal.patterns.StepPattern;
${definition}"
      associated_elems
	class_ref 810242 // MatchPatternIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: MatchPatternIterator.java,v 1.2.4.2 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 578178 "NodeSequence"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xml.internal.utils.NodeVector;
import com.sun.org.apache.xpath.internal.NodeSetDTM;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XObject;
${definition}"
      associated_elems
	class_ref 810370 // NodeSequence
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NodeSequence.java,v 1.6 2007/01/12 19:26:42 spericas Exp $
"
    end

    artifact 578306 "OneStepIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
${definition}"
      associated_elems
	class_ref 810626 // OneStepIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OneStepIterator.java,v 1.2.4.2 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 578434 "OneStepIteratorForward"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
${definition}"
      associated_elems
	class_ref 810754 // OneStepIteratorForward
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OneStepIteratorForward.java,v 1.2.4.2 2005/09/14 19:45:22 jeffsuttor Exp $
"
    end

    artifact 578562 "ReverseAxesWalker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xpath.internal.XPathContext;
${definition}"
      associated_elems
	class_ref 810882 // ReverseAxesWalker
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ReverseAxesWalker.java,v 1.2.4.1 2005/09/14 19:45:21 jeffsuttor Exp $
"
    end

    artifact 578690 "RTFIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xpath.internal.NodeSetDTM;
${definition}"
      associated_elems
	class_ref 811010 // RTFIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: RTFIterator.java,v 1.2.4.1 2005/09/14 19:45:16 jeffsuttor Exp $


This class implements an RTF Iterator. Currently exists for sole
purpose of enabling EXSLT object-type function to return \"RTF\".

@xsl.usage advanced
"
    end

    artifact 578818 "SelfIteratorNoPredicate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
${definition}"
      associated_elems
	class_ref 811138 // SelfIteratorNoPredicate
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SelfIteratorNoPredicate.java,v 1.2.4.2 2005/09/14 19:45:21 jeffsuttor Exp $
"
    end

    artifact 578946 "UnionChildIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
${definition}"
      associated_elems
	class_ref 811266 // UnionChildIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: UnionChildIterator.java,v 1.2.4.1 2005/09/14 19:45:20 jeffsuttor Exp $
"
    end

    artifact 579074 "UnionPathIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpCodes;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
${definition}"
      associated_elems
	class_ref 806658 // UnionPathIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: UnionPathIterator.java,v 1.2.4.1 2005/09/14 19:43:25 jeffsuttor Exp $
"
    end

    artifact 579202 "WalkerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.FunctionTable;
import com.sun.org.apache.xpath.internal.compiler.OpCodes;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.patterns.ContextMatchStepPattern;
import com.sun.org.apache.xpath.internal.patterns.FunctionPattern;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
import com.sun.org.apache.xpath.internal.patterns.StepPattern;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 811522 // WalkerFactory
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WalkerFactory.java,v 1.2.4.1 2005/09/10 03:42:19 jeffsuttor Exp $
"
    end

    artifact 579330 "WalkingIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.VariableStack;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.OpMap;
${definition}"
      associated_elems
	class_ref 808834 // WalkingIterator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WalkingIterator.java,v 1.2.4.2 2005/09/14 19:45:19 jeffsuttor Exp $
"
    end

    artifact 579458 "WalkingIteratorSorted"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
${definition}"
      associated_elems
	class_ref 811650 // WalkingIteratorSorted
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WalkingIteratorSorted.java,v 1.2.4.1 2005/09/14 19:45:23 jeffsuttor Exp $
"
    end
  end
end
