class ActiveObjectMap
!!!1094530.java!!!	ActiveObjectMap(inout poa : POAImpl)
        this.poa = poa ;
!!!1094658.java!!!	create(inout poa : POAImpl, inout multipleIDsAllowed : boolean) : ActiveObjectMap
        if (multipleIDsAllowed)
            return new MultipleObjectMap( poa ) ;
        else
            return new SingleObjectMap(poa ) ;
!!!1094786.java!!!	contains(inout value : Servant) : boolean
        return servantToEntry.containsKey( value ) ;
!!!1094914.java!!!	containsKey(inout key : ActiveObjectMap::Key) : boolean
        return keyToEntry.containsKey(key);
!!!1095042.java!!!	get(inout key : ActiveObjectMap::Key) : AOMEntry
        AOMEntry result = (AOMEntry)keyToEntry.get(key);
        if (result == null) {
            result = new AOMEntry( poa ) ;
            putEntry( key, result ) ;
        }

        return result ;
!!!1095170.java!!!	getServant(inout entry : AOMEntry) : Servant
        return (Servant)entryToServant.get( entry ) ;
!!!1095426.java!!!	getKey(inout value : Servant) : ActiveObjectMap::Key
        AOMEntry entry = (AOMEntry)servantToEntry.get( value ) ;
        return getKey( entry ) ;
!!!1095554.java!!!	putEntry(inout key : ActiveObjectMap::Key, inout value : AOMEntry) : void
        keyToEntry.put( key, value ) ;
!!!1095682.java!!!	putServant(inout servant : Servant, inout value : AOMEntry) : void
        entryToServant.put( value, servant ) ;
        servantToEntry.put( servant, value ) ;
!!!1095938.java!!!	remove(inout key : ActiveObjectMap::Key) : void
        AOMEntry entry = (AOMEntry)keyToEntry.remove( key ) ;
        Servant servant = (Servant)entryToServant.remove( entry ) ;
        if (servant != null)
            servantToEntry.remove( servant ) ;

        removeEntry( entry, key ) ;
!!!1096194.java!!!	clear() : void
        keyToEntry.clear();
!!!1096322.java!!!	keySet() : Set
        return keyToEntry.keySet() ;
