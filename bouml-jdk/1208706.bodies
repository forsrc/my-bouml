class CompositeName
!!!10005890.java!!!	CompositeName(inout comps : Enumeration)
        impl = new NameImpl(null, comps); // null means use default syntax
!!!10006018.java!!!	CompositeName(inout n : String)
        impl = new NameImpl(null, n);  // null means use default syntax
!!!10006146.java!!!	CompositeName()
        impl = new NameImpl(null);  // null means use default syntax
!!!10006274.java!!!	toString() : String
        return impl.toString();
!!!10006402.java!!!	equals(inout obj : Object) : boolean
        return (obj != null &&
                obj instanceof CompositeName &&
                impl.equals(((CompositeName)obj).impl));
!!!10006530.java!!!	hashCode() : int
        return impl.hashCode();
!!!10006658.java!!!	compareTo(inout obj : Object) : int
        if (!(obj instanceof CompositeName)) {
            throw new ClassCastException("Not a CompositeName");
        }
        return impl.compareTo(((CompositeName)obj).impl);
!!!10006786.java!!!	clone() : Object
        return (new CompositeName(getAll()));
!!!10006914.java!!!	size() : int
        return (impl.size());
!!!10007042.java!!!	isEmpty() : boolean
        return (impl.isEmpty());
!!!10007170.java!!!	getAll() : Enumeration
        return (impl.getAll());
!!!10007298.java!!!	get(in posn : int) : String
        return (impl.get(posn));
!!!10007426.java!!!	getPrefix(in posn : int) : Name
        Enumeration<String> comps = impl.getPrefix(posn);
        return (new CompositeName(comps));
!!!10007554.java!!!	getSuffix(in posn : int) : Name
        Enumeration<String> comps = impl.getSuffix(posn);
        return (new CompositeName(comps));
!!!10007682.java!!!	startsWith(inout n : Name) : boolean
        if (n instanceof CompositeName) {
            return (impl.startsWith(n.size(), n.getAll()));
        } else {
            return false;
        }
!!!10007810.java!!!	endsWith(inout n : Name) : boolean
        if (n instanceof CompositeName) {
            return (impl.endsWith(n.size(), n.getAll()));
        } else {
            return false;
        }
!!!10007938.java!!!	addAll(inout suffix : Name) : Name
        if (suffix instanceof CompositeName) {
            impl.addAll(suffix.getAll());
            return this;
        } else {
            throw new InvalidNameException("Not a composite name: " +
                suffix.toString());
        }
!!!10008066.java!!!	addAll(in posn : int, inout n : Name) : Name
        if (n instanceof CompositeName) {
            impl.addAll(posn, n.getAll());
            return this;
        } else {
            throw new InvalidNameException("Not a composite name: " +
                n.toString());
        }
!!!10008194.java!!!	add(inout comp : String) : Name
        impl.add(comp);
        return this;
!!!10008322.java!!!	add(in posn : int, inout comp : String) : Name
        impl.add(posn, comp);
        return this;
!!!10008450.java!!!	remove(in posn : int) : Object
        return impl.remove(posn);
!!!10008578.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.writeInt(size());
        Enumeration<String> comps = getAll();
        while (comps.hasMoreElements()) {
            s.writeObject(comps.nextElement());
        }
!!!10008706.java!!!	readObject(inout s : ObjectInputStream) : void
        impl = new NameImpl(null);  // null means use default syntax
        int n = s.readInt();    // number of components
        try {
            while (--n >= 0) {
                add((String)s.readObject());
            }
        } catch (InvalidNameException e) {
            throw (new java.io.StreamCorruptedException("Invalid name"));
        }
