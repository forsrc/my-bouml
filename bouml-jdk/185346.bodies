class ListItr
!!!525058.java!!!	ListItr(in index : int)
            cursor = index;
!!!525186.java!!!	hasPrevious() : boolean
            return cursor != 0;
!!!525314.java!!!	previous() : E
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch (IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
!!!525442.java!!!	nextIndex() : int
            return cursor;
!!!525570.java!!!	previousIndex() : int
            return cursor-1;
!!!525698.java!!!	set(inout e : E) : void
            if (lastRet < 0)
                throw new IllegalStateException();
            checkForComodification();

            try {
                AbstractList.this.set(lastRet, e);
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
!!!525826.java!!!	add(inout e : E) : void
            checkForComodification();

            try {
                int i = cursor;
                AbstractList.this.add(i, e);
                lastRet = -1;
                cursor = i + 1;
                expectedModCount = modCount;
            } catch (IndexOutOfBoundsException ex) {
                throw new ConcurrentModificationException();
            }
