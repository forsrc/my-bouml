class CertPathBuilder
!!!8029186.java!!!	CertPathBuilder(inout builderSpi : CertPathBuilderSpi, inout provider : Provider, inout algorithm : String)
        this.builderSpi = builderSpi;
        this.provider = provider;
        this.algorithm = algorithm;
!!!8029314.java!!!	getInstance(inout algorithm : String) : CertPathBuilder
        Instance instance = GetInstance.getInstance("CertPathBuilder",
            CertPathBuilderSpi.class, algorithm);
        return new CertPathBuilder((CertPathBuilderSpi)instance.impl,
            instance.provider, algorithm);
!!!8029442.java!!!	getInstance(inout algorithm : String, inout provider : String) : CertPathBuilder
        Instance instance = GetInstance.getInstance("CertPathBuilder",
            CertPathBuilderSpi.class, algorithm, provider);
        return new CertPathBuilder((CertPathBuilderSpi)instance.impl,
            instance.provider, algorithm);
!!!8029570.java!!!	getInstance(inout algorithm : String, inout provider : Provider) : CertPathBuilder
        Instance instance = GetInstance.getInstance("CertPathBuilder",
            CertPathBuilderSpi.class, algorithm, provider);
        return new CertPathBuilder((CertPathBuilderSpi)instance.impl,
            instance.provider, algorithm);
!!!8029698.java!!!	getProvider() : Provider
        return this.provider;
!!!8029826.java!!!	getAlgorithm() : String
        return this.algorithm;
!!!8029954.java!!!	build(inout params : CertPathParameters) : CertPathBuilderResult
        return builderSpi.engineBuild(params);
!!!8030082.java!!!	getDefaultType() : String
        String cpbtype =
            AccessController.doPrivileged(new PrivilegedAction<String>() {
                public String run() {
                    return Security.getProperty(CPB_TYPE);
                }
            });
        return (cpbtype == null) ? "PKIX" : cpbtype;
!!!8030210.java!!!	getRevocationChecker() : CertPathChecker
        return builderSpi.engineGetRevocationChecker();
