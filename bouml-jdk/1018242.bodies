class KeyPairGenerator
!!!7957122.java!!!	KeyPairGenerator(inout algorithm : String)
        this.algorithm = algorithm;
!!!7957250.java!!!	getAlgorithm() : String
        return this.algorithm;
!!!7957378.java!!!	getInstance(inout instance : Instance, inout algorithm : String) : KeyPairGenerator
        KeyPairGenerator kpg;
        if (instance.impl instanceof KeyPairGenerator) {
            kpg = (KeyPairGenerator)instance.impl;
        } else {
            KeyPairGeneratorSpi spi = (KeyPairGeneratorSpi)instance.impl;
            kpg = new Delegate(spi, algorithm);
        }
        kpg.provider = instance.provider;

        if (!skipDebug && pdebug != null) {
            pdebug.println("KeyPairGenerator." + algorithm +
                " algorithm from: " + kpg.provider.getName());
        }

        return kpg;
!!!7957506.java!!!	getInstance(inout algorithm : String) : KeyPairGenerator
        List<Service> list =
                GetInstance.getServices("KeyPairGenerator", algorithm);
        Iterator<Service> t = list.iterator();
        if (t.hasNext() == false) {
            throw new NoSuchAlgorithmException
                (algorithm + " KeyPairGenerator not available");
        }
        // find a working Spi or KeyPairGenerator subclass
        NoSuchAlgorithmException failure = null;
        do {
            Service s = t.next();
            try {
                Instance instance =
                    GetInstance.getInstance(s, KeyPairGeneratorSpi.class);
                if (instance.impl instanceof KeyPairGenerator) {
                    return getInstance(instance, algorithm);
                } else {
                    return new Delegate(instance, t, algorithm);
                }
            } catch (NoSuchAlgorithmException e) {
                if (failure == null) {
                    failure = e;
                }
            }
        } while (t.hasNext());
        throw failure;
!!!7957634.java!!!	getInstance(inout algorithm : String, inout provider : String) : KeyPairGenerator
        Instance instance = GetInstance.getInstance("KeyPairGenerator",
                KeyPairGeneratorSpi.class, algorithm, provider);
        return getInstance(instance, algorithm);
!!!7957762.java!!!	getInstance(inout algorithm : String, inout provider : Provider) : KeyPairGenerator
        Instance instance = GetInstance.getInstance("KeyPairGenerator",
                KeyPairGeneratorSpi.class, algorithm, provider);
        return getInstance(instance, algorithm);
!!!7957890.java!!!	getProvider() : Provider
        disableFailover();
        return this.provider;
!!!7958018.java!!!	disableFailover() : void
        // empty, overridden in Delegate
!!!7958146.java!!!	initialize(in keysize : int) : void
        initialize(keysize, JCAUtil.getSecureRandom());
!!!7958274.java!!!	initialize(in keysize : int, inout random : SecureRandom) : void
        // This does nothing, because either
        // 1. the implementation object returned by getInstance() is an
        //    instance of KeyPairGenerator which has its own
        //    initialize(keysize, random) method, so the application would
        //    be calling that method directly, or
        // 2. the implementation returned by getInstance() is an instance
        //    of Delegate, in which case initialize(keysize, random) is
        //    overridden to call the corresponding SPI method.
        // (This is a special case, because the API and SPI method have the
        // same name.)
!!!7958402.java!!!	initialize(inout params : AlgorithmParameterSpec) : void
        initialize(params, JCAUtil.getSecureRandom());
!!!7958530.java!!!	initialize(inout params : AlgorithmParameterSpec, inout random : SecureRandom) : void
        // This does nothing, because either
        // 1. the implementation object returned by getInstance() is an
        //    instance of KeyPairGenerator which has its own
        //    initialize(params, random) method, so the application would
        //    be calling that method directly, or
        // 2. the implementation returned by getInstance() is an instance
        //    of Delegate, in which case initialize(params, random) is
        //    overridden to call the corresponding SPI method.
        // (This is a special case, because the API and SPI method have the
        // same name.)
!!!7958658.java!!!	genKeyPair() : KeyPair
        return generateKeyPair();
!!!7958786.java!!!	generateKeyPair() : KeyPair
        // This does nothing (except returning null), because either:
        //
        // 1. the implementation object returned by getInstance() is an
        //    instance of KeyPairGenerator which has its own implementation
        //    of generateKeyPair (overriding this one), so the application
        //    would be calling that method directly, or
        //
        // 2. the implementation returned by getInstance() is an instance
        //    of Delegate, in which case generateKeyPair is
        //    overridden to invoke the corresponding SPI method.
        //
        // (This is a special case, because in JDK 1.1.x the generateKeyPair
        // method was used both as an API and a SPI method.)
        return null;
