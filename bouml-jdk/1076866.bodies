class CheckedList
!!!8727938.java!!!	CheckedList(inout list : List, inout type : Class)
            super(list, type);
            this.list = list;
!!!8728066.java!!!	equals(inout o : Object) : boolean
 return o == this || list.equals(o);
!!!8728194.java!!!	hashCode() : int
 return list.hashCode();
!!!8728322.java!!!	get(in index : int) : E
 return list.get(index);
!!!8728450.java!!!	remove(in index : int) : E
 return list.remove(index);
!!!8728578.java!!!	indexOf(inout o : Object) : int
 return list.indexOf(o);
!!!8728706.java!!!	lastIndexOf(inout o : Object) : int
 return list.lastIndexOf(o);
!!!8728834.java!!!	set(in index : int, inout element : E) : E
            return list.set(index, typeCheck(element));
!!!8728962.java!!!	add(in index : int, inout element : E) : void
            list.add(index, typeCheck(element));
!!!8729090.java!!!	addAll(in index : int, inout c : Collection) : boolean
            return list.addAll(index, checkedCopyOf(c));
!!!8729218.java!!!	listIterator() : ListIterator
 return listIterator(0);
!!!8729346.java!!!	listIterator(in index : int) : ListIterator
            final ListIterator<E> i = list.listIterator(index);

            return new ListIterator<E>() {
                public boolean hasNext()     { return i.hasNext(); }
                public E next()              { return i.next(); }
                public boolean hasPrevious() { return i.hasPrevious(); }
                public E previous()          { return i.previous(); }
                public int nextIndex()       { return i.nextIndex(); }
                public int previousIndex()   { return i.previousIndex(); }
                public void remove()         {        i.remove(); }

                public void set(E e) {
                    i.set(typeCheck(e));
                }

                public void add(E e) {
                    i.add(typeCheck(e));
                }

                @Override
                public void forEachRemaining(Consumer<? super E> action) {
                    i.forEachRemaining(action);
                }
            };
!!!8729474.java!!!	subList(in fromIndex : int, in toIndex : int) : List
            return new CheckedList<>(list.subList(fromIndex, toIndex), type);
!!!8729602.java!!!	replaceAll(inout operator : UnaryOperator) : void
            Objects.requireNonNull(operator);
            list.replaceAll(e -> typeCheck(operator.apply(e)));
!!!8729730.java!!!	sort(inout c : Comparator) : void
            list.sort(c);
