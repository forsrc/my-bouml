format 222
"parsers" // jdk1.8::javax::xml::parsers
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/parsers/"
  java_package "javax.xml.parsers"
  classview 148738 "parsers"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 378498 "DocumentBuilder"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the API to obtain DOM Document instances from an XML
document. Using this class, an application programmer can obtain a
{@link Document} from XML.<p>

An instance of this class can be obtained from the
{@link DocumentBuilderFactory#newDocumentBuilder()} method. Once
an instance of this class is obtained, XML can be parsed from a
variety of input sources. These input sources are InputStreams,
Files, URLs, and SAX InputSources.<p>

Note that this class reuses several classes from the SAX API. This
does not require that the implementor of the underlying DOM
implementation use a SAX parser to parse XML document into a
<code>Document</code>. It merely requires that the implementation
communicate with the application using these existing APIs.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      operation 4860802 "DocumentBuilder"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected constructor "
      end

      operation 4860930 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>DocumentBuilder</code> to its original configuration.</p>

<p><code>DocumentBuilder</code> is reset to the same state as when it was created with
{@link DocumentBuilderFactory#newDocumentBuilder()}.
<code>reset()</code> is designed to allow the reuse of existing <code>DocumentBuilder</code>s
thus saving resources associated with the creation of new <code>DocumentBuilder</code>s.</p>

<p>The reset <code>DocumentBuilder</code> is not guaranteed to have the same {@link EntityResolver} or {@link ErrorHandler}
<code>Object</code>s, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>EntityResolver</code> and <code>ErrorHandler</code>.</p>

@throws UnsupportedOperationException When implementation does not
  override this method.

@since 1.5
"
      end

      operation 4861058 "parse"
	public return_type class_ref 378626 // Document
	nparams 1
	  param inout name "is" type class_ref 146434 // InputStream
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given <code>InputStream</code> as an XML
document and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputStream</code> is null.

@param is InputStream containing the content to be parsed.

@return <code>Document</code> result of parsing the
 <code>InputStream</code>

@throws IOException If any IO errors occur.
@throws SAXException If any parse errors occur.
@throws IllegalArgumentException When <code>is</code> is <code>null</code>

@see org.xml.sax.DocumentHandler
"
      end

      operation 4861186 "parse"
	public return_type class_ref 378626 // Document
	nparams 2
	  param inout name "is" type class_ref 146434 // InputStream
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given <code>InputStream</code> as an
XML document and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputStream</code> is null.

@param is InputStream containing the content to be parsed.
@param systemId Provide a base for resolving relative URIs.

@return A new DOM Document object.

@throws IOException If any IO errors occur.
@throws SAXException If any parse errors occur.
@throws IllegalArgumentException When <code>is</code> is <code>null</code>

@see org.xml.sax.DocumentHandler
"
      end

      operation 4861314 "parse"
	public return_type class_ref 378626 // Document
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given URI as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
URI is <code>null</code> null.

@param uri The location of the content to be parsed.

@return A new DOM Document object.

@throws IOException If any IO errors occur.
@throws SAXException If any parse errors occur.
@throws IllegalArgumentException When <code>uri</code> is <code>null</code>

@see org.xml.sax.DocumentHandler
"
      end

      operation 4861442 "parse"
	public return_type class_ref 378626 // Document
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given file as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>File</code> is <code>null</code> null.

@param f The file containing the XML to parse.

@throws IOException If any IO errors occur.
@throws SAXException If any parse errors occur.
@throws IllegalArgumentException When <code>f</code> is <code>null</code>

@see org.xml.sax.DocumentHandler
@return A new DOM Document object.
"
      end

      operation 4861570 "parse"
	abstract public return_type class_ref 378626 // Document
	nparams 1
	  param inout name "is" type class_ref 606594 // InputSource
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given input source as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputSource</code> is <code>null</code> null.

@param is InputSource containing the content to be parsed.

@return A new DOM Document object.

@throws IOException If any IO errors occur.
@throws SAXException If any parse errors occur.
@throws IllegalArgumentException When <code>is</code> is <code>null</code>

@see org.xml.sax.DocumentHandler
"
      end

      operation 4861698 "isNamespaceAware"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
understand namespaces.

@return true if this parser is configured to understand
        namespaces; false otherwise.
"
      end

      operation 4861826 "isValidating"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
validate XML documents.

@return true if this parser is configured to validate
        XML documents; false otherwise.
"
      end

      operation 4861954 "setEntityResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "er" type class_ref 619138 // EntityResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the {@link EntityResolver} to be used to resolve
entities present in the XML document to be parsed. Setting
this to <code>null</code> will result in the underlying
implementation using it's own default implementation and
behavior.

@param er The <code>EntityResolver</code> to be used to resolve entities
          present in the XML document to be parsed.
"
      end

      operation 4862082 "setErrorHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "eh" type class_ref 618114 // ErrorHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the {@link ErrorHandler} to be used by the parser.
Setting this to <code>null</code> will result in the underlying
implementation using it's own default implementation and
behavior.

@param eh The <code>ErrorHandler</code> to be used by the parser.
"
      end

      operation 4862210 "newDocument"
	abstract public return_type class_ref 378626 // Document
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a DOM {@link Document} object
to build a DOM tree with.

@return A new instance of a DOM Document object.
"
      end

      operation 4862338 "getDOMImplementation"
	abstract public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain an instance of a {@link DOMImplementation} object.

@return A new instance of a <code>DOMImplementation</code>.
"
      end

      operation 4862466 "getSchema"
	public return_type class_ref 719490 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get current state of canonicalization.</p>

@return current state canonicalization control


public boolean getCanonicalization() {
return canonicalState;
}

 <p>Get a reference to the the {@link Schema} being used by
the XML processor.</p>

<p>If no schema is being used, <code>null</code> is returned.</p>

@return {@link Schema} being used or <code>null</code>
 if none in use

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5
"
      end

      operation 4862594 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the XInclude processing mode for this parser.</p>

@return
     the return value of
     the {@link DocumentBuilderFactory#isXIncludeAware()}
     when this parser was created from factory.

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5

@see DocumentBuilderFactory#setXIncludeAware(boolean)
"
      end
    end

    class 379138 "ParserConfigurationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates a serious configuration error.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      classrelation 4785794 // <generalisation>
	relation 4785794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4785794 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      operation 12050178 "ParserConfigurationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>ParserConfigurationException</code> with no
detail mesage.
"
      end

      operation 12050306 "ParserConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>ParserConfigurationException</code> with
the <code>String</code> specified as an error message.

@param msg The error message for the exception.
"
      end
    end

    class 587650 "DocumentBuilderFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a factory API that enables applications to obtain a
parser that produces DOM object trees from XML documents.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@author <a href=\"mailto:Neeraj.Bajaj@sun.com\">Neeraj Bajaj</a>

@version $Revision: 1.9 $, $Date: 2010/05/25 16:19:44 $

"
      attribute 1085314 "validating"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1085442 "namespaceAware"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1085570 "whitespace"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1085698 "expandEntityRef"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1085826 "ignoreComments"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1085954 "coalescing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4856578 "DocumentBuilderFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to prevent instantiation.
Use {@link #newInstance()}.</p>
"
      end

      operation 4856706 "newInstance"
	class_operation public return_type class_ref 587650 // DocumentBuilderFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a
<code>DocumentBuilderFactory</code>. This static method creates
a new factory instance.
This method uses the following ordered lookup procedure to determine
the <code>DocumentBuilderFactory</code> implementation class to
load:
<ul>
<li>
Use the <code>javax.xml.parsers.DocumentBuilderFactory</code> system
property.
</li>
<li>
Use the properties file \"lib/jaxp.properties\" in the JRE directory.
This configuration file is in standard <code>java.util.Properties
</code> format and contains the fully qualified name of the
implementation class with the key being the system property defined
above.

The jaxp.properties file is read only once by the JAXP implementation
and it's values are then cached for future use.  If the file does not exist
when the first attempt is made to read from it, no further attempts are
made to check for its existence.  It is not possible to change the value
of any property in jaxp.properties after it has been read for the first time.
</li>
<li>
Uses the service-provider loading facilities, defined by the
{@link java.util.ServiceLoader} class, to attempt to locate and load an
implementation of the service using the {@linkplain
java.util.ServiceLoader#load(java.lang.Class) default loading mechanism}:
the service-provider loading facility will use the {@linkplain
java.lang.Thread#getContextClassLoader() current thread's context class loader}
to attempt to load the service. If the context class
loader is null, the {@linkplain
ClassLoader#getSystemClassLoader() system class loader} will be used.
</li>
<li>
Otherwise, the system-default implementation is returned.
</li>
</ul>

Once an application has obtained a reference to a
<code>DocumentBuilderFactory</code> it can use the factory to
configure and obtain parser instances.


<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <code>System.err</code> about what it is doing and where it is looking at.</p>

<p> If you have problems loading {@link DocumentBuilder}s, try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>

@return New instance of a <code>DocumentBuilderFactory</code>

@throws FactoryConfigurationError in case of {@linkplain
java.util.ServiceConfigurationError service configuration error} or if
the implementation is not available or cannot be instantiated.
"
      end

      operation 4856834 "newInstance"
	class_operation public return_type class_ref 587650 // DocumentBuilderFactory
	nparams 2
	  param inout name "factoryClassName" type class_ref 128130 // String
	  param inout name "classLoader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>DocumentBuilderFactory</code> from class name.
This function is useful when there are multiple providers in the classpath.
It gives more control to the application as it can specify which provider
should be loaded.</p>

<p>Once an application has obtained a reference to a <code>DocumentBuilderFactory</code>
it can use the factory to configure and obtain parser instances.</p>


<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <code>System.err</code> about what it is doing and where it is looking at.</p>

<p> If you have problems try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>

@param factoryClassName fully qualified factory class name that provides implementation of <code>javax.xml.parsers.DocumentBuilderFactory</code>.

@param classLoader <code>ClassLoader</code> used to load the factory class. If <code>null</code>
                    current <code>Thread</code>'s context classLoader is used to load the factory class.

@return New instance of a <code>DocumentBuilderFactory</code>

@throws FactoryConfigurationError if <code>factoryClassName</code> is <code>null</code>, or
                                  the factory class cannot be loaded, instantiated.

@see #newInstance()

@since 1.6
"
      end

      operation 4856962 "newDocumentBuilder"
	abstract public return_type class_ref 378498 // DocumentBuilder
	nparams 0
	nexceptions 1
	  exception class_ref 379138 // ParserConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of a {@link javax.xml.parsers.DocumentBuilder}
using the currently configured parameters.

@return A new instance of a DocumentBuilder.

@throws ParserConfigurationException if a DocumentBuilder
  cannot be created which satisfies the configuration requested.
"
      end

      operation 4857090 "setNamespaceAware"
	public explicit_return_type "void"
	nparams 1
	  param inout name "awareness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
provide support for XML namespaces. By default the value of this is set
to <code>false</code>

@param awareness true if the parser produced will provide support
                 for XML namespaces; false otherwise.
"
      end

      operation 4857218 "setValidating"
	public explicit_return_type "void"
	nparams 1
	  param inout name "validating" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
validate documents as they are parsed. By default the value of this
is set to <code>false</code>.

<p>
Note that \"the validation\" here means
<a href=\"http://www.w3.org/TR/REC-xml#proc-types\">a validating
parser</a> as defined in the XML recommendation.
In other words, it essentially just controls the DTD validation.
(except the legacy two properties defined in JAXP 1.2.)
</p>

<p>
To use modern schema languages such as W3C XML Schema or
RELAX NG instead of DTD, you can configure your parser to be
a non-validating parser by leaving the {@link #setValidating(boolean)}
method <code>false</code>, then use the {@link #setSchema(Schema)}
method to associate a schema to a parser.
</p>

@param validating true if the parser produced will validate documents
                  as they are parsed; false otherwise.
"
      end

      operation 4857346 "setIgnoringElementContentWhitespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "whitespace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parsers created by this  factory must eliminate
whitespace in element content (sometimes known loosely as
'ignorable whitespace') when parsing XML documents (see XML Rec
2.10). Note that only whitespace which is directly contained within
element content that has an element only content model (see XML
Rec 3.2.1) will be eliminated. Due to reliance on the content model
this setting requires the parser to be in validating mode. By default
the value of this is set to <code>false</code>.

@param whitespace true if the parser created must eliminate whitespace
                  in the element content when parsing XML documents;
                  false otherwise.
"
      end

      operation 4857474 "setExpandEntityReferences"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expandEntityRef" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
expand entity reference nodes. By default the value of this is set to
<code>true</code>

@param expandEntityRef true if the parser produced will expand entity
                       reference nodes; false otherwise.
"
      end

      operation 4857602 "setIgnoringComments"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignoreComments" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Specifies that the parser produced by this code will
ignore comments. By default the value of this is set to <code>false
</code>.</p>

@param ignoreComments <code>boolean</code> value to ignore comments during processing
"
      end

      operation 4857730 "setCoalescing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "coalescing" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
convert CDATA nodes to Text nodes and append it to the
adjacent (if any) text node. By default the value of this is set to
<code>false</code>

@param coalescing  true if the parser produced will convert CDATA nodes
                   to Text nodes and append it to the adjacent (if any)
                   text node; false otherwise.
"
      end

      operation 4857858 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which are namespace aware.

@return  true if the factory is configured to produce parsers which
         are namespace aware; false otherwise.
"
      end

      operation 4857986 "isValidating"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which validate the XML content during parse.

@return  true if the factory is configured to produce parsers
         which validate the XML content during parse; false otherwise.
"
      end

      operation 4858114 "isIgnoringElementContentWhitespace"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which ignore ignorable whitespace in element content.

@return  true if the factory is configured to produce parsers
         which ignore ignorable whitespace in element content;
         false otherwise.
"
      end

      operation 4858242 "isExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which expand entity reference nodes.

@return  true if the factory is configured to produce parsers
         which expand entity reference nodes; false otherwise.
"
      end

      operation 4858370 "isIgnoringComments"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which ignores comments.

@return  true if the factory is configured to produce parsers
         which ignores comments; false otherwise.
"
      end

      operation 4858498 "isCoalescing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which converts CDATA nodes to Text nodes and appends it to
the adjacent (if any) Text node.

@return  true if the factory is configured to produce parsers
         which converts CDATA nodes to Text nodes and appends it to
         the adjacent (if any) Text node; false otherwise.
"
      end

      operation 4858626 "setAttribute"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to set specific attributes on the underlying
implementation.
<p>
All implementations that implement JAXP 1.5 or newer are required to
support the {@link javax.xml.XMLConstants#ACCESS_EXTERNAL_DTD} and
{@link javax.xml.XMLConstants#ACCESS_EXTERNAL_SCHEMA} properties.
</p>
<ul>
  <li>
     <p>
     Setting the {@link javax.xml.XMLConstants#ACCESS_EXTERNAL_DTD} property
     restricts the access to external DTDs, external Entity References to the
     protocols specified by the property.
     If access is denied during parsing due to the restriction of this property,
     {@link org.xml.sax.SAXException} will be thrown by the parse methods defined by
     {@link javax.xml.parsers.DocumentBuilder}.
     </p>
     <p>
     Setting the {@link javax.xml.XMLConstants#ACCESS_EXTERNAL_SCHEMA} property
     restricts the access to external Schema set by the schemaLocation attribute to
     the protocols specified by the property.  If access is denied during parsing
     due to the restriction of this property, {@link org.xml.sax.SAXException}
     will be thrown by the parse methods defined by
     {@link javax.xml.parsers.DocumentBuilder}.
     </p>
  </li>
</ul>

@param name The name of the attribute.
@param value The value of the attribute.

@throws IllegalArgumentException thrown if the underlying
  implementation doesn't recognize the attribute.
"
      end

      operation 4858754 "getAttribute"
	abstract public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to retrieve specific attributes on the underlying
implementation.

@param name The name of the attribute.

@return value The value of the attribute.

@throws IllegalArgumentException thrown if the underlying
  implementation doesn't recognize the attribute.
"
      end

      operation 4858882 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 379138 // ParserConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set a feature for this <code>DocumentBuilderFactory</code> and <code>DocumentBuilder</code>s created by this factory.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
A {@link ParserConfigurationException} is thrown if this <code>DocumentBuilderFactory</code> or the
<code>DocumentBuilder</code>s it creates cannot support the feature.
It is possible for a <code>DocumentBuilderFactory</code> to expose a feature value but be unable to change its state.
</p>

<p>
All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is:</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include enity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
   {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link  DocumentBuilder#setErrorHandler(org.xml.sax.ErrorHandler errorHandler)}.
  </li>
  <li>
    <code>false</code>: the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name Feature name.
@param value Is feature state <code>true</code> or <code>false</code>.

@throws ParserConfigurationException if this <code>DocumentBuilderFactory</code> or the <code>DocumentBuilder</code>s
  it creates cannot support this feature.
@throws NullPointerException If the <code>name</code> parameter is null.
"
      end

      operation 4859010 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379138 // ParserConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the state of the named feature.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link ParserConfigurationException} is thrown if this <code>DocumentBuilderFactory</code> or the
<code>DocumentBuilder</code>s it creates cannot support the feature.
It is possible for an <code>DocumentBuilderFactory</code> to expose a feature value but be unable to change its state.
</p>

@param name Feature name.

@return State of the named feature.

@throws ParserConfigurationException if this <code>DocumentBuilderFactory</code>
  or the <code>DocumentBuilder</code>s it creates cannot support this feature.
"
      end

      operation 4859138 "getSchema"
	public return_type class_ref 719490 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link Schema} object specified through
the {@link #setSchema(Schema schema)} method.

@return
     the {@link Schema} object that was last set through
     the {@link #setSchema(Schema)} method, or null
     if the method was not invoked since a {@link DocumentBuilderFactory}
     is created.

@throws UnsupportedOperationException When implementation does not
  override this method.

@since 1.5
"
      end

      operation 4859266 "setSchema"
	public explicit_return_type "void"
	nparams 1
	  param inout name "schema" type class_ref 719490 // Schema
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the {@link Schema} to be used by parsers created
from this factory.

<p>
When a {@link Schema} is non-null, a parser will use a validator
created from it to validate documents before it passes information
down to the application.

<p>When errors are found by the validator, the parser is responsible
to report them to the user-specified {@link org.xml.sax.ErrorHandler}
(or if the error handler is not set, ignore them or throw them), just
like any other errors found by the parser itself.
In other words, if the user-specified {@link org.xml.sax.ErrorHandler}
is set, it must receive those errors, and if not, they must be
treated according to the implementation specific
default error handling rules.

<p>
A validator may modify the outcome of a parse (for example by
adding default values that were missing in documents), and a parser
is responsible to make sure that the application will receive
modified DOM trees.

<p>
Initialy, null is set as the {@link Schema}.

<p>
This processing will take effect even if
the {@link #isValidating()} method returns <code>false</code>.

<p>It is an error to use
the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>
property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>
property in conjunction with a {@link Schema} object.
Such configuration will cause a {@link ParserConfigurationException}
exception when the {@link #newDocumentBuilder()} is invoked.</p>


<h4>Note for implmentors</h4>

<p>
A parser must be able to work with any {@link Schema}
implementation. However, parsers and schemas are allowed
to use implementation-specific custom mechanisms
as long as they yield the result described in the specification.
</p>

@param schema <code>Schema</code> to use or <code>null</code>
  to remove a schema.

@throws UnsupportedOperationException When implementation does not
  override this method.

@since 1.5
"
      end

      operation 4859394 "setXIncludeAware"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set state of XInclude processing.</p>

<p>If XInclude markup is found in the document instance, should it be
processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">
XML Inclusions (XInclude) Version 1.0</a>.</p>

<p>XInclude processing defaults to <code>false</code>.</p>

@param state Set XInclude processing to <code>true</code> or
  <code>false</code>

@throws UnsupportedOperationException When implementation does not
  override this method.

@since 1.5
"
      end

      operation 4859522 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get state of XInclude processing.</p>

@return current state of XInclude processing

@throws UnsupportedOperationException When implementation does not
  override this method.

@since 1.5
"
      end
    end

    class 587778 "SAXParserFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a factory API that enables applications to configure and
obtain a SAX based parser to parse XML documents.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@author <a href=\"mailto:Neeraj.Bajaj@sun.com\">Neeraj Bajaj</a>

@version $Revision: 1.9 $, $Date: 2010/05/25 16:19:44 $

"
      attribute 1086338 "validating"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Should Parsers be validating?</p>

"
      end

      attribute 1086466 "namespaceAware"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Should Parsers be namespace aware?</p>

"
      end

      operation 4872706 "SAXParserFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to force use of {@link #newInstance()}.</p>
"
      end

      operation 4872834 "newInstance"
	class_operation public return_type class_ref 587778 // SAXParserFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a <code>SAXParserFactory</code>. This
static method creates a new factory instance
This method uses the following ordered lookup procedure to determine
the <code>SAXParserFactory</code> implementation class to
load:
<ul>
<li>
Use the <code>javax.xml.parsers.SAXParserFactory</code> system
property.
</li>
<li>
Use the properties file \"lib/jaxp.properties\" in the JRE directory.
This configuration file is in standard <code>java.util.Properties
</code> format and contains the fully qualified name of the
implementation class with the key being the system property defined
above.

The jaxp.properties file is read only once by the JAXP implementation
and it's values are then cached for future use.  If the file does not exist
when the first attempt is made to read from it, no further attempts are
made to check for its existence.  It is not possible to change the value
of any property in jaxp.properties after it has been read for the first time.
</li>
<li>
Use the service-provider loading facilities, defined by the
{@link java.util.ServiceLoader} class, to attempt to locate and load an
implementation of the service using the {@linkplain
java.util.ServiceLoader#load(java.lang.Class) default loading mechanism}:
the service-provider loading facility will use the {@linkplain
java.lang.Thread#getContextClassLoader() current thread's context class loader}
to attempt to load the service. If the context class
loader is null, the {@linkplain
ClassLoader#getSystemClassLoader() system class loader} will be used.
</li>
<li>
Otherwise the system-default implementation is returned.
</li>
</ul>

Once an application has obtained a reference to a
<code>SAXParserFactory</code> it can use the factory to
configure and obtain parser instances.



<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <code>System.err</code> about what it is doing and where it is looking at.</p>

<p> If you have problems loading {@link SAXParser}s, try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>


@return A new instance of a SAXParserFactory.

@throws FactoryConfigurationError in case of {@linkplain
java.util.ServiceConfigurationError service configuration error} or if
the implementation is not available or cannot be instantiated.
"
      end

      operation 4872962 "newInstance"
	class_operation public return_type class_ref 587778 // SAXParserFactory
	nparams 2
	  param inout name "factoryClassName" type class_ref 128130 // String
	  param inout name "classLoader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>SAXParserFactory</code> from class name.
This function is useful when there are multiple providers in the classpath.
It gives more control to the application as it can specify which provider
should be loaded.</p>

<p>Once an application has obtained a reference to a <code>SAXParserFactory</code>
it can use the factory to configure and obtain parser instances.</p>


<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <code>System.err</code> about what it is doing and where it is looking at.</p>

<p> If you have problems, try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>

@param factoryClassName fully qualified factory class name that provides implementation of <code>javax.xml.parsers.SAXParserFactory</code>.

@param classLoader <code>ClassLoader</code> used to load the factory class. If <code>null</code>
                    current <code>Thread</code>'s context classLoader is used to load the factory class.

@return New instance of a <code>SAXParserFactory</code>

@throws FactoryConfigurationError if <code>factoryClassName</code> is <code>null</code>, or
                                  the factory class cannot be loaded, instantiated.

@see #newInstance()

@since 1.6
"
      end

      operation 4873090 "newSAXParser"
	abstract public return_type class_ref 621826 // SAXParser
	nparams 0
	nexceptions 2
	  exception class_ref 379138 // ParserConfigurationException
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new instance of a SAXParser using the currently
configured factory parameters.</p>

@return A new instance of a SAXParser.

@throws ParserConfigurationException if a parser cannot
  be created which satisfies the requested configuration.
@throws SAXException for SAX errors.
"
      end

      operation 4873218 "setNamespaceAware"
	public explicit_return_type "void"
	nparams 1
	  param inout name "awareness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
provide support for XML namespaces. By default the value of this is set
to <code>false</code>.

@param awareness true if the parser produced by this code will
                 provide support for XML namespaces; false otherwise.
"
      end

      operation 4873346 "setValidating"
	public explicit_return_type "void"
	nparams 1
	  param inout name "validating" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
validate documents as they are parsed. By default the value of this is
set to <code>false</code>.

<p>
Note that \"the validation\" here means
<a href=\"http://www.w3.org/TR/REC-xml#proc-types\">a validating
parser</a> as defined in the XML recommendation.
In other words, it essentially just controls the DTD validation.
(except the legacy two properties defined in JAXP 1.2.)
</p>

<p>
To use modern schema languages such as W3C XML Schema or
RELAX NG instead of DTD, you can configure your parser to be
a non-validating parser by leaving the {@link #setValidating(boolean)}
method <code>false</code>, then use the {@link #setSchema(Schema)}
method to associate a schema to a parser.
</p>

@param validating true if the parser produced by this code will
                  validate documents as they are parsed; false otherwise.
"
      end

      operation 4873474 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which are namespace aware.

@return true if the factory is configured to produce
        parsers which are namespace aware; false otherwise.
"
      end

      operation 4873602 "isValidating"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which validate the XML content during parse.

@return true if the factory is configured to produce parsers which validate
        the XML content during parse; false otherwise.
"
      end

      operation 4873730 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 3
	  exception class_ref 379138 // ParserConfigurationException
	  exception class_ref 640642 // SAXNotRecognizedException
	  exception class_ref 584450 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
<p>Sets the particular feature in the underlying implementation of
org.xml.sax.XMLReader.
A list of the core features and properties can be found at
<a href=\"http://www.saxproject.org/\">http://www.saxproject.org/</a></p>

<p>All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
    {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link SAXParser} <code>parse</code> methods for handler specification.
  </li>
  <li>
    When the feature is <code>false</code>, the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name The name of the feature to be set.
@param value The value of the feature to be set.

@throws ParserConfigurationException if a parser cannot
    be created which satisfies the requested configuration.
@throws SAXNotRecognizedException When the underlying XMLReader does
           not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
           recognizes the property name but doesn't support the
           property.
@throws NullPointerException If the <code>name</code> parameter is null.

@see org.xml.sax.XMLReader#setFeature
"
      end

      operation 4873858 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 379138 // ParserConfigurationException
	  exception class_ref 640642 // SAXNotRecognizedException
	  exception class_ref 584450 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
<p>Returns the particular property requested for in the underlying
implementation of org.xml.sax.XMLReader.</p>

@param name The name of the property to be retrieved.

@return Value of the requested property.

@throws ParserConfigurationException if a parser cannot be created which satisfies the requested configuration.
@throws SAXNotRecognizedException When the underlying XMLReader does not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#getProperty
"
      end

      operation 4873986 "getSchema"
	public return_type class_ref 719490 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link Schema} object specified through
the {@link #setSchema(Schema schema)} method.


@throws UnsupportedOperationException When implementation does not
  override this method

@return
     the {@link Schema} object that was last set through
     the {@link #setSchema(Schema)} method, or null
     if the method was not invoked since a {@link SAXParserFactory}
     is created.

@since 1.5
"
      end

      operation 4874114 "setSchema"
	public explicit_return_type "void"
	nparams 1
	  param inout name "schema" type class_ref 719490 // Schema
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the {@link Schema} to be used by parsers created
from this factory.</p>

<p>When a {@link Schema} is non-null, a parser will use a validator
created from it to validate documents before it passes information
down to the application.</p>

<p>When warnings/errors/fatal errors are found by the validator, the parser must
handle them as if those errors were found by the parser itself.
In other words, if the user-specified {@link org.xml.sax.ErrorHandler}
is set, it must receive those errors, and if not, they must be
treated according to the implementation specific
default error handling rules.

<p>A validator may modify the SAX event stream (for example by
adding default values that were missing in documents), and a parser
is responsible to make sure that the application will receive
those modified event stream.</p>

<p>Initialy, <code>null</code> is set as the {@link Schema}.</p>

<p>This processing will take effect even if
the {@link #isValidating()} method returns <code>false</code>.

<p>It is an error to use
the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>
property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>
property in conjunction with a non-null {@link Schema} object.
Such configuration will cause a {@link SAXException}
exception when those properties are set on a {@link SAXParser}.</p>

<h4>Note for implementors</h4>
<p>
A parser must be able to work with any {@link Schema}
implementation. However, parsers and schemas are allowed
to use implementation-specific custom mechanisms
as long as they yield the result described in the specification.
</p>

@param schema <code>Schema</code> to use, <code>null</code> to remove a schema.

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5
"
      end

      operation 4874242 "setXIncludeAware"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set state of XInclude processing.</p>

<p>If XInclude markup is found in the document instance, should it be
processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">
XML Inclusions (XInclude) Version 1.0</a>.</p>

<p>XInclude processing defaults to <code>false</code>.</p>

@param state Set XInclude processing to <code>true</code> or
  <code>false</code>

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5
"
      end

      operation 4874370 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get state of XInclude processing.</p>

@return current state of XInclude processing

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5
"
      end
    end

    class 621826 "SAXParser"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the API that wraps an {@link org.xml.sax.XMLReader}
implementation class. In JAXP 1.0, this class wrapped the
{@link org.xml.sax.Parser} interface, however this interface was
replaced by the {@link org.xml.sax.XMLReader}. For ease
of transition, this class continues to support the same name
and interface as well as supporting new methods.

An instance of this class can be obtained from the
{@link javax.xml.parsers.SAXParserFactory#newSAXParser()} method.
Once an instance of this class is obtained, XML can be parsed from
a variety of input sources. These input sources are InputStreams,
Files, URLs, and SAX InputSources.<p>

This static method creates a new factory instance based
on a system property setting or uses the platform default
if no property has been defined.<p>

The system property that controls which Factory implementation
to create is named <code>&quot;javax.xml.parsers.SAXParserFactory&quot;</code>.
This property names a class that is a concrete subclass of this
abstract class. If no property is defined, a platform default
will be used.</p>

As the content is parsed by the underlying parser, methods of the
given {@link org.xml.sax.HandlerBase} or the
{@link org.xml.sax.helpers.DefaultHandler} are called.<p>

Implementors of this class which wrap an underlaying implementation
can consider using the {@link org.xml.sax.helpers.ParserAdapter}
class to initially adapt their SAX1 implementation to work under
this revised class.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      operation 4876290 "SAXParser"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to prevent instaniation.
Use {@link javax.xml.parsers.SAXParserFactory#newSAXParser()}.</p>
"
      end

      operation 4876418 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>SAXParser</code> to its original configuration.</p>

<p><code>SAXParser</code> is reset to the same state as when it was created with
{@link SAXParserFactory#newSAXParser()}.
<code>reset()</code> is designed to allow the reuse of existing <code>SAXParser</code>s
thus saving resources associated with the creation of new <code>SAXParser</code>s.</p>

<p>The reset <code>SAXParser</code> is not guaranteed to have the same {@link Schema}
<code>Object</code>, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>Schema</code>.</p>

@throws UnsupportedOperationException When Implementations do not
  override this method

@since 1.5
"
      end

      operation 4876546 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 146434 // InputStream
	  param inout name "hb" type class_ref 721282 // HandlerBase
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>.</p>

@param is InputStream containing the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the given InputStream is null.
@throws SAXException If parse produces a SAX error.
@throws IOException If an IO error occurs interacting with the
  <code>InputStream</code>.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4876674 "parse"
	public explicit_return_type "void"
	nparams 3
	  param inout name "is" type class_ref 146434 // InputStream
	  param inout name "hb" type class_ref 721282 // HandlerBase
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>.</p>

@param is InputStream containing the content to be parsed.
@param hb The SAX HandlerBase to use.
@param systemId The systemId which is needed for resolving relative URIs.

@throws IllegalArgumentException If the given <code>InputStream</code> is
  <code>null</code>.
@throws IOException If any IO error occurs interacting with the
  <code>InputStream</code>.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler version of this method instead.
"
      end

      operation 4876802 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 146434 // InputStream
	  param inout name "dh" type class_ref 635906 // DefaultHandler
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is InputStream containing the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the given InputStream is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4876930 "parse"
	public explicit_return_type "void"
	nparams 3
	  param inout name "is" type class_ref 146434 // InputStream
	  param inout name "dh" type class_ref 635906 // DefaultHandler
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is InputStream containing the content to be parsed.
@param dh The SAX DefaultHandler to use.
@param systemId The systemId which is needed for resolving relative URIs.

@throws IllegalArgumentException If the given InputStream is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler version of this method instead.
"
      end

      operation 4877058 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "hb" type class_ref 721282 // HandlerBase
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content described by the giving Uniform Resource
Identifier (URI) as XML using the specified
{@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the <code>HandlerBase</code> class has been deprecated in SAX 2.0</i>

@param uri The location of the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the uri is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4877186 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "dh" type class_ref 635906 // DefaultHandler
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content described by the giving Uniform Resource
Identifier (URI) as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param uri The location of the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the uri is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4877314 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 131970 // File
	  param inout name "hb" type class_ref 721282 // HandlerBase
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the file specified as XML using the
specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>

@param f The file containing the XML to parse
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the File object is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4877442 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 131970 // File
	  param inout name "dh" type class_ref 635906 // DefaultHandler
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the file specified as XML using the
specified {@link org.xml.sax.helpers.DefaultHandler}.

@param f The file containing the XML to parse
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the File object is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4877570 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 606594 // InputSource
	  param inout name "hb" type class_ref 721282 // HandlerBase
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content given {@link org.xml.sax.InputSource}
as XML using the specified
{@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>

@param is The InputSource containing the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the <code>InputSource</code> object
  is <code>null</code>.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4877698 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 606594 // InputSource
	  param inout name "dh" type class_ref 635906 // DefaultHandler
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content given {@link org.xml.sax.InputSource}
as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is The InputSource containing the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the <code>InputSource</code> object
  is <code>null</code>.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler
"
      end

      operation 4877826 "getParser"
	abstract public return_type class_ref 721410 // Parser
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SAX parser that is encapsultated by the
implementation of this class.

@return The SAX parser that is encapsultated by the
        implementation of this class.

@throws SAXException If any SAX errors occur during processing.
"
      end

      operation 4877954 "getXMLReader"
	abstract public return_type class_ref 606466 // XMLReader
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link org.xml.sax.XMLReader} that is encapsulated by the
implementation of this class.

@return The XMLReader that is encapsulated by the
        implementation of this class.

@throws SAXException If any SAX errors occur during processing.
"
      end

      operation 4878082 "isNamespaceAware"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
understand namespaces.

@return true if this parser is configured to
        understand namespaces; false otherwise.
"
      end

      operation 4878210 "isValidating"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
validate XML documents.

@return true if this parser is configured to
        validate XML documents; false otherwise.
"
      end

      operation 4878338 "setProperty"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 640642 // SAXNotRecognizedException
	  exception class_ref 584450 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the particular property in the underlying implementation of
{@link org.xml.sax.XMLReader}.
A list of the core features and properties can be found at
<a href=\"http://sax.sourceforge.net/?selected=get-set\">
http://sax.sourceforge.net/?selected=get-set</a>.</p>
<p>
All implementations that implement JAXP 1.5 or newer are required to
support the {@link javax.xml.XMLConstants#ACCESS_EXTERNAL_DTD} and
{@link javax.xml.XMLConstants#ACCESS_EXTERNAL_SCHEMA} properties.
</p>
<ul>
  <li>
     <p>
     Setting the {@link javax.xml.XMLConstants#ACCESS_EXTERNAL_DTD} property
     restricts the access to external DTDs, external Entity References to
     the protocols specified by the property.  If access is denied during parsing
     due to the restriction of this property, {@link org.xml.sax.SAXException}
     will be thrown by the parse methods defined by {@link javax.xml.parsers.SAXParser}.
     </p>
     <p>
     Setting the {@link javax.xml.XMLConstants#ACCESS_EXTERNAL_SCHEMA} property
     restricts the access to external Schema set by the schemaLocation attribute to
     the protocols specified by the property.  If access is denied during parsing
     due to the restriction of this property, {@link org.xml.sax.SAXException}
     will be thrown by the parse methods defined by the {@link javax.xml.parsers.SAXParser}.
     </p>
  </li>
</ul>

@param name The name of the property to be set.
@param value The value of the property to be set.

@throws SAXNotRecognizedException When the underlying XMLReader does
  not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
 recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#setProperty
"
      end

      operation 4878466 "getProperty"
	abstract public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 640642 // SAXNotRecognizedException
	  exception class_ref 584450 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the particular property requested for in the underlying
implementation of {@link org.xml.sax.XMLReader}.</p>

@param name The name of the property to be retrieved.
@return Value of the requested property.

@throws SAXNotRecognizedException When the underlying XMLReader does
   not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
 recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#getProperty
"
      end

      operation 4878594 "getSchema"
	public return_type class_ref 719490 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get current state of canonicalization.</p>

@return current state canonicalization control


public boolean getCanonicalization() {
return canonicalState;
}

 <p>Get a reference to the the {@link Schema} being used by
the XML processor.</p>

<p>If no schema is being used, <code>null</code> is returned.</p>

@return {@link Schema} being used or <code>null</code>
 if none in use

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5
"
      end

      operation 4878722 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the XInclude processing mode for this parser.</p>

@return
     the return value of
     the {@link SAXParserFactory#isXIncludeAware()}
     when this parser was created from factory.

@throws UnsupportedOperationException When implementation does not
  override this method

@since 1.5

@see SAXParserFactory#setXIncludeAware(boolean)
"
      end
    end

    class 1425410 "FactoryConfigurationError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when a problem with configuration with the Parser Factories
exists. This error will typically be thrown when the class of a
parser factory specified in the system properties cannot be found
or instantiated.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.7 $, $Date: 2010-11-01 04:36:09 $
"
      classrelation 4785154 // <generalisation>
	relation 4785154 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4785154 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 2624002 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -827108682472263355L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4785282 // exception (<unidirectional association>)
	relation 4785282 --->
	  a role_name "exception" private
	    comment "
<code>Exception</code> that represents the error.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4785282 // exception (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      operation 12048514 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with no
detail mesage.
"
      end

      operation 12048642 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with
the <code>String </code> specified as an error message.

@param msg The error message for the exception.
"
      end

      operation 12048770 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with a
given <code>Exception</code> base cause of the error.

@param e The exception to be encapsulated in a
FactoryConfigurationError.
"
      end

      operation 12048898 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 132226 // Exception
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with the
given <code>Exception</code> base cause and detail message.

@param e The exception to be encapsulated in a
FactoryConfigurationError
@param msg The detail message.
"
      end

      operation 12049026 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the message (if any) for this error . If there is no
message for the exception and there is an encapsulated
exception then the message of that exception, if it exists will be
returned. Else the name of the encapsulated exception will be
returned.

@return The error message.
"
      end

      operation 12049154 "getException"
	public return_type class_ref 132226 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual exception (if any) that caused this exception to
be raised.

@return The encapsulated exception, or null if there is none.
"
      end

      operation 12049282 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "use the exception chaining mechanism of JDK1.4
"
      end
    end

    class 1425538 "FactoryFinder"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Implements pluggable Parsers.</p>

<p>This class is duplicated for each JAXP subpackage so keep it in
sync.  It is package private for secure class loading.</p>

@author Santiago.PericasGeertsen@sun.com
@author Huizhe.Wang@oracle.com
"
      classrelation 4785410 // DEFAULT_PACKAGE (<unidirectional association>)
	relation 4785410 --->
	  a role_name "DEFAULT_PACKAGE" init_value " \"com.sun.org.apache.xerces.internal\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4785410 // DEFAULT_PACKAGE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2624130 "debug"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Internal debug flag.

"
      end

      classrelation 4785538 // cacheProps (<unidirectional association>)
	relation 4785538 --->
	  a role_name "cacheProps" init_value " new Properties()" class_relation const_relation private
	    comment "
Cache for properties in java.home/lib/jaxp.properties

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4785538 // cacheProps (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      attribute 2624258 "firstTime"
	class_attribute volatile package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating if properties from java.home/lib/jaxp.properties
have been cached.

"
      end

      classrelation 4785666 // ss (<unidirectional association>)
	relation 4785666 --->
	  a role_name "ss" init_value " new SecuritySupport()" class_relation const_relation private
	    comment "
Security support class use to check access control before
getting certain system resources.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4785666 // ss (<unidirectional association>)
	  b parent class_ref 1425666 // SecuritySupport
      end

      extra_member 188802 "initialization"
	
	cpp "" ""
	java "  static {
        // Use try/catch block to support applets, which throws
        // SecurityException out of this code.
        try {
            String val = ss.getSystemProperty(\"jaxp.debug\");
            // Allow simply setting the prop to turn on debug
            debug = val != null && !\"false\".equals(val);
        }
        catch (SecurityException se) {
            debug = false;
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 12049410 "dPrint"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12049538 "getProviderClass"
	class_operation private return_type class_ref 130818 // Class
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "cl" type class_ref 129026 // ClassLoader
	  param inout name "doFallback" explicit_type "boolean"
	  param inout name "useBSClsLoader" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to load a class using the class loader supplied. If that fails
and fall back is enabled, the current (i.e. bootstrap) class loader is
tried.

If the class loader supplied is <code>null</code>, first try using the
context class loader followed by the current (i.e. bootstrap) class
loader.

Use bootstrap classLoader if cl = null and useBSClsLoader is true
"
      end

      operation 12049666 "newInstance"
	class_operation package explicit_return_type "T"
	nparams 4
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "className" type class_ref 128130 // String
	  param inout name "cl" type class_ref 129026 // ClassLoader
	  param inout name "doFallback" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 1425410 // FactoryConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a class. Delegates to method
<code>getProviderClass()</code> in order to load the class.

@param type Base class / Service interface  of the factory to
            instantiate.

@param className Name of the concrete class corresponding to the
service provider

@param cl <code>ClassLoader</code> used to load the factory class. If <code>null</code>
current <code>Thread</code>'s context classLoader is used to load the factory class.

@param doFallback True if the current ClassLoader should be tried as
a fallback if the class is not found using cl
"
      end

      operation 12049794 "newInstance"
	class_operation package explicit_return_type "T"
	nparams 5
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "className" type class_ref 128130 // String
	  param inout name "cl" type class_ref 129026 // ClassLoader
	  param inout name "doFallback" explicit_type "boolean"
	  param inout name "useBSClsLoader" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 1425410 // FactoryConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a class. Delegates to method
<code>getProviderClass()</code> in order to load the class.

@param type Base class / Service interface  of the factory to
            instantiate.

@param className Name of the concrete class corresponding to the
service provider

@param cl <code>ClassLoader</code> used to load the factory class. If <code>null</code>
current <code>Thread</code>'s context classLoader is used to load the factory class.

@param doFallback True if the current ClassLoader should be tried as
a fallback if the class is not found using cl

@param useBSClsLoader True if cl=null actually meant bootstrap classLoader. This parameter
is needed since DocumentBuilderFactory/SAXParserFactory defined null as context classLoader.
"
      end

      operation 12049922 "find"
	class_operation package explicit_return_type "T"
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "fallbackClassName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1425410 // FactoryConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the implementation Class object in the specified order.  Main
entry point.
@return Class object of factory, never null

@param type                  Base class / Service interface  of the
                             factory to find.
@param fallbackClassName     Implementation class name, if nothing else
                             is found.  Use null to mean no fallback.

Package private so this code can be shared.
"
      end

      operation 12050050 "findServiceProvider"
	class_operation private explicit_return_type "T"
	nparams 1
	  param in name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to find provider using the ServiceLoader API

@param type Base class / Service interface  of the factory to find.

@return instance of provider class if found or null
"
      end
    end

    class 1425666 "SecuritySupport"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is duplicated for each JAXP subpackage so keep it in sync.
It is package private and therefore is not exposed as part of the JAXP
API.

Security related methods that only work on J2SE 1.2 and newer.
"
      operation 12050434 "getContextClassLoader"
	package return_type class_ref 129026 // ClassLoader
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12050562 "getSystemProperty"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "propName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12050690 "getFileInputStream"
	package return_type class_ref 580226 // FileInputStream
	nparams 1
	  param in name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12050818 "getResourceAsStream"
	package return_type class_ref 146434 // InputStream
	nparams 2
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12050946 "doesFileExist"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 157826 "parsers"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 499586 "DocumentBuilderFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.validation.Schema;
${definition}"
      associated_elems
	class_ref 587650 // DocumentBuilderFactory
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 499842 "DocumentBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.validation.Schema;
import org.w3c.dom.Document;
import org.w3c.dom.DOMImplementation;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 378498 // DocumentBuilder
      end
      comment "Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 500482 "SAXParserFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.validation.Schema;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
${definition}"
      associated_elems
	class_ref 587778 // SAXParserFactory
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 500738 "SAXParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.validation.Schema;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;
${definition}"
      associated_elems
	class_ref 621826 // SAXParser
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1014914 "FactoryConfigurationError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1425410 // FactoryConfigurationError
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1015042 "FactoryFinder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Iterator;
import java.util.Properties;
import java.util.ServiceConfigurationError;
import java.util.ServiceLoader;
${definition}"
      associated_elems
	class_ref 1425538 // FactoryFinder
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1015170 "ParserConfigurationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 379138 // ParserConfigurationException
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1015298 "SecuritySupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.net.*;
import java.io.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1425666 // SecuritySupport
      end
      comment "Copyright (c) 2004, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
