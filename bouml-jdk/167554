format 222
"util" // jdk1.8::com::sun::org::apache::xerces::internal::util
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/util/"
  java_package "com.sun.org.apache.xerces.internal.util"
  classview 160898 "util"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 656898 "ParserConfigurationSettings"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements the basic operations for managing parser
configuration features and properties. This utility class can
be used as a base class for parser configurations or separately
to encapsulate a number of parser settings as a component
manager.
<p>
This class can be constructed with a \"parent\" settings object
(in the form of an <code>XMLComponentManager</code>) that allows
parser configuration settings to be \"chained\" together.

@author Andy Clark, IBM

@version $Id: ParserConfigurationSettings.java,v 1.6 2010-11-01 04:40:14 joehw Exp $
"
      classrelation 1796098 // <realization>
	relation 1796098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1796098 // <realization>
	  b parent class_ref 657026 // XMLComponentManager
      end

      classrelation 1796226 // PARSER_SETTINGS (<unidirectional association>)
	relation 1796226 --->
	  a role_name "PARSER_SETTINGS" init_value "
                        Constants.XERCES_FEATURE_PREFIX + Constants.PARSER_SETTINGS" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1796226 // PARSER_SETTINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1796354 // fRecognizedProperties (<unidirectional association>)
	relation 1796354 --->
	  a role_name "fRecognizedProperties" protected
	    comment " Data

 data
 Recognized properties. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 1796354 // fRecognizedProperties (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 1796482 // fProperties (<unidirectional association>)
	relation 1796482 --->
	  a role_name "fProperties" protected
	    comment " Properties. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 1796482 // fProperties (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1796610 // fRecognizedFeatures (<unidirectional association>)
	relation 1796610 --->
	  a role_name "fRecognizedFeatures" protected
	    comment " Recognized features. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 1796610 // fRecognizedFeatures (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 1796738 // fFeatures (<unidirectional association>)
	relation 1796738 --->
	  a role_name "fFeatures" protected
	    comment " Features. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Boolean> ${name}${value};
"
	    classrelation_ref 1796738 // fFeatures (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1796866 // fParentSettings (<unidirectional association>)
	relation 1796866 --->
	  a role_name "fParentSettings" protected
	    comment " Parent parser configuration settings. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1796866 // fParentSettings (<unidirectional association>)
	  b parent class_ref 657026 // XMLComponentManager
      end

      operation 4272770 "ParserConfigurationSettings"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default Constructor. "
      end

      operation 4272898 "ParserConfigurationSettings"
	public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 657026 // XMLComponentManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs a parser configuration settings object with a
parent settings object.
"
      end

      operation 4273026 "addRecognizedFeatures"
	public explicit_return_type "void"
	nparams 1
	  param inout name "featureIds" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(XMLComponentManager)

 XMLParserConfiguration methods


Allows a parser to add parser specific features to be recognized
and managed by the parser configuration.

@param featureIds An array of the additional feature identifiers
                  to be recognized.
"
      end

      operation 4273154 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addRecognizedFeatures(String[])

Set the state of a feature.

Set the state of any feature in a SAX2 parser.  The parser
might not recognize the feature, and if it does recognize
it, it might not be able to fulfill the request.

@param featureId The unique identifier (URI) of the feature.
@param state The requested state of the feature (true or false).

@exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the
           requested feature is not known.
"
      end

      operation 4273282 "addRecognizedProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propertyIds" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setFeature(String,boolean)

Allows a parser to add parser specific properties to be recognized
and managed by the parser configuration.

@param propertyIds An array of the additional property identifiers
                   to be recognized.
"
      end

      operation 4273410 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addRecognizedProperties(String[])

setProperty

@param propertyId
@param value
@exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the
           requested feature is not known.
"
      end

      operation 4273538 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setProperty(String,Object)

 XMLComponentManager methods


Returns the state of a feature.

@param featureId The feature identifier.
@return true if the feature is supported

@throws XMLConfigurationException Thrown for configuration error.
                                  In general, components should
                                  only throw this exception if
                                  it is <strong>really</strong>
                                  a critical error.
"
      end

      operation 4273666 "getFeature"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "defaultValue" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFeature(String):boolean"
      end

      operation 4273794 "getFeatureState"
	public return_type class_ref 657282 // FeatureState
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4273922 "getProperty"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a property.

@param propertyId The property identifier.
@return the value of the property

@throws XMLConfigurationException Thrown for configuration error.
                                  In general, components should
                                  only throw this exception if
                                  it is <strong>really</strong>
                                  a critical error.
"
      end

      operation 4274050 "getProperty"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "defaultValue" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getProperty(String):Object"
      end

      operation 4274178 "getPropertyState"
	public return_type class_ref 657410 // PropertyState
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4274306 "checkFeature"
	protected return_type class_ref 657282 // FeatureState
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Check a feature. If feature is known and supported, this method simply
returns. Otherwise, the appropriate exception is thrown.

@param featureId The unique identifier (URI) of the feature.

@exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the
           requested feature is not known.
"
      end

      operation 4274434 "checkProperty"
	protected return_type class_ref 657410 // PropertyState
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkFeature(String)

Check a property. If the property is known and supported, this method
simply returns. Otherwise, the appropriate exception is thrown.

@param propertyId The unique identifier (URI) of the property
                  being set.
@exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the
           requested feature is not known.
"
      end
    end

    class 657282 "FeatureState"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2192258 // status (<unidirectional association>)
	relation 2192258 --->
	  a role_name "status" const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192258 // status (<unidirectional association>)
	  b parent class_ref 735106 // Status
      end

      attribute 1102978 "state"
	const_attribute public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2192386 // SET_ENABLED (<unidirectional association>)
	relation 2192386 --->
	  a role_name "SET_ENABLED" init_value " new FeatureState(Status.SET, true)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192386 // SET_ENABLED (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      classrelation 2192514 // SET_DISABLED (<unidirectional association>)
	relation 2192514 --->
	  a role_name "SET_DISABLED" init_value " new FeatureState(Status.SET, false)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192514 // SET_DISABLED (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      classrelation 2192642 // UNKNOWN (<unidirectional association>)
	relation 2192642 --->
	  a role_name "UNKNOWN" init_value " new FeatureState(Status.UNKNOWN, false)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192642 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      classrelation 2192770 // RECOGNIZED (<unidirectional association>)
	relation 2192770 --->
	  a role_name "RECOGNIZED" init_value " new FeatureState(Status.RECOGNIZED, false)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192770 // RECOGNIZED (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      classrelation 2192898 // NOT_SUPPORTED (<unidirectional association>)
	relation 2192898 --->
	  a role_name "NOT_SUPPORTED" init_value " new FeatureState(Status.NOT_SUPPORTED, false)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192898 // NOT_SUPPORTED (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      classrelation 2193026 // NOT_RECOGNIZED (<unidirectional association>)
	relation 2193026 --->
	  a role_name "NOT_RECOGNIZED" init_value " new FeatureState(Status.NOT_RECOGNIZED, false)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2193026 // NOT_RECOGNIZED (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      classrelation 2193154 // NOT_ALLOWED (<unidirectional association>)
	relation 2193154 --->
	  a role_name "NOT_ALLOWED" init_value " new FeatureState(Status.NOT_ALLOWED, false)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2193154 // NOT_ALLOWED (<unidirectional association>)
	  b parent class_ref 657282 // FeatureState
      end

      operation 5061634 "FeatureState"
	public explicit_return_type ""
	nparams 2
	  param inout name "status" type class_ref 735106 // Status
	  param inout name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5061762 "of"
	class_operation public return_type class_ref 657282 // FeatureState
	nparams 1
	  param inout name "status" type class_ref 735106 // Status
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5061890 "is"
	class_operation public return_type class_ref 657282 // FeatureState
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5062018 "isExceptional"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 657410 "PropertyState"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2194946 // status (<unidirectional association>)
	relation 2194946 --->
	  a role_name "status" const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2194946 // status (<unidirectional association>)
	  b parent class_ref 735106 // Status
      end

      classrelation 2195074 // state (<unidirectional association>)
	relation 2195074 --->
	  a role_name "state" const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2195074 // state (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2195202 // UNKNOWN (<unidirectional association>)
	relation 2195202 --->
	  a role_name "UNKNOWN" init_value " new PropertyState(Status.UNKNOWN, null)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2195202 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 657410 // PropertyState
      end

      classrelation 2195330 // RECOGNIZED (<unidirectional association>)
	relation 2195330 --->
	  a role_name "RECOGNIZED" init_value " new PropertyState(Status.RECOGNIZED, null)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2195330 // RECOGNIZED (<unidirectional association>)
	  b parent class_ref 657410 // PropertyState
      end

      classrelation 2195458 // NOT_SUPPORTED (<unidirectional association>)
	relation 2195458 --->
	  a role_name "NOT_SUPPORTED" init_value " new PropertyState(Status.NOT_SUPPORTED, null)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2195458 // NOT_SUPPORTED (<unidirectional association>)
	  b parent class_ref 657410 // PropertyState
      end

      classrelation 2195586 // NOT_RECOGNIZED (<unidirectional association>)
	relation 2195586 --->
	  a role_name "NOT_RECOGNIZED" init_value " new PropertyState(Status.NOT_RECOGNIZED, null)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2195586 // NOT_RECOGNIZED (<unidirectional association>)
	  b parent class_ref 657410 // PropertyState
      end

      classrelation 2195714 // NOT_ALLOWED (<unidirectional association>)
	relation 2195714 --->
	  a role_name "NOT_ALLOWED" init_value " new PropertyState(Status.NOT_ALLOWED, null)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2195714 // NOT_ALLOWED (<unidirectional association>)
	  b parent class_ref 657410 // PropertyState
      end

      operation 5069698 "PropertyState"
	public explicit_return_type ""
	nparams 2
	  param inout name "status" type class_ref 735106 // Status
	  param inout name "state" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5069826 "of"
	class_operation public return_type class_ref 657410 // PropertyState
	nparams 1
	  param inout name "status" type class_ref 735106 // Status
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5069954 "is"
	class_operation public return_type class_ref 657410 // PropertyState
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5070082 "isExceptional"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 658690 "SymbolTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is a symbol table implementation that guarantees that
strings used as identifiers are unique references. Multiple calls
to <code>addSymbol</code> will always return the same string
reference.
<p>
The symbol table performs the same task as <code>String.intern()</code>
with the following differences:
<ul>
 <li>
  A new string object does not need to be created in order to
  retrieve a unique reference. Symbols can be added by using
  a series of characters in a character array.
 </li>
 <li>
  Users of the symbol table can provide their own symbol hashing
  implementation. For example, a simple string hashing algorithm
  may fail to produce a balanced set of hashcodes for symbols
  that are <em>mostly</em> unique. Strings with similar leading
  characters are especially prone to this poor hashing behavior.
 </li>
</ul>

@see SymbolHash

@author Andy Clark

"
      attribute 1104642 "TABLE_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 101"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Default table size. 
"
      end

      attribute 1104770 "MAX_HASH_COLLISIONS"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maximum hash collisions per bucket for a table with load factor == 1. 
"
      end

      attribute 1104898 "MULTIPLIERS_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1 << 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1105026 "MULTIPLIERS_MASK"
	class_attribute const_attribute protected explicit_type "int"
	init_value " MULTIPLIERS_SIZE - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 736258 "Entry"
	visibility protected 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2197634 // symbol (<unidirectional association>)
	  relation 2197634 --->
	    a role_name "symbol" const_relation public
	      comment " Data

 Symbol. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2197634 // symbol (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1105922 "characters"
	  const_attribute public explicit_type "char"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Symbol characters. This information is duplicated here for
comparison performance.

"
	end

	classrelation 2197762 // next (<unidirectional association>)
	  relation 2197762 --->
	    a role_name "next" public
	      comment " The next entry. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2197762 // next (<unidirectional association>)
	    b parent class_ref 736258 // Entry
	end

	operation 5078786 "Entry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "symbol" type class_ref 128130 // String
	    param inout name "next" type class_ref 736258 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Constructors


Constructs a new entry from the specified symbol and next entry
reference.
"
	end

	operation 5078914 "Entry"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "ch" explicit_type "char"
	  multiplicity "[]"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "next" type class_ref 736258 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new entry from the specified symbol information and
next entry reference.
"
	end
      end

      classrelation 2197506 // fBuckets (<unidirectional association>)
	relation 2197506 --->
	  a role_name "fBuckets" multiplicity "[]" init_value " null" protected
	    comment " Data

 Buckets. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2197506 // fBuckets (<unidirectional association>)
	  b parent class_ref 736258 // Entry
      end

      attribute 1105154 "fTableSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " actual table size 
"
      end

      attribute 1105282 "fCount"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The total number of entries in the hash table. 
"
      end

      attribute 1105410 "fThreshold"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The table is rehashed when its size exceeds this threshold.  (The
value of this field is (int)(capacity * loadFactor).) 
"
      end

      attribute 1105538 "fLoadFactor"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The load factor for the SymbolTable. 
"
      end

      attribute 1105666 "fCollisionThreshold"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A new hash function is selected and the table is rehashed when
the number of keys in the bucket exceeds this threshold.

"
      end

      attribute 1105794 "fHashMultipliers"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array of randomly selected hash function multipliers or <code>null</code>
if the default String.hashCode() function should be used.

"
      end

      operation 5076738 "SymbolTable"
	public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Constructs a new, empty SymbolTable with the specified initial
capacity and the specified load factor.

@param      initialCapacity   the initial capacity of the SymbolTable.
@param      loadFactor        the load factor of the SymbolTable.
@throws     IllegalArgumentException  if the initial capacity is less
            than zero, or if the load factor is nonpositive.
"
      end

      operation 5076866 "SymbolTable"
	public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty SymbolTable with the specified initial capacity
and default load factor, which is <tt>0.75</tt>.

@param     initialCapacity   the initial capacity of the hashtable.
@throws    IllegalArgumentException if the initial capacity is less
           than zero.
"
      end

      operation 5076994 "SymbolTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty SymbolTable with a default initial capacity (101)
and load factor, which is <tt>0.75</tt>.
"
      end

      operation 5077122 "addSymbol"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


Adds the specified symbol to the symbol table and returns a
reference to the unique symbol. If the symbol already exists,
the previous symbol reference is returned instead, in order
guarantee that symbol references remain unique.

@param symbol The new symbol.
"
      end

      operation 5077250 "addSymbol0"
	private return_type class_ref 128130 // String
	nparams 3
	  param inout name "symbol" type class_ref 128130 // String
	  param in name "bucket" explicit_type "int"
	  param in name "collisionCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol(String):String"
      end

      operation 5077378 "addSymbol"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol0(String,int,int):String

Adds the specified symbol to the symbol table and returns a
reference to the unique symbol. If the symbol already exists,
the previous symbol reference is returned instead, in order
guarantee that symbol references remain unique.

@param buffer The buffer containing the new symbol.
@param offset The offset into the buffer of the new symbol.
@param length The length of the new symbol in the buffer.
"
      end

      operation 5077506 "addSymbol0"
	private return_type class_ref 128130 // String
	nparams 5
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "bucket" explicit_type "int"
	  param in name "collisionCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol(char[],int,int):String"
      end

      operation 5077634 "hash"
	public explicit_return_type "int"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol0(char[],int,int,int,int):String

Returns a hashcode value for the specified symbol. The value
returned by this method must be identical to the value returned
by the <code>hash(char[],int,int)</code> method when called
with the character array that comprises the symbol string.

@param symbol The symbol to hash.
"
      end

      operation 5077762 "hash0"
	private explicit_return_type "int"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash(String):int"
      end

      operation 5077890 "hash"
	public explicit_return_type "int"
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash0(String):int

Returns a hashcode value for the specified symbol information.
The value returned by this method must be identical to the value
returned by the <code>hash(String)</code> method when called
with the string object created from the symbol information.

@param buffer The character buffer containing the symbol.
@param offset The offset into the character buffer of the start
              of the symbol.
@param length The length of the symbol.
"
      end

      operation 5078018 "hash0"
	private explicit_return_type "int"
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash(char[],int,int):int"
      end

      operation 5078146 "rehash"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash0(char[],int,int):int

Increases the capacity of and internally reorganizes this
SymbolTable, in order to accommodate and access its entries more
efficiently.  This method is called automatically when the
number of keys in the SymbolTable exceeds this hashtable's capacity
and load factor.
"
      end

      operation 5078274 "rebalance"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Randomly selects a new hash function and reorganizes this SymbolTable
in order to more evenly distribute its entries across the table. This
method is called automatically when the number keys in one of the
SymbolTable's buckets exceeds the given collision threshold.
"
      end

      operation 5078402 "rehashCommon"
	private explicit_return_type "void"
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5078530 "containsSymbol"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the symbol table already contains the specified
symbol.

@param symbol The symbol to look for.
"
      end

      operation 5078658 "containsSymbol"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " containsSymbol(String):boolean

Returns true if the symbol table already contains the specified
symbol.

@param buffer The buffer containing the symbol to look for.
@param offset The offset into the buffer.
@param length The length of the symbol in the buffer.
"
      end
    end

    class 659074 "DOMErrorHandlerWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class handles DOM errors .

@see DOMErrorHandler

@author Gopal Sharma, SUN Microsystems Inc.

 REVISIT: current implementations wraps error several times:
          XMLErrorReport.reportError creates XMLParserException (by wrapping all info)
          and goes via switch to send errors.
          DOMErrorHandlerWrapper catches calls, copies info from XMLParserException and
          sends one call back to the application
          I think we can avoid this indirection if we modify XMLErrorReporter. --el"
      classrelation 2189698 // <realization>
	relation 2189698 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2189698 // <realization>
	  b parent class_ref 657922 // XMLErrorHandler
      end

      classrelation 2189826 // <realization>
	relation 2189826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2189826 // <realization>
	  b parent class_ref 662018 // DOMErrorHandler
      end

      classrelation 2189954 // fDomErrorHandler (<unidirectional association>)
	relation 2189954 --->
	  a role_name "fDomErrorHandler" protected
	    comment " It keeps the reference of DOMErrorHandler of application
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2189954 // fDomErrorHandler (<unidirectional association>)
	  b parent class_ref 662018 // DOMErrorHandler
      end

      attribute 1102722 "eStatus"
	package explicit_type "boolean"
	init_value " true "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Error Status
"
      end

      classrelation 2190082 // fOut (<unidirectional association>)
	relation 2190082 --->
	  a role_name "fOut" protected
	    comment " Print writer
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2190082 // fOut (<unidirectional association>)
	  b parent class_ref 195330 // PrintWriter
      end

      classrelation 2190210 // fCurrentNode (<unidirectional association>)
	relation 2190210 --->
	  a role_name "fCurrentNode" public
	    comment " some components may set error node
 @see DOMNormalizer.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2190210 // fCurrentNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 2190338 // fErrorCode (<unidirectional association>)
	relation 2190338 --->
	  a role_name "fErrorCode" init_value " new XMLErrorCode(null, null)" const_relation protected
	    comment " Error code for comparisons. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2190338 // fErrorCode (<unidirectional association>)
	  b parent class_ref 733954 // XMLErrorCode
      end

      classrelation 2190466 // fDOMError (<unidirectional association>)
	relation 2190466 --->
	  a role_name "fDOMError" init_value " new DOMErrorImpl()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2190466 // fDOMError (<unidirectional association>)
	  b parent class_ref 659330 // DOMErrorImpl
      end

      operation 5049986 "DOMErrorHandlerWrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor /"
      end

      operation 5050114 "DOMErrorHandlerWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "domErrorHandler" type class_ref 662018 // DOMErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5050242 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 662018 // DOMErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMErrorHandlerWrapper(DOMErrorHandler domErrorHandler)

 Public methods

 Sets the DOM error handler. "
      end

      operation 5050370 "getErrorHandler"
	public return_type class_ref 662018 // DOMErrorHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setErrorHandler(ErrorHandler)"
      end

      operation 5050498 "warning"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "exception" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getErrorHandler()

 XMLErrorHandler methods


Reports a warning. Warnings are non-fatal and can be safely ignored
by most applications.

@param domain    The domain of the warning. The domain can be any
                 string but is suggested to be a valid URI. The
                 domain can be used to conveniently specify a web
                 site location of the relevent specification or
                 document pertaining to this warning.
@param key       The warning key. This key can be any string and
                 is implementation dependent.
@param exception Exception.

@throws XNIException Thrown to signal that the parser should stop
                     parsing the document.
"
      end

      operation 5050626 "error"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "exception" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " warning(String,String,XMLParseException)

Reports an error. Errors are non-fatal and usually signify that the
document is invalid with respect to its grammar(s).

@param domain    The domain of the error. The domain can be any
                 string but is suggested to be a valid URI. The
                 domain can be used to conveniently specify a web
                 site location of the relevent specification or
                 document pertaining to this error.
@param key       The error key. This key can be any string and
                 is implementation dependent.
@param exception Exception.

@throws XNIException Thrown to signal that the parser should stop
                     parsing the document.
"
      end

      operation 5050754 "fatalError"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "exception" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " error(String,String,XMLParseException)

Report a fatal error. Fatal errors usually occur when the document
is not well-formed and signifies that the parser cannot continue
normal operation.
<p>
<strong>Note:</strong> The error handler should <em>always</em>
throw an <code>XNIException</code> from this method. This exception
can either be the same exception that is passed as a parameter to
the method or a new XNI exception object. If the registered error
handler fails to throw an exception, the continuing operation of
the parser is undetermined.

@param domain    The domain of the fatal error. The domain can be
                 any string but is suggested to be a valid URI. The
                 domain can be used to conveniently specify a web
                 site location of the relevent specification or
                 document pertaining to this fatal error.
@param key       The fatal error key. This key can be any string
                 and is implementation dependent.
@param exception Exception.

@throws XNIException Thrown to signal that the parser should stop
                     parsing the document.
"
      end

      operation 5050882 "handleError"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "error" type class_ref 659458 // DOMError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " fatalError(String,String,XMLParseException)"
      end

      operation 5051010 "printError"
	private explicit_return_type "void"
	nparams 1
	  param inout name "error" type class_ref 659458 // DOMError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Prints the error message. "
      end

      class 734082 "DOMErrorTypeMap"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2190594 // fgDOMErrorTypeTable (<unidirectional association>)
	  relation 2190594 --->
	    a role_name "fgDOMErrorTypeTable" class_relation const_relation private
	      comment " Map for converting internal error codes to DOM error types. *
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<XMLErrorCode, String> ${name}${value};
"
	      classrelation_ref 2190594 // fgDOMErrorTypeTable (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	extra_member 144514 "initialization"
	  
	  cpp "" ""
	  java "  static {
            // initialize error type table: internal error codes (represented by domain and key) need to be mapped to a DOM error type.

            // REVISIT: do well-formedness issues involving XML declaration <?xml ... ?> need to be added to hash table (no XML declaration node in DOM, but Document includes xmlEncoding, xmlStandalone, xmlVersion, etc.

            Map<XMLErrorCode, String> aDOMErrorTypeTable = new HashMap<>();
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInCDSect\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInContent\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"TwoColonsInQName\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ColonNotLegalWithNS\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInProlog\"), \"wf-invalid-character\");  // e.g. in Processing Instruction

            // InvalidCharInXMLDecl omitted because XML declaration is not a DOM Node
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"CDEndInContent\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"CDSectUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"DoctypeNotAllowed\"), \"doctype-not-allowed\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ETagRequired\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ElementUnterminated\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EqRequiredInAttribute\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"OpenQuoteExpected\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"CloseQuoteExpected\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ETagUnterminated\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MarkupNotRecognizedInContent\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"DoctypeIllegalInContent\"), \"doctype-not-allowed\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInAttValue\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInPI\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInInternalSubset\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"QuoteRequiredInAttValue\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"LessthanInAttValue\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"AttributeValueUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PITargetRequired\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"SpaceRequiredInPI\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PIUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ReservedPITarget\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PI_NOT_IN_ONE_ENTITY\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PINotInOneEntity\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EncodingDeclInvalid\"), \"unsupported-encoding\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EncodingByteOrderUnsupported\"), \"unsupported-encoding\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInEntityValue\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInExternalSubset\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInIgnoreSect\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInPublicID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"InvalidCharInSystemID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"SpaceRequiredAfterSYSTEM\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"QuoteRequiredInSystemID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"SystemIDUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"SpaceRequiredAfterPUBLIC\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"QuoteRequiredInPublicID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PublicIDUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PubidCharIllegal\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"SpaceRequiredBetweenPublicAndSystem\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ROOT_ELEMENT_TYPE_IN_DOCTYPEDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node (which follows !DOCTYPE)
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_ROOT_ELEMENT_TYPE_REQUIRED\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"DoctypedeclUnterminated\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PEReferenceWithinMarkup\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_MARKUP_NOT_RECOGNIZED_IN_DTD\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ELEMENT_TYPE_IN_ELEMENTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_ELEMENT_TYPE_REQUIRED_IN_ELEMENTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_CONTENTSPEC_IN_ELEMENTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_CONTENTSPEC_REQUIRED_IN_ELEMENTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ElementDeclUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_OPEN_PAREN_OR_ELEMENT_TYPE_REQUIRED_IN_CHILDREN\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_CLOSE_PAREN_REQUIRED_IN_CHILDREN\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_ELEMENT_TYPE_REQUIRED_IN_MIXED_CONTENT\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_CLOSE_PAREN_REQUIRED_IN_MIXED\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MixedContentUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ELEMENT_TYPE_IN_ATTLISTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_ELEMENT_TYPE_REQUIRED_IN_ATTLISTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ATTRIBUTE_NAME_IN_ATTDEF\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"AttNameRequiredInAttDef\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ATTTYPE_IN_ATTDEF\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"AttTypeRequiredInAttDef\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_DEFAULTDECL_IN_ATTDEF\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_DUPLICATE_ATTRIBUTE_DEFINITION\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_AFTER_NOTATION_IN_NOTATIONTYPE\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_OPEN_PAREN_REQUIRED_IN_NOTATIONTYPE\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_NAME_REQUIRED_IN_NOTATIONTYPE\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"NotationTypeUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_NMTOKEN_REQUIRED_IN_ENUMERATION\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EnumerationUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_DISTINCT_TOKENS_IN_ENUMERATION\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_DISTINCT_NOTATION_IN_ENUMERATION\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_AFTER_FIXED_IN_DEFAULTDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"IncludeSectUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"IgnoreSectUnterminated\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"NameRequiredInPEReference\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"SemicolonRequiredInPEReference\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ENTITY_NAME_IN_ENTITYDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node (which follows !ENTITY)
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_PERCENT_IN_PEDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node (which follows !ENTITY %)
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_ENTITY_NAME_IN_PEDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node (which follows !ENTITY %)
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_ENTITY_NAME_REQUIRED_IN_ENTITYDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node (which follows !ENTITY)
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_AFTER_ENTITY_NAME_IN_ENTITYDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_NOTATION_NAME_IN_UNPARSED_ENTITYDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_NDATA_IN_UNPARSED_ENTITYDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_NOTATION_NAME_REQUIRED_FOR_UNPARSED_ENTITYDECL\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EntityDeclUnterminated\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_DUPLICATE_ENTITY_DEFINITION\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ExternalIDRequired\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_PUBIDLITERAL_IN_EXTERNALID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_AFTER_PUBIDLITERAL_IN_EXTERNALID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_SYSTEMLITERAL_IN_EXTERNALID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_URI_FRAGMENT_IN_SYSTEMID\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_BEFORE_NOTATION_NAME_IN_NOTATIONDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node, which follows !NOTATION
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_NOTATION_NAME_REQUIRED_IN_NOTATIONDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node, which follows !NOTATION
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"MSG_SPACE_REQUIRED_AFTER_NOTATION_NAME_IN_NOTATIONDECL\"), \"wf-invalid-character-in-node-name\");  // considered error in name of node, which follows !NOTATION
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ExternalIDorPublicIDRequired\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"NotationDeclUnterminated\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ReferenceToExternalEntity\"), \"wf-invalid-character\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ReferenceToUnparsedEntity\"), \"wf-invalid-character\");

            // REVISIT: do EntityNotDeclared, RecursiveReference, RecursiveGeneralReference, RecursivePEReference belong here?
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EncodingNotSupported\"), \"unsupported-encoding\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EncodingRequired\"), \"unsupported-encoding\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"IllegalQName\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ElementXMLNSPrefix\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"ElementPrefixUnbound\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"AttributePrefixUnbound\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"EmptyPrefixedAttName\"), \"wf-invalid-character-in-node-name\");
            aDOMErrorTypeTable.put(new XMLErrorCode(XMLMessageFormatter.XML_DOMAIN, \"PrefixDeclared\"), \"wf-invalid-character-in-node-name\");

            fgDOMErrorTypeTable = Collections.unmodifiableMap(aDOMErrorTypeTable);
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 5051138 "getDOMErrorType"
	  class_operation public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "error" type class_ref 733954 // XMLErrorCode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5051266 "DOMErrorTypeMap"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 667650 "XMLStringBuffer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "XMLString is a structure used to pass character arrays. However,
XMLStringBuffer is a buffer in which characters can be appended
and extends XMLString so that it can be passed to methods
expecting an XMLString object. This is a safe operation because
it is assumed that any callee will <strong>not</strong> modify
the contents of the XMLString structure.
<p>
The contents of the string are managed by the string buffer. As
characters are appended, the string buffer will grow as needed.
<p>
<strong>Note:</strong> Never set the <code>ch</code>,
<code>offset</code>, and <code>length</code> fields directly.
These fields are managed by the string buffer. In order to reset
the buffer, call <code>clear()</code>.

@author Andy Clark, IBM
@author Eric Ye, IBM

"
      classrelation 2205058 // <generalisation>
	relation 2205058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2205058 // <generalisation>
	  b parent class_ref 661250 // XMLString
      end

      attribute 1115650 "DEFAULT_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Default buffer size (32). 
"
      end

      operation 5118594 "XMLStringBuffer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Data


 Constructors



"
      end

      operation 5118722 "XMLStringBuffer"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()



@param size
"
      end

      operation 5118850 "XMLStringBuffer"
	public explicit_return_type ""
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(int)
 Constructs a string buffer from a char. "
      end

      operation 5118978 "XMLStringBuffer"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(char)
 Constructs a string buffer from a String. "
      end

      operation 5119106 "XMLStringBuffer"
	public explicit_return_type ""
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String)
 Constructs a string buffer from the specified character array. "
      end

      operation 5119234 "XMLStringBuffer"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(char[],int,int)
 Constructs a string buffer from the specified XMLString. "
      end

      operation 5119362 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(XMLString)

 Public methods

 Clears the string buffer. "
      end

      operation 5119490 "append"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "append

@param c
"
      end

      operation 5119618 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " append(char)

append

@param s
"
      end

      operation 5119746 "append"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " append(String)

append

@param ch
@param offset
@param length
"
      end

      operation 5119874 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " append(char[],int,int)

append

@param s
"
      end
    end

    class 668162 "XMLResourceIdentifierImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XMLResourceIdentifierImpl class is an implementation of the
XMLResourceIdentifier interface which defines the location identity
of a resource.

@author Andy Clark

"
      classrelation 1897090 // <realization>
	relation 1897090 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1897090 // <realization>
	  b parent class_ref 661634 // XMLResourceIdentifier
      end

      classrelation 1897218 // fPublicId (<unidirectional association>)
	relation 1897218 --->
	  a role_name "fPublicId" protected
	    comment " Data

 The public identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897218 // fPublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1897346 // fLiteralSystemId (<unidirectional association>)
	relation 1897346 --->
	  a role_name "fLiteralSystemId" protected
	    comment " The literal system identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897346 // fLiteralSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1897474 // fBaseSystemId (<unidirectional association>)
	relation 1897474 --->
	  a role_name "fBaseSystemId" protected
	    comment " The base system identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897474 // fBaseSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1897602 // fExpandedSystemId (<unidirectional association>)
	relation 1897602 --->
	  a role_name "fExpandedSystemId" protected
	    comment " The expanded system identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897602 // fExpandedSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1897730 // fNamespace (<unidirectional association>)
	relation 1897730 --->
	  a role_name "fNamespace" protected
	    comment " The namespace of the resource. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897730 // fNamespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4470146 "XMLResourceIdentifierImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs an empty resource identifier. "
      end

      operation 4470274 "XMLResourceIdentifierImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs a resource identifier.

@param publicId The public identifier.
@param literalSystemId The literal system identifier.
@param baseSystemId The base system identifier.
@param expandedSystemId The expanded system identifier.
"
      end

      operation 4470402 "XMLResourceIdentifierImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String,String)

Constructs a resource identifier.

@param publicId The public identifier.
@param literalSystemId The literal system identifier.
@param baseSystemId The base system identifier.
@param expandedSystemId The expanded system identifier.
@param namespace The namespace.
"
      end

      operation 4470530 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String,String,String)

 Public methods

 Sets the values of the resource identifier. "
      end

      operation 4470658 "setValues"
	public explicit_return_type "void"
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(String,String,String,String)
 Sets the values of the resource identifier. "
      end

      operation 4470786 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(String,String,String,String,String)
 Clears the values. "
      end

      operation 4470914 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear()
 Sets the public identifier. "
      end

      operation 4471042 "setLiteralSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "literalSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setPublicId(String)
 Sets the literal system identifier. "
      end

      operation 4471170 "setBaseSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "baseSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setLiteralSystemId(String)
 Sets the base system identifier. "
      end

      operation 4471298 "setExpandedSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expandedSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setBaseSystemId(String)
 Sets the expanded system identifier. "
      end

      operation 4471426 "setNamespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setExpandedSystemId(String)
 Sets the namespace of the resource. "
      end

      operation 4471554 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNamespace(String)

 XMLResourceIdentifier methods

 Returns the public identifier. "
      end

      operation 4471682 "getLiteralSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPublicId():String
 Returns the literal system identifier. "
      end

      operation 4471810 "getBaseSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLiteralSystemId():String

Returns the base URI against which the literal SystemId is to be resolved.
"
      end

      operation 4471938 "getExpandedSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getBaseSystemId():String
 Returns the expanded system identifier. "
      end

      operation 4472066 "getNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getExpandedSystemId():String
 Returns the namespace of the resource. "
      end

      operation 4472194 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNamespace():String

 Object methods

 Returns a hash code for this object. "
      end

      operation 4472322 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hashCode():int
 Returns a string representation of this object. "
      end
    end

    class 669058 "XMLAttributesIteratorImpl"
      visibility public 
      nactuals 1
      actual class class_ref 132994 // Iterator
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@author  Neeraj Bajaj, Sun Microsystems


Its better to extend the functionality of existing XMLAttributesImpl and also make it of type Iterator.
We can directly  give an object of type iterator from StartElement event. We should also have
Attribute object of type javax.xml.stream.Attribute internally. It would avoid the need of creating
new javax.xml.stream.Attribute object at the later stage.

Should we change XMLAttributes interface to implement Iteraotr ? I think its better avoid touching XNI as
much as possible. - NB.
"
      classrelation 2202626 // <generalisation>
	relation 2202626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2202626 // <generalisation>
	  b parent class_ref 670978 // XMLAttributesImpl
      end

      classrelation 2202754 // <realization>
	relation 2202754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2202754 // <realization>
	  b parent class_ref 132994 // Iterator
      end

      attribute 1113602 "fCurrent"
	protected explicit_type "int"
	init_value " 0 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "pointer to current position.
"
      end

      classrelation 2202882 // fLastReturnedItem (<unidirectional association>)
	relation 2202882 --->
	  a role_name "fLastReturnedItem" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2202882 // fLastReturnedItem (<unidirectional association>)
	  b parent class_ref 736770 // Attribute
      end

      operation 5106306 "XMLAttributesIteratorImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new instance of XMLAttributesIteratorImpl "
      end

      operation 5106434 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5106562 "next"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "hasNext()"
      end

      operation 5106690 "remove"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "next"
      end

      operation 5106818 "removeAllAttributes"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "remove"
      end
    end

    class 670978 "XMLAttributesImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XMLAttributesImpl class is an implementation of the XMLAttributes
interface which defines a collection of attributes for an element.
In the parser, the document source would scan the entire start element
and collect the attributes. The attributes are communicated to the
document handler in the startElement method.
<p>
The attributes are read-write so that subsequent stages in the document
pipeline can modify the values or change the attributes that are
propogated to the next stage.

@see com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler#startElement

@author Andy Clark, IBM
@author Elena Litani, IBM
@author Michael Glavassevich, IBM

@version $Id: XMLAttributesImpl.java,v 1.7 2010/05/07 20:13:09 joehw Exp $
"
      classrelation 2201218 // <realization>
	relation 2201218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2201218 // <realization>
	  b parent class_ref 661506 // XMLAttributes
      end

      attribute 1111810 "TABLE_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 101"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Default table size. 
"
      end

      attribute 1111938 "MAX_HASH_COLLISIONS"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maximum hash collisions per bucket. 
"
      end

      attribute 1112066 "MULTIPLIERS_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1 << 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1112194 "MULTIPLIERS_MASK"
	class_attribute const_attribute protected explicit_type "int"
	init_value " MULTIPLIERS_SIZE - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1112322 "SIZE_LIMIT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Threshold at which an instance is treated
as a large attribute list.

"
      end

      attribute 1112450 "fNamespaces"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 features
 Namespaces. 
"
      end

      attribute 1112578 "fLargeCount"
	protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " data

Usage count for the attribute table view.
Incremented each time all attributes are removed
when the attribute table view is in use.

"
      end

      attribute 1112706 "fLength"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attribute count. 
"
      end

      class 736770 "Attribute"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2201730 // name (<unidirectional association>)
	  relation 2201730 --->
	    a role_name "name" init_value " new QName()" public
	      comment " Data

 basic info
 Name. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2201730 // name (<unidirectional association>)
	    b parent class_ref 661378 // QName
	end

	classrelation 2201858 // type (<unidirectional association>)
	  relation 2201858 --->
	    a role_name "type" public
	      comment " Type. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2201858 // type (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2201986 // value (<unidirectional association>)
	  relation 2201986 --->
	    a role_name "value" public
	      comment " Value. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2201986 // value (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2202114 // xmlValue (<unidirectional association>)
	  relation 2202114 --->
	    a role_name "xmlValue" public
	      comment " This will point to the ScannedEntities buffer.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2202114 // xmlValue (<unidirectional association>)
	    b parent class_ref 661250 // XMLString
	end

	classrelation 2202242 // nonNormalizedValue (<unidirectional association>)
	  relation 2202242 --->
	    a role_name "nonNormalizedValue" public
	      comment " Non-normalized value. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2202242 // nonNormalizedValue (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1113346 "specified"
	  public explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Specified. 
"
	end

	attribute 1113474 "schemaId"
	  public explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Schema ID type. 
"
	end

	classrelation 2202370 // augs (<unidirectional association>)
	  relation 2202370 --->
	    a role_name "augs" init_value " new AugmentationsImpl()" public
	      comment "
Augmentations information for this attribute.
XMLAttributes has no knowledge if any augmentations
were attached to Augmentations.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2202370 // augs (<unidirectional association>)
	    b parent class_ref 661122 // Augmentations
	end

	classrelation 2202498 // next (<unidirectional association>)
	  relation 2202498 --->
	    a role_name "next" public
	      comment " Additional data for attribute table view
 Pointer to the next attribute in the chain. *
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2202498 // next (<unidirectional association>)
	    b parent class_ref 736770 // Attribute
	end
      end

      classrelation 2201474 // fAttributes (<unidirectional association>)
	relation 2201474 --->
	  a role_name "fAttributes" multiplicity "[]" init_value " new Attribute[4]" protected
	    comment " Attribute information. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2201474 // fAttributes (<unidirectional association>)
	  b parent class_ref 736770 // Attribute
      end

      classrelation 2201602 // fAttributeTableView (<unidirectional association>)
	relation 2201602 --->
	  a role_name "fAttributeTableView" multiplicity "[]" protected
	    comment "
Provides an alternate view of the attribute specification.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2201602 // fAttributeTableView (<unidirectional association>)
	  b parent class_ref 736770 // Attribute
      end

      attribute 1112834 "fAttributeTableViewChainState"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tracks whether each chain in the hash table is stale
with respect to the current state of this object.
A chain is stale if its state is not the same as the number
of times the attribute table view has been used.

"
      end

      attribute 1112962 "fTableViewBuckets"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Actual number of buckets in the table view.

"
      end

      attribute 1113090 "fIsTableViewConsistent"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether the table view contains consistent data.

"
      end

      attribute 1113218 "fHashMultipliers"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array of randomly selected hash function multipliers or <code>null</code>
if the default String.hashCode() function should be used.

"
      end

      operation 5098370 "XMLAttributesImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 5098498 "XMLAttributesImpl"
	public explicit_return_type ""
	nparams 1
	  param in name "tableSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param tableSize initial size of table view
"
      end

      operation 5098626 "setNamespaces"
	public explicit_return_type "void"
	nparams 1
	  param inout name "namespaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

 Public methods


Sets whether namespace processing is being performed. This state
is needed to return the correct value from the getLocalName method.

@param namespaces True if namespace processing is turned on.

@see #getLocalName
"
      end

      operation 5098754 "addAttribute"
	public explicit_return_type "int"
	nparams 3
	  param inout name "name" type class_ref 661378 // QName
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNamespaces(boolean)

 XMLAttributes methods


Adds an attribute. The attribute's non-normalized value of the
attribute will have the same value as the attribute value until
set using the <code>setNonNormalizedValue</code> method. Also,
the added attribute will be marked as specified in the XML instance
document unless set otherwise using the <code>setSpecified</code>
method.
<p>
<strong>Note:</strong> If an attribute of the same name already
exists, the old values for the attribute are replaced by the new
values.

@param name  The attribute name.
@param type  The attribute type. The type name is determined by
                 the type specified for this attribute in the DTD.
                 For example: \"CDATA\", \"ID\", \"NMTOKEN\", etc. However,
                 attributes of type enumeration will have the type
                 value specified as the pipe ('|') separated list of
                 the enumeration values prefixed by an open
                 parenthesis and suffixed by a close parenthesis.
                 For example: \"(true|false)\".
@param value The attribute value.

@return Returns the attribute index.

@see #setNonNormalizedValue
@see #setSpecified
"
      end

      operation 5098882 "addAttribute"
	public explicit_return_type "int"
	nparams 4
	  param inout name "name" type class_ref 661378 // QName
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "valueCache" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5099010 "removeAllAttributes"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addAttribute(QName,String,XMLString)

Removes all of the attributes. This method will also remove all
entities associated to the attributes.
"
      end

      operation 5099138 "removeAttributeAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeAllAttributes()

Removes the attribute at the specified index.
<p>
<strong>Note:</strong> This operation changes the indexes of all
attributes following the attribute at the specified index.

@param attrIndex The attribute index.
"
      end

      operation 5099266 "setName"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrName" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeAttributeAt(int)

Sets the name of the attribute at the specified index.

@param attrIndex The attribute index.
@param attrName  The new attribute name.
"
      end

      operation 5099394 "getName"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrName" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setName(int,QName)

Sets the fields in the given QName structure with the values
of the attribute name at the specified index.

@param attrIndex The attribute index.
@param attrName  The attribute name structure to fill in.
"
      end

      operation 5099522 "setType"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getName(int,QName)

Sets the type of the attribute at the specified index.

@param attrIndex The attribute index.
@param attrType  The attribute type. The type name is determined by
                 the type specified for this attribute in the DTD.
                 For example: \"CDATA\", \"ID\", \"NMTOKEN\", etc. However,
                 attributes of type enumeration will have the type
                 value specified as the pipe ('|') separated list of
                 the enumeration values prefixed by an open
                 parenthesis and suffixed by a close parenthesis.
                 For example: \"(true|false)\".
"
      end

      operation 5099650 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setType(int,String)

Sets the value of the attribute at the specified index. This
method will overwrite the non-normalized value of the attribute.

@param attrIndex The attribute index.
@param attrValue The new attribute value.

@see #setNonNormalizedValue
"
      end

      operation 5099778 "setValue"
	public explicit_return_type "void"
	nparams 3
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrValue" type class_ref 128130 // String
	  param inout name "value" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5099906 "setNonNormalizedValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValue(int,String)

Sets the non-normalized value of the attribute at the specified
index.

@param attrIndex The attribute index.
@param attrValue The new non-normalized attribute value.
"
      end

      operation 5100034 "getNonNormalizedValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNonNormalizedValue(int,String)

Returns the non-normalized value of the attribute at the specified
index. If no non-normalized value is set, this method will return
the same value as the <code>getValue(int)</code> method.

@param attrIndex The attribute index.
"
      end

      operation 5100162 "setSpecified"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "specified" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNonNormalizedValue(int):String

Sets whether an attribute is specified in the instance document
or not.

@param attrIndex The attribute index.
@param specified True if the attribute is specified in the instance
                 document.
"
      end

      operation 5100290 "isSpecified"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setSpecified(int,boolean)

Returns true if the attribute is specified in the instance document.

@param attrIndex The attribute index.
"
      end

      operation 5100418 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isSpecified(int):boolean

 AttributeList and Attributes methods


Return the number of attributes in the list.

<p>Once you know the number of attributes, you can iterate
through the list.</p>

@return The number of attributes in the list.
"
      end

      operation 5100546 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLength():int

Look up an attribute's type by index.

<p>The attribute type is one of the strings \"CDATA\", \"ID\",
\"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\",
or \"NOTATION\" (always in upper case).</p>

<p>If the parser has not read a declaration for the attribute,
or if the parser does not report attribute types, then it must
return the value \"CDATA\" as stated in the XML 1.0 Recommentation
(clause 3.3.3, \"Attribute-Value Normalization\").</p>

<p>For an enumerated attribute that is not a notation, the
parser will report the type as \"NMTOKEN\".</p>

@param index The attribute index (zero-based).
@return The attribute's type as a string, or null if the
        index is out of range.
@see #getLength
"
      end

      operation 5100674 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getType(int):String

Look up an attribute's type by XML 1.0 qualified name.

<p>See {@link #getType(int) getType(int)} for a description
of the possible types.</p>

@param qname The XML 1.0 qualified name.
@return The attribute type as a string, or null if the
        attribute is not in the list or if qualified names
        are not available.
"
      end

      operation 5100802 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getType(String):String

Look up an attribute's value by index.

<p>If the attribute value is a list of tokens (IDREFS,
ENTITIES, or NMTOKENS), the tokens will be concatenated
into a single string with each token separated by a
single space.</p>

@param index The attribute index (zero-based).
@return The attribute's value as a string, or null if the
        index is out of range.
@see #getLength
"
      end

      operation 5100930 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getValue(int):String

Look up an attribute's value by XML 1.0 qualified name.

<p>See {@link #getValue(int) getValue(int)} for a description
of the possible values.</p>

@param qname The XML 1.0 qualified name.
@return The attribute value as a string, or null if the
        attribute is not in the list or if qualified names
        are not available.
"
      end

      operation 5101058 "getName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getValue(String):String

 AttributeList methods


Return the name of an attribute in this list (by position).

<p>The names must be unique: the SAX parser shall not include the
same attribute twice.  Attributes without values (those declared
#IMPLIED without a value specified in the start tag) will be
omitted from the list.</p>

<p>If the attribute name has a namespace prefix, the prefix
will still be attached.</p>

@param i The index of the attribute in the list (starting at 0).
@return The name of the indexed attribute, or null
        if the index is out of range.
@see #getLength
"
      end

      operation 5101186 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getName(int):String

 Attributes methods


Look up the index of an attribute by XML 1.0 qualified name.

@param qName The qualified (prefixed) name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5101314 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIndex(String):int

Look up the index of an attribute by Namespace name.

@param uri The Namespace URI, or null if
       the name has no Namespace URI.
@param localName The attribute's local name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5101442 "getIndexByLocalName"
	public explicit_return_type "int"
	nparams 1
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIndex(String,String):int

Look up the index of an attribute by local name only,
ignoring its namespace.

@param localName The attribute's local name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5101570 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIndex(String):int

Look up an attribute's local name by index.

@param index The attribute index (zero-based).
@return The local name, or the empty string if Namespace
        processing is not being performed, or null
        if the index is out of range.
@see #getLength
"
      end

      operation 5101698 "getQName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLocalName(int):String

Look up an attribute's XML 1.0 qualified name by index.

@param index The attribute index (zero-based).
@return The XML 1.0 qualified name, or the empty string
        if none is available, or null if the index
        is out of range.
@see #getLength
"
      end

      operation 5101826 "getQualifiedName"
	public return_type class_ref 661378 // QName
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getQName(int):String"
      end

      operation 5101954 "getType"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by Namespace name.

<p>See {@link #getType(int) getType(int)} for a description
of the possible types.</p>

@param uri The Namespace URI, or null if the
       name has no Namespace URI.
@param localName The local name of the attribute.
@return The attribute type as a string, or null if the
        attribute is not in the list or if Namespace
        processing is not being performed.
"
      end

      operation 5102082 "getIndexFast"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getType(String,String):String

Look up the index of an attribute by XML 1.0 qualified name.
<p>
<strong>Note:</strong>
This method uses reference comparison, and thus should
only be used internally. We cannot use this method in any
code exposed to users as they may not pass in unique strings.

@param qName The qualified (prefixed) name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5102210 "addAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 661378 // QName
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIndexFast(String):int

Adds an attribute. The attribute's non-normalized value of the
attribute will have the same value as the attribute value until
set using the <code>setNonNormalizedValue</code> method. Also,
the added attribute will be marked as specified in the XML instance
document unless set otherwise using the <code>setSpecified</code>
method.
<p>
This method differs from <code>addAttribute</code> in that it
does not check if an attribute of the same name already exists
in the list before adding it. In order to improve performance
of namespace processing, this method allows uniqueness checks
to be deferred until all the namespace information is available
after the entire attribute specification has been read.
<p>
<strong>Caution:</strong> If this method is called it should
not be mixed with calls to <code>addAttribute</code> unless
it has been determined that all the attribute names are unique.

@param name the attribute name
@param type the attribute type
@param value the attribute value

@see #setNonNormalizedValue
@see #setSpecified
@see #checkDuplicatesNS
"
      end

      operation 5102338 "checkDuplicatesNS"
	public return_type class_ref 661378 // QName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks for duplicate expanded names (local part and namespace name
pairs) in the attribute specification. If a duplicate is found its
name is returned.
<p>
This should be called once all the in-scope namespaces for the element
enclosing these attributes is known, and after all the attributes
have gone through namespace binding.

@return the name of a duplicate attribute found in the search,
otherwise null.
"
      end

      operation 5102466 "checkManyDuplicatesNS"
	private return_type class_ref 661378 // QName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5102594 "getIndexFast"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by Namespace name.
<p>
<strong>Note:</strong>
This method uses reference comparison, and thus should
only be used internally. We cannot use this method in any
code exposed to users as they may not pass in unique strings.

@param uri The Namespace URI, or null if
       the name has no Namespace URI.
@param localName The attribute's local name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5102722 "getReportableType"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIndexFast(String,String):int

Returns the value passed in or NMTOKEN if it's an enumerated type.

@param type attribute type
@return the value passed in or NMTOKEN if it's an enumerated type.
"
      end

      operation 5102850 "getTableViewBucket"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in the table view
where the given attribute name would be hashed.

@param qname the attribute name
@return the position in the table view where the given attribute
would be hashed
"
      end

      operation 5102978 "getTableViewBucket"
	protected explicit_return_type "int"
	nparams 2
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in the table view
where the given attribute name would be hashed.

@param localpart the local part of the attribute
@param uri the namespace name of the attribute
@return the position in the table view where the given attribute
would be hashed
"
      end

      operation 5103106 "hash"
	private explicit_return_type "int"
	nparams 1
	  param inout name "localpart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5103234 "hash"
	private explicit_return_type "int"
	nparams 2
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash(String):int"
      end

      operation 5103362 "hash0"
	private explicit_return_type "int"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash(String,String):int"
      end

      operation 5103490 "cleanTableView"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash0(String):int

Purges all elements from the table view.
"
      end

      operation 5103618 "growTableView"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity of the table view.
"
      end

      operation 5103746 "prepareTableView"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepares the table view of the attributes list for use.
"
      end

      operation 5103874 "prepareAndPopulateTableView"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepares the table view of the attributes list for use,
and populates it with the attributes which have been
previously read.
"
      end

      operation 5104002 "prepareAndPopulateTableView"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5104130 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prefix of the attribute at the specified index.

@param index The index of the attribute.
"
      end

      operation 5104258 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPrefix(int):String

Look up an attribute's Namespace URI by index.

@param index The attribute index (zero-based).
@return The Namespace URI
@see #getLength
"
      end

      operation 5104386 "getValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getURI(int):String

Look up an attribute's value by Namespace name and
Local name. If Namespace is null, ignore namespace
comparison. If Namespace is \"\", treat the name as
having no Namespace URI.

<p>See {@link #getValue(int) getValue(int)} for a description
of the possible values.</p>

@param uri The Namespace URI, or null namespaces are ignored.
@param localName The local name of the attribute.
@return The attribute value as a string, or null if the
        attribute is not in the list.
"
      end

      operation 5104514 "getAugmentations"
	public return_type class_ref 661122 // Augmentations
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getValue(String,String):String

Look up an augmentations by Namespace name.

@param uri The Namespace URI, or null if the
@param localName The local name of the attribute.
@return Augmentations
"
      end

      operation 5104642 "getAugmentations"
	public return_type class_ref 661122 // Augmentations
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an augmentation by XML 1.0 qualified name.
<p>

@param qName The XML 1.0 qualified name.

@return Augmentations

"
      end

      operation 5104770 "getAugmentations"
	public return_type class_ref 661122 // Augmentations
	nparams 1
	  param in name "attributeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an augmentations by attributes index.

@param attributeIndex The attribute index.
@return Augmentations
"
      end

      operation 5104898 "setAugmentations"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "augs" type class_ref 661122 // Augmentations
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the augmentations of the attribute at the specified index.

@param attrIndex The attribute index.
@param augs      The augmentations.
"
      end

      operation 5105026 "setURI"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the uri of the attribute at the specified index.

@param attrIndex The attribute index.
@param uri       Namespace uri
"
      end

      operation 5105154 "setSchemaId"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "schemaId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getURI(int,QName)
 Implementation methods"
      end

      operation 5105282 "getSchemaId"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5105410 "getSchemaId"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5105538 "getSchemaId"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getType(String):String"
      end

      operation 5105666 "refresh"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getType(String,String):String
XMLBufferListener methods

This method will be invoked by XMLEntityReader before ScannedEntities buffer
is reloaded.
"
      end

      operation 5105794 "refresh"
	public explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5105922 "prepareAndPopulateTableViewNS"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5106050 "rebalanceTableView"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Randomly selects a new hash function and reorganizes the table view
in order to more evenly distribute its entries. This method is called
automatically when the number of attributes in one bucket exceeds
MAX_HASH_COLLISIONS.
"
      end

      operation 5106178 "rebalanceTableViewNS"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Randomly selects a new hash function and reorganizes the table view
in order to more evenly distribute its entries. This method is called
automatically when the number of attributes in one bucket exceeds
MAX_HASH_COLLISIONS.
"
      end
    end

    class 672258 "URI"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class to represent a Uniform Resource Identifier (URI). This class
is designed to handle the parsing of URIs and provide access to
the various components (scheme, host, port, userinfo, path, query
string and fragment) that may constitute a URI.
<p>
Parsing of a URI specification is done according to the URI
syntax described in
<a href=\"http://www.ietf.org/rfc/rfc2396.txt?number=2396\">RFC 2396</a>,
and amended by
<a href=\"http://www.ietf.org/rfc/rfc2732.txt?number=2732\">RFC 2732</a>.
<p>
Every absolute URI consists of a scheme, followed by a colon (':'),
followed by a scheme-specific part. For URIs that follow the
\"generic URI\" syntax, the scheme-specific part begins with two
slashes (\"//\") and may be followed by an authority segment (comprised
of user information, host, and port), path segment, query segment
and fragment. Note that RFC 2396 no longer specifies the use of the
parameters segment and excludes the \"user:password\" syntax as part of
the authority segment. If \"user:password\" appears in a URI, the entire
user/password string is stored as userinfo.
<p>
For URIs that do not follow the \"generic URI\" syntax (e.g. mailto),
the entire scheme-specific part is treated as the \"path\" portion
of the URI.
<p>
Note that, unlike the java.net.URL class, this class does not provide
any built-in network access functionality nor does it provide any
scheme-specific functionality (for example, it does not know a
default port for a specific scheme). Rather, it only knows the
grammar and basic set of operations that can be applied to a URI.


********************************************************************"
      class 672386 "MalformedURIException"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2200194 // <generalisation>
	  relation 2200194 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2200194 // <generalisation>
	    b parent class_ref 146818 // IOException
	end

	attribute 1108098 "serialVersionUID"
	  class_attribute const_attribute package explicit_type "long"
	  init_value " -6695054834342951930L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Serialization version. 
"
	end

	operation 5088770 "MalformedURIException"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>MalformedURIException</code> with no specified
detail message.
****************************************************************"
	end

	operation 5088898 "MalformedURIException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "p_msg" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>MalformedURIException</code> with the
specified detail message.

@param p_msg the detail message.
****************************************************************"
	end
      end

      classrelation 2200066 // <realization>
	relation 2200066 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2200066 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1108226 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1601921774685357214L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      attribute 1108354 "fgLookupTable"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[128]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1108482 "RESERVED_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Character Classes

 reserved characters ;/?:@&=+$,[] 
RFC 2732 added '[' and ']' as reserved characters
"
      end

      attribute 1108610 "MARK_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " URI punctuation mark characters: -_.!~*'() - these, combined with
alphanumerics, constitute the \"unreserved\" characters 
"
      end

      attribute 1108738 "SCHEME_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " scheme can be composed of alphanumerics and these characters: +-. 
"
      end

      attribute 1108866 "USERINFO_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " userinfo can be composed of unreserved, escaped and these
characters: ;:&=+$, 
"
      end

      attribute 1108994 "ASCII_ALPHA_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ASCII letter characters 
"
      end

      attribute 1109122 "ASCII_DIGIT_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ASCII digit characters 
"
      end

      attribute 1109250 "ASCII_HEX_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ASCII hex characters 
"
      end

      attribute 1109378 "PATH_CHARACTERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Path characters 
"
      end

      attribute 1109506 "MASK_ALPHA_NUMERIC"
	class_attribute const_attribute private explicit_type "int"
	init_value " ASCII_ALPHA_CHARACTERS | ASCII_DIGIT_CHARACTERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask for alpha-numeric characters 
"
      end

      attribute 1109634 "MASK_UNRESERVED_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " MASK_ALPHA_NUMERIC | MARK_CHARACTERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask for unreserved characters 
"
      end

      attribute 1109762 "MASK_URI_CHARACTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " MASK_UNRESERVED_MASK | RESERVED_CHARACTERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask for URI allowable characters except for % 
"
      end

      attribute 1109890 "MASK_SCHEME_CHARACTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " MASK_ALPHA_NUMERIC | SCHEME_CHARACTERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask for scheme characters 
"
      end

      attribute 1110018 "MASK_USERINFO_CHARACTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " MASK_UNRESERVED_MASK | USERINFO_CHARACTERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask for userinfo characters 
"
      end

      attribute 1110146 "MASK_PATH_CHARACTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " MASK_UNRESERVED_MASK | PATH_CHARACTERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask for path characters 
"
      end

      extra_member 144898 "initialization"
	
	cpp "" ""
	java "  static {
      // Add ASCII Digits and ASCII Hex Numbers
      for (int i = '0'; i <= '9'; ++i) {
          fgLookupTable[i] |= ASCII_DIGIT_CHARACTERS | ASCII_HEX_CHARACTERS;
      }

      // Add ASCII Letters and ASCII Hex Numbers
      for (int i = 'A'; i <= 'F'; ++i) {
          fgLookupTable[i] |= ASCII_ALPHA_CHARACTERS | ASCII_HEX_CHARACTERS;
          fgLookupTable[i+0x00000020] |= ASCII_ALPHA_CHARACTERS | ASCII_HEX_CHARACTERS;
      }

      // Add ASCII Letters
      for (int i = 'G'; i <= 'Z'; ++i) {
          fgLookupTable[i] |= ASCII_ALPHA_CHARACTERS;
          fgLookupTable[i+0x00000020] |= ASCII_ALPHA_CHARACTERS;
      }

      // Add Reserved Characters
      fgLookupTable[';'] |= RESERVED_CHARACTERS;
      fgLookupTable['/'] |= RESERVED_CHARACTERS;
      fgLookupTable['?'] |= RESERVED_CHARACTERS;
      fgLookupTable[':'] |= RESERVED_CHARACTERS;
      fgLookupTable['@'] |= RESERVED_CHARACTERS;
      fgLookupTable['&'] |= RESERVED_CHARACTERS;
      fgLookupTable['='] |= RESERVED_CHARACTERS;
      fgLookupTable['+'] |= RESERVED_CHARACTERS;
      fgLookupTable['$'] |= RESERVED_CHARACTERS;
      fgLookupTable[','] |= RESERVED_CHARACTERS;
      fgLookupTable['['] |= RESERVED_CHARACTERS;
      fgLookupTable[']'] |= RESERVED_CHARACTERS;

      // Add Mark Characters
      fgLookupTable['-'] |= MARK_CHARACTERS;
      fgLookupTable['_'] |= MARK_CHARACTERS;
      fgLookupTable['.'] |= MARK_CHARACTERS;
      fgLookupTable['!'] |= MARK_CHARACTERS;
      fgLookupTable['~'] |= MARK_CHARACTERS;
      fgLookupTable['*'] |= MARK_CHARACTERS;
      fgLookupTable['\\''] |= MARK_CHARACTERS;
      fgLookupTable['('] |= MARK_CHARACTERS;
      fgLookupTable[')'] |= MARK_CHARACTERS;

      // Add Scheme Characters
      fgLookupTable['+'] |= SCHEME_CHARACTERS;
      fgLookupTable['-'] |= SCHEME_CHARACTERS;
      fgLookupTable['.'] |= SCHEME_CHARACTERS;

      // Add Userinfo Characters
      fgLookupTable[';'] |= USERINFO_CHARACTERS;
      fgLookupTable[':'] |= USERINFO_CHARACTERS;
      fgLookupTable['&'] |= USERINFO_CHARACTERS;
      fgLookupTable['='] |= USERINFO_CHARACTERS;
      fgLookupTable['+'] |= USERINFO_CHARACTERS;
      fgLookupTable['$'] |= USERINFO_CHARACTERS;
      fgLookupTable[','] |= USERINFO_CHARACTERS;

      // Add Path Characters
      fgLookupTable[';'] |= PATH_CHARACTERS;
      fgLookupTable['/'] |= PATH_CHARACTERS;
      fgLookupTable[':'] |= PATH_CHARACTERS;
      fgLookupTable['@'] |= PATH_CHARACTERS;
      fgLookupTable['&'] |= PATH_CHARACTERS;
      fgLookupTable['='] |= PATH_CHARACTERS;
      fgLookupTable['+'] |= PATH_CHARACTERS;
      fgLookupTable['$'] |= PATH_CHARACTERS;
      fgLookupTable[','] |= PATH_CHARACTERS;
  }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2200322 // m_scheme (<unidirectional association>)
	relation 2200322 --->
	  a role_name "m_scheme" init_value " null" private
	    comment " Stores the scheme (usually the protocol) for this URI. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2200322 // m_scheme (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2200450 // m_userinfo (<unidirectional association>)
	relation 2200450 --->
	  a role_name "m_userinfo" init_value " null" private
	    comment " If specified, stores the userinfo for this URI; otherwise null 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2200450 // m_userinfo (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2200578 // m_host (<unidirectional association>)
	relation 2200578 --->
	  a role_name "m_host" init_value " null" private
	    comment " If specified, stores the host for this URI; otherwise null 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2200578 // m_host (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1110274 "m_port"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If specified, stores the port for this URI; otherwise -1 
"
      end

      classrelation 2200706 // m_regAuthority (<unidirectional association>)
	relation 2200706 --->
	  a role_name "m_regAuthority" init_value " null" private
	    comment " If specified, stores the registry based authority for this URI; otherwise -1 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2200706 // m_regAuthority (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2200834 // m_path (<unidirectional association>)
	relation 2200834 --->
	  a role_name "m_path" init_value " null" private
	    comment " If specified, stores the path for this URI; otherwise null 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2200834 // m_path (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2200962 // m_queryString (<unidirectional association>)
	relation 2200962 --->
	  a role_name "m_queryString" init_value " null" private
	    comment " If specified, stores the query string for this URI; otherwise
null.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2200962 // m_queryString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2201090 // m_fragment (<unidirectional association>)
	relation 2201090 --->
	  a role_name "m_fragment" init_value " null" private
	    comment " If specified, stores the fragment for this URI; otherwise null 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2201090 // m_fragment (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1110402 "DEBUG"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5089026 "URI"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new and uninitialized URI.
"
      end

      operation 5089154 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "p_other" type class_ref 672258 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from another URI. All fields for this URI are
set equal to the fields of the URI passed in.

@param p_other the URI to copy (cannot be null)
"
      end

      operation 5089282 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a URI specification string. If the
specification follows the \"generic URI\" syntax, (two slashes
following the first colon), the specification will be parsed
accordingly - setting the scheme, userinfo, host,port, path, query
string and fragment fields as necessary. If the specification does
not follow the \"generic URI\" syntax, the specification is parsed
into a scheme and scheme-specific part (stored as the path) only.

@param p_uriSpec the URI specification string (cannot be null or
                 empty)

@exception MalformedURIException if p_uriSpec violates any syntax
                                  rules
"
      end

      operation 5089410 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_uriSpec" type class_ref 128130 // String
	  param inout name "allowNonAbsoluteURI" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a URI specification string. If the
specification follows the \"generic URI\" syntax, (two slashes
following the first colon), the specification will be parsed
accordingly - setting the scheme, userinfo, host,port, path, query
string and fragment fields as necessary. If the specification does
not follow the \"generic URI\" syntax, the specification is parsed
into a scheme and scheme-specific part (stored as the path) only.
Construct a relative URI if boolean is assigned to \"true\"
and p_uriSpec is not valid absolute URI, instead of throwing an exception.

@param p_uriSpec the URI specification string (cannot be null or
                 empty)
@param allowNonAbsoluteURI true to permit non-absolute URIs,
                           false otherwise.

@exception MalformedURIException if p_uriSpec violates any syntax
                                  rules
"
      end

      operation 5089538 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_base" type class_ref 672258 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a base URI and a URI specification string.
The URI specification string may be a relative URI.

@param p_base the base URI (cannot be null if p_uriSpec is null or
              empty)
@param p_uriSpec the URI specification string (cannot be null or
                 empty if p_base is null)

@exception MalformedURIException if p_uriSpec violates any syntax
                                 rules
"
      end

      operation 5089666 "URI"
	public explicit_return_type ""
	nparams 3
	  param inout name "p_base" type class_ref 672258 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	  param inout name "allowNonAbsoluteURI" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a base URI and a URI specification string.
The URI specification string may be a relative URI.
Construct a relative URI if boolean is assigned to \"true\"
and p_uriSpec is not valid absolute URI and p_base is null
instead of throwing an exception.

@param p_base the base URI (cannot be null if p_uriSpec is null or
              empty)
@param p_uriSpec the URI specification string (cannot be null or
                 empty if p_base is null)
@param allowNonAbsoluteURI true to permit non-absolute URIs,
                           false otherwise.

@exception MalformedURIException if p_uriSpec violates any syntax
                                 rules
"
      end

      operation 5089794 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_schemeSpecificPart" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that does not follow the generic URI syntax.
Only the scheme and scheme-specific part (stored as the path) are
initialized.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_schemeSpecificPart the scheme-specific part (cannot be
                            null or empty)

@exception MalformedURIException if p_scheme violates any
                                 syntax rules
"
      end

      operation 5089922 "URI"
	public explicit_return_type ""
	nparams 5
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_host" type class_ref 128130 // String
	  param inout name "p_path" type class_ref 128130 // String
	  param inout name "p_queryString" type class_ref 128130 // String
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that follows the generic URI syntax from its
component parts. Each component is validated for syntax and some
basic semantic checks are performed as well.  See the individual
setter methods for specifics.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_host the hostname, IPv4 address or IPv6 reference for the URI
@param p_path the URI path - if the path contains '?' or '#',
              then the query string and/or fragment will be
              set from the path; however, if the query and
              fragment are specified both in the path and as
              separate parameters, an exception is thrown
@param p_queryString the URI query string (cannot be specified
                     if path is null)
@param p_fragment the URI fragment (cannot be specified if path
                  is null)

@exception MalformedURIException if any of the parameters violates
                                 syntax rules or semantic rules
"
      end

      operation 5090050 "URI"
	public explicit_return_type ""
	nparams 7
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_userinfo" type class_ref 128130 // String
	  param inout name "p_host" type class_ref 128130 // String
	  param in name "p_port" explicit_type "int"
	  param inout name "p_path" type class_ref 128130 // String
	  param inout name "p_queryString" type class_ref 128130 // String
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that follows the generic URI syntax from its
component parts. Each component is validated for syntax and some
basic semantic checks are performed as well.  See the individual
setter methods for specifics.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_userinfo the URI userinfo (cannot be specified if host
                  is null)
@param p_host the hostname, IPv4 address or IPv6 reference for the URI
@param p_port the URI port (may be -1 for \"unspecified\"; cannot
              be specified if host is null)
@param p_path the URI path - if the path contains '?' or '#',
              then the query string and/or fragment will be
              set from the path; however, if the query and
              fragment are specified both in the path and as
              separate parameters, an exception is thrown
@param p_queryString the URI query string (cannot be specified
                     if path is null)
@param p_fragment the URI fragment (cannot be specified if path
                  is null)

@exception MalformedURIException if any of the parameters violates
                                 syntax rules or semantic rules
"
      end

      operation 5090178 "initialize"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_other" type class_ref 672258 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize all fields of this URI from another URI.

@param p_other the URI to copy (cannot be null)
"
      end

      operation 5090306 "initialize"
	private explicit_return_type "void"
	nparams 3
	  param inout name "p_base" type class_ref 672258 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	  param inout name "allowNonAbsoluteURI" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this URI from a base URI and a URI specification string.
See RFC 2396 Section 4 and Appendix B for specifications on parsing
the URI and Section 5 for specifications on resolving relative URIs
and relative paths.

@param p_base the base URI (may be null if p_uriSpec is an absolute
              URI)
@param p_uriSpec the URI spec string which may be an absolute or
                 relative URI (can only be null/empty if p_base
                 is not null)
@param allowNonAbsoluteURI true to permit non-absolute URIs,
                        in case of relative URI, false otherwise.

@exception MalformedURIException if p_base is null and p_uriSpec
                                 is not an absolute URI or if
                                 p_uriSpec violates syntax rules
"
      end

      operation 5090434 "initialize"
	private explicit_return_type "void"
	nparams 2
	  param inout name "p_base" type class_ref 672258 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this URI from a base URI and a URI specification string.
See RFC 2396 Section 4 and Appendix B for specifications on parsing
the URI and Section 5 for specifications on resolving relative URIs
and relative paths.

@param p_base the base URI (may be null if p_uriSpec is an absolute
              URI)
@param p_uriSpec the URI spec string which may be an absolute or
                 relative URI (can only be null/empty if p_base
                 is not null)

@exception MalformedURIException if p_base is null and p_uriSpec
                                 is not an absolute URI or if
                                 p_uriSpec violates syntax rules
"
      end

      operation 5090562 "absolutize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_base" type class_ref 672258 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolutize URI with given base URI.

@param p_base base URI for absolutization
"
      end

      operation 5090690 "initializeScheme"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the scheme for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@exception MalformedURIException if URI does not have a conformant
                                 scheme
"
      end

      operation 5090818 "initializeAuthority"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the authority (either server or registry based)
for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@return true if the given string matched server or registry
based authority
"
      end

      operation 5090946 "isValidServerBasedAuthority"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "host" type class_ref 128130 // String
	  param in name "port" explicit_type "int"
	  param inout name "userinfo" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the components host, port, and user info
are valid as a server authority.

@param host the host component of authority
@param port the port number component of authority
@param userinfo the user info component of authority

@return true if the given host, port, and userinfo compose
a valid server authority
"
      end

      operation 5091074 "isValidRegistryBasedAuthority"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "authority" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the given string is a registry based authority.

@param authority the authority component of a URI

@return true if the given string is a registry based authority
"
      end

      operation 5091202 "initializePath"
	private explicit_return_type "void"
	nparams 2
	  param inout name "p_uriSpec" type class_ref 128130 // String
	  param in name "p_nStartIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the path for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)
@param p_nStartIndex the index to begin scanning from

@exception MalformedURIException if p_uriSpec violates syntax rules
"
      end

      operation 5091330 "getScheme"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scheme for this URI.

@return the scheme for this URI
"
      end

      operation 5091458 "getSchemeSpecificPart"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scheme-specific part for this URI (everything following the
scheme and the first colon). See RFC 2396 Section 5.2 for spec.

@return the scheme-specific part for this URI
"
      end

      operation 5091586 "getUserinfo"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the userinfo for this URI.

@return the userinfo for this URI (null if not specified).
"
      end

      operation 5091714 "getHost"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the host for this URI.

@return the host for this URI (null if not specified).
"
      end

      operation 5091842 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the port for this URI.

@return the port for this URI (-1 if not specified).
"
      end

      operation 5091970 "getRegBasedAuthority"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the registry based authority for this URI.

@return the registry based authority (null if not specified).
"
      end

      operation 5092098 "getAuthority"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the authority for this URI.

@return the authority
"
      end

      operation 5092226 "getPath"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "p_includeQueryString" explicit_type "boolean"
	  param inout name "p_includeFragment" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for this URI (optionally with the query string and
fragment).

@param p_includeQueryString if true (and query string is not null),
                            then a \"?\" followed by the query string
                            will be appended
@param p_includeFragment if true (and fragment is not null),
                            then a \"#\" followed by the fragment
                            will be appended

@return the path for this URI possibly including the query string
        and fragment
"
      end

      operation 5092354 "getPath"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for this URI. Note that the value returned is the path
only and does not include the query string or fragment.

@return the path for this URI.
"
      end

      operation 5092482 "getQueryString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the query string for this URI.

@return the query string for this URI. Null is returned if there
        was no \"?\" in the URI spec, empty string if there was a
        \"?\" but no query string following it.
"
      end

      operation 5092610 "getFragment"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the fragment for this URI.

@return the fragment for this URI. Null is returned if there
        was no \"#\" in the URI spec, empty string if there was a
        \"#\" but no fragment following it.
"
      end

      operation 5092738 "setScheme"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_scheme" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the scheme for this URI. The scheme is converted to lowercase
before it is set.

@param p_scheme the scheme for this URI (cannot be null)

@exception MalformedURIException if p_scheme is not a conformant
                                 scheme name
"
      end

      operation 5092866 "setUserinfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_userinfo" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the userinfo for this URI. If a non-null value is passed in and
the host value is null, then an exception is thrown.

@param p_userinfo the userinfo for this URI

@exception MalformedURIException if p_userinfo contains invalid
                                 characters
"
      end

      operation 5092994 "setHost"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_host" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the host for this URI. If null is passed in, the userinfo
field is also set to null and the port is set to -1.</p>

<p>Note: This method overwrites registry based authority if it
previously existed in this URI.</p>

@param p_host the host for this URI

@exception MalformedURIException if p_host is not a valid IP
                                 address or DNS hostname.
"
      end

      operation 5093122 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "p_port" explicit_type "int"
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the port for this URI. -1 is used to indicate that the port is
not specified, otherwise valid port numbers are  between 0 and 65535.
If a valid port number is passed in and the host field is null,
an exception is thrown.

@param p_port the port number for this URI

@exception MalformedURIException if p_port is not -1 and not a
                                 valid port number
"
      end

      operation 5093250 "setRegBasedAuthority"
	public explicit_return_type "void"
	nparams 1
	  param inout name "authority" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the registry based authority for this URI.</p>

<p>Note: This method overwrites server based authority
if it previously existed in this URI.</p>

@param authority the registry based authority for this URI

@exception MalformedURIException it authority is not a
well formed registry based authority
"
      end

      operation 5093378 "setPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_path" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the path for this URI. If the supplied path is null, then the
query string and fragment are set to null as well. If the supplied
path includes a query string and/or fragment, these fields will be
parsed and set as well. Note that, for URIs following the \"generic
URI\" syntax, the path specified should start with a slash.
For URIs that do not follow the generic URI syntax, this method
sets the scheme-specific part.

@param p_path the path for this URI (may be null)

@exception MalformedURIException if p_path contains invalid
                                 characters
"
      end

      operation 5093506 "appendPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_addToPath" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append to the end of the path of this URI. If the current path does
not end in a slash and the path to be appended does not begin with
a slash, a slash will be appended to the current path before the
new segment is added. Also, if the current path ends in a slash
and the new segment begins with a slash, the extra slash will be
removed before the new segment is appended.

@param p_addToPath the new segment to be added to the current path

@exception MalformedURIException if p_addToPath contains syntax
                                 errors
"
      end

      operation 5093634 "setQueryString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_queryString" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the query string for this URI. A non-null value is valid only
if this is an URI conforming to the generic URI syntax and
the path value is not null.

@param p_queryString the query string for this URI

@exception MalformedURIException if p_queryString is not null and this
                                 URI does not conform to the generic
                                 URI syntax or if the path is null
"
      end

      operation 5093762 "setFragment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 672386 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the fragment for this URI. A non-null value is valid only
if this is a URI conforming to the generic URI syntax and
the path value is not null.

@param p_fragment the fragment for this URI

@exception MalformedURIException if p_fragment is not null and this
                                 URI does not conform to the generic
                                 URI syntax or if the path is null
"
      end

      operation 5093890 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_test" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Determines if the passed-in Object is equivalent to this URI.

@param p_test the Object to test for equality.

@return true if p_test is a URI with all values equal to this
        URI, false otherwise
"
      end

      operation 5094018 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 5094146 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Get the URI as a string specification. See RFC 2396 Section 5.2.

@return the URI string specification
"
      end

      operation 5094274 "isGenericURI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the indicator as to whether this URI uses the \"generic URI\"
syntax.

@return true if this URI uses the \"generic URI\" syntax, false
        otherwise
"
      end

      operation 5094402 "isAbsoluteURI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this URI represents an absolute URI.

@return true if this URI represents an absolute URI, false
        otherwise
"
      end

      operation 5094530 "isConformantSchemeName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_scheme" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a scheme conforms to the rules for a scheme name.
A scheme is conformant if it starts with an alphanumeric, and
contains only alphanumerics, '+','-' and '.'.

@return true if the scheme is conformant, false otherwise
"
      end

      operation 5094658 "isWellFormedAddress"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "address" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a string is syntactically capable of representing
a valid IPv4 address, IPv6 reference or the domain name of a network host.
A valid IPv4 address consists of four decimal digit groups separated by a
'.'. Each group must consist of one to three digits. See RFC 2732 Section 3,
and RFC 2373 Section 2.2, for the definition of IPv6 references. A hostname
consists of domain labels (each of which must begin and end with an alphanumeric
but may contain '-') separated & by a '.'. See RFC 2396 Section 3.2.2.

@return true if the string is a syntactically valid IPv4 address,
IPv6 reference or hostname
"
      end

      operation 5094786 "isWellFormedIPv4Address"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "address" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Determines whether a string is an IPv4 address as defined by
RFC 2373, and under the further constraint that it must be a 32-bit
address. Though not expressed in the grammar, in order to satisfy
the 32-bit address constraint, each segment of the address cannot
be greater than 255 (8 bits of information).</p>

<p><code>IPv4address = 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT</code></p>

@return true if the string is a syntactically valid IPv4 address
"
      end

      operation 5094914 "isWellFormedIPv6Reference"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "address" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Determines whether a string is an IPv6 reference as defined
by RFC 2732, where IPv6address is defined in RFC 2373. The
IPv6 address is parsed according to Section 2.2 of RFC 2373,
with the additional constraint that the address be composed of
128 bits of information.</p>

<p><code>IPv6reference = \"[\" IPv6address \"]\"</code></p>

<p>Note: The BNF expressed in RFC 2373 Appendix B does not
accurately describe section 2.2, and was in fact removed from
RFC 3513, the successor of RFC 2373.</p>

@return true if the string is a syntactically valid IPv6 reference
"
      end

      operation 5095042 "scanHexSequence"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "address" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "counter" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for isWellFormedIPv6Reference which scans the
hex sequences of an IPv6 address. It returns the index of the
next character to scan in the address, or -1 if the string
cannot match a valid IPv6 address.

@param address the string to be scanned
@param index the beginning index (inclusive)
@param end the ending index (exclusive)
@param counter a counter for the number of 16-bit sections read
in the address

@return the index of the next character to scan, or -1 if the
string cannot match a valid IPv6 address
"
      end

      operation 5095170 "isDigit"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a digit.

@return true if the char is betweeen '0' and '9', false otherwise
"
      end

      operation 5095298 "isHex"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a character is a hexadecimal character.

@return true if the char is betweeen '0' and '9', 'a' and 'f'
        or 'A' and 'F', false otherwise
"
      end

      operation 5095426 "isAlpha"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an alphabetic character: a-z or A-Z

@return true if the char is alphabetic, false otherwise
"
      end

      operation 5095554 "isAlphanum"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an alphanumeric: 0-9, a-z or A-Z

@return true if the char is alphanumeric, false otherwise
"
      end

      operation 5095682 "isReservedCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a character is a reserved character:
';', '/', '?', ':', '@', '&', '=', '+', '$', ',', '[', or ']'

@return true if the string contains any reserved characters
"
      end

      operation 5095810 "isUnreservedCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an unreserved character.

@return true if the char is unreserved, false otherwise
"
      end

      operation 5095938 "isURICharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a URI character (reserved or
unreserved, not including '%' for escaped octets).

@return true if the char is a URI character, false otherwise
"
      end

      operation 5096066 "isSchemeCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a scheme character.

@return true if the char is a scheme character, false otherwise
"
      end

      operation 5096194 "isUserinfoCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a userinfo character.

@return true if the char is a userinfo character, false otherwise
"
      end

      operation 5096322 "isPathCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a path character.

@return true if the char is a path character, false otherwise
"
      end

      operation 5096450 "isURIString"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "p_uric" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a given string contains only URI characters (also
called \"uric\" in RFC 2396). uric consist of all reserved
characters, unreserved characters and escaped characters.

@return true if the string is comprised of uric, false otherwise
"
      end
    end

    class 673026 "MessageFormatter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface provides a generic message formatting mechanism and
is useful for producing messages that must be localed and/or formatted
with replacement text.

@see com.sun.org.apache.xerces.internal.impl.XMLErrorReporter

@author Andy Clark

"
      operation 4562946 "formatMessage"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "key" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 660738 // MissingResourceException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " MessageFormatter methods


Formats a message with the specified arguments using the given
locale information.

@param locale    The locale of the message.
@param key       The message key.
@param arguments The message replacement text arguments. The order
                 of the arguments must match that of the placeholders
                 in the actual message.

@return Returns the formatted message.

@throws MissingResourceException Thrown if the message with the
                                 specified key cannot be found.
"
      end
    end

    class 674178 "NamespaceContextWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Writing a wrapper to re-use most of the namespace functionality
already provided by NamespaceSupport, which implements NamespaceContext
from XNI. It would be good if we can change the XNI NamespaceContext
interface to implement the JAXP NamespaceContext interface.

Note that NamespaceSupport assumes the use of symbols. Since this class
can be exposed to the application, we must intern all Strings before
calling NamespaceSupport methods.

@author  Neeraj Bajaj, Sun Microsystems, inc.
@author Santiago.PericasGeertsen@sun.com

"
      classrelation 2194690 // <realization>
	relation 2194690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2194690 // <realization>
	  b parent class_ref 673794 // NamespaceContext
      end

      classrelation 2194818 // fNamespaceContext (<unidirectional association>)
	relation 2194818 --->
	  a role_name "fNamespaceContext" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2194818 // fNamespaceContext (<unidirectional association>)
	  b parent class_ref 660994 // NamespaceContext
      end

      operation 5068930 "NamespaceContextWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "namespaceContext" type class_ref 702722 // NamespaceSupport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5069058 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5069186 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5069314 "getPrefixes"
	public return_type class_ref 132994 // Iterator
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Namespace doesn't give information giving multiple prefixes for
the same namespaceURI.
"
      end

      operation 5069442 "getNamespaceContext"
	public return_type class_ref 660994 // NamespaceContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method supports all functions in the NamespaceContext utility class
"
      end
    end

    class 679938 "SymbolHash"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is an unsynchronized hash table primary used for String
to Object mapping.
<p>
The hash code uses the same algorithm as SymbolTable class.

@author Elena Litani
@version $Id: SymbolHash.java,v 1.7 2010-11-01 04:40:14 joehw Exp $
"
      attribute 1107202 "TABLE_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 101"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Default table size. 
"
      end

      attribute 1107330 "MAX_HASH_COLLISIONS"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maximum hash collisions per bucket. 
"
      end

      attribute 1107458 "MULTIPLIERS_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1 << 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1107586 "MULTIPLIERS_MASK"
	class_attribute const_attribute protected explicit_type "int"
	init_value " MULTIPLIERS_SIZE - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1107714 "fTableSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Actual table size *
"
      end

      class 736386 "Entry"
	visibility protected 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2198914 // key (<unidirectional association>)
	  relation 2198914 --->
	    a role_name "key" public
	      comment " key/value
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2198914 // key (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 2199042 // value (<unidirectional association>)
	  relation 2199042 --->
	    a role_name "value" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2199042 // value (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 2199170 // next (<unidirectional association>)
	  relation 2199170 --->
	    a role_name "next" public
	      comment " The next entry. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2199170 // next (<unidirectional association>)
	    b parent class_ref 736386 // Entry
	end

	operation 5084674 "Entry"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5084802 "Entry"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	    param inout name "next" type class_ref 736386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5084930 "makeClone"
	  public return_type class_ref 736386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2198786 // fBuckets (<unidirectional association>)
	relation 2198786 --->
	  a role_name "fBuckets" multiplicity "[]" protected
	    comment " Buckets. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2198786 // fBuckets (<unidirectional association>)
	  b parent class_ref 736386 // Entry
      end

      attribute 1107842 "fNum"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of elements. 
"
      end

      attribute 1107970 "fHashMultipliers"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array of randomly selected hash function multipliers or <code>null</code>
if the default String.hashCode() function should be used.

"
      end

      operation 5082754 "SymbolHash"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a key table with the default size. "
      end

      operation 5082882 "SymbolHash"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a key table with a given size.

@param size  the size of the key table.
"
      end

      operation 5083010 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


Adds the key/value mapping to the key table. If the key already exists,
the previous value associated with this key is overwritten by the new
value.

@param key
@param value
"
      end

      operation 5083138 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value associated with the given key.

@param key
@return the value associated with the given key.
"
      end

      operation 5083266 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of key/value pairs stored in this table.

@return the number of key/value pairs stored in this table.
"
      end

      operation 5083394 "getValues"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elements" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add all values to the given array. The array must have enough entry.

@param elements  the array to store the elements
@param from      where to start store element in the array
@return          number of elements copied to the array
"
      end

      operation 5083522 "getEntries"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return key/value pairs of all entries in the map
"
      end

      operation 5083650 "makeClone"
	public return_type class_ref 679938 // SymbolHash
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a clone of this object.
"
      end

      operation 5083778 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all key/value association. This tries to save a bit of GC'ing
by at least keeping the fBuckets array around.
"
      end

      operation 5083906 "search"
	protected return_type class_ref 736386 // Entry
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param in name "bucket" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear():  void"
      end

      operation 5084034 "hash"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode value for the specified key.

@param key The key to hash.
"
      end

      operation 5084162 "hash0"
	private explicit_return_type "int"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash(Object):int"
      end

      operation 5084290 "rehash"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash0(String):int

Increases the capacity of and internally reorganizes this
SymbolHash, in order to accommodate and access its entries more
efficiently.  This method is called automatically when the
number of keys in the SymbolHash exceeds its number of buckets.
"
      end

      operation 5084418 "rebalance"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Randomly selects a new hash function and reorganizes this SymbolHash
in order to more evenly distribute its entries across the table. This
method is called automatically when the number keys in one of the
SymbolHash's buckets exceeds MAX_HASH_COLLISIONS.
"
      end

      operation 5084546 "rehashCommon"
	private explicit_return_type "void"
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 702722 "NamespaceSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Namespace support for XML document handlers. This class doesn't
perform any error checking and assumes that all strings passed
as arguments to methods are unique symbols. The SymbolTable class
can be used for this purpose.

@author Andy Clark, IBM

"
      classrelation 1970562 // <realization>
	relation 1970562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1970562 // <realization>
	  b parent class_ref 660994 // NamespaceContext
      end

      classrelation 1970690 // fNamespace (<unidirectional association>)
	relation 1970690 --->
	  a role_name "fNamespace" multiplicity "[]" init_value " new String[16 * 2]" protected
	    comment " Data


Namespace binding information. This array is composed of a
series of tuples containing the namespace binding information:
&lt;prefix, uri&gt;. The default size can be set to anything
as long as it is a power of 2 greater than 1.

@see #fNamespaceSize
@see #fContext

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1970690 // fNamespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1034370 "fNamespaceSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The top of the namespace information array. 
"
      end

      attribute 1034498 "fContext"
	protected explicit_type "int"
	multiplicity "[]"
	init_value " new int[8]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NOTE: The constructor depends on the initial context size
       being at least 1. -Ac

Context indexes. This array contains indexes into the namespace
information array. The index at the current context is the start
index of declared namespace bindings and runs to the size of the
namespace information array.

@see #fNamespaceSize

"
      end

      attribute 1034626 "fCurrentContext"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current context. 
"
      end

      classrelation 1970818 // fPrefixes (<unidirectional association>)
	relation 1970818 --->
	  a role_name "fPrefixes" multiplicity "[]" init_value " new String[16]" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1970818 // fPrefixes (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4657026 "NamespaceSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4657154 "NamespaceSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 660994 // NamespaceContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs a namespace context object and initializes it with
the prefixes declared in the specified context.
"
      end

      operation 4657282 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(NamespaceContext)

 Public methods


@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#reset()
"
      end

      operation 4657410 "pushContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " reset(SymbolTable)

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#pushContext()
"
      end

      operation 4657538 "popContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " pushContext()

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#popContext()
"
      end

      operation 4657666 "declarePrefix"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " popContext()

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#declarePrefix(String, String)
"
      end

      operation 4657794 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " declarePrefix(String,String):boolean

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#getURI(String)
"
      end

      operation 4657922 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getURI(String):String

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#getPrefix(String)
"
      end

      operation 4658050 "getDeclaredPrefixCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPrefix(String):String

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#getDeclaredPrefixCount()
"
      end

      operation 4658178 "getDeclaredPrefixAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDeclaredPrefixCount():int

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#getDeclaredPrefixAt(int)
"
      end

      operation 4658306 "getPrefixes"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDeclaredPrefixAt(int):String"
      end

      operation 4658434 "getAllPrefixes"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getPrefixes

@see com.sun.org.apache.xerces.internal.xni.NamespaceContext#getAllPrefixes()
"
      end

      operation 4658562 "getPrefixes"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4658690 "containsPrefix"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "non-NamespaceContext methods


Checks whether a binding or unbinding for
the given prefix exists in the context.

@param prefix The prefix to look up.

@return true if the given prefix exists in the context
"
      end

      operation 4658818 "containsPrefixInCurrentContext"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a binding or unbinding for
the given prefix exists in the current context.

@param prefix The prefix to look up.

@return true if the given prefix exists in the current context
"
      end

      class 702850 "IteratorPrefixes"
	visibility protected 
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1970946 // <realization>
	  relation 1970946 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1970946 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	classrelation 1971074 // prefixes (<unidirectional association>)
	  relation 1971074 --->
	    a role_name "prefixes" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1971074 // prefixes (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1034754 "counter"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1034882 "size"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 4658946 "IteratorPrefixes"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "prefixes" type class_ref 128130 // String
	  multiplicity "[]"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor for Prefixes.
"
	end

	operation 4659074 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.util.Enumeration#hasMoreElements()
"
	end

	operation 4659202 "next"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.util.Enumeration#nextElement()
"
	end

	operation 4659330 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4659458 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 702978 "Prefixes"
	visibility protected 
	nactuals 1
	actual class class_ref 185986 // Enumeration
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1971202 // <realization>
	  relation 1971202 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1971202 // <realization>
	    b parent class_ref 185986 // Enumeration
	end

	classrelation 1971330 // prefixes (<unidirectional association>)
	  relation 1971330 --->
	    a role_name "prefixes" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1971330 // prefixes (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1035010 "counter"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1035138 "size"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 4659586 "Prefixes"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "prefixes" type class_ref 128130 // String
	  multiplicity "[]"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor for Prefixes.
"
	end

	operation 4659714 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.util.Enumeration#hasMoreElements()
"
	end

	operation 4659842 "nextElement"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see java.util.Enumeration#nextElement()
"
	end

	operation 4659970 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 704386 "DOMEntityResolverWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class wraps DOM entity resolver to XNI entity resolver.

@see LSResourceResolver

@author Gopal Sharma, SUN MicroSystems Inc.
@author Elena Litani, IBM
@author Ramesh Mandava, Sun Microsystems
"
      classrelation 2189186 // <realization>
	relation 2189186 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2189186 // <realization>
	  b parent class_ref 658434 // XMLEntityResolver
      end

      classrelation 2189314 // XML_TYPE (<unidirectional association>)
	relation 2189314 --->
	  a role_name "XML_TYPE" init_value " \"http://www.w3.org/TR/REC-xml\"" class_relation const_relation private
	    comment " Data

 XML 1.0 type constant according to DOM L3 LS CR spec \"http://www.w3.org/TR/2003/CR-DOM-Level-3-LS-20031107\" 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2189314 // XML_TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2189442 // XSD_TYPE (<unidirectional association>)
	relation 2189442 --->
	  a role_name "XSD_TYPE" init_value " \"http://www.w3.org/2001/XMLSchema\"" class_relation const_relation private
	    comment " XML Schema constant according to DOM L3 LS CR spec \"http://www.w3.org/TR/2003/CR-DOM-Level-3-LS-20031107\" 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2189442 // XSD_TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2189570 // fEntityResolver (<unidirectional association>)
	relation 2189570 --->
	  a role_name "fEntityResolver" protected
	    comment " The DOM entity resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2189570 // fEntityResolver (<unidirectional association>)
	  b parent class_ref 727810 // LSResourceResolver
      end

      operation 5049090 "DOMEntityResolverWrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 5049218 "DOMEntityResolverWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "entityResolver" type class_ref 727810 // LSResourceResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wraps the specified DOM entity resolver. "
      end

      operation 5049346 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityResolver" type class_ref 727810 // LSResourceResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " LSResourceResolver

 Public methods

 Sets the DOM entity resolver. "
      end

      operation 5049474 "getEntityResolver"
	public return_type class_ref 727810 // LSResourceResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEntityResolver(LSResourceResolver)
 Returns the DOM entity resolver. "
      end

      operation 5049602 "resolveEntity"
	public return_type class_ref 657666 // XMLInputSource
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	nexceptions 2
	  exception class_ref 657794 // XNIException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityResolver():LSResourceResolver

 XMLEntityResolver methods


Resolves an external parsed entity. If the entity cannot be
resolved, this method should return null.

@param resourceIdentifier        description of the resource to be revsoved
@throws XNIException Thrown on general error.
@throws IOException  Thrown if resolved entity stream cannot be
                     opened or some other i/o error occurs.
"
      end

      operation 5049730 "getType"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " resolveEntity(String,String,String):XMLInputSource
 Determines the type of resource being resolved *"
      end
    end

    class 705154 "AugmentationsImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides an implementation for Augmentations interface.
Augmentations interface defines a map of additional data that could
be passed along the document pipeline. The information can contain extra
arguments or infoset augmentations, for example PSVI. This additional
information is identified by a String key.
<p>

@author Elena Litani, IBM
"
      classrelation 2187778 // <realization>
	relation 2187778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2187778 // <realization>
	  b parent class_ref 661122 // Augmentations
      end

      class 733186 "AugmentationsItemsContainer"
	abstract visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 5044866 "putItem"
	  abstract public return_type class_ref 129538 // Object
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "item" type class_ref 129538 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5044994 "getItem"
	  abstract public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5045122 "removeItem"
	  abstract public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5045250 "keys"
	  abstract public return_type class_ref 185986 // Enumeration
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5045378 "clear"
	  abstract public explicit_return_type "void"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5045506 "isFull"
	  abstract public explicit_return_type "boolean"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5045634 "expand"
	  abstract public return_type class_ref 733186 // AugmentationsItemsContainer
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2187906 // fAugmentationsContainer (<unidirectional association>)
	relation 2187906 --->
	  a role_name "fAugmentationsContainer" init_value "
                                        new SmallContainer()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2187906 // fAugmentationsContainer (<unidirectional association>)
	  b parent class_ref 733186 // AugmentationsItemsContainer
      end

      operation 5044098 "putItem"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "item" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add additional information identified by a key to the Augmentations structure.

@param key    Identifier, can't be <code>null</code>
@param item   Additional information

@return the previous value of the specified key in the Augmentations strucutre,
        or <code>null</code> if it did not have one.
"
      end

      operation 5044226 "getItem"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get information identified by a key from the Augmentations structure

@param key    Identifier, can't be <code>null</code>

@return the value to which the key is mapped in the Augmentations structure;
        <code>null</code> if the key is not mapped to any value.
"
      end

      operation 5044354 "removeItem"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove additional info from the Augmentations structure

@param key    Identifier, can't be <code>null</code>
"
      end

      operation 5044482 "keys"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the keys in the Augmentations structure

"
      end

      operation 5044610 "removeAllItems"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all objects from the Augmentations structure.
"
      end

      operation 5044738 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 733314 "SmallContainer"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2188034 // <generalisation>
	  relation 2188034 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2188034 // <generalisation>
	    b parent class_ref 733186 // AugmentationsItemsContainer
	end

	attribute 1102338 "SIZE_LIMIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2188162 // fAugmentations (<unidirectional association>)
	  relation 2188162 --->
	    a role_name "fAugmentations" multiplicity "[]" init_value " new Object[SIZE_LIMIT*2]" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2188162 // fAugmentations (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	attribute 1102466 "fNumEntries"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 5045762 "keys"
	  public return_type class_ref 185986 // Enumeration
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5045890 "getItem"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5046018 "putItem"
	  public return_type class_ref 129538 // Object
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "item" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5046146 "removeItem"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5046274 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5046402 "isFull"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5046530 "expand"
	  public return_type class_ref 733186 // AugmentationsItemsContainer
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5046658 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 733442 "SmallContainerKeyEnumeration"
	  visibility package 
	  nactuals 1
	  actual class class_ref 185986 // Enumeration
	    rank 0 explicit_value ""
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 2188290 // <realization>
	    relation 2188290 -_-|>
	      a public
		java "${type}"
		classrelation_ref 2188290 // <realization>
	      b parent class_ref 185986 // Enumeration
	  end

	  classrelation 2188418 // enumArray (<unidirectional association>)
	    relation 2188418 --->
	      a role_name "enumArray" multiplicity "[]" init_value " new Object[fNumEntries]" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
		classrelation_ref 2188418 // enumArray (<unidirectional association>)
	      b parent class_ref 129538 // Object
	  end

	  attribute 1102594 "next"
	    package explicit_type "int"
	    init_value " 0"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 5046786 "SmallContainerKeyEnumeration"
	    package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 5046914 "hasMoreElements"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 5047042 "nextElement"
	    public return_type class_ref 129538 // Object
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 733570 "LargeContainer"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2188546 // <generalisation>
	  relation 2188546 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2188546 // <generalisation>
	    b parent class_ref 733186 // AugmentationsItemsContainer
	end

	classrelation 2188674 // fAugmentations (<unidirectional association>)
	  relation 2188674 --->
	    a role_name "fAugmentations" init_value " new HashMap<>()" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Object> ${name}${value};
"
	      classrelation_ref 2188674 // fAugmentations (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	operation 5047170 "getItem"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5047298 "putItem"
	  public return_type class_ref 129538 // Object
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "item" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5047426 "removeItem"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5047554 "keys"
	  public return_type class_ref 185986 // Enumeration
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5047682 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5047810 "isFull"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5047938 "expand"
	  public return_type class_ref 733186 // AugmentationsItemsContainer
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 5048066 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 705794 "IntStack"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple integer based stack.

moved to com.sun.org.apache.xerces.internal.util by neilg to support the
XPathMatcher.
@author  Andy Clark, IBM

"
      attribute 1103234 "fDepth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Stack depth. 
"
      end

      attribute 1103362 "fData"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stack data. 
"
      end

      operation 5063298 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 Returns the size of the stack. "
      end

      operation 5063426 "push"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Pushes a value onto the stack. "
      end

      operation 5063554 "peek"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Peeks at the top of the stack. "
      end

      operation 5063682 "elementAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "depth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the element at the specified depth in the stack. "
      end

      operation 5063810 "pop"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Pops a value off of the stack. "
      end

      operation 5063938 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clears the stack. "
      end

      operation 5064066 "print"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " debugging
 Prints the stack. "
      end

      operation 5064194 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods

 Ensures capacity. "
      end
    end

    class 708482 "XMLGrammarPoolImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Stores grammars in a pool associated to a specific key. This grammar pool
implementation stores two types of grammars: those keyed by the root element
name, and those keyed by the grammar's target namespace.

This is the default implementation of the GrammarPool interface.
As we move forward, this will become more function-rich and robust.

@author Jeffrey Rodriguez, IBM
@author Andy Clark, IBM
@author Neil Graham, IBM
@author Pavani Mukthipudi, Sun Microsystems
@author Neeraj Bajaj, SUN Microsystems

"
      classrelation 2022018 // <realization>
	relation 2022018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2022018 // <realization>
	  b parent class_ref 662274 // XMLGrammarPool
      end

      attribute 1050242 "TABLE_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Default size. 
"
      end

      class 708610 "Entry"
	visibility protected 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1050754 "hash"
	  public explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2022274 // desc (<unidirectional association>)
	  relation 2022274 --->
	    a role_name "desc" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2022274 // desc (<unidirectional association>)
	    b parent class_ref 674946 // XMLGrammarDescription
	end

	classrelation 2022402 // grammar (<unidirectional association>)
	  relation 2022402 --->
	    a role_name "grammar" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2022402 // grammar (<unidirectional association>)
	    b parent class_ref 674818 // Grammar
	end

	classrelation 2022530 // next (<unidirectional association>)
	  relation 2022530 --->
	    a role_name "next" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2022530 // next (<unidirectional association>)
	    b parent class_ref 708610 // Entry
	end

	operation 4716802 "Entry"
	  protected explicit_return_type ""
	  nparams 4
	    param in name "hash" explicit_type "int"
	    param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	    param inout name "grammar" type class_ref 674818 // Grammar
	    param inout name "next" type class_ref 708610 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4716930 "clear"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " clear this entry; useful to promote garbage collection
 since reduces reference count of objects to be destroyed"
	end
      end

      classrelation 2022146 // fGrammars (<unidirectional association>)
	relation 2022146 --->
	  a role_name "fGrammars" multiplicity "[]" init_value " null" protected
	    comment " Data

 Grammars. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2022146 // fGrammars (<unidirectional association>)
	  b parent class_ref 708610 // Entry
      end

      attribute 1050370 "fPoolIsLocked"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " whether this pool is locked
"
      end

      attribute 1050498 "fGrammarCount"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the number of grammars in the pool
"
      end

      attribute 1050626 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4715010 "XMLGrammarPoolImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a grammar pool with a default number of buckets. "
      end

      operation 4715138 "XMLGrammarPoolImpl"
	public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()
 Constructs a grammar pool with a specified number of buckets. "
      end

      operation 4715266 "retrieveInitialGrammarSet"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "grammarType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLGrammarPool methods

 <p> Retrieve the initial known set of grammars. This method is
called by a validator before the validation starts. The application
can provide an initial set of grammars available to the current
validation attempt. </p>

@param grammarType The type of the grammar, from the
                   <code>com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription</code>
                   interface.
@return            The set of grammars the validator may put in its \"bucket\"
"
      end

      operation 4715394 "cacheGrammars"
	public explicit_return_type "void"
	nparams 2
	  param inout name "grammarType" type class_ref 128130 // String
	  param inout name "grammars" type class_ref 674818 // Grammar
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " retrieveInitialGrammarSet (String): Grammar[]
 <p> Return the final set of grammars that the validator ended up
with. This method is called after the validation finishes. The
application may then choose to cache some of the returned grammars.</p>
<p>In this implementation, we make our choice based on whether this object
is \"locked\"--that is, whether the application has instructed
us not to accept any new grammars.</p>

@param grammarType The type of the grammars being returned;
@param grammars    An array containing the set of grammars being
                   returned; order is not significant.
"
      end

      operation 4715522 "retrieveGrammar"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cacheGrammars(String, Grammar[]);
 <p> This method requests that the application retrieve a grammar
corresponding to the given GrammarIdentifier from its cache.
If it cannot do so it must return null; the parser will then
call the EntityResolver. </p>
<strong>An application must not call its EntityResolver itself
from this method; this may result in infinite recursions.</strong>

This implementation chooses to use the root element name to identify a DTD grammar
and the target namespace to identify a Schema grammar.

@param desc The description of the Grammar being requested.
@return     The Grammar corresponding to this description or null if
            no such Grammar is known.
"
      end

      operation 4715650 "putGrammar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "grammar" type class_ref 674818 // Grammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " retrieveGrammar(XMLGrammarDescription):  Grammar

 Public methods


Puts the specified grammar into the grammar pool and associates it to
its root element name or its target namespace.

@param grammar The Grammar.
"
      end

      operation 4715778 "getGrammar"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " putGrammar(Grammar)

Returns the grammar associated to the specified grammar description.
Currently, the root element name is used as the key for DTD grammars
and the target namespace  is used as the key for Schema grammars.

@param desc The Grammar Description.
"
      end

      operation 4715906 "removeGrammar"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getGrammar(XMLGrammarDescription):Grammar

Removes the grammar associated to the specified grammar description from the
grammar pool and returns the removed grammar. Currently, the root element name
is used as the key for DTD grammars and the target namespace  is used
as the key for Schema grammars.

@param desc The Grammar Description.
@return     The removed grammar.
"
      end

      operation 4716034 "containsGrammar"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeGrammar(XMLGrammarDescription):Grammar

Returns true if the grammar pool contains a grammar associated
to the specified grammar description. Currently, the root element name
is used as the key for DTD grammars and the target namespace  is used
as the key for Schema grammars.

@param desc The Grammar Description.
"
      end

      operation 4716162 "lockPool"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " containsGrammar(XMLGrammarDescription):boolean
 <p> Sets this grammar pool to a \"locked\" state--i.e.,
no new grammars will be added until it is \"unlocked\".
"
      end

      operation 4716290 "unlockPool"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " lockPool()
 <p> Sets this grammar pool to an \"unlocked\" state--i.e.,
new grammars will be added when putGrammar or cacheGrammars
are called.
"
      end

      operation 4716418 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " unlockPool()

<p>This method clears the pool-i.e., removes references
to all the grammars in it.</p>
"
      end

      operation 4716546 "equals"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "desc1" type class_ref 674946 // XMLGrammarDescription
	  param inout name "desc2" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear()

This method checks whether two grammars are the same. Currently, we compare
the root element names for DTD grammars and the target namespaces for Schema grammars.
The application can override this behaviour and add its own logic.

@param desc1 The grammar description
@param desc2 The grammar description of the grammar to be compared to
@return      True if the grammars are equal, otherwise false
"
      end

      operation 4716674 "hashCode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for the given grammar description.

@param desc The grammar description
@return     The hash code value
"
      end
    end

    class 713346 "SAXLocatorWrapper"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A light wrapper around a SAX locator. This is useful
when bridging between SAX and XNI components.</p>

@author Michael Glavassevich, IBM

"
      classrelation 2197122 // <realization>
	relation 2197122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2197122 // <realization>
	  b parent class_ref 660866 // XMLLocator
      end

      classrelation 2197250 // fLocator (<unidirectional association>)
	relation 2197250 --->
	  a role_name "fLocator" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2197250 // fLocator (<unidirectional association>)
	  b parent class_ref 606082 // Locator
      end

      classrelation 2197378 // fLocator2 (<unidirectional association>)
	relation 2197378 --->
	  a role_name "fLocator2" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2197378 // fLocator2 (<unidirectional association>)
	  b parent class_ref 640898 // Locator2
      end

      operation 5074050 "SAXLocatorWrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5074178 "setLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5074306 "getLocator"
	public return_type class_ref 606082 // Locator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5074434 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XMLLocator methods
"
      end

      operation 5074562 "getLiteralSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5074690 "getBaseSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5074818 "getExpandedSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5074946 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5075074 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5075202 "getCharacterOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5075330 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5075458 "getXMLVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 713602 "StAXLocationWrapper"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A light wrapper around a StAX location. This is useful
when bridging between StAX and XNI components.</p>

@author Michael Glavassevich, IBM

@version $Id: StAXLocationWrapper.java,v 1.2 2010-10-26 23:01:13 joehw Exp $
"
      classrelation 2198530 // <realization>
	relation 2198530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2198530 // <realization>
	  b parent class_ref 660866 // XMLLocator
      end

      classrelation 2198658 // fLocation (<unidirectional association>)
	relation 2198658 --->
	  a role_name "fLocation" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2198658 // fLocation (<unidirectional association>)
	  b parent class_ref 641538 // Location
      end

      operation 5081218 "StAXLocationWrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5081346 "setLocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "location" type class_ref 641538 // Location
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5081474 "getLocation"
	public return_type class_ref 641538 // Location
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5081602 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XMLLocator methods
"
      end

      operation 5081730 "getLiteralSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5081858 "getBaseSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5081986 "getExpandedSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5082114 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5082242 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5082370 "getCharacterOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5082498 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5082626 "getXMLVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 713730 "JAXPNamespaceContextWrapper"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A read-only XNI wrapper around a JAXP NamespaceContext.</p>

@author Michael Glavassevich, IBM

@version $Id: JAXPNamespaceContextWrapper.java,v 1.2 2010-10-26 23:01:13 joehw Exp $
"
      classrelation 2193538 // <realization>
	relation 2193538 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2193538 // <realization>
	  b parent class_ref 660994 // NamespaceContext
      end

      classrelation 2193666 // fNamespaceContext (<unidirectional association>)
	relation 2193666 --->
	  a role_name "fNamespaceContext" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2193666 // fNamespaceContext (<unidirectional association>)
	  b parent class_ref 673794 // NamespaceContext
      end

      classrelation 2193794 // fSymbolTable (<unidirectional association>)
	relation 2193794 --->
	  a role_name "fSymbolTable" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2193794 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2193922 // fPrefixes (<unidirectional association>)
	relation 2193922 --->
	  a role_name "fPrefixes" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2193922 // fPrefixes (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 2194050 // fAllPrefixes (<unidirectional association>)
	relation 2194050 --->
	  a role_name "fAllPrefixes" init_value " new Vector()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2194050 // fAllPrefixes (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1103490 "fContext"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[8]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1103618 "fCurrentContext"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5064322 "JAXPNamespaceContextWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5064450 "setNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 673794 // NamespaceContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5064578 "getNamespaceContext"
	public return_type class_ref 673794 // NamespaceContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5064706 "setSymbolTable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5064834 "getSymbolTable"
	public return_type class_ref 658690 // SymbolTable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5064962 "setDeclaredPrefixes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefixes" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065090 "getDeclaredPrefixes"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065218 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NamespaceContext methods
"
      end

      operation 5065346 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065474 "getAllPrefixes"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065602 "pushContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065730 "popContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065858 "declarePrefix"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5065986 "getDeclaredPrefixCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5066114 "getDeclaredPrefixAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5066242 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 717442 "SAXInputSource"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An <code>XMLInputSource</code> analogue to <code>javax.xml.transform.sax.SAXSource</code>.</p>

"
      classrelation 2196738 // <generalisation>
	relation 2196738 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2196738 // <generalisation>
	  b parent class_ref 657666 // XMLInputSource
      end

      classrelation 2196866 // fXMLReader (<unidirectional association>)
	relation 2196866 --->
	  a role_name "fXMLReader" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196866 // fXMLReader (<unidirectional association>)
	  b parent class_ref 606466 // XMLReader
      end

      classrelation 2196994 // fInputSource (<unidirectional association>)
	relation 2196994 --->
	  a role_name "fInputSource" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196994 // fInputSource (<unidirectional association>)
	  b parent class_ref 606594 // InputSource
      end

      operation 5072514 "SAXInputSource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5072642 "SAXInputSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "inputSource" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5072770 "SAXInputSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "reader" type class_ref 606466 // XMLReader
	  param inout name "inputSource" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5072898 "setXMLReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 606466 // XMLReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5073026 "getXMLReader"
	public return_type class_ref 606466 // XMLReader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5073154 "setInputSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputSource" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5073282 "getInputSource"
	public return_type class_ref 606594 // InputSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5073410 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the public identifier.

@param publicId The new public identifier.
"
      end

      operation 5073538 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setPublicId(String)

Sets the system identifier.

@param systemId The new system identifier.
"
      end

      operation 5073666 "setByteStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "byteStream" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setSystemId(String)

Sets the byte stream. If the byte stream is not already opened
when this object is instantiated, then the code that opens the
stream should also set the byte stream on this object. Also, if
the encoding is auto-detected, then the encoding should also be
set on this object.

@param byteStream The new byte stream.
"
      end

      operation 5073794 "setCharacterStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "charStream" type class_ref 407298 // Reader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setByteStream(InputStream)

Sets the character stream. If the character stream is not already
opened when this object is instantiated, then the code that opens
the stream should also set the character stream on this object.
Also, the encoding of the byte stream used by the reader should
also be set on this object, if known.

@param charStream The new character stream.

@see #setEncoding
"
      end

      operation 5073922 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setCharacterStream(Reader)

Sets the encoding of the stream.

@param encoding The new encoding.
"
      end
    end

    class 717570 "DOMInputSource"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An <code>XMLInputSource</code> analogue to <code>javax.xml.transform.dom.DOMSource</code>.</p>

"
      classrelation 2190722 // <generalisation>
	relation 2190722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2190722 // <generalisation>
	  b parent class_ref 657666 // XMLInputSource
      end

      classrelation 2190850 // fNode (<unidirectional association>)
	relation 2190850 --->
	  a role_name "fNode" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2190850 // fNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      operation 5051394 "DOMInputSource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5051522 "DOMInputSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5051650 "DOMInputSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5051778 "getNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5051906 "setNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5052034 "getSystemIdFromNode"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 717698 "StAXInputSource"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An <code>XMLInputSource</code> analogue to <code>javax.xml.transform.stax.StAXSource</code>.</p>

@version $Id: StAXInputSource.java,v 1.2 2010-10-26 23:01:17 joehw Exp $
"
      classrelation 2198146 // <generalisation>
	relation 2198146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2198146 // <generalisation>
	  b parent class_ref 657666 // XMLInputSource
      end

      classrelation 2198274 // fStreamReader (<unidirectional association>)
	relation 2198274 --->
	  a role_name "fStreamReader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2198274 // fStreamReader (<unidirectional association>)
	  b parent class_ref 644610 // XMLStreamReader
      end

      classrelation 2198402 // fEventReader (<unidirectional association>)
	relation 2198402 --->
	  a role_name "fEventReader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2198402 // fEventReader (<unidirectional association>)
	  b parent class_ref 643586 // XMLEventReader
      end

      attribute 1107074 "fConsumeRemainingContent"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5080066 "StAXInputSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 644610 // XMLStreamReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080194 "StAXInputSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 644610 // XMLStreamReader
	  param inout name "consumeRemainingContent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080322 "StAXInputSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 643586 // XMLEventReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080450 "StAXInputSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 643586 // XMLEventReader
	  param inout name "consumeRemainingContent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080578 "getXMLStreamReader"
	public return_type class_ref 644610 // XMLStreamReader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080706 "getXMLEventReader"
	public return_type class_ref 643586 // XMLEventReader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080834 "shouldConsumeRemainingContent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5080962 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5081090 "getEventReaderSystemId"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "reader" type class_ref 643586 // XMLEventReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 718082 "ErrorHandlerWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class wraps a SAX error handler in an XNI error handler.

@see ErrorHandler

@author Andy Clark, IBM

"
      classrelation 2074498 // <realization>
	relation 2074498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2074498 // <realization>
	  b parent class_ref 657922 // XMLErrorHandler
      end

      classrelation 2074626 // fErrorHandler (<unidirectional association>)
	relation 2074626 --->
	  a role_name "fErrorHandler" protected
	    comment " Data

 The SAX error handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2074626 // fErrorHandler (<unidirectional association>)
	  b parent class_ref 618114 // ErrorHandler
      end

      operation 4831490 "ErrorHandlerWrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4831618 "ErrorHandlerWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "errorHandler" type class_ref 618114 // ErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wraps the specified SAX error handler. "
      end

      operation 4831746 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 618114 // ErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(ErrorHandler)

 Public methods

 Sets the SAX error handler. "
      end

      operation 4831874 "getErrorHandler"
	public return_type class_ref 618114 // ErrorHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setErrorHandler(ErrorHandler)
 Returns the SAX error handler. "
      end

      operation 4832002 "warning"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "exception" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getErrorHandler():ErrorHandler

 XMLErrorHandler methods


Reports a warning. Warnings are non-fatal and can be safely ignored
by most applications.

@param domain    The domain of the warning. The domain can be any
                 string but is suggested to be a valid URI. The
                 domain can be used to conveniently specify a web
                 site location of the relevent specification or
                 document pertaining to this warning.
@param key       The warning key. This key can be any string and
                 is implementation dependent.
@param exception Exception.

@throws XNIException Thrown to signal that the parser should stop
                     parsing the document.
"
      end

      operation 4832130 "error"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "exception" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " warning(String,String,XMLParseException)

Reports an error. Errors are non-fatal and usually signify that the
document is invalid with respect to its grammar(s).

@param domain    The domain of the error. The domain can be any
                 string but is suggested to be a valid URI. The
                 domain can be used to conveniently specify a web
                 site location of the relevent specification or
                 document pertaining to this error.
@param key       The error key. This key can be any string and
                 is implementation dependent.
@param exception Exception.

@throws XNIException Thrown to signal that the parser should stop
                     parsing the document.
"
      end

      operation 4832258 "fatalError"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "exception" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " error(String,String,XMLParseException)

Report a fatal error. Fatal errors usually occur when the document
is not well-formed and signifies that the parser cannot continue
normal operation.
<p>
<strong>Note:</strong> The error handler should <em>always</em>
throw an <code>XNIException</code> from this method. This exception
can either be the same exception that is passed as a parameter to
the method or a new XNI exception object. If the registered error
handler fails to throw an exception, the continuing operation of
the parser is undetermined.

@param domain    The domain of the fatal error. The domain can be
                 any string but is suggested to be a valid URI. The
                 domain can be used to conveniently specify a web
                 site location of the relevent specification or
                 document pertaining to this fatal error.
@param key       The fatal error key. This key can be any string
                 and is implementation dependent.
@param exception Exception.

@throws XNIException Thrown to signal that the parser should stop
                     parsing the document.
"
      end

      operation 4832386 "createSAXParseException"
	class_operation protected return_type class_ref 618242 // SAXParseException
	nparams 1
	  param inout name "exception" type class_ref 659842 // XMLParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " fatalError(String,String,XMLParseException)

 Protected methods

 Creates a SAXParseException from an XMLParseException. "
      end

      operation 4832514 "createXMLParseException"
	class_operation protected return_type class_ref 659842 // XMLParseException
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createSAXParseException(XMLParseException):SAXParseException
 Creates an XMLParseException from a SAXParseException. "
      end

      operation 4832642 "createXNIException"
	class_operation protected return_type class_ref 657794 // XNIException
	nparams 1
	  param inout name "exception" type class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createXMLParseException(SAXParseException):XMLParseException
 Creates an XNIException from a SAXException.
NOTE:  care should be taken *not* to call this with a SAXParseException; this will
lose information!!! "
      end
    end

    class 720770 "AttributesProxy"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Wraps {@link XMLAttributes} and makes it look like
{@link AttributeList} and {@link Attributes}.

@author Arnaud Le Hors, IBM
@author Andy Clark, IBM

"
      classrelation 2187394 // <realization>
	relation 2187394 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2187394 // <realization>
	  b parent class_ref 636930 // AttributeList
      end

      classrelation 2187522 // <realization>
	relation 2187522 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2187522 // <realization>
	  b parent class_ref 722562 // Attributes2
      end

      classrelation 2187650 // fAttributes (<unidirectional association>)
	relation 2187650 --->
	  a role_name "fAttributes" private
	    comment " Data

 XML attributes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2187650 // fAttributes (<unidirectional association>)
	  b parent class_ref 661506 // XMLAttributes
      end

      operation 5040642 "AttributesProxy"
	public explicit_return_type ""
	nparams 1
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors
"
      end

      operation 5040770 "setAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 Sets the XML attributes to be wrapped. "
      end

      operation 5040898 "getAttributes"
	public return_type class_ref 661506 // XMLAttributes
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAttributes(XMLAttributes)"
      end

      operation 5041026 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attributes methods
"
      end

      operation 5041154 "getQName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5041282 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5041410 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5041538 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5041666 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5041794 "getType"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5041922 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042050 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042178 "getValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042306 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042434 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042562 "isDeclared"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attributes2 methods
"
      end

      operation 5042690 "isDeclared"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042818 "isDeclared"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5042946 "isSpecified"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5043074 "isSpecified"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5043202 "isSpecified"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5043330 "getName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "AttributeList methods
"
      end
    end

    class 732674 "SynchronizedSymbolTable"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Synchronized symbol table.

This class moved into the util package since it's needed by multiple
other classes (CachingParserPool, XMLGrammarCachingConfiguration).

@author Andy Clark, IBM
"
      classrelation 2199298 // <generalisation>
	relation 2199298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2199298 // <generalisation>
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2199426 // fSymbolTable (<unidirectional association>)
	relation 2199426 --->
	  a role_name "fSymbolTable" protected
	    comment " Data

 Main symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2199426 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      operation 5085058 "SynchronizedSymbolTable"
	public explicit_return_type ""
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a synchronized symbol table. "
      end

      operation 5085186 "SynchronizedSymbolTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(SymbolTable)
 construct synchronized symbol table of default size"
      end

      operation 5085314 "SynchronizedSymbolTable"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init()
 construct synchronized symbol table of given size"
      end

      operation 5085442 "addSymbol"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(int)

 SymbolTable methods


Adds the specified symbol to the symbol table and returns a
reference to the unique symbol. If the symbol already exists,
the previous symbol reference is returned instead, in order
guarantee that symbol references remain unique.

@param symbol The new symbol.
"
      end

      operation 5085570 "addSymbol"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol(String)

Adds the specified symbol to the symbol table and returns a
reference to the unique symbol. If the symbol already exists,
the previous symbol reference is returned instead, in order
guarantee that symbol references remain unique.

@param buffer The buffer containing the new symbol.
@param offset The offset into the buffer of the new symbol.
@param length The length of the new symbol in the buffer.
"
      end

      operation 5085698 "containsSymbol"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol(char[],int,int):String

Returns true if the symbol table already contains the specified
symbol.

@param symbol The symbol to look for.
"
      end

      operation 5085826 "containsSymbol"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " containsSymbol(String):boolean

Returns true if the symbol table already contains the specified
symbol.

@param buffer The buffer containing the symbol to look for.
@param offset The offset into the buffer.
@param length The length of the symbol in the buffer.
"
      end
    end

    class 733698 "DatatypeMessageFormatter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Used to format JAXP 1.3 Datatype API error messages using a specified locale.</p>

@author  Neeraj Bajaj, Sun Microsystems
@version $Id: DatatypeMessageFormatter.java,v 1.6 2010-11-01 04:40:14 joehw Exp $
"
      classrelation 2188802 // BASE_NAME (<unidirectional association>)
	relation 2188802 --->
	  a role_name "BASE_NAME" init_value " \"com.sun.org.apache.xerces.internal.impl.msg.DatatypeMessages\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2188802 // BASE_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5048194 "formatMessage"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "key" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 660738 // MissingResourceException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a message with the specified arguments using the given
locale information.

@param locale    The locale of the message.
@param key       The message key.
@param arguments The message replacement text arguments. The order
                 of the arguments must match that of the placeholders
                 in the actual message.

@return          the formatted message.

@throws MissingResourceException Thrown if the message with the
                                 specified key cannot be found.
"
      end
    end

    class 733826 "DefaultErrorHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default error handler.

@author Andy Clark, IBM

"
      classrelation 2188930 // <realization>
	relation 2188930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2188930 // <realization>
	  b parent class_ref 657922 // XMLErrorHandler
      end

      classrelation 2189058 // fOut (<unidirectional association>)
	relation 2189058 --->
	  a role_name "fOut" protected
	    comment " Data

 Print writer. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2189058 // fOut (<unidirectional association>)
	  b parent class_ref 195330 // PrintWriter
      end

      operation 5048322 "DefaultErrorHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Constructs an error handler that prints error messages to
<code>System.err</code>.
"
      end

      operation 5048450 "DefaultErrorHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs an error handler that prints error messages to the
specified <code>PrintWriter</code.
"
      end

      operation 5048578 "warning"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "ex" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(PrintWriter)

 ErrorHandler methods

 Warning. "
      end

      operation 5048706 "error"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "ex" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " warning(XMLParseException)
 Error. "
      end

      operation 5048834 "fatalError"
	public explicit_return_type "void"
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "ex" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " error(XMLParseException)
 Fatal error. "
      end

      operation 5048962 "printError"
	private explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 128130 // String
	  param inout name "ex" type class_ref 659842 // XMLParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " fatalError(XMLParseException)

 Private methods

 Prints the error message. "
      end
    end

    class 733954 "XMLErrorCode"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A structure that represents an error code, characterized by
a domain and a message key.</p>

@author Naela Nissar, IBM

"
      classrelation 2204546 // fDomain (<unidirectional association>)
	relation 2204546 --->
	  a role_name "fDomain" private
	    comment " Data

 error domain *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2204546 // fDomain (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2204674 // fKey (<unidirectional association>)
	relation 2204674 --->
	  a role_name "fKey" private
	    comment " message key *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2204674 // fKey (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5116546 "XMLErrorCode"
	public explicit_return_type ""
	nparams 2
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs an XMLErrorCode with the given domain and key.</p>

@param domain The error domain.
@param key The key of the error message.
"
      end

      operation 5116674 "setValues"
	public explicit_return_type "void"
	nparams 2
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Convenience method to set the values of an XMLErrorCode.</p>

@param domain The error domain.
@param key The key of the error message.
"
      end

      operation 5116802 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Indicates whether some other object is equal to this XMLErrorCode.</p>

@param obj the object with which to compare.
"
      end

      operation 5116930 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a hash code value for this XMLErrorCode.</p>

@return a hash code value for this XMLErrorCode.
"
      end
    end

    class 734210 "DOMUtil"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Some useful utility methods.
This class was modified in Xerces2 with a view to abstracting as
much as possible away from the representation of the underlying
parsed structure (i.e., the DOM).  This was done so that, if Xerces
ever adopts an in-memory representation more efficient than the DOM
(such as a DTM), we should easily be able to convert our schema
parsing to utilize it.

@version $Id: DOMUtil.java,v 1.7 2010-11-01 04:40:14 joehw Exp $
"
      operation 5052162 "DOMUtil"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 This class cannot be instantiated. "
      end

      operation 5052290 "copyInto"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "src" type class_ref 317570 // Node
	  param inout name "dest" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public static methods


Copies the source tree into the specified place in a destination
tree. The source node and its children are appended as children
of the destination node.
<p>
<em>Note:</em> This is an iterative implementation.
"
      end

      operation 5052418 "getFirstChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " copyInto(Node,Node)
 Finds and returns the first child element node. "
      end

      operation 5052546 "getFirstVisibleChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElement(Node):Element
 Finds and returns the first visible child element node. "
      end

      operation 5052674 "getFirstVisibleChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "hiddenNodes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Node, String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElement(Node):Element
 Finds and returns the first visible child element node. "
      end

      operation 5052802 "getLastChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElement(Node):Element
 Finds and returns the last child element node.
 Overload previous method for non-Xerces node impl.
"
      end

      operation 5052930 "getLastVisibleChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElement(Node):Element
 Finds and returns the last visible child element node. "
      end

      operation 5053058 "getLastVisibleChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "hiddenNodes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Node, String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElement(Node):Element
 Finds and returns the last visible child element node.
 Overload previous method for non-Xerces node impl
"
      end

      operation 5053186 "getNextSiblingElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElement(Node):Element
 Finds and returns the next sibling element node. "
      end

      operation 5053314 "getNextVisibleSiblingElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingElement(Node):Element
 get next visible (un-hidden) node."
      end

      operation 5053442 "getNextVisibleSiblingElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "hiddenNodes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Node, String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingdElement(Node):Element
 get next visible (un-hidden) node, overload previous method for non Xerces node impl"
      end

      operation 5053570 "setHidden"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingdElement(Node):Element
 set this Node as being hidden"
      end

      operation 5053698 "setHidden"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "hiddenNodes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Node, String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setHidden(node):void
 set this Node as being hidden, overloaded method"
      end

      operation 5053826 "setVisible"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setHidden(node):void
 set this Node as being visible"
      end

      operation 5053954 "setVisible"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "hiddenNodes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Node, String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setVisible(node):void
 set this Node as being visible, overloaded method"
      end

      operation 5054082 "isHidden"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setVisible(node):void
 is this node hidden?"
      end

      operation 5054210 "isHidden"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "hiddenNodes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Node, String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isHidden(Node):boolean
 is this node hidden? overloaded method"
      end

      operation 5054338 "getFirstChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isHidden(Node):boolean
 Finds and returns the first child node with the given name. "
      end

      operation 5054466 "getLastChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElement(Node,String):Element
 Finds and returns the last child node with the given name. "
      end

      operation 5054594 "getNextSiblingElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "elemName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElement(Node,String):Element
 Finds and returns the next sibling node with the given name. "
      end

      operation 5054722 "getFirstChildElementNS"
	class_operation public return_type class_ref 648194 // Element
	nparams 3
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingdElement(Node,String):Element
 Finds and returns the first child node with the given qualified name. "
      end

      operation 5054850 "getLastChildElementNS"
	class_operation public return_type class_ref 648194 // Element
	nparams 3
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElementNS(Node,String,String):Element
 Finds and returns the last child node with the given qualified name. "
      end

      operation 5054978 "getNextSiblingElementNS"
	class_operation public return_type class_ref 648194 // Element
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElementNS(Node,String,String):Element
 Finds and returns the next sibling node with the given qualified name. "
      end

      operation 5055106 "getFirstChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemNames" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingdElementNS(Node,String,String):Element
 Finds and returns the first child node with the given name. "
      end

      operation 5055234 "getLastChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemNames" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElement(Node,String[]):Element
 Finds and returns the last child node with the given name. "
      end

      operation 5055362 "getNextSiblingElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "elemNames" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElement(Node,String[]):Element
 Finds and returns the next sibling node with the given name. "
      end

      operation 5055490 "getFirstChildElementNS"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemNames" type class_ref 128130 // String
	multiplicity "[][]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[][] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingdElement(Node,String[]):Element
 Finds and returns the first child node with the given qualified name. "
      end

      operation 5055618 "getLastChildElementNS"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemNames" type class_ref 128130 // String
	multiplicity "[][]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[][] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElementNS(Node,String[][]):Element
 Finds and returns the last child node with the given qualified name. "
      end

      operation 5055746 "getNextSiblingElementNS"
	class_operation public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "elemNames" type class_ref 128130 // String
	multiplicity "[][]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[][] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElementNS(Node,String[][]):Element
 Finds and returns the next sibling node with the given qualified name. "
      end

      operation 5055874 "getFirstChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 4
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingdElementNS(Node,String[][]):Element

Finds and returns the first child node with the given name and
attribute name, value pair.
"
      end

      operation 5056002 "getLastChildElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 4
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "elemName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChildElement(Node,String,String,String):Element

Finds and returns the last child node with the given name and
attribute name, value pair.
"
      end

      operation 5056130 "getNextSiblingElement"
	class_operation public return_type class_ref 648194 // Element
	nparams 4
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "elemName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChildElement(Node,String,String,String):Element

Finds and returns the next sibling node with the given name and
attribute name, value pair. Since only elements have attributes,
the node returned will be of type Node.ELEMENT_NODE.
"
      end

      operation 5056258 "getChildText"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSiblingElement(Node,String,String,String):Element

Returns the concatenated child text of the specified node.
This method only looks at the immediate children of type
<code>Node.TEXT_NODE</code> or the children of any child
node that is of type <code>Node.CDATA_SECTION_NODE</code>
for the concatenation.

@param node The node to look at.
"
      end

      operation 5056386 "getName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getChildText(Node):String
 return the name of this element"
      end

      operation 5056514 "getLocalName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLocalName(Element):  String
 returns local name of this element if not null, otherwise
returns the name of the node
"
      end

      operation 5056642 "getParent"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLocalName(Element):  String"
      end

      operation 5056770 "getDocument"
	class_operation public return_type class_ref 378626 // Document
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getParent(Element):Element
 get the Document of which this Node is a part"
      end

      operation 5056898 "getRoot"
	class_operation public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDocument(Node):Document
 return this Document's root node"
      end

      operation 5057026 "getAttr"
	class_operation public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "elem" type class_ref 648194 // Element
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRoot(Document(:  Element
 some methods for handling attributes:
 return the right attribute node"
      end

      operation 5057154 "getAttrNS"
	class_operation public return_type class_ref 648066 // Attr
	nparams 3
	  param inout name "elem" type class_ref 648194 // Element
	  param inout name "nsUri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttr(Element, String):Attr
 return the right attribute node"
      end

      operation 5057282 "getAttrs"
	class_operation public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttrNS(Element, String):Attr
 get all the attributes for an Element"
      end

      operation 5057410 "getValue"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "attribute" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttrs(Element):  Attr[]
 get attribute's value"
      end

      operation 5057538 "getAttrValue"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elem" type class_ref 648194 // Element
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getValue(Attr):String
 It is noteworthy that, because of the way the DOM specs
 work, the next two methods return the empty string (not
 null!) when the attribute with the specified name does not
 exist on an element.  Beware!
 return the value of the attribute of the given element
 with the given name"
      end

      operation 5057666 "getAttrValueNS"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "elem" type class_ref 648194 // Element
	  param inout name "nsUri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttr(Element, String):Attr
 return the value of the attribute of the given element
 with the given name"
      end

      operation 5057794 "getPrefix"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttrValueNS(Element, String):Attr
 return the prefix"
      end

      operation 5057922 "getNamespaceURI"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return the namespace URI"
      end

      operation 5058050 "getAnnotation"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return annotation"
      end

      operation 5058178 "getSyntheticAnnotation"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return synthetic annotation"
      end

      operation 5058306 "createDOMException"
	class_operation public return_type class_ref 646658 // DOMException
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a DOMException. On J2SE 1.4 and above the cause for the exception will be set.
"
      end

      operation 5058434 "createLSException"
	class_operation public return_type class_ref 730370 // LSException
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an LSException. On J2SE 1.4 and above the cause for the exception will be set.
"
      end

      class 734338 "ThrowableMethods"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2190978 // fgThrowableInitCauseMethod (<unidirectional association>)
	  relation 2190978 --->
	    a role_name "fgThrowableInitCauseMethod" init_value " null" class_relation private
	      comment " Method: java.lang.Throwable.initCause(java.lang.Throwable)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2190978 // fgThrowableInitCauseMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	attribute 1102850 "fgThrowableMethodsAvailable"
	  class_attribute private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Flag indicating whether or not Throwable methods available.
"
	end

	operation 5058562 "ThrowableMethods"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	extra_member 144642 "initialization"
	  
	  cpp "" ""
	  java "  static {
            try {
                fgThrowableInitCauseMethod = Throwable.class.getMethod(\"initCause\", new Class [] {Throwable.class});
                fgThrowableMethodsAvailable = true;
            }
            // ClassNotFoundException, NoSuchMethodException or SecurityException
            // Whatever the case, we cannot use java.lang.Throwable.initCause(java.lang.Throwable).
            catch (Exception exc) {
                fgThrowableInitCauseMethod = null;
                fgThrowableMethodsAvailable = false;
            }
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end
    end

    class 734466 "DraconianErrorHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link ErrorHandler} that throws all errors and fatal errors.

@author
    Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 2191106 // <realization>
	relation 2191106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2191106 // <realization>
	  b parent class_ref 618114 // ErrorHandler
      end

      classrelation 2191234 // theInstance (<unidirectional association>)
	relation 2191234 --->
	  a role_name "theInstance" init_value " new DraconianErrorHandler()" class_relation const_relation public
	    comment "
Use this singleton instance.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2191234 // theInstance (<unidirectional association>)
	  b parent class_ref 618114 // ErrorHandler
      end

      operation 5058690 "DraconianErrorHandler"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5058818 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5058946 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5059074 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 734594 "EncodingMap"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "EncodingMap is a convenience class which handles conversions between
IANA encoding names and Java encoding names, and vice versa. The
encoding names used in XML instance documents <strong>must</strong>
be the IANA encoding names specified or one of the aliases for those names
which IANA defines.
<p>
<TABLE BORDER=\"0\" WIDTH=\"100%\">
 <TR>
     <TD WIDTH=\"33%\">
         <P ALIGN=\"CENTER\"><B>Common Name</B>
     </TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\"><B>Use this name in XML files</B>
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\"><B>Name Type</B>
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\"><B>Xerces converts to this Java Encoder Name</B>
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">8 bit Unicode</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">UTF-8
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">UTF8
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin 1</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-1
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-1
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin 2</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-2
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-2
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin 3</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-3
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-3
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin 4</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-4
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-4
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin Cyrillic</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-5
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-5
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin Arabic</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-6
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-6
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin Greek</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-7
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-7
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin Hebrew</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-8
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-8
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">ISO Latin 5</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ISO-8859-9
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">ISO-8859-9
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: US</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-us
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp037
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Canada</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-ca
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp037
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Netherlands</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-nl
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp037
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Denmark</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-dk
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp277
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Norway</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-no
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp277
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Finland</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-fi
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp278
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Sweden</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-se
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp278
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Italy</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-it
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp280
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Spain, Latin America</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-es
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp284
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Great Britain</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-gb
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp285
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: France</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-fr
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp297
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Arabic</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-ar1
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp420
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Hebrew</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-he
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp424
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Switzerland</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-ch
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp500
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Roece</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-roece
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp870
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Yugoslavia</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-yu
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp870
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Iceland</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-is
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp871
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">EBCDIC: Urdu</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">ebcdic-cp-ar2
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">IANA
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">cp918
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Chinese for PRC, mixed 1/2 byte</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">gb2312
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">GB2312
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Extended Unix Code, packed for Japanese</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">euc-jp
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">eucjis
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Japanese: iso-2022-jp</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">iso-2020-jp
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">JIS
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Japanese: Shift JIS</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">Shift_JIS
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">SJIS
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Chinese: Big5</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">Big5
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">Big5
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Extended Unix Code, packed for Korean</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">euc-kr
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">iso2022kr
     </TD>
 </TR>
 <TR>
     <TD WIDTH=\"33%\">Cyrillic</TD>
     <TD WIDTH=\"15%\">
         <P ALIGN=\"CENTER\">koi8-r
     </TD>
     <TD WIDTH=\"12%\">
         <P ALIGN=\"CENTER\">MIME
     </TD>
     <TD WIDTH=\"31%\">
         <P ALIGN=\"CENTER\">koi8-r
     </TD>
 </TR>
</TABLE>

@author TAMURA Kent, IBM
@author Andy Clark, IBM

"
      classrelation 2191362 // fIANA2JavaMap (<unidirectional association>)
	relation 2191362 --->
	  a role_name "fIANA2JavaMap" class_relation const_relation protected
	    comment " Data

 fIANA2JavaMap 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 2191362 // fIANA2JavaMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2191490 // fJava2IANAMap (<unidirectional association>)
	relation 2191490 --->
	  a role_name "fJava2IANAMap" class_relation const_relation protected
	    comment " fJava2IANAMap 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 2191490 // fJava2IANAMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      extra_member 144770 "initialization"
	
	cpp "" ""
	java "  static {
        Map<String, String> aIANA2JavaMap = new HashMap<>();
        Map<String, String> aJava2IANAMap = new HashMap<>();

        // add IANA to Java encoding mappings.
        aIANA2JavaMap.put(\"BIG5\",            \"Big5\");
        aIANA2JavaMap.put(\"CSBIG5\",            \"Big5\");
        aIANA2JavaMap.put(\"CP037\",    \"CP037\");
        aIANA2JavaMap.put(\"IBM037\",    \"CP037\");
        aIANA2JavaMap.put(\"CSIBM037\",    \"CP037\");
        aIANA2JavaMap.put(\"EBCDIC-CP-US\",    \"CP037\");
        aIANA2JavaMap.put(\"EBCDIC-CP-CA\",    \"CP037\");
        aIANA2JavaMap.put(\"EBCDIC-CP-NL\",    \"CP037\");
        aIANA2JavaMap.put(\"EBCDIC-CP-WT\",    \"CP037\");
        aIANA2JavaMap.put(\"IBM273\",    \"CP273\");
        aIANA2JavaMap.put(\"CP273\",    \"CP273\");
        aIANA2JavaMap.put(\"CSIBM273\",    \"CP273\");
        aIANA2JavaMap.put(\"IBM277\",    \"CP277\");
        aIANA2JavaMap.put(\"CP277\",    \"CP277\");
        aIANA2JavaMap.put(\"CSIBM277\",    \"CP277\");
        aIANA2JavaMap.put(\"EBCDIC-CP-DK\",    \"CP277\");
        aIANA2JavaMap.put(\"EBCDIC-CP-NO\",    \"CP277\");
        aIANA2JavaMap.put(\"IBM278\",    \"CP278\");
        aIANA2JavaMap.put(\"CP278\",    \"CP278\");
        aIANA2JavaMap.put(\"CSIBM278\",    \"CP278\");
        aIANA2JavaMap.put(\"EBCDIC-CP-FI\",    \"CP278\");
        aIANA2JavaMap.put(\"EBCDIC-CP-SE\",    \"CP278\");
        aIANA2JavaMap.put(\"IBM280\",    \"CP280\");
        aIANA2JavaMap.put(\"CP280\",    \"CP280\");
        aIANA2JavaMap.put(\"CSIBM280\",    \"CP280\");
        aIANA2JavaMap.put(\"EBCDIC-CP-IT\",    \"CP280\");
        aIANA2JavaMap.put(\"IBM284\",    \"CP284\");
        aIANA2JavaMap.put(\"CP284\",    \"CP284\");
        aIANA2JavaMap.put(\"CSIBM284\",    \"CP284\");
        aIANA2JavaMap.put(\"EBCDIC-CP-ES\",    \"CP284\");
        aIANA2JavaMap.put(\"EBCDIC-CP-GB\",    \"CP285\");
        aIANA2JavaMap.put(\"IBM285\",    \"CP285\");
        aIANA2JavaMap.put(\"CP285\",    \"CP285\");
        aIANA2JavaMap.put(\"CSIBM285\",    \"CP285\");
        aIANA2JavaMap.put(\"EBCDIC-JP-KANA\",    \"CP290\");
        aIANA2JavaMap.put(\"IBM290\",    \"CP290\");
        aIANA2JavaMap.put(\"CP290\",    \"CP290\");
        aIANA2JavaMap.put(\"CSIBM290\",    \"CP290\");
        aIANA2JavaMap.put(\"EBCDIC-CP-FR\",    \"CP297\");
        aIANA2JavaMap.put(\"IBM297\",    \"CP297\");
        aIANA2JavaMap.put(\"CP297\",    \"CP297\");
        aIANA2JavaMap.put(\"CSIBM297\",    \"CP297\");
        aIANA2JavaMap.put(\"EBCDIC-CP-AR1\",   \"CP420\");
        aIANA2JavaMap.put(\"IBM420\",    \"CP420\");
        aIANA2JavaMap.put(\"CP420\",    \"CP420\");
        aIANA2JavaMap.put(\"CSIBM420\",    \"CP420\");
        aIANA2JavaMap.put(\"EBCDIC-CP-HE\",    \"CP424\");
        aIANA2JavaMap.put(\"IBM424\",    \"CP424\");
        aIANA2JavaMap.put(\"CP424\",    \"CP424\");
        aIANA2JavaMap.put(\"CSIBM424\",    \"CP424\");
        aIANA2JavaMap.put(\"IBM437\",    \"CP437\");
        aIANA2JavaMap.put(\"437\",    \"CP437\");
        aIANA2JavaMap.put(\"CP437\",    \"CP437\");
        aIANA2JavaMap.put(\"CSPC8CODEPAGE437\",    \"CP437\");
        aIANA2JavaMap.put(\"EBCDIC-CP-CH\",    \"CP500\");
        aIANA2JavaMap.put(\"IBM500\",    \"CP500\");
        aIANA2JavaMap.put(\"CP500\",    \"CP500\");
        aIANA2JavaMap.put(\"CSIBM500\",    \"CP500\");
        aIANA2JavaMap.put(\"EBCDIC-CP-CH\",    \"CP500\");
        aIANA2JavaMap.put(\"EBCDIC-CP-BE\",    \"CP500\");
        aIANA2JavaMap.put(\"IBM775\",    \"CP775\");
        aIANA2JavaMap.put(\"CP775\",    \"CP775\");
        aIANA2JavaMap.put(\"CSPC775BALTIC\",    \"CP775\");
        aIANA2JavaMap.put(\"IBM850\",    \"CP850\");
        aIANA2JavaMap.put(\"850\",    \"CP850\");
        aIANA2JavaMap.put(\"CP850\",    \"CP850\");
        aIANA2JavaMap.put(\"CSPC850MULTILINGUAL\",    \"CP850\");
        aIANA2JavaMap.put(\"IBM852\",    \"CP852\");
        aIANA2JavaMap.put(\"852\",    \"CP852\");
        aIANA2JavaMap.put(\"CP852\",    \"CP852\");
        aIANA2JavaMap.put(\"CSPCP852\",    \"CP852\");
        aIANA2JavaMap.put(\"IBM855\",    \"CP855\");
        aIANA2JavaMap.put(\"855\",    \"CP855\");
        aIANA2JavaMap.put(\"CP855\",    \"CP855\");
        aIANA2JavaMap.put(\"CSIBM855\",    \"CP855\");
        aIANA2JavaMap.put(\"IBM857\",    \"CP857\");
        aIANA2JavaMap.put(\"857\",    \"CP857\");
        aIANA2JavaMap.put(\"CP857\",    \"CP857\");
        aIANA2JavaMap.put(\"CSIBM857\",    \"CP857\");
        aIANA2JavaMap.put(\"IBM00858\",    \"CP858\");
        aIANA2JavaMap.put(\"CP00858\",    \"CP858\");
        aIANA2JavaMap.put(\"CCSID00858\",    \"CP858\");
        aIANA2JavaMap.put(\"IBM860\",    \"CP860\");
        aIANA2JavaMap.put(\"860\",    \"CP860\");
        aIANA2JavaMap.put(\"CP860\",    \"CP860\");
        aIANA2JavaMap.put(\"CSIBM860\",    \"CP860\");
        aIANA2JavaMap.put(\"IBM861\",    \"CP861\");
        aIANA2JavaMap.put(\"861\",    \"CP861\");
        aIANA2JavaMap.put(\"CP861\",    \"CP861\");
        aIANA2JavaMap.put(\"CP-IS\",    \"CP861\");
        aIANA2JavaMap.put(\"CSIBM861\",    \"CP861\");
        aIANA2JavaMap.put(\"IBM862\",    \"CP862\");
        aIANA2JavaMap.put(\"862\",    \"CP862\");
        aIANA2JavaMap.put(\"CP862\",    \"CP862\");
        aIANA2JavaMap.put(\"CSPC862LATINHEBREW\",    \"CP862\");
        aIANA2JavaMap.put(\"IBM863\",    \"CP863\");
        aIANA2JavaMap.put(\"863\",    \"CP863\");
        aIANA2JavaMap.put(\"CP863\",    \"CP863\");
        aIANA2JavaMap.put(\"CSIBM863\",    \"CP863\");
        aIANA2JavaMap.put(\"IBM864\",    \"CP864\");
        aIANA2JavaMap.put(\"CP864\",    \"CP864\");
        aIANA2JavaMap.put(\"CSIBM864\",    \"CP864\");
        aIANA2JavaMap.put(\"IBM865\",    \"CP865\");
        aIANA2JavaMap.put(\"865\",    \"CP865\");
        aIANA2JavaMap.put(\"CP865\",    \"CP865\");
        aIANA2JavaMap.put(\"CSIBM865\",    \"CP865\");
        aIANA2JavaMap.put(\"IBM866\",    \"CP866\");
        aIANA2JavaMap.put(\"866\",    \"CP866\");
        aIANA2JavaMap.put(\"CP866\",    \"CP866\");
        aIANA2JavaMap.put(\"CSIBM866\",    \"CP866\");
        aIANA2JavaMap.put(\"IBM868\",    \"CP868\");
        aIANA2JavaMap.put(\"CP868\",    \"CP868\");
        aIANA2JavaMap.put(\"CSIBM868\",    \"CP868\");
        aIANA2JavaMap.put(\"CP-AR\",        \"CP868\");
        aIANA2JavaMap.put(\"IBM869\",    \"CP869\");
        aIANA2JavaMap.put(\"CP869\",    \"CP869\");
        aIANA2JavaMap.put(\"CSIBM869\",    \"CP869\");
        aIANA2JavaMap.put(\"CP-GR\",        \"CP869\");
        aIANA2JavaMap.put(\"IBM870\",    \"CP870\");
        aIANA2JavaMap.put(\"CP870\",    \"CP870\");
        aIANA2JavaMap.put(\"CSIBM870\",    \"CP870\");
        aIANA2JavaMap.put(\"EBCDIC-CP-ROECE\", \"CP870\");
        aIANA2JavaMap.put(\"EBCDIC-CP-YU\",    \"CP870\");
        aIANA2JavaMap.put(\"IBM871\",    \"CP871\");
        aIANA2JavaMap.put(\"CP871\",    \"CP871\");
        aIANA2JavaMap.put(\"CSIBM871\",    \"CP871\");
        aIANA2JavaMap.put(\"EBCDIC-CP-IS\",    \"CP871\");
        aIANA2JavaMap.put(\"IBM918\",    \"CP918\");
        aIANA2JavaMap.put(\"CP918\",    \"CP918\");
        aIANA2JavaMap.put(\"CSIBM918\",    \"CP918\");
        aIANA2JavaMap.put(\"EBCDIC-CP-AR2\",   \"CP918\");
        aIANA2JavaMap.put(\"IBM00924\",    \"CP924\");
        aIANA2JavaMap.put(\"CP00924\",    \"CP924\");
        aIANA2JavaMap.put(\"CCSID00924\",    \"CP924\");
        // is this an error???
        aIANA2JavaMap.put(\"EBCDIC-LATIN9--EURO\",    \"CP924\");
        aIANA2JavaMap.put(\"IBM1026\",    \"CP1026\");
        aIANA2JavaMap.put(\"CP1026\",    \"CP1026\");
        aIANA2JavaMap.put(\"CSIBM1026\",    \"CP1026\");
        aIANA2JavaMap.put(\"IBM01140\",    \"Cp1140\");
        aIANA2JavaMap.put(\"CP01140\",    \"Cp1140\");
        aIANA2JavaMap.put(\"CCSID01140\",    \"Cp1140\");
        aIANA2JavaMap.put(\"IBM01141\",    \"Cp1141\");
        aIANA2JavaMap.put(\"CP01141\",    \"Cp1141\");
        aIANA2JavaMap.put(\"CCSID01141\",    \"Cp1141\");
        aIANA2JavaMap.put(\"IBM01142\",    \"Cp1142\");
        aIANA2JavaMap.put(\"CP01142\",    \"Cp1142\");
        aIANA2JavaMap.put(\"CCSID01142\",    \"Cp1142\");
        aIANA2JavaMap.put(\"IBM01143\",    \"Cp1143\");
        aIANA2JavaMap.put(\"CP01143\",    \"Cp1143\");
        aIANA2JavaMap.put(\"CCSID01143\",    \"Cp1143\");
        aIANA2JavaMap.put(\"IBM01144\",    \"Cp1144\");
        aIANA2JavaMap.put(\"CP01144\",    \"Cp1144\");
        aIANA2JavaMap.put(\"CCSID01144\",    \"Cp1144\");
        aIANA2JavaMap.put(\"IBM01145\",    \"Cp1145\");
        aIANA2JavaMap.put(\"CP01145\",    \"Cp1145\");
        aIANA2JavaMap.put(\"CCSID01145\",    \"Cp1145\");
        aIANA2JavaMap.put(\"IBM01146\",    \"Cp1146\");
        aIANA2JavaMap.put(\"CP01146\",    \"Cp1146\");
        aIANA2JavaMap.put(\"CCSID01146\",    \"Cp1146\");
        aIANA2JavaMap.put(\"IBM01147\",    \"Cp1147\");
        aIANA2JavaMap.put(\"CP01147\",    \"Cp1147\");
        aIANA2JavaMap.put(\"CCSID01147\",    \"Cp1147\");
        aIANA2JavaMap.put(\"IBM01148\",    \"Cp1148\");
        aIANA2JavaMap.put(\"CP01148\",    \"Cp1148\");
        aIANA2JavaMap.put(\"CCSID01148\",    \"Cp1148\");
        aIANA2JavaMap.put(\"IBM01149\",    \"Cp1149\");
        aIANA2JavaMap.put(\"CP01149\",    \"Cp1149\");
        aIANA2JavaMap.put(\"CCSID01149\",    \"Cp1149\");
        aIANA2JavaMap.put(\"EUC-JP\",          \"EUCJIS\");
        aIANA2JavaMap.put(\"CSEUCPKDFMTJAPANESE\",          \"EUCJIS\");
        aIANA2JavaMap.put(\"EXTENDED_UNIX_CODE_PACKED_FORMAT_FOR_JAPANESE\",          \"EUCJIS\");
        aIANA2JavaMap.put(\"EUC-KR\",          \"KSC5601\");
        aIANA2JavaMap.put(\"CSEUCKR\",          \"KSC5601\");
        aIANA2JavaMap.put(\"KS_C_5601-1987\",          \"KS_C_5601-1987\");
        aIANA2JavaMap.put(\"ISO-IR-149\",          \"KS_C_5601-1987\");
        aIANA2JavaMap.put(\"KS_C_5601-1989\",          \"KS_C_5601-1987\");
        aIANA2JavaMap.put(\"KSC_5601\",          \"KS_C_5601-1987\");
        aIANA2JavaMap.put(\"KOREAN\",          \"KS_C_5601-1987\");
        aIANA2JavaMap.put(\"CSKSC56011987\",          \"KS_C_5601-1987\");
        aIANA2JavaMap.put(\"GB2312\",          \"GB2312\");
        aIANA2JavaMap.put(\"CSGB2312\",          \"GB2312\");
        aIANA2JavaMap.put(\"ISO-2022-JP\",     \"JIS\");
        aIANA2JavaMap.put(\"CSISO2022JP\",     \"JIS\");
        aIANA2JavaMap.put(\"ISO-2022-KR\",     \"ISO2022KR\");
        aIANA2JavaMap.put(\"CSISO2022KR\",     \"ISO2022KR\");
        aIANA2JavaMap.put(\"ISO-2022-CN\",     \"ISO2022CN\");

        aIANA2JavaMap.put(\"X0201\",  \"JIS0201\");
        aIANA2JavaMap.put(\"CSISO13JISC6220JP\", \"JIS0201\");
        aIANA2JavaMap.put(\"X0208\",  \"JIS0208\");
        aIANA2JavaMap.put(\"ISO-IR-87\",  \"JIS0208\");
        aIANA2JavaMap.put(\"X0208dbiJIS_X0208-1983\",  \"JIS0208\");
        aIANA2JavaMap.put(\"CSISO87JISX0208\",  \"JIS0208\");
        aIANA2JavaMap.put(\"X0212\",  \"JIS0212\");
        aIANA2JavaMap.put(\"ISO-IR-159\",  \"JIS0212\");
        aIANA2JavaMap.put(\"CSISO159JISX02121990\",  \"JIS0212\");
        aIANA2JavaMap.put(\"GB18030\",       \"GB18030\");
        aIANA2JavaMap.put(\"GBK\",       \"GBK\");
        aIANA2JavaMap.put(\"CP936\",       \"GBK\");
        aIANA2JavaMap.put(\"MS936\",       \"GBK\");
        aIANA2JavaMap.put(\"WINDOWS-936\",       \"GBK\");
        aIANA2JavaMap.put(\"SHIFT_JIS\",       \"SJIS\");
        aIANA2JavaMap.put(\"CSSHIFTJIS\",       \"SJIS\");
        aIANA2JavaMap.put(\"MS_KANJI\",       \"SJIS\");
        aIANA2JavaMap.put(\"WINDOWS-31J\",       \"MS932\");
        aIANA2JavaMap.put(\"CSWINDOWS31J\",       \"MS932\");

            // Add support for Cp1252 and its friends
        aIANA2JavaMap.put(\"WINDOWS-1250\",   \"Cp1250\");
        aIANA2JavaMap.put(\"WINDOWS-1251\",   \"Cp1251\");
        aIANA2JavaMap.put(\"WINDOWS-1252\",   \"Cp1252\");
        aIANA2JavaMap.put(\"WINDOWS-1253\",   \"Cp1253\");
        aIANA2JavaMap.put(\"WINDOWS-1254\",   \"Cp1254\");
        aIANA2JavaMap.put(\"WINDOWS-1255\",   \"Cp1255\");
        aIANA2JavaMap.put(\"WINDOWS-1256\",   \"Cp1256\");
        aIANA2JavaMap.put(\"WINDOWS-1257\",   \"Cp1257\");
        aIANA2JavaMap.put(\"WINDOWS-1258\",   \"Cp1258\");
        aIANA2JavaMap.put(\"TIS-620\",   \"TIS620\");

        aIANA2JavaMap.put(\"ISO-8859-1\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"ISO-IR-100\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"ISO_8859-1\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"LATIN1\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"CSISOLATIN1\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"L1\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"IBM819\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"CP819\",      \"ISO8859_1\");

        aIANA2JavaMap.put(\"ISO-8859-2\",      \"ISO8859_2\");
        aIANA2JavaMap.put(\"ISO-IR-101\",      \"ISO8859_2\");
        aIANA2JavaMap.put(\"ISO_8859-2\",      \"ISO8859_2\");
        aIANA2JavaMap.put(\"LATIN2\",      \"ISO8859_2\");
        aIANA2JavaMap.put(\"CSISOLATIN2\",      \"ISO8859_2\");
        aIANA2JavaMap.put(\"L2\",      \"ISO8859_2\");

        aIANA2JavaMap.put(\"ISO-8859-3\",      \"ISO8859_3\");
        aIANA2JavaMap.put(\"ISO-IR-109\",      \"ISO8859_3\");
        aIANA2JavaMap.put(\"ISO_8859-3\",      \"ISO8859_3\");
        aIANA2JavaMap.put(\"LATIN3\",      \"ISO8859_3\");
        aIANA2JavaMap.put(\"CSISOLATIN3\",      \"ISO8859_3\");
        aIANA2JavaMap.put(\"L3\",      \"ISO8859_3\");

        aIANA2JavaMap.put(\"ISO-8859-4\",      \"ISO8859_4\");
        aIANA2JavaMap.put(\"ISO-IR-110\",      \"ISO8859_4\");
        aIANA2JavaMap.put(\"ISO_8859-4\",      \"ISO8859_4\");
        aIANA2JavaMap.put(\"LATIN4\",      \"ISO8859_4\");
        aIANA2JavaMap.put(\"CSISOLATIN4\",      \"ISO8859_4\");
        aIANA2JavaMap.put(\"L4\",      \"ISO8859_4\");

        aIANA2JavaMap.put(\"ISO-8859-5\",      \"ISO8859_5\");
        aIANA2JavaMap.put(\"ISO-IR-144\",      \"ISO8859_5\");
        aIANA2JavaMap.put(\"ISO_8859-5\",      \"ISO8859_5\");
        aIANA2JavaMap.put(\"CYRILLIC\",      \"ISO8859_5\");
        aIANA2JavaMap.put(\"CSISOLATINCYRILLIC\",      \"ISO8859_5\");

        aIANA2JavaMap.put(\"ISO-8859-6\",      \"ISO8859_6\");
        aIANA2JavaMap.put(\"ISO-IR-127\",      \"ISO8859_6\");
        aIANA2JavaMap.put(\"ISO_8859-6\",      \"ISO8859_6\");
        aIANA2JavaMap.put(\"ECMA-114\",      \"ISO8859_6\");
        aIANA2JavaMap.put(\"ASMO-708\",      \"ISO8859_6\");
        aIANA2JavaMap.put(\"ARABIC\",      \"ISO8859_6\");
        aIANA2JavaMap.put(\"CSISOLATINARABIC\",      \"ISO8859_6\");

        aIANA2JavaMap.put(\"ISO-8859-7\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"ISO-IR-126\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"ISO_8859-7\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"ELOT_928\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"ECMA-118\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"GREEK\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"CSISOLATINGREEK\",      \"ISO8859_7\");
        aIANA2JavaMap.put(\"GREEK8\",      \"ISO8859_7\");

        aIANA2JavaMap.put(\"ISO-8859-8\",      \"ISO8859_8\");
        aIANA2JavaMap.put(\"ISO-8859-8-I\",      \"ISO8859_8\"); // added since this encoding only differs w.r.t. presentation
        aIANA2JavaMap.put(\"ISO-IR-138\",      \"ISO8859_8\");
        aIANA2JavaMap.put(\"ISO_8859-8\",      \"ISO8859_8\");
        aIANA2JavaMap.put(\"HEBREW\",      \"ISO8859_8\");
        aIANA2JavaMap.put(\"CSISOLATINHEBREW\",      \"ISO8859_8\");

        aIANA2JavaMap.put(\"ISO-8859-9\",      \"ISO8859_9\");
        aIANA2JavaMap.put(\"ISO-IR-148\",      \"ISO8859_9\");
        aIANA2JavaMap.put(\"ISO_8859-9\",      \"ISO8859_9\");
        aIANA2JavaMap.put(\"LATIN5\",      \"ISO8859_9\");
        aIANA2JavaMap.put(\"CSISOLATIN5\",      \"ISO8859_9\");
        aIANA2JavaMap.put(\"L5\",      \"ISO8859_9\");

        aIANA2JavaMap.put(\"ISO-8859-13\",      \"ISO8859_13\");

        aIANA2JavaMap.put(\"ISO-8859-15\",      \"ISO8859_15_FDIS\");
        aIANA2JavaMap.put(\"ISO_8859-15\",      \"ISO8859_15_FDIS\");
        aIANA2JavaMap.put(\"LATIN-9\",          \"ISO8859_15_FDIS\");

        aIANA2JavaMap.put(\"KOI8-R\",          \"KOI8_R\");
        aIANA2JavaMap.put(\"CSKOI8R\",          \"KOI8_R\");
        aIANA2JavaMap.put(\"US-ASCII\",        \"ASCII\");
        aIANA2JavaMap.put(\"ISO-IR-6\",        \"ASCII\");
        aIANA2JavaMap.put(\"ANSI_X3.4-1968\",        \"ASCII\");
        aIANA2JavaMap.put(\"ANSI_X3.4-1986\",        \"ASCII\");
        aIANA2JavaMap.put(\"ISO_646.IRV:1991\",        \"ASCII\");
        aIANA2JavaMap.put(\"ASCII\",        \"ASCII\");
        aIANA2JavaMap.put(\"CSASCII\",        \"ASCII\");
        aIANA2JavaMap.put(\"ISO646-US\",        \"ASCII\");
        aIANA2JavaMap.put(\"US\",        \"ASCII\");
        aIANA2JavaMap.put(\"IBM367\",        \"ASCII\");
        aIANA2JavaMap.put(\"CP367\",        \"ASCII\");
        aIANA2JavaMap.put(\"UTF-8\",           \"UTF8\");
        aIANA2JavaMap.put(\"UTF-16\",           \"UTF-16\");
        aIANA2JavaMap.put(\"UTF-16BE\",           \"UnicodeBig\");
        aIANA2JavaMap.put(\"UTF-16LE\",           \"UnicodeLittle\");

        // support for 1047, as proposed to be added to the
        // IANA registry in
        // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
        aIANA2JavaMap.put(\"IBM-1047\",    \"Cp1047\");
        aIANA2JavaMap.put(\"IBM1047\",    \"Cp1047\");
        aIANA2JavaMap.put(\"CP1047\",    \"Cp1047\");

        // Adding new aliases as proposed in
        // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
        aIANA2JavaMap.put(\"IBM-37\",    \"CP037\");
        aIANA2JavaMap.put(\"IBM-273\",    \"CP273\");
        aIANA2JavaMap.put(\"IBM-277\",    \"CP277\");
        aIANA2JavaMap.put(\"IBM-278\",    \"CP278\");
        aIANA2JavaMap.put(\"IBM-280\",    \"CP280\");
        aIANA2JavaMap.put(\"IBM-284\",    \"CP284\");
        aIANA2JavaMap.put(\"IBM-285\",    \"CP285\");
        aIANA2JavaMap.put(\"IBM-290\",    \"CP290\");
        aIANA2JavaMap.put(\"IBM-297\",    \"CP297\");
        aIANA2JavaMap.put(\"IBM-420\",    \"CP420\");
        aIANA2JavaMap.put(\"IBM-424\",    \"CP424\");
        aIANA2JavaMap.put(\"IBM-437\",    \"CP437\");
        aIANA2JavaMap.put(\"IBM-500\",    \"CP500\");
        aIANA2JavaMap.put(\"IBM-775\",    \"CP775\");
        aIANA2JavaMap.put(\"IBM-850\",    \"CP850\");
        aIANA2JavaMap.put(\"IBM-852\",    \"CP852\");
        aIANA2JavaMap.put(\"IBM-855\",    \"CP855\");
        aIANA2JavaMap.put(\"IBM-857\",    \"CP857\");
        aIANA2JavaMap.put(\"IBM-858\",    \"CP858\");
        aIANA2JavaMap.put(\"IBM-860\",    \"CP860\");
        aIANA2JavaMap.put(\"IBM-861\",    \"CP861\");
        aIANA2JavaMap.put(\"IBM-862\",    \"CP862\");
        aIANA2JavaMap.put(\"IBM-863\",    \"CP863\");
        aIANA2JavaMap.put(\"IBM-864\",    \"CP864\");
        aIANA2JavaMap.put(\"IBM-865\",    \"CP865\");
        aIANA2JavaMap.put(\"IBM-866\",    \"CP866\");
        aIANA2JavaMap.put(\"IBM-868\",    \"CP868\");
        aIANA2JavaMap.put(\"IBM-869\",    \"CP869\");
        aIANA2JavaMap.put(\"IBM-870\",    \"CP870\");
        aIANA2JavaMap.put(\"IBM-871\",    \"CP871\");
        aIANA2JavaMap.put(\"IBM-918\",    \"CP918\");
        aIANA2JavaMap.put(\"IBM-924\",    \"CP924\");
        aIANA2JavaMap.put(\"IBM-1026\",    \"CP1026\");
        aIANA2JavaMap.put(\"IBM-1140\",    \"Cp1140\");
        aIANA2JavaMap.put(\"IBM-1141\",    \"Cp1141\");
        aIANA2JavaMap.put(\"IBM-1142\",    \"Cp1142\");
        aIANA2JavaMap.put(\"IBM-1143\",    \"Cp1143\");
        aIANA2JavaMap.put(\"IBM-1144\",    \"Cp1144\");
        aIANA2JavaMap.put(\"IBM-1145\",    \"Cp1145\");
        aIANA2JavaMap.put(\"IBM-1146\",    \"Cp1146\");
        aIANA2JavaMap.put(\"IBM-1147\",    \"Cp1147\");
        aIANA2JavaMap.put(\"IBM-1148\",    \"Cp1148\");
        aIANA2JavaMap.put(\"IBM-1149\",    \"Cp1149\");
        aIANA2JavaMap.put(\"IBM-819\",      \"ISO8859_1\");
        aIANA2JavaMap.put(\"IBM-367\",        \"ASCII\");

        fIANA2JavaMap = Collections.unmodifiableMap(aIANA2JavaMap);
        // REVISIT:
        //   j:CNS11643 -> EUC-TW?
        //   ISO-2022-CN? ISO-2022-CN-EXT?

        // add Java to IANA encoding mappings
        //aJava2IANAMap.put(\"8859_1\",    \"US-ASCII\"); // ?
        aJava2IANAMap.put(\"ISO8859_1\",    \"ISO-8859-1\");
        aJava2IANAMap.put(\"ISO8859_2\",    \"ISO-8859-2\");
        aJava2IANAMap.put(\"ISO8859_3\",    \"ISO-8859-3\");
        aJava2IANAMap.put(\"ISO8859_4\",    \"ISO-8859-4\");
        aJava2IANAMap.put(\"ISO8859_5\",    \"ISO-8859-5\");
        aJava2IANAMap.put(\"ISO8859_6\",    \"ISO-8859-6\");
        aJava2IANAMap.put(\"ISO8859_7\",    \"ISO-8859-7\");
        aJava2IANAMap.put(\"ISO8859_8\",    \"ISO-8859-8\");
        aJava2IANAMap.put(\"ISO8859_9\",    \"ISO-8859-9\");
        aJava2IANAMap.put(\"ISO8859_13\",    \"ISO-8859-13\");
        aJava2IANAMap.put(\"ISO8859_15\",    \"ISO-8859-15\");
        aJava2IANAMap.put(\"ISO8859_15_FDIS\",    \"ISO-8859-15\");
        aJava2IANAMap.put(\"Big5\",      \"BIG5\");
        aJava2IANAMap.put(\"CP037\",     \"EBCDIC-CP-US\");
        aJava2IANAMap.put(\"CP273\",     \"IBM273\");
        aJava2IANAMap.put(\"CP277\",     \"EBCDIC-CP-DK\");
        aJava2IANAMap.put(\"CP278\",     \"EBCDIC-CP-FI\");
        aJava2IANAMap.put(\"CP280\",     \"EBCDIC-CP-IT\");
        aJava2IANAMap.put(\"CP284\",     \"EBCDIC-CP-ES\");
        aJava2IANAMap.put(\"CP285\",     \"EBCDIC-CP-GB\");
        aJava2IANAMap.put(\"CP290\",     \"EBCDIC-JP-KANA\");
        aJava2IANAMap.put(\"CP297\",     \"EBCDIC-CP-FR\");
        aJava2IANAMap.put(\"CP420\",     \"EBCDIC-CP-AR1\");
        aJava2IANAMap.put(\"CP424\",     \"EBCDIC-CP-HE\");
        aJava2IANAMap.put(\"CP437\",     \"IBM437\");
        aJava2IANAMap.put(\"CP500\",     \"EBCDIC-CP-CH\");
        aJava2IANAMap.put(\"CP775\",     \"IBM775\");
        aJava2IANAMap.put(\"CP850\",     \"IBM850\");
        aJava2IANAMap.put(\"CP852\",     \"IBM852\");
        aJava2IANAMap.put(\"CP855\",     \"IBM855\");
        aJava2IANAMap.put(\"CP857\",     \"IBM857\");
        aJava2IANAMap.put(\"CP858\",     \"IBM00858\");
        aJava2IANAMap.put(\"CP860\",     \"IBM860\");
        aJava2IANAMap.put(\"CP861\",     \"IBM861\");
        aJava2IANAMap.put(\"CP862\",     \"IBM862\");
        aJava2IANAMap.put(\"CP863\",     \"IBM863\");
        aJava2IANAMap.put(\"CP864\",     \"IBM864\");
        aJava2IANAMap.put(\"CP865\",     \"IBM865\");
        aJava2IANAMap.put(\"CP866\",     \"IBM866\");
        aJava2IANAMap.put(\"CP868\",     \"IBM868\");
        aJava2IANAMap.put(\"CP869\",     \"IBM869\");
        aJava2IANAMap.put(\"CP870\",     \"EBCDIC-CP-ROECE\");
        aJava2IANAMap.put(\"CP871\",     \"EBCDIC-CP-IS\");
        aJava2IANAMap.put(\"CP918\",     \"EBCDIC-CP-AR2\");
        aJava2IANAMap.put(\"CP924\",     \"IBM00924\");
        aJava2IANAMap.put(\"CP1026\",     \"IBM1026\");
        aJava2IANAMap.put(\"CP1140\",     \"IBM01140\");
        aJava2IANAMap.put(\"CP1141\",     \"IBM01141\");
        aJava2IANAMap.put(\"CP1142\",     \"IBM01142\");
        aJava2IANAMap.put(\"CP1143\",     \"IBM01143\");
        aJava2IANAMap.put(\"CP1144\",     \"IBM01144\");
        aJava2IANAMap.put(\"CP1145\",     \"IBM01145\");
        aJava2IANAMap.put(\"CP1146\",     \"IBM01146\");
        aJava2IANAMap.put(\"CP1147\",     \"IBM01147\");
        aJava2IANAMap.put(\"CP1148\",     \"IBM01148\");
        aJava2IANAMap.put(\"CP1149\",     \"IBM01149\");
        aJava2IANAMap.put(\"EUCJIS\",    \"EUC-JP\");
        aJava2IANAMap.put(\"KS_C_5601-1987\",          \"KS_C_5601-1987\");
        aJava2IANAMap.put(\"GB2312\",    \"GB2312\");
        aJava2IANAMap.put(\"ISO2022KR\", \"ISO-2022-KR\");
        aJava2IANAMap.put(\"ISO2022CN\", \"ISO-2022-CN\");
        aJava2IANAMap.put(\"JIS\",       \"ISO-2022-JP\");
        aJava2IANAMap.put(\"KOI8_R\",    \"KOI8-R\");
        aJava2IANAMap.put(\"KSC5601\",   \"EUC-KR\");
        aJava2IANAMap.put(\"GB18030\",      \"GB18030\");
        aJava2IANAMap.put(\"GBK\",       \"GBK\");
        aJava2IANAMap.put(\"SJIS\",      \"SHIFT_JIS\");
        aJava2IANAMap.put(\"MS932\",      \"WINDOWS-31J\");
        aJava2IANAMap.put(\"UTF8\",      \"UTF-8\");
        aJava2IANAMap.put(\"Unicode\",   \"UTF-16\");
        aJava2IANAMap.put(\"UnicodeBig\",   \"UTF-16BE\");
        aJava2IANAMap.put(\"UnicodeLittle\",   \"UTF-16LE\");
        aJava2IANAMap.put(\"JIS0201\",  \"X0201\");
        aJava2IANAMap.put(\"JIS0208\",  \"X0208\");
        aJava2IANAMap.put(\"JIS0212\",  \"ISO-IR-159\");

        // proposed addition (see above for details):
        aJava2IANAMap.put(\"CP1047\",    \"IBM1047\");

        fJava2IANAMap = Collections.unmodifiableMap(aIANA2JavaMap);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5059202 "EncodingMap"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <clinit>()

 Constructors

 Default constructor. "
      end

      operation 5059330 "getIANA2JavaMapping"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "ianaEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public static methods


Returns the Java encoding name for the specified IANA encoding name.

@param ianaEncoding The IANA encoding name.
"
      end

      operation 5059458 "getJava2IANAMapping"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "javaEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIANA2JavaMapping(String):String

Returns the IANA encoding name for the specified Java encoding name.

@param javaEncoding The Java encoding name.
"
      end
    end

    class 734722 "EntityResolver2Wrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This class wraps a SAX entity resolver (EntityResolver2) in an XNI entity resolver.</p>

@author Michael Glavassevich, IBM

"
      classrelation 2191618 // <realization>
	relation 2191618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2191618 // <realization>
	  b parent class_ref 666114 // ExternalSubsetResolver
      end

      classrelation 2191746 // fEntityResolver (<unidirectional association>)
	relation 2191746 --->
	  a role_name "fEntityResolver" protected
	    comment " Data

 An instance of SAX2 Extensions 1.1's EntityResolver2. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2191746 // fEntityResolver (<unidirectional association>)
	  b parent class_ref 728194 // EntityResolver2
      end

      operation 5059586 "EntityResolver2Wrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 5059714 "EntityResolver2Wrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "entityResolver" type class_ref 728194 // EntityResolver2
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new instance wrapping the given SAX entity resolver.</p>

@param entityResolver the SAX entity resolver to wrap
"
      end

      operation 5059842 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityResolver" type class_ref 728194 // EntityResolver2
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(EntityResolver2)

 Public methods


<p>Sets the SAX entity resolver wrapped by this object.</p>

@param entityResolver the SAX entity resolver to wrap
"
      end

      operation 5059970 "getEntityResolver"
	public return_type class_ref 728194 // EntityResolver2
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEntityResolver(EntityResolver2)

<p>Returns the SAX entity resolver wrapped by this object.</p>

@return the SAX entity resolver wrapped by this object
"
      end

      operation 5060098 "getExternalSubset"
	public return_type class_ref 657666 // XMLInputSource
	nparams 1
	  param inout name "grammarDescription" type class_ref 666242 // XMLDTDDescription
	nexceptions 2
	  exception class_ref 657794 // XNIException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityResolver():EntityResolver2

 ExternalSubsetResolver methods


<p>Locates an external subset for documents which do not explicitly
provide one. If no external subset is provided, this method should
return <code>null</code>.</p>

@param grammarDescription a description of the DTD

@throws XNIException Thrown on general error.
@throws IOException  Thrown if resolved entity stream cannot be
                     opened or some other i/o error occurs.
"
      end

      operation 5060226 "resolveEntity"
	public return_type class_ref 657666 // XMLInputSource
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	nexceptions 2
	  exception class_ref 657794 // XNIException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getExternalSubset(XMLDTDDescription):XMLInputSource

 XMLEntityResolver methods


Resolves an external parsed entity. If the entity cannot be
resolved, this method should return null.

@param resourceIdentifier contains the physical co-ordinates of the resource to be resolved

@throws XNIException Thrown on general error.
@throws IOException  Thrown if resolved entity stream cannot be
                     opened or some other i/o error occurs.
"
      end

      operation 5060354 "createXMLInputSource"
	private return_type class_ref 657666 // XMLInputSource
	nparams 2
	  param inout name "source" type class_ref 606594 // InputSource
	  param inout name "baseURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " resolveEntity(XMLResourceIdentifier):XMLInputSource

Creates an XMLInputSource from a SAX InputSource.
"
      end
    end

    class 734850 "EntityResolverWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class wraps a SAX entity resolver in an XNI entity resolver.

@see EntityResolver

@author Andy Clark, IBM

"
      classrelation 2191874 // <realization>
	relation 2191874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2191874 // <realization>
	  b parent class_ref 658434 // XMLEntityResolver
      end

      classrelation 2192002 // fEntityResolver (<unidirectional association>)
	relation 2192002 --->
	  a role_name "fEntityResolver" protected
	    comment " Data

 The SAX entity resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2192002 // fEntityResolver (<unidirectional association>)
	  b parent class_ref 619138 // EntityResolver
      end

      operation 5060482 "EntityResolverWrapper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 5060610 "EntityResolverWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "entityResolver" type class_ref 619138 // EntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wraps the specified SAX entity resolver. "
      end

      operation 5060738 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityResolver" type class_ref 619138 // EntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(EntityResolver)

 Public methods

 Sets the SAX entity resolver. "
      end

      operation 5060866 "getEntityResolver"
	public return_type class_ref 619138 // EntityResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEntityResolver(EntityResolver)
 Returns the SAX entity resolver. "
      end

      operation 5060994 "resolveEntity"
	public return_type class_ref 657666 // XMLInputSource
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	nexceptions 2
	  exception class_ref 657794 // XNIException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityResolver():EntityResolver

 XMLEntityResolver methods


Resolves an external parsed entity. If the entity cannot be
resolved, this method should return null.

@param resourceIdentifier        contains the physical co-ordinates of the resource to be resolved

@throws XNIException Thrown on general error.
@throws IOException  Thrown if resolved entity stream cannot be
                     opened or some other i/o error occurs.
"
      end
    end

    class 734978 "ErrorHandlerProxy"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Wraps {@link XMLErrorHandler} and make it look like a SAX {@link ErrorHandler}.

<p>
The derived class should override the {@link #getErrorHandler()} method
so that it will return the correct {@link XMLErrorHandler} instance.
This method will be called whenever an error/warning is found.

<p>
Experience shows that it is better to store the actual
{@link XMLErrorHandler} in one place and looks up that variable,
rather than copying it into every component that needs an error handler
and update all of them whenever it is changed, IMO.

@author Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)

"
      classrelation 2192130 // <realization>
	relation 2192130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2192130 // <realization>
	  b parent class_ref 618114 // ErrorHandler
      end

      operation 5061122 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5061250 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5061378 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5061506 "getErrorHandler"
	abstract protected return_type class_ref 657922 // XMLErrorHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 735106 "Status"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 1106050 "SET"
	public type class_ref 735106 // Status
	cpp_decl ""
	java_decl "  ${@}${name}((short)-3, false),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106178 "UNKNOWN"
	public type class_ref 735106 // Status
	cpp_decl ""
	java_decl "  ${@}${name}((short)-2, false),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106306 "RECOGNIZED"
	public type class_ref 735106 // Status
	cpp_decl ""
	java_decl "  ${@}${name}((short)-1, false),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106434 "NOT_SUPPORTED"
	public type class_ref 735106 // Status
	cpp_decl ""
	java_decl "  ${@}${name}((short)0, true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106562 "NOT_RECOGNIZED"
	public type class_ref 735106 // Status
	cpp_decl ""
	java_decl "  ${@}${name}((short)1, true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106690 "NOT_ALLOWED"
	public type class_ref 735106 // Status
	cpp_decl ""
	java_decl "  ${@}${name}((short)2, true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106818 "type"
	const_attribute private explicit_type "short"
	stereotype "attribute"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1106946 "isExceptional"
	private explicit_type "boolean"
	stereotype "attribute"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5079682 "Status"
	package explicit_return_type ""
	nparams 2
	  param in name "type" explicit_type "short"
	  param inout name "isExceptional" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5079810 "getType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5079938 "isExceptional"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 735234 "HTTPInputSource"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an input source for an XML resource
retrievable over HTTP. In addition to the properties
provided by an <code>XMLInputSource</code> an HTTP input
source also has HTTP request properties and a preference
whether HTTP redirects will be followed. Note that these
properties will only be used if reading this input source
will induce an HTTP connection.

@author Michael Glavassevich, IBM

"
      classrelation 2193282 // <generalisation>
	relation 2193282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2193282 // <generalisation>
	  b parent class_ref 657666 // XMLInputSource
      end

      attribute 1103106 "fFollowRedirects"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Preference for whether HTTP redirects should be followed. *
"
      end

      classrelation 2193410 // fHTTPRequestProperties (<unidirectional association>)
	relation 2193410 --->
	  a role_name "fHTTPRequestProperties" init_value " new HashMap<>()" protected
	    comment " HTTP request properties. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 2193410 // fHTTPRequestProperties (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 5062146 "HTTPInputSource"
	public explicit_return_type ""
	nparams 3
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Constructs an input source from just the public and system
identifiers, leaving resolution of the entity and opening of
the input stream up to the caller.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
"
      end

      operation 5062274 "HTTPInputSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String)

Constructs an input source from a XMLResourceIdentifier
object, leaving resolution of the entity and opening of
the input stream up to the caller.

@param resourceIdentifier the XMLResourceIdentifier containing the information
"
      end

      operation 5062402 "HTTPInputSource"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "byteStream" type class_ref 146434 // InputStream
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(XMLResourceIdentifier)

Constructs an input source from a byte stream.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
@param byteStream   The byte stream.
@param encoding     The encoding of the byte stream, if known.
"
      end

      operation 5062530 "HTTPInputSource"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "charStream" type class_ref 407298 // Reader
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String,InputStream,String)

Constructs an input source from a character stream.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
@param charStream   The character stream.
@param encoding     The original encoding of the byte stream
                    used by the reader, if known.
"
      end

      operation 5062658 "getFollowHTTPRedirects"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String,Reader,String)

 Public methods


Returns the preference whether HTTP redirects should
be followed. By default HTTP redirects will be followed.
"
      end

      operation 5062786 "setFollowHTTPRedirects"
	public explicit_return_type "void"
	nparams 1
	  param inout name "followRedirects" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFollowHTTPRedirects():boolean

Sets the preference whether HTTP redirects should
be followed. By default HTTP redirects will be followed.
"
      end

      operation 5062914 "getHTTPRequestProperty"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setFollowHTTPRedirects(boolean)

Returns the value of the request property
associated with the given property name.

@param key the name of the request property
@return the value of the request property or
<code>null</code> if this property has not
been set
"
      end

      operation 5063042 "getHTTPRequestProperties"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<String, String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getHTTPRequestProperty(String):String

Returns an iterator for the request properties this
input source contains. Each object returned by the
iterator is an instance of <code>java.util.Map.Entry</code>
where each key and value are a pair of strings corresponding
to the name and value of a request property.

@return an iterator for the request properties this
input source contains
"
      end

      operation 5063170 "setHTTPRequestProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getHTTPRequestProperties():Iterator

Sets the value of the request property
associated with the given property name.

@param key the name of the request property
@param value the value of the request property
"
      end
    end

    class 735362 "LocatorProxy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Wraps {@link XMLLocator} and make it look like a SAX {@link Locator}.

@author Arnaud Le Hors, IBM
@author Andy Clark, IBM

"
      classrelation 2194178 // <realization>
	relation 2194178 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2194178 // <realization>
	  b parent class_ref 640898 // Locator2
      end

      classrelation 2194306 // fLocator (<unidirectional association>)
	relation 2194306 --->
	  a role_name "fLocator" const_relation private
	    comment " Data

 XML locator. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2194306 // fLocator (<unidirectional association>)
	  b parent class_ref 660866 // XMLLocator
      end

      operation 5066370 "LocatorProxy"
	public explicit_return_type ""
	nparams 1
	  param inout name "locator" type class_ref 660866 // XMLLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs an XML locator proxy. "
      end

      operation 5066498 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Locator methods

 Public identifier. "
      end

      operation 5066626 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " System identifier. "
      end

      operation 5066754 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Line number. "
      end

      operation 5066882 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Column number. "
      end

      operation 5067010 "getXMLVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Locator2 methods
"
      end

      operation 5067138 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 735490 "LocatorWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Wraps SAX {@link Locator} into Xerces {@link XMLLocator}.

@author
    Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 2194434 // <realization>
	relation 2194434 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2194434 // <realization>
	  b parent class_ref 660866 // XMLLocator
      end

      classrelation 2194562 // locator (<unidirectional association>)
	relation 2194562 --->
	  a role_name "locator" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2194562 // locator (<unidirectional association>)
	  b parent class_ref 606082 // Locator
      end

      operation 5067266 "LocatorWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "_loc" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5067394 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5067522 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5067650 "getBaseSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5067778 "getExpandedSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5067906 "getLiteralSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5068034 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5068162 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5068290 "getCharacterOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the character offset,
or <code>-1</code>,
if no character offset is available.<p>

<p>As this information is not available from
{@link org.xml.sax.Locator},
always return <code>-1</code>.</p>
"
      end

      operation 5068418 "getXMLVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the XML version of the current entity.</p>

<p>As this information is not available from
{@link org.xml.sax.Locator},
always return <code>null</code>.</p>
"
      end
    end

    class 735618 "PrimeNumberSequenceGenerator"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Fills an array with a random sequence of prime numbers.
"
      attribute 1103746 "PRIMES"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        3,   5,   7,  11,  13,  17,  19,  23,  29,  31,  37,  41,  43,  47,  53,  59,
       61,  67,  71,  73,  79,  83,  89,  97, 101, 103, 107, 109, 113, 127, 131, 137,
      139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,
      229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,
      317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,
      421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,
      521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,
      619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5069570 "generateSequence"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "arrayToFill" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 735746 "SAX2XNI"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Receves SAX {@link ContentHandler} events
and produces the equivalent {@link XMLDocumentHandler} events.

@author
    Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 2195842 // <realization>
	relation 2195842 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2195842 // <realization>
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2195970 // <realization>
	relation 2195970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2195970 // <realization>
	  b parent class_ref 661762 // XMLDocumentSource
      end

      operation 5070210 "SAX2XNI"
	public explicit_return_type ""
	nparams 1
	  param inout name "core" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2196098 // fCore (<unidirectional association>)
	relation 2196098 --->
	  a role_name "fCore" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196098 // fCore (<unidirectional association>)
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      classrelation 2196226 // nsContext (<unidirectional association>)
	relation 2196226 --->
	  a role_name "nsContext" init_value " new NamespaceSupport()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196226 // nsContext (<unidirectional association>)
	  b parent class_ref 702722 // NamespaceSupport
      end

      classrelation 2196354 // symbolTable (<unidirectional association>)
	relation 2196354 --->
	  a role_name "symbolTable" init_value " new SymbolTable()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196354 // symbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      operation 5070338 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5070466 "getDocumentHandler"
	public return_type class_ref 658050 // XMLDocumentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5070594 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ContentHandler implementation

"
      end

      operation 5070722 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5070850 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "local" type class_ref 128130 // String
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "att" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5070978 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "local" type class_ref 128130 // String
	  param inout name "qname" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5071106 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5071234 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5071362 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5071490 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5071618 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5071746 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2196482 // locator (<unidirectional association>)
	relation 2196482 --->
	  a role_name "locator" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196482 // locator (<unidirectional association>)
	  b parent class_ref 606082 // Locator
      end

      operation 5071874 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "_loc" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5072002 "createQName"
	private return_type class_ref 661378 // QName
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "local" type class_ref 128130 // String
	  param inout name "raw" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a QName object. "
      end

      operation 5072130 "symbolize"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Symbolizes the specified string. "
      end

      operation 5072258 "createXMLString"
	private return_type class_ref 661250 // XMLString
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2196610 // xa (<unidirectional association>)
	relation 2196610 --->
	  a role_name "xa" init_value " new XMLAttributesImpl()" const_relation private
	    comment " only one instance of XMLAttributes is used. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2196610 // xa (<unidirectional association>)
	  b parent class_ref 661506 // XMLAttributes
      end

      operation 5072386 "createAttributes"
	private return_type class_ref 661506 // XMLAttributes
	nparams 1
	  param inout name "att" type class_ref 593410 // Attributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an XMLAttributes object. "
      end
    end

    class 735874 "SAXMessageFormatter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to format SAX error messages using a specified locale.

@author Michael Glavassevich, IBM

@version $Id: SAXMessageFormatter.java,v 1.6 2010-11-01 04:40:14 joehw Exp $
"
      operation 5075586 "formatMessage"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "key" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 660738 // MissingResourceException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a message with the specified arguments using the given
locale information.

@param locale    The locale of the message.
@param key       The message key.
@param arguments The message replacement text arguments. The order
                 of the arguments must match that of the placeholders
                 in the actual message.

@return          the formatted message.

@throws MissingResourceException Thrown if the message with the
                                 specified key cannot be found.
"
      end
    end

    class 736002 "SecurityManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is a container for parser settings that relate to
security, or more specifically, it is intended to be used to prevent denial-of-service
attacks from being launched against a system running Xerces.
Any component that is aware of a denial-of-service attack that can arise
from its processing of a certain kind of document may query its Component Manager
for the property (http://apache.org/xml/properties/security-manager)
whose value will be an instance of this class.
If no value has been set for the property, the component should proceed in the \"usual\" (spec-compliant)
manner.  If a value has been set, then it must be the case that the component in
question needs to know what method of this class to query.  This class
will provide defaults for all known security issues, but will also provide
setters so that those values can be tailored by applications that care.

@author  Neil Graham, IBM

"
      attribute 1103874 "DEFAULT_ENTITY_EXPANSION_LIMIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 default value for entity expansion limit
"
      end

      attribute 1104002 "DEFAULT_MAX_OCCUR_NODE_LIMIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default value of number of nodes created. *
"
      end

      attribute 1104130 "DEFAULT_ELEMENT_ATTRIBUTE_LIMIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

"
      end

      attribute 1104258 "entityExpansionLimit"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Entity expansion limit. *
"
      end

      attribute 1104386 "maxOccurLimit"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " W3C XML Schema maxOccurs limit. *
"
      end

      attribute 1104514 "fElementAttributeLimit"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5075714 "SecurityManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " default constructor.  Establishes default values for
 all known security holes.

Default constructor.  Establishes default values
for known security vulnerabilities.
"
      end

      operation 5075842 "setEntityExpansionLimit"
	public explicit_return_type "void"
	nparams 1
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the number of entity expansions that the
parser should permit in a document.</p>

@param limit the number of entity expansions
permitted in a document
"
      end

      operation 5075970 "getEntityExpansionLimit"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the number of entity expansions
that the parser permits in a document.</p>

@return the number of entity expansions
permitted in a document
"
      end

      operation 5076098 "setMaxOccurNodeLimit"
	public explicit_return_type "void"
	nparams 1
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the limit of the number of content model nodes
that may be created when building a grammar for a W3C
XML Schema that contains maxOccurs attributes with values
other than \"unbounded\".</p>

@param limit the maximum value for maxOccurs other
than \"unbounded\"
"
      end

      operation 5076226 "getMaxOccurNodeLimit"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the limit of the number of content model nodes
that may be created when building a grammar for a W3C
XML Schema that contains maxOccurs attributes with values
other than \"unbounded\".</p>

@return the maximum value for maxOccurs other
than \"unbounded\"
"
      end

      operation 5076354 "getElementAttrLimit"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5076482 "setElementAttrLimit"
	public explicit_return_type "void"
	nparams 1
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5076610 "readSystemProperties"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 736130 "ShadowedSymbolTable"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Shadowed symbol table.

The table has a reference to the main symbol table and is
not allowed to add new symbols to the main symbol table.
New symbols are added to the shadow symbol table and are local
to the component using this table.

@author Andy Clark IBM
"
      classrelation 2197890 // <generalisation>
	relation 2197890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2197890 // <generalisation>
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2198018 // fSymbolTable (<unidirectional association>)
	relation 2198018 --->
	  a role_name "fSymbolTable" protected
	    comment " Data

 Main symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2198018 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      operation 5079042 "ShadowedSymbolTable"
	public explicit_return_type ""
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a shadow of the specified symbol table. "
      end

      operation 5079170 "addSymbol"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(SymbolTable)

 SymbolTable methods


Adds the specified symbol to the symbol table and returns a
reference to the unique symbol. If the symbol already exists,
the previous symbol reference is returned instead, in order
guarantee that symbol references remain unique.

@param symbol The new symbol.
"
      end

      operation 5079298 "addSymbol"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol(String)

Adds the specified symbol to the symbol table and returns a
reference to the unique symbol. If the symbol already exists,
the previous symbol reference is returned instead, in order
guarantee that symbol references remain unique.

@param buffer The buffer containing the new symbol.
@param offset The offset into the buffer of the new symbol.
@param length The length of the new symbol in the buffer.
"
      end

      operation 5079426 "hash"
	public explicit_return_type "int"
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addSymbol(char[],int,int):String

Returns a hashcode value for the specified symbol. The value
returned by this method must be identical to the value returned
by the <code>hash(char[],int,int)</code> method when called
with the character array that comprises the symbol string.

@param symbol The symbol to hash.
"
      end

      operation 5079554 "hash"
	public explicit_return_type "int"
	nparams 3
	  param inout name "buffer" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hash(String):int

Returns a hashcode value for the specified symbol information.
The value returned by this method must be identical to the value
returned by the <code>hash(String)</code> method when called
with the string object created from the symbol information.

@param buffer The character buffer containing the symbol.
@param offset The offset into the character buffer of the start
              of the symbol.
@param length The length of the symbol.
"
      end
    end

    class 736514 "TeeXMLDocumentFilterImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "

@author
    Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 2199554 // <realization>
	relation 2199554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2199554 // <realization>
	  b parent class_ref 666754 // XMLDocumentFilter
      end

      classrelation 2199682 // next (<unidirectional association>)
	relation 2199682 --->
	  a role_name "next" private
	    comment "
The next component in the pipeline who receives the event.
This component receives events after the \"side\" handler
receives them.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2199682 // next (<unidirectional association>)
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      classrelation 2199810 // side (<unidirectional association>)
	relation 2199810 --->
	  a role_name "side" private
	    comment "
The component who intercepts events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2199810 // side (<unidirectional association>)
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      classrelation 2199938 // source (<unidirectional association>)
	relation 2199938 --->
	  a role_name "source" private
	    comment "
The source of the event.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2199938 // source (<unidirectional association>)
	  b parent class_ref 661762 // XMLDocumentSource
      end

      operation 5085954 "getSide"
	public return_type class_ref 658050 // XMLDocumentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086082 "setSide"
	public explicit_return_type "void"
	nparams 1
	  param inout name "side" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086210 "getDocumentSource"
	public return_type class_ref 661762 // XMLDocumentSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086338 "setDocumentSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 661762 // XMLDocumentSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086466 "getDocumentHandler"
	public return_type class_ref 658050 // XMLDocumentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086594 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086722 "characters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDocumentHandler implementation

"
      end

      operation 5086850 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5086978 "doctypeDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "rootElement" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087106 "emptyElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087234 "endCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087362 "endDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087490 "endElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087618 "endGeneralEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087746 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5087874 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5088002 "startCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5088130 "startDocument"
	public explicit_return_type "void"
	nparams 4
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 660994 // NamespaceContext
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5088258 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5088386 "startGeneralEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5088514 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5088642 "xmlDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "standalone" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 736642 "XML11Char"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines the basic properties of characters in XML 1.1. The data
in this class can be used to verify that a character is a valid
XML 1.1 character or if the character is a space, name start, or name
character.
<p>
A series of convenience methods are supplied to ease the burden
of the developer.  Using the character as an index into the <code>XML11CHARS</code>
array and applying the appropriate mask flag (e.g.
<code>MASK_VALID</code>), yields the same results as calling the
convenience methods. There is one exception: check the comments
for the <code>isValid</code> method for details.

@author Glenn Marcy, IBM
@author Andy Clark, IBM
@author Arnaud  Le Hors, IBM
@author Neil Graham, IBM
@author Michael Glavassevich, IBM

@version $Id: XML11Char.java,v 1.7 2010-11-01 04:40:15 joehw Exp $
"
      attribute 1110530 "XML11CHARS"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte [1 << 16]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Character flags for XML 1.1. 
"
      end

      attribute 1110658 "MASK_XML11_VALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Valid character mask. 
"
      end

      attribute 1110786 "MASK_XML11_SPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Space character mask. 
"
      end

      attribute 1110914 "MASK_XML11_NAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Name start character mask. 
"
      end

      attribute 1111042 "MASK_XML11_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Name character mask. 
"
      end

      attribute 1111170 "MASK_XML11_CONTROL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 control character mask 
"
      end

      attribute 1111298 "MASK_XML11_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 content for external entities (valid - \"special\" chars - control chars) 
"
      end

      attribute 1111426 "MASK_XML11_NCNAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML namespaces 1.1 NCNameStart 
"
      end

      attribute 1111554 "MASK_XML11_NCNAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML namespaces 1.1 NCName 
"
      end

      attribute 1111682 "MASK_XML11_CONTENT_INTERNAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " MASK_XML11_CONTROL | MASK_XML11_CONTENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 content for internal entities (valid - \"special\" chars) 
"
      end

      extra_member 145026 "initialization"
	
	cpp "" ""
	java "  static {

        // Initializing the Character Flag Array
        // Code generated by: XML11CharGenerator.

        Arrays.fill(XML11CHARS, 1, 9, (byte) 17 ); // Fill 8 of value (byte) 17
        XML11CHARS[9] = 35;
        XML11CHARS[10] = 3;
        Arrays.fill(XML11CHARS, 11, 13, (byte) 17 ); // Fill 2 of value (byte) 17
        XML11CHARS[13] = 3;
        Arrays.fill(XML11CHARS, 14, 32, (byte) 17 ); // Fill 18 of value (byte) 17
        XML11CHARS[32] = 35;
        Arrays.fill(XML11CHARS, 33, 38, (byte) 33 ); // Fill 5 of value (byte) 33
        XML11CHARS[38] = 1;
        Arrays.fill(XML11CHARS, 39, 45, (byte) 33 ); // Fill 6 of value (byte) 33
        Arrays.fill(XML11CHARS, 45, 47, (byte) -87 ); // Fill 2 of value (byte) -87
        XML11CHARS[47] = 33;
        Arrays.fill(XML11CHARS, 48, 58, (byte) -87 ); // Fill 10 of value (byte) -87
        XML11CHARS[58] = 45;
        XML11CHARS[59] = 33;
        XML11CHARS[60] = 1;
        Arrays.fill(XML11CHARS, 61, 65, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(XML11CHARS, 65, 91, (byte) -19 ); // Fill 26 of value (byte) -19
        Arrays.fill(XML11CHARS, 91, 93, (byte) 33 ); // Fill 2 of value (byte) 33
        XML11CHARS[93] = 1;
        XML11CHARS[94] = 33;
        XML11CHARS[95] = -19;
        XML11CHARS[96] = 33;
        Arrays.fill(XML11CHARS, 97, 123, (byte) -19 ); // Fill 26 of value (byte) -19
        Arrays.fill(XML11CHARS, 123, 127, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(XML11CHARS, 127, 133, (byte) 17 ); // Fill 6 of value (byte) 17
        XML11CHARS[133] = 35;
        Arrays.fill(XML11CHARS, 134, 160, (byte) 17 ); // Fill 26 of value (byte) 17
        Arrays.fill(XML11CHARS, 160, 183, (byte) 33 ); // Fill 23 of value (byte) 33
        XML11CHARS[183] = -87;
        Arrays.fill(XML11CHARS, 184, 192, (byte) 33 ); // Fill 8 of value (byte) 33
        Arrays.fill(XML11CHARS, 192, 215, (byte) -19 ); // Fill 23 of value (byte) -19
        XML11CHARS[215] = 33;
        Arrays.fill(XML11CHARS, 216, 247, (byte) -19 ); // Fill 31 of value (byte) -19
        XML11CHARS[247] = 33;
        Arrays.fill(XML11CHARS, 248, 768, (byte) -19 ); // Fill 520 of value (byte) -19
        Arrays.fill(XML11CHARS, 768, 880, (byte) -87 ); // Fill 112 of value (byte) -87
        Arrays.fill(XML11CHARS, 880, 894, (byte) -19 ); // Fill 14 of value (byte) -19
        XML11CHARS[894] = 33;
        Arrays.fill(XML11CHARS, 895, 8192, (byte) -19 ); // Fill 7297 of value (byte) -19
        Arrays.fill(XML11CHARS, 8192, 8204, (byte) 33 ); // Fill 12 of value (byte) 33
        Arrays.fill(XML11CHARS, 8204, 8206, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(XML11CHARS, 8206, 8232, (byte) 33 ); // Fill 26 of value (byte) 33
        XML11CHARS[8232] = 35;
        Arrays.fill(XML11CHARS, 8233, 8255, (byte) 33 ); // Fill 22 of value (byte) 33
        Arrays.fill(XML11CHARS, 8255, 8257, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(XML11CHARS, 8257, 8304, (byte) 33 ); // Fill 47 of value (byte) 33
        Arrays.fill(XML11CHARS, 8304, 8592, (byte) -19 ); // Fill 288 of value (byte) -19
        Arrays.fill(XML11CHARS, 8592, 11264, (byte) 33 ); // Fill 2672 of value (byte) 33
        Arrays.fill(XML11CHARS, 11264, 12272, (byte) -19 ); // Fill 1008 of value (byte) -19
        Arrays.fill(XML11CHARS, 12272, 12289, (byte) 33 ); // Fill 17 of value (byte) 33
        Arrays.fill(XML11CHARS, 12289, 55296, (byte) -19 ); // Fill 43007 of value (byte) -19
        Arrays.fill(XML11CHARS, 57344, 63744, (byte) 33 ); // Fill 6400 of value (byte) 33
        Arrays.fill(XML11CHARS, 63744, 64976, (byte) -19 ); // Fill 1232 of value (byte) -19
        Arrays.fill(XML11CHARS, 64976, 65008, (byte) 33 ); // Fill 32 of value (byte) 33
        Arrays.fill(XML11CHARS, 65008, 65534, (byte) -19 ); // Fill 526 of value (byte) -19

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5096578 "isXML11Space"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <clinit>()

 Public static methods


Returns true if the specified character is a space character
as amdended in the XML 1.1 specification.

@param c The character to check.
"
      end

      operation 5096706 "isXML11Valid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Space(int):boolean

Returns true if the specified character is valid. This method
also checks the surrogate character range from 0x10000 to 0x10FFFF.
<p>
If the program chooses to apply the mask directly to the
<code>XML11CHARS</code> array, then they are responsible for checking
the surrogate character range.

@param c The character to check.
"
      end

      operation 5096834 "isXML11Invalid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Valid(int):boolean

Returns true if the specified character is invalid.

@param c The character to check.
"
      end

      operation 5096962 "isXML11ValidLiteral"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Invalid(int):boolean

Returns true if the specified character is valid and permitted outside
of a character reference.
That is, this method will return false for the same set as
isXML11Valid, except it also reports false for \"control characters\".

@param c The character to check.
"
      end

      operation 5097090 "isXML11Content"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidLiteral(int):boolean

Returns true if the specified character can be considered
content in an external parsed entity.

@param c The character to check.
"
      end

      operation 5097218 "isXML11InternalEntityContent"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Content(int):boolean

Returns true if the specified character can be considered
content in an internal parsed entity.

@param c The character to check.
"
      end

      operation 5097346 "isXML11NameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11InternalEntityContent(int):boolean

Returns true if the specified character is a valid name start
character as defined by production [4] in the XML 1.1
specification.

@param c The character to check.
"
      end

      operation 5097474 "isXML11Name"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11NameStart(int):boolean

Returns true if the specified character is a valid name
character as defined by production [4a] in the XML 1.1
specification.

@param c The character to check.
"
      end

      operation 5097602 "isXML11NCNameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Name(int):boolean

Returns true if the specified character is a valid NCName start
character as defined by production [4] in Namespaces in XML
1.1 recommendation.

@param c The character to check.
"
      end

      operation 5097730 "isXML11NCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11NCNameStart(int):boolean

Returns true if the specified character is a valid NCName
character as defined by production [5] in Namespaces in XML
1.1 recommendation.

@param c The character to check.
"
      end

      operation 5097858 "isXML11NameHighSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11NCName(int):boolean

Returns whether the given character is a valid
high surrogate for a name character. This includes
all high surrogates for characters [0x10000-0xEFFFF].
In other words everything excluding planes 15 and 16.

@param c The character to check.
"
      end

      operation 5097986 "isXML11ValidName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[5] Name ::= NameStartChar NameChar*


Check to see if a string is a valid Name according to [5]
in the XML 1.1 Recommendation

@param name string to check
@return true if name is a valid Name
"
      end

      operation 5098114 "isXML11ValidNCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "ncName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidName(String):boolean

from the namespace 1.1 rec
[4] NCName ::= NCNameStartChar NCNameChar*


Check to see if a string is a valid NCName according to [4]
from the XML Namespaces 1.1 Recommendation

@param ncName string to check
@return true if name is a valid NCName
"
      end

      operation 5098242 "isXML11ValidNmtoken"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nmtoken" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidNCName(String):boolean

[7] Nmtoken ::= (NameChar)+


Check to see if a string is a valid Nmtoken according to [7]
in the XML 1.1 Recommendation

@param nmtoken string to check
@return true if nmtoken is a valid Nmtoken
"
      end
    end

    class 736898 "XMLCatalogResolver"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>The catalog resolver handles the resolution of external
identifiers and URI references through XML catalogs. This
component supports XML catalogs defined by the
<a href=\"http://www.oasis-open.org/committees/entity/spec.html\">
OASIS XML Catalogs Specification</a>. It encapsulates the
<a href=\"http://xml.apache.org/commons/\">XML Commons</a> resolver.
An instance of this class may be registered on the parser
as a SAX entity resolver, as a DOM LSResourceResolver or
as an XNI entity resolver by setting the property
(http://apache.org/xml/properties/internal/entity-resolver).</p>

<p>It is intended that this class may be used standalone to perform
catalog resolution outside of a parsing context. It may be shared
between several parsers and the application.</p>

@author Michael Glavassevich, IBM

"
      classrelation 2203010 // <realization>
	relation 2203010 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2203010 // <realization>
	  b parent class_ref 658434 // XMLEntityResolver
      end

      classrelation 2203138 // <realization>
	relation 2203138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2203138 // <realization>
	  b parent class_ref 728194 // EntityResolver2
      end

      classrelation 2203266 // <realization>
	relation 2203266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2203266 // <realization>
	  b parent class_ref 727810 // LSResourceResolver
      end

      classrelation 2203394 // fResolverCatalogManager (<unidirectional association>)
	relation 2203394 --->
	  a role_name "fResolverCatalogManager" init_value " null" private
	    comment " Internal catalog manager for Apache catalogs. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2203394 // fResolverCatalogManager (<unidirectional association>)
	  b parent class_ref 737026 // CatalogManager
      end

      classrelation 2203522 // fCatalog (<unidirectional association>)
	relation 2203522 --->
	  a role_name "fCatalog" init_value " null" private
	    comment " Internal catalog structure. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2203522 // fCatalog (<unidirectional association>)
	  b parent class_ref 737154 // Catalog
      end

      classrelation 2203650 // fCatalogsList (<unidirectional association>)
	relation 2203650 --->
	  a role_name "fCatalogsList" multiplicity "[]" init_value " null" private
	    comment " An array of catalog URIs. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2203650 // fCatalogsList (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1113730 "fCatalogsChanged"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether the list of catalogs has
changed since it was processed.

"
      end

      attribute 1113858 "fPreferPublic"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Application specified prefer public setting. *
"
      end

      attribute 1113986 "fUseLiteralSystemId"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether the application desires that
the parser or some other component performing catalog
resolution should use the literal system identifier
instead of the expanded system identifier.

"
      end

      operation 5107074 "XMLCatalogResolver"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a catalog resolver with a default configuration.</p>
"
      end

      operation 5107202 "XMLCatalogResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "catalogs" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a catalog resolver with the given
list of entry files.</p>

@param catalogs an ordered array list of absolute URIs
"
      end

      operation 5107330 "XMLCatalogResolver"
	public explicit_return_type ""
	nparams 2
	  param inout name "catalogs" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "preferPublic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a catalog resolver with the given
list of entry files and the preference for whether
system or public matches are preferred.</p>

@param catalogs an ordered array list of absolute URIs
@param preferPublic the prefer public setting
"
      end

      operation 5107458 "getCatalogList"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the initial list of catalog entry files.</p>

@return the initial list of catalog entry files
"
      end

      operation 5107586 "setCatalogList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "catalogs" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the initial list of catalog entry files.
If there were any catalog mappings cached from
the previous list they will be replaced by catalog
mappings from the new list the next time the catalog
is queried.</p>

@param catalogs an ordered array list of absolute URIs
"
      end

      operation 5107714 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Forces the cache of catalog mappings to be cleared.</p>
"
      end

      operation 5107842 "getPreferPublic"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the preference for whether system or public
matches are preferred. This is used in the absence
of any occurence of the <code>prefer</code> attribute
on the <code>catalog</code> entry of a catalog. If this
property has not yet been explicitly set its value is
<code>true</code>.</p>

@return the prefer public setting
"
      end

      operation 5107970 "setPreferPublic"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preferPublic" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the preference for whether system or public
matches are preferred. This is used in the absence
of any occurence of the <code>prefer</code> attribute
on the <code>catalog</code> entry of a catalog.</p>

@param preferPublic the prefer public setting
"
      end

      operation 5108098 "getUseLiteralSystemId"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the preference for whether the literal system
identifier should be used when resolving system
identifiers when both it and the expanded system
identifier are available. If this property has not yet
been explicitly set its value is <code>true</code>.</p>

@return the preference for using literal system identifers
for catalog resolution

@see #setUseLiteralSystemId
"
      end

      operation 5108226 "setUseLiteralSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "useLiteralSystemId" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the preference for whether the literal system
identifier should be used when resolving system
identifiers when both it and the expanded system
identifier are available.</p>

<p>The literal system identifier is the URI as it was
provided before absolutization. It may be embedded within
an entity. It may be provided externally or it may be the
result of redirection. For example, redirection may
have come from the protocol level through HTTP or from
an application's entity resolver.</p>

<p>The expanded system identifier is an absolute URI
which is the result of resolving the literal system
identifier against a base URI.</p>

@param useLiteralSystemId the preference for using
literal system identifers for catalog resolution
"
      end

      operation 5108354 "resolveEntity"
	public return_type class_ref 606594 // InputSource
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Resolves an external entity. If the entity cannot be
resolved, this method should return <code>null</code>. This
method returns an input source if an entry was found in the
catalog for the given external identifier. It should be
overrided if other behaviour is required.</p>

@param publicId the public identifier, or <code>null</code> if none was supplied
@param systemId the system identifier

@throws SAXException any SAX exception, possibly wrapping another exception
@throws IOException thrown if some i/o error occurs
"
      end

      operation 5108482 "resolveEntity"
	public return_type class_ref 606594 // InputSource
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "baseURI" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Resolves an external entity. If the entity cannot be
resolved, this method should return <code>null</code>. This
method returns an input source if an entry was found in the
catalog for the given external identifier. It should be
overrided if other behaviour is required.</p>

@param name the identifier of the external entity
@param publicId the public identifier, or <code>null</code> if none was supplied
@param baseURI the URI with respect to which relative systemIDs are interpreted.
@param systemId the system identifier

@throws SAXException any SAX exception, possibly wrapping another exception
@throws IOException thrown if some i/o error occurs
"
      end

      operation 5108610 "getExternalSubset"
	public return_type class_ref 606594 // InputSource
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "baseURI" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 379266 // SAXException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Locates an external subset for documents which do not explicitly
provide one. This method always returns <code>null</code>. It
should be overrided if other behaviour is required.</p>

@param name the identifier of the document root element
@param baseURI the document's base URI

@throws SAXException any SAX exception, possibly wrapping another exception
@throws IOException thrown if some i/o error occurs
"
      end

      operation 5108738 "resolveResource"
	public return_type class_ref 651906 // LSInput
	nparams 5
	  param inout name "type" type class_ref 128130 // String
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Resolves a resource using the catalog. This method interprets that
the namespace URI corresponds to uri entries in the catalog.
Where both a namespace and an external identifier exist, the namespace
takes precedence.</p>

@param type the type of the resource being resolved
@param namespaceURI the namespace of the resource being resolved,
or <code>null</code> if none was supplied
@param publicId the public identifier of the resource being resolved,
or <code>null</code> if none was supplied
@param systemId the system identifier of the resource being resolved,
or <code>null</code> if none was supplied
@param baseURI the absolute base URI of the resource being parsed,
or <code>null</code> if there is no base URI
"
      end

      operation 5108866 "resolveEntity"
	public return_type class_ref 657666 // XMLInputSource
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	nexceptions 2
	  exception class_ref 657794 // XNIException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Resolves an external entity. If the entity cannot be
resolved, this method should return <code>null</code>. This
method only calls <code>resolveIdentifier</code> and returns
an input source if an entry was found in the catalog. It
should be overrided if other behaviour is required.</p>

@param resourceIdentifier location of the XML resource to resolve

@throws XNIException thrown on general error
@throws IOException thrown if some i/o error occurs
"
      end

      operation 5108994 "resolveIdentifier"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "resourceIdentifier" type class_ref 661634 // XMLResourceIdentifier
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Resolves an identifier using the catalog. This method interprets that
the namespace of the identifier corresponds to uri entries in the catalog.
Where both a namespace and an external identifier exist, the namespace
takes precedence.</p>

@param resourceIdentifier the identifier to resolve

@throws XNIException thrown on general error
@throws IOException thrown if some i/o error occurs
"
      end

      operation 5109122 "resolveSystem"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the URI mapping in the catalog for the given
external identifier or <code>null</code> if no mapping
exists. If the system identifier is an URN in the
<code>publicid</code> namespace it is converted into
a public identifier by URN \"unwrapping\" as specified
in the XML Catalogs specification.</p>

@param systemId the system identifier to locate in the catalog

@return the mapped URI or <code>null</code> if no mapping
was found in the catalog

@throws IOException if an i/o error occurred while reading
the catalog
"
      end

      operation 5109250 "resolvePublic"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the URI mapping in the catalog for the given
external identifier or <code>null</code> if no mapping
exists. Public identifiers are normalized before
comparison.</p>

@param publicId the public identifier to locate in the catalog
@param systemId the system identifier to locate in the catalog

@return the mapped URI or <code>null</code> if no mapping
was found in the catalog

@throws IOException if an i/o error occurred while reading
the catalog
"
      end

      operation 5109378 "resolveURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the URI mapping in the catalog for the given URI
reference or <code>null</code> if no mapping exists.
URI comparison is case sensitive. If the URI reference
is an URN in the <code>publicid</code> namespace
it is converted into a public identifier by URN \"unwrapping\"
as specified in the XML Catalogs specification and then
resolution is performed following the semantics of
external identifier resolution.</p>

@param uri the URI to locate in the catalog

@return the mapped URI or <code>null</code> if no mapping
was found in the catalog

@throws IOException if an i/o error occurred while reading
the catalog
"
      end

      operation 5109506 "init"
	private explicit_return_type "void"
	nparams 2
	  param inout name "catalogs" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "preferPublic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialization. Create a CatalogManager and set all
the properties upfront. This prevents JVM wide system properties
or a property file somewhere in the environment from affecting
the behaviour of this catalog resolver.
"
      end

      operation 5109634 "parseCatalogs"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instruct the <code>Catalog</code> to parse each of the
catalogs in the list. Only the first catalog will actually be
parsed immediately. The others will be queued and read if
they are needed later.
"
      end

      operation 5109762 "attachReaderToCatalog"
	private explicit_return_type "void"
	nparams 1
	  param inout name "catalog" type class_ref 737154 // Catalog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attaches the reader to the catalog.
"
      end
    end

    class 737282 "XMLChar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines the basic XML character properties. The data
in this class can be used to verify that a character is a valid
XML character or if the character is a space, name start, or name
character.
<p>
A series of convenience methods are supplied to ease the burden
of the developer. Because inlining the checks can improve per
character performance, the tables of character properties are
public. Using the character as an index into the <code>CHARS</code>
array and applying the appropriate mask flag (e.g.
<code>MASK_VALID</code>), yields the same results as calling the
convenience methods. There is one exception: check the comments
for the <code>isValid</code> method for details.

@author Glenn Marcy, IBM
@author Andy Clark, IBM
@author Eric Ye, IBM
@author Arnaud  Le Hors, IBM
@author Michael Glavassevich, IBM
@author Rahul Srivastava, Sun Microsystems Inc.

@version $Id: XMLChar.java,v 1.7 2010-11-01 04:40:15 joehw Exp $
"
      attribute 1114114 "CHARS"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[1 << 16]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Character flags. 
"
      end

      attribute 1114242 "MASK_VALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid character mask. 
"
      end

      attribute 1114370 "MASK_SPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Space character mask. 
"
      end

      attribute 1114498 "MASK_NAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Name start character mask. 
"
      end

      attribute 1114626 "MASK_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Name character mask. 
"
      end

      attribute 1114754 "MASK_PUBID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Pubid character mask. 
"
      end

      attribute 1114882 "MASK_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Content character mask. Special characters are those that can
be considered the start of markup, such as '&lt;' and '&amp;'.
The various newline characters are considered special as well.
All other valid XML characters can be considered content.
<p>
This is an optimization for the inner loop of character scanning.

"
      end

      attribute 1115010 "MASK_NCNAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NCName start character mask. 
"
      end

      attribute 1115138 "MASK_NCNAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NCName character mask. 
"
      end

      extra_member 145154 "initialization"
	
	cpp "" ""
	java "  static {

        // Initializing the Character Flag Array
        // Code generated by: XMLCharGenerator.

        CHARS[9] = 35;
        CHARS[10] = 19;
        CHARS[13] = 19;
        CHARS[32] = 51;
        CHARS[33] = 49;
        CHARS[34] = 33;
        Arrays.fill(CHARS, 35, 38, (byte) 49 ); // Fill 3 of value (byte) 49
        CHARS[38] = 1;
        Arrays.fill(CHARS, 39, 45, (byte) 49 ); // Fill 6 of value (byte) 49
        Arrays.fill(CHARS, 45, 47, (byte) -71 ); // Fill 2 of value (byte) -71
        CHARS[47] = 49;
        Arrays.fill(CHARS, 48, 58, (byte) -71 ); // Fill 10 of value (byte) -71
        CHARS[58] = 61;
        CHARS[59] = 49;
        CHARS[60] = 1;
        CHARS[61] = 49;
        CHARS[62] = 33;
        Arrays.fill(CHARS, 63, 65, (byte) 49 ); // Fill 2 of value (byte) 49
        Arrays.fill(CHARS, 65, 91, (byte) -3 ); // Fill 26 of value (byte) -3
        Arrays.fill(CHARS, 91, 93, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[93] = 1;
        CHARS[94] = 33;
        CHARS[95] = -3;
        CHARS[96] = 33;
        Arrays.fill(CHARS, 97, 123, (byte) -3 ); // Fill 26 of value (byte) -3
        Arrays.fill(CHARS, 123, 183, (byte) 33 ); // Fill 60 of value (byte) 33
        CHARS[183] = -87;
        Arrays.fill(CHARS, 184, 192, (byte) 33 ); // Fill 8 of value (byte) 33
        Arrays.fill(CHARS, 192, 215, (byte) -19 ); // Fill 23 of value (byte) -19
        CHARS[215] = 33;
        Arrays.fill(CHARS, 216, 247, (byte) -19 ); // Fill 31 of value (byte) -19
        CHARS[247] = 33;
        Arrays.fill(CHARS, 248, 306, (byte) -19 ); // Fill 58 of value (byte) -19
        Arrays.fill(CHARS, 306, 308, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 308, 319, (byte) -19 ); // Fill 11 of value (byte) -19
        Arrays.fill(CHARS, 319, 321, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 321, 329, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[329] = 33;
        Arrays.fill(CHARS, 330, 383, (byte) -19 ); // Fill 53 of value (byte) -19
        CHARS[383] = 33;
        Arrays.fill(CHARS, 384, 452, (byte) -19 ); // Fill 68 of value (byte) -19
        Arrays.fill(CHARS, 452, 461, (byte) 33 ); // Fill 9 of value (byte) 33
        Arrays.fill(CHARS, 461, 497, (byte) -19 ); // Fill 36 of value (byte) -19
        Arrays.fill(CHARS, 497, 500, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 500, 502, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 502, 506, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 506, 536, (byte) -19 ); // Fill 30 of value (byte) -19
        Arrays.fill(CHARS, 536, 592, (byte) 33 ); // Fill 56 of value (byte) 33
        Arrays.fill(CHARS, 592, 681, (byte) -19 ); // Fill 89 of value (byte) -19
        Arrays.fill(CHARS, 681, 699, (byte) 33 ); // Fill 18 of value (byte) 33
        Arrays.fill(CHARS, 699, 706, (byte) -19 ); // Fill 7 of value (byte) -19
        Arrays.fill(CHARS, 706, 720, (byte) 33 ); // Fill 14 of value (byte) 33
        Arrays.fill(CHARS, 720, 722, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 722, 768, (byte) 33 ); // Fill 46 of value (byte) 33
        Arrays.fill(CHARS, 768, 838, (byte) -87 ); // Fill 70 of value (byte) -87
        Arrays.fill(CHARS, 838, 864, (byte) 33 ); // Fill 26 of value (byte) 33
        Arrays.fill(CHARS, 864, 866, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 866, 902, (byte) 33 ); // Fill 36 of value (byte) 33
        CHARS[902] = -19;
        CHARS[903] = -87;
        Arrays.fill(CHARS, 904, 907, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[907] = 33;
        CHARS[908] = -19;
        CHARS[909] = 33;
        Arrays.fill(CHARS, 910, 930, (byte) -19 ); // Fill 20 of value (byte) -19
        CHARS[930] = 33;
        Arrays.fill(CHARS, 931, 975, (byte) -19 ); // Fill 44 of value (byte) -19
        CHARS[975] = 33;
        Arrays.fill(CHARS, 976, 983, (byte) -19 ); // Fill 7 of value (byte) -19
        Arrays.fill(CHARS, 983, 986, (byte) 33 ); // Fill 3 of value (byte) 33
        CHARS[986] = -19;
        CHARS[987] = 33;
        CHARS[988] = -19;
        CHARS[989] = 33;
        CHARS[990] = -19;
        CHARS[991] = 33;
        CHARS[992] = -19;
        CHARS[993] = 33;
        Arrays.fill(CHARS, 994, 1012, (byte) -19 ); // Fill 18 of value (byte) -19
        Arrays.fill(CHARS, 1012, 1025, (byte) 33 ); // Fill 13 of value (byte) 33
        Arrays.fill(CHARS, 1025, 1037, (byte) -19 ); // Fill 12 of value (byte) -19
        CHARS[1037] = 33;
        Arrays.fill(CHARS, 1038, 1104, (byte) -19 ); // Fill 66 of value (byte) -19
        CHARS[1104] = 33;
        Arrays.fill(CHARS, 1105, 1117, (byte) -19 ); // Fill 12 of value (byte) -19
        CHARS[1117] = 33;
        Arrays.fill(CHARS, 1118, 1154, (byte) -19 ); // Fill 36 of value (byte) -19
        CHARS[1154] = 33;
        Arrays.fill(CHARS, 1155, 1159, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 1159, 1168, (byte) 33 ); // Fill 9 of value (byte) 33
        Arrays.fill(CHARS, 1168, 1221, (byte) -19 ); // Fill 53 of value (byte) -19
        Arrays.fill(CHARS, 1221, 1223, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 1223, 1225, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 1225, 1227, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 1227, 1229, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 1229, 1232, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 1232, 1260, (byte) -19 ); // Fill 28 of value (byte) -19
        Arrays.fill(CHARS, 1260, 1262, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 1262, 1270, (byte) -19 ); // Fill 8 of value (byte) -19
        Arrays.fill(CHARS, 1270, 1272, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 1272, 1274, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 1274, 1329, (byte) 33 ); // Fill 55 of value (byte) 33
        Arrays.fill(CHARS, 1329, 1367, (byte) -19 ); // Fill 38 of value (byte) -19
        Arrays.fill(CHARS, 1367, 1369, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[1369] = -19;
        Arrays.fill(CHARS, 1370, 1377, (byte) 33 ); // Fill 7 of value (byte) 33
        Arrays.fill(CHARS, 1377, 1415, (byte) -19 ); // Fill 38 of value (byte) -19
        Arrays.fill(CHARS, 1415, 1425, (byte) 33 ); // Fill 10 of value (byte) 33
        Arrays.fill(CHARS, 1425, 1442, (byte) -87 ); // Fill 17 of value (byte) -87
        CHARS[1442] = 33;
        Arrays.fill(CHARS, 1443, 1466, (byte) -87 ); // Fill 23 of value (byte) -87
        CHARS[1466] = 33;
        Arrays.fill(CHARS, 1467, 1470, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[1470] = 33;
        CHARS[1471] = -87;
        CHARS[1472] = 33;
        Arrays.fill(CHARS, 1473, 1475, (byte) -87 ); // Fill 2 of value (byte) -87
        CHARS[1475] = 33;
        CHARS[1476] = -87;
        Arrays.fill(CHARS, 1477, 1488, (byte) 33 ); // Fill 11 of value (byte) 33
        Arrays.fill(CHARS, 1488, 1515, (byte) -19 ); // Fill 27 of value (byte) -19
        Arrays.fill(CHARS, 1515, 1520, (byte) 33 ); // Fill 5 of value (byte) 33
        Arrays.fill(CHARS, 1520, 1523, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 1523, 1569, (byte) 33 ); // Fill 46 of value (byte) 33
        Arrays.fill(CHARS, 1569, 1595, (byte) -19 ); // Fill 26 of value (byte) -19
        Arrays.fill(CHARS, 1595, 1600, (byte) 33 ); // Fill 5 of value (byte) 33
        CHARS[1600] = -87;
        Arrays.fill(CHARS, 1601, 1611, (byte) -19 ); // Fill 10 of value (byte) -19
        Arrays.fill(CHARS, 1611, 1619, (byte) -87 ); // Fill 8 of value (byte) -87
        Arrays.fill(CHARS, 1619, 1632, (byte) 33 ); // Fill 13 of value (byte) 33
        Arrays.fill(CHARS, 1632, 1642, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 1642, 1648, (byte) 33 ); // Fill 6 of value (byte) 33
        CHARS[1648] = -87;
        Arrays.fill(CHARS, 1649, 1720, (byte) -19 ); // Fill 71 of value (byte) -19
        Arrays.fill(CHARS, 1720, 1722, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 1722, 1727, (byte) -19 ); // Fill 5 of value (byte) -19
        CHARS[1727] = 33;
        Arrays.fill(CHARS, 1728, 1743, (byte) -19 ); // Fill 15 of value (byte) -19
        CHARS[1743] = 33;
        Arrays.fill(CHARS, 1744, 1748, (byte) -19 ); // Fill 4 of value (byte) -19
        CHARS[1748] = 33;
        CHARS[1749] = -19;
        Arrays.fill(CHARS, 1750, 1765, (byte) -87 ); // Fill 15 of value (byte) -87
        Arrays.fill(CHARS, 1765, 1767, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 1767, 1769, (byte) -87 ); // Fill 2 of value (byte) -87
        CHARS[1769] = 33;
        Arrays.fill(CHARS, 1770, 1774, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 1774, 1776, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 1776, 1786, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 1786, 2305, (byte) 33 ); // Fill 519 of value (byte) 33
        Arrays.fill(CHARS, 2305, 2308, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[2308] = 33;
        Arrays.fill(CHARS, 2309, 2362, (byte) -19 ); // Fill 53 of value (byte) -19
        Arrays.fill(CHARS, 2362, 2364, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[2364] = -87;
        CHARS[2365] = -19;
        Arrays.fill(CHARS, 2366, 2382, (byte) -87 ); // Fill 16 of value (byte) -87
        Arrays.fill(CHARS, 2382, 2385, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2385, 2389, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 2389, 2392, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2392, 2402, (byte) -19 ); // Fill 10 of value (byte) -19
        Arrays.fill(CHARS, 2402, 2404, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 2404, 2406, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2406, 2416, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 2416, 2433, (byte) 33 ); // Fill 17 of value (byte) 33
        Arrays.fill(CHARS, 2433, 2436, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[2436] = 33;
        Arrays.fill(CHARS, 2437, 2445, (byte) -19 ); // Fill 8 of value (byte) -19
        Arrays.fill(CHARS, 2445, 2447, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2447, 2449, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2449, 2451, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2451, 2473, (byte) -19 ); // Fill 22 of value (byte) -19
        CHARS[2473] = 33;
        Arrays.fill(CHARS, 2474, 2481, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[2481] = 33;
        CHARS[2482] = -19;
        Arrays.fill(CHARS, 2483, 2486, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2486, 2490, (byte) -19 ); // Fill 4 of value (byte) -19
        Arrays.fill(CHARS, 2490, 2492, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[2492] = -87;
        CHARS[2493] = 33;
        Arrays.fill(CHARS, 2494, 2501, (byte) -87 ); // Fill 7 of value (byte) -87
        Arrays.fill(CHARS, 2501, 2503, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2503, 2505, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 2505, 2507, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2507, 2510, (byte) -87 ); // Fill 3 of value (byte) -87
        Arrays.fill(CHARS, 2510, 2519, (byte) 33 ); // Fill 9 of value (byte) 33
        CHARS[2519] = -87;
        Arrays.fill(CHARS, 2520, 2524, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 2524, 2526, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[2526] = 33;
        Arrays.fill(CHARS, 2527, 2530, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 2530, 2532, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 2532, 2534, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2534, 2544, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 2544, 2546, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2546, 2562, (byte) 33 ); // Fill 16 of value (byte) 33
        CHARS[2562] = -87;
        Arrays.fill(CHARS, 2563, 2565, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2565, 2571, (byte) -19 ); // Fill 6 of value (byte) -19
        Arrays.fill(CHARS, 2571, 2575, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 2575, 2577, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2577, 2579, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2579, 2601, (byte) -19 ); // Fill 22 of value (byte) -19
        CHARS[2601] = 33;
        Arrays.fill(CHARS, 2602, 2609, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[2609] = 33;
        Arrays.fill(CHARS, 2610, 2612, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[2612] = 33;
        Arrays.fill(CHARS, 2613, 2615, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[2615] = 33;
        Arrays.fill(CHARS, 2616, 2618, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2618, 2620, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[2620] = -87;
        CHARS[2621] = 33;
        Arrays.fill(CHARS, 2622, 2627, (byte) -87 ); // Fill 5 of value (byte) -87
        Arrays.fill(CHARS, 2627, 2631, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 2631, 2633, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 2633, 2635, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2635, 2638, (byte) -87 ); // Fill 3 of value (byte) -87
        Arrays.fill(CHARS, 2638, 2649, (byte) 33 ); // Fill 11 of value (byte) 33
        Arrays.fill(CHARS, 2649, 2653, (byte) -19 ); // Fill 4 of value (byte) -19
        CHARS[2653] = 33;
        CHARS[2654] = -19;
        Arrays.fill(CHARS, 2655, 2662, (byte) 33 ); // Fill 7 of value (byte) 33
        Arrays.fill(CHARS, 2662, 2674, (byte) -87 ); // Fill 12 of value (byte) -87
        Arrays.fill(CHARS, 2674, 2677, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 2677, 2689, (byte) 33 ); // Fill 12 of value (byte) 33
        Arrays.fill(CHARS, 2689, 2692, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[2692] = 33;
        Arrays.fill(CHARS, 2693, 2700, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[2700] = 33;
        CHARS[2701] = -19;
        CHARS[2702] = 33;
        Arrays.fill(CHARS, 2703, 2706, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[2706] = 33;
        Arrays.fill(CHARS, 2707, 2729, (byte) -19 ); // Fill 22 of value (byte) -19
        CHARS[2729] = 33;
        Arrays.fill(CHARS, 2730, 2737, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[2737] = 33;
        Arrays.fill(CHARS, 2738, 2740, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[2740] = 33;
        Arrays.fill(CHARS, 2741, 2746, (byte) -19 ); // Fill 5 of value (byte) -19
        Arrays.fill(CHARS, 2746, 2748, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[2748] = -87;
        CHARS[2749] = -19;
        Arrays.fill(CHARS, 2750, 2758, (byte) -87 ); // Fill 8 of value (byte) -87
        CHARS[2758] = 33;
        Arrays.fill(CHARS, 2759, 2762, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[2762] = 33;
        Arrays.fill(CHARS, 2763, 2766, (byte) -87 ); // Fill 3 of value (byte) -87
        Arrays.fill(CHARS, 2766, 2784, (byte) 33 ); // Fill 18 of value (byte) 33
        CHARS[2784] = -19;
        Arrays.fill(CHARS, 2785, 2790, (byte) 33 ); // Fill 5 of value (byte) 33
        Arrays.fill(CHARS, 2790, 2800, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 2800, 2817, (byte) 33 ); // Fill 17 of value (byte) 33
        Arrays.fill(CHARS, 2817, 2820, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[2820] = 33;
        Arrays.fill(CHARS, 2821, 2829, (byte) -19 ); // Fill 8 of value (byte) -19
        Arrays.fill(CHARS, 2829, 2831, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2831, 2833, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2833, 2835, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2835, 2857, (byte) -19 ); // Fill 22 of value (byte) -19
        CHARS[2857] = 33;
        Arrays.fill(CHARS, 2858, 2865, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[2865] = 33;
        Arrays.fill(CHARS, 2866, 2868, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2868, 2870, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2870, 2874, (byte) -19 ); // Fill 4 of value (byte) -19
        Arrays.fill(CHARS, 2874, 2876, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[2876] = -87;
        CHARS[2877] = -19;
        Arrays.fill(CHARS, 2878, 2884, (byte) -87 ); // Fill 6 of value (byte) -87
        Arrays.fill(CHARS, 2884, 2887, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2887, 2889, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 2889, 2891, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 2891, 2894, (byte) -87 ); // Fill 3 of value (byte) -87
        Arrays.fill(CHARS, 2894, 2902, (byte) 33 ); // Fill 8 of value (byte) 33
        Arrays.fill(CHARS, 2902, 2904, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 2904, 2908, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 2908, 2910, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[2910] = 33;
        Arrays.fill(CHARS, 2911, 2914, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 2914, 2918, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 2918, 2928, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 2928, 2946, (byte) 33 ); // Fill 18 of value (byte) 33
        Arrays.fill(CHARS, 2946, 2948, (byte) -87 ); // Fill 2 of value (byte) -87
        CHARS[2948] = 33;
        Arrays.fill(CHARS, 2949, 2955, (byte) -19 ); // Fill 6 of value (byte) -19
        Arrays.fill(CHARS, 2955, 2958, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2958, 2961, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[2961] = 33;
        Arrays.fill(CHARS, 2962, 2966, (byte) -19 ); // Fill 4 of value (byte) -19
        Arrays.fill(CHARS, 2966, 2969, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2969, 2971, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[2971] = 33;
        CHARS[2972] = -19;
        CHARS[2973] = 33;
        Arrays.fill(CHARS, 2974, 2976, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2976, 2979, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2979, 2981, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 2981, 2984, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2984, 2987, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 2987, 2990, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 2990, 2998, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[2998] = 33;
        Arrays.fill(CHARS, 2999, 3002, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 3002, 3006, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3006, 3011, (byte) -87 ); // Fill 5 of value (byte) -87
        Arrays.fill(CHARS, 3011, 3014, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 3014, 3017, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[3017] = 33;
        Arrays.fill(CHARS, 3018, 3022, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 3022, 3031, (byte) 33 ); // Fill 9 of value (byte) 33
        CHARS[3031] = -87;
        Arrays.fill(CHARS, 3032, 3047, (byte) 33 ); // Fill 15 of value (byte) 33
        Arrays.fill(CHARS, 3047, 3056, (byte) -87 ); // Fill 9 of value (byte) -87
        Arrays.fill(CHARS, 3056, 3073, (byte) 33 ); // Fill 17 of value (byte) 33
        Arrays.fill(CHARS, 3073, 3076, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[3076] = 33;
        Arrays.fill(CHARS, 3077, 3085, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[3085] = 33;
        Arrays.fill(CHARS, 3086, 3089, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[3089] = 33;
        Arrays.fill(CHARS, 3090, 3113, (byte) -19 ); // Fill 23 of value (byte) -19
        CHARS[3113] = 33;
        Arrays.fill(CHARS, 3114, 3124, (byte) -19 ); // Fill 10 of value (byte) -19
        CHARS[3124] = 33;
        Arrays.fill(CHARS, 3125, 3130, (byte) -19 ); // Fill 5 of value (byte) -19
        Arrays.fill(CHARS, 3130, 3134, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3134, 3141, (byte) -87 ); // Fill 7 of value (byte) -87
        CHARS[3141] = 33;
        Arrays.fill(CHARS, 3142, 3145, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[3145] = 33;
        Arrays.fill(CHARS, 3146, 3150, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 3150, 3157, (byte) 33 ); // Fill 7 of value (byte) 33
        Arrays.fill(CHARS, 3157, 3159, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 3159, 3168, (byte) 33 ); // Fill 9 of value (byte) 33
        Arrays.fill(CHARS, 3168, 3170, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 3170, 3174, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3174, 3184, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 3184, 3202, (byte) 33 ); // Fill 18 of value (byte) 33
        Arrays.fill(CHARS, 3202, 3204, (byte) -87 ); // Fill 2 of value (byte) -87
        CHARS[3204] = 33;
        Arrays.fill(CHARS, 3205, 3213, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[3213] = 33;
        Arrays.fill(CHARS, 3214, 3217, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[3217] = 33;
        Arrays.fill(CHARS, 3218, 3241, (byte) -19 ); // Fill 23 of value (byte) -19
        CHARS[3241] = 33;
        Arrays.fill(CHARS, 3242, 3252, (byte) -19 ); // Fill 10 of value (byte) -19
        CHARS[3252] = 33;
        Arrays.fill(CHARS, 3253, 3258, (byte) -19 ); // Fill 5 of value (byte) -19
        Arrays.fill(CHARS, 3258, 3262, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3262, 3269, (byte) -87 ); // Fill 7 of value (byte) -87
        CHARS[3269] = 33;
        Arrays.fill(CHARS, 3270, 3273, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[3273] = 33;
        Arrays.fill(CHARS, 3274, 3278, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 3278, 3285, (byte) 33 ); // Fill 7 of value (byte) 33
        Arrays.fill(CHARS, 3285, 3287, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 3287, 3294, (byte) 33 ); // Fill 7 of value (byte) 33
        CHARS[3294] = -19;
        CHARS[3295] = 33;
        Arrays.fill(CHARS, 3296, 3298, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 3298, 3302, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3302, 3312, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 3312, 3330, (byte) 33 ); // Fill 18 of value (byte) 33
        Arrays.fill(CHARS, 3330, 3332, (byte) -87 ); // Fill 2 of value (byte) -87
        CHARS[3332] = 33;
        Arrays.fill(CHARS, 3333, 3341, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[3341] = 33;
        Arrays.fill(CHARS, 3342, 3345, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[3345] = 33;
        Arrays.fill(CHARS, 3346, 3369, (byte) -19 ); // Fill 23 of value (byte) -19
        CHARS[3369] = 33;
        Arrays.fill(CHARS, 3370, 3386, (byte) -19 ); // Fill 16 of value (byte) -19
        Arrays.fill(CHARS, 3386, 3390, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3390, 3396, (byte) -87 ); // Fill 6 of value (byte) -87
        Arrays.fill(CHARS, 3396, 3398, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 3398, 3401, (byte) -87 ); // Fill 3 of value (byte) -87
        CHARS[3401] = 33;
        Arrays.fill(CHARS, 3402, 3406, (byte) -87 ); // Fill 4 of value (byte) -87
        Arrays.fill(CHARS, 3406, 3415, (byte) 33 ); // Fill 9 of value (byte) 33
        CHARS[3415] = -87;
        Arrays.fill(CHARS, 3416, 3424, (byte) 33 ); // Fill 8 of value (byte) 33
        Arrays.fill(CHARS, 3424, 3426, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 3426, 3430, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3430, 3440, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 3440, 3585, (byte) 33 ); // Fill 145 of value (byte) 33
        Arrays.fill(CHARS, 3585, 3631, (byte) -19 ); // Fill 46 of value (byte) -19
        CHARS[3631] = 33;
        CHARS[3632] = -19;
        CHARS[3633] = -87;
        Arrays.fill(CHARS, 3634, 3636, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 3636, 3643, (byte) -87 ); // Fill 7 of value (byte) -87
        Arrays.fill(CHARS, 3643, 3648, (byte) 33 ); // Fill 5 of value (byte) 33
        Arrays.fill(CHARS, 3648, 3654, (byte) -19 ); // Fill 6 of value (byte) -19
        Arrays.fill(CHARS, 3654, 3663, (byte) -87 ); // Fill 9 of value (byte) -87
        CHARS[3663] = 33;
        Arrays.fill(CHARS, 3664, 3674, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 3674, 3713, (byte) 33 ); // Fill 39 of value (byte) 33
        Arrays.fill(CHARS, 3713, 3715, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[3715] = 33;
        CHARS[3716] = -19;
        Arrays.fill(CHARS, 3717, 3719, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 3719, 3721, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[3721] = 33;
        CHARS[3722] = -19;
        Arrays.fill(CHARS, 3723, 3725, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[3725] = -19;
        Arrays.fill(CHARS, 3726, 3732, (byte) 33 ); // Fill 6 of value (byte) 33
        Arrays.fill(CHARS, 3732, 3736, (byte) -19 ); // Fill 4 of value (byte) -19
        CHARS[3736] = 33;
        Arrays.fill(CHARS, 3737, 3744, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[3744] = 33;
        Arrays.fill(CHARS, 3745, 3748, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[3748] = 33;
        CHARS[3749] = -19;
        CHARS[3750] = 33;
        CHARS[3751] = -19;
        Arrays.fill(CHARS, 3752, 3754, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 3754, 3756, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[3756] = 33;
        Arrays.fill(CHARS, 3757, 3759, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[3759] = 33;
        CHARS[3760] = -19;
        CHARS[3761] = -87;
        Arrays.fill(CHARS, 3762, 3764, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 3764, 3770, (byte) -87 ); // Fill 6 of value (byte) -87
        CHARS[3770] = 33;
        Arrays.fill(CHARS, 3771, 3773, (byte) -87 ); // Fill 2 of value (byte) -87
        CHARS[3773] = -19;
        Arrays.fill(CHARS, 3774, 3776, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 3776, 3781, (byte) -19 ); // Fill 5 of value (byte) -19
        CHARS[3781] = 33;
        CHARS[3782] = -87;
        CHARS[3783] = 33;
        Arrays.fill(CHARS, 3784, 3790, (byte) -87 ); // Fill 6 of value (byte) -87
        Arrays.fill(CHARS, 3790, 3792, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 3792, 3802, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 3802, 3864, (byte) 33 ); // Fill 62 of value (byte) 33
        Arrays.fill(CHARS, 3864, 3866, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 3866, 3872, (byte) 33 ); // Fill 6 of value (byte) 33
        Arrays.fill(CHARS, 3872, 3882, (byte) -87 ); // Fill 10 of value (byte) -87
        Arrays.fill(CHARS, 3882, 3893, (byte) 33 ); // Fill 11 of value (byte) 33
        CHARS[3893] = -87;
        CHARS[3894] = 33;
        CHARS[3895] = -87;
        CHARS[3896] = 33;
        CHARS[3897] = -87;
        Arrays.fill(CHARS, 3898, 3902, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3902, 3904, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 3904, 3912, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[3912] = 33;
        Arrays.fill(CHARS, 3913, 3946, (byte) -19 ); // Fill 33 of value (byte) -19
        Arrays.fill(CHARS, 3946, 3953, (byte) 33 ); // Fill 7 of value (byte) 33
        Arrays.fill(CHARS, 3953, 3973, (byte) -87 ); // Fill 20 of value (byte) -87
        CHARS[3973] = 33;
        Arrays.fill(CHARS, 3974, 3980, (byte) -87 ); // Fill 6 of value (byte) -87
        Arrays.fill(CHARS, 3980, 3984, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 3984, 3990, (byte) -87 ); // Fill 6 of value (byte) -87
        CHARS[3990] = 33;
        CHARS[3991] = -87;
        CHARS[3992] = 33;
        Arrays.fill(CHARS, 3993, 4014, (byte) -87 ); // Fill 21 of value (byte) -87
        Arrays.fill(CHARS, 4014, 4017, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 4017, 4024, (byte) -87 ); // Fill 7 of value (byte) -87
        CHARS[4024] = 33;
        CHARS[4025] = -87;
        Arrays.fill(CHARS, 4026, 4256, (byte) 33 ); // Fill 230 of value (byte) 33
        Arrays.fill(CHARS, 4256, 4294, (byte) -19 ); // Fill 38 of value (byte) -19
        Arrays.fill(CHARS, 4294, 4304, (byte) 33 ); // Fill 10 of value (byte) 33
        Arrays.fill(CHARS, 4304, 4343, (byte) -19 ); // Fill 39 of value (byte) -19
        Arrays.fill(CHARS, 4343, 4352, (byte) 33 ); // Fill 9 of value (byte) 33
        CHARS[4352] = -19;
        CHARS[4353] = 33;
        Arrays.fill(CHARS, 4354, 4356, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[4356] = 33;
        Arrays.fill(CHARS, 4357, 4360, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[4360] = 33;
        CHARS[4361] = -19;
        CHARS[4362] = 33;
        Arrays.fill(CHARS, 4363, 4365, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[4365] = 33;
        Arrays.fill(CHARS, 4366, 4371, (byte) -19 ); // Fill 5 of value (byte) -19
        Arrays.fill(CHARS, 4371, 4412, (byte) 33 ); // Fill 41 of value (byte) 33
        CHARS[4412] = -19;
        CHARS[4413] = 33;
        CHARS[4414] = -19;
        CHARS[4415] = 33;
        CHARS[4416] = -19;
        Arrays.fill(CHARS, 4417, 4428, (byte) 33 ); // Fill 11 of value (byte) 33
        CHARS[4428] = -19;
        CHARS[4429] = 33;
        CHARS[4430] = -19;
        CHARS[4431] = 33;
        CHARS[4432] = -19;
        Arrays.fill(CHARS, 4433, 4436, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 4436, 4438, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 4438, 4441, (byte) 33 ); // Fill 3 of value (byte) 33
        CHARS[4441] = -19;
        Arrays.fill(CHARS, 4442, 4447, (byte) 33 ); // Fill 5 of value (byte) 33
        Arrays.fill(CHARS, 4447, 4450, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[4450] = 33;
        CHARS[4451] = -19;
        CHARS[4452] = 33;
        CHARS[4453] = -19;
        CHARS[4454] = 33;
        CHARS[4455] = -19;
        CHARS[4456] = 33;
        CHARS[4457] = -19;
        Arrays.fill(CHARS, 4458, 4461, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 4461, 4463, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 4463, 4466, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 4466, 4468, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[4468] = 33;
        CHARS[4469] = -19;
        Arrays.fill(CHARS, 4470, 4510, (byte) 33 ); // Fill 40 of value (byte) 33
        CHARS[4510] = -19;
        Arrays.fill(CHARS, 4511, 4520, (byte) 33 ); // Fill 9 of value (byte) 33
        CHARS[4520] = -19;
        Arrays.fill(CHARS, 4521, 4523, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[4523] = -19;
        Arrays.fill(CHARS, 4524, 4526, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 4526, 4528, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 4528, 4535, (byte) 33 ); // Fill 7 of value (byte) 33
        Arrays.fill(CHARS, 4535, 4537, (byte) -19 ); // Fill 2 of value (byte) -19
        CHARS[4537] = 33;
        CHARS[4538] = -19;
        CHARS[4539] = 33;
        Arrays.fill(CHARS, 4540, 4547, (byte) -19 ); // Fill 7 of value (byte) -19
        Arrays.fill(CHARS, 4547, 4587, (byte) 33 ); // Fill 40 of value (byte) 33
        CHARS[4587] = -19;
        Arrays.fill(CHARS, 4588, 4592, (byte) 33 ); // Fill 4 of value (byte) 33
        CHARS[4592] = -19;
        Arrays.fill(CHARS, 4593, 4601, (byte) 33 ); // Fill 8 of value (byte) 33
        CHARS[4601] = -19;
        Arrays.fill(CHARS, 4602, 7680, (byte) 33 ); // Fill 3078 of value (byte) 33
        Arrays.fill(CHARS, 7680, 7836, (byte) -19 ); // Fill 156 of value (byte) -19
        Arrays.fill(CHARS, 7836, 7840, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 7840, 7930, (byte) -19 ); // Fill 90 of value (byte) -19
        Arrays.fill(CHARS, 7930, 7936, (byte) 33 ); // Fill 6 of value (byte) 33
        Arrays.fill(CHARS, 7936, 7958, (byte) -19 ); // Fill 22 of value (byte) -19
        Arrays.fill(CHARS, 7958, 7960, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 7960, 7966, (byte) -19 ); // Fill 6 of value (byte) -19
        Arrays.fill(CHARS, 7966, 7968, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 7968, 8006, (byte) -19 ); // Fill 38 of value (byte) -19
        Arrays.fill(CHARS, 8006, 8008, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 8008, 8014, (byte) -19 ); // Fill 6 of value (byte) -19
        Arrays.fill(CHARS, 8014, 8016, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 8016, 8024, (byte) -19 ); // Fill 8 of value (byte) -19
        CHARS[8024] = 33;
        CHARS[8025] = -19;
        CHARS[8026] = 33;
        CHARS[8027] = -19;
        CHARS[8028] = 33;
        CHARS[8029] = -19;
        CHARS[8030] = 33;
        Arrays.fill(CHARS, 8031, 8062, (byte) -19 ); // Fill 31 of value (byte) -19
        Arrays.fill(CHARS, 8062, 8064, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 8064, 8117, (byte) -19 ); // Fill 53 of value (byte) -19
        CHARS[8117] = 33;
        Arrays.fill(CHARS, 8118, 8125, (byte) -19 ); // Fill 7 of value (byte) -19
        CHARS[8125] = 33;
        CHARS[8126] = -19;
        Arrays.fill(CHARS, 8127, 8130, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 8130, 8133, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[8133] = 33;
        Arrays.fill(CHARS, 8134, 8141, (byte) -19 ); // Fill 7 of value (byte) -19
        Arrays.fill(CHARS, 8141, 8144, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 8144, 8148, (byte) -19 ); // Fill 4 of value (byte) -19
        Arrays.fill(CHARS, 8148, 8150, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 8150, 8156, (byte) -19 ); // Fill 6 of value (byte) -19
        Arrays.fill(CHARS, 8156, 8160, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 8160, 8173, (byte) -19 ); // Fill 13 of value (byte) -19
        Arrays.fill(CHARS, 8173, 8178, (byte) 33 ); // Fill 5 of value (byte) 33
        Arrays.fill(CHARS, 8178, 8181, (byte) -19 ); // Fill 3 of value (byte) -19
        CHARS[8181] = 33;
        Arrays.fill(CHARS, 8182, 8189, (byte) -19 ); // Fill 7 of value (byte) -19
        Arrays.fill(CHARS, 8189, 8400, (byte) 33 ); // Fill 211 of value (byte) 33
        Arrays.fill(CHARS, 8400, 8413, (byte) -87 ); // Fill 13 of value (byte) -87
        Arrays.fill(CHARS, 8413, 8417, (byte) 33 ); // Fill 4 of value (byte) 33
        CHARS[8417] = -87;
        Arrays.fill(CHARS, 8418, 8486, (byte) 33 ); // Fill 68 of value (byte) 33
        CHARS[8486] = -19;
        Arrays.fill(CHARS, 8487, 8490, (byte) 33 ); // Fill 3 of value (byte) 33
        Arrays.fill(CHARS, 8490, 8492, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(CHARS, 8492, 8494, (byte) 33 ); // Fill 2 of value (byte) 33
        CHARS[8494] = -19;
        Arrays.fill(CHARS, 8495, 8576, (byte) 33 ); // Fill 81 of value (byte) 33
        Arrays.fill(CHARS, 8576, 8579, (byte) -19 ); // Fill 3 of value (byte) -19
        Arrays.fill(CHARS, 8579, 12293, (byte) 33 ); // Fill 3714 of value (byte) 33
        CHARS[12293] = -87;
        CHARS[12294] = 33;
        CHARS[12295] = -19;
        Arrays.fill(CHARS, 12296, 12321, (byte) 33 ); // Fill 25 of value (byte) 33
        Arrays.fill(CHARS, 12321, 12330, (byte) -19 ); // Fill 9 of value (byte) -19
        Arrays.fill(CHARS, 12330, 12336, (byte) -87 ); // Fill 6 of value (byte) -87
        CHARS[12336] = 33;
        Arrays.fill(CHARS, 12337, 12342, (byte) -87 ); // Fill 5 of value (byte) -87
        Arrays.fill(CHARS, 12342, 12353, (byte) 33 ); // Fill 11 of value (byte) 33
        Arrays.fill(CHARS, 12353, 12437, (byte) -19 ); // Fill 84 of value (byte) -19
        Arrays.fill(CHARS, 12437, 12441, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(CHARS, 12441, 12443, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 12443, 12445, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 12445, 12447, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(CHARS, 12447, 12449, (byte) 33 ); // Fill 2 of value (byte) 33
        Arrays.fill(CHARS, 12449, 12539, (byte) -19 ); // Fill 90 of value (byte) -19
        CHARS[12539] = 33;
        Arrays.fill(CHARS, 12540, 12543, (byte) -87 ); // Fill 3 of value (byte) -87
        Arrays.fill(CHARS, 12543, 12549, (byte) 33 ); // Fill 6 of value (byte) 33
        Arrays.fill(CHARS, 12549, 12589, (byte) -19 ); // Fill 40 of value (byte) -19
        Arrays.fill(CHARS, 12589, 19968, (byte) 33 ); // Fill 7379 of value (byte) 33
        Arrays.fill(CHARS, 19968, 40870, (byte) -19 ); // Fill 20902 of value (byte) -19
        Arrays.fill(CHARS, 40870, 44032, (byte) 33 ); // Fill 3162 of value (byte) 33
        Arrays.fill(CHARS, 44032, 55204, (byte) -19 ); // Fill 11172 of value (byte) -19
        Arrays.fill(CHARS, 55204, 55296, (byte) 33 ); // Fill 92 of value (byte) 33
        Arrays.fill(CHARS, 57344, 65534, (byte) 33 ); // Fill 8190 of value (byte) 33

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5109890 "isSupplemental"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <clinit>()

 Public static methods


Returns true if the specified character is a supplemental character.

@param c The character to check.
"
      end

      operation 5110018 "supplemental"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "h" explicit_type "char"
	  param in name "l" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true the supplemental character corresponding to the given
surrogates.

@param h The high surrogate.
@param l The low surrogate.
"
      end

      operation 5110146 "highSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the high surrogate of a supplemental character

@param c The supplemental character to \"split\".
"
      end

      operation 5110274 "lowSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the low surrogate of a supplemental character

@param c The supplemental character to \"split\".
"
      end

      operation 5110402 "isHighSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given character is a high surrogate

@param c The character to check.
"
      end

      operation 5110530 "isLowSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given character is a low surrogate

@param c The character to check.
"
      end

      operation 5110658 "isValid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified character is valid. This method
also checks the surrogate character range from 0x10000 to 0x10FFFF.
<p>
If the program chooses to apply the mask directly to the
<code>CHARS</code> array, then they are responsible for checking
the surrogate character range.

@param c The character to check.
"
      end

      operation 5110786 "isInvalid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValid(int):boolean

Returns true if the specified character is invalid.

@param c The character to check.
"
      end

      operation 5110914 "isContent"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isInvalid(int):boolean

Returns true if the specified character can be considered content.

@param c The character to check.
"
      end

      operation 5111042 "isMarkup"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isContent(int):boolean

Returns true if the specified character can be considered markup.
Markup characters include '&lt;', '&amp;', and '%'.

@param c The character to check.
"
      end

      operation 5111170 "isSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isMarkup(int):boolean

Returns true if the specified character is a space character
as defined by production [3] in the XML 1.0 specification.

@param c The character to check.
"
      end

      operation 5111298 "isNameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isSpace(int):boolean

Returns true if the specified character is a valid name start
character as defined by production [5] in the XML 1.0
specification.

@param c The character to check.
"
      end

      operation 5111426 "isName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNameStart(int):boolean

Returns true if the specified character is a valid name
character as defined by production [4] in the XML 1.0
specification.

@param c The character to check.
"
      end

      operation 5111554 "isNCNameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isName(int):boolean

Returns true if the specified character is a valid NCName start
character as defined by production [4] in Namespaces in XML
recommendation.

@param c The character to check.
"
      end

      operation 5111682 "isNCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNCNameStart(int):boolean

Returns true if the specified character is a valid NCName
character as defined by production [5] in Namespaces in XML
recommendation.

@param c The character to check.
"
      end

      operation 5111810 "isPubid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNCName(int):boolean

Returns true if the specified character is a valid Pubid
character as defined by production [13] in the XML 1.0
specification.

@param c The character to check.
"
      end

      operation 5111938 "isValidName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isPubid(int):boolean

[5] Name ::= (Letter | '_' | ':') (NameChar)*


Check to see if a string is a valid Name according to [5]
in the XML 1.0 Recommendation

@param name string to check
@return true if name is a valid Name
"
      end

      operation 5112066 "isValidNCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "ncName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidName(String):boolean

from the namespace rec
[4] NCName ::= (Letter | '_') (NCNameChar)*


Check to see if a string is a valid NCName according to [4]
from the XML Namespaces 1.0 Recommendation

@param ncName string to check
@return true if name is a valid NCName
"
      end

      operation 5112194 "isValidNmtoken"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nmtoken" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidNCName(String):boolean

[7] Nmtoken ::= (NameChar)+


Check to see if a string is a valid Nmtoken according to [7]
in the XML 1.0 Recommendation

@param nmtoken string to check
@return true if nmtoken is a valid Nmtoken
"
      end

      operation 5112322 "isValidIANAEncoding"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "ianaEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidName(String):boolean
 encodings

Returns true if the encoding name is a valid IANA encoding.
This method does not verify that there is a decoder available
for this encoding, only that the characters are valid for an
IANA encoding name.

@param ianaEncoding The IANA encoding name.
"
      end

      operation 5112450 "isValidJavaEncoding"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "javaEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidIANAEncoding(String):boolean

Returns true if the encoding name is a valid Java encoding.
This method does not verify that there is a decoder available
for this encoding, only that the characters are valid for an
Java encoding name.

@param javaEncoding The Java encoding name.
"
      end

      operation 5112578 "trim"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidIANAEncoding(String):boolean
 other methods

Trims space characters as defined by production [3] in
the XML 1.0 specification from both ends of the given string.

@param value the string to be trimmed
@return the given string with the space characters trimmed
from both ends
"
      end
    end

    class 737410 "XMLDocumentFilterImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default implementation of {@link XMLDocumentFilter}
that simply passes through events to the next component.

<p>
Can be used as a base implementation of other more sophisticated
{@link XMLDocumentFilter}s.

@author
    Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 2203778 // <realization>
	relation 2203778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2203778 // <realization>
	  b parent class_ref 666754 // XMLDocumentFilter
      end

      classrelation 2203906 // next (<unidirectional association>)
	relation 2203906 --->
	  a role_name "next" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2203906 // next (<unidirectional association>)
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      classrelation 2204034 // source (<unidirectional association>)
	relation 2204034 --->
	  a role_name "source" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2204034 // source (<unidirectional association>)
	  b parent class_ref 661762 // XMLDocumentSource
      end

      operation 5112706 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5112834 "getDocumentHandler"
	public return_type class_ref 658050 // XMLDocumentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5112962 "setDocumentSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 661762 // XMLDocumentSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113090 "getDocumentSource"
	public return_type class_ref 661762 // XMLDocumentSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113218 "characters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113346 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113474 "doctypeDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "rootElement" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113602 "emptyElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113730 "endCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113858 "endDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5113986 "endElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114114 "endGeneralEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114242 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114370 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114498 "startCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114626 "startDocument"
	public explicit_return_type "void"
	nparams 4
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 660994 // NamespaceContext
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114754 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5114882 "startGeneralEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5115010 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5115138 "xmlDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "standalone" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 737538 "XMLEntityDescriptionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This class is an implementation of the XMLEntityDescription
interface which describes the properties of an entity.</p>

@author Michael Glavassevich, IBM

"
      classrelation 2204162 // <generalisation>
	relation 2204162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2204162 // <generalisation>
	  b parent class_ref 668162 // XMLResourceIdentifierImpl
      end

      classrelation 2204290 // <realization>
	relation 2204290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2204290 // <realization>
	  b parent class_ref 672002 // XMLEntityDescription
      end

      operation 5115266 "XMLEntityDescriptionImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs an empty entity description. "
      end

      operation 5115394 "XMLEntityDescriptionImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs an entity description.

@param entityName The name of the entity.
@param publicId The public identifier.
@param literalSystemId The literal system identifier.
@param baseSystemId The base system identifier.
@param expandedSystemId The expanded system identifier.
"
      end

      operation 5115522 "XMLEntityDescriptionImpl"
	public explicit_return_type ""
	nparams 6
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String,String,String)

Constructs a resource identifier.

@param entityName The name of the entity.
@param publicId The public identifier.
@param literalSystemId The literal system identifier.
@param baseSystemId The base system identifier.
@param expandedSystemId The expanded system identifier.
@param namespace The namespace.
"
      end

      classrelation 2204418 // fEntityName (<unidirectional association>)
	relation 2204418 --->
	  a role_name "fEntityName" protected
	    comment " <init>(String,String,String,String,String,String)

 Data

 The name of the entity. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2204418 // fEntityName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5115650 "setEntityName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


Sets the name of the entity.

@param name the name of the entity
"
      end

      operation 5115778 "getEntityName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEntityName(String)

Returns the name of the entity.

@return the name of the entity
"
      end

      operation 5115906 "setDescription"
	public explicit_return_type "void"
	nparams 5
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityName():String

<p>Sets the values of this entity description.</p>

@param entityName The name of the entity.
@param publicId The public identifier.
@param literalSystemId The literal system identifier.
@param baseSystemId The base system identifier.
@param expandedSystemId The expanded system identifier.
"
      end

      operation 5116034 "setDescription"
	public explicit_return_type "void"
	nparams 6
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalSystemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "expandedSystemId" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDescription(String,String,String,String,String)

<p>Sets the values of this entity description.</p>

@param entityName The name of the entity.
@param publicId The public identifier.
@param literalSystemId The literal system identifier.
@param baseSystemId The base system identifier.
@param expandedSystemId The expanded system identifier.
@param namespace The namespace.
"
      end

      operation 5116162 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDescription(String,String,String,String,String,String)

<p>Clears the values.</p>
"
      end

      operation 5116290 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear()

 Object methods

 Returns a hash code for this object. "
      end

      operation 5116418 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hashCode():int
 Returns a string representation of this object. "
      end
    end

    class 737666 "XMLInputSourceAdaptor"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link Source} that represents an {@link XMLInputSource}.

<p>
Ideally, we should be able to have {@link XMLInputSource}
derive from {@link Source}, but the way
the {@link XMLInputSource#getSystemId()} method works is
different from the way {@link Source#getSystemId()} method works.

<p>
In a long run, we should make them consistent so that we can
get rid of this awkward adaptor class.

@author
    Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 2204802 // <realization>
	relation 2204802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2204802 // <realization>
	  b parent class_ref 627202 // Source
      end

      classrelation 2204930 // fSource (<unidirectional association>)
	relation 2204930 --->
	  a role_name "fSource" const_relation public
	    comment "
the actual source information.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2204930 // fSource (<unidirectional association>)
	  b parent class_ref 657666 // XMLInputSource
      end

      operation 5117058 "XMLInputSourceAdaptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "core" type class_ref 657666 // XMLInputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5117186 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5117314 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 737794 "XMLSymbols"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "All internalized xml symbols. They can be compared using \"==\".

@author Sandy Gao, IBM
"
      operation 5120002 "XMLSymbols"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " public constructor."
      end

      classrelation 2205186 // EMPTY_STRING (<unidirectional association>)
	relation 2205186 --->
	  a role_name "EMPTY_STRING" init_value " \"\".intern()" class_relation const_relation public
	    comment "==========================
 Commonly used strings
==========================

The empty string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205186 // EMPTY_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2205314 // PREFIX_XML (<unidirectional association>)
	relation 2205314 --->
	  a role_name "PREFIX_XML" init_value " \"xml\".intern()" class_relation const_relation public
	    comment "==========================
 Namespace prefixes/uris
==========================

The internalized \"xml\" prefix.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205314 // PREFIX_XML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2205442 // PREFIX_XMLNS (<unidirectional association>)
	relation 2205442 --->
	  a role_name "PREFIX_XMLNS" init_value " \"xmlns\".intern()" class_relation const_relation public
	    comment "
The internalized \"xmlns\" prefix.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205442 // PREFIX_XMLNS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2205570 // fANYSymbol (<unidirectional association>)
	relation 2205570 --->
	  a role_name "fANYSymbol" init_value " \"ANY\".intern()" class_relation const_relation public
	    comment "==========================
 DTD symbols
==========================
 Symbol: \"ANY\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205570 // fANYSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2205698 // fCDATASymbol (<unidirectional association>)
	relation 2205698 --->
	  a role_name "fCDATASymbol" init_value " \"CDATA\".intern()" class_relation const_relation public
	    comment " Symbol: \"CDATA\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205698 // fCDATASymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2205826 // fIDSymbol (<unidirectional association>)
	relation 2205826 --->
	  a role_name "fIDSymbol" init_value " \"ID\".intern()" class_relation const_relation public
	    comment " Symbol: \"ID\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205826 // fIDSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2205954 // fIDREFSymbol (<unidirectional association>)
	relation 2205954 --->
	  a role_name "fIDREFSymbol" init_value " \"IDREF\".intern()" class_relation const_relation public
	    comment " Symbol: \"IDREF\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2205954 // fIDREFSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206082 // fIDREFSSymbol (<unidirectional association>)
	relation 2206082 --->
	  a role_name "fIDREFSSymbol" init_value " \"IDREFS\".intern()" class_relation const_relation public
	    comment " Symbol: \"IDREFS\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206082 // fIDREFSSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206210 // fENTITYSymbol (<unidirectional association>)
	relation 2206210 --->
	  a role_name "fENTITYSymbol" init_value " \"ENTITY\".intern()" class_relation const_relation public
	    comment " Symbol: \"ENTITY\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206210 // fENTITYSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206338 // fENTITIESSymbol (<unidirectional association>)
	relation 2206338 --->
	  a role_name "fENTITIESSymbol" init_value " \"ENTITIES\".intern()" class_relation const_relation public
	    comment " Symbol: \"ENTITIES\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206338 // fENTITIESSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206466 // fNMTOKENSymbol (<unidirectional association>)
	relation 2206466 --->
	  a role_name "fNMTOKENSymbol" init_value " \"NMTOKEN\".intern()" class_relation const_relation public
	    comment " Symbol: \"NMTOKEN\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206466 // fNMTOKENSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206594 // fNMTOKENSSymbol (<unidirectional association>)
	relation 2206594 --->
	  a role_name "fNMTOKENSSymbol" init_value " \"NMTOKENS\".intern()" class_relation const_relation public
	    comment " Symbol: \"NMTOKENS\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206594 // fNMTOKENSSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206722 // fNOTATIONSymbol (<unidirectional association>)
	relation 2206722 --->
	  a role_name "fNOTATIONSymbol" init_value " \"NOTATION\".intern()" class_relation const_relation public
	    comment " Symbol: \"NOTATION\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206722 // fNOTATIONSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206850 // fENUMERATIONSymbol (<unidirectional association>)
	relation 2206850 --->
	  a role_name "fENUMERATIONSymbol" init_value " \"ENUMERATION\".intern()" class_relation const_relation public
	    comment " Symbol: \"ENUMERATION\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206850 // fENUMERATIONSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2206978 // fIMPLIEDSymbol (<unidirectional association>)
	relation 2206978 --->
	  a role_name "fIMPLIEDSymbol" init_value " \"#IMPLIED\".intern()" class_relation const_relation public
	    comment " Symbol: \"#IMPLIED. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206978 // fIMPLIEDSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2207106 // fREQUIREDSymbol (<unidirectional association>)
	relation 2207106 --->
	  a role_name "fREQUIREDSymbol" init_value " \"#REQUIRED\".intern()" class_relation const_relation public
	    comment " Symbol: \"#REQUIRED\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2207106 // fREQUIREDSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2207234 // fFIXEDSymbol (<unidirectional association>)
	relation 2207234 --->
	  a role_name "fFIXEDSymbol" init_value " \"#FIXED\".intern()" class_relation const_relation public
	    comment " Symbol: \"#FIXED\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2207234 // fFIXEDSymbol (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end
  end

  deploymentview 154498 "util"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 454274 "ParserConfigurationSettings"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager;
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
${definition}"
      associated_elems
	class_ref 656898 // ParserConfigurationSettings
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 466946 "XMLResourceIdentifierImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
${definition}"
      associated_elems
	class_ref 668162 // XMLResourceIdentifierImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002, 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 480002 "MessageFormatter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import java.util.MissingResourceException;
${definition}"
      associated_elems
	class_ref 673026 // MessageFormatter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 484738 "NamespaceSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
${definition}"
      associated_elems
	class_ref 702722 // NamespaceSupport
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 488450 "XMLGrammarPoolImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.grammars.Grammar;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
${definition}"
      associated_elems
	class_ref 708482 // XMLGrammarPoolImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496258 "ErrorHandlerWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParseException;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_elems
	class_ref 718082 // ErrorHandlerWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 509954 "AttributesProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import org.xml.sax.AttributeList;
import org.xml.sax.ext.Attributes2;
${definition}"
      associated_elems
	class_ref 720770 // AttributesProxy
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510210 "AugmentationsImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 705154 // AugmentationsImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510338 "DatatypeMessageFormatter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 733698 // DatatypeMessageFormatter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510466 "DefaultErrorHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParseException;
${definition}"
      associated_elems
	class_ref 733826 // DefaultErrorHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510594 "DOMEntityResolverWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import org.w3c.dom.ls.LSResourceResolver;
import org.w3c.dom.ls.LSInput;
import java.io.InputStream;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
${definition}"
      associated_elems
	class_ref 704386 // DOMEntityResolverWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510850 "DOMErrorHandlerWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.DOMErrorImpl;
import com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParseException;
import java.io.PrintWriter;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import org.w3c.dom.DOMError;
import org.w3c.dom.DOMErrorHandler;
import org.w3c.dom.DOMLocator;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 659074 // DOMErrorHandlerWrapper
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510978 "DOMInputSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 717570 // DOMInputSource
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 511106 "DOMUtil"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.AttrImpl;
import com.sun.org.apache.xerces.internal.dom.DocumentImpl;
import com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl;
import java.util.Map;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.ls.LSException;
${definition}"
      associated_elems
	class_ref 734210 // DOMUtil
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 511234 "DraconianErrorHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_elems
	class_ref 734466 // DraconianErrorHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 511362 "EncodingMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 734594 // EncodingMap
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 511490 "EntityResolver2Wrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.io.Reader;
import com.sun.org.apache.xerces.internal.impl.ExternalSubsetResolver;
import com.sun.org.apache.xerces.internal.impl.XMLEntityDescription;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLDTDDescription;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import org.xml.sax.ext.EntityResolver2;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 734722 // EntityResolver2Wrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 511618 "EntityResolverWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.io.Reader;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 734850 // EntityResolverWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 511746 "ErrorHandlerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_elems
	class_ref 734978 // ErrorHandlerProxy
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 511874 "FeatureState"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 657282 // FeatureState
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.


$Id: FeatureState.java 3024 2011-03-01 03:46:13Z joehw $
"
    end

    artifact 512002 "HTTPInputSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import java.io.InputStream;
import java.io.Reader;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 735234 // HTTPInputSource
      end
      comment "Copyright (c) 2007, 2016, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 512130 "IntStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 705794 // IntStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 512258 "JAXPNamespaceContextWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Collections;
import java.util.Enumeration;
import java.util.List;
import java.util.TreeSet;
import java.util.Vector;
import javax.xml.XMLConstants;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
${definition}"
      associated_elems
	class_ref 713730 // JAXPNamespaceContextWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 512386 "LocatorProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import org.xml.sax.Locator;
import org.xml.sax.ext.Locator2;
${definition}"
      associated_elems
	class_ref 735362 // LocatorProxy
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 512514 "LocatorWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import org.xml.sax.Locator;
${definition}"
      associated_elems
	class_ref 735490 // LocatorWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 512770 "NamespaceContextWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
import javax.xml.namespace.NamespaceContext;
${definition}"
      associated_elems
	class_ref 674178 // NamespaceContextWrapper
      end
      comment "Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 512898 "PrimeNumberSequenceGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Random;
${definition}"
      associated_elems
	class_ref 735618 // PrimeNumberSequenceGenerator
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 513026 "PropertyState"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 657410 // PropertyState
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.


$Id: PropertyState.java 3024 2011-03-01 03:46:13Z joehw $
"
    end

    artifact 513154 "SAX2XNI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator;
import com.sun.org.apache.xerces.internal.jaxp.validation.WrappedSAXException;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 735746 // SAX2XNI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 513282 "SAXInputSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.Reader;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
${definition}"
      associated_elems
	class_ref 717442 // SAXInputSource
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 513410 "SAXLocatorWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.Locator;
import org.xml.sax.ext.Locator2;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
${definition}"
      associated_elems
	class_ref 713346 // SAXLocatorWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 513538 "SAXMessageFormatter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 735874 // SAXMessageFormatter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 513666 "SecurityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
${definition}"
      associated_elems
	class_ref 736002 // SecurityManager
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2003 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 513794 "SymbolTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 658690 // SymbolTable
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 513922 "ShadowedSymbolTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 736130 // ShadowedSymbolTable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 514050 "Status"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 735106 // Status
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.


$Id: Status.java 3024 2011-03-01 03:46:13Z joehw $
"
    end

    artifact 514178 "StAXInputSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
${definition}"
      associated_elems
	class_ref 717698 // StAXInputSource
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 514306 "StAXLocationWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.stream.Location;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
${definition}"
      associated_elems
	class_ref 713602 // StAXLocationWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 514434 "SymbolHash"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 679938 // SymbolHash
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 514562 "SynchronizedSymbolTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 732674 // SynchronizedSymbolTable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 514690 "TeeXMLDocumentFilterImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource;
${definition}"
      associated_elems
	class_ref 736514 // TeeXMLDocumentFilterImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 514818 "URI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 672258 // URI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 514946 "XML11Char"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 736642 // XML11Char
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 515074 "XMLAttributesImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.xml.internal.stream.XMLBufferListener;
${definition}"
      associated_elems
	class_ref 670978 // XMLAttributesImpl
      end
      comment "Copyright (c) 2005, 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 515202 "XMLAttributesIteratorImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.NoSuchElementException;
import com.sun.org.apache.xerces.internal.util.XMLAttributesImpl;
${definition}"
      associated_elems
	class_ref 669058 // XMLAttributesIteratorImpl
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 515458 "XMLCatalogResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.ext.EntityResolver2;
import org.w3c.dom.ls.LSInput;
import org.w3c.dom.ls.LSResourceResolver;
import javax.xml.parsers.SAXParserFactory;
import com.sun.org.apache.xerces.internal.dom.DOMInputImpl;
import com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import com.sun.org.apache.xml.internal.resolver.Catalog;
import com.sun.org.apache.xml.internal.resolver.CatalogManager;
import com.sun.org.apache.xml.internal.resolver.readers.OASISXMLCatalogReader;
import com.sun.org.apache.xml.internal.resolver.readers.SAXCatalogReader;
${definition}"
      associated_elems
	class_ref 736898 // XMLCatalogResolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 515586 "XMLChar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 737282 // XMLChar
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 515714 "XMLDocumentFilterImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource;
${definition}"
      associated_elems
	class_ref 737410 // XMLDocumentFilterImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 515842 "XMLEntityDescriptionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.XMLEntityDescription;
${definition}"
      associated_elems
	class_ref 737538 // XMLEntityDescriptionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 515970 "XMLErrorCode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 733954 // XMLErrorCode
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 516098 "XMLInputSourceAdaptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Source;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.util.URI.MalformedURIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
${definition}"
      associated_elems
	class_ref 737666 // XMLInputSourceAdaptor
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 516354 "XMLStringBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLString;
${definition}"
      associated_elems
	class_ref 667650 // XMLStringBuffer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 516482 "XMLSymbols"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 737794 // XMLSymbols
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
