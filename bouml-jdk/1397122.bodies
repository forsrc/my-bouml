class ParserDelegator
!!!11837954.java!!!	setDefaultDTD() : void
        getDefaultDTD();
!!!11838082.java!!!	getDefaultDTD() : DTD
        AppContext appContext = AppContext.getAppContext();

        DTD dtd = (DTD) appContext.get(DTD_KEY);

        if (dtd == null) {
            DTD _dtd = null;
            // (PENDING) Hate having to hard code!
            String nm = "html32";
            try {
                _dtd = DTD.getDTD(nm);
            } catch (IOException e) {
                // (PENDING) UGLY!
                System.out.println("Throw an exception: could not get default dtd: " + nm);
            }
            dtd = createDTD(_dtd, nm);

            appContext.put(DTD_KEY, dtd);
        }

        return dtd;
!!!11838210.java!!!	createDTD(inout dtd : DTD, inout name : String) : DTD

        InputStream in = null;
        boolean debug = true;
        try {
            String path = name + ".bdtd";
            in = getResourceAsStream(path);
            if (in != null) {
                dtd.read(new DataInputStream(new BufferedInputStream(in)));
                dtd.putDTDHash(name, dtd);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return dtd;
!!!11838338.java!!!	ParserDelegator()
        setDefaultDTD();
!!!11838466.java!!!	parse(inout r : Reader, inout cb : HTMLEditorKit::ParserCallback, inout ignoreCharSet : boolean) : void
        new DocumentParser(getDefaultDTD()).parse(r, cb, ignoreCharSet);
!!!11838594.java!!!	getResourceAsStream(in name : String) : InputStream
        return AccessController.doPrivileged(
                new PrivilegedAction<InputStream>() {
                    public InputStream run() {
                        return ParserDelegator.class.getResourceAsStream(name);
                    }
                });
!!!11838722.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();
        setDefaultDTD();
