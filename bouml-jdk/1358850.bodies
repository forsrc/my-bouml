class SliderTrackPainter
!!!11333122.java!!!	SliderTrackPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11333250.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_DISABLED: paintBackgroundDisabled(g); break;
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;

        }
!!!11333378.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11333506.java!!!	paintBackgroundDisabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11333634.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color6);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect5();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);

!!!11333762.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2f), //x
                               decodeY(1.6f), //y
                               decodeX(2.8f) - decodeX(0.2f), //width
                               decodeY(2.8333333f) - decodeY(1.6f), //height
                               8.705882f, 8.705882f); //rounding
        return roundRect;
!!!11333890.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.0f), //x
                               decodeY(1.0f), //y
                               decodeX(3.0f) - decodeX(0.0f), //width
                               decodeY(2.0f) - decodeY(1.0f), //height
                               4.9411764f, 4.9411764f); //rounding
        return roundRect;
!!!11334018.java!!!	decodeRoundRect3() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.29411763f), //x
                               decodeY(1.2f), //y
                               decodeX(2.7058823f) - decodeX(0.29411763f), //width
                               decodeY(2.0f) - decodeY(1.2f), //height
                               4.0f, 4.0f); //rounding
        return roundRect;
!!!11334146.java!!!	decodeRoundRect4() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2f), //x
                               decodeY(1.6f), //y
                               decodeX(2.8f) - decodeX(0.2f), //width
                               decodeY(2.1666667f) - decodeY(1.6f), //height
                               8.705882f, 8.705882f); //rounding
        return roundRect;
!!!11334274.java!!!	decodeRoundRect5() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.28823528f), //x
                               decodeY(1.2f), //y
                               decodeX(2.7f) - decodeX(0.28823528f), //width
                               decodeY(2.0f) - decodeY(1.2f), //height
                               4.0f, 4.0f); //rounding
        return roundRect;
!!!11334402.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.07647059f * h) + y, (0.25f * w) + x, (0.9117647f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color2,
                            decodeColor(color2,color3,0.5f),
                            color3});
!!!11334530.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.25f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.13770053f,0.27540106f,0.63770056f,1.0f },
                new Color[] { color4,
                            decodeColor(color4,color5,0.5f),
                            color5,
                            decodeColor(color5,color3,0.5f),
                            color3});
!!!11334658.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.07647059f * h) + y, (0.25f * w) + x, (0.9117647f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color7,
                            decodeColor(color7,color8,0.5f),
                            color8});
!!!11334786.java!!!	decodeGradient4(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.25f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.13770053f,0.27540106f,0.4906417f,0.7058824f },
                new Color[] { color9,
                            decodeColor(color9,color10,0.5f),
                            color10,
                            decodeColor(color10,color11,0.5f),
                            color11});
