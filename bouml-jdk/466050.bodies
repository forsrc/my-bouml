class VistaMenuItemCheckIcon
!!!2797314.java!!!	VistaMenuItemCheckIcon(inout menuItem : JMenuItem)
                this.type = getType(menuItem);
                this.menuItem = menuItem;
!!!2797442.java!!!	VistaMenuItemCheckIcon(inout type : String)
                this.type = getType(type);
                this.menuItem = null;
!!!2797570.java!!!	getIconHeight() : int
                Icon lafIcon = getLaFIcon();
                if (lafIcon != null) {
                    return lafIcon.getIconHeight();
                }
                Icon icon = getIcon();
                int height = 0;
                if (icon != null) {
                    height = icon.getIconHeight();
                } else {
                    XPStyle xp = XPStyle.getXP();
                    if (xp != null) {
                        Skin skin = xp.getSkin(null, Part.MP_POPUPCHECK);
                        height = skin.getHeight();
                    } else {
                        height = 16;
                    }
                }
                height +=  2 * OFFSET;
                return height;
!!!2797698.java!!!	getIconWidth() : int
                Icon lafIcon = getLaFIcon();
                if (lafIcon != null) {
                    return lafIcon.getIconWidth();
                }
                Icon icon = getIcon();
                int width = 0;
                if (icon != null) {
                    width = icon.getIconWidth() + 2 * OFFSET;
                } else {
                    width = VistaMenuItemCheckIconFactory.getIconWidth();
                }
                return width;
!!!2797826.java!!!	paintIcon(inout c : Component, inout g : Graphics, in x : int, in y : int) : void
                Icon lafIcon = getLaFIcon();
                if (lafIcon != null) {
                    lafIcon.paintIcon(c, g, x, y);
                    return;
                }
                assert menuItem == null || c == menuItem;
                Icon icon = getIcon();
                if (type == JCheckBoxMenuItem.class
                      || type == JRadioButtonMenuItem.class) {
                    AbstractButton b = (AbstractButton) c;
                    if (b.isSelected()) {
                        Part backgroundPart = Part.MP_POPUPCHECKBACKGROUND;
                        Part part = Part.MP_POPUPCHECK;
                        State backgroundState;
                        State state;
                        if (isEnabled(c, null)) {
                            backgroundState =
                                (icon != null) ? State.BITMAP : State.NORMAL;
                            state = (type == JRadioButtonMenuItem.class)
                              ? State.BULLETNORMAL
                              : State.CHECKMARKNORMAL;
                        } else {
                            backgroundState = State.DISABLEDPUSHED;
                            state =
                                (type == JRadioButtonMenuItem.class)
                                  ? State.BULLETDISABLED
                                  : State.CHECKMARKDISABLED;
                        }
                        XPStyle xp = XPStyle.getXP();
                        if (xp != null) {
                            Skin skin;
                            skin =  xp.getSkin(c, backgroundPart);
                            skin.paintSkin(g, x, y,
                                getIconWidth(), getIconHeight(), backgroundState);
                            if (icon == null) {
                                skin = xp.getSkin(c, part);
                                skin.paintSkin(g, x + OFFSET, y + OFFSET, state);
                            }
                        }
                    }
                }
                if (icon != null) {
                    icon.paintIcon(c, g, x + OFFSET, y + OFFSET);
                }
!!!2797954.java!!!	getAccessor(inout menuItem : JMenuItem) : WindowsMenuItemUIAccessor
                WindowsMenuItemUIAccessor rv = null;
                ButtonUI uiObject = (menuItem != null) ? menuItem.getUI()
                        : null;
                if (uiObject instanceof WindowsMenuItemUI) {
                    rv = ((WindowsMenuItemUI) uiObject).accessor;
                } else if (uiObject instanceof WindowsMenuUI) {
                    rv = ((WindowsMenuUI) uiObject).accessor;
                } else if (uiObject instanceof WindowsCheckBoxMenuItemUI) {
                    rv = ((WindowsCheckBoxMenuItemUI) uiObject).accessor;
                } else if (uiObject instanceof WindowsRadioButtonMenuItemUI) {
                    rv = ((WindowsRadioButtonMenuItemUI) uiObject).accessor;
                }
                return rv;
!!!2798082.java!!!	isEnabled(inout c : Component, inout state : Thread::State) : boolean
                if (state == null && c instanceof JMenuItem) {
                    WindowsMenuItemUIAccessor accessor =
                        getAccessor((JMenuItem) c);
                    if (accessor != null) {
                        state = accessor.getState((JMenuItem) c);
                    }
                }
                if (state == null) {
                    if (c != null) {
                        return c.isEnabled();
                    } else {
                        return true;
                    }
                } else {
                    return (state != State.DISABLED)
                        && (state != State.DISABLEDHOT)
                        && (state != State.DISABLEDPUSHED);
                }
!!!2798210.java!!!	getIcon() : Icon
                Icon rv = null;
                if (menuItem == null) {
                    return rv;
                }
                WindowsMenuItemUIAccessor accessor =
                    getAccessor(menuItem);
                State state = (accessor != null) ? accessor.getState(menuItem)
                        : null;
                if (isEnabled(menuItem, null)) {
                    if (state == State.PUSHED) {
                        rv = menuItem.getPressedIcon();
                    } else {
                        rv = menuItem.getIcon();
                    }
                } else {
                    rv = menuItem.getDisabledIcon();
                }
                return rv;
!!!2798338.java!!!	getLaFIcon() : Icon
                // use icon from the UI table if it does not match this one.
                Icon rv = (Icon) UIManager.getDefaults().get(typeToString(type));
                if (rv instanceof VistaMenuItemCheckIcon
                      && ((VistaMenuItemCheckIcon) rv).type == type) {
                    rv = null;
                }
                return rv;
!!!2798466.java!!!	typeToString(inout type : Class) : String
                assert type == JMenuItem.class
                    || type == JMenu.class
                    || type == JCheckBoxMenuItem.class
                    || type == JRadioButtonMenuItem.class;
                StringBuilder sb = new StringBuilder(type.getName());
                // remove package name, dot and the first character
                sb.delete(0, sb.lastIndexOf("J") + 1);
                sb.append(".checkIcon");
                return sb.toString();
