class XPathException
!!!5799170.java!!!	getStylesheetNode() : Object
    return m_styleNode;
!!!5799298.java!!!	setStylesheetNode(inout styleNode : Object) : void
    m_styleNode = styleNode;
!!!5799426.java!!!	XPathException(inout message : String, inout ex : ExpressionNode)
    super(message);
    this.setLocator(ex);
    setStylesheetNode(getStylesheetNode(ex));
!!!5799554.java!!!	XPathException(inout message : String)
    super(message);
!!!5799682.java!!!	getStylesheetNode(inout ex : ExpressionNode) : Node

    ExpressionNode owner = getExpressionOwner(ex);

    if (null != owner && owner instanceof org.w3c.dom.Node)
    {
                return ((org.w3c.dom.Node)owner);
    }
    return null;

!!!5799810.java!!!	getExpressionOwner(inout ex : ExpressionNode) : ExpressionNode
        ExpressionNode parent = ex.exprGetParent();
        while((null != parent) && (parent instanceof Expression))
                parent = parent.exprGetParent();
        return parent;
!!!5799938.java!!!	XPathException(inout message : String, inout styleNode : Object)

    super(message);

    m_styleNode = styleNode;
!!!5800066.java!!!	XPathException(inout message : String, inout styleNode : Node, inout e : Exception)

    super(message);

    m_styleNode = styleNode;
    this.m_exception = e;
!!!5800194.java!!!	XPathException(inout message : String, inout e : Exception)

    super(message);

    this.m_exception = e;
!!!5800322.java!!!	printStackTrace(inout s : PrintStream) : void

    if (s == null)
      s = System.err;

    try
    {
      super.printStackTrace(s);
    }
    catch (Exception e){}

    Throwable exception = m_exception;

    for (int i = 0; (i < 10) && (null != exception); i++)
    {
      s.println("---------");
      exception.printStackTrace(s);

      if (exception instanceof TransformerException)
      {
        TransformerException se = (TransformerException) exception;
        Throwable prev = exception;

        exception = se.getException();

        if (prev == exception)
          break;
      }
      else
      {
        exception = null;
      }
    }
!!!5800450.java!!!	getMessage() : String

    String lastMessage = super.getMessage();
    Throwable exception = m_exception;

    while (null != exception)
    {
      String nextMessage = exception.getMessage();

      if (null != nextMessage)
        lastMessage = nextMessage;

      if (exception instanceof TransformerException)
      {
        TransformerException se = (TransformerException) exception;
        Throwable prev = exception;

        exception = se.getException();

        if (prev == exception)
          break;
      }
      else
      {
        exception = null;
      }
    }

    return (null != lastMessage) ? lastMessage : "";
!!!5800578.java!!!	printStackTrace(inout s : PrintWriter) : void

    if (s == null)
      s = new java.io.PrintWriter(System.err);

    try
    {
      super.printStackTrace(s);
    }
    catch (Exception e){}


    boolean isJdk14OrHigher = false;
    try {
        Throwable.class.getMethod("getCause", (Class[]) null);
        isJdk14OrHigher = true;
    } catch (NoSuchMethodException nsme) {
        // do nothing
    }

    // The printStackTrace method of the Throwable class in jdk 1.4
    // and higher will include the cause when printing the backtrace.
    // The following code is only required when using jdk 1.3 or lower
    if (!isJdk14OrHigher) {

      Throwable exception = m_exception;

      for (int i = 0; (i < 10) && (null != exception); i++)
      {
        s.println("---------");

        try
        {
          exception.printStackTrace(s);
        }
        catch (Exception e)
        {
          s.println("Could not print stack trace...");
        }

        if (exception instanceof TransformerException)
        {
          TransformerException se = (TransformerException) exception;
          Throwable prev = exception;

          exception = se.getException();

          if (prev == exception)
          {
            exception = null;

            break;
          }
        }
        else
        {
          exception = null;
        }
      }
    }
!!!5800706.java!!!	getException() : Throwable
    return m_exception;
