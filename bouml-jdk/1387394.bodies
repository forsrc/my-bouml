class EditableView
!!!11742082.java!!!	EditableView(inout e : Element)
        super(e);
!!!11742210.java!!!	getMinimumSpan(in axis : int) : float
        if (isVisible) {
            return super.getMinimumSpan(axis);
        }
        return 0;
!!!11742338.java!!!	getPreferredSpan(in axis : int) : float
        if (isVisible) {
            return super.getPreferredSpan(axis);
        }
        return 0;
!!!11742466.java!!!	getMaximumSpan(in axis : int) : float
        if (isVisible) {
            return super.getMaximumSpan(axis);
        }
        return 0;
!!!11742594.java!!!	paint(inout g : Graphics, inout allocation : Shape) : void
        Component c = getComponent();
        Container host = getContainer();

        if (host instanceof JTextComponent &&
            isVisible != ((JTextComponent)host).isEditable()) {
            isVisible = ((JTextComponent)host).isEditable();
            preferenceChanged(null, true, true);
            host.repaint();
        }
        /*
         * Note: we cannot tweak the visible state of the
         * component in createComponent() even though it
         * gets called after the setParent() call where
         * the value of the boolean is set.  This
         * because, the setComponentParent() in the
         * superclass, always does a setVisible(false)
         * after calling createComponent().   We therefore
         * use this flag in the paint() method to
         * setVisible() to true if required.
         */
        if (isVisible) {
            super.paint(g, allocation);
        }
        else {
            setSize(0, 0);
        }
        if (c != null) {
            c.setFocusable(isVisible);
        }
!!!11742722.java!!!	setParent(inout parent : View) : void
        if (parent != null) {
            Container host = parent.getContainer();
            if (host != null) {
                if (host instanceof JTextComponent) {
                    isVisible = ((JTextComponent)host).isEditable();
                } else {
                    isVisible = false;
                }
            }
        }
        super.setParent(parent);
!!!11742850.java!!!	isVisible() : boolean
        return isVisible;
