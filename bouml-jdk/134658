format 222
"encoding" // jdk1.8::com::sun::corba::se::pept::encoding
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/corba/se/pept/encoding/"
  java_package "com.sun.corba.se.pept.encoding"
  classview 132866 "encoding"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 164610 "InputObject"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> An <code>InputObject</code> is the interface used by the
presentation block to get programming language typed data from data
 encoded in a message. </p>

<p> The implementation of an <code>InputObject</code> contains the
encoded data.  When the presentation block asks for data the
implementation of <code>InputObject</code> is responsible for converting
the encoded representation of the data to the types expected by the
programming language.</p>

<p>A particular <em>encoding</em> would subclass
<code>InputObject</code>.  The subclass would provide methods to get
the data types appropriate to the presentation block (e.g., simple
types such as int or boolean, all the way to any type derived from
<code>java.io.Serializable</code>.).</p>

<p>Note: the protocol block may also use the <code>InputObject</code> to
obtain header metadata.</p>

@author Harold Carr
"
      operation 332674 "setMessageMediator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "messageMediator" type class_ref 150530 // MessageMediator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 332802 "getMessageMediator"
	public return_type class_ref 150530 // MessageMediator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 332930 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 166914 "OutputObject"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> An <code>OutputObject</code> is the interface used by the
presentation block to give programming language typed data to
the encoding block to be encoded and sent in a message. </p>

<p> The implementation of an <code>OutputObject</code> contains the
encoded data.  When the presentation block gives programming language
typed data to
<code>OutputObject</code>, the
implementation of <code>OutputObject</code> is responsible for converting
that data to the encoded representation of the data for a particular
encoding.</p>

<p>A particular <em>encoding</em> would subclass
<code>OutputObject</code>.  The subclass would provide methods to set
the data types appropriate to the presentation block (e.g., simple
types such as int or boolean, all the way to any type derived from
<code>java.io.Serializable</code>.).</p>

<p>Note: the protocol block may also use the <code>OutputObject</code> to
set header metadata.</p>

@author Harold Carr
"
      operation 364034 "setMessageMediator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "messageMediator" type class_ref 150530 // MessageMediator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 364162 "getMessageMediator"
	public return_type class_ref 150530 // MessageMediator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 364290 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 130050 "encoding"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 145922 "InputObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import com.sun.corba.se.pept.protocol.MessageMediator;
${definition}"
      associated_elems
	class_ref 164610 // InputObject
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 146818 "OutputObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import com.sun.corba.se.pept.protocol.MessageMediator;
${definition}"
      associated_elems
	class_ref 166914 // OutputObject
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
