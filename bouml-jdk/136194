format 222
"PortableInterceptor" // jdk1.8::org::omg::PortableInterceptor
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/org/omg/PortableInterceptor/"
  java_package "org.omg.PortableInterceptor"
  classview 134018 "PortableInterceptor"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 176642 "RequestInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/RequestInfo.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Request Information, accessible to Interceptors.
<p>
Each interception point is given an object through which the 
Interceptor can access request information. Client-side and server-side 
interception points are concerned with different information, so there 
are two information objects: <code>ClientRequestInfo</code> is passed 
to the client-side interception points and <code>ServerRequestInfo</code>
is passed to the server-side interception points. But there is 
information that is common to both, so they both inherit from a common 
interface: <code>RequestInfo</code>.

@see ClientRequestInfo
@see ServerRequestInfo
"
      classrelation 198018 // <generalisation>
	relation 198018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 198018 // <generalisation>
	  b parent class_ref 176770 // RequestInfoOperations
      end

      classrelation 198146 // <generalisation>
	relation 198146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 198146 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 198274 // <generalisation>
	relation 198274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 198274 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 176770 "RequestInfoOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/RequestInfoOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Request Information, accessible to Interceptors.
<p>
Each interception point is given an object through which the 
Interceptor can access request information. Client-side and server-side 
interception points are concerned with different information, so there 
are two information objects: <code>ClientRequestInfo</code> is passed 
to the client-side interception points and <code>ServerRequestInfo</code>
is passed to the server-side interception points. But there is 
information that is common to both, so they both inherit from a common 
interface: <code>RequestInfo</code>.

@see ClientRequestInfo
@see ServerRequestInfo
"
      operation 483330 "request_id"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an id that uniquely identifies an active request/reply 
sequence. Once a request/reply sequence is concluded this ID may be 
reused. Note that this id is not the same as the GIOP 
<code>request_id</code>. If GIOP is the transport mechanism used, 
then these IDs may very well be the same, but this is not guaranteed 
nor required.
"
      end

      operation 483458 "operation"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the operation being invoked.
"
      end

      operation 483586 "arguments"
	public return_type class_ref 176898 // Parameter
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Parameter</code> objects, containing the 
arguments on the operation being invoked.  If there are no arguments, 
this attribute will be a zero length array. 
<p>
Not all environments provide access to the arguments. With the Java 
portable bindings, for example, the arguments are not available. 
In these environments, when this attribute is accessed, 
<code>NO_RESOURCES</code> will be thrown with a standard minor code 
of 1.
<p>
<i>Note: Arguments are available for DSI/DII calls.</i>

@exception NO_RESOURCES thrown if arguments are not available.
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 483714 "exceptions"
	public return_type class_ref 144770 // TypeCode
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>TypeCode</code> objects describing the 
<code>TypeCode</code>s of the user exceptions that this operation 
invocation may throw. If there are no user exceptions, this 
will return a zero length array. 
<p>
Not all environments provide access to the exception list. With 
the Java portable bindings, for example, the exception list is 
not available. In these environments, when this attribute is 
accessed, <code>NO_RESOURCES</code> will be thrown with a 
standard minor code of 1.
<p>
<i>Note: Exceptions are available for DSI/DII calls.</i>

@exception NO_RESOURCES thrown if exceptions are not available.
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 483842 "contexts"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code> objects describing the 
contexts that may be passed on this operation invocation.  If there 
are no contexts, this will return a zero length array. 
<p>
Not all environments provide access to the context list. With the 
Java portable bindings, for example, the context list is not 
available. In these environments, when this attribute is accessed, 
<code>NO_RESOURCES</code> will be thrown with a standard minor code 
of 1.
<p>
<i>Note: Contexts are available for DSI/DII calls.</i>

@exception NO_RESOURCES thrown if contexts are not available.
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 483970 "operation_context"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code> objects containing the 
contexts being sent on the request.
<p>
Not all environments provide access to the context. With the Java 
portable bindings, for example, the context is not available. In 
these environments, when this attribute is accessed, NO_RESOURCES will 
be thrown with standard minor code of 1.
<p>
<i>Note: <code>operation_context</code> is available for 
DSI/DII calls.</i>

@exception NO_RESOURCES thrown if operation context is not available.
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 484098 "result"
	public return_type class_ref 144642 // Any
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an any containing the result of the operation invocation. 
If the operation return type is void, this attribute will be an any 
containing a type code with a <code>TCKind</code> value of 
<code>tk_void</code> and no value. 
<p>
Not all environments provide access to the result. With the Java 
portable bindings, for example, the result is not available. In 
these environments, when this attribute is accessed, 
<code>NO_RESOURCES</code> will be thrown with a standard minor code of 
1.
<p>
<i>Note: Result is available for DSI/DII calls.</i>

@exception NO_RESOURCES thrown if result is not available.
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 484226 "response_expected"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a response is expected. 
<p>
On the client, a reply is not returned when 
<code>response_expected</code> is false, so <code>receive_reply</code> 
cannot be called. <code>receive_other</code> is called unless an 
exception occurs, in which case <code>receive_exception</code> is 
called. 
<p>
On the client, within <code>send_poll</code>, this attribute is true.
"
      end

      operation 484354 "sync_scope"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines how far the request shall progress before control is returned
to the client.  This is defined in the Messaging specification, and 
is pertinent only when <code>response_expected</code> is false. If 
<code>response_expected</code> is true, the value of 
<code>sync_scope</code> is undefined. This attribute may have one of 
the following values: 
<ul>
  <li><code>Messaging.SYNC_NONE</code></li>
  <li><code>Messaging.SYNC_WITH_TRANSPORT</code></li>
  <li><code>Messaging.SYNC_WITH_SERVER</code></li>
  <li><code>Messaging.SYNC_WITH_TARGET</code></li>
</ul>
On the server, for all scopes, a reply will be created from the 
return of the target operation call, but the reply will not return 
to the client. Although it does not return to the client, it does 
occur, so the normal server-side interception points are 
followed (i.e., <code>receive_request_service_contexts</code>, 
<code>receive_request</code>, <code>send_reply</code> or 
<code>send_exception</code>). 
<p>
For <code>SYNC_WITH_SERVER</code> and <code>SYNC_WITH_TARGET</code>, 
the server does send an empty reply back to the client before the 
target is invoked. This reply is not intercepted by server-side 
Interceptors.

@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 484482 "reply_status"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Describes the state of the result of the operation invocation. The
return value can be one of the following: 
<ul>
  <li><code>PortableInterceptor.SUCCESSFUL</code></li>
  <li><code>PortableInterceptor.SYSTEM_EXCEPTION</code></li>
  <li><code>PortableInterceptor.USER_EXCEPTION</code></li>
  <li><code>PortableInterceptor.LOCATION_FORWARD</code></li>
  <li><code>PortableInterceptor.TRANSPORT_RETRY</code></li>
</ul>
On the client:
<ul>
  <li>Within the <code>receive_reply</code> interception point, this 
      will only return <code>SUCCESSFUL</code></li>.
  <li>Within the <code>receive_exception</code> interception point, 
      this will be either <code>SYSTEM_EXCEPTION</code> or 
      <code>USER_EXCEPTION</code>.</li>
  <li>Within the <code>receive_other</code> interception point, this 
      will be any of: <code>SUCCESSFUL</code>, 
      <code>LOCATION_FORWARD</code>, or <code>TRANSPORT_RETRY</code>. 
      <code>SUCCESSFUL</code> means an asynchronous request returned 
      successfully. <code>LOCATION_FORWARD</code> means that a reply 
      came back with <code>LOCATION_FORWARD</code> as its status. 
      <code>TRANSPORT_RETRY</code> means that the transport 
      mechanism indicated a retry - a GIOP reply with a status of 
      <code>NEEDS_ADDRESSING_MODE</code>, for instance. </li>
</ul>
On the server: 
<ul>
  <li>Within the <code>send_reply</code> interception point, this 
      will only be <code>SUCCESSFUL</code>.</li>
  <li>Within the <code>send_exception</code> interception point, 
      this will be either <code>SYSTEM_EXCEPTION</code> or 
      <code>USER_EXCEPTION</code>.</li>
  <li>Within the <code>send_other</code> interception point, this 
      attribute will be any of: <code>SUCCESSFUL</code>, or 
      <code>LOCATION_FORWARD</code>. <code>SUCCESSFUL</code> means 
      an asynchronous request returned successfully. 
      <code>LOCATION_FORWARD</code> means that a reply came back 
      with <code>LOCATION_FORWARD</code> as its status.</li>
</ul>

@see SUCCESSFUL
@see SYSTEM_EXCEPTION
@see USER_EXCEPTION
@see LOCATION_FORWARD
@see TRANSPORT_RETRY
"
      end

      operation 484610 "forward_reference"
	public return_type class_ref 133378 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Contains the object to which the request will be forwarded, if the 
<code>reply_status</code> attribute is <code>LOCATION_FORWARD</code>.
It is indeterminate whether a forwarded request will actually occur.
"
      end

      operation 484738 "get_slot"
	public return_type class_ref 144642 // Any
	nparams 1
	  param in name "id" explicit_type "int"
	nexceptions 1
	  exception class_ref 177026 // InvalidSlot
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the data from the given slot of the 
<code>PortableInterceptor.Current</code> that is in the scope of 
the request. 
<p>
If the given slot has not been set, then an any containing a 
type code with a <code>TCKind</code> value of <code>tk_null</code> is 
returned. 

@param id The <code>SlotId</code> of the slot which is to be 
    returned. 
@return The slot data, in the form of an any, obtained with the 
    given identifier.
@exception InvalidSlot thrown if the ID does not define an 
   allocated slot.
@see Current
"
      end

      operation 484866 "get_request_service_context"
	public return_type class_ref 177154 // ServiceContext
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the service context with the given ID that 
is associated with the request. 
<p>
@param id The <code>IOP.ServiceId</code> of the service context 
    which is to be returned. 
@return The <code>IOP.ServiceContext</code> obtained with the 
    given identifier.
@exception BAD_PARAM thrown with a standard minor code of 26, if the 
    request's service context does not contain an entry for that ID.
"
      end

      operation 484994 "get_reply_service_context"
	public return_type class_ref 177154 // ServiceContext
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the service context with the given ID that 
is associated with the reply. 

@param id The <code>IOP.ServiceId</code> of the service context 
    which is to be returned. 
@return The <code>IOP.ServiceContext</code> obtained with the given 
    identifier. 
@exception BAD_PARAM thrown with a standard minor code of 26 if the 
    request's service context does not contain an entry for that ID.
"
      end
    end

    class 177026 "InvalidSlot"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/InvalidSlot.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4898690 // <generalisation>
	relation 4898690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4898690 // <generalisation>
	  b parent class_ref 178178 // UserException
      end

      operation 12412802 "InvalidSlot"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12412930 "InvalidSlot"
	public explicit_return_type ""
	nparams 1
	  param inout name "$reason" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ctor"
      end
    end

    class 177794 "ForwardRequest"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ForwardRequest.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4898178 // <generalisation>
	relation 4898178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4898178 // <generalisation>
	  b parent class_ref 178178 // UserException
      end

      classrelation 4898306 // forward (<unidirectional association>)
	relation 4898306 --->
	  a role_name "forward" init_value " null" public
	    comment " 
The new object to forward the request to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4898306 // forward (<unidirectional association>)
	  b parent class_ref 133378 // Object
      end

      operation 12411650 "ForwardRequest"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12411778 "ForwardRequest"
	public explicit_return_type ""
	nparams 1
	  param inout name "_forward" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ctor"
      end

      operation 12411906 "ForwardRequest"
	public explicit_return_type ""
	nparams 2
	  param inout name "$reason" type class_ref 128130 // String
	  param inout name "_forward" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ctor"
      end
    end

    class 178306 "ClientRequestInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ClientRequestInfo.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Request Information, accessible to client-side request interceptors.
<p>
Some attributes and operations on <code>ClientRequestInfo</code> are 
not valid at all interception points.  The following table shows the 
validity of each attribute or operation.  If it is not valid, attempting 
to access it will result in a <code>BAD_INV_ORDER</code> being thrown
with a standard minor code of 14.
<p>

<table border=1 summary=\"Shows the validity of each attribute or operation\">
 <thead>
   <tr>
     <th>&nbsp;</th>
     <th id=\"send_req\">send_request</th>
     <th id=\"send_poll\">send_poll</th>
     <th id=\"rec_reply\">receive_reply</th>
     <th id=\"rec_ex\">receive_exception</th>
     <th id=\"rec_oth\">receive_other</th>
   </tr>
 </thead>
 <tbody>

 <tr>
    <td id=\"ri\" colspan=6><i>Inherited from RequestInfo:</i></td>
 </tr>

 <tr><th id=\"req_id\"><p align=\"left\">request_id</p></th>
 <td headers=\"ri req_id send_req\">yes</td> 
 <td headers=\"ri req_id send_poll\">yes</td> 
 <td headers=\"ri req_id rec_reply\">yes</td> 
 <td headers=\"ri req_id rec_ex\">yes</td> 
 <td headers=\"ri req_id rec_oth\">yes</td></tr>

 <tr><th id=\"op\"><p align=\"left\">operation</p></th>
 <td headers=\"ri op send_req\">yes</td> 
 <td headers=\"ri op send_poll\">yes</td> 
 <td headers=\"ri op rec_reply\">yes</td> 
 <td headers=\"ri op rec_ex\">yes</td> 
 <td headers=\"ri op rec_oth\">yes</td></tr>

 <tr><th id=\"arg\"><p align=\"left\">arguments</p></th>
 <td headers=\"ri arg send_req\">yes<sub>1</sub></td>
 <td headers=\"ri arg send_poll\">no </td> 
 <td headers=\"ri arg rec_reply\">yes</td> 
 <td headers=\"ri arg rec_ex\">no </td> 
 <td headers=\"ri arg rec_oth\">no </td></tr>

 <tr><th id=\"exc\"><p align=\"left\">exceptions</p></th>
 <td headers=\"ri exc send_req\">yes</td> 
 <td headers=\"ri exc send_poll\">no </td> 
 <td headers=\"ri exc rec_reply\">yes</td> 
 <td headers=\"ri exc rec_ex\">yes</td> 
 <td headers=\"ri exc rec_oth\">yes</td></tr>

 <tr><th id=\"con\"><p align=\"left\">contexts</p></th>
 <td headers=\"ri con send_req\">yes</td> 
 <td headers=\"ri con send_poll\">no </td> 
 <td headers=\"ri con rec_reply\">yes</td> 
 <td headers=\"ri con rec_ex\">yes</td> 
 <td headers=\"ri con rec_oth\">yes</td></tr>

 <tr><th id=\"op_con\"><p align=\"left\">operation_context</p></th>
 <td headers=\"ri op_con send_req\">yes</td> 
 <td headers=\"ri op_con send_poll\">no </td> 
 <td headers=\"ri op_con rec_reply\">yes</td> 
 <td headers=\"ri op_con rec_ex\">yes</td> 
 <td headers=\"ri op_con rec_oth\">yes</td>
 </tr>

 <tr><th id=\"result\"><p align=\"left\">result</p></th>
 <td headers=\"ri result send_req\">no </td> 
 <td headers=\"ri result send_poll\">no </td> 
 <td headers=\"ri result rec_reply\">yes</td> 
 <td headers=\"ri result rec_ex\">no </td> 
 <td headers=\"ri result rec_oth\">no </td>
 </tr>

 <tr><th id=\"res_exp\"><p align=\"left\">response_expected</p></th>
 <td headers=\"ri res_exp send_req\">yes</td> 
 <td headers=\"ri res_exp send_poll\">yes</td> 
 <td headers=\"ri res_exp rec_reply\">yes</td> 
 <td headers=\"ri res_exp rec_ex\">yes</td> 
 <td headers=\"ri res_exp rec_oth\">yes</td></tr>

 <tr><th id=\"sync_sco\"><p align=\"left\">sync_scope</p></th>
 <td headers=\"ri sync_sco send_req\">yes</td> 
 <td headers=\"ri sync_sco send_poll\">no </td> 
 <td headers=\"ri sync_sco rec_reply\">yes</td> 
 <td headers=\"ri sync_sco rec_ex\">yes</td> 
 <td headers=\"ri sync_sco rec_oth\">yes</td>
 </tr>

 <tr><th id=\"rep_stat\"><p align=\"left\">reply_status</p></th>
 <td headers=\"ri rep_stat send_req\">no </td> 
 <td headers=\"ri rep_stat send_poll\">no </td> 
 <td headers=\"ri rep_stat rec_reply\">yes</td> 
 <td headers=\"ri rep_stat rec_ex\">yes</td> 
 <td headers=\"ri rep_stat rec_oth\">yes</td></tr>

 <tr><th id=\"for_ref\"><p align=\"left\">forward_reference</p></th>
 <td headers=\"ri for_ref send_req\">no </td>
 <td headers=\"ri for_ref send_poll\">no </td> 
 <td headers=\"ri for_ref rec_reply\">no </td> 
 <td headers=\"ri for_ref rec_ex\">no </td> 
 <td headers=\"ri for_ref rec_oth\">yes<sub>2</sub>
 </td></tr>

 <tr><th id=\"get_slot\"><p align=\"left\">get_slot</p></th>
 <td headers=\"ri get_slot send_req\">yes</td> 
 <td headers=\"ri get_slot send_poll\">yes</td> 
 <td headers=\"ri get_slot rec_reply\">yes</td> 
 <td headers=\"ri get_slot rec_ex\">yes</td> 
 <td headers=\"ri get_slot rec_oth\">yes</td></tr>

 <tr><th id=\"grsc\"><p align=\"left\">get_request_service_context</p></th>
 <td headers=\"ri grsc send_req\">yes</td> 
 <td headers=\"ri grsc send_poll\">no </td> 
 <td headers=\"ri grsc rec_reply\">yes</td> 
 <td headers=\"ri grsc rec_ex\">yes</td> 
 <td headers=\"ri grsc rec_oth\">yes</td></tr>

 <tr><th id=\"gpsc\"><p align=\"left\">get_reply_service_context</p></th>
 <td headers=\"ri gpsc send_req\">no </td> 
 <td headers=\"ri gpsc send_poll\">no </td> 
 <td headers=\"ri gpsc rec_reply\">yes</td> 
 <td headers=\"ri gpsc rec_ex\">yes</td> 
 <td headers=\"ri gpsc rec_oth\">yes</td>
 </tr>

 <tr>
   <td id=\"cri\" colspan=6><i>ClientRequestInfo-specific:</i></td>
 </tr>

 <tr><th id=\"target\"><p align=\"left\">target</p></th>
 <td headers=\"cri target send_req\">yes</td> 
 <td headers=\"cri target send_poll\">yes</td> 
 <td headers=\"cri target rec_reply\">yes</td> 
 <td headers=\"cri target rec_ex\">yes</td> 
 <td headers=\"cri target rec_oth\">yes</td></tr>

 <tr><th id=\"eftarget\"><p align=\"left\">effective_target</p></th>
 <td headers=\"cri eftarget send_req\">yes</td> 
 <td headers=\"cri eftarget send_poll\">yes</td> 
 <td headers=\"cri eftarget rec_reply\">yes</td> 
 <td headers=\"cri eftarget rec_ex\">yes</td> 
 <td headers=\"cri eftarget rec_oth\">yes</td>
 </tr>

 <tr><th id=\"efprof\"><p align=\"left\">effective_profile</p></th>
 <td headers=\"cri efprof send_req\">yes</td> 
 <td headers=\"cri efprof send_poll\">yes</td> 
 <td headers=\"cri efprof rec_reply\">yes</td> 
 <td headers=\"cri efprof rec_ex\">yes</td> 
 <td headers=\"cri efprof rec_oth\">yes</td></tr>

 <tr><th id=\"rxp\"><p align=\"left\">received_exception</p></th>
 <td headers=\"cri rxp send_req\">no </td> 
 <td headers=\"cri rxp send_poll\">no </td> 
 <td headers=\"cri rxp rec_reply\">no </td> 
 <td headers=\"cri rxp rec_ex\">yes</td> 
 <td headers=\"cri rxp rec_oth\">no </td></tr>

 <tr><th id=\"rei\"><p align=\"left\">received_exception_id</p></th>
 <td headers=\"cri rei send_req\">no </td> 
 <td headers=\"cri rei send_poll\">no </td> 
 <td headers=\"cri rei rec_reply\">no </td> 
 <td headers=\"cri rei rec_ex\">yes</td> 
 <td headers=\"cri rei rec_oth\">no </td></tr>

 <tr><th id=\"gec\"><p align=\"left\">get_effective_component</p></th>
 <td headers=\"cri gec send_req\">yes</td> 
 <td headers=\"cri gec send_poll\">no </td> 
 <td headers=\"cri gec rec_reply\">yes</td> 
 <td headers=\"cri gec rec_ex\">yes</td> 
 <td headers=\"cri gec rec_oth\">yes</td></tr>

 <tr><th id=\"gecs\"><p align=\"left\">get_effective_components</p></th>
 <td headers=\"cri gecs send_req\">yes</td> 
 <td headers=\"cri gecs send_poll\">no </td> 
 <td headers=\"cri gecs rec_reply\">yes</td> 
 <td headers=\"cri gecs rec_ex\">yes</td> 
 <td headers=\"cri gecs rec_oth\">yes</td></tr>

 <tr><th id=\"grpcy\"><p align=\"left\">get_request_policy</p></th>
 <td headers=\"cri grpcy send_req\">yes</td>
 <td headers=\"cri grpcy send_poll\">no </td> 
 <td headers=\"cri grpcy rec_reply\">yes</td> 
 <td headers=\"cri grpcy rec_ex\">yes</td> 
 <td headers=\"cri grpcy rec_oth\">yes</td></tr>

 <tr><th id=\"arsc\"><p align=\"left\">add_request_service_context</p></th>
   <td headers=\"cri arsc send_req\">yes</td> 
   <td headers=\"cri arsc send_poll\">no </td> 
   <td headers=\"cri arsc rec_reply\">no </td> 
   <td headers=\"cri arsc rec_ex\">no </td> 
   <td headers=\"cri arsc rec_oth\">no </td></tr>

  </tbody>
</table>

<ol>
  <li>When <code>ClientRequestInfo</code> is passed to 
      <code>send_request</code>, there is an entry in the list for every 
      argument, whether in, inout, or out.  But only the in and inout 
      arguments will be available.</li>
  <li>If the <code>reply_status</code> atribute is not 
      <code>LOCATION_FORWARD</code>, accessing this attribute will 
      throw <code>BAD_INV_ORDER</code> with a standard minor code of 
      14.</li>
</ol>

@see ClientRequestInterceptor
"
      classrelation 200066 // <generalisation>
	relation 200066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 200066 // <generalisation>
	  b parent class_ref 178434 // ClientRequestInfoOperations
      end

      classrelation 200194 // <generalisation>
	relation 200194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 200194 // <generalisation>
	  b parent class_ref 176642 // RequestInfo
      end

      classrelation 200322 // <generalisation>
	relation 200322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 200322 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 178434 "ClientRequestInfoOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ClientRequestInfoOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Request Information, accessible to client-side request interceptors.
<p>
Some attributes and operations on <code>ClientRequestInfo</code> are 
not valid at all interception points.  The following table shows the 
validity of each attribute or operation.  If it is not valid, attempting 
to access it will result in a <code>BAD_INV_ORDER</code> being thrown
with a standard minor code of 14.
<p>

<table border=1 summary=\"Shows the validity of each attribute or operation\">
 <thead>
   <tr>
     <th>&nbsp;</th>
     <th id=\"send_req\">send_request</th>
     <th id=\"send_poll\">send_poll</th>
     <th id=\"rec_reply\">receive_reply</th>
     <th id=\"rec_ex\">receive_exception</th>
     <th id=\"rec_oth\">receive_other</th>
   </tr>
 </thead>
 <tbody>

 <tr>
    <td id=\"ri\" colspan=6><i>Inherited from RequestInfo:</i></td>
 </tr>

 <tr><th id=\"req_id\"><p align=\"left\">request_id</p></th>
 <td headers=\"ri req_id send_req\">yes</td> 
 <td headers=\"ri req_id send_poll\">yes</td> 
 <td headers=\"ri req_id rec_reply\">yes</td> 
 <td headers=\"ri req_id rec_ex\">yes</td> 
 <td headers=\"ri req_id rec_oth\">yes</td></tr>

 <tr><th id=\"op\"><p align=\"left\">operation</p></th>
 <td headers=\"ri op send_req\">yes</td> 
 <td headers=\"ri op send_poll\">yes</td> 
 <td headers=\"ri op rec_reply\">yes</td> 
 <td headers=\"ri op rec_ex\">yes</td> 
 <td headers=\"ri op rec_oth\">yes</td></tr>

 <tr><th id=\"arg\"><p align=\"left\">arguments</p></th>
 <td headers=\"ri arg send_req\">yes<sub>1</sub></td>
 <td headers=\"ri arg send_poll\">no </td> 
 <td headers=\"ri arg rec_reply\">yes</td> 
 <td headers=\"ri arg rec_ex\">no </td> 
 <td headers=\"ri arg rec_oth\">no </td></tr>

 <tr><th id=\"exc\"><p align=\"left\">exceptions</p></th>
 <td headers=\"ri exc send_req\">yes</td> 
 <td headers=\"ri exc send_poll\">no </td> 
 <td headers=\"ri exc rec_reply\">yes</td> 
 <td headers=\"ri exc rec_ex\">yes</td> 
 <td headers=\"ri exc rec_oth\">yes</td></tr>

 <tr><th id=\"con\"><p align=\"left\">contexts</p></th>
 <td headers=\"ri con send_req\">yes</td> 
 <td headers=\"ri con send_poll\">no </td> 
 <td headers=\"ri con rec_reply\">yes</td> 
 <td headers=\"ri con rec_ex\">yes</td> 
 <td headers=\"ri con rec_oth\">yes</td></tr>

 <tr><th id=\"op_con\"><p align=\"left\">operation_context</p></th>
 <td headers=\"ri op_con send_req\">yes</td> 
 <td headers=\"ri op_con send_poll\">no </td> 
 <td headers=\"ri op_con rec_reply\">yes</td> 
 <td headers=\"ri op_con rec_ex\">yes</td> 
 <td headers=\"ri op_con rec_oth\">yes</td>
 </tr>

 <tr><th id=\"result\"><p align=\"left\">result</p></th>
 <td headers=\"ri result send_req\">no </td> 
 <td headers=\"ri result send_poll\">no </td> 
 <td headers=\"ri result rec_reply\">yes</td> 
 <td headers=\"ri result rec_ex\">no </td> 
 <td headers=\"ri result rec_oth\">no </td>
 </tr>

 <tr><th id=\"res_exp\"><p align=\"left\">response_expected</p></th>
 <td headers=\"ri res_exp send_req\">yes</td> 
 <td headers=\"ri res_exp send_poll\">yes</td> 
 <td headers=\"ri res_exp rec_reply\">yes</td> 
 <td headers=\"ri res_exp rec_ex\">yes</td> 
 <td headers=\"ri res_exp rec_oth\">yes</td></tr>

 <tr><th id=\"sync_sco\"><p align=\"left\">sync_scope</p></th>
 <td headers=\"ri sync_sco send_req\">yes</td> 
 <td headers=\"ri sync_sco send_poll\">no </td> 
 <td headers=\"ri sync_sco rec_reply\">yes</td> 
 <td headers=\"ri sync_sco rec_ex\">yes</td> 
 <td headers=\"ri sync_sco rec_oth\">yes</td>
 </tr>

 <tr><th id=\"rep_stat\"><p align=\"left\">reply_status</p></th>
 <td headers=\"ri rep_stat send_req\">no </td> 
 <td headers=\"ri rep_stat send_poll\">no </td> 
 <td headers=\"ri rep_stat rec_reply\">yes</td> 
 <td headers=\"ri rep_stat rec_ex\">yes</td> 
 <td headers=\"ri rep_stat rec_oth\">yes</td></tr>

 <tr><th id=\"for_ref\"><p align=\"left\">forward_reference</p></th>
 <td headers=\"ri for_ref send_req\">no </td>
 <td headers=\"ri for_ref send_poll\">no </td> 
 <td headers=\"ri for_ref rec_reply\">no </td> 
 <td headers=\"ri for_ref rec_ex\">no </td> 
 <td headers=\"ri for_ref rec_oth\">yes<sub>2</sub>
 </td></tr>

 <tr><th id=\"get_slot\"><p align=\"left\">get_slot</p></th>
 <td headers=\"ri get_slot send_req\">yes</td> 
 <td headers=\"ri get_slot send_poll\">yes</td> 
 <td headers=\"ri get_slot rec_reply\">yes</td> 
 <td headers=\"ri get_slot rec_ex\">yes</td> 
 <td headers=\"ri get_slot rec_oth\">yes</td></tr>

 <tr><th id=\"grsc\"><p align=\"left\">get_request_service_context</p></th>
 <td headers=\"ri grsc send_req\">yes</td> 
 <td headers=\"ri grsc send_poll\">no </td> 
 <td headers=\"ri grsc rec_reply\">yes</td> 
 <td headers=\"ri grsc rec_ex\">yes</td> 
 <td headers=\"ri grsc rec_oth\">yes</td></tr>

 <tr><th id=\"gpsc\"><p align=\"left\">get_reply_service_context</p></th>
 <td headers=\"ri gpsc send_req\">no </td> 
 <td headers=\"ri gpsc send_poll\">no </td> 
 <td headers=\"ri gpsc rec_reply\">yes</td> 
 <td headers=\"ri gpsc rec_ex\">yes</td> 
 <td headers=\"ri gpsc rec_oth\">yes</td>
 </tr>

 <tr>
   <td id=\"cri\" colspan=6><i>ClientRequestInfo-specific:</i></td>
 </tr>

 <tr><th id=\"target\"><p align=\"left\">target</p></th>
 <td headers=\"cri target send_req\">yes</td> 
 <td headers=\"cri target send_poll\">yes</td> 
 <td headers=\"cri target rec_reply\">yes</td> 
 <td headers=\"cri target rec_ex\">yes</td> 
 <td headers=\"cri target rec_oth\">yes</td></tr>

 <tr><th id=\"eftarget\"><p align=\"left\">effective_target</p></th>
 <td headers=\"cri eftarget send_req\">yes</td> 
 <td headers=\"cri eftarget send_poll\">yes</td> 
 <td headers=\"cri eftarget rec_reply\">yes</td> 
 <td headers=\"cri eftarget rec_ex\">yes</td> 
 <td headers=\"cri eftarget rec_oth\">yes</td>
 </tr>

 <tr><th id=\"efprof\"><p align=\"left\">effective_profile</p></th>
 <td headers=\"cri efprof send_req\">yes</td> 
 <td headers=\"cri efprof send_poll\">yes</td> 
 <td headers=\"cri efprof rec_reply\">yes</td> 
 <td headers=\"cri efprof rec_ex\">yes</td> 
 <td headers=\"cri efprof rec_oth\">yes</td></tr>

 <tr><th id=\"rxp\"><p align=\"left\">received_exception</p></th>
 <td headers=\"cri rxp send_req\">no </td> 
 <td headers=\"cri rxp send_poll\">no </td> 
 <td headers=\"cri rxp rec_reply\">no </td> 
 <td headers=\"cri rxp rec_ex\">yes</td> 
 <td headers=\"cri rxp rec_oth\">no </td></tr>

 <tr><th id=\"rei\"><p align=\"left\">received_exception_id</p></th>
 <td headers=\"cri rei send_req\">no </td> 
 <td headers=\"cri rei send_poll\">no </td> 
 <td headers=\"cri rei rec_reply\">no </td> 
 <td headers=\"cri rei rec_ex\">yes</td> 
 <td headers=\"cri rei rec_oth\">no </td></tr>

 <tr><th id=\"gec\"><p align=\"left\">get_effective_component</p></th>
 <td headers=\"cri gec send_req\">yes</td> 
 <td headers=\"cri gec send_poll\">no </td> 
 <td headers=\"cri gec rec_reply\">yes</td> 
 <td headers=\"cri gec rec_ex\">yes</td> 
 <td headers=\"cri gec rec_oth\">yes</td></tr>

 <tr><th id=\"gecs\"><p align=\"left\">get_effective_components</p></th>
 <td headers=\"cri gecs send_req\">yes</td> 
 <td headers=\"cri gecs send_poll\">no </td> 
 <td headers=\"cri gecs rec_reply\">yes</td> 
 <td headers=\"cri gecs rec_ex\">yes</td> 
 <td headers=\"cri gecs rec_oth\">yes</td></tr>

 <tr><th id=\"grpcy\"><p align=\"left\">get_request_policy</p></th>
 <td headers=\"cri grpcy send_req\">yes</td>
 <td headers=\"cri grpcy send_poll\">no </td> 
 <td headers=\"cri grpcy rec_reply\">yes</td> 
 <td headers=\"cri grpcy rec_ex\">yes</td> 
 <td headers=\"cri grpcy rec_oth\">yes</td></tr>

 <tr><th id=\"arsc\"><p align=\"left\">add_request_service_context</p></th>
   <td headers=\"cri arsc send_req\">yes</td> 
   <td headers=\"cri arsc send_poll\">no </td> 
   <td headers=\"cri arsc rec_reply\">no </td> 
   <td headers=\"cri arsc rec_ex\">no </td> 
   <td headers=\"cri arsc rec_oth\">no </td></tr>

  </tbody>
</table>

<ol>
  <li>When <code>ClientRequestInfo</code> is passed to 
      <code>send_request</code>, there is an entry in the list for every 
      argument, whether in, inout, or out.  But only the in and inout 
      arguments will be available.</li>
  <li>If the <code>reply_status</code> atribute is not 
      <code>LOCATION_FORWARD</code>, accessing this attribute will 
      throw <code>BAD_INV_ORDER</code> with a standard minor code of 
      14.</li>
</ol>

@see ClientRequestInterceptor
"
      classrelation 199938 // <generalisation>
	relation 199938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 199938 // <generalisation>
	  b parent class_ref 176770 // RequestInfoOperations
      end

      operation 491010 "target"
	public return_type class_ref 133378 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object which the client called to perform the 
operation. 

@see #effective_target
"
      end

      operation 491138 "effective_target"
	public return_type class_ref 133378 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual object on which the operation will be invoked. 
If the <code>reply_status</code> is <code>LOCATION_FORWARD</code>, 
then on subsequent requests, <code>effective_target</code> will 
contain the forwarded IOR while target will remain unchanged. 

@see #target
"
      end

      operation 491266 "effective_profile"
	public return_type class_ref 178562 // TaggedProfile
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the profile that will be used to send the request. If a 
location forward has occurred for this operation's object and 
that object's profile changed accordingly, then this profile will 
be that located profile.
"
      end

      operation 491394 "received_exception"
	public return_type class_ref 144642 // Any
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an any which contains the exception to be returned to 
the client. 
<p>
If the exception is a user exception which cannot be inserted 
into an any (e.g., it is unknown or the bindings don t provide 
the <code>TypeCode</code>), then this attribute will be an any 
containing the system exception <code>UNKNOWN</code> with a 
standard minor code of 1. However, the repository id of 
the exception is available in the <code>received_exception_id</code> 
attribute.

@see #received_exception_id
"
      end

      operation 491522 "received_exception_id"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the repository id of the exception to be returned to 
the client.

@see #received_exception
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 491650 "get_effective_component"
	public return_type class_ref 178690 // TaggedComponent
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>IOP.TaggedComponent</code> with the given ID from 
the profile selected for this request. 
<p>
If there is more than one component for a given component ID, it 
is undefined which component this operation returns. If there is 
more than one component for a given component ID, 
<code>get_effective_components</code> should be called instead. 

@param id The component id of the component which 
    is to be returned. 
@return The <code>IOP.TaggedComponent</code> obtained with the 
    given identifier.
@exception BAD_PARAM thrown, with a standard minor code of 28, if
    no component exists for the given component ID.
@see #get_effective_components
"
      end

      operation 491778 "get_effective_components"
	public return_type class_ref 178690 // TaggedComponent
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all tagged components with the given ID from the 
profile selected for this request. 

@param id The component id of the components which are to be returned. 
@return An array of <code>TaggedComponent</code> objects, each of 
    which contains the given identifier.
@exception BAD_PARAM thrown, with a standard minor code of 28, if
    no component exists for the given component ID.
@see #get_effective_component
"
      end

      operation 491906 "get_request_policy"
	public return_type class_ref 134274 // Policy
	nparams 1
	  param in name "type" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the given policy in effect for this operation. 

@exception INV_POLICY thrown, with a standard minor code of 1, if the 
    policy type is not valid either because the specified type is 
    not supported by this ORB or because a policy object of that type 
    is not associated with this Object
@param type The policy type which specifies the policy to be 
    returned. 
@return The <code>CORBA.Policy</code> obtained with the given type.
@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 492034 "add_request_service_context"
	public explicit_return_type "void"
	nparams 2
	  param inout name "service_context" type class_ref 177154 // ServiceContext
	  param inout name "replace" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows Interceptors to add service contexts to the request. 
<p>
There is no declaration of the order of the service contexts. 
They may or may not appear in the order that they are added. 

@param service_context The <code>IOP.ServiceContext</code> to be 
    added to the request. 
@param replace Indicates the behavior of this operation when a 
    service context already exists with the given ID. If false, 
    then <code>BAD_INV_ORDER</code> with a standard minor code of 15 
    is thrown. If true, then the existing service context is 
    replaced by the new one.
"
      end
    end

    class 180098 "ObjectReferenceTemplate"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceTemplate.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The object reference template.  An instance of this must
exist for each object adapter created in an ORB.  The server_id,
orb_id, and adapter_name attributes uniquely identify this template
within the scope of an IMR.  Note that adapter_id is similarly unique
within the same scope, but it is opaque, and less useful in many
cases.
"
      classrelation 248834 // <generalisation>
	relation 248834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 248834 // <generalisation>
	  b parent class_ref 180994 // ObjectReferenceFactory
      end

      operation 654082 "server_id"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654210 "orb_id"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654338 "adapter_name"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 180354 "Interceptor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/Interceptor.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


All Portable Interceptors implement Interceptor.
"
      classrelation 4897282 // <generalisation>
	relation 4897282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897282 // <generalisation>
	  b parent class_ref 1471106 // InterceptorOperations
      end

      classrelation 4897410 // <generalisation>
	relation 4897410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897410 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 4897538 // <generalisation>
	relation 4897538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897538 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 180738 "IORInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInfo.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Provides the server-side ORB service with access to the applicable 
policies during IOR construction and the ability to add components. 
The ORB passes an instance of its implementation of this interface as 
a parameter to <code>IORInterceptor.establish_components</code>.

@see IORInterceptor
"
      classrelation 204546 // <generalisation>
	relation 204546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 204546 // <generalisation>
	  b parent class_ref 180866 // IORInfoOperations
      end

      classrelation 204674 // <generalisation>
	relation 204674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 204674 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 204802 // <generalisation>
	relation 204802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 204802 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 180866 "IORInfoOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInfoOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Provides the server-side ORB service with access to the applicable 
policies during IOR construction and the ability to add components. 
The ORB passes an instance of its implementation of this interface as 
a parameter to <code>IORInterceptor.establish_components</code>.

@see IORInterceptor
"
      operation 500354 "get_effective_policy"
	public return_type class_ref 134274 // Policy
	nparams 1
	  param in name "type" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an ORB service implementation to determine what server side 
policy of a particular type is in effect for an IOR being 
constructed.  When the IOR being constructed is for an object 
implemented using a POA, all Policy objects passed to the 
<code>PortableServer.POA.create_POA</code> call that created that 
POA are accessable via <code>get_effective_policy</code>. 
<p>
If a policy for the given type is not known to the ORB, then this 
operation will throw <code>INV_POLICY</code> with a standard minor 
code of 2. 

@param type an int specifying the type of policy to return. 
@return The effective <code>CORBA.Policy</code> object of the 
    requested type. If the given policy type is known, but no policy 
    of that type is in effect, then this operation will return a 
    nil object reference.
"
      end

      operation 500482 "add_ior_component"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tagged_component" type class_ref 178690 // TaggedComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A portable ORB service implementation calls 
<code>add_ior_component</code> from its implementation of 
<code>establish_components</code> to add a tagged component to the 
set which will be included when constructing IORs. The components in 
this set will be included in all profiles. 
<p>
Any number of components may exist with the same component ID. 

@param tagged_component The IOP.TaggedComponent to add.
"
      end

      operation 500610 "add_ior_component_to_profile"
	public explicit_return_type "void"
	nparams 2
	  param inout name "tagged_component" type class_ref 178690 // TaggedComponent
	  param in name "profile_id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A portable ORB service implementation calls 
<code>add_ior_component_to_profile</code> from its implementation of 
<code>establish_components</code> to add a tagged component to the 
set which will be included when constructing IORs. The components in 
this set will be included in the specified profile. 
<p>
Any number of components may exist with the same component ID. 

@param tagged_component The <code>IOP.TaggedComponent</code> to add. 
@param profile_id The profile id of the profile to 
    which this component will be added.
@exception BAD_PARAM thrown, with a standard minor code of 29, if the 
    given profile ID does not define a known profile or it is 
    impossible to add components to that profile.
"
      end

      operation 500738 "manager_id"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the adapter manager id of the object adapter
that was just created and is running IOR interceptors.
"
      end

      operation 500866 "state"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the adapter state of the object adapter
that was just created and is running IOR interceptors.
"
      end

      operation 500994 "adapter_template"
	public return_type class_ref 180098 // ObjectReferenceTemplate
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the object reference template of the object adapter
that was just created and is running IOR interceptors.
"
      end

      operation 501122 "current_factory"
	public return_type class_ref 180994 // ObjectReferenceFactory
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " On read, returns the current factory that will be used to create
object references for the object adapter that was just created
and is running IOR interceptors.  By default, this factory is the same
as the value of the adapter_template attribute.  The current_factory 
may also be set to another object reference template inside an
IORInterceptor_3_0.
"
      end

      operation 501250 "current_factory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newCurrent_factory" type class_ref 180994 // ObjectReferenceFactory
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " On read, returns the current factory that will be used to create
object references for the object adapter that was just created
and is running IOR interceptors.  By default, this factory is the same
as the value of the adapter_template attribute.  The current_factory 
may also be set to another object reference template inside an
IORInterceptor_3_0.
"
      end
    end

    class 180994 "ObjectReferenceFactory"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceFactory.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The object reference factory.  This provides the capability of
creating an object reference.
"
      classrelation 247810 // <generalisation>
	relation 247810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 247810 // <generalisation>
	  b parent class_ref 147458 // ValueBase
      end

      operation 652290 "make_object"
	abstract public return_type class_ref 133378 // Object
	nparams 2
	  param inout name "repositoryId" type class_ref 128130 // String
	  param inout name "object_id" explicit_type "byte"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " make_object creates a CORBA object reference according
to the data in this template, with the given repository ID and
object ID.
"
      end
    end

    class 181506 "ORBInitInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ORBInitInfo.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 
Passed to each <code>ORBInitializer</code>, allowing it to
to register interceptors and perform other duties while the ORB is 
initializing.
<p>
The <code>ORBInitInfo</code> object is only valid during 
<code>ORB.init</code>.  If a service keeps a reference to its 
<code>ORBInitInfo</code> object and tries to use it after 
<code>ORB.init</code> returns, the object no longer exists and an 
<code>OBJECT_NOT_EXIST</code> exception shall be thrown.

@see ORBInitializer
"
      classrelation 205954 // <generalisation>
	relation 205954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 205954 // <generalisation>
	  b parent class_ref 181634 // ORBInitInfoOperations
      end

      classrelation 206082 // <generalisation>
	relation 206082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 206082 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 206210 // <generalisation>
	relation 206210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 206210 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 181634 "ORBInitInfoOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ORBInitInfoOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 
Passed to each <code>ORBInitializer</code>, allowing it to
to register interceptors and perform other duties while the ORB is 
initializing.
<p>
The <code>ORBInitInfo</code> object is only valid during 
<code>ORB.init</code>.  If a service keeps a reference to its 
<code>ORBInitInfo</code> object and tries to use it after 
<code>ORB.init</code> returns, the object no longer exists and an 
<code>OBJECT_NOT_EXIST</code> exception shall be thrown.

@see ORBInitializer
"
      operation 503810 "arguments"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arguments passed to <code>ORB.init</code>.  They may or
may not contain the ORB's arguments.
"
      end

      operation 503938 "orb_id"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ID of the ORB being initialized.
"
      end

      operation 504066 "codec_factory"
	public return_type class_ref 179074 // CodecFactory
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>IOP.CodecFactory</code>. The 
<code>CodecFactory</code> is normally obtained via a call to 
<code>ORB.resolve_initial_references( \"CodecFactory\" )</code>, but 
since the ORB is not yet available and Interceptors, particularly when 
processing service contexts, will require a <code>Codec</code>, a 
means of obtaining a <code>Codec</code> is necessary during ORB 
initialization.
"
      end

      operation 504194 "register_initial_reference"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" type class_ref 128130 // String
	  param inout name "obj" type class_ref 133378 // Object
	nexceptions 1
	  exception class_ref 181762 // InvalidName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identical to <code>ORB.register_initial_reference</code>. This same 
functionality exists here because the ORB, not yet fully initialized, 
is not yet available but initial references may need to be 
registered as part of Interceptor registration. The only difference 
is that the version of this operation on the ORB uses PIDL 
(<code>CORBA.ORB.ObjectId</code>) and 
(<code>CORBA.ORB.InvalidName</code>) whereas the version in this 
interface uses IDL defined in this interface; the semantics are 
identical.
"
      end

      operation 504322 "resolve_initial_references"
	public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 181762 // InvalidName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identical to <code>ORB.resolve_initial_references</code>. This same 
functionality exists here because the ORB, not yet fully initialized, 
is not yet available but initial references may be required from the 
ORB as part of Interceptor registration. The only difference is that 
the version of this operation on the ORB uses PIDL 
(<code>CORBA::ORB::ObjectId</code> and 
<code>CORBA::ORB::InvalidName</code>) whereas the version in this 
interface uses IDL defined in this interface; the semantics 
are identical.
<p>
This operation is only valid during post_init.
"
      end

      operation 504450 "add_client_request_interceptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interceptor" type class_ref 181890 // ClientRequestInterceptor
	nexceptions 1
	  exception class_ref 180482 // DuplicateName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to add a client-side request Interceptor to the list of 
client-side request Interceptors.  

@param interceptor The <code>ClientRequestInterceptor</code> to be 
    added.
@exception DuplicateName thrown if a client-side request Interceptor 
    has already been registered with this Interceptor's name.
"
      end

      operation 504578 "add_server_request_interceptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interceptor" type class_ref 182018 // ServerRequestInterceptor
	nexceptions 1
	  exception class_ref 180482 // DuplicateName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to add a server-side request Interceptor to the list of 
server-side request Interceptors.

@param interceptor The ServerRequestInterceptor to be added.
@exception DuplicateName thrown if a server-side request Interceptor 
    has already been registered with this Interceptor's name
"
      end

      operation 504706 "add_ior_interceptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interceptor" type class_ref 182146 // IORInterceptor
	nexceptions 1
	  exception class_ref 180482 // DuplicateName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to add an IOR Interceptor to the list of IOR Interceptors. 

@param interceptor The IORInterceptor to be added.
@exception DuplicateName thrown if an IOR Interceptor has already 
    been registered with this Interceptor's name. 
"
      end

      operation 504834 "allocate_slot_id"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to allocate a slot on <code>PortableInterceptor.Current</code>. 
<p>
Note that while slot id's can be allocated within an ORB initializer, 
the slots themselves cannot be initialized. 

@return The index to the slot which has been allocated.
@exception BAD_INV_ORDER thrown, with a standard minor code of 14, if 
    <code>set_slot</code> or <code>get_slot</code> is called on the 
    <code>PICurrent</code> within an ORB initializer. 
@see Current
"
      end

      operation 504962 "register_policy_factory"
	public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "policy_factory" type class_ref 182274 // PolicyFactory
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a <code>PolicyFactory</code> for the given 
<code>PolicyType</code>. 

@param type The policy type that the given <code>PolicyFactory</code> 
    serves. 
@param policy_factory The factory for the given policy type.
@exception BAD_INV_ORDER thrown, with a standard minor code of 16, if 
    a <code>PolicyFactory</code> already exists for the given 
    <code>PolicyType</code>.
"
      end
    end

    class 181890 "ClientRequestInterceptor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ClientRequestInterceptor.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Client-side request interceptor.
<p>
A request Interceptor is designed to intercept the flow of a 
request/reply sequence through the ORB at specific points so that 
services can query the request information and manipulate the service 
contexts which are propagated between clients and servers. The primary 
use of request Interceptors is to enable ORB services to transfer 
context information between clients and servers. There are two types 
of request Interceptors: client-side and server-side. 
<p>
To write a client-side Interceptor, implement the 
<code>ClientRequestInterceptor</code> interface. 

@see ClientRequestInfo
"
      classrelation 4897154 // <generalisation>
	relation 4897154 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897154 // <generalisation>
	  b parent class_ref 1470978 // ClientRequestInterceptorOperations
      end

      classrelation 4897666 // <generalisation>
	relation 4897666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897666 // <generalisation>
	  b parent class_ref 180354 // Interceptor
      end

      classrelation 4897794 // <generalisation>
	relation 4897794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897794 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 182018 "ServerRequestInterceptor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ServerRequestInterceptor.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Server-side request interceptor.
<p>
A request Interceptor is designed to intercept the flow of a 
request/reply sequence through the ORB at specific points so that 
services can query the request information and manipulate the service 
contexts which are propagated between clients and servers. The primary 
use of request Interceptors is to enable ORB services to transfer 
context information between clients and servers. There are two types 
of request Interceptors: client-side and server-side. 
<p>
To write a server-side Interceptor, implement the 
ServerRequestInterceptor interface.

@see ServerRequestInfo
"
      classrelation 4903426 // <generalisation>
	relation 4903426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4903426 // <generalisation>
	  b parent class_ref 1474178 // ServerRequestInterceptorOperations
      end

      classrelation 4903554 // <generalisation>
	relation 4903554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4903554 // <generalisation>
	  b parent class_ref 180354 // Interceptor
      end

      classrelation 4903682 // <generalisation>
	relation 4903682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4903682 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 182146 "IORInterceptor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInterceptor.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Interceptor used to establish tagged components in the profiles within 
an IOR.
<p>
In some cases, a portable ORB service implementation may need to add 
information describing the server's or object's ORB service related 
capabilities to object references in order to enable the ORB service 
implementation in the client to function properly. 
<p>
This is supported through the <code>IORInterceptor</code> and 
<code>IORInfo</code> interfaces. 

@see IORInfo
"
      classrelation 4899202 // <generalisation>
	relation 4899202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899202 // <generalisation>
	  b parent class_ref 1472002 // IORInterceptorOperations
      end

      classrelation 4899330 // <generalisation>
	relation 4899330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899330 // <generalisation>
	  b parent class_ref 180354 // Interceptor
      end

      classrelation 4899458 // <generalisation>
	relation 4899458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899458 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 182274 "PolicyFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/PolicyFactory.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Enables policy types to be constructed using 
<code>CORBA.ORB.create_policy</code>.
<p>
A portable ORB service implementation registers an instance of the 
<code>PolicyFactory</code> interface during ORB initialization in order 
to enable its policy types to be constructed using 
<code>CORBA.ORB.create_policy</code>. The POA is required to preserve 
any policy which is registered with <code>ORBInitInfo</code> in this 
manner.

@see ORBInitInfo#register_policy_factory
"
      classrelation 4902658 // <generalisation>
	relation 4902658 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4902658 // <generalisation>
	  b parent class_ref 1473922 // PolicyFactoryOperations
      end

      classrelation 4902786 // <generalisation>
	relation 4902786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4902786 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 4902914 // <generalisation>
	relation 4902914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4902914 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 182658 "Current"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/Current.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Portable Interceptors Current (also known as <code>PICurrent</code>) 
is merely a slot table, the slots of which are used by each service to 
transfer their context data between their context and the request's or 
reply's service context. Each service which wishes to use PICurrent 
reserves a slot or slots at initialization time and uses those slots 
during the processing of requests and replies.
<p>
Before an invocation is made, PICurrent is obtained via a call to 
<code>ORB.resolve_initial_references( \"PICurrent\" )</code>. From within 
the interception points, the data on PICurrent that has moved from the 
thread scope to the request scope is available via the 
<code>get_slot</code> operation on the <code>RequestInfo</code> object. 
A PICurrent can still be obtained via 
<code>resolve_initial_references</code>, but that is the Interceptor's 
thread scope PICurrent.
"
      classrelation 207874 // <generalisation>
	relation 207874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 207874 // <generalisation>
	  b parent class_ref 182786 // CurrentOperations
      end

      classrelation 208386 // <generalisation>
	relation 208386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 208386 // <generalisation>
	  b parent class_ref 183042 // Current
      end

      classrelation 208514 // <generalisation>
	relation 208514 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 208514 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 182786 "CurrentOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/CurrentOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Portable Interceptors Current (also known as <code>PICurrent</code>) 
is merely a slot table, the slots of which are used by each service to 
transfer their context data between their context and the request's or 
reply's service context. Each service which wishes to use PICurrent 
reserves a slot or slots at initialization time and uses those slots 
during the processing of requests and replies.
<p>
Before an invocation is made, PICurrent is obtained via a call to 
<code>ORB.resolve_initial_references( \"PICurrent\" )</code>. From within 
the interception points, the data on PICurrent that has moved from the 
thread scope to the request scope is available via the 
<code>get_slot</code> operation on the <code>RequestInfo</code> object. 
A PICurrent can still be obtained via 
<code>resolve_initial_references</code>, but that is the Interceptor's 
thread scope PICurrent.
"
      classrelation 207746 // <generalisation>
	relation 207746 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 207746 // <generalisation>
	  b parent class_ref 182914 // CurrentOperations
      end

      operation 507522 "get_slot"
	public return_type class_ref 144642 // Any
	nparams 1
	  param in name "id" explicit_type "int"
	nexceptions 1
	  exception class_ref 177026 // InvalidSlot
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the slot data the application set in PICurrent via 
<code>get_slot</code>.  The data is in the form of an Any. 
<p>
If the given slot has not been set, an Any containing a type code 
with a <code>TCKind</code> value of <code>tk_null</code> and no value 
is returned. 

@param id The <code>SlotId</code> of the slot from which the data will 
    be returned. 
@return The data, in the form of an Any, of the given slot identifier.
@exception InvalidSlot thrown if get_slot is called on a slot that 
    has not been allocated. 
@exception BAD_INV_ORDER thrown if <code>get_slot</code> is called 
    from within an ORB initializer 
"
      end

      operation 507650 "set_slot"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "data" type class_ref 144642 // Any
	nexceptions 1
	  exception class_ref 177026 // InvalidSlot
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets data in a slot. The data is in the form of an Any. If data 
already exists in that slot, it is overridden. 

@param id The <code>SlotId</code> of the slot to which the data will 
    be set. 
@param data The data, in the form of an Any, which will be set 
    to the identified slot. 
@exception InvalidSlot thrown if <code>set_slot</code> is called on 
    a slot that has not been allocated.
@exception BAD_INV_ORDER thrown if <code>set_slot</code> is called 
    from within an ORB initializer. 
"
      end
    end

    class 186242 "ServerRequestInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ServerRequestInfo.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Request Information, accessible to server-side request interceptors.
<p>
Some attributes and operations on <code>ServerRequestInfo</code> are not 
valid at all interception points.  The following table shows the validity 
of each attribute or operation.  If it is not valid, attempting to access 
it will result in a <code>BAD_INV_ORDER</code> being thrown with a 
standard minor code of 14.
<p>


<table border=1 summary=\"Shows the validity of each attribute or operation\">
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th id=\"rec_req_ser_con\" valign=\"bottom\">receive_request_<br>service_contexts</th>
      <th id=\"rec_req\"  valign=\"bottom\">receive_request</th>
      <th id=\"send_rep\" valign=\"bottom\">send_reply</th>
      <th id=\"send_exc\" valign=\"bottom\">send_exception</th>
      <th id=\"send_oth\" valign=\"bottom\">send_other</th>
    </tr>
  </thead>
 <tbody>


<tr>
  <td id=\"ri\" colspan=6><i>Inherited from RequestInfo:</i></td>
</tr>

<tr><th id=\"req_id\"><p align=\"left\">request_id</p></th>
<td headers=\"ri req_id rec_req_ser_con\">yes</td> 
<td headers=\"ri req_id rec_req\">yes</td> 
<td headers=\"ri req_id send_rep\">yes</td> 
<td headers=\"ri req_id send_exc\">yes</td> 
<td headers=\"ri req_id send_oth\">yes</td></tr>

<tr><th id=\"op\"><p align=\"left\">operation</p></th>
<td headers=\"ri op rec_req_ser_con\">yes</td> 
<td headers=\"ri op rec_req\">yes</td> 
<td headers=\"ri op send_rep\">yes</td> 
<td headers=\"ri op send_exc\">yes</td> 
<td headers=\"ri op send_oth\">yes</td></tr>

<tr><th id=\"args\"><p align=\"left\">arguments</p></th>
<td headers=\"ri args rec_req_ser_con\">no </td> 
<td headers=\"ri args rec_req\">yes<sub>1</sub></td>
<td headers=\"ri args send_rep\">yes</td> 
<td headers=\"ri args send_exc\">no<sub>2</sub></td>
<td headers=\"ri args send_oth\">no<sub>2</sub>
</td></tr>

<tr><th id=\"exps\"><p align=\"left\">exceptions</p></th>
<td headers=\"ri exps rec_req_ser_con\">no </td> 
<td headers=\"ri exps rec_req\">yes</td> 
<td headers=\"ri exps send_rep\">yes</td> 
<td headers=\"ri exps send_exc\">yes</td> 
<td headers=\"ri exps send_oth\">yes</td></tr>

<tr><th id=\"contexts\"><p align=\"left\">contexts</p></th>
<td headers=\"ri contexts rec_req_ser_con\">no </td> 
<td headers=\"ri contexts rec_req\">yes</td> 
<td headers=\"ri contexts send_rep\">yes</td> 
<td headers=\"ri contexts send_exc\">yes</td> 
<td headers=\"ri contexts send_oth\">yes</td></tr>

<tr><th id=\"op_con\"><p align=\"left\">operation_context</p></th>
<td headers=\"ri op_con rec_req_ser_con\">no </td> 
<td headers=\"ri op_con rec_req\">yes</td> 
<td headers=\"ri op_con send_rep\">yes</td> 
<td headers=\"ri op_con send_exc\">no </td> 
<td headers=\"ri op_con send_oth\">no </td>
</tr>

<tr><th id=\"result\"><p align=\"left\">result</p></th>
<td headers=\"ri result rec_req_ser_con\">no </td> 
<td headers=\"ri result rec_req\">no </td> 
<td headers=\"ri result send_rep\">yes</td> 
<td headers=\"ri result send_exc\">no </td> 
<td headers=\"ri result send_oth\">no </td>
</tr>

<tr><th id=\"res_ex\"><p align=\"left\">response_expected</p></th>
<td headers=\"ri res_ex rec_req_ser_con\">yes</td> 
<td headers=\"ri res_ex rec_req\">yes</td> 
<td headers=\"ri res_ex send_rep\">yes</td> 
<td headers=\"ri res_ex send_exc\">yes</td> 
<td headers=\"ri res_ex send_oth\">yes</td></tr>

<tr><th id=\"syn_scp\"><p align=\"left\">sync_scope</p></th>
<td headers=\"ri syn_scp rec_req_ser_con\">yes</td> 
<td headers=\"ri syn_scp rec_req\">yes</td> 
<td headers=\"ri syn_scp send_rep\">yes</td> 
<td headers=\"ri syn_scp send_exc\">yes</td> 
<td headers=\"ri syn_scp send_oth\">yes</td></tr>

   <tr><td><b>request_id</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>operation</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>arguments</b></td>
   <td>no </td> <td>yes<sub>1</sub</td> 
                             <td>yes</td> <td>no<sub>2</sub></td> 
                                                       <td>no<sub>2</sub>
                                                       </td></tr>

   <tr><td><b>exceptions</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>contexts</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>operation_context</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>no </td> <td>no </td></tr>

   <tr><td><b>result</b></td>
   <td>no </td> <td>no </td> <td>yes</td> <td>no </td> <td>no </td></tr>

   <tr><td><b>response_expected</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>sync_scope</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>reply_status</b></td>
   <td>no </td> <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>forward_reference</b></td>
   <td>no </td> <td>no </td> <td>no </td> <td>no </td> <td>yes<sub>2</sub>
								</td></tr>

   <tr><td><b>get_slot</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>get_request_service_context</b></td>
   <td>yes</td> <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>get_reply_service_context</b></td>
   <td>no </td> <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr>
     <td colspan=6><i>ServerRequestInfo-specific:</i></td>
   </tr>

   <tr><td><b>sending_exception</b></td>
   <td>no </td> <td>no </td> <td>no </td> <td>yes</td> <td>no </td></tr>

   <tr><td><b>object_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes<sub>3</sub></td> 
						       <td>yes<sub>3</sub>
						                </td></tr>

   <tr><td><b>adapter_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes<sub>3</sub></td> 
						       <td>yes<sub>3</sub>
								</td></tr>

   <tr><td><b>server_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>orb_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>adapter_name</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>target_most_derived_interface</b></td>
   <td>no </td> <td>yes</td> <td>no<sub>4</sub></td> 
					  <td>no<sub>4</sub></td> 
						       <td>no<sub>4</sub>
							       </td></tr>

   <tr><td><b>get_server_policy</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>set_slot</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>target_is_a</b></td>
   <td>no </td> <td>yes</td> <td>no<sub>4</sub></td> 
					  <td>no<sub>4</sub></td> 
						       <td>no<sub>4</sub>
							       </td></tr>

   <tr><td><b>add_reply_service_context</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>
  </tbody>
</table>

<ol>
  <li>When <code>ServerRequestInfo</code> is passed to 
      <code>receive_request</code>, there is an entry in the list for 
      every argument, whether in, inout, or out. But only the in and 
      inout arguments will be available.</li>
  <li>If the <code>reply_status</code> attribute is not 
      <code>LOCATION_FORWARD</code>, accessing this attribute will throw
      <code>BAD_INV_ORDER</code> with a standard minor code of 14.</li>
  <li>If the servant locator caused a location forward, or thrown an 
      exception, this attribute/operation may not be available in this 
      interception point. <code>NO_RESOURCES</code> with a standard minor 
      code of 1 will be thrown if it is not available.</li>
  <li>The operation is not available in this interception point because 
      the necessary information requires access to the target object's 
      servant, which may no longer be available to the ORB. For example, 
      if the object's adapter is a POA that uses a 
      <code>ServantLocator</code>, then the ORB invokes the interception 
      point after it calls <code>ServantLocator.postinvoke()</code></li>.
</ol>

@see ServerRequestInterceptor
"
      classrelation 214018 // <generalisation>
	relation 214018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 214018 // <generalisation>
	  b parent class_ref 186370 // ServerRequestInfoOperations
      end

      classrelation 214146 // <generalisation>
	relation 214146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 214146 // <generalisation>
	  b parent class_ref 176642 // RequestInfo
      end

      classrelation 214274 // <generalisation>
	relation 214274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 214274 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 186370 "ServerRequestInfoOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ServerRequestInfoOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Request Information, accessible to server-side request interceptors.
<p>
Some attributes and operations on <code>ServerRequestInfo</code> are not 
valid at all interception points.  The following table shows the validity 
of each attribute or operation.  If it is not valid, attempting to access 
it will result in a <code>BAD_INV_ORDER</code> being thrown with a 
standard minor code of 14.
<p>


<table border=1 summary=\"Shows the validity of each attribute or operation\">
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th id=\"rec_req_ser_con\" valign=\"bottom\">receive_request_<br>service_contexts</th>
      <th id=\"rec_req\"  valign=\"bottom\">receive_request</th>
      <th id=\"send_rep\" valign=\"bottom\">send_reply</th>
      <th id=\"send_exc\" valign=\"bottom\">send_exception</th>
      <th id=\"send_oth\" valign=\"bottom\">send_other</th>
    </tr>
  </thead>
 <tbody>


<tr>
  <td id=\"ri\" colspan=6><i>Inherited from RequestInfo:</i></td>
</tr>

<tr><th id=\"req_id\"><p align=\"left\">request_id</p></th>
<td headers=\"ri req_id rec_req_ser_con\">yes</td> 
<td headers=\"ri req_id rec_req\">yes</td> 
<td headers=\"ri req_id send_rep\">yes</td> 
<td headers=\"ri req_id send_exc\">yes</td> 
<td headers=\"ri req_id send_oth\">yes</td></tr>

<tr><th id=\"op\"><p align=\"left\">operation</p></th>
<td headers=\"ri op rec_req_ser_con\">yes</td> 
<td headers=\"ri op rec_req\">yes</td> 
<td headers=\"ri op send_rep\">yes</td> 
<td headers=\"ri op send_exc\">yes</td> 
<td headers=\"ri op send_oth\">yes</td></tr>

<tr><th id=\"args\"><p align=\"left\">arguments</p></th>
<td headers=\"ri args rec_req_ser_con\">no </td> 
<td headers=\"ri args rec_req\">yes<sub>1</sub></td>
<td headers=\"ri args send_rep\">yes</td> 
<td headers=\"ri args send_exc\">no<sub>2</sub></td>
<td headers=\"ri args send_oth\">no<sub>2</sub>
</td></tr>

<tr><th id=\"exps\"><p align=\"left\">exceptions</p></th>
<td headers=\"ri exps rec_req_ser_con\">no </td> 
<td headers=\"ri exps rec_req\">yes</td> 
<td headers=\"ri exps send_rep\">yes</td> 
<td headers=\"ri exps send_exc\">yes</td> 
<td headers=\"ri exps send_oth\">yes</td></tr>

<tr><th id=\"contexts\"><p align=\"left\">contexts</p></th>
<td headers=\"ri contexts rec_req_ser_con\">no </td> 
<td headers=\"ri contexts rec_req\">yes</td> 
<td headers=\"ri contexts send_rep\">yes</td> 
<td headers=\"ri contexts send_exc\">yes</td> 
<td headers=\"ri contexts send_oth\">yes</td></tr>

<tr><th id=\"op_con\"><p align=\"left\">operation_context</p></th>
<td headers=\"ri op_con rec_req_ser_con\">no </td> 
<td headers=\"ri op_con rec_req\">yes</td> 
<td headers=\"ri op_con send_rep\">yes</td> 
<td headers=\"ri op_con send_exc\">no </td> 
<td headers=\"ri op_con send_oth\">no </td>
</tr>

<tr><th id=\"result\"><p align=\"left\">result</p></th>
<td headers=\"ri result rec_req_ser_con\">no </td> 
<td headers=\"ri result rec_req\">no </td> 
<td headers=\"ri result send_rep\">yes</td> 
<td headers=\"ri result send_exc\">no </td> 
<td headers=\"ri result send_oth\">no </td>
</tr>

<tr><th id=\"res_ex\"><p align=\"left\">response_expected</p></th>
<td headers=\"ri res_ex rec_req_ser_con\">yes</td> 
<td headers=\"ri res_ex rec_req\">yes</td> 
<td headers=\"ri res_ex send_rep\">yes</td> 
<td headers=\"ri res_ex send_exc\">yes</td> 
<td headers=\"ri res_ex send_oth\">yes</td></tr>

<tr><th id=\"syn_scp\"><p align=\"left\">sync_scope</p></th>
<td headers=\"ri syn_scp rec_req_ser_con\">yes</td> 
<td headers=\"ri syn_scp rec_req\">yes</td> 
<td headers=\"ri syn_scp send_rep\">yes</td> 
<td headers=\"ri syn_scp send_exc\">yes</td> 
<td headers=\"ri syn_scp send_oth\">yes</td></tr>

   <tr><td><b>request_id</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>operation</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>arguments</b></td>
   <td>no </td> <td>yes<sub>1</sub</td> 
                             <td>yes</td> <td>no<sub>2</sub></td> 
                                                       <td>no<sub>2</sub>
                                                       </td></tr>

   <tr><td><b>exceptions</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>contexts</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>operation_context</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>no </td> <td>no </td></tr>

   <tr><td><b>result</b></td>
   <td>no </td> <td>no </td> <td>yes</td> <td>no </td> <td>no </td></tr>

   <tr><td><b>response_expected</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>sync_scope</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>reply_status</b></td>
   <td>no </td> <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>forward_reference</b></td>
   <td>no </td> <td>no </td> <td>no </td> <td>no </td> <td>yes<sub>2</sub>
								</td></tr>

   <tr><td><b>get_slot</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>get_request_service_context</b></td>
   <td>yes</td> <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>get_reply_service_context</b></td>
   <td>no </td> <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr>
     <td colspan=6><i>ServerRequestInfo-specific:</i></td>
   </tr>

   <tr><td><b>sending_exception</b></td>
   <td>no </td> <td>no </td> <td>no </td> <td>yes</td> <td>no </td></tr>

   <tr><td><b>object_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes<sub>3</sub></td> 
						       <td>yes<sub>3</sub>
						                </td></tr>

   <tr><td><b>adapter_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes<sub>3</sub></td> 
						       <td>yes<sub>3</sub>
								</td></tr>

   <tr><td><b>server_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>orb_id</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>adapter_name</b></td>
   <td>no </td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>target_most_derived_interface</b></td>
   <td>no </td> <td>yes</td> <td>no<sub>4</sub></td> 
					  <td>no<sub>4</sub></td> 
						       <td>no<sub>4</sub>
							       </td></tr>

   <tr><td><b>get_server_policy</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>set_slot</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>

   <tr><td><b>target_is_a</b></td>
   <td>no </td> <td>yes</td> <td>no<sub>4</sub></td> 
					  <td>no<sub>4</sub></td> 
						       <td>no<sub>4</sub>
							       </td></tr>

   <tr><td><b>add_reply_service_context</b></td>
   <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td> <td>yes</td></tr>
  </tbody>
</table>

<ol>
  <li>When <code>ServerRequestInfo</code> is passed to 
      <code>receive_request</code>, there is an entry in the list for 
      every argument, whether in, inout, or out. But only the in and 
      inout arguments will be available.</li>
  <li>If the <code>reply_status</code> attribute is not 
      <code>LOCATION_FORWARD</code>, accessing this attribute will throw
      <code>BAD_INV_ORDER</code> with a standard minor code of 14.</li>
  <li>If the servant locator caused a location forward, or thrown an 
      exception, this attribute/operation may not be available in this 
      interception point. <code>NO_RESOURCES</code> with a standard minor 
      code of 1 will be thrown if it is not available.</li>
  <li>The operation is not available in this interception point because 
      the necessary information requires access to the target object's 
      servant, which may no longer be available to the ORB. For example, 
      if the object's adapter is a POA that uses a 
      <code>ServantLocator</code>, then the ORB invokes the interception 
      point after it calls <code>ServantLocator.postinvoke()</code></li>.
</ol>

@see ServerRequestInterceptor
"
      classrelation 213890 // <generalisation>
	relation 213890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 213890 // <generalisation>
	  b parent class_ref 176770 // RequestInfoOperations
      end

      operation 545922 "sending_exception"
	public return_type class_ref 144642 // Any
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an any which contains the exception to be returned to 
the client. 
<p>
If the exception is a user exception which cannot be inserted into 
an any (e.g., it is unknown or the bindings don't provide the 
<code>TypeCode</code>), then this attribute will be an any 
containing the system exception <code>UNKNOWN</code> with a 
standard minor code of 1.

@see <a href=\"package-summary.html#unimpl\">
    <code>PortableInterceptor</code> package comments for 
    limitations / unimplemented features</a>
"
      end

      operation 546050 "object_id"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the opaque <code>object_id</code> describing the target of 
the operation invocation.
"
      end

      operation 546178 "adapter_id"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the opaque identifier for the object adapter.
"
      end

      operation 546306 "server_id"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the server ID that was specified on ORB::init using the -ORBServerId
argument.
"
      end

      operation 546434 "orb_id"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ID that was used to create the ORB.
"
      end

      operation 546562 "adapter_name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sequence of strings that identifies the object
adapter instance that is handling this request.
"
      end

      operation 546690 "target_most_derived_interface"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the repository id for the most derived interface of the 
servant.
"
      end

      operation 546818 "get_server_policy"
	public return_type class_ref 134274 // Policy
	nparams 1
	  param in name "type" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the policy in effect for this operation for the given 
policy type. The returned <code>CORBA.Policy</code> object shall 
only be a policy whose type was registered via 
<code>register_policy_factory</code>. 

@param type The <code>CORBA.PolicyType</code> which specifies the 
    policy to be returned. 
@return The <code>CORBA.Policy</code> obtained with the given 
    policy type.
@exception INV_POLICY thrown, with a standard minor code of 2, if
    a policy for the given type was not registered via 
    <code>register_policy_factory</code>.
@see ORBInitInfo#register_policy_factory
"
      end

      operation 546946 "set_slot"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "data" type class_ref 144642 // Any
	nexceptions 1
	  exception class_ref 177026 // InvalidSlot
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to set a slot in the 
<code>PortableInterceptor.Current</code> that is in the scope of 
the request. If data already exists in that slot, it will be 
overwritten. 

@param id The id of the slot. 
@param data The data, in the form of an any, to store in that slot.
@exception InvalidSlot thrown if the ID does not define an allocated 
    slot. 
@see Current
"
      end

      operation 547074 "target_is_a"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the servant is the given repository id, 
false if it is not. 

@param id The caller wants to know if the servant is this 
    repository id. 
@return Is the servant the given RepositoryId?
"
      end

      operation 547202 "add_reply_service_context"
	public explicit_return_type "void"
	nparams 2
	  param inout name "service_context" type class_ref 177154 // ServiceContext
	  param inout name "replace" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows Interceptors to add service contexts to the request. 
<p>
There is no declaration of the order of the service contexts. 
They may or may not appear in the order that they are added. 

@param service_context The <code>IOP.ServiceContext</code> to add to 
    the reply. 
@param replace Indicates the behavior of this operation when a 
    service context already exists with the given ID. If false, 
    then <code>BAD_INV_ORDER</code> with a standard minor code of 15 
    is thrown. If true, then the existing service context is 
    replaced by the new one.
@exception BAD_INV_ORDER thrown, with a standard minor code of 15, if
    replace is false and a service context already exists with the
    given ID.
"
      end
    end

    class 243074 "ORBInitializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ORBInitializer.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Facilitates interceptor registration and ORB initialization.
<p>
Interceptors are intended to be a means by which ORB services gain 
access to ORB processing, effectively becoming part of the ORB. 
Since Interceptors are part of the ORB, when <code>ORB.init</code> 
returns an ORB, the Interceptors shall have been registered. 
Interceptors cannot be registered on an ORB after it has been 
returned by a call to <code>ORB.init</code>.
<p>
An Interceptor is registered by registering an associated 
<code>ORBInitializer</code> object which implements the 
<code>ORBInitializer</code> interface. When an ORB is initializing, 
it shall call each registered <code>ORBInitializer</code>, passing it 
an <code>ORBInitInfo</code> object which is used to register its 
Interceptor.
<p>
<b>Registering ORB Initializers in Java</b>
<p>
ORBInitializers are registered via Java ORB properties.
<p>
The property names are of the form: 
  <blockquote><code>
    org.omg.PortableInterceptor.ORBInitializerClass.&lt;Service&gt;
  </code></blockquote>
where <code>&lt;Service&gt;</code> is the string name of a class 
which implements 
  <blockquote><code>
    org.omg.PortableInterceptor.ORBInitializer
  </code></blockquote>
To avoid name collisions, the reverse DNS name convention should be 
used. For example, if company X has three initializers, it could define 
the following properties: 
<ul>
  <li><code>
    org.omg.PortableInterceptor.ORBInitializerClass.com.x.Init1
  </code></li>
  <li><code>
    org.omg.PortableInterceptor.ORBInitializerClass.com.x.Init2
  </code></li>
  <li><code>
    org.omg.PortableInterceptor.ORBInitializerClass.com.x.Init3
  </code></li>
</ul>
During ORB.init, these ORB properties which begin with 
<code>org.omg.PortableInterceptor.ORBInitializerClass</code> shall be 
collected, the <code>&lt;Service&gt;</code> portion of each property 
shall be extracted, an object shall be instantiated with the 
<code>&lt;Service&gt;</code> string as its class name, and the 
<code>pre_init</code> and <code>post_init</code> methods shall be 
called on that object. If there are any exceptions, the ORB shall 
ignore them and proceed. 
<p>
<b><i>Example</i></b>
<p>
A client-side logging service written by company X, for example, may 
have the following ORBInitializer implementation: 
<code><pre>
package com.x.logging;

import org.omg.PortableInterceptor.Interceptor; 
import org.omg.PortableInterceptor.ORBInitializer; 
import org.omg.PortableInterceptor.ORBInitInfo; 

public class LoggingService implements ORBInitializer { 
    void pre_init( ORBInitInfo info ) { 
        // Instantiate the Logging Service s Interceptor. 
        Interceptor interceptor = new LoggingInterceptor(); 

        // Register the Logging Service s Interceptor. 
        info.add_client_request_interceptor( interceptor ); 
    } 

    void post_init( ORBInitInfo info ) { 
        // This service does not need two init points. 
    } 
} 
</pre></code>
To run a program called <code>MyApp</code> using this logging 
service, the user could type: 
  <blockquote><code>
    java 
-Dorg.omg.PortableInterceptor.ORBInitializerClass.com.x.Logging.LoggingService 
    MyApp
  </code></blockquote>
<p>
<b>Notes about Registering Interceptors</b>
<p>
Request Interceptors are registered on a per-ORB basis. 
<p>
To achieve virtual per-object Interceptors, query the policies on the 
target from within the interception points to determine whether they 
should do any work. 
<p>
To achieve virtual per-POA Interceptors, instantiate each POA with a 
different ORB. While Interceptors may be ordered administratively, 
there is no concept of order with respect to the registration of 
Interceptors. Request Interceptors are concerned with service contexts. 
Service contexts have no order, so there is no purpose for request 
Interceptors to have an order. IOR Interceptors are concerned with 
tagged components. Tagged components also have no order, so there 
is no purpose for IOR Interceptors to have an order. 
<p>
Registration code should avoid using the ORB (i.e., calling 
<code>ORB.init</code> with the provided <code>orb_id</code>). Since 
registration occurs during ORB initialization, results of invocations 
on this ORB while it is in this state are undefined. 

@see ORBInitInfo
"
      classrelation 336130 // <generalisation>
	relation 336130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 336130 // <generalisation>
	  b parent class_ref 248706 // ORBInitializerOperations
      end

      classrelation 336258 // <generalisation>
	relation 336258 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 336258 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 336386 // <generalisation>
	relation 336386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 336386 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 248706 "ORBInitializerOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ORBInitializerOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Facilitates interceptor registration and ORB initialization.
<p>
Interceptors are intended to be a means by which ORB services gain 
access to ORB processing, effectively becoming part of the ORB. 
Since Interceptors are part of the ORB, when <code>ORB.init</code> 
returns an ORB, the Interceptors shall have been registered. 
Interceptors cannot be registered on an ORB after it has been 
returned by a call to <code>ORB.init</code>.
<p>
An Interceptor is registered by registering an associated 
<code>ORBInitializer</code> object which implements the 
<code>ORBInitializer</code> interface. When an ORB is initializing, 
it shall call each registered <code>ORBInitializer</code>, passing it 
an <code>ORBInitInfo</code> object which is used to register its 
Interceptor.
<p>
<b>Registering ORB Initializers in Java</b>
<p>
ORBInitializers are registered via Java ORB properties.
<p>
The property names are of the form: 
  <blockquote><code>
    org.omg.PortableInterceptor.ORBInitializerClass.&lt;Service&gt;
  </code></blockquote>
where <code>&lt;Service&gt;</code> is the string name of a class 
which implements 
  <blockquote><code>
    org.omg.PortableInterceptor.ORBInitializer
  </code></blockquote>
To avoid name collisions, the reverse DNS name convention should be 
used. For example, if company X has three initializers, it could define 
the following properties: 
<ul>
  <li><code>
    org.omg.PortableInterceptor.ORBInitializerClass.com.x.Init1
  </code></li>
  <li><code>
    org.omg.PortableInterceptor.ORBInitializerClass.com.x.Init2
  </code></li>
  <li><code>
    org.omg.PortableInterceptor.ORBInitializerClass.com.x.Init3
  </code></li>
</ul>
During ORB.init, these ORB properties which begin with 
<code>org.omg.PortableInterceptor.ORBInitializerClass</code> shall be 
collected, the <code>&lt;Service&gt;</code> portion of each property 
shall be extracted, an object shall be instantiated with the 
<code>&lt;Service&gt;</code> string as its class name, and the 
<code>pre_init</code> and <code>post_init</code> methods shall be 
called on that object. If there are any exceptions, the ORB shall 
ignore them and proceed. 
<p>
<b><i>Example</i></b>
<p>
A client-side logging service written by company X, for example, may 
have the following ORBInitializer implementation: 
<code><pre>
package com.x.logging;

import org.omg.PortableInterceptor.Interceptor; 
import org.omg.PortableInterceptor.ORBInitializer; 
import org.omg.PortableInterceptor.ORBInitInfo; 

public class LoggingService implements ORBInitializer { 
    void pre_init( ORBInitInfo info ) { 
        // Instantiate the Logging Service s Interceptor. 
        Interceptor interceptor = new LoggingInterceptor(); 

        // Register the Logging Service s Interceptor. 
        info.add_client_request_interceptor( interceptor ); 
    } 

    void post_init( ORBInitInfo info ) { 
        // This service does not need two init points. 
    } 
} 
</pre></code>
To run a program called <code>MyApp</code> using this logging 
service, the user could type: 
  <blockquote><code>
    java 
-Dorg.omg.PortableInterceptor.ORBInitializerClass.com.x.Logging.LoggingService 
    MyApp
  </code></blockquote>
<p>
<b>Notes about Registering Interceptors</b>
<p>
Request Interceptors are registered on a per-ORB basis. 
<p>
To achieve virtual per-object Interceptors, query the policies on the 
target from within the interception points to determine whether they 
should do any work. 
<p>
To achieve virtual per-POA Interceptors, instantiate each POA with a 
different ORB. While Interceptors may be ordered administratively, 
there is no concept of order with respect to the registration of 
Interceptors. Request Interceptors are concerned with service contexts. 
Service contexts have no order, so there is no purpose for request 
Interceptors to have an order. IOR Interceptors are concerned with 
tagged components. Tagged components also have no order, so there 
is no purpose for IOR Interceptors to have an order. 
<p>
Registration code should avoid using the ORB (i.e., calling 
<code>ORB.init</code> with the provided <code>orb_id</code>). Since 
registration occurs during ORB initialization, results of invocations 
on this ORB while it is in this state are undefined. 

@see ORBInitInfo
"
      operation 1235842 "pre_init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 181506 // ORBInitInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called during ORB initialization.  If it is expected that initial 
services registered by an interceptor will be used by other 
interceptors, then those initial services shall be registered at 
this point via calls to 
<code>ORBInitInfo.register_initial_reference</code>. 

@param info provides initialization attributes and operations by 
    which Interceptors can be registered.
"
      end

      operation 1235970 "post_init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 181506 // ORBInitInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called during ORB initialization. If a service must resolve initial 
references as part of its initialization, it can assume that all 
initial references will be available at this point. 
<p>
Calling the <code>post_init</code> operations is not the final 
task of ORB initialization. The final task, following the 
<code>post_init</code> calls, is attaching the lists of registered 
interceptors to the ORB. Therefore, the ORB does not contain the 
interceptors during calls to <code>post_init</code>. If an 
ORB-mediated call is made from within <code>post_init</code>, no 
request interceptors will be invoked on that call. 
Likewise, if an operation is performed which causes an IOR to be 
created, no IOR interceptors will be invoked. 

@param info provides initialization attributes and 
    operations by which Interceptors can be registered.
"
      end
    end

    class 1470466 "ACTIVE"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ACTIVE.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2655490 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Object adapter state that indicates normal request processing.

"
      end
    end

    class 1470594 "AdapterManagerIdHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/AdapterManagerIdHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 Adapter manager identifier.  Every object adapter has an adapter manager,
indicated in this API only through the ID.  A group of object adapter
instances may share the same adapter manager, in which case state transitions
reported for the adapter manager are observed by all object adapters with the
same adapter manager ID.
"
      classrelation 4896258 // _id (<unidirectional association>)
	relation 4896258 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/AdapterManagerId:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4896258 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12407426 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param in name "that" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12407554 "extract"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4896386 // __typeCode (<unidirectional association>)
	relation 4896386 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4896386 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12407682 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12407810 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12407938 "read"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12408066 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1470722 "AdapterNameHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/AdapterNameHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The name of an object adapter. This is unique only within
the scope of the ORB that created the object adapter.
"
      classrelation 4896514 // _id (<unidirectional association>)
	relation 4896514 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/AdapterName:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4896514 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12408194 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12408322 "extract"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4896642 // __typeCode (<unidirectional association>)
	relation 4896642 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4896642 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12408450 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12408578 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12408706 "read"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12408834 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1470850 "AdapterStateHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/AdapterStateHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 Type of object adapter state.  State changes are reported either to
the object adapter or to the adapter manager.
"
      classrelation 4896770 // _id (<unidirectional association>)
	relation 4896770 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/AdapterState:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4896770 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12408962 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param in name "that" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12409090 "extract"
	class_operation public explicit_return_type "short"
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4896898 // __typeCode (<unidirectional association>)
	relation 4896898 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4896898 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12409218 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12409346 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12409474 "read"
	class_operation public explicit_return_type "short"
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12409602 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param in name "value" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1470978 "ClientRequestInterceptorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ClientRequestInterceptorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Client-side request interceptor.
<p>
A request Interceptor is designed to intercept the flow of a 
request/reply sequence through the ORB at specific points so that 
services can query the request information and manipulate the service 
contexts which are propagated between clients and servers. The primary 
use of request Interceptors is to enable ORB services to transfer 
context information between clients and servers. There are two types 
of request Interceptors: client-side and server-side. 
<p>
To write a client-side Interceptor, implement the 
<code>ClientRequestInterceptor</code> interface. 

@see ClientRequestInfo
"
      classrelation 4897026 // <generalisation>
	relation 4897026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4897026 // <generalisation>
	  b parent class_ref 1471106 // InterceptorOperations
      end

      operation 12409986 "send_request"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 178306 // ClientRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query request information and modify the 
service context before the request is sent to the server.
<p>
This interception point may throw a system exception. If it does, 
no other Interceptors' <code>send_request</code> operations are called. 
Those Interceptors on the Flow Stack are popped and their 
<code>receive_exception</code> interception points are called. This 
interception point may also throw a <code>ForwardRequest</code> 
exception. If an Interceptor throws this exception, no other 
Interceptors' <code>send_request</code> operations are 
called. Those Interceptors on the Flow Stack are popped and their 
<code>receive_other</code> interception points are called. 
<p>
Compliant Interceptors shall properly follow completion_status 
semantics if they throw a system exception from this interception 
point. The <code>completion_status</code> shall be 
<code>COMPLETED_NO</code>.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end

      operation 12410114 "send_poll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 178306 // ClientRequestInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query information during a Time-Independent 
Invocation (TII) polling get reply sequence. 
<p>
With TII, an application may poll for a response to a request sent 
previously by the polling client or some other client. This poll is 
reported to Interceptors through the <code>send_poll</code> 
interception point and the response is returned through the 
<code>receive_reply</code> or <code>receive_exception</code> 
interception points.  If the response is not available before the
poll time-out expires, the system exception <code>TIMEOUT</code> is
thrown and <code>receive_exception</code> is called with this 
exception. 
<p>
This interception point may throw a system exception. If it does, 
no other Interceptors' <code>send_poll</code> operations are 
called. Those Interceptors on the Flow Stack are popped and their 
<code>receive_exception</code> interception points are called. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. The completion_status shall be 
<code>COMPLETED_NO</code>.

@param ri Information about the current request being intercepted.
@exception TIMEOUT thrown if the response is not available before 
    the poll time-out expires
"
      end

      operation 12410242 "receive_reply"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 178306 // ClientRequestInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query the information on a reply after it 
is returned from the server and before control is returned to the 
client. 
<p>
This interception point may throw a system exception. If it does, 
no other Interceptors' <code>receive_reply</code> operations are 
called. The remaining Interceptors in the Flow Stack shall have 
their <code>receive_exception</code> interception point called. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. The 
<code>completion_status</code> shall be <code>COMPLETED_YES</code>.

@param ri Information about the current request being intercepted.
"
      end

      operation 12410370 "receive_exception"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 178306 // ClientRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates to the interceptor that an exception occurred.  Allows
an Interceptor to query the exception's information before it is 
thrown to the client.
<p>
This interception point may throw a system exception. This has the 
effect of changing the exception which successive Interceptors 
popped from the Flow Stack receive on their calls to 
<code>receive_exception</code>. The exception thrown to the client 
will be the last exception thrown by an Interceptor, or the original 
exception if no Interceptor changes the exception. 
<p>
This interception point may also throw a <code>ForwardRequest</code> 
exception.  If an Interceptor throws this exception, no other 
Interceptors' <code>receive_exception</code> operations are called. 
The remaining Interceptors in the Flow Stack are popped and have their 
<code>receive_other</code> interception point called. 
<p>
If the <code>completion_status</code> of the exception is not 
<code>COMPLETED_NO</code>, then it is inappropriate for this 
interception point to throw a <code>ForwardRequest</code> exception. 
The request s at-most-once semantics would be lost. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. If the original exception is 
a system exception, the <code>completion_status</code> of the new 
exception shall be the same as on the original. If the original 
exception is a user exception, then the <code>completion_status</code> 
of the new exception shall be <code>COMPLETED_YES</code>. 
<p>
Under some conditions, depending on what policies are in effect, an 
exception (such as <code>COMM_FAILURE</code>) may result in a retry 
of the request. While this retry is a new request with respect to 
Interceptors, there is one point of correlation between the original 
request and the retry: because control has not returned to the 
client, the <code>PortableInterceptor.Current</code> for both the 
original request and the retrying request is the same.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end

      operation 12410498 "receive_other"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 178306 // ClientRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query the information available when a 
request results in something other than a normal reply or an 
exception. For example, a request could result in a retry 
(e.g., a GIOP Reply with a <code>LOCATION_FORWARD</code> status was 
received); or on asynchronous calls, the reply does not immediately 
follow the request, but control shall return to the client and an 
ending interception point shall be called. 
<p>
For retries, depending on the policies in effect, a new request may or 
may not follow when a retry has been indicated. If a new request does 
follow, while this request is a new request, with respect to 
Interceptors, there is one point of correlation between the original 
request and the retry: because control has not returned to the client, 
the request scoped <code>PortableInterceptor.Current</code> for both 
the original request and the retrying request is the same.  
<p>
This interception point may throw a system exception. If it does, no 
other Interceptors' <code>receive_other</code> operations are called. 
The remaining Interceptors in the Flow Stack are popped and have 
their <code>receive_exception</code> interception point called.
<p>
This interception point may also throw a <code>ForwardRequest</code> 
exception.  If an Interceptor throws this exception, successive 
Interceptors' <code>receive_other</code> operations are called with 
the new information provided by the <code>ForwardRequest</code> 
exception. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. The 
<code>completion_status</code> shall be <code>COMPLETED_NO</code>. 
If the target invocation had completed, this interception point 
would not be called.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end
    end

    class 1471106 "InterceptorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/InterceptorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


All Portable Interceptors implement Interceptor.
"
      operation 12409730 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the interceptor.
<p>
Each Interceptor may have a name that may be used administratively 
to order the lists of Interceptors. Only one Interceptor of a given 
name can be registered with the ORB for each Interceptor type. An 
Interceptor may be anonymous, i.e., have an empty string as the name 
attribute. Any number of anonymous Interceptors may be registered with 
the ORB.

@return the name of the interceptor.
"
      end

      operation 12409858 "destroy"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides an opportunity to destroy this interceptor.
The destroy method is called during <code>ORB.destroy</code>. When an 
application calls <code>ORB.destroy</code>, the ORB:
<ol>
  <li>waits for all requests in progress to complete</li>
  <li>calls the <code>Interceptor.destroy</code> operation for each 
      interceptor</li>
  <li>completes destruction of the ORB</li>
</ol>
Method invocations from within <code>Interceptor.destroy</code> on 
object references for objects implemented on the ORB being destroyed 
result in undefined behavior. However, method invocations on objects 
implemented on an ORB other than the one being destroyed are 
permitted. (This means that the ORB being destroyed is still capable 
of acting as a client, but not as a server.) 
"
      end
    end

    class 1471234 "CurrentHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/CurrentHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Portable Interceptors Current (also known as <code>PICurrent</code>) 
is merely a slot table, the slots of which are used by each service to 
transfer their context data between their context and the request's or 
reply's service context. Each service which wishes to use PICurrent 
reserves a slot or slots at initialization time and uses those slots 
during the processing of requests and replies.
<p>
Before an invocation is made, PICurrent is obtained via a call to 
<code>ORB.resolve_initial_references( \"PICurrent\" )</code>. From within 
the interception points, the data on PICurrent that has moved from the 
thread scope to the request scope is available via the 
<code>get_slot</code> operation on the <code>RequestInfo</code> object. 
A PICurrent can still be obtained via 
<code>resolve_initial_references</code>, but that is the Interceptor's 
thread scope PICurrent.
"
      classrelation 4897922 // _id (<unidirectional association>)
	relation 4897922 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/Current:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4897922 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12410626 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 182658 // Current
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12410754 "extract"
	class_operation public return_type class_ref 182658 // Current
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4898050 // __typeCode (<unidirectional association>)
	relation 4898050 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4898050 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12410882 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12411010 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12411138 "read"
	class_operation public return_type class_ref 182658 // Current
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12411266 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 182658 // Current
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12411394 "narrow"
	class_operation public return_type class_ref 182658 // Current
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12411522 "unchecked_narrow"
	class_operation public return_type class_ref 182658 // Current
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1471362 "DISCARDING"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/DISCARDING.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2655618 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Object adapter state that causes all requests to be discarded.

"
      end
    end

    class 1471490 "ForwardRequestHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ForwardRequestHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4898434 // _id (<unidirectional association>)
	relation 4898434 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ForwardRequest:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4898434 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12412034 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 177794 // ForwardRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12412162 "extract"
	class_operation public return_type class_ref 177794 // ForwardRequest
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4898562 // __typeCode (<unidirectional association>)
	relation 4898562 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4898562 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      attribute 2655746 "__active"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 12412290 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12412418 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12412546 "read"
	class_operation public return_type class_ref 177794 // ForwardRequest
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12412674 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 177794 // ForwardRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1471618 "HOLDING"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/HOLDING.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2655874 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(0)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Object adapter state that holds requests temporarily until the 
state is changed.

"
      end
    end

    class 1471746 "INACTIVE"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/INACTIVE.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2656002 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(3)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Object adapter state that causes all requests to be discarded.
This state indicates that the adapter is shutting down.

"
      end
    end

    class 1471874 "InvalidSlotHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/InvalidSlotHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4898818 // _id (<unidirectional association>)
	relation 4898818 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/InvalidSlot:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4898818 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12413058 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 177026 // InvalidSlot
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12413186 "extract"
	class_operation public return_type class_ref 177026 // InvalidSlot
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4898946 // __typeCode (<unidirectional association>)
	relation 4898946 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4898946 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      attribute 2656130 "__active"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 12413314 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12413442 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12413570 "read"
	class_operation public return_type class_ref 177026 // InvalidSlot
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12413698 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 177026 // InvalidSlot
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1472002 "IORInterceptorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInterceptorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Interceptor used to establish tagged components in the profiles within 
an IOR.
<p>
In some cases, a portable ORB service implementation may need to add 
information describing the server's or object's ORB service related 
capabilities to object references in order to enable the ORB service 
implementation in the client to function properly. 
<p>
This is supported through the <code>IORInterceptor</code> and 
<code>IORInfo</code> interfaces. 

@see IORInfo
"
      classrelation 4899074 // <generalisation>
	relation 4899074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899074 // <generalisation>
	  b parent class_ref 1471106 // InterceptorOperations
      end

      operation 12413826 "establish_components"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 180738 // IORInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A server side ORB calls the <code>establish_components</code> 
operation on all registered <code>IORInterceptor</code> instances 
when it is assembling the list of components that will be included 
in the profile or profiles of an object reference. This operation 
is not necessarily called for each individual object reference. 
In the case of the POA, this operation is called each time POA::create_POA
is called.  In any case, <code>establish_components</code> is 
guaranteed to be called at least once for each distinct set of 
server policies. 
<p>
An implementation of <code>establish_components</code> must not 
throw exceptions. If it does, the ORB shall ignore the exception 
and proceed to call the next IOR Interceptor's 
<code>establish_components</code> operation. 

@param info The <code>IORInfo</code> instance used by the ORB 
    service to query applicable policies and add components to be 
    included in the generated IORs.
"
      end
    end

    class 1472130 "IORInterceptor_3_0"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInterceptor_3_0.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4899714 // <generalisation>
	relation 4899714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899714 // <generalisation>
	  b parent class_ref 1472258 // IORInterceptor_3_0Operations
      end

      classrelation 4899842 // <generalisation>
	relation 4899842 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899842 // <generalisation>
	  b parent class_ref 182146 // IORInterceptor
      end

      classrelation 4899970 // <generalisation>
	relation 4899970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899970 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 1472258 "IORInterceptor_3_0Operations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInterceptor_3_0Operations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4899586 // <generalisation>
	relation 4899586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4899586 // <generalisation>
	  b parent class_ref 1472002 // IORInterceptorOperations
      end

      operation 12413954 "components_established"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 180738 // IORInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The components_established method is invoked on all registered 
IORInterceptor_3_0 instances after establish_components
has been invoked on all registered IORInterceptor instances.
The adapter_template is available in info during this call.
The current_factory may be get or set in info during this call.
<p>
Any exception thrown from this method is handled by the Object 
Adapter that called this interceptor.  In the case of the POA,
an exception results in a OBJ_ADAPTER exception with an OMG
standard minor code of 6.
@param info The IORInfo for the object adapter being created.
"
      end

      operation 12414082 "adapter_manager_state_changed"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param in name "state" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called whenever the state of an adapter manager changes.
For the POA, that is the POAManager.  If the state change
is reported through <code>adapter_manager_state_changed</code>,
it is not reported through <code>adapter_state_changed</code>.
@param id the adapter manager id of the adapter manager that 
changed state
@param state the new state of the adapter manager
"
      end

      operation 12414210 "adapter_state_changed"
	public explicit_return_type "void"
	nparams 2
	  param inout name "templates" type class_ref 180098 // ObjectReferenceTemplate
	multiplicity "[]"
	  param in name "state" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called whenever the state of an object adapter changes, and
the state change is not caused by an adapter manager.  Such
changes are reported to all registered <code>IORInterceptor_3_0</code> 
instances.
@param templates the sequence of <code>ObjectReferenceTemplate</code> instances
    on which this state change occurred.
@param state the new <code>AdapterState</code> shared by all of the templates.
"
      end
    end

    class 1472386 "IORInterceptor_3_0Helper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInterceptor_3_0Helper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4900098 // _id (<unidirectional association>)
	relation 4900098 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/IORInterceptor_3_0:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900098 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12414338 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 1472130 // IORInterceptor_3_0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12414466 "extract"
	class_operation public return_type class_ref 1472130 // IORInterceptor_3_0
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4900226 // __typeCode (<unidirectional association>)
	relation 4900226 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900226 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12414594 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12414722 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12414850 "read"
	class_operation public return_type class_ref 1472130 // IORInterceptor_3_0
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12414978 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 1472130 // IORInterceptor_3_0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12415106 "narrow"
	class_operation public return_type class_ref 1472130 // IORInterceptor_3_0
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12415234 "unchecked_narrow"
	class_operation public return_type class_ref 1472130 // IORInterceptor_3_0
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1472514 "IORInterceptor_3_0Holder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/IORInterceptor_3_0Holder.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4900354 // <realization>
	relation 4900354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4900354 // <realization>
	  b parent class_ref 145538 // Streamable
      end

      classrelation 4900482 // value (<unidirectional association>)
	relation 4900482 --->
	  a role_name "value" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900482 // value (<unidirectional association>)
	  b parent class_ref 1472130 // IORInterceptor_3_0
      end

      operation 12415362 "IORInterceptor_3_0Holder"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12415490 "IORInterceptor_3_0Holder"
	public explicit_return_type ""
	nparams 1
	  param inout name "initialValue" type class_ref 1472130 // IORInterceptor_3_0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12415618 "_read"
	public explicit_return_type "void"
	nparams 1
	  param inout name "i" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12415746 "_write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 134914 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12415874 "_type"
	public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1472642 "LOCATION_FORWARD"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/LOCATION_FORWARD.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2656258 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(3)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a LocationForward reply status. One possible value for 
<code>RequestInfo.reply_status</code>.
@see RequestInfo#reply_status
@see SUCCESSFUL
@see SYSTEM_EXCEPTION
@see USER_EXCEPTION
@see TRANSPORT_RETRY

"
      end
    end

    class 1472770 "NON_EXISTENT"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/NON_EXISTENT.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2656386 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Object adapter state indicating that the adapter has been destroyed.

"
      end
    end

    class 1472898 "ObjectIdHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectIdHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 Type of an object id. This provides the identity of a particular
object that was created by an object adapter.
"
      classrelation 4900610 // _id (<unidirectional association>)
	relation 4900610 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ObjectId:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900610 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12416002 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12416130 "extract"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4900738 // __typeCode (<unidirectional association>)
	relation 4900738 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900738 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12416258 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12416386 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12416514 "read"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12416642 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473026 "ObjectReferenceFactoryHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceFactoryHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The object reference factory.  This provides the capability of
creating an object reference.
"
      classrelation 4900866 // _id (<unidirectional association>)
	relation 4900866 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ObjectReferenceFactory:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900866 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12416770 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 180994 // ObjectReferenceFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12416898 "extract"
	class_operation public return_type class_ref 180994 // ObjectReferenceFactory
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4900994 // __typeCode (<unidirectional association>)
	relation 4900994 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4900994 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      attribute 2656514 "__active"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 12417026 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12417154 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12417282 "read"
	class_operation public return_type class_ref 180994 // ObjectReferenceFactory
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12417410 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 180994 // ObjectReferenceFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473154 "ObjectReferenceFactoryHolder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceFactoryHolder.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The object reference factory.  This provides the capability of
creating an object reference.
"
      classrelation 4901122 // <realization>
	relation 4901122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4901122 // <realization>
	  b parent class_ref 145538 // Streamable
      end

      classrelation 4901250 // value (<unidirectional association>)
	relation 4901250 --->
	  a role_name "value" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4901250 // value (<unidirectional association>)
	  b parent class_ref 180994 // ObjectReferenceFactory
      end

      operation 12417538 "ObjectReferenceFactoryHolder"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12417666 "ObjectReferenceFactoryHolder"
	public explicit_return_type ""
	nparams 1
	  param inout name "initialValue" type class_ref 180994 // ObjectReferenceFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12417794 "_read"
	public explicit_return_type "void"
	nparams 1
	  param inout name "i" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12417922 "_write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 134914 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12418050 "_type"
	public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473282 "ObjectReferenceTemplateHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceTemplateHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The object reference template.  An instance of this must
exist for each object adapter created in an ORB.  The server_id,
orb_id, and adapter_name attributes uniquely identify this template
within the scope of an IMR.  Note that adapter_id is similarly unique
within the same scope, but it is opaque, and less useful in many
cases.
"
      classrelation 4901378 // _id (<unidirectional association>)
	relation 4901378 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ObjectReferenceTemplate:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4901378 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12418178 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 180098 // ObjectReferenceTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12418306 "extract"
	class_operation public return_type class_ref 180098 // ObjectReferenceTemplate
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4901506 // __typeCode (<unidirectional association>)
	relation 4901506 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4901506 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      attribute 2656642 "__active"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 12418434 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12418562 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12418690 "read"
	class_operation public return_type class_ref 180098 // ObjectReferenceTemplate
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12418818 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 180098 // ObjectReferenceTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473410 "ObjectReferenceTemplateHolder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceTemplateHolder.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 The object reference template.  An instance of this must
exist for each object adapter created in an ORB.  The server_id,
orb_id, and adapter_name attributes uniquely identify this template
within the scope of an IMR.  Note that adapter_id is similarly unique
within the same scope, but it is opaque, and less useful in many
cases.
"
      classrelation 4901634 // <realization>
	relation 4901634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4901634 // <realization>
	  b parent class_ref 145538 // Streamable
      end

      classrelation 4901762 // value (<unidirectional association>)
	relation 4901762 --->
	  a role_name "value" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4901762 // value (<unidirectional association>)
	  b parent class_ref 180098 // ObjectReferenceTemplate
      end

      operation 12418946 "ObjectReferenceTemplateHolder"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12419074 "ObjectReferenceTemplateHolder"
	public explicit_return_type ""
	nparams 1
	  param inout name "initialValue" type class_ref 180098 // ObjectReferenceTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12419202 "_read"
	public explicit_return_type "void"
	nparams 1
	  param inout name "i" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12419330 "_write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 134914 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12419458 "_type"
	public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473538 "ObjectReferenceTemplateSeqHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 Sequence of object reference templates is used for reporting state
changes that do not occur on the adapter manager.
"
      classrelation 4901890 // _id (<unidirectional association>)
	relation 4901890 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ObjectReferenceTemplateSeq:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4901890 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12419586 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 180098 // ObjectReferenceTemplate
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12419714 "extract"
	class_operation public return_type class_ref 180098 // ObjectReferenceTemplate
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4902018 // __typeCode (<unidirectional association>)
	relation 4902018 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4902018 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12419842 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12419970 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12420098 "read"
	class_operation public return_type class_ref 180098 // ObjectReferenceTemplate
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12420226 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 180098 // ObjectReferenceTemplate
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473666 "ObjectReferenceTemplateSeqHolder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHolder.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 Sequence of object reference templates is used for reporting state
changes that do not occur on the adapter manager.
"
      classrelation 4902146 // <realization>
	relation 4902146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4902146 // <realization>
	  b parent class_ref 145538 // Streamable
      end

      classrelation 4902274 // value (<unidirectional association>)
	relation 4902274 --->
	  a role_name "value" multiplicity "[]" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4902274 // value (<unidirectional association>)
	  b parent class_ref 180098 // ObjectReferenceTemplate
      end

      operation 12420354 "ObjectReferenceTemplateSeqHolder"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12420482 "ObjectReferenceTemplateSeqHolder"
	public explicit_return_type ""
	nparams 1
	  param inout name "initialValue" type class_ref 180098 // ObjectReferenceTemplate
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12420610 "_read"
	public explicit_return_type "void"
	nparams 1
	  param inout name "i" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12420738 "_write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 134914 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12420866 "_type"
	public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473794 "ORBIdHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ORBIdHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 This should actually be the CORBA::ORBid type once that is available"
      classrelation 4902402 // _id (<unidirectional association>)
	relation 4902402 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ORBId:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4902402 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12420994 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12421122 "extract"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4902530 // __typeCode (<unidirectional association>)
	relation 4902530 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4902530 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12421250 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12421378 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12421506 "read"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12421634 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1473922 "PolicyFactoryOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/PolicyFactoryOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Enables policy types to be constructed using 
<code>CORBA.ORB.create_policy</code>.
<p>
A portable ORB service implementation registers an instance of the 
<code>PolicyFactory</code> interface during ORB initialization in order 
to enable its policy types to be constructed using 
<code>CORBA.ORB.create_policy</code>. The POA is required to preserve 
any policy which is registered with <code>ORBInitInfo</code> in this 
manner.

@see ORBInitInfo#register_policy_factory
"
      operation 12421762 "create_policy"
	public return_type class_ref 134274 // Policy
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "value" type class_ref 144642 // Any
	nexceptions 1
	  exception class_ref 182530 // PolicyError
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the appropriate interface derived from 
<code>CORBA.Policy</code> whose value corresponds to the 
specified any. 
<p>
The ORB calls <code>create_policy</code> on a registered 
<code>PolicyFactory</code> instance when 
<code>CORBA.ORB.create_policy</code> is called for the 
<code>PolicyType</code> under which the <code>PolicyFactory</code> has 
been registered. The <code>create_policy</code> operation then 
returns an instance of the appropriate interface derived from 
<code>CORBA.Policy</code> whose value corresponds to the specified 
any. If it cannot, it shall throw an exception as described for 
<code>CORBA.ORB.create_policy</code>. 

@param type An int specifying the type of policy being created. 
@param value An any containing data with which to construct the 
    <code>CORBA.Policy</code>. 
@return A <code>CORBA.Policy<code> object of the specified type and 
    value.
"
      end
    end

    class 1474050 "ServerIdHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ServerIdHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT

 Should be type string"
      classrelation 4903042 // _id (<unidirectional association>)
	relation 4903042 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableInterceptor/ServerId:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4903042 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12421890 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12422018 "extract"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4903170 // __typeCode (<unidirectional association>)
	relation 4903170 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4903170 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12422146 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12422274 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12422402 "read"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12422530 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1474178 "ServerRequestInterceptorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/ServerRequestInterceptorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT


Server-side request interceptor.
<p>
A request Interceptor is designed to intercept the flow of a 
request/reply sequence through the ORB at specific points so that 
services can query the request information and manipulate the service 
contexts which are propagated between clients and servers. The primary 
use of request Interceptors is to enable ORB services to transfer 
context information between clients and servers. There are two types 
of request Interceptors: client-side and server-side. 
<p>
To write a server-side Interceptor, implement the 
ServerRequestInterceptor interface.

@see ServerRequestInfo
"
      classrelation 4903298 // <generalisation>
	relation 4903298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4903298 // <generalisation>
	  b parent class_ref 1471106 // InterceptorOperations
      end

      operation 12422658 "receive_request_service_contexts"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 186242 // ServerRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the interceptor to process service context information.
<p>
At this interception point, Interceptors must get their service 
context information from the incoming request transfer it to 
<code>PortableInterceptor.Current</code>'s slots.  
<p>
This interception point is called before the servant manager is called. 
Operation parameters are not yet available at this point. This 
interception point may or may not execute in the same thread as 
the target invocation. 
<p>
This interception point may throw a system exception. If it does, 
no other Interceptors' <code>receive_request_service_contexts</code> 
operations are called. Those Interceptors on the Flow Stack are 
popped and their <code>send_exception</code> interception points are 
called. 
<p>
This interception point may also throw a <code>ForwardRequest</code> 
exception.  If an Interceptor throws this exception, no other 
Interceptors' <code>receive_request_service_contexts</code> operations 
are called. Those Interceptors on the Flow Stack are popped and 
their <code>send_other</code> interception points are called. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. The 
<code>completion_status</code> shall be COMPLETED_NO.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end

      operation 12422786 "receive_request"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 186242 // ServerRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query request information after all the 
information, including operation parameters, are available. This 
interception point shall execute in the same thread as the target 
invocation.
<p>
In the DSI model, since the parameters are first available when 
the user code calls <code>arguments</code>, <code>receive_request</code>
is called from within <code>arguments</code>. It is possible that 
<code>arguments</code> is not called in the DSI model. The target 
may call <code>set_exception</code> before calling 
<code>arguments</code>. The ORB shall guarantee that 
<code>receive_request</code> is called once, either through 
<code>arguments</code> or through <code>set_exception</code>. If it 
is called through <code>set_exception</code>, requesting the 
arguments will result in <code>NO_RESOURCES</code> being thrown with 
a standard minor code of 1. 
<p>
This interception point may throw a system exception. If it does, no 
other Interceptors' <code>receive_request</code> operations are 
called. Those Interceptors on the Flow Stack are popped and their 
<code>send_exception</code> interception points are called. 
<p>
This interception point may also throw a <code>ForwardRequest</code> 
exception.  If an Interceptor throws this exception, no other 
Interceptors' <code>receive_request</code> operations are called. 
Those Interceptors on the Flow Stack are popped and their 
<code>send_other</code> interception points are called.
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. The 
<code>completion_status</code> shall be <code>COMPLETED_NO</code>.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end

      operation 12422914 "send_reply"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 186242 // ServerRequestInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query reply information and modify the 
reply service context after the target operation has been invoked 
and before the reply is returned to the client. This interception 
point shall execute in the same thread as the target invocation. 
<p>
This interception point may throw a system exception. If it does, 
no other Interceptors' <code>send_reply</code> operations are called. 
The remaining Interceptors in the Flow Stack shall have their 
<code>send_exception</code> interception point called. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a 
system exception from this interception point. The 
<code>completion_status</code> shall be <code>COMPLETED_YES</code>.

@param ri Information about the current request being intercepted.
"
      end

      operation 12423042 "send_exception"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 186242 // ServerRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query the exception information and modify 
the reply service context before the exception is thrown to the client. 
When an exception occurs, this interception point is called. This 
interception point shall execute in the same thread as the target 
invocation. 
<p>
This interception point may throw a system exception. This has the 
effect of changing the exception which successive Interceptors 
popped from the Flow Stack receive on their calls to 
<code>send_exception</code>. The exception thrown to the client will 
be the last exception thrown by an Interceptor, or the original 
exception if no Interceptor changes the exception. 
<p>
This interception point may also throw a <code>ForwardRequest</code> 
exception.  If an Interceptor throws this exception, no other 
Interceptors' <code>send_exception</code> operations are called. The 
remaining Interceptors in the Flow Stack shall have their 
<code>send_other</code> interception points called. 
<p>
If the <code>completion_status</code> of the exception is not 
<code>COMPLETED_NO</code>, then it is inappropriate for this 
interception point to throw a <code>ForwardRequest</code> exception. 
The request's at-most-once semantics would be lost. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. If the original exception 
is a system exception, the <code>completion_status</code> of the new 
exception shall be the same as on the original. If the original 
exception is a user exception, then the <code>completion_status</code> 
of the new exception shall be <code>COMPLETED_YES</code>.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end

      operation 12423170 "send_other"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ri" type class_ref 186242 // ServerRequestInfo
	nexceptions 1
	  exception class_ref 177794 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an Interceptor to query the information available when a 
request results in something other than a normal reply or an 
exception. For example, a request could result in a retry 
(e.g., a GIOP Reply with a <code>LOCATION_FORWARD</code> status was 
received). This interception point shall execute in the same thread 
as the target invocation. 
<p>
This interception point may throw a system exception. If it does, 
no other Interceptors' <code>send_other</code> operations are called. 
The remaining Interceptors in the Flow Stack shall have their 
<code>send_exception</code> interception points called. 
<p>
This interception point may also throw a <code>ForwardRequest</code> 
exception.  If an Interceptor throws this exception, successive 
Interceptors' <code>send_other</code> operations are called with 
the new information provided by the <code>ForwardRequest</code> 
exception. 
<p>
Compliant Interceptors shall properly follow 
<code>completion_status</code> semantics if they throw a system 
exception from this interception point. The 
<code>completion_status</code> shall be <code>COMPLETED_NO</code>.

@param ri Information about the current request being intercepted.
@exception ForwardRequest If thrown, indicates to the ORB that a
    retry of the request should occur with the new object given in
    the exception.
"
      end
    end

    class 1474306 "SUCCESSFUL"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/SUCCESSFUL.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2656770 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(0)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a successful Reply Status. One possible value for 
<code>RequestInfo.reply_status</code>.
@see RequestInfo#reply_status
@see SYSTEM_EXCEPTION
@see USER_EXCEPTION
@see LOCATION_FORWARD
@see TRANSPORT_RETRY

"
      end
    end

    class 1474434 "SYSTEM_EXCEPTION"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/SYSTEM_EXCEPTION.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2656898 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a SystemException reply status. One possible value for 
<code>RequestInfo.reply_status</code>.
@see RequestInfo#reply_status
@see SUCCESSFUL
@see USER_EXCEPTION
@see LOCATION_FORWARD
@see TRANSPORT_RETRY

"
      end
    end

    class 1474562 "TRANSPORT_RETRY"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/TRANSPORT_RETRY.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2657026 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a Transport Retry reply status. One possible value for 
<code>RequestInfo.reply_status</code>.
@see RequestInfo#reply_status
@see SUCCESSFUL
@see SYSTEM_EXCEPTION
@see USER_EXCEPTION
@see LOCATION_FORWARD

"
      end
    end

    class 1474690 "UNKNOWN"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/UNKNOWN.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2657154 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(5)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "XXX

"
      end
    end

    class 1474818 "USER_EXCEPTION"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableInterceptor/USER_EXCEPTION.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2657282 "value"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short)(2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a UserException reply status. One possible value for 
<code>RequestInfo.reply_status</code>.
@see RequestInfo#reply_status
@see SUCCESSFUL
@see SYSTEM_EXCEPTION
@see LOCATION_FORWARD
@see TRANSPORT_RETRY

"
      end
    end
  end

  deploymentview 130562 "PortableInterceptor"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 150530 "RequestInfoOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 176770 // RequestInfoOperations
      end
    end

    artifact 150658 "RequestInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 176642 // RequestInfo
      end
    end

    artifact 151042 "ClientRequestInfoOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 178434 // ClientRequestInfoOperations
      end
    end

    artifact 151170 "ClientRequestInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 178306 // ClientRequestInfo
      end
    end

    artifact 152066 "IORInfoOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 180866 // IORInfoOperations
      end
    end

    artifact 152194 "IORInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 180738 // IORInfo
      end
    end

    artifact 152578 "ORBInitInfoOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 181634 // ORBInitInfoOperations
      end
    end

    artifact 152706 "ORBInitInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 181506 // ORBInitInfo
      end
    end

    artifact 153218 "CurrentOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 182786 // CurrentOperations
      end
    end

    artifact 153474 "Current"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 182658 // Current
      end
    end

    artifact 155266 "ServerRequestInfoOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 186370 // ServerRequestInfoOperations
      end
    end

    artifact 155394 "ServerRequestInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 186242 // ServerRequestInfo
      end
    end

    artifact 163458 "ObjectReferenceFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 180994 // ObjectReferenceFactory
      end
    end

    artifact 163970 "ObjectReferenceTemplate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 180098 // ObjectReferenceTemplate
      end
    end

    artifact 193026 "ORBInitializerOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 248706 // ORBInitializerOperations
      end
    end

    artifact 193154 "ORBInitializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 243074 // ORBInitializer
      end
    end

    artifact 1074946 "ACTIVE"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1470466 // ACTIVE
      end
    end

    artifact 1075074 "AdapterManagerIdHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1470594 // AdapterManagerIdHelper
      end
    end

    artifact 1075202 "AdapterNameHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1470722 // AdapterNameHelper
      end
    end

    artifact 1075330 "AdapterStateHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1470850 // AdapterStateHelper
      end
    end

    artifact 1075458 "InterceptorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471106 // InterceptorOperations
      end
    end

    artifact 1075586 "ClientRequestInterceptorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1470978 // ClientRequestInterceptorOperations
      end
    end

    artifact 1075714 "Interceptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 180354 // Interceptor
      end
    end

    artifact 1075842 "ClientRequestInterceptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 181890 // ClientRequestInterceptor
      end
    end

    artifact 1075970 "CurrentHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471234 // CurrentHelper
      end
    end

    artifact 1076098 "DISCARDING"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471362 // DISCARDING
      end
    end

    artifact 1076226 "ForwardRequest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 177794 // ForwardRequest
      end
    end

    artifact 1076354 "ForwardRequestHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471490 // ForwardRequestHelper
      end
    end

    artifact 1076482 "HOLDING"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471618 // HOLDING
      end
    end

    artifact 1076610 "INACTIVE"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471746 // INACTIVE
      end
    end

    artifact 1076738 "InvalidSlot"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 177026 // InvalidSlot
      end
    end

    artifact 1076866 "InvalidSlotHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1471874 // InvalidSlotHelper
      end
    end

    artifact 1076994 "IORInterceptorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472002 // IORInterceptorOperations
      end
    end

    artifact 1077122 "IORInterceptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 182146 // IORInterceptor
      end
    end

    artifact 1077250 "IORInterceptor_3_0Operations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472258 // IORInterceptor_3_0Operations
      end
    end

    artifact 1077378 "IORInterceptor_3_0"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472130 // IORInterceptor_3_0
      end
    end

    artifact 1077506 "IORInterceptor_3_0Helper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472386 // IORInterceptor_3_0Helper
      end
    end

    artifact 1077634 "IORInterceptor_3_0Holder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472514 // IORInterceptor_3_0Holder
      end
    end

    artifact 1077762 "LOCATION_FORWARD"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472642 // LOCATION_FORWARD
      end
    end

    artifact 1077890 "NON_EXISTENT"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472770 // NON_EXISTENT
      end
    end

    artifact 1078018 "ObjectIdHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1472898 // ObjectIdHelper
      end
    end

    artifact 1078146 "ObjectReferenceFactoryHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473026 // ObjectReferenceFactoryHelper
      end
    end

    artifact 1078274 "ObjectReferenceFactoryHolder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473154 // ObjectReferenceFactoryHolder
      end
    end

    artifact 1078402 "ObjectReferenceTemplateHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473282 // ObjectReferenceTemplateHelper
      end
    end

    artifact 1078530 "ObjectReferenceTemplateHolder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473410 // ObjectReferenceTemplateHolder
      end
    end

    artifact 1078658 "ObjectReferenceTemplateSeqHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473538 // ObjectReferenceTemplateSeqHelper
      end
    end

    artifact 1078786 "ObjectReferenceTemplateSeqHolder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473666 // ObjectReferenceTemplateSeqHolder
      end
    end

    artifact 1078914 "ORBIdHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473794 // ORBIdHelper
      end
    end

    artifact 1079042 "PolicyFactoryOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1473922 // PolicyFactoryOperations
      end
    end

    artifact 1079170 "PolicyFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 182274 // PolicyFactory
      end
    end

    artifact 1079298 "ServerIdHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474050 // ServerIdHelper
      end
    end

    artifact 1079426 "ServerRequestInterceptorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474178 // ServerRequestInterceptorOperations
      end
    end

    artifact 1079554 "ServerRequestInterceptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 182018 // ServerRequestInterceptor
      end
    end

    artifact 1079682 "SUCCESSFUL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474306 // SUCCESSFUL
      end
    end

    artifact 1079810 "SYSTEM_EXCEPTION"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474434 // SYSTEM_EXCEPTION
      end
    end

    artifact 1079938 "TRANSPORT_RETRY"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474562 // TRANSPORT_RETRY
      end
    end

    artifact 1080066 "UNKNOWN"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474690 // UNKNOWN
      end
    end

    artifact 1080194 "USER_EXCEPTION"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1474818 // USER_EXCEPTION
      end
    end
  end

  package_ref 137218 // ORBInitInfoPackage
end
