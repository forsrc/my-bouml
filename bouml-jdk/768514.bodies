class XMLX509Digest
!!!5406978.java!!!	XMLX509Digest(inout element : Element, inout BaseURI : String)
        super(element, BaseURI);
!!!5407106.java!!!	XMLX509Digest(inout doc : Document, inout digestBytes : byte [[]], inout algorithmURI : String)
        super(doc);
        this.addBase64Text(digestBytes);
        this.constructionElement.setAttributeNS(null, Constants._ATT_ALGORITHM, algorithmURI);
!!!5407234.java!!!	XMLX509Digest(inout doc : Document, inout x509certificate : X509Certificate, inout algorithmURI : String)
        super(doc);
        this.addBase64Text(getDigestBytesFromCert(x509certificate, algorithmURI));
        this.constructionElement.setAttributeNS(null, Constants._ATT_ALGORITHM, algorithmURI);
!!!5407362.java!!!	getAlgorithmAttr() : Attr
        return this.constructionElement.getAttributeNodeNS(null, Constants._ATT_ALGORITHM);
!!!5407490.java!!!	getAlgorithm() : String
        return this.getAlgorithmAttr().getNodeValue();
!!!5407618.java!!!	getDigestBytes() : byte
        return this.getBytesFromTextChild();
!!!5407746.java!!!	getDigestBytesFromCert(inout cert : X509Certificate, inout algorithmURI : String) : byte
        String jcaDigestAlgorithm = JCEMapper.translateURItoJCEID(algorithmURI);
        if (jcaDigestAlgorithm == null) {
            Object exArgs[] = { algorithmURI };
            throw new XMLSecurityException("XMLX509Digest.UnknownDigestAlgorithm", exArgs);
        }

        try {
            MessageDigest md = MessageDigest.getInstance(jcaDigestAlgorithm);
            return md.digest(cert.getEncoded());
        } catch (Exception e) {
            Object exArgs[] = { jcaDigestAlgorithm };
            throw new XMLSecurityException("XMLX509Digest.FailedDigest", exArgs);
        }

!!!5407874.java!!!	getBaseLocalName() : String
        return Constants._TAG_X509DIGEST;
