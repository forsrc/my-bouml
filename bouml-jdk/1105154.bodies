class Node
!!!9034370.java!!!	Node(in hash : int, inout key : K, inout val : V, inout next : ConcurrentHashMap::Node)
            this.hash = hash;
            this.key = key;
            this.val = val;
            this.next = next;
!!!9034498.java!!!	getKey() : K
 return key;
!!!9034626.java!!!	getValue() : V
 return val;
!!!9034754.java!!!	hashCode() : int
 return key.hashCode() ^ val.hashCode();
!!!9034882.java!!!	toString() : String
 return key + "=" + val;
!!!9035010.java!!!	setValue(inout value : V) : V
            throw new UnsupportedOperationException();
!!!9035138.java!!!	equals(inout o : Object) : boolean
            Object k, v, u; Map.Entry<?,?> e;
            return ((o instanceof Map.Entry) &&
                    (k = (e = (Map.Entry<?,?>)o).getKey()) != null &&
                    (v = e.getValue()) != null &&
                    (k == key || k.equals(key)) &&
                    (v == (u = val) || v.equals(u)));
!!!9035266.java!!!	find(in h : int, inout k : Object) : ConcurrentHashMap::Node
            Node<K,V> e = this;
            if (k != null) {
                do {
                    K ek;
                    if (e.hash == h &&
                        ((ek = e.key) == k || (ek != null && k.equals(ek))))
                        return e;
                } while ((e = e.next) != null);
            }
            return null;
