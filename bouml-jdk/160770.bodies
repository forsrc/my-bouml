class DynValueBoxImpl
!!!317570.java!!!	DynValueBoxImpl()
        this(null, (Any)null, false);
!!!317698.java!!!	DynValueBoxImpl(inout orb : ORB, inout any : Any, inout copyValue : boolean)
        super(orb, any, copyValue);
!!!317826.java!!!	DynValueBoxImpl(inout orb : ORB, inout typeCode : TypeCode)
        super(orb, typeCode);
!!!317954.java!!!	get_boxed_value() : Any
        if (isNull) {
            throw new InvalidValue();
        }
        checkInitAny();
        return any;
!!!318082.java!!!	set_boxed_value(inout boxed : Any) : void
        if ( ! isNull && ! boxed.type().equal(this.type())) {
            throw new TypeMismatch();
        }
        clearData();
        any = boxed;
        representations = REPRESENTATION_ANY;
        index = 0;
        isNull = false;
!!!318210.java!!!	get_boxed_value_as_dyn_any() : DynAny
        if (isNull) {
            throw new InvalidValue();
        }
        checkInitComponents();
        return components[0];
!!!318338.java!!!	set_boxed_value_as_dyn_any(inout boxed : DynAny) : void
        if ( ! isNull && ! boxed.type().equal(this.type())) {
            throw new TypeMismatch();
        }
        clearData();
        components = new DynAny[] {boxed};
        representations = REPRESENTATION_COMPONENTS;
        index = 0;
        isNull = false;
!!!318466.java!!!	initializeComponentsFromAny() : boolean
        try {
            components = new DynAny[] {DynAnyUtil.createMostDerivedDynAny(any, orb, false)};
        } catch (InconsistentTypeCode ictc) {
            return false; // impossible
        }
        return true;
!!!318594.java!!!	initializeComponentsFromTypeCode() : boolean
        try {
            any = DynAnyUtil.createDefaultAnyOfType(any.type(), orb);
            components = new DynAny[] {DynAnyUtil.createMostDerivedDynAny(any, orb, false)};
        } catch (InconsistentTypeCode ictc) {
            return false; // impossible
        }
        return true;
!!!318722.java!!!	initializeAnyFromComponents() : boolean
        any = getAny(components[0]);
        return true;
