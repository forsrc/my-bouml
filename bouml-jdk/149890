format 222
"swing" // jdk1.8::com::sun::java::swing
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/java/swing/"
  java_package "com.sun.java.swing"
  classview 146050 "swing"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 337922 "Painter"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 338050 // Painter
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is preserved for backward compatibility with JDK 6.

@deprecated Use {@link javax.swing.Painter} instead.
"
      classrelation 590082 // <realization>
	relation 590082 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 590082 // <realization>
	  b parent class_ref 338050 // Painter
      end
    end

    class 338306 "SwingUtilities3"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A collection of utility methods for Swing.
<p>
<b>WARNING:</b> While this class is public, it should not be treated as
public API and its API may change in incompatable ways between dot dot
releases and even patch releases. You should not rely on this class even
existing.

This is a second part of sun.swing.SwingUtilities2. It is required
to provide services for JavaFX applets.

"
      classrelation 590210 // DELEGATE_REPAINT_MANAGER_KEY (<unidirectional association>)
	relation 590210 --->
	  a role_name "DELEGATE_REPAINT_MANAGER_KEY" init_value "
        new StringBuilder(\"DelegateRepaintManagerKey\")" class_relation const_relation private
	    comment "
The {@code clientProperty} key for delegate {@code RepaintManager}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 590210 // DELEGATE_REPAINT_MANAGER_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 1881090 "setDelegateRepaintManager"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param inout name "repaintManager" type class_ref 338562 // RepaintManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers delegate RepaintManager for {@code JComponent}.
"
      end

      classrelation 590338 // vsyncedMap (<unidirectional association>)
	relation 590338 --->
	  a role_name "vsyncedMap" init_value "
        Collections.synchronizedMap(new WeakHashMap<Container, Boolean>())" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Container, Boolean> ${name}${value};
"
	    classrelation_ref 590338 // vsyncedMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 1881218 "setVsyncRequested"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "rootContainer" type class_ref 338690 // Container
	  param inout name "isRequested" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets vsyncRequested state for the {@code rootContainer}.  If
{@code isRequested} is {@code true} then vsynced
{@code BufferStrategy} is enabled for this {@code rootContainer}.

Note: requesting vsynced painting does not guarantee one. The outcome
depends on current RepaintManager's RepaintManager.PaintManager
and on the capabilities of the graphics hardware/software and what not.

@param rootContainer topmost container. Should be either {@code Window}
 or {@code Applet}
@param isRequested the value to set vsyncRequested state to
"
      end

      operation 1881346 "isVsyncRequested"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "rootContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if vsync painting is requested for {@code rootContainer}

@param rootContainer topmost container. Should be either Window or Applet
@return {@code true} if vsync painting is requested for {@code rootContainer}
"
      end

      operation 1881474 "getDelegateRepaintManager"
	class_operation public return_type class_ref 338562 // RepaintManager
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns delegate {@code RepaintManager} for {@code component} hierarchy.
"
      end

      operation 1881602 "setEventQueueDelegate"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Map<String, Object>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We use maps to avoid reflection. Hopefully it should perform better
this way.
"
      end

      class 338946 "EventQueueDelegateFromMap"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 590594 // afterDispatchEventArgument (<unidirectional association>)
	  relation 590594 --->
	    a role_name "afterDispatchEventArgument" multiplicity "[]" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 590594 // afterDispatchEventArgument (<unidirectional association>)
	    b parent class_ref 339202 // AWTEvent
	end

	classrelation 590722 // afterDispatchHandleArgument (<unidirectional association>)
	  relation 590722 --->
	    a role_name "afterDispatchHandleArgument" multiplicity "[]" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 590722 // afterDispatchHandleArgument (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 590850 // afterDispatchCallable (<unidirectional association>)
	  relation 590850 --->
	    a role_name "afterDispatchCallable" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Void> ${name}${value};
"
	      classrelation_ref 590850 // afterDispatchCallable (<unidirectional association>)
	    b parent class_ref 339330 // Callable
	end

	classrelation 590978 // beforeDispatchEventArgument (<unidirectional association>)
	  relation 590978 --->
	    a role_name "beforeDispatchEventArgument" multiplicity "[]" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 590978 // beforeDispatchEventArgument (<unidirectional association>)
	    b parent class_ref 339202 // AWTEvent
	end

	classrelation 591106 // beforeDispatchCallable (<unidirectional association>)
	  relation 591106 --->
	    a role_name "beforeDispatchCallable" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 591106 // beforeDispatchCallable (<unidirectional association>)
	    b parent class_ref 339330 // Callable
	end

	classrelation 591234 // getNextEventEventQueueArgument (<unidirectional association>)
	  relation 591234 --->
	    a role_name "getNextEventEventQueueArgument" multiplicity "[]" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 591234 // getNextEventEventQueueArgument (<unidirectional association>)
	    b parent class_ref 339458 // EventQueue
	end

	classrelation 591362 // getNextEventCallable (<unidirectional association>)
	  relation 591362 --->
	    a role_name "getNextEventCallable" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTEvent> ${name}${value};
"
	      classrelation_ref 591362 // getNextEventCallable (<unidirectional association>)
	    b parent class_ref 339330 // Callable
	end

	operation 1881730 "EventQueueDelegateFromMap"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "objectMap" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String, Map<String, Object>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 1881858 "afterDispatch"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "event" type class_ref 339202 // AWTEvent
	    param inout name "handle" type class_ref 129538 // Object
	  nexceptions 1
	    exception class_ref 129666 // InterruptedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1881986 "beforeDispatch"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "event" type class_ref 339202 // AWTEvent
	  nexceptions 1
	    exception class_ref 129666 // InterruptedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1882114 "getNextEvent"
	  public return_type class_ref 339202 // AWTEvent
	  nparams 1
	    param inout name "eventQueue" type class_ref 339458 // EventQueue
	  nexceptions 1
	    exception class_ref 129666 // InterruptedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end
  end

  deploymentview 141442 "swing"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 270722 "Painter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 337922 // Painter
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 270850 "SwingUtilities3"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.EventQueueDelegate;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import java.util.Collections;
import java.util.Map;
import java.util.WeakHashMap;
import java.util.concurrent.Callable;
import java.applet.Applet;
import java.awt.AWTEvent;
import java.awt.EventQueue;
import java.awt.Component;
import java.awt.Container;
import java.awt.Window;
import javax.swing.JComponent;
import javax.swing.RepaintManager;
${definition}"
      associated_elems
	class_ref 338306 // SwingUtilities3
      end
      comment "Copyright (c) 2002, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 150274 // plaf
end
