class MenuBar
!!!6285570.java!!!	constructComponentName() : String
        synchronized (MenuBar.class) {
            return base + nameCounter++;
        }
!!!6285698.java!!!	addNotify() : void
        synchronized (getTreeLock()) {
            if (peer == null)
                peer = Toolkit.getDefaultToolkit().createMenuBar(this);

            int nmenus = getMenuCount();
            for (int i = 0 ; i < nmenus ; i++) {
                getMenu(i).addNotify();
            }
        }
!!!6285826.java!!!	removeNotify() : void
        synchronized (getTreeLock()) {
            int nmenus = getMenuCount();
            for (int i = 0 ; i < nmenus ; i++) {
                getMenu(i).removeNotify();
            }
            super.removeNotify();
        }
!!!6285954.java!!!	getHelpMenu() : Menu
        return helpMenu;
!!!6286082.java!!!	setHelpMenu(in m : Menu) : void
        synchronized (getTreeLock()) {
            if (helpMenu == m) {
                return;
            }
            if (helpMenu != null) {
                remove(helpMenu);
            }
            helpMenu = m;
            if (m != null) {
                if (m.parent != this) {
                    add(m);
                }
                m.isHelpMenu = true;
                m.parent = this;
                MenuBarPeer peer = (MenuBarPeer)this.peer;
                if (peer != null) {
                    if (m.peer == null) {
                        m.addNotify();
                    }
                    peer.addHelpMenu(m);
                }
            }
        }
!!!6286210.java!!!	add(inout m : Menu) : Menu
        synchronized (getTreeLock()) {
            if (m.parent != null) {
                m.parent.remove(m);
            }
            m.parent = this;

            MenuBarPeer peer = (MenuBarPeer)this.peer;
            if (peer != null) {
                if (m.peer == null) {
                    m.addNotify();
                }
                menus.addElement(m);
                peer.addMenu(m);
            } else {
                menus.addElement(m);
            }
            return m;
        }
!!!6286338.java!!!	remove(in index : int) : void
        synchronized (getTreeLock()) {
            Menu m = getMenu(index);
            menus.removeElementAt(index);
            MenuBarPeer peer = (MenuBarPeer)this.peer;
            if (peer != null) {
                peer.delMenu(index);
                m.removeNotify();
                m.parent = null;
            }
            if (helpMenu == m) {
                helpMenu = null;
                m.isHelpMenu = false;
            }
        }
!!!6286466.java!!!	remove(inout m : MenuComponent) : void
        synchronized (getTreeLock()) {
            int index = menus.indexOf(m);
            if (index >= 0) {
                remove(index);
            }
        }
!!!6286594.java!!!	getMenuCount() : int
        return countMenus();
!!!6286722.java!!!	countMenus() : int
        return getMenuCountImpl();
!!!6286850.java!!!	getMenuCountImpl() : int
        return menus.size();
!!!6286978.java!!!	getMenu(in i : int) : Menu
        return getMenuImpl(i);
!!!6287106.java!!!	getMenuImpl(in i : int) : Menu
        return menus.elementAt(i);
!!!6287234.java!!!	shortcuts() : Enumeration
        Vector<MenuShortcut> shortcuts = new Vector<>();
        int nmenus = getMenuCount();
        for (int i = 0 ; i < nmenus ; i++) {
            Enumeration<MenuShortcut> e = getMenu(i).shortcuts();
            while (e.hasMoreElements()) {
                shortcuts.addElement(e.nextElement());
            }
        }
        return shortcuts.elements();
!!!6287362.java!!!	getShortcutMenuItem(inout s : MenuShortcut) : MenuItem
        int nmenus = getMenuCount();
        for (int i = 0 ; i < nmenus ; i++) {
            MenuItem mi = getMenu(i).getShortcutMenuItem(s);
            if (mi != null) {
                return mi;
            }
        }
        return null;  // MenuShortcut wasn't found
!!!6287490.java!!!	handleShortcut(inout e : KeyEvent) : boolean
        // Is it a key event?
        int id = e.getID();
        if (id != KeyEvent.KEY_PRESSED && id != KeyEvent.KEY_RELEASED) {
            return false;
        }

        // Is the accelerator modifier key pressed?
        int accelKey = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
        if ((e.getModifiers() & accelKey) == 0) {
            return false;
        }

        // Pass MenuShortcut on to child menus.
        int nmenus = getMenuCount();
        for (int i = 0 ; i < nmenus ; i++) {
            Menu m = getMenu(i);
            if (m.handleShortcut(e)) {
                return true;
            }
        }
        return false;
!!!6287618.java!!!	deleteShortcut(inout s : MenuShortcut) : void
        int nmenus = getMenuCount();
        for (int i = 0 ; i < nmenus ; i++) {
            getMenu(i).deleteShortcut(s);
        }
!!!6287746.java!!!	writeObject(inout s : ObjectOutputStream) : void
      s.defaultWriteObject();
!!!6287874.java!!!	readObject(inout s : ObjectInputStream) : void
      // HeadlessException will be thrown from MenuComponent's readObject
      s.defaultReadObject();
      for (int i = 0; i < menus.size(); i++) {
        Menu m = menus.elementAt(i);
        m.parent = this;
      }
!!!6288130.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleAWTMenuBar();
        }
        return accessibleContext;
!!!6288258.java!!!	getAccessibleChildIndex(inout child : MenuComponent) : int
        return menus.indexOf(child);
