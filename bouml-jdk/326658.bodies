class AdobeMarkerSegment
!!!1791106.java!!!	AdobeMarkerSegment(in transform : int)
        super(JPEG.APP14);
        version = 101;
        flags0 = 0;
        flags1 = 0;
        this.transform = transform;
!!!1791234.java!!!	AdobeMarkerSegment(inout buffer : JPEGBuffer)
        super(buffer);
        buffer.bufPtr += ID_SIZE; // Skip the id
        version = (buffer.buf[buffer.bufPtr++] & 0xff) << 8;
        version |= buffer.buf[buffer.bufPtr++] & 0xff;
        flags0 = (buffer.buf[buffer.bufPtr++] & 0xff) << 8;
        flags0 |= buffer.buf[buffer.bufPtr++] & 0xff;
        flags1 = (buffer.buf[buffer.bufPtr++] & 0xff) << 8;
        flags1 |= buffer.buf[buffer.bufPtr++] & 0xff;
        transform = buffer.buf[buffer.bufPtr++] & 0xff;
        buffer.bufAvail -= length;
!!!1791362.java!!!	AdobeMarkerSegment(inout node : Node)
        this(0); // default transform will be changed
        updateFromNativeNode(node, true);
!!!1791490.java!!!	getNativeNode() : IIOMetadataNode
        IIOMetadataNode node = new IIOMetadataNode("app14Adobe");
        node.setAttribute("version", Integer.toString(version));
        node.setAttribute("flags0", Integer.toString(flags0));
        node.setAttribute("flags1", Integer.toString(flags1));
        node.setAttribute("transform", Integer.toString(transform));

        return node;
!!!1791618.java!!!	updateFromNativeNode(inout node : Node, inout fromScratch : boolean) : void
        // Only the transform is required
        NamedNodeMap attrs = node.getAttributes();
        transform = getAttributeValue(node, attrs, "transform", 0, 2, true);
        int count = attrs.getLength();
        if (count > 4) {
            throw new IIOInvalidTreeException
                ("Adobe APP14 node cannot have > 4 attributes", node);
        }
        if (count > 1) {
            int value = getAttributeValue(node, attrs, "version",
                                          100, 255, false);
            version = (value != -1) ? value : version;
            value = getAttributeValue(node, attrs, "flags0", 0, 65535, false);
            flags0 = (value != -1) ? value : flags0;
            value = getAttributeValue(node, attrs, "flags1", 0, 65535, false);
            flags1 = (value != -1) ? value : flags1;
        }
!!!1791746.java!!!	write(inout ios : ImageOutputStream) : void
        length = 14;
        writeTag(ios);
        byte [] id = {0x41, 0x64, 0x6F, 0x62, 0x65};
        ios.write(id);
        write2bytes(ios, version);
        write2bytes(ios, flags0);
        write2bytes(ios, flags1);
        ios.write(transform);
!!!1791874.java!!!	writeAdobeSegment(inout ios : ImageOutputStream, in transform : int) : void
        (new AdobeMarkerSegment(transform)).write(ios);
!!!1792002.java!!!	print() : void
        printTag("Adobe APP14");
        System.out.print("Version: ");
        System.out.println(version);
        System.out.print("Flags0: 0x");
        System.out.println(Integer.toHexString(flags0));
        System.out.print("Flags1: 0x");
        System.out.println(Integer.toHexString(flags1));
        System.out.print("Transform: ");
        System.out.println(transform);
