class Identity
!!!7946882.java!!!	Identity()
        this("restoring...");
!!!7947010.java!!!	Identity(inout name : String, inout scope : IdentityScope)
        this(name);
        if (scope != null) {
            scope.addIdentity(this);
        }
        this.scope = scope;
!!!7947138.java!!!	Identity(inout name : String)
        this.name = name;
!!!7947266.java!!!	getName() : String
        return name;
!!!7947394.java!!!	getScope() : IdentityScope
        return scope;
!!!7947522.java!!!	getPublicKey() : PublicKey
        return publicKey;
!!!7947650.java!!!	setPublicKey(inout key : PublicKey) : void

        check("setIdentityPublicKey");
        this.publicKey = key;
        certificates = new Vector<Certificate>();
!!!7947778.java!!!	setInfo(inout info : String) : void
        check("setIdentityInfo");
        this.info = info;
!!!7947906.java!!!	getInfo() : String
        return info;
!!!7948034.java!!!	addCertificate(inout certificate : Certificate) : void

        check("addIdentityCertificate");

        if (certificates == null) {
            certificates = new Vector<Certificate>();
        }
        if (publicKey != null) {
            if (!keyEquals(publicKey, certificate.getPublicKey())) {
                throw new KeyManagementException(
                    "public key different from cert public key");
            }
        } else {
            publicKey = certificate.getPublicKey();
        }
        certificates.addElement(certificate);
!!!7948162.java!!!	keyEquals(inout aKey : PublicKey, inout anotherKey : PublicKey) : boolean
        String aKeyFormat = aKey.getFormat();
        String anotherKeyFormat = anotherKey.getFormat();
        if ((aKeyFormat == null) ^ (anotherKeyFormat == null))
            return false;
        if (aKeyFormat != null && anotherKeyFormat != null)
            if (!aKeyFormat.equalsIgnoreCase(anotherKeyFormat))
                return false;
        return java.util.Arrays.equals(aKey.getEncoded(),
                                     anotherKey.getEncoded());
!!!7948290.java!!!	removeCertificate(inout certificate : Certificate) : void
        check("removeIdentityCertificate");
        if (certificates != null) {
            certificates.removeElement(certificate);
        }
!!!7948418.java!!!	certificates() : Certificate
        if (certificates == null) {
            return new Certificate[0];
        }
        int len = certificates.size();
        Certificate[] certs = new Certificate[len];
        certificates.copyInto(certs);
        return certs;
!!!7948546.java!!!	equals(inout identity : Object) : boolean

        if (identity == this) {
            return true;
        }

        if (identity instanceof Identity) {
            Identity i = (Identity)identity;
            if (this.fullName().equals(i.fullName())) {
                return true;
            } else {
                return identityEquals(i);
            }
        }
        return false;
!!!7948674.java!!!	identityEquals(inout identity : Identity) : boolean
        if (!name.equalsIgnoreCase(identity.name))
            return false;

        if ((publicKey == null) ^ (identity.publicKey == null))
            return false;

        if (publicKey != null && identity.publicKey != null)
            if (!publicKey.equals(identity.publicKey))
                return false;

        return true;

!!!7948802.java!!!	fullName() : String
        String parsable = name;
        if (scope != null) {
            parsable += "." + scope.getName();
        }
        return parsable;
!!!7948930.java!!!	toString() : String
        check("printIdentity");
        String printable = name;
        if (scope != null) {
            printable += "[" + scope.getName() + "]";
        }
        return printable;
!!!7949058.java!!!	toString(inout detailed : boolean) : String
        String out = toString();
        if (detailed) {
            out += "\n";
            out += printKeys();
            out += "\n" + printCertificates();
            if (info != null) {
                out += "\n\t" + info;
            } else {
                out += "\n\tno additional information available.";
            }
        }
        return out;
!!!7949186.java!!!	printKeys() : String
        String key = "";
        if (publicKey != null) {
            key = "\tpublic key initialized";
        } else {
            key = "\tno public key";
        }
        return key;
!!!7949314.java!!!	printCertificates() : String
        String out = "";
        if (certificates == null) {
            return "\tno certificates";
        } else {
            out += "\tcertificates: \n";

            int i = 1;
            for (Certificate cert : certificates) {
                out += "\tcertificate " + i++ +
                    "\tfor  : " + cert.getPrincipal() + "\n";
                out += "\t\t\tfrom : " +
                    cert.getGuarantor() + "\n";
            }
        }
        return out;
!!!7949442.java!!!	hashCode() : int
        return name.hashCode();
!!!7949570.java!!!	check(inout directive : String) : void
        SecurityManager security = System.getSecurityManager();
        if (security != null) {
            security.checkSecurityAccess(directive);
        }
