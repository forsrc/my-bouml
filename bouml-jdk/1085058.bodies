class ValueSpliterator
!!!8823810.java!!!	ValueSpliterator(inout m : IdentityHashMap, in origin : int, in fence : int, in est : int, in expectedModCount : int)
            super(m, origin, fence, est, expectedModCount);
!!!8823938.java!!!	trySplit() : IdentityHashMap::ValueSpliterator
            int hi = getFence(), lo = index, mid = ((lo + hi) >>> 1) & ~1;
            return (lo >= mid) ? null :
                new ValueSpliterator<K,V>(map, lo, index = mid, est >>>= 1,
                                          expectedModCount);
!!!8824066.java!!!	forEachRemaining(inout action : Consumer) : void
            if (action == null)
                throw new NullPointerException();
            int i, hi, mc;
            IdentityHashMap<K,V> m; Object[] a;
            if ((m = map) != null && (a = m.table) != null &&
                (i = index) >= 0 && (index = hi = getFence()) <= a.length) {
                for (; i < hi; i += 2) {
                    if (a[i] != null) {
                        @SuppressWarnings("unchecked") V v = (V)a[i+1];
                        action.accept(v);
                    }
                }
                if (m.modCount == expectedModCount)
                    return;
            }
            throw new ConcurrentModificationException();
!!!8824194.java!!!	tryAdvance(inout action : Consumer) : boolean
            if (action == null)
                throw new NullPointerException();
            Object[] a = map.table;
            int hi = getFence();
            while (index < hi) {
                Object key = a[index];
                @SuppressWarnings("unchecked") V v = (V)a[index+1];
                index += 2;
                if (key != null) {
                    action.accept(v);
                    if (map.modCount != expectedModCount)
                        throw new ConcurrentModificationException();
                    return true;
                }
            }
            return false;
!!!8824322.java!!!	characteristics() : int
            return (fence < 0 || est == map.size ? SIZED : 0);
