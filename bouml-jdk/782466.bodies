class UnsyncByteArrayOutputStream
!!!5497730.java!!!	UnsyncByteArrayOutputStream()
        buf = new byte[INITIAL_SIZE];
!!!5497858.java!!!	write(inout arg0 : byte [[]]) : void
        if ((Integer.MAX_VALUE - pos) < arg0.length) {
            throw new OutOfMemoryError();
        }
        int newPos = pos + arg0.length;
        if (newPos > size) {
            expandSize(newPos);
        }
        System.arraycopy(arg0, 0, buf, pos, arg0.length);
        pos = newPos;
!!!5497986.java!!!	write(inout arg0 : byte [[]], in arg1 : int, in arg2 : int) : void
        if ((Integer.MAX_VALUE - pos) < arg2) {
            throw new OutOfMemoryError();
        }
        int newPos = pos + arg2;
        if (newPos > size) {
            expandSize(newPos);
        }
        System.arraycopy(arg0, arg1, buf, pos, arg2);
        pos = newPos;
!!!5498114.java!!!	write(in arg0 : int) : void
        if ((Integer.MAX_VALUE - pos) == 0) {
            throw new OutOfMemoryError();
        }
        int newPos = pos + 1;
        if (newPos > size) {
            expandSize(newPos);
        }
        buf[pos++] = (byte)arg0;
!!!5498242.java!!!	toByteArray() : byte
        byte result[] = new byte[pos];
        System.arraycopy(buf, 0, result, 0, pos);
        return result;
!!!5498370.java!!!	reset() : void
        pos = 0;
!!!5498498.java!!!	expandSize(in newPos : int) : void
        int newSize = size;
        while (newPos > newSize) {
            newSize = newSize << 1;
            // Deal with overflow
            if (newSize < 0) {
                newSize = Integer.MAX_VALUE;
            }
        }
        byte newBuf[] = new byte[newSize];
        System.arraycopy(buf, 0, newBuf, 0, pos);
        buf = newBuf;
        size = newSize;
