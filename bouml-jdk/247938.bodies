class InetSocketAddress
!!!7500162.java!!!	checkPort(in port : int) : int
        if (port < 0 || port > 0xFFFF)
            throw new IllegalArgumentException("port out of range:" + port);
        return port;
!!!7500290.java!!!	checkHost(inout hostname : String) : String
        if (hostname == null)
            throw new IllegalArgumentException("hostname can't be null");
        return hostname;
!!!7500418.java!!!	InetSocketAddress(in port : int)
        this(InetAddress.anyLocalAddress(), port);
!!!7500546.java!!!	InetSocketAddress(inout addr : InetAddress, in port : int)
        holder = new InetSocketAddressHolder(
                        null,
                        addr == null ? InetAddress.anyLocalAddress() : addr,
                        checkPort(port));
!!!7500674.java!!!	InetSocketAddress(inout hostname : String, in port : int)
        checkHost(hostname);
        InetAddress addr = null;
        String host = null;
        try {
            addr = InetAddress.getByName(hostname);
        } catch(UnknownHostException e) {
            host = hostname;
        }
        holder = new InetSocketAddressHolder(host, addr, checkPort(port));
!!!7500802.java!!!	InetSocketAddress(in port : int, inout hostname : String)
        holder = new InetSocketAddressHolder(hostname, null, port);
!!!7500930.java!!!	createUnresolved(inout host : String, in port : int) : InetSocketAddress
        return new InetSocketAddress(checkPort(port), checkHost(host));
!!!7501058.java!!!	writeObject(inout out : ObjectOutputStream) : void
        // Don't call defaultWriteObject()
         ObjectOutputStream.PutField pfields = out.putFields();
         pfields.put("hostname", holder.hostname);
         pfields.put("addr", holder.addr);
         pfields.put("port", holder.port);
         out.writeFields();
!!!7501186.java!!!	readObject(inout in : ObjectInputStream) : void
        // Don't call defaultReadObject()
        ObjectInputStream.GetField oisFields = in.readFields();
        final String oisHostname = (String)oisFields.get("hostname", null);
        final InetAddress oisAddr = (InetAddress)oisFields.get("addr", null);
        final int oisPort = oisFields.get("port", -1);

        // Check that our invariants are satisfied
        checkPort(oisPort);
        if (oisHostname == null && oisAddr == null)
            throw new InvalidObjectException("hostname and addr " +
                                             "can't both be null");

        InetSocketAddressHolder h = new InetSocketAddressHolder(oisHostname,
                                                                oisAddr,
                                                                oisPort);
        UNSAFE.putObject(this, FIELDS_OFFSET, h);
!!!7501314.java!!!	readObjectNoData() : void
        throw new InvalidObjectException("Stream data required");
!!!7501442.java!!!	getPort() : int
        return holder.getPort();
!!!7501570.java!!!	getAddress() : InetAddress
        return holder.getAddress();
!!!7501698.java!!!	getHostName() : String
        return holder.getHostName();
!!!7501826.java!!!	getHostString() : String
        return holder.getHostString();
!!!7501954.java!!!	isUnresolved() : boolean
        return holder.isUnresolved();
!!!7502082.java!!!	toString() : String
        return holder.toString();
!!!7502210.java!!!	equals(inout obj : Object) : boolean
        if (obj == null || !(obj instanceof InetSocketAddress))
            return false;
        return holder.equals(((InetSocketAddress) obj).holder);
!!!7502338.java!!!	hashCode() : int
        return holder.hashCode();
