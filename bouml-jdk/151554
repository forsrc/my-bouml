format 222
"plaf" // jdk1.8::javax::swing::plaf
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/swing/plaf/"
  java_package "javax.swing.plaf"
  classview 147586 "plaf"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 354818 "UIResource"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface is used to mark objects created by ComponentUI delegates.
The <code>ComponentUI.installUI()</code> and
<code>ComponentUI.uninstallUI()</code> methods can use this interface
to decide if a properties value has been overridden.  For example, the
JList cellRenderer property is initialized by BasicListUI.installUI(),
only if it's initial value is null:
<pre>
if (list.getCellRenderer() == null) {
    list.setCellRenderer((ListCellRenderer)(UIManager.get(\"List.cellRenderer\")));
}
</pre>
At uninstallUI() time we reset the property to null if its value
is an instance of UIResource:
<pre>
if (list.getCellRenderer() instanceof UIResource) {
    list.setCellRenderer(null);
}
</pre>
This pattern applies to all properties except the java.awt.Component
properties font, foreground, and background.  If one of these
properties isn't initialized, or is explicitly set to null,
its container provides the value.  For this reason the
<code>\"== null\"</code> is unreliable when installUI() is called
to dynamically change a components look and feel.  So at installUI()
time we check to see if the current value is a UIResource:
<pre>
if (!(list.getFont() instanceof UIResource)) {
    list.setFont(UIManager.getFont(\"List.font\"));
}
</pre>

@see ComponentUI
@author Hans Muller

"
    end

    class 356738 "ComponentUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The base class for all UI delegate objects in the Swing pluggable
look and feel architecture.  The UI delegate object for a Swing
component is responsible for implementing the aspects of the
component that depend on the look and feel.
The <code>JComponent</code> class
invokes methods from this class in order to delegate operations
(painting, layout calculations, etc.) that may vary depending on the
look and feel installed.  <b>Client programs should not invoke methods
on this class directly.</b>

@see javax.swing.JComponent
@see javax.swing.UIManager

"
      operation 2185218 "ComponentUI"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor. (For invocation by subclass constructors,
typically implicit.)
"
      end

      operation 2185346 "installUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Configures the specified component appropriately for the look and feel.
This method is invoked when the <code>ComponentUI</code> instance is being installed
as the UI delegate on the specified component.  This method should
completely configure the component for the look and feel,
including the following:
<ol>
<li>Install default property values for color, fonts, borders,
    icons, opacity, etc. on the component.  Whenever possible,
    property values initialized by the client program should <i>not</i>
    be overridden.
<li>Install a <code>LayoutManager</code> on the component if necessary.
<li>Create/add any required sub-components to the component.
<li>Create/install event listeners on the component.
<li>Create/install a <code>PropertyChangeListener</code> on the component in order
    to detect and respond to component property changes appropriately.
<li>Install keyboard UI (mnemonics, traversal, etc.) on the component.
<li>Initialize any appropriate instance data.
</ol>
@param c the component where this UI delegate is being installed

@see #uninstallUI
@see javax.swing.JComponent#setUI
@see javax.swing.JComponent#updateUI
"
      end

      operation 2185474 "uninstallUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses configuration which was done on the specified component during
<code>installUI</code>.  This method is invoked when this
<code>UIComponent</code> instance is being removed as the UI delegate
for the specified component.  This method should undo the
configuration performed in <code>installUI</code>, being careful to
leave the <code>JComponent</code> instance in a clean state (no
extraneous listeners, look-and-feel-specific property objects, etc.).
This should include the following:
<ol>
<li>Remove any UI-set borders from the component.
<li>Remove any UI-set layout managers on the component.
<li>Remove any UI-added sub-components from the component.
<li>Remove any UI-added event/property listeners from the component.
<li>Remove any UI-installed keyboard UI from the component.
<li>Nullify any allocated instance data objects to allow for GC.
</ol>
@param c the component from which this UI delegate is being removed;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components

@see #installUI
@see javax.swing.JComponent#updateUI
"
      end

      operation 2185602 "paint"
	public explicit_return_type "void"
	nparams 2
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the specified component appropriately for the look and feel.
This method is invoked from the <code>ComponentUI.update</code> method when
the specified component is being painted.  Subclasses should override
this method and use the specified <code>Graphics</code> object to
render the content of the component.

@param g the <code>Graphics</code> context in which to paint
@param c the component being painted;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components

@see #update
"
      end

      operation 2185730 "update"
	public explicit_return_type "void"
	nparams 2
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies this UI delegate that it is time to paint the specified
component.  This method is invoked by <code>JComponent</code>
when the specified component is being painted.

<p>By default this method fills the specified component with
its background color if its {@code opaque} property is {@code true},
and then immediately calls {@code paint}. In general this method need
not be overridden by subclasses; all look-and-feel rendering code should
reside in the {@code paint} method.

@param g the <code>Graphics</code> context in which to paint
@param c the component being painted;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components

@see #paint
@see javax.swing.JComponent#paintComponent
"
      end

      operation 2185858 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified component's preferred size appropriate for
the look and feel.  If <code>null</code> is returned, the preferred
size will be calculated by the component's layout manager instead
(this is the preferred approach for any component with a specific
layout manager installed).  The default implementation of this
method returns <code>null</code>.

@param c the component whose preferred size is being queried;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components

@see javax.swing.JComponent#getPreferredSize
@see java.awt.LayoutManager#preferredLayoutSize
"
      end

      operation 2185986 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified component's minimum size appropriate for
the look and feel.  If <code>null</code> is returned, the minimum
size will be calculated by the component's layout manager instead
(this is the preferred approach for any component with a specific
layout manager installed).  The default implementation of this
method invokes <code>getPreferredSize</code> and returns that value.

@param c the component whose minimum size is being queried;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components

@return a <code>Dimension</code> object or <code>null</code>

@see javax.swing.JComponent#getMinimumSize
@see java.awt.LayoutManager#minimumLayoutSize
@see #getPreferredSize
"
      end

      operation 2186114 "getMaximumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified component's maximum size appropriate for
the look and feel.  If <code>null</code> is returned, the maximum
size will be calculated by the component's layout manager instead
(this is the preferred approach for any component with a specific
layout manager installed).  The default implementation of this
method invokes <code>getPreferredSize</code> and returns that value.

@param c the component whose maximum size is being queried;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components
@return a <code>Dimension</code> object or <code>null</code>

@see javax.swing.JComponent#getMaximumSize
@see java.awt.LayoutManager2#maximumLayoutSize
"
      end

      operation 2186242 "contains"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Returns <code>true</code> if the specified <i>x,y</i> location is
contained within the look and feel's defined shape of the specified
component. <code>x</code> and <code>y</code> are defined to be relative
to the coordinate system of the specified component.  Although
a component's <code>bounds</code> is constrained to a rectangle,
this method provides the means for defining a non-rectangular
shape within those bounds for the purpose of hit detection.

@param c the component where the <i>x,y</i> location is being queried;
         this argument is often ignored,
         but might be used if the UI object is stateless
         and shared by multiple components
@param x the <i>x</i> coordinate of the point
@param y the <i>y</i> coordinate of the point

@see javax.swing.JComponent#contains
@see java.awt.Component#contains
"
      end

      operation 2186370 "createUI"
	class_operation public return_type class_ref 356738 // ComponentUI
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the UI delegate for the specified component.
Each subclass must provide its own static <code>createUI</code>
method that returns an instance of that UI delegate subclass.
If the UI delegate subclass is stateless, it may return an instance
that is shared by multiple components.  If the UI delegate is
stateful, then it should return a new instance per component.
The default implementation of this method throws an error, as it
should never be invoked.
"
      end

      operation 2186498 "getBaseline"
	public explicit_return_type "int"
	nparams 3
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the baseline.  The baseline is measured from the top of
the component.  This method is primarily meant for
<code>LayoutManager</code>s to align components along their
baseline.  A return value less than 0 indicates this component
does not have a reasonable baseline and that
<code>LayoutManager</code>s should not align this component on
its baseline.
<p>
This method returns -1.  Subclasses that have a meaningful baseline
should override appropriately.

@param c <code>JComponent</code> baseline is being requested for
@param width the width to get the baseline for
@param height the height to get the baseline for
@throws NullPointerException if <code>c</code> is <code>null</code>
@throws IllegalArgumentException if width or height is &lt; 0
@return baseline or a value &lt; 0 indicating there is no reasonable
                 baseline
@see javax.swing.JComponent#getBaseline(int,int)
@since 1.6
"
      end

      operation 2186626 "getBaselineResizeBehavior"
	public return_type class_ref 343170 // BaselineResizeBehavior
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enum indicating how the baseline of he component
changes as the size changes.  This method is primarily meant for
layout managers and GUI builders.
<p>
This method returns <code>BaselineResizeBehavior.OTHER</code>.
Subclasses that support a baseline should override appropriately.

@param c <code>JComponent</code> to return baseline resize behavior for
@return an enum indicating how the baseline changes as the component
        size changes
@throws NullPointerException if <code>c</code> is <code>null</code>
@see javax.swing.JComponent#getBaseline(int, int)
@since 1.6
"
      end

      operation 2186754 "getAccessibleChildrenCount"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of accessible children in the object.  If all
of the children of this object implement <code>Accessible</code>,
this
method should return the number of children of this object.
UIs might wish to override this if they present areas on the
screen that can be viewed as components, but actual components
are not used for presenting those areas.

Note: As of v1.3, it is recommended that developers call
<code>Component.AccessibleAWTComponent.getAccessibleChildrenCount()</code> instead
of this method.

@see #getAccessibleChild
@return the number of accessible children in the object
"
      end

      operation 2186882 "getAccessibleChild"
	public return_type class_ref 347778 // Accessible
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>i</code>th <code>Accessible</code> child of the object.
UIs might need to override this if they present areas on the
screen that can be viewed as components, but actual components
are not used for presenting those areas.

<p>

Note: As of v1.3, it is recommended that developers call
<code>Component.AccessibleAWTComponent.getAccessibleChild()</code> instead of
this method.

@see #getAccessibleChildrenCount
@param i zero-based index of child
@return the <code>i</code>th <code>Accessible</code> child of the object
"
      end
    end

    class 358914 "PanelUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for Panel.

@author Steve Wilson
"
      classrelation 4227330 // <generalisation>
	relation 4227330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4227330 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 360962 "LabelUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JLabel.

@author Hans Muller
"
      classrelation 802946 // <generalisation>
	relation 802946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 802946 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 385410 "ButtonUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JButton.

@author Jeff Dinkins
"
      classrelation 687362 // <generalisation>
	relation 687362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 687362 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 385922 "MenuItemUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JMenuItem.

@author Georges Saab
@author David Karlton
@author Arnaud Weber
"
      classrelation 688642 // <generalisation>
	relation 688642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 688642 // <generalisation>
	  b parent class_ref 385410 // ButtonUI
      end
    end

    class 388994 "ComboBoxUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JComboBox.

@author Arnaud Weber
@author Tom Santos
"
      classrelation 696578 // <generalisation>
	relation 696578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 696578 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2206850 "setPopupVisible"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 364162 // JComboBox
	  param inout name "v" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the visibility of the popup
"
      end

      operation 2206978 "isPopupVisible"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 364162 // JComboBox
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine the visibility of the popup
"
      end

      operation 2207106 "isFocusTraversable"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 364162 // JComboBox
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether or not the combo box itself is traversable
"
      end
    end

    class 393602 "PopupMenuUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JPopupMenu.

@author Georges Saab
@author David Karlton
"
      classrelation 820098 // <generalisation>
	relation 820098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 820098 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2580994 "isPopupTrigger"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.3
"
      end

      operation 2581122 "getPopup"
	public return_type class_ref 393218 // Popup
	nparams 3
	  param inout name "popup" type class_ref 357378 // JPopupMenu
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Popup</code> that will be responsible for
displaying the <code>JPopupMenu</code>.

@param popup JPopupMenu requesting Popup
@param x     Screen x location Popup is to be shown at
@param y     Screen y location Popup is to be shown at.
@return Popup that will show the JPopupMenu
@since 1.4
"
      end
    end

    class 394242 "SeparatorUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JSeparator.

@author Georges Saab
@author David Karlton
"
      classrelation 819330 // <generalisation>
	relation 819330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 819330 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 396418 "DesktopIconUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JDesktopIcon.

@author David Kloba
"
      classrelation 716930 // <generalisation>
	relation 716930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 716930 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 398850 "DesktopPaneUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JDesktopPane.

@author David Kloba
"
      classrelation 727554 // <generalisation>
	relation 727554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 727554 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 401154 "TextUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Text editor user interface

@author  Timothy Prinzing
"
      classrelation 734850 // <generalisation>
	relation 734850 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 734850 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2305282 "modelToView"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 2
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param in name "pos" explicit_type "int"
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the given location in the model to a place in
the view coordinate system.

@param pos  the local location in the model to translate &gt;= 0
@return the coordinates as a rectangle
@exception BadLocationException  if the given position does not
  represent a valid location in the associated document
"
      end

      operation 2305410 "modelToView"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 3
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param in name "pos" explicit_type "int"
	  param inout name "bias" type class_ref 401410 // Bias
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the given location in the model to a place in
the view coordinate system.

@param pos  the local location in the model to translate &gt;= 0
@return the coordinates as a rectangle
@exception BadLocationException  if the given position does not
  represent a valid location in the associated document
"
      end

      operation 2305538 "viewToModel"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param inout name "pt" type class_ref 323714 // Point
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the given place in the view coordinate system
to the nearest representative location in the model.

@param pt  the location in the view to translate.  This
  should be in the same coordinate system as the mouse
  events.
@return the offset from the start of the document &gt;= 0
"
      end

      operation 2305666 "viewToModel"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param inout name "pt" type class_ref 323714 // Point
	  param inout name "biasReturn" type class_ref 401410 // Bias
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a mapping from the view coordinate space to the logical
coordinate space of the model.

@param pt the location in the view to translate.
          This should be in the same coordinate system
          as the mouse events.
@param biasReturn
          filled in by this method to indicate whether
          the point given is closer to the previous or the next
          character in the model

@return the location within the model that best represents the
        given point in the view &gt;= 0
"
      end

      operation 2305794 "getNextVisualPositionFrom"
	abstract public explicit_return_type "int"
	nparams 5
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param in name "pos" explicit_type "int"
	  param inout name "b" type class_ref 401410 // Bias
	  param in name "direction" explicit_type "int"
	  param inout name "biasRet" type class_ref 401410 // Bias
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a way to determine the next visually represented model
location that one might place a caret.  Some views may not be visible,
they might not be in the same order found in the model, or they just
might not allow access to some of the locations in the model.

@param t the text component for which this UI is installed
@param pos the position to convert &gt;= 0
@param b the bias for the position
@param direction the direction from the current position that can
 be thought of as the arrow keys typically found on a keyboard.
 This may be SwingConstants.WEST, SwingConstants.EAST,
 SwingConstants.NORTH, or SwingConstants.SOUTH
@param biasRet an array to contain the bias for the returned position
@return the location within the model that best represents the next
 location visual position
@exception BadLocationException
@exception IllegalArgumentException for an invalid direction
"
      end

      operation 2305922 "damageRange"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param in name "p0" explicit_type "int"
	  param in name "p1" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the portion of the view responsible for the
given part of the model to be repainted.

@param p0 the beginning of the range &gt;= 0
@param p1 the end of the range &gt;= p0
"
      end

      operation 2306050 "damageRange"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param in name "p0" explicit_type "int"
	  param in name "p1" explicit_type "int"
	  param inout name "firstBias" type class_ref 401410 // Bias
	  param inout name "secondBias" type class_ref 401410 // Bias
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the portion of the view responsible for the
given part of the model to be repainted.

@param p0 the beginning of the range &gt;= 0
@param p1 the end of the range &gt;= p0
"
      end

      operation 2306178 "getEditorKit"
	abstract public return_type class_ref 401538 // EditorKit
	nparams 1
	  param inout name "t" type class_ref 371074 // JTextComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the binding of services that set a policy
for the type of document being edited.  This contains
things like the commands available, stream readers and
writers, etc.

@return the editor kit binding
"
      end

      operation 2306306 "getRootView"
	abstract public return_type class_ref 401666 // View
	nparams 1
	  param inout name "t" type class_ref 371074 // JTextComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches a View with the allocation of the associated
text component (i.e. the root of the hierarchy) that
can be traversed to determine how the model is being
represented spatially.

@return the view
"
      end

      operation 2306434 "getToolTipText"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "t" type class_ref 371074 // JTextComponent
	  param inout name "pt" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string to be used as the tooltip at the passed in location.

@see javax.swing.text.JTextComponent#getToolTipText
@since 1.4
"
      end
    end

    class 415746 "FileChooserUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for <code>JFileChooser</code>.

@author Jeff Dinkins
"
      classrelation 770050 // <generalisation>
	relation 770050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 770050 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2443778 "getAcceptAllFileFilter"
	abstract public return_type class_ref 369026 // FileFilter
	nparams 1
	  param inout name "fc" type class_ref 365058 // JFileChooser
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2443906 "getFileView"
	abstract public return_type class_ref 365186 // FileView
	nparams 1
	  param inout name "fc" type class_ref 365058 // JFileChooser
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2444034 "getApproveButtonText"
	abstract public return_type class_ref 128130 // String
	nparams 1
	  param inout name "fc" type class_ref 365058 // JFileChooser
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2444162 "getDialogTitle"
	abstract public return_type class_ref 128130 // String
	nparams 1
	  param inout name "fc" type class_ref 365058 // JFileChooser
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2444290 "rescanCurrentDirectory"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "fc" type class_ref 365058 // JFileChooser
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2444418 "ensureFileIsVisible"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "fc" type class_ref 365058 // JFileChooser
	  param inout name "f" type class_ref 131970 // File
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2444546 "getDefaultButton"
	public return_type class_ref 389378 // JButton
	nparams 1
	  param inout name "fc" type class_ref 365058 // JFileChooser
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns default button for current <code>LookAndFeel</code>.
<code>JFileChooser</code> will use this button as default button
for dialog windows.

@since 1.7
"
      end
    end

    class 421250 "MenuBarUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JMenuBar.

@author Georges Saab
@author David Karlton
"
      classrelation 804610 // <generalisation>
	relation 804610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 804610 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 422530 "InternalFrameUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JInternalFrame.

@author David Kloba
"
      classrelation 797698 // <generalisation>
	relation 797698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 797698 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 426498 "OptionPaneUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JOptionPane.

@author Scott Violet
"
      classrelation 807426 // <generalisation>
	relation 807426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 807426 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2517122 "selectInitialValue"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 426626 // JOptionPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests the component representing the default value to have
focus.
"
      end

      operation 2517250 "containsCustomComponents"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "op" type class_ref 426626 // JOptionPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the user has supplied instances of Component for
either the options or message.
"
      end
    end

    class 434434 "ProgressBarUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JProgressBar.

@author Rob Davis
"
      classrelation 824834 // <generalisation>
	relation 824834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 824834 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 435970 "ScrollBarUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JScrollBar.

@author David Kloba
"
      classrelation 829058 // <generalisation>
	relation 829058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 829058 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 437378 "ScrollPaneUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JScrollPane.

@author Hans Muller
"
      classrelation 834178 // <generalisation>
	relation 834178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 834178 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 439042 "SliderUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JSlider.

@author Hans Muller
"
      classrelation 840962 // <generalisation>
	relation 840962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 840962 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 442114 "SplitPaneUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JSplitPane.

@author Scott Violet
"
      classrelation 850050 // <generalisation>
	relation 850050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 850050 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2643074 "resetToPreferredSizes"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "jc" type class_ref 441218 // JSplitPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Messaged to relayout the JSplitPane based on the preferred size
of the children components.
"
      end

      operation 2643202 "setDividerLocation"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "jc" type class_ref 441218 // JSplitPane
	  param in name "location" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the divider to location.
"
      end

      operation 2643330 "getDividerLocation"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "jc" type class_ref 441218 // JSplitPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location of the divider.
"
      end

      operation 2643458 "getMinimumDividerLocation"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "jc" type class_ref 441218 // JSplitPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum possible location of the divider.
"
      end

      operation 2643586 "getMaximumDividerLocation"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "jc" type class_ref 441218 // JSplitPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum possible location of the divider.
"
      end

      operation 2643714 "finishedPaintingChildren"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "jc" type class_ref 441218 // JSplitPane
	  param inout name "g" type class_ref 343682 // Graphics
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Messaged after the JSplitPane the receiver is providing the look
and feel for paints its children.
"
      end
    end

    class 444034 "TabbedPaneUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JTabbedPane.

@author Dave Moore
@author Amy Fowler
"
      classrelation 856194 // <generalisation>
	relation 856194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 856194 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2657538 "tabForCoordinate"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "pane" type class_ref 444162 // JTabbedPane
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2657666 "getTabBounds"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 2
	  param inout name "pane" type class_ref 444162 // JTabbedPane
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2657794 "getTabRunCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "pane" type class_ref 444162 // JTabbedPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 445570 "ViewportUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JViewport.

@author Rich Schiavi
"
      classrelation 4227714 // <generalisation>
	relation 4227714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4227714 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 448642 "TreeUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JTree.

@author Rob Davis
@author Scott Violet
"
      classrelation 872706 // <generalisation>
	relation 872706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 872706 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 2700930 "getPathBounds"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 2
	  param inout name "tree" type class_ref 448130 // JTree
	  param inout name "path" type class_ref 448770 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Rectangle enclosing the label portion that the
last item in path will be drawn into.  Will return null if
any component in path is currently valid.
"
      end

      operation 2701058 "getPathForRow"
	abstract public return_type class_ref 448770 // TreePath
	nparams 2
	  param inout name "tree" type class_ref 448130 // JTree
	  param in name "row" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path for passed in row.  If row is not visible
null is returned.
"
      end

      operation 2701186 "getRowForPath"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "tree" type class_ref 448130 // JTree
	  param inout name "path" type class_ref 448770 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the row that the last item identified in path is visible
at.  Will return -1 if any of the elements in path are not
currently visible.
"
      end

      operation 2701314 "getRowCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "tree" type class_ref 448130 // JTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows that are being displayed.
"
      end

      operation 2701442 "getClosestPathForLocation"
	abstract public return_type class_ref 448770 // TreePath
	nparams 3
	  param inout name "tree" type class_ref 448130 // JTree
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path to the node that is closest to x,y.  If
there is nothing currently visible this will return null, otherwise
it'll always return a valid path.  If you need to test if the
returned object is exactly at x, y you should get the bounds for
the returned path and test x, y against that.
"
      end

      operation 2701570 "isEditing"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "tree" type class_ref 448130 // JTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the tree is being edited.  The item that is being
edited can be returned by getEditingPath().
"
      end

      operation 2701698 "stopEditing"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "tree" type class_ref 448130 // JTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the current editing session.  This has no effect if the
tree isn't being edited.  Returns true if the editor allows the
editing session to stop.
"
      end

      operation 2701826 "cancelEditing"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "tree" type class_ref 448130 // JTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels the current editing session. This has no effect if the
tree isn't being edited.  Returns true if the editor allows the
editing session to stop.
"
      end

      operation 2701954 "startEditingAtPath"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "tree" type class_ref 448130 // JTree
	  param inout name "path" type class_ref 448770 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the last item in path and tries to edit it.  Editing will
fail if the CellEditor won't allow it for the selected item.
"
      end

      operation 2702082 "getEditingPath"
	abstract public return_type class_ref 448770 // TreePath
	nparams 1
	  param inout name "tree" type class_ref 448130 // JTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path to the element that is being edited.
"
      end
    end

    class 470530 "RootPaneUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JRootPane.

@author Scott Violet
@since 1.3
"
      classrelation 930818 // <generalisation>
	relation 930818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 930818 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 470914 "ComponentInputMapUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of javax.swing.ComponentInputMap that implements UIResource.
UI classes which provide a ComponentInputMap should use this class.

@author Scott Violet
@since 1.3
"
      classrelation 932482 // <generalisation>
	relation 932482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 932482 // <generalisation>
	  b parent class_ref 357762 // ComponentInputMap
      end

      classrelation 932610 // <realization>
	relation 932610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 932610 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 2841474 "ComponentInputMapUIResource"
	public explicit_return_type ""
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 472450 "SpinnerUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JSpinner

@author Hans Muller
@since 1.4
"
      classrelation 935170 // <generalisation>
	relation 935170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 935170 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 473986 "TableHeaderUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JTableHeader.

@author Alan Chung
"
      classrelation 938626 // <generalisation>
	relation 938626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 938626 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 476802 "ToolBarUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JToolBar.

@author Georges Saab
"
      classrelation 944002 // <generalisation>
	relation 944002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 944002 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 1275778 "ColorChooserUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JColorChooser.

@author Amy Fowler
@author Steve Wilson
"
      classrelation 4224898 // <generalisation>
	relation 4224898 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4224898 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 1285250 "LayerUI"
      visibility public 
      nformals 1
      formal name "V" type "" explicit_default_value ""
        extends class_ref 338818 // Component
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The base class for all {@link javax.swing.JLayer}'s UI delegates.
<p>
{@link #paint(java.awt.Graphics, javax.swing.JComponent)} method performs the
painting of the {@code JLayer}
and {@link #eventDispatched(AWTEvent, JLayer)} method is notified
about any {@code AWTEvent}s which have been generated by a {@code JLayer}
or any of its subcomponents.
<p>
The {@code LayerUI} differs from the UI delegates of the other components,
because it is LookAndFeel independent and is not updated by default when
the system LookAndFeel is changed.
<p>
The subclasses of {@code LayerUI} can either be stateless and shareable
by multiple {@code JLayer}s or not shareable.

@param <V> one of the super types of {@code JLayer}'s view component

@see JLayer#setUI(LayerUI)
@see JLayer#setView(Component)
@see JLayer#getView()
@since 1.7

@author Alexander Potochkin
"
      classrelation 4226818 // <generalisation>
	relation 4226818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4226818 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      classrelation 4226946 // <realization>
	relation 4226946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4226946 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4227074 // propertyChangeSupport (<unidirectional association>)
	relation 4227074 --->
	  a role_name "propertyChangeSupport" init_value "
            new PropertyChangeSupport(this)" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4227074 // propertyChangeSupport (<unidirectional association>)
	  b parent class_ref 343042 // PropertyChangeSupport
      end

      operation 10922626 "paint"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the specified component.
Subclasses should override this method and use
the specified {@code Graphics} object to
render the content of the component.
<p>
The default implementation paints the passed component as is.

@param g the {@code Graphics} context in which to paint
@param c the component being painted
"
      end

      operation 10922754 "eventDispatched"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 339202 // AWTEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes {@code AWTEvent}s for {@code JLayer}
and <b>all its descendants</b> to this {@code LayerUI} instance.
<p>
To enable the {@code AWTEvent}s of a particular type,
you call {@link JLayer#setLayerEventMask}
in {@link #installUI(javax.swing.JComponent)}
and set the layer event mask to {@code 0}
in {@link #uninstallUI(javax.swing.JComponent)} after that.
By default this  method calls the appropriate
{@code process&lt;event&nbsp;type&gt;Event}
method for the given class of event.
<p>
<b>Note:</b> Events are processed only for displayable {@code JLayer}s.

@param e the event to be dispatched
@param l the layer this LayerUI is set to

@see JLayer#setLayerEventMask(long)
@see Component#isDisplayable()
@see #processComponentEvent
@see #processFocusEvent
@see #processKeyEvent
@see #processMouseEvent
@see #processMouseMotionEvent
@see #processInputMethodEvent
@see #processHierarchyEvent
@see #processMouseWheelEvent
"
      end

      operation 10922882 "processComponentEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346242 // ComponentEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes component events occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless component events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Component events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.COMPONENT_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code ComponentEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923010 "processFocusEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346370 // FocusEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes focus events occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless focus events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Focus events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.FOCUS_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code FocusEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923138 "processKeyEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes key events occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless key events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Key events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.KEY_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code KeyEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923266 "processMouseEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346626 // MouseEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse events occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless mouse events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Mouse events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.MOUSE_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code MouseEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923394 "processMouseMotionEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346626 // MouseEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse motion event occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless mouse motion events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Mouse motion events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.MOUSE_MOTION_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code MouseEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923522 "processMouseWheelEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse wheel event occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless mouse wheel events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Mouse wheel events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.MOUSE_WHEEL_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code MouseEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923650 "processInputMethodEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346754 // InputMethodEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes input event occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless input events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Input events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.INPUT_METHOD_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code InputMethodEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923778 "processHierarchyEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes hierarchy event occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless hierarchy events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Hierarchy events are enabled in the overridden {@link #installUI} method
and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.HIERARCHY_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code HierarchyEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10923906 "processHierarchyBoundsEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes hierarchy bounds event occurring on the {@link JLayer}
or any of its subcomponents.
<p>
This method is not called unless hierarchy bounds events are
enabled for the {@code JLayer} objects, this {@code LayerUI} is set to.
Hierarchy bounds events are enabled in the overridden {@link #installUI}
method and should be disabled in the {@link #uninstallUI} method after that.
<pre>
public void installUI(JComponent c) {
   super.installUI(c);
   JLayer l = (JLayer) c;
   l.setLayerEventMask(AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK);
}

public void uninstallUI(JComponent c) {
    super.uninstallUI(c);
    JLayer l = (JLayer) c;
    l.setLayerEventMask(0);
}
</pre>

@param e the {@code HierarchyEvent} to be processed
@param l the layer this {@code LayerUI} instance is set to

@see JLayer#setLayerEventMask(long)
@see #installUI(javax.swing.JComponent)
@see #uninstallUI(javax.swing.JComponent)
"
      end

      operation 10924034 "updateUI"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when {@link javax.swing.JLayer#updateUI()} is called
by the {@code JLayer} this {@code LayerUI} is set to.

@param l the {@code JLayer} which UI is updated
"
      end

      operation 10924162 "installUI"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Configures the {@code JLayer} this {@code LayerUI} is set to.
The default implementation registers the passed {@code JLayer} component
as a {@code PropertyChangeListener} for the property changes of this {@code LayerUI}.

@param c the {@code JLayer} component where this UI delegate is being installed
"
      end

      operation 10924290 "uninstallUI"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the configuration which was previously set
in the {@link #installUI(JComponent)} method.
The default implementation unregisters the passed {@code JLayer} component
as a {@code PropertyChangeListener} for the property changes of this {@code LayerUI}.

@param c the component from which this UI delegate is being removed.
"
      end

      operation 10924418 "addPropertyChangeListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list. The listener is
registered for all bound properties of this class.
<p>
If {@code listener} is {@code null},
no exception is thrown and no action is performed.

@param listener the property change listener to be added
@see #removePropertyChangeListener
@see #getPropertyChangeListeners
@see #addPropertyChangeListener(String, java.beans.PropertyChangeListener)
"
      end

      operation 10924546 "removePropertyChangeListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a PropertyChangeListener from the listener list. This method
should be used to remove PropertyChangeListeners that were registered
for all bound properties of this class.
<p>
If {@code listener} is {@code null},
no exception is thrown and no action is performed.

@param listener the PropertyChangeListener to be removed
@see #addPropertyChangeListener
@see #getPropertyChangeListeners
@see #removePropertyChangeListener(String, PropertyChangeListener)
"
      end

      operation 10924674 "getPropertyChangeListeners"
	cpp_inline public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the property change listeners
registered on this component.

@return all of this ui's {@code PropertyChangeListener}s
        or an empty array if no property change
        listeners are currently registered
@see #addPropertyChangeListener
@see #removePropertyChangeListener
@see #getPropertyChangeListeners(String)
"
      end

      operation 10924802 "addPropertyChangeListener"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list for a specific
property.
<p>
If {@code propertyName} or {@code listener} is {@code null},
no exception is thrown and no action is taken.

@param propertyName one of the property names listed above
@param listener     the property change listener to be added
@see #removePropertyChangeListener(String, PropertyChangeListener)
@see #getPropertyChangeListeners(String)
@see #addPropertyChangeListener(String, PropertyChangeListener)
"
      end

      operation 10924930 "removePropertyChangeListener"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a {@code PropertyChangeListener} from the listener
list for a specific property. This method should be used to remove
{@code PropertyChangeListener}s
that were registered for a specific bound property.
<p>
If {@code propertyName} or {@code listener} is {@code null},
no exception is thrown and no action is taken.

@param propertyName a valid property name
@param listener     the PropertyChangeListener to be removed
@see #addPropertyChangeListener(String, PropertyChangeListener)
@see #getPropertyChangeListeners(String)
@see #removePropertyChangeListener(PropertyChangeListener)
"
      end

      operation 10925058 "getPropertyChangeListeners"
	cpp_inline public return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners which have been associated
with the named property.

@param propertyName  The name of the property being listened to
@return all of the {@code PropertyChangeListener}s associated with
        the named property; if no such listeners have been added or
        if {@code propertyName} is {@code null}, an empty
        array is returned
@see #addPropertyChangeListener(String, PropertyChangeListener)
@see #removePropertyChangeListener(String, PropertyChangeListener)
@see #getPropertyChangeListeners
"
      end

      operation 10925186 "firePropertyChange"
	cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for reporting bound property changes for Object properties.
This method can be called when a bound property has changed and it will
send the appropriate PropertyChangeEvent to any registered
PropertyChangeListeners.

@param propertyName the property whose value has changed
@param oldValue     the property's previous value
@param newValue     the property's new value
"
      end

      operation 10925314 "applyPropertyChange"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the {@code LayerUI} when any of its property are changed
and enables updating every {@code JLayer}
this {@code LayerUI} instance is set to.

@param evt the PropertyChangeEvent generated by this {@code LayerUI}
@param l the {@code JLayer} this LayerUI is set to
"
      end

      operation 10925442 "getBaseline"
	cpp_inline public explicit_return_type "int"
	nparams 3
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the {@code JLayer}'s view component is not {@code null},
this calls the view's {@code getBaseline()} method.
Otherwise, the default implementation is called.

@param c {@code JLayer} to return baseline resize behavior for
@param width the width to get the baseline for
@param height the height to get the baseline for
@return baseline or a value &lt; 0 indicating there is no reasonable
                 baseline
"
      end

      operation 10925570 "getBaselineResizeBehavior"
	cpp_inline public return_type class_ref 343170 // BaselineResizeBehavior
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the {@code JLayer}'s view component is not {@code null},
this returns the result of the view's {@code getBaselineResizeBehavior()} method.
Otherwise, the default implementation is called.

@param c {@code JLayer} to return baseline resize behavior for
@return an enum indicating how the baseline changes as the component
        size changes
"
      end

      operation 10925698 "doLayout"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the passed instance of {@code JLayer} to lay out its components.

@param l the {@code JLayer} component where this UI delegate is being installed
"
      end

      operation 10925826 "getPreferredSize"
	cpp_inline public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the {@code JLayer}'s view component is not {@code null},
this returns the result of  the view's {@code getPreferredSize()} method.
Otherwise, the default implementation is used.

@param c {@code JLayer} to return preferred size for
@return preferred size for the passed {@code JLayer}
"
      end

      operation 10925954 "getMinimumSize"
	cpp_inline public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the {@code JLayer}'s view component is not {@code null},
this returns the result of  the view's {@code getMinimalSize()} method.
Otherwise, the default implementation is used.

@param c {@code JLayer} to return preferred size for
@return minimal size for the passed {@code JLayer}
"
      end

      operation 10926082 "getMaximumSize"
	cpp_inline public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the {@code JLayer}'s view component is not {@code null},
this returns the result of  the view's {@code getMaximumSize()} method.
Otherwise, the default implementation is used.

@param c {@code JLayer} to return preferred size for
@return maximum size for the passed {@code JLayer}
"
      end

      operation 10926210 "paintImmediately"
	cpp_inline public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "l" type class_ref 1285122 // JLayer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? extends V> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the specified region in the {@code JLayer} this {@code LayerUI} is set to, immediately.
<p>
This method is to be overridden when the dirty region needs to be changed.
The default implementation delegates its functionality to {@link JComponent#paintImmediately(int, int, int, int)}.

@param x  the x value of the region to be painted
@param y  the y value of the region to be painted
@param width  the width of the region to be painted
@param height  the height of the region to be painted

@see JComponent#paintImmediately(int, int, int, int)
"
      end
    end

    class 1294210 "ToolTipUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JToolTip.

@author Dave Moore
"
      classrelation 4227586 // <generalisation>
	relation 4227586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4227586 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end

    class 1306882 "ActionMapUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of javax.swing.ActionMap that implements UIResource.
UI classes which provide an ActionMap should use this class.

@author Scott Violet
@since 1.3
"
      classrelation 4221826 // <generalisation>
	relation 4221826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4221826 // <generalisation>
	  b parent class_ref 357890 // ActionMap
      end

      classrelation 4221954 // <realization>
	relation 4221954 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4221954 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 10917122 "ActionMapUIResource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1307010 "BorderUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Border wrapper class which implements UIResource.  UI
classes which set border properties should use this class
to wrap any borders specified as defaults.

This class delegates all method invocations to the
Border \"delegate\" object specified at construction.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.UIResource
@author Amy Fowler

"
      classrelation 4222082 // <realization>
	relation 4222082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4222082 // <realization>
	  b parent class_ref 357122 // Border
      end

      classrelation 4222210 // <realization>
	relation 4222210 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4222210 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      classrelation 4222338 // <realization>
	relation 4222338 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4222338 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4222466 // etched (<unidirectional association>)
	relation 4222466 --->
	  a role_name "etched" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4222466 // etched (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4222594 // loweredBevel (<unidirectional association>)
	relation 4222594 --->
	  a role_name "loweredBevel" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4222594 // loweredBevel (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4222722 // raisedBevel (<unidirectional association>)
	relation 4222722 --->
	  a role_name "raisedBevel" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4222722 // raisedBevel (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4222850 // blackLine (<unidirectional association>)
	relation 4222850 --->
	  a role_name "blackLine" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4222850 // blackLine (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10917250 "getEtchedBorderUIResource"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10917378 "getLoweredBevelBorderUIResource"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10917506 "getRaisedBevelBorderUIResource"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10917634 "getBlackLineBorderUIResource"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4222978 // delegate (<unidirectional association>)
	relation 4222978 --->
	  a role_name "delegate" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4222978 // delegate (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10917762 "BorderUIResource"
	public explicit_return_type ""
	nparams 1
	  param inout name "delegate" type class_ref 357122 // Border
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a UIResource border object which wraps
an existing Border instance.
@param delegate the border being wrapped
"
      end

      operation 10917890 "paintBorder"
	public explicit_return_type "void"
	nparams 6
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10918018 "getBorderInsets"
	public return_type class_ref 343938 // Insets
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10918146 "isBorderOpaque"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1307138 "CompoundBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4223106 // <generalisation>
	  relation 4223106 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4223106 // <generalisation>
	    b parent class_ref 438658 // CompoundBorder
	end

	classrelation 4223234 // <realization>
	  relation 4223234 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4223234 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10918274 "CompoundBorderUIResource"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "outsideBorder" type class_ref 357122 // Border
	    param inout name "insideBorder" type class_ref 357122 // Border
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"outsideBorder\", \"insideBorder\"})
"
	  
	  
	  
	end
      end

      class 1307266 "EmptyBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4223362 // <generalisation>
	  relation 4223362 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4223362 // <generalisation>
	    b parent class_ref 461826 // EmptyBorder
	end

	classrelation 4223490 // <realization>
	  relation 4223490 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4223490 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10918402 "EmptyBorderUIResource"
	  public explicit_return_type ""
	  nparams 4
	    param in name "top" explicit_type "int"
	    param in name "left" explicit_type "int"
	    param in name "bottom" explicit_type "int"
	    param in name "right" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10918530 "EmptyBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "insets" type class_ref 343938 // Insets
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"borderInsets\"})
"
	  
	  
	  
	end
      end

      class 1307394 "LineBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4223618 // <generalisation>
	  relation 4223618 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4223618 // <generalisation>
	    b parent class_ref 459394 // LineBorder
	end

	classrelation 4223746 // <realization>
	  relation 4223746 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4223746 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10918658 "LineBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "color" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10918786 "LineBorderUIResource"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "color" type class_ref 323458 // Color
	    param in name "thickness" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"lineColor\", \"thickness\"})
"
	  
	  
	  
	end
      end

      class 1307522 "BevelBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4223874 // <generalisation>
	  relation 4223874 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4223874 // <generalisation>
	    b parent class_ref 1302146 // BevelBorder
	end

	classrelation 4224002 // <realization>
	  relation 4224002 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4224002 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10918914 "BevelBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param in name "bevelType" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10919042 "BevelBorderUIResource"
	  public explicit_return_type ""
	  nparams 3
	    param in name "bevelType" explicit_type "int"
	    param inout name "highlight" type class_ref 323458 // Color
	    param inout name "shadow" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10919170 "BevelBorderUIResource"
	  public explicit_return_type ""
	  nparams 5
	    param in name "bevelType" explicit_type "int"
	    param inout name "highlightOuter" type class_ref 323458 // Color
	    param inout name "highlightInner" type class_ref 323458 // Color
	    param inout name "shadowOuter" type class_ref 323458 // Color
	    param inout name "shadowInner" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"bevelType\", \"highlightOuterColor\", \"highlightInnerColor\", \"shadowOuterColor\", \"shadowInnerColor\"})
"
	  
	  
	  
	end
      end

      class 1307650 "EtchedBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4224130 // <generalisation>
	  relation 4224130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4224130 // <generalisation>
	    b parent class_ref 1302274 // EtchedBorder
	end

	classrelation 4224258 // <realization>
	  relation 4224258 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4224258 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10919298 "EtchedBorderUIResource"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10919426 "EtchedBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param in name "etchType" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10919554 "EtchedBorderUIResource"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "highlight" type class_ref 323458 // Color
	    param inout name "shadow" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10919682 "EtchedBorderUIResource"
	  public explicit_return_type ""
	  nparams 3
	    param in name "etchType" explicit_type "int"
	    param inout name "highlight" type class_ref 323458 // Color
	    param inout name "shadow" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"etchType\", \"highlightColor\", \"shadowColor\"})
"
	  
	  
	  
	end
      end

      class 1307778 "MatteBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4224386 // <generalisation>
	  relation 4224386 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4224386 // <generalisation>
	    b parent class_ref 1263874 // MatteBorder
	end

	classrelation 4224514 // <realization>
	  relation 4224514 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4224514 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10919810 "MatteBorderUIResource"
	  public explicit_return_type ""
	  nparams 5
	    param in name "top" explicit_type "int"
	    param in name "left" explicit_type "int"
	    param in name "bottom" explicit_type "int"
	    param in name "right" explicit_type "int"
	    param inout name "color" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10919938 "MatteBorderUIResource"
	  public explicit_return_type ""
	  nparams 5
	    param in name "top" explicit_type "int"
	    param in name "left" explicit_type "int"
	    param in name "bottom" explicit_type "int"
	    param in name "right" explicit_type "int"
	    param inout name "tileIcon" type class_ref 352642 // Icon
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10920066 "MatteBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "tileIcon" type class_ref 352642 // Icon
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1307906 "TitledBorderUIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4224642 // <generalisation>
	  relation 4224642 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4224642 // <generalisation>
	    b parent class_ref 1263746 // TitledBorder
	end

	classrelation 4224770 // <realization>
	  relation 4224770 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4224770 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 10920194 "TitledBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "title" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10920322 "TitledBorderUIResource"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "border" type class_ref 357122 // Border
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10920450 "TitledBorderUIResource"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "border" type class_ref 357122 // Border
	    param inout name "title" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10920578 "TitledBorderUIResource"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "border" type class_ref 357122 // Border
	    param inout name "title" type class_ref 128130 // String
	    param in name "titleJustification" explicit_type "int"
	    param in name "titlePosition" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10920706 "TitledBorderUIResource"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "border" type class_ref 357122 // Border
	    param inout name "title" type class_ref 128130 // String
	    param in name "titleJustification" explicit_type "int"
	    param in name "titlePosition" explicit_type "int"
	    param inout name "titleFont" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10920834 "TitledBorderUIResource"
	  public explicit_return_type ""
	  nparams 6
	    param inout name "border" type class_ref 357122 // Border
	    param inout name "title" type class_ref 128130 // String
	    param in name "titleJustification" explicit_type "int"
	    param in name "titlePosition" explicit_type "int"
	    param inout name "titleFont" type class_ref 340354 // Font
	    param inout name "titleColor" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"border\", \"title\", \"titleJustification\", \"titlePosition\", \"titleFont\", \"titleColor\"})
"
	  
	  
	  
	end
      end
    end

    class 1308034 "ColorUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of Color that implements UIResource.  UI
classes that create colors should use this class.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.UIResource
@author Hans Muller

"
      classrelation 4225026 // <generalisation>
	relation 4225026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4225026 // <generalisation>
	  b parent class_ref 323458 // Color
      end

      classrelation 4225154 // <realization>
	relation 4225154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4225154 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 10920962 "ColorUIResource"
	public explicit_return_type ""
	nparams 3
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"red\", \"green\", \"blue\"})
"
	
	
	
      end

      operation 10921090 "ColorUIResource"
	public explicit_return_type ""
	nparams 1
	  param in name "rgb" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10921218 "ColorUIResource"
	public explicit_return_type ""
	nparams 3
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10921346 "ColorUIResource"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1308162 "DimensionUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of <code>Dimension</code> that implements
<code>UIResource</code>.  UI classes that use
<code>Dimension</code> values for default properties
should use this class.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.UIResource
@author Amy Fowler

"
      classrelation 4225282 // <generalisation>
	relation 4225282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4225282 // <generalisation>
	  b parent class_ref 316802 // Dimension
      end

      classrelation 4225410 // <realization>
	relation 4225410 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4225410 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 10921474 "DimensionUIResource"
	public explicit_return_type ""
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1308290 "FontUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of java.awt.Font that implements UIResource.
UI classes which set default font properties should use
this class.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.UIResource
@author Hans Muller

"
      classrelation 4225538 // <generalisation>
	relation 4225538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4225538 // <generalisation>
	  b parent class_ref 340354 // Font
      end

      classrelation 4225666 // <realization>
	relation 4225666 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4225666 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 10921602 "FontUIResource"
	public explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param in name "style" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10921730 "FontUIResource"
	public explicit_return_type ""
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1308418 "IconUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An Icon wrapper class which implements UIResource.  UI
classes which set icon properties should use this class
to wrap any icons specified as defaults.

This class delegates all method invocations to the
Icon \"delegate\" object specified at construction.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.UIResource
@author Amy Fowler

"
      classrelation 4225794 // <realization>
	relation 4225794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4225794 // <realization>
	  b parent class_ref 352642 // Icon
      end

      classrelation 4225922 // <realization>
	relation 4225922 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4225922 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      classrelation 4226050 // <realization>
	relation 4226050 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4226050 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4226178 // delegate (<unidirectional association>)
	relation 4226178 --->
	  a role_name "delegate" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4226178 // delegate (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      operation 10921858 "IconUIResource"
	public explicit_return_type ""
	nparams 1
	  param inout name "delegate" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a UIResource icon object which wraps
an existing Icon instance.
@param delegate the icon being wrapped
"
      end

      operation 10921986 "paintIcon"
	public explicit_return_type "void"
	nparams 4
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10922114 "getIconWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10922242 "getIconHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1308546 "InputMapUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of javax.swing.InputMap that implements UIResource.
UI classes which provide a InputMap should use this class.

@author Scott Violet
@since 1.3
"
      classrelation 4226306 // <generalisation>
	relation 4226306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4226306 // <generalisation>
	  b parent class_ref 357634 // InputMap
      end

      classrelation 4226434 // <realization>
	relation 4226434 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4226434 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 10922370 "InputMapUIResource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1308674 "InsetsUIResource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A subclass of Insets that implements UIResource.  UI
classes that use Insets values for default properties
should use this class.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.UIResource
@author Amy Fowler

"
      classrelation 4226562 // <generalisation>
	relation 4226562 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4226562 // <generalisation>
	  b parent class_ref 343938 // Insets
      end

      classrelation 4226690 // <realization>
	relation 4226690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4226690 // <realization>
	  b parent class_ref 354818 // UIResource
      end

      operation 10922498 "InsetsUIResource"
	public explicit_return_type ""
	nparams 4
	  param in name "top" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	  param in name "right" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1308802 "ListUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code JList} pluggable look and feel delegate.

@author Hans Muller
"
      classrelation 4227202 // <generalisation>
	relation 4227202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4227202 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end

      operation 10926338 "locationToIndex"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 364418 // JList
	  param inout name "location" type class_ref 323714 // Point
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cell index in the specified {@code JList} closest to the
given location in the list's coordinate system. To determine if the
cell actually contains the specified location, compare the point against
the cell's bounds, as provided by {@code getCellBounds}.
This method returns {@code -1} if the list's model is empty.

@param list the list
@param location the coordinates of the point
@return the cell index closest to the given location, or {@code -1}
@throws NullPointerException if {@code location} is null
"
      end

      operation 10926466 "indexToLocation"
	abstract public return_type class_ref 323714 // Point
	nparams 2
	  param inout name "list" type class_ref 364418 // JList
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the origin in the given {@code JList}, of the specified item,
in the list's coordinate system.
Returns {@code null} if the index isn't valid.

@param list the list
@param index the cell index
@return the origin of the cell, or {@code null}
"
      end

      operation 10926594 "getCellBounds"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 3
	  param inout name "list" type class_ref 364418 // JList
	  param in name "index1" explicit_type "int"
	  param in name "index2" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounding rectangle, in the given list's coordinate system,
for the range of cells specified by the two indices.
The indices can be supplied in any order.
<p>
If the smaller index is outside the list's range of cells, this method
returns {@code null}. If the smaller index is valid, but the larger
index is outside the list's range, the bounds of just the first index
is returned. Otherwise, the bounds of the valid range is returned.

@param list the list
@param index1 the first index in the range
@param index2 the second index in the range
@return the bounding rectangle for the range of cells, or {@code null}
"
      end
    end

    class 1308930 "TableUI"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pluggable look and feel interface for JTable.

@author Alan Chung
"
      classrelation 4227458 // <generalisation>
	relation 4227458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4227458 // <generalisation>
	  b parent class_ref 356738 // ComponentUI
      end
    end
  end

  deploymentview 142338 "plaf"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 272898 "UIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 354818 // UIResource
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 283650 "ComponentUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.JComponent;
import javax.swing.SwingUtilities;
import javax.accessibility.Accessible;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Insets;
${definition}"
      associated_elems
	class_ref 356738 // ComponentUI
      end
      comment "Copyright (c) 1997, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 283778 "ButtonUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.AbstractButton;
import javax.swing.GrayFilter;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.awt.Insets;
${definition}"
      associated_elems
	class_ref 385410 // ButtonUI
      end
      comment "Copyright (c) 1997, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 284162 "MenuItemUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import java.awt.event.*;
${definition}"
      associated_elems
	class_ref 385922 // MenuItemUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 285442 "ComboBoxUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.JComboBox;
${definition}"
      associated_elems
	class_ref 388994 // ComboBoxUI
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 287490 "DesktopIconUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 396418 // DesktopIconUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 288386 "DesktopPaneUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 398850 // DesktopPaneUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 289026 "TextUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.Action;
import javax.swing.BoundedRangeModel;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Insets;
import javax.swing.text.*;
${definition}"
      associated_elems
	class_ref 401154 // TextUI
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 293890 "FileChooserUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileView;
import java.io.File;
${definition}"
      associated_elems
	class_ref 415746 // FileChooserUI
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 295170 "InternalFrameUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 422530 // InternalFrameUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 295810 "LabelUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 360962 // LabelUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 296322 "MenuBarUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Insets;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
${definition}"
      associated_elems
	class_ref 421250 // MenuBarUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 296962 "OptionPaneUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.JOptionPane;
${definition}"
      associated_elems
	class_ref 426498 // OptionPaneUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 299394 "SeparatorUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 394242 // SeparatorUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 299906 "PopupMenuUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.MouseEvent;
import javax.swing.Popup;
import javax.swing.PopupFactory;
import javax.swing.JPopupMenu;
${definition}"
      associated_elems
	class_ref 393602 // PopupMenuUI
      end
      comment "Copyright (c) 1997, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 300546 "ProgressBarUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 434434 // ProgressBarUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 301442 "ScrollBarUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 435970 // ScrollBarUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 301826 "ScrollPaneUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 437378 // ScrollPaneUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 302338 "SliderUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 439042 // SliderUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 303106 "SplitPaneUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.JSplitPane;
import java.awt.Graphics;
${definition}"
      associated_elems
	class_ref 442114 // SplitPaneUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 303618 "TabbedPaneUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Rectangle;
import javax.swing.JTabbedPane;
${definition}"
      associated_elems
	class_ref 444034 // TabbedPaneUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 305282 "TreeUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Rectangle;
import javax.swing.JTree;
import javax.swing.tree.TreePath;
${definition}"
      associated_elems
	class_ref 448642 // TreeUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 313474 "RootPaneUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 470530 // RootPaneUI
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 313858 "ComponentInputMapUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.ComponentInputMap;
import javax.swing.JComponent;
${definition}"
      associated_elems
	class_ref 470914 // ComponentInputMapUIResource
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 314882 "SpinnerUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 472450 // SpinnerUI
      end
      comment "Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 315650 "TableHeaderUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 473986 // TableHeaderUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 316802 "ToolBarUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Insets;
import javax.swing.JToolBar;
${definition}"
      associated_elems
	class_ref 476802 // ToolBarUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 945282 "ActionMapUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.ActionMap;
${definition}"
      associated_elems
	class_ref 1306882 // ActionMapUIResource
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 945410 "BorderUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Insets;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.io.Serializable;
import java.beans.ConstructorProperties;
import javax.swing.border.*;
import javax.swing.Icon;
import javax.swing.plaf.UIResource;
${definition}"
      associated_elems
	class_ref 1307010 // BorderUIResource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 945538 "ColorChooserUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.colorchooser.*;
${definition}"
      associated_elems
	class_ref 1275778 // ColorChooserUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 945666 "ColorUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Color;
import java.beans.ConstructorProperties;
${definition}"
      associated_elems
	class_ref 1308034 // ColorUIResource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 945794 "DimensionUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Dimension;
import javax.swing.plaf.UIResource;
${definition}"
      associated_elems
	class_ref 1308162 // DimensionUIResource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 945922 "FontUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Font;
import javax.swing.plaf.UIResource;
${definition}"
      associated_elems
	class_ref 1308290 // FontUIResource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946050 "IconUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Graphics;
import java.io.Serializable;
import javax.swing.Icon;
import javax.swing.plaf.UIResource;
${definition}"
      associated_elems
	class_ref 1308418 // IconUIResource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946178 "InputMapUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.InputMap;
${definition}"
      associated_elems
	class_ref 1308546 // InputMapUIResource
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946306 "InsetsUIResource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Insets;
import javax.swing.plaf.UIResource;
${definition}"
      associated_elems
	class_ref 1308674 // InsetsUIResource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946434 "LayerUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyChangeListener;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1285250 // LayerUI
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946562 "ListUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.JList;
import java.awt.Point;
import java.awt.Rectangle;
${definition}"
      associated_elems
	class_ref 1308802 // ListUI
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946690 "PanelUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 358914 // PanelUI
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946818 "TableUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1308930 // TableUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 946946 "ToolTipUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1294210 // ToolTipUI
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 947074 "ViewportUI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 445570 // ViewportUI
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 152066 // synth

  package_ref 152322 // basic

  package_ref 155138 // nimbus

  package_ref 186882 // metal

  package_ref 187010 // multi
end
