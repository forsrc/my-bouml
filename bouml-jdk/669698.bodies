class XMLDTDDescription
!!!4472706.java!!!	XMLDTDDescription(inout id : XMLResourceIdentifier, inout rootName : String)
        this.setValues(id.getPublicId(), id.getLiteralSystemId(),
                id.getBaseSystemId(), id.getExpandedSystemId());
        this.fRootName = rootName;
        this.fPossibleRoots = null;
!!!4472834.java!!!	XMLDTDDescription(inout publicId : String, inout literalId : String, inout baseId : String, inout expandedId : String, inout rootName : String)
        this.setValues(publicId, literalId, baseId, expandedId);
        this.fRootName = rootName;
        this.fPossibleRoots = null;
!!!4472962.java!!!	XMLDTDDescription(inout source : XMLInputSource)
        this.setValues(source.getPublicId(), null,
                source.getBaseSystemId(), source.getSystemId());
        this.fRootName = null;
        this.fPossibleRoots = null;
!!!4473090.java!!!	getGrammarType() : String
        return XMLGrammarDescription.XML_DTD;
!!!4473218.java!!!	getRootName() : String
        return fRootName;
!!!4473346.java!!!	setRootName(inout rootName : String) : void
        fRootName = rootName;
        fPossibleRoots = null;
!!!4473474.java!!!	setPossibleRoots(inout possibleRoots : ArrayList) : void
        fPossibleRoots = possibleRoots;
!!!4473602.java!!!	setPossibleRoots(inout possibleRoots : Vector) : void
        fPossibleRoots = (possibleRoots != null) ? new ArrayList(possibleRoots) : null;
!!!4473730.java!!!	equals(inout desc : Object) : boolean
        if (!(desc instanceof XMLGrammarDescription)) return false;
        if (!getGrammarType().equals(((XMLGrammarDescription)desc).getGrammarType())) {
            return false;
        }
        // assume it's a DTDDescription
        XMLDTDDescription dtdDesc = (XMLDTDDescription)desc;
        if (fRootName != null) {
            if ((dtdDesc.fRootName) != null && !dtdDesc.fRootName.equals(fRootName)) {
                return false;
            }
            else if (dtdDesc.fPossibleRoots != null && !dtdDesc.fPossibleRoots.contains(fRootName)) {
                return false;
            }
        }
        else if (fPossibleRoots != null) {
            if (dtdDesc.fRootName != null) {
                if (!fPossibleRoots.contains(dtdDesc.fRootName)) {
                    return false;
                }
            }
            else if (dtdDesc.fPossibleRoots == null) {
                return false;
            }
            else {
                boolean found = false;
                final int size = fPossibleRoots.size();
                for (int i = 0; i < size; ++i) {
                    String root = (String) fPossibleRoots.get(i);
                    found = dtdDesc.fPossibleRoots.contains(root);
                    if (found) break;
                }
                if (!found) return false;
            }
        }
        // if we got this far we've got a root match... try other two fields,
        // since so many different DTD's have roots in common:
        if (fExpandedSystemId != null) {
            if (!fExpandedSystemId.equals(dtdDesc.fExpandedSystemId)) {
                return false;
            }
        }
        else if (dtdDesc.fExpandedSystemId != null) {
            return false;
        }
        if (fPublicId != null) {
            if (!fPublicId.equals(dtdDesc.fPublicId)) {
                return false;
            }
        }
        else if (dtdDesc.fPublicId != null) {
            return false;
        }
        return true;
!!!4473858.java!!!	hashCode() : int
        if (fExpandedSystemId != null) {
            return fExpandedSystemId.hashCode();
        }
        if (fPublicId != null) {
            return fPublicId.hashCode();
        }
        // give up; hope .equals can handle it:
        return 0;
