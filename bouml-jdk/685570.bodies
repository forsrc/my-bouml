class DayDV
!!!4513282.java!!!	getActualValue(inout content : String, inout context : ValidationContext) : Object
        try{
            return parse(content);
        } catch(Exception ex){
            throw new InvalidDatatypeValueException("cvc-datatype-valid.1.2.1", new Object[]{content, "gDay"});
        }
!!!4513410.java!!!	parse(inout str : String) : AbstractDateTimeDV::DateTimeData
        DateTimeData date = new DateTimeData(str, this);
        int len = str.length();

        if (str.charAt(0)!='-' || str.charAt(1)!='-' || str.charAt(2)!='-') {
            throw new SchemaDateTimeException ("Error in day parsing");
        }

        //initialize values
        date.year=YEAR;
        date.month=MONTH;

        date.day=parseInt(str, 3,5);

        if ( DAY_SIZE<len ) {
            if (!isNextCharUTCSign(str, DAY_SIZE, len)) {
                throw new SchemaDateTimeException ("Error in day parsing");
            }
            else {
                getTimeZone(str, date, DAY_SIZE, len);
            }
        }

       //validate and normalize
        validateDateTime(date);

        //save unnormalized values
        saveUnnormalized(date);

        if ( date.utc!=0 && date.utc!='Z' ) {
            normalize(date);
        }
        date.position = 2;
        return date;
!!!4513538.java!!!	dateToString(inout date : AbstractDateTimeDV::DateTimeData) : String
        StringBuffer message = new StringBuffer(6);
        message.append('-');
        message.append('-');
        message.append('-');
        append(message, date.day, 2);
        append(message, (char)date.utc, 0);
        return message.toString();
!!!4513666.java!!!	getXMLGregorianCalendar(inout date : AbstractDateTimeDV::DateTimeData) : XMLGregorianCalendar
        return datatypeFactory.newXMLGregorianCalendar(DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED,
                date.unNormDay, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED,
                DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED,
                date.hasTimeZone() ? date.timezoneHr * 60 + date.timezoneMin : DatatypeConstants.FIELD_UNDEFINED);
