class FileInputStream
!!!6870274.java!!!	FileInputStream(inout name : String)
        this(name != null ? new File(name) : null);
!!!6870402.java!!!	FileInputStream(inout file : File)
        String name = (file != null ? file.getPath() : null);
        SecurityManager security = System.getSecurityManager();
        if (security != null) {
            security.checkRead(name);
        }
        if (name == null) {
            throw new NullPointerException();
        }
        if (file.isInvalid()) {
            throw new FileNotFoundException("Invalid file path");
        }
        fd = new FileDescriptor();
        fd.attach(this);
        path = name;
        open(name);
!!!6870530.java!!!	FileInputStream(inout fdObj : FileDescriptor)
        SecurityManager security = System.getSecurityManager();
        if (fdObj == null) {
            throw new NullPointerException();
        }
        if (security != null) {
            security.checkRead(fdObj);
        }
        fd = fdObj;
        path = null;

        /*
         * FileDescriptor is being shared by streams.
         * Register this stream with FileDescriptor tracker.
         */
        fd.attach(this);
!!!6870786.java!!!	open(inout name : String) : void
        open0(name);
!!!6870914.java!!!	read() : int
        return read0();
!!!6871298.java!!!	read(inout b : byte [[]]) : int
        return readBytes(b, 0, b.length);
!!!6871426.java!!!	read(inout b : byte [[]], in off : int, in len : int) : int
        return readBytes(b, off, len);
!!!6871810.java!!!	close() : void
        synchronized (closeLock) {
            if (closed) {
                return;
            }
            closed = true;
        }
        if (channel != null) {
           channel.close();
        }

        fd.closeAll(new Closeable() {
            public void close() throws IOException {
               close0();
           }
        });
!!!6871938.java!!!	getFD() : FileDescriptor
        if (fd != null) {
            return fd;
        }
        throw new IOException();
!!!6872066.java!!!	getChannel() : FileChannel
        synchronized (this) {
            if (channel == null) {
                channel = FileChannelImpl.open(fd, path, true, false, this);
            }
            return channel;
        }
!!!6872450.java!!!	finalize() : void
        if ((fd != null) &&  (fd != FileDescriptor.in)) {
            /* if fd is shared, the references in FileDescriptor
             * will ensure that finalizer is only called when
             * safe to do so. All references using the fd have
             * become unreachable. We can call close()
             */
            close();
        }
