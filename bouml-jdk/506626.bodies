class IIOPProxyImpl
!!!3023746.java!!!	isStub(inout obj : Object) : boolean
        return (obj instanceof Stub);
!!!3023874.java!!!	getDelegate(inout stub : Object) : Object
        return ((Stub)stub)._get_delegate();
!!!3024002.java!!!	setDelegate(inout stub : Object, inout delegate : Object) : void
        ((Stub)stub)._set_delegate((Delegate)delegate);
!!!3024130.java!!!	getOrb(inout stub : Object) : Object
        try {
            return ((Stub)stub)._orb();
        } catch (org.omg.CORBA.BAD_OPERATION x) {
            throw new UnsupportedOperationException(x);
        }
!!!3024258.java!!!	connect(inout stub : Object, inout orb : Object) : void
        ((Stub)stub).connect((ORB)orb);
!!!3024386.java!!!	isOrb(inout obj : Object) : boolean
        return (obj instanceof ORB);
!!!3024514.java!!!	createOrb(inout args : String [[]], inout props : Properties) : Object
        return ORB.init(args, props);
!!!3024642.java!!!	stringToObject(inout orb : Object, inout str : String) : Object
        return ((ORB)orb).string_to_object(str);
!!!3024770.java!!!	objectToString(inout orb : Object, inout obj : Object) : String
        return ((ORB)orb).object_to_string((org.omg.CORBA.Object)obj);
!!!3024898.java!!!	narrow(inout narrowFrom : Object, inout narrowTo : Class) : T
        return (T)PortableRemoteObject.narrow(narrowFrom, narrowTo);
!!!3025026.java!!!	exportObject(inout obj : Remote) : void
        PortableRemoteObject.exportObject(obj);
!!!3025154.java!!!	unexportObject(inout obj : Remote) : void
        PortableRemoteObject.unexportObject(obj);
!!!3025282.java!!!	toStub(in obj : Remote) : Remote
        if (System.getSecurityManager() == null) {
            return PortableRemoteObject.toStub(obj);
        } else {
            try {
                return AccessController.doPrivileged(new PrivilegedExceptionAction<Remote>() {

                    @Override
                    public Remote run() throws Exception {
                        return PortableRemoteObject.toStub(obj);
                    }
                }, STUB_ACC);
            } catch (PrivilegedActionException e) {
                if (e.getException() instanceof NoSuchObjectException) {
                    throw (NoSuchObjectException)e.getException();
                }
                throw new RuntimeException("Unexpected exception type", e.getException());
            }
        }
