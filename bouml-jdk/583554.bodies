class TransformerException
!!!5796994.java!!!	getLocator() : SourceLocator
        return this.locator;
!!!5797122.java!!!	setLocator(inout location : SourceLocator) : void
        this.locator = location;
!!!5797250.java!!!	getException() : Throwable
        return containedException;
!!!5797378.java!!!	getCause() : Throwable

        return ((containedException == this)
                ? null
                : containedException);
!!!5797506.java!!!	initCause(inout cause : Throwable) : Throwable

        if (this.containedException != null) {
            throw new IllegalStateException("Can't overwrite cause");
        }

        if (cause == this) {
            throw new IllegalArgumentException(
                "Self-causation not permitted");
        }

        this.containedException = cause;

        return this;
!!!5797634.java!!!	TransformerException(inout message : String)
        this(message, null, null);
!!!5797762.java!!!	TransformerException(inout e : Throwable)
        this(null, null, e);
!!!5797890.java!!!	TransformerException(inout message : String, inout e : Throwable)
        this(message, null, e);
!!!5798018.java!!!	TransformerException(inout message : String, inout locator : SourceLocator)
        this(message, locator, null);
!!!5798146.java!!!	TransformerException(inout message : String, inout locator : SourceLocator, inout e : Throwable)
        super(((message == null) || (message.length() == 0))
              ? ((e == null) ? "" : e.toString())
              : message);

        this.containedException = e;
        this.locator            = locator;
!!!5798274.java!!!	getMessageAndLocation() : String
        StringBuilder sbuffer = new StringBuilder();
        sbuffer.append(Objects.toString(super.getMessage(), ""));
        sbuffer.append(Objects.toString(getLocationAsString(), ""));

        return sbuffer.toString();
!!!5798402.java!!!	getLocationAsString() : String
        if (locator == null) {
            return null;
        }

        if (System.getSecurityManager() == null) {
            return getLocationString();
        } else {
            return (String) AccessController.doPrivileged(
                new PrivilegedAction<String>() {
                    public String run() {
                        return getLocationString();
                    }
                },
                new AccessControlContext(new ProtectionDomain[] {getNonPrivDomain()})
            );
        }
!!!5798530.java!!!	getLocationString() : String
        if (locator == null) {
            return null;
        }

        StringBuilder sbuffer  = new StringBuilder();
            String       systemID = locator.getSystemId();
            int          line     = locator.getLineNumber();
            int          column   = locator.getColumnNumber();

            if (null != systemID) {
                sbuffer.append("; SystemID: ");
                sbuffer.append(systemID);
            }

            if (0 != line) {
                sbuffer.append("; Line#: ");
                sbuffer.append(line);
            }

            if (0 != column) {
                sbuffer.append("; Column#: ");
                sbuffer.append(column);
            }

            return sbuffer.toString();
!!!5798658.java!!!	printStackTrace() : void
        printStackTrace(new java.io.PrintWriter(System.err, true));
!!!5798786.java!!!	printStackTrace(inout s : PrintStream) : void
        printStackTrace(new java.io.PrintWriter(s));
!!!5798914.java!!!	printStackTrace(inout s : PrintWriter) : void

        if (s == null) {
            s = new java.io.PrintWriter(System.err, true);
        }

        try {
            String locInfo = getLocationAsString();

            if (null != locInfo) {
                s.println(locInfo);
            }

            super.printStackTrace(s);
        } catch (Throwable e) {}

        Throwable exception = getException();

        for (int i = 0; (i < 10) && (null != exception); i++) {
            s.println("---------");

            try {
                if (exception instanceof TransformerException) {
                    String locInfo =
                        ((TransformerException) exception)
                            .getLocationAsString();

                    if (null != locInfo) {
                        s.println(locInfo);
                    }
                }

                exception.printStackTrace(s);
            } catch (Throwable e) {
                s.println("Could not print stack trace...");
            }

            try {
                Method meth =
                    ((Object) exception).getClass().getMethod("getException",
                        (Class[]) null);

                if (null != meth) {
                    Throwable prev = exception;

                    exception = (Throwable) meth.invoke(exception, (Object[]) null);

                    if (prev == exception) {
                        break;
                    }
                } else {
                    exception = null;
                }
                } catch (InvocationTargetException | IllegalAccessException
                        | NoSuchMethodException e) {
                exception = null;
            }
        }
        // insure output is written
        s.flush();
!!!5799042.java!!!	getNonPrivDomain() : ProtectionDomain
        CodeSource nullSource = new CodeSource(null, (CodeSigner[]) null);
        PermissionCollection noPermission = new Permissions();
        return new ProtectionDomain(nullSource, noPermission);
