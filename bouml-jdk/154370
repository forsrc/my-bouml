format 222
"regex" // jdk1.8::java::util::regex
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/util/regex/"
  java_package "java.util.regex"
  classview 149890 "regex"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 417154 "Pattern"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A compiled representation of a regular expression.

<p> A regular expression, specified as a string, must first be compiled into
an instance of this class.  The resulting pattern can then be used to create
a {@link Matcher} object that can match arbitrary {@linkplain
java.lang.CharSequence character sequences} against the regular
expression.  All of the state involved in performing a match resides in the
matcher, so many matchers can share the same pattern.

<p> A typical invocation sequence is thus

<blockquote><pre>
Pattern p = Pattern.{@link #compile compile}(\"a*b\");
Matcher m = p.{@link #matcher matcher}(\"aaaaab\");
boolean b = m.{@link Matcher#matches matches}();</pre></blockquote>

<p> A {@link #matches matches} method is defined by this class as a
convenience for when a regular expression is used just once.  This method
compiles an expression and matches an input sequence against it in a single
invocation.  The statement

<blockquote><pre>
boolean b = Pattern.matches(\"a*b\", \"aaaaab\");</pre></blockquote>

is equivalent to the three statements above, though for repeated matches it
is less efficient since it does not allow the compiled pattern to be reused.

<p> Instances of this class are immutable and are safe for use by multiple
concurrent threads.  Instances of the {@link Matcher} class are not safe for
such use.


<h3><a name=\"sum\">Summary of regular-expression constructs</a></h3>

<table border=\"0\" cellpadding=\"1\" cellspacing=\"0\"
 summary=\"Regular expression constructs, and what they match\">

<tr align=\"left\">
<th align=\"left\" id=\"construct\">Construct</th>
<th align=\"left\" id=\"matches\">Matches</th>
</tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"characters\">Characters</th></tr>

<tr><td valign=\"top\" headers=\"construct characters\"><i>x</i></td>
    <td headers=\"matches\">The character <i>x</i></td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\\\</tt></td>
    <td headers=\"matches\">The backslash character</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\0</tt><i>n</i></td>
    <td headers=\"matches\">The character with octal value <tt>0</tt><i>n</i>
        (0&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;7)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\0</tt><i>nn</i></td>
    <td headers=\"matches\">The character with octal value <tt>0</tt><i>nn</i>
        (0&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;7)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\0</tt><i>mnn</i></td>
    <td headers=\"matches\">The character with octal value <tt>0</tt><i>mnn</i>
        (0&nbsp;<tt>&lt;=</tt>&nbsp;<i>m</i>&nbsp;<tt>&lt;=</tt>&nbsp;3,
        0&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;7)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\x</tt><i>hh</i></td>
    <td headers=\"matches\">The character with hexadecimal&nbsp;value&nbsp;<tt>0x</tt><i>hh</i></td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>&#92;u</tt><i>hhhh</i></td>
    <td headers=\"matches\">The character with hexadecimal&nbsp;value&nbsp;<tt>0x</tt><i>hhhh</i></td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>&#92;x</tt><i>{h...h}</i></td>
    <td headers=\"matches\">The character with hexadecimal&nbsp;value&nbsp;<tt>0x</tt><i>h...h</i>
        ({@link java.lang.Character#MIN_CODE_POINT Character.MIN_CODE_POINT}
        &nbsp;&lt;=&nbsp;<tt>0x</tt><i>h...h</i>&nbsp;&lt;=&nbsp;
         {@link java.lang.Character#MAX_CODE_POINT Character.MAX_CODE_POINT})</td></tr>
<tr><td valign=\"top\" headers=\"matches\"><tt>\\t</tt></td>
    <td headers=\"matches\">The tab character (<tt>'&#92;u0009'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\n</tt></td>
    <td headers=\"matches\">The newline (line feed) character (<tt>'&#92;u000A'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\r</tt></td>
    <td headers=\"matches\">The carriage-return character (<tt>'&#92;u000D'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\f</tt></td>
    <td headers=\"matches\">The form-feed character (<tt>'&#92;u000C'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\a</tt></td>
    <td headers=\"matches\">The alert (bell) character (<tt>'&#92;u0007'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\e</tt></td>
    <td headers=\"matches\">The escape character (<tt>'&#92;u001B'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\c</tt><i>x</i></td>
    <td headers=\"matches\">The control character corresponding to <i>x</i></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"classes\">Character classes</th></tr>

<tr><td valign=\"top\" headers=\"construct classes\">{@code [abc]}</td>
    <td headers=\"matches\">{@code a}, {@code b}, or {@code c} (simple class)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\">{@code [^abc]}</td>
    <td headers=\"matches\">Any character except {@code a}, {@code b}, or {@code c} (negation)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\">{@code [a-zA-Z]}</td>
    <td headers=\"matches\">{@code a} through {@code z}
        or {@code A} through {@code Z}, inclusive (range)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\">{@code [a-d[m-p]]}</td>
    <td headers=\"matches\">{@code a} through {@code d},
     or {@code m} through {@code p}: {@code [a-dm-p]} (union)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\">{@code [a-z&&[def]]}</td>
    <td headers=\"matches\">{@code d}, {@code e}, or {@code f} (intersection)</tr>
<tr><td valign=\"top\" headers=\"construct classes\">{@code [a-z&&[^bc]]}</td>
    <td headers=\"matches\">{@code a} through {@code z},
        except for {@code b} and {@code c}: {@code [ad-z]} (subtraction)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\">{@code [a-z&&[^m-p]]}</td>
    <td headers=\"matches\">{@code a} through {@code z},
         and not {@code m} through {@code p}: {@code [a-lq-z]}(subtraction)</td></tr>
<tr><th>&nbsp;</th></tr>

<tr align=\"left\"><th colspan=\"2\" id=\"predef\">Predefined character classes</th></tr>

<tr><td valign=\"top\" headers=\"construct predef\"><tt>.</tt></td>
    <td headers=\"matches\">Any character (may or may not match <a href=\"#lt\">line terminators</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\d</tt></td>
    <td headers=\"matches\">A digit: <tt>[0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\D</tt></td>
    <td headers=\"matches\">A non-digit: <tt>[^0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\h</tt></td>
    <td headers=\"matches\">A horizontal whitespace character:
    <tt>[ \\t\\xA0&#92;u1680&#92;u180e&#92;u2000-&#92;u200a&#92;u202f&#92;u205f&#92;u3000]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\H</tt></td>
    <td headers=\"matches\">A non-horizontal whitespace character: <tt>[^\\h]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\s</tt></td>
    <td headers=\"matches\">A whitespace character: <tt>[ \\t\\n\\x0B\\f\\r]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\S</tt></td>
    <td headers=\"matches\">A non-whitespace character: <tt>[^\\s]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\v</tt></td>
    <td headers=\"matches\">A vertical whitespace character: <tt>[\\n\\x0B\\f\\r\\x85&#92;u2028&#92;u2029]</tt>
    </td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\V</tt></td>
    <td headers=\"matches\">A non-vertical whitespace character: <tt>[^\\v]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\w</tt></td>
    <td headers=\"matches\">A word character: <tt>[a-zA-Z_0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\W</tt></td>
    <td headers=\"matches\">A non-word character: <tt>[^\\w]</tt></td></tr>
<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"posix\"><b>POSIX character classes (US-ASCII only)</b></th></tr>

<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Lower}}</td>
    <td headers=\"matches\">A lower-case alphabetic character: {@code [a-z]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Upper}}</td>
    <td headers=\"matches\">An upper-case alphabetic character:{@code [A-Z]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{ASCII}}</td>
    <td headers=\"matches\">All ASCII:{@code [\\x00-\\x7F]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Alpha}}</td>
    <td headers=\"matches\">An alphabetic character:{@code [\\p{Lower}\\p{Upper}]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Digit}}</td>
    <td headers=\"matches\">A decimal digit: {@code [0-9]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Alnum}}</td>
    <td headers=\"matches\">An alphanumeric character:{@code [\\p{Alpha}\\p{Digit}]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Punct}}</td>
    <td headers=\"matches\">Punctuation: One of {@code !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~}</td></tr>
    <!-- {@code [\\!\"#\\$%&'\\(\\)\\*\\+,\\-\\./:;\\<=\\>\\?@\\[\\\\\\]\\^_`\\{\\|\\}~]}
         {@code [\\X21-\\X2F\\X31-\\X40\\X5B-\\X60\\X7B-\\X7E]} -->
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Graph}}</td>
    <td headers=\"matches\">A visible character: {@code [\\p{Alnum}\\p{Punct}]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Print}}</td>
    <td headers=\"matches\">A printable character: {@code [\\p{Graph}\\x20]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Blank}}</td>
    <td headers=\"matches\">A space or a tab: {@code [ \\t]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Cntrl}}</td>
    <td headers=\"matches\">A control character: {@code [\\x00-\\x1F\\x7F]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{XDigit}}</td>
    <td headers=\"matches\">A hexadecimal digit: {@code [0-9a-fA-F]}</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\">{@code \\p{Space}}</td>
    <td headers=\"matches\">A whitespace character: {@code [ \\t\\n\\x0B\\f\\r]}</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\">java.lang.Character classes (simple <a href=\"#jcc\">java character type</a>)</th></tr>

<tr><td valign=\"top\"><tt>\\p{javaLowerCase}</tt></td>
    <td>Equivalent to java.lang.Character.isLowerCase()</td></tr>
<tr><td valign=\"top\"><tt>\\p{javaUpperCase}</tt></td>
    <td>Equivalent to java.lang.Character.isUpperCase()</td></tr>
<tr><td valign=\"top\"><tt>\\p{javaWhitespace}</tt></td>
    <td>Equivalent to java.lang.Character.isWhitespace()</td></tr>
<tr><td valign=\"top\"><tt>\\p{javaMirrored}</tt></td>
    <td>Equivalent to java.lang.Character.isMirrored()</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"unicode\">Classes for Unicode scripts, blocks, categories and binary properties</th></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code \\p{IsLatin}}</td>
    <td headers=\"matches\">A Latin&nbsp;script character (<a href=\"#usc\">script</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code \\p{InGreek}}</td>
    <td headers=\"matches\">A character in the Greek&nbsp;block (<a href=\"#ubc\">block</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code \\p{Lu}}</td>
    <td headers=\"matches\">An uppercase letter (<a href=\"#ucc\">category</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code \\p{IsAlphabetic}}</td>
    <td headers=\"matches\">An alphabetic character (<a href=\"#ubpc\">binary property</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code \\p{Sc}}</td>
    <td headers=\"matches\">A currency symbol</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code \\P{InGreek}}</td>
    <td headers=\"matches\">Any character except one in the Greek block (negation)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\">{@code [\\p{L}&&[^\\p{Lu}]]}</td>
    <td headers=\"matches\">Any letter except an uppercase letter (subtraction)</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"bounds\">Boundary matchers</th></tr>

<tr><td valign=\"top\" headers=\"construct bounds\"><tt>^</tt></td>
    <td headers=\"matches\">The beginning of a line</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>$</tt></td>
    <td headers=\"matches\">The end of a line</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\b</tt></td>
    <td headers=\"matches\">A word boundary</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\B</tt></td>
    <td headers=\"matches\">A non-word boundary</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\A</tt></td>
    <td headers=\"matches\">The beginning of the input</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\G</tt></td>
    <td headers=\"matches\">The end of the previous match</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\Z</tt></td>
    <td headers=\"matches\">The end of the input but for the final
        <a href=\"#lt\">terminator</a>, if&nbsp;any</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\z</tt></td>
    <td headers=\"matches\">The end of the input</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"lineending\">Linebreak matcher</th></tr>
<tr><td valign=\"top\" headers=\"construct lineending\"><tt>\\R</tt></td>
    <td headers=\"matches\">Any Unicode linebreak sequence, is equivalent to
    <tt>&#92;u000D&#92;u000A|[&#92;u000A&#92;u000B&#92;u000C&#92;u000D&#92;u0085&#92;u2028&#92;u2029]
    </tt></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"greedy\">Greedy quantifiers</th></tr>

<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>?</tt></td>
    <td headers=\"matches\"><i>X</i>, once or not at all</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>*</tt></td>
    <td headers=\"matches\"><i>X</i>, zero or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>+</tt></td>
    <td headers=\"matches\"><i>X</i>, one or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>{</tt><i>n</i><tt>}</tt></td>
    <td headers=\"matches\"><i>X</i>, exactly <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>{</tt><i>n</i><tt>,}</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>{</tt><i>n</i><tt>,</tt><i>m</i><tt>}</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> but not more than <i>m</i> times</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"reluc\">Reluctant quantifiers</th></tr>

<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>??</tt></td>
    <td headers=\"matches\"><i>X</i>, once or not at all</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>*?</tt></td>
    <td headers=\"matches\"><i>X</i>, zero or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>+?</tt></td>
    <td headers=\"matches\"><i>X</i>, one or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>{</tt><i>n</i><tt>}?</tt></td>
    <td headers=\"matches\"><i>X</i>, exactly <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>{</tt><i>n</i><tt>,}?</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>{</tt><i>n</i><tt>,</tt><i>m</i><tt>}?</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> but not more than <i>m</i> times</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"poss\">Possessive quantifiers</th></tr>

<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>?+</tt></td>
    <td headers=\"matches\"><i>X</i>, once or not at all</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>*+</tt></td>
    <td headers=\"matches\"><i>X</i>, zero or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>++</tt></td>
    <td headers=\"matches\"><i>X</i>, one or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>{</tt><i>n</i><tt>}+</tt></td>
    <td headers=\"matches\"><i>X</i>, exactly <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>{</tt><i>n</i><tt>,}+</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>{</tt><i>n</i><tt>,</tt><i>m</i><tt>}+</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> but not more than <i>m</i> times</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"logical\">Logical operators</th></tr>

<tr><td valign=\"top\" headers=\"construct logical\"><i>XY</i></td>
    <td headers=\"matches\"><i>X</i> followed by <i>Y</i></td></tr>
<tr><td valign=\"top\" headers=\"construct logical\"><i>X</i><tt>|</tt><i>Y</i></td>
    <td headers=\"matches\">Either <i>X</i> or <i>Y</i></td></tr>
<tr><td valign=\"top\" headers=\"construct logical\"><tt>(</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\">X, as a <a href=\"#cg\">capturing group</a></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"backref\">Back references</th></tr>

<tr><td valign=\"bottom\" headers=\"construct backref\"><tt>\\</tt><i>n</i></td>
    <td valign=\"bottom\" headers=\"matches\">Whatever the <i>n</i><sup>th</sup>
    <a href=\"#cg\">capturing group</a> matched</td></tr>

<tr><td valign=\"bottom\" headers=\"construct backref\"><tt>\\</tt><i>k</i>&lt;<i>name</i>&gt;</td>
    <td valign=\"bottom\" headers=\"matches\">Whatever the
    <a href=\"#groupname\">named-capturing group</a> \"name\" matched</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"quot\">Quotation</th></tr>

<tr><td valign=\"top\" headers=\"construct quot\"><tt>\\</tt></td>
    <td headers=\"matches\">Nothing, but quotes the following character</td></tr>
<tr><td valign=\"top\" headers=\"construct quot\"><tt>\\Q</tt></td>
    <td headers=\"matches\">Nothing, but quotes all characters until <tt>\\E</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct quot\"><tt>\\E</tt></td>
    <td headers=\"matches\">Nothing, but ends quoting started by <tt>\\Q</tt></td></tr>
    <!-- Metachars: !$()*+.<>?[\\]^{|} -->

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"special\">Special constructs (named-capturing and non-capturing)</th></tr>

<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&lt;<a href=\"#groupname\">name</a>&gt;</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, as a named-capturing group</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?:</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, as a non-capturing group</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?idmsuxU-idmsuxU)&nbsp;</tt></td>
    <td headers=\"matches\">Nothing, but turns match flags <a href=\"#CASE_INSENSITIVE\">i</a>
<a href=\"#UNIX_LINES\">d</a> <a href=\"#MULTILINE\">m</a> <a href=\"#DOTALL\">s</a>
<a href=\"#UNICODE_CASE\">u</a> <a href=\"#COMMENTS\">x</a> <a href=\"#UNICODE_CHARACTER_CLASS\">U</a>
on - off</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?idmsux-idmsux:</tt><i>X</i><tt>)</tt>&nbsp;&nbsp;</td>
    <td headers=\"matches\"><i>X</i>, as a <a href=\"#cg\">non-capturing group</a> with the
        given flags <a href=\"#CASE_INSENSITIVE\">i</a> <a href=\"#UNIX_LINES\">d</a>
<a href=\"#MULTILINE\">m</a> <a href=\"#DOTALL\">s</a> <a href=\"#UNICODE_CASE\">u</a >
<a href=\"#COMMENTS\">x</a> on - off</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?=</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width positive lookahead</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?!</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width negative lookahead</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&lt;=</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width positive lookbehind</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&lt;!</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width negative lookbehind</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&gt;</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, as an independent, non-capturing group</td></tr>

</table>

<hr>


<h3><a name=\"bs\">Backslashes, escapes, and quoting</a></h3>

<p> The backslash character (<tt>'\\'</tt>) serves to introduce escaped
constructs, as defined in the table above, as well as to quote characters
that otherwise would be interpreted as unescaped constructs.  Thus the
expression <tt>\\\\</tt> matches a single backslash and <tt>\\{</tt> matches a
left brace.

<p> It is an error to use a backslash prior to any alphabetic character that
does not denote an escaped construct; these are reserved for future
extensions to the regular-expression language.  A backslash may be used
prior to a non-alphabetic character regardless of whether that character is
part of an unescaped construct.

<p> Backslashes within string literals in Java source code are interpreted
as required by
<cite>The Java&trade; Language Specification</cite>
as either Unicode escapes (section 3.3) or other character escapes (section 3.10.6)
It is therefore necessary to double backslashes in string
literals that represent regular expressions to protect them from
interpretation by the Java bytecode compiler.  The string literal
<tt>\"&#92;b\"</tt>, for example, matches a single backspace character when
interpreted as a regular expression, while <tt>\"&#92;&#92;b\"</tt> matches a
word boundary.  The string literal <tt>\"&#92;(hello&#92;)\"</tt> is illegal
and leads to a compile-time error; in order to match the string
<tt>(hello)</tt> the string literal <tt>\"&#92;&#92;(hello&#92;&#92;)\"</tt>
must be used.

<h3><a name=\"cc\">Character Classes</a></h3>

   <p> Character classes may appear within other character classes, and
   may be composed by the union operator (implicit) and the intersection
   operator (<tt>&amp;&amp;</tt>).
   The union operator denotes a class that contains every character that is
   in at least one of its operand classes.  The intersection operator
   denotes a class that contains every character that is in both of its
   operand classes.

   <p> The precedence of character-class operators is as follows, from
   highest to lowest:

   <blockquote><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\"
                summary=\"Precedence of character class operators.\">
     <tr><th>1&nbsp;&nbsp;&nbsp;&nbsp;</th>
       <td>Literal escape&nbsp;&nbsp;&nbsp;&nbsp;</td>
       <td><tt>\\x</tt></td></tr>
    <tr><th>2&nbsp;&nbsp;&nbsp;&nbsp;</th>
       <td>Grouping</td>
       <td><tt>[...]</tt></td></tr>
    <tr><th>3&nbsp;&nbsp;&nbsp;&nbsp;</th>
       <td>Range</td>
       <td><tt>a-z</tt></td></tr>
     <tr><th>4&nbsp;&nbsp;&nbsp;&nbsp;</th>
       <td>Union</td>
       <td><tt>[a-e][i-u]</tt></td></tr>
     <tr><th>5&nbsp;&nbsp;&nbsp;&nbsp;</th>
       <td>Intersection</td>
       <td>{@code [a-z&&[aeiou]]}</td></tr>
   </table></blockquote>

   <p> Note that a different set of metacharacters are in effect inside
   a character class than outside a character class. For instance, the
   regular expression <tt>.</tt> loses its special meaning inside a
   character class, while the expression <tt>-</tt> becomes a range
   forming metacharacter.

<h3><a name=\"lt\">Line terminators</a></h3>

<p> A <i>line terminator</i> is a one- or two-character sequence that marks
the end of a line of the input character sequence.  The following are
recognized as line terminators:

<ul>

  <li> A newline (line feed) character&nbsp;(<tt>'\\n'</tt>),

  <li> A carriage-return character followed immediately by a newline
  character&nbsp;(<tt>\"\\r\\n\"</tt>),

  <li> A standalone carriage-return character&nbsp;(<tt>'\\r'</tt>),

  <li> A next-line character&nbsp;(<tt>'&#92;u0085'</tt>),

  <li> A line-separator character&nbsp;(<tt>'&#92;u2028'</tt>), or

  <li> A paragraph-separator character&nbsp;(<tt>'&#92;u2029</tt>).

</ul>
<p>If {@link #UNIX_LINES} mode is activated, then the only line terminators
recognized are newline characters.

<p> The regular expression <tt>.</tt> matches any character except a line
terminator unless the {@link #DOTALL} flag is specified.

<p> By default, the regular expressions <tt>^</tt> and <tt>$</tt> ignore
line terminators and only match at the beginning and the end, respectively,
of the entire input sequence. If {@link #MULTILINE} mode is activated then
<tt>^</tt> matches at the beginning of input and after any line terminator
except at the end of input. When in {@link #MULTILINE} mode <tt>$</tt>
matches just before a line terminator or the end of the input sequence.

<h3><a name=\"cg\">Groups and capturing</a></h3>

<h4><a name=\"gnumber\">Group number</a></h4>
<p> Capturing groups are numbered by counting their opening parentheses from
left to right.  In the expression <tt>((A)(B(C)))</tt>, for example, there
are four such groups: </p>

<blockquote><table cellpadding=1 cellspacing=0 summary=\"Capturing group numberings\">
<tr><th>1&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>((A)(B(C)))</tt></td></tr>
<tr><th>2&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>(A)</tt></td></tr>
<tr><th>3&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>(B(C))</tt></td></tr>
<tr><th>4&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>(C)</tt></td></tr>
</table></blockquote>

<p> Group zero always stands for the entire expression.

<p> Capturing groups are so named because, during a match, each subsequence
of the input sequence that matches such a group is saved.  The captured
subsequence may be used later in the expression, via a back reference, and
may also be retrieved from the matcher once the match operation is complete.

<h4><a name=\"groupname\">Group name</a></h4>
<p>A capturing group can also be assigned a \"name\", a <tt>named-capturing group</tt>,
and then be back-referenced later by the \"name\". Group names are composed of
the following characters. The first character must be a <tt>letter</tt>.

<ul>
  <li> The uppercase letters <tt>'A'</tt> through <tt>'Z'</tt>
       (<tt>'&#92;u0041'</tt>&nbsp;through&nbsp;<tt>'&#92;u005a'</tt>),
  <li> The lowercase letters <tt>'a'</tt> through <tt>'z'</tt>
       (<tt>'&#92;u0061'</tt>&nbsp;through&nbsp;<tt>'&#92;u007a'</tt>),
  <li> The digits <tt>'0'</tt> through <tt>'9'</tt>
       (<tt>'&#92;u0030'</tt>&nbsp;through&nbsp;<tt>'&#92;u0039'</tt>),
</ul>

<p> A <tt>named-capturing group</tt> is still numbered as described in
<a href=\"#gnumber\">Group number</a>.

<p> The captured input associated with a group is always the subsequence
that the group most recently matched.  If a group is evaluated a second time
because of quantification then its previously-captured value, if any, will
be retained if the second evaluation fails.  Matching the string
<tt>\"aba\"</tt> against the expression <tt>(a(b)?)+</tt>, for example, leaves
group two set to <tt>\"b\"</tt>.  All captured input is discarded at the
beginning of each match.

<p> Groups beginning with <tt>(?</tt> are either pure, <i>non-capturing</i> groups
that do not capture text and do not count towards the group total, or
<i>named-capturing</i> group.

<h3> Unicode support </h3>

<p> This class is in conformance with Level 1 of <a
href=\"http://www.unicode.org/reports/tr18/\"><i>Unicode Technical
Standard #18: Unicode Regular Expression</i></a>, plus RL2.1
Canonical Equivalents.
<p>
<b>Unicode escape sequences</b> such as <tt>&#92;u2014</tt> in Java source code
are processed as described in section 3.3 of
<cite>The Java&trade; Language Specification</cite>.
Such escape sequences are also implemented directly by the regular-expression
parser so that Unicode escapes can be used in expressions that are read from
files or from the keyboard.  Thus the strings <tt>\"&#92;u2014\"</tt> and
<tt>\"\\\\u2014\"</tt>, while not equal, compile into the same pattern, which
matches the character with hexadecimal value <tt>0x2014</tt>.
<p>
A Unicode character can also be represented in a regular-expression by
using its <b>Hex notation</b>(hexadecimal code point value) directly as described in construct
<tt>&#92;x{...}</tt>, for example a supplementary character U+2011F
can be specified as <tt>&#92;x{2011F}</tt>, instead of two consecutive
Unicode escape sequences of the surrogate pair
<tt>&#92;uD840</tt><tt>&#92;uDD1F</tt>.
<p>
Unicode scripts, blocks, categories and binary properties are written with
the <tt>\\p</tt> and <tt>\\P</tt> constructs as in Perl.
<tt>\\p{</tt><i>prop</i><tt>}</tt> matches if
the input has the property <i>prop</i>, while <tt>\\P{</tt><i>prop</i><tt>}</tt>
does not match if the input has that property.
<p>
Scripts, blocks, categories and binary properties can be used both inside
and outside of a character class.

<p>
<b><a name=\"usc\">Scripts</a></b> are specified either with the prefix {@code Is}, as in
{@code IsHiragana}, or by using  the {@code script} keyword (or its short
form {@code sc})as in {@code script=Hiragana} or {@code sc=Hiragana}.
<p>
The script names supported by <code>Pattern</code> are the valid script names
accepted and defined by
{@link java.lang.Character.UnicodeScript#forName(String) UnicodeScript.forName}.

<p>
<b><a name=\"ubc\">Blocks</a></b> are specified with the prefix {@code In}, as in
{@code InMongolian}, or by using the keyword {@code block} (or its short
form {@code blk}) as in {@code block=Mongolian} or {@code blk=Mongolian}.
<p>
The block names supported by <code>Pattern</code> are the valid block names
accepted and defined by
{@link java.lang.Character.UnicodeBlock#forName(String) UnicodeBlock.forName}.
<p>

<b><a name=\"ucc\">Categories</a></b> may be specified with the optional prefix {@code Is}:
Both {@code \\p{L}} and {@code \\p{IsL}} denote the category of Unicode
letters. Same as scripts and blocks, categories can also be specified
by using the keyword {@code general_category} (or its short form
{@code gc}) as in {@code general_category=Lu} or {@code gc=Lu}.
<p>
The supported categories are those of
<a href=\"http://www.unicode.org/unicode/standard/standard.html\">
<i>The Unicode Standard</i></a> in the version specified by the
{@link java.lang.Character Character} class. The category names are those
defined in the Standard, both normative and informative.
<p>

<b><a name=\"ubpc\">Binary properties</a></b> are specified with the prefix {@code Is}, as in
{@code IsAlphabetic}. The supported binary properties by <code>Pattern</code>
are
<ul>
  <li> Alphabetic
  <li> Ideographic
  <li> Letter
  <li> Lowercase
  <li> Uppercase
  <li> Titlecase
  <li> Punctuation
  <Li> Control
  <li> White_Space
  <li> Digit
  <li> Hex_Digit
  <li> Join_Control
  <li> Noncharacter_Code_Point
  <li> Assigned
</ul>
<p>
The following <b>Predefined Character classes</b> and <b>POSIX character classes</b>
are in conformance with the recommendation of <i>Annex C: Compatibility Properties</i>
of <a href=\"http://www.unicode.org/reports/tr18/\"><i>Unicode Regular Expression
</i></a>, when {@link #UNICODE_CHARACTER_CLASS} flag is specified.

<table border=\"0\" cellpadding=\"1\" cellspacing=\"0\"
 summary=\"predefined and posix character classes in Unicode mode\">
<tr align=\"left\">
<th align=\"left\" id=\"predef_classes\">Classes</th>
<th align=\"left\" id=\"predef_matches\">Matches</th>
</tr>
<tr><td><tt>\\p{Lower}</tt></td>
    <td>A lowercase character:<tt>\\p{IsLowercase}</tt></td></tr>
<tr><td><tt>\\p{Upper}</tt></td>
    <td>An uppercase character:<tt>\\p{IsUppercase}</tt></td></tr>
<tr><td><tt>\\p{ASCII}</tt></td>
    <td>All ASCII:<tt>[\\x00-\\x7F]</tt></td></tr>
<tr><td><tt>\\p{Alpha}</tt></td>
    <td>An alphabetic character:<tt>\\p{IsAlphabetic}</tt></td></tr>
<tr><td><tt>\\p{Digit}</tt></td>
    <td>A decimal digit character:<tt>p{IsDigit}</tt></td></tr>
<tr><td><tt>\\p{Alnum}</tt></td>
    <td>An alphanumeric character:<tt>[\\p{IsAlphabetic}\\p{IsDigit}]</tt></td></tr>
<tr><td><tt>\\p{Punct}</tt></td>
    <td>A punctuation character:<tt>p{IsPunctuation}</tt></td></tr>
<tr><td><tt>\\p{Graph}</tt></td>
    <td>A visible character: <tt>[^\\p{IsWhite_Space}\\p{gc=Cc}\\p{gc=Cs}\\p{gc=Cn}]</tt></td></tr>
<tr><td><tt>\\p{Print}</tt></td>
    <td>A printable character: {@code [\\p{Graph}\\p{Blank}&&[^\\p{Cntrl}]]}</td></tr>
<tr><td><tt>\\p{Blank}</tt></td>
    <td>A space or a tab: {@code [\\p{IsWhite_Space}&&[^\\p{gc=Zl}\\p{gc=Zp}\\x0a\\x0b\\x0c\\x0d\\x85]]}</td></tr>
<tr><td><tt>\\p{Cntrl}</tt></td>
    <td>A control character: <tt>\\p{gc=Cc}</tt></td></tr>
<tr><td><tt>\\p{XDigit}</tt></td>
    <td>A hexadecimal digit: <tt>[\\p{gc=Nd}\\p{IsHex_Digit}]</tt></td></tr>
<tr><td><tt>\\p{Space}</tt></td>
    <td>A whitespace character:<tt>\\p{IsWhite_Space}</tt></td></tr>
<tr><td><tt>\\d</tt></td>
    <td>A digit: <tt>\\p{IsDigit}</tt></td></tr>
<tr><td><tt>\\D</tt></td>
    <td>A non-digit: <tt>[^\\d]</tt></td></tr>
<tr><td><tt>\\s</tt></td>
    <td>A whitespace character: <tt>\\p{IsWhite_Space}</tt></td></tr>
<tr><td><tt>\\S</tt></td>
    <td>A non-whitespace character: <tt>[^\\s]</tt></td></tr>
<tr><td><tt>\\w</tt></td>
    <td>A word character: <tt>[\\p{Alpha}\\p{gc=Mn}\\p{gc=Me}\\p{gc=Mc}\\p{Digit}\\p{gc=Pc}\\p{IsJoin_Control}]</tt></td></tr>
<tr><td><tt>\\W</tt></td>
    <td>A non-word character: <tt>[^\\w]</tt></td></tr>
</table>
<p>
<a name=\"jcc\">
Categories that behave like the java.lang.Character
boolean is<i>methodname</i> methods (except for the deprecated ones) are
available through the same <tt>\\p{</tt><i>prop</i><tt>}</tt> syntax where
the specified property has the name <tt>java<i>methodname</i></tt></a>.

<h3> Comparison to Perl 5 </h3>

<p>The <code>Pattern</code> engine performs traditional NFA-based matching
with ordered alternation as occurs in Perl 5.

<p> Perl constructs not supported by this class: </p>

<ul>
   <li><p> Predefined character classes (Unicode character)
   <p><tt>\\X&nbsp;&nbsp;&nbsp;&nbsp;</tt>Match Unicode
   <a href=\"http://www.unicode.org/reports/tr18/#Default_Grapheme_Clusters\">
   <i>extended grapheme cluster</i></a>
   </p></li>

   <li><p> The backreference constructs, <tt>\\g{</tt><i>n</i><tt>}</tt> for
   the <i>n</i><sup>th</sup><a href=\"#cg\">capturing group</a> and
   <tt>\\g{</tt><i>name</i><tt>}</tt> for
   <a href=\"#groupname\">named-capturing group</a>.
   </p></li>

   <li><p> The named character construct, <tt>\\N{</tt><i>name</i><tt>}</tt>
   for a Unicode character by its name.
   </p></li>

   <li><p> The conditional constructs
   <tt>(?(</tt><i>condition</i><tt>)</tt><i>X</i><tt>)</tt> and
   <tt>(?(</tt><i>condition</i><tt>)</tt><i>X</i><tt>|</tt><i>Y</i><tt>)</tt>,
   </p></li>

   <li><p> The embedded code constructs <tt>(?{</tt><i>code</i><tt>})</tt>
   and <tt>(??{</tt><i>code</i><tt>})</tt>,</p></li>

   <li><p> The embedded comment syntax <tt>(?#comment)</tt>, and </p></li>

   <li><p> The preprocessing operations <tt>\\l</tt> <tt>&#92;u</tt>,
   <tt>\\L</tt>, and <tt>\\U</tt>.  </p></li>

</ul>

<p> Constructs supported by this class but not by Perl: </p>

<ul>

   <li><p> Character-class union and intersection as described
   <a href=\"#cc\">above</a>.</p></li>

</ul>

<p> Notable differences from Perl: </p>

<ul>

   <li><p> In Perl, <tt>\\1</tt> through <tt>\\9</tt> are always interpreted
   as back references; a backslash-escaped number greater than <tt>9</tt> is
   treated as a back reference if at least that many subexpressions exist,
   otherwise it is interpreted, if possible, as an octal escape.  In this
   class octal escapes must always begin with a zero. In this class,
   <tt>\\1</tt> through <tt>\\9</tt> are always interpreted as back
   references, and a larger number is accepted as a back reference if at
   least that many subexpressions exist at that point in the regular
   expression, otherwise the parser will drop digits until the number is
   smaller or equal to the existing number of groups or it is one digit.
   </p></li>

   <li><p> Perl uses the <tt>g</tt> flag to request a match that resumes
   where the last match left off.  This functionality is provided implicitly
   by the {@link Matcher} class: Repeated invocations of the {@link
   Matcher#find find} method will resume where the last match left off,
   unless the matcher is reset.  </p></li>

   <li><p> In Perl, embedded flags at the top level of an expression affect
   the whole expression.  In this class, embedded flags always take effect
   at the point at which they appear, whether they are at the top level or
   within a group; in the latter case, flags are restored at the end of the
   group just as in Perl.  </p></li>

</ul>


<p> For a more precise description of the behavior of regular expression
constructs, please see <a href=\"http://www.oreilly.com/catalog/regex3/\">
<i>Mastering Regular Expressions, 3nd Edition</i>, Jeffrey E. F. Friedl,
O'Reilly and Associates, 2006.</a>
</p>

@see java.lang.String#split(String, int)
@see java.lang.String#split(String)

@author      Mike McCloskey
@author      Mark Reinhold
@author      JSR-51 Expert Group
@since       1.4
@spec        JSR-51
"
      classrelation 3694466 // <realization>
	relation 3694466 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3694466 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2201986 "UNIX_LINES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Regular expression modifier values.  Instead of being passed as
arguments, they can also be passed as inline modifiers.
For example, the following statements have the same effect.
<pre>
RegExp r1 = RegExp.compile(\"abc\", Pattern.I|Pattern.M);
RegExp r2 = RegExp.compile(\"(?im)abc\", 0);
</pre>

The flags are duplicated so that the familiar Perl match flag
names are available.


Enables Unix lines mode.

<p> In this mode, only the <tt>'\\n'</tt> line terminator is recognized
in the behavior of <tt>.</tt>, <tt>^</tt>, and <tt>$</tt>.

<p> Unix lines mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?d)</tt>.

"
      end

      attribute 2202114 "CASE_INSENSITIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables case-insensitive matching.

<p> By default, case-insensitive matching assumes that only characters
in the US-ASCII charset are being matched.  Unicode-aware
case-insensitive matching can be enabled by specifying the {@link
#UNICODE_CASE} flag in conjunction with this flag.

<p> Case-insensitive matching can also be enabled via the embedded flag
expression&nbsp;<tt>(?i)</tt>.

<p> Specifying this flag may impose a slight performance penalty.  </p>

"
      end

      attribute 2202242 "COMMENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Permits whitespace and comments in pattern.

<p> In this mode, whitespace is ignored, and embedded comments starting
with <tt>#</tt> are ignored until the end of a line.

<p> Comments mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?x)</tt>.

"
      end

      attribute 2202370 "MULTILINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables multiline mode.

<p> In multiline mode the expressions <tt>^</tt> and <tt>$</tt> match
just after or just before, respectively, a line terminator or the end of
the input sequence.  By default these expressions only match at the
beginning and the end of the entire input sequence.

<p> Multiline mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?m)</tt>.  </p>

"
      end

      attribute 2202498 "LITERAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables literal parsing of the pattern.

<p> When this flag is specified then the input string that specifies
the pattern is treated as a sequence of literal characters.
Metacharacters or escape sequences in the input sequence will be
given no special meaning.

<p>The flags CASE_INSENSITIVE and UNICODE_CASE retain their impact on
matching when used in conjunction with this flag. The other flags
become superfluous.

<p> There is no embedded flag character for enabling literal parsing.
@since 1.5

"
      end

      attribute 2202626 "DOTALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables dotall mode.

<p> In dotall mode, the expression <tt>.</tt> matches any character,
including a line terminator.  By default this expression does not match
line terminators.

<p> Dotall mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?s)</tt>.  (The <tt>s</tt> is a mnemonic for
\"single-line\" mode, which is what this is called in Perl.)  </p>

"
      end

      attribute 2202754 "UNICODE_CASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables Unicode-aware case folding.

<p> When this flag is specified then case-insensitive matching, when
enabled by the {@link #CASE_INSENSITIVE} flag, is done in a manner
consistent with the Unicode Standard.  By default, case-insensitive
matching assumes that only characters in the US-ASCII charset are being
matched.

<p> Unicode-aware case folding can also be enabled via the embedded flag
expression&nbsp;<tt>(?u)</tt>.

<p> Specifying this flag may impose a performance penalty.  </p>

"
      end

      attribute 2202882 "CANON_EQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables canonical equivalence.

<p> When this flag is specified then two characters will be considered
to match if, and only if, their full canonical decompositions match.
The expression <tt>\"a&#92;u030A\"</tt>, for example, will match the
string <tt>\"&#92;u00E5\"</tt> when this flag is specified.  By default,
matching does not take canonical equivalence into account.

<p> There is no embedded flag character for enabling canonical
equivalence.

<p> Specifying this flag may impose a performance penalty.  </p>

"
      end

      attribute 2203010 "UNICODE_CHARACTER_CLASS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enables the Unicode version of <i>Predefined character classes</i> and
<i>POSIX character classes</i>.

<p> When this flag is specified then the (US-ASCII only)
<i>Predefined character classes</i> and <i>POSIX character classes</i>
are in conformance with
<a href=\"http://www.unicode.org/reports/tr18/\"><i>Unicode Technical
Standard #18: Unicode Regular Expression</i></a>
<i>Annex C: Compatibility Properties</i>.
<p>
The UNICODE_CHARACTER_CLASS mode can also be enabled via the embedded
flag expression&nbsp;<tt>(?U)</tt>.
<p>
The flag implies UNICODE_CASE, that is, it enables Unicode-aware case
folding.
<p>
Specifying this flag may impose a performance penalty.  </p>
@since 1.7

"
      end

      attribute 2203138 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5073258162644648461L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Pattern has only two serialized components: The pattern string
and the flags, which are all that is needed to recompile the pattern
when it is deserialized.

 use serialVersionUID from Merlin b59 for interoperability 
"
      end

      classrelation 3694594 // pattern (<unidirectional association>)
	relation 3694594 --->
	  a role_name "pattern" private
	    comment "
The original regular-expression pattern string.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3694594 // pattern (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2203266 "flags"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The original pattern flags.

@serial

"
      end

      attribute 2203394 "compiled"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Boolean indicating this Pattern is compiled; this is necessary in order
to lazily compile deserialized Patterns.

"
      end

      classrelation 3694722 // normalizedPattern (<unidirectional association>)
	relation 3694722 --->
	  a role_name "normalizedPattern" private
	    comment "
The normalized pattern string.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3694722 // normalizedPattern (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 1144834 "Node"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3695490 // <generalisation>
	  relation 3695490 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3695490 // <generalisation>
	    b parent class_ref 129538 // Object
	end

	classrelation 3695618 // next (<unidirectional association>)
	  relation 3695618 --->
	    a role_name "next" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3695618 // next (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	operation 9453442 "Node"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9453570 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method implements the classic accept node.
"
	end

	operation 9453698 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method is good for all zero length assertions.
"
	end
      end

      classrelation 3694850 // root (<unidirectional association>)
	relation 3694850 --->
	  a role_name "root" package
	    comment "
The starting point of state machine for the find operation.  This allows
a match to start anywhere in the input.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3694850 // root (<unidirectional association>)
	  b parent class_ref 1144834 // Node
      end

      classrelation 3694978 // matchRoot (<unidirectional association>)
	relation 3694978 --->
	  a role_name "matchRoot" package
	    comment "
The root of object tree for a match operation.  The pattern is matched
at the beginning.  This may include a find that uses BnM or a First
node.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3694978 // matchRoot (<unidirectional association>)
	  b parent class_ref 1144834 // Node
      end

      attribute 2203522 "buffer"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary storage used by parsing pattern slice.

"
      end

      classrelation 3695106 // namedGroups (<unidirectional association>)
	relation 3695106 --->
	  a role_name "namedGroups" volatile package
	    comment "
Map the \"name\" of the \"named capturing group\" to its group id
node.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 3695106 // namedGroups (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      class 1144962 "GroupHead"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3701762 // <generalisation>
	  relation 3701762 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3701762 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2208514 "localIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9464962 "GroupHead"
	  package explicit_return_type ""
	  nparams 1
	    param in name "localCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9465090 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9465218 "matchRef"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3695234 // groupNodes (<unidirectional association>)
	relation 3695234 --->
	  a role_name "groupNodes" multiplicity "[]" package
	    comment "
Temporary storage used while parsing group references.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3695234 // groupNodes (<unidirectional association>)
	  b parent class_ref 1144962 // GroupHead
      end

      attribute 2203650 "temp"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary null terminated code point array used by pattern compiling.

"
      end

      attribute 2203778 "capturingGroupCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of capturing groups in this Pattern. Used by matchers to
allocate storage needed to perform a match.

"
      end

      attribute 2203906 "localCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The local variable count used by parsing tree. Used by matchers to
allocate storage needed to perform a match.

"
      end

      attribute 2204034 "cursor"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Index into the pattern string that keeps track of how much has been
parsed.

"
      end

      attribute 2204162 "patternLength"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Holds the length of the pattern string.

"
      end

      attribute 2204290 "hasSupplementary"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the Start node might possibly match supplementary characters.
It is set to true during compiling if
(1) There is supplementary char in pattern, or
(2) There is complement node of Category or Block

"
      end

      operation 9443714 "compile"
	class_operation public return_type class_ref 417154 // Pattern
	nparams 1
	  param inout name "regex" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the given regular expression into a pattern.

@param  regex
        The expression to be compiled
@return the given regular expression compiled into a pattern
@throws  PatternSyntaxException
         If the expression's syntax is invalid
"
      end

      operation 9443842 "compile"
	class_operation public return_type class_ref 417154 // Pattern
	nparams 2
	  param inout name "regex" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the given regular expression into a pattern with the given
flags.

@param  regex
        The expression to be compiled

@param  flags
        Match flags, a bit mask that may include
        {@link #CASE_INSENSITIVE}, {@link #MULTILINE}, {@link #DOTALL},
        {@link #UNICODE_CASE}, {@link #CANON_EQ}, {@link #UNIX_LINES},
        {@link #LITERAL}, {@link #UNICODE_CHARACTER_CLASS}
        and {@link #COMMENTS}

@return the given regular expression compiled into a pattern with the given flags
@throws  IllegalArgumentException
         If bit values other than those corresponding to the defined
         match flags are set in <tt>flags</tt>

@throws  PatternSyntaxException
         If the expression's syntax is invalid
"
      end

      operation 9443970 "pattern"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the regular expression from which this pattern was compiled.

@return  The source of this pattern
"
      end

      operation 9444098 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the string representation of this pattern. This
is the regular expression from which this pattern was
compiled.</p>

@return  The string representation of this pattern
@since 1.5
"
      end

      operation 9444226 "matcher"
	public return_type class_ref 834690 // Matcher
	nparams 1
	  param inout name "input" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a matcher that will match the given input against this pattern.

@param  input
        The character sequence to be matched

@return  A new matcher for this pattern
"
      end

      operation 9444354 "flags"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this pattern's match flags.

@return  The match flags specified when this pattern was compiled
"
      end

      operation 9444482 "matches"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "regex" type class_ref 128130 // String
	  param inout name "input" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the given regular expression and attempts to match the given
input against it.

<p> An invocation of this convenience method of the form

<blockquote><pre>
Pattern.matches(regex, input);</pre></blockquote>

behaves in exactly the same way as the expression

<blockquote><pre>
Pattern.compile(regex).matcher(input).matches()</pre></blockquote>

<p> If a pattern is to be used multiple times, compiling it once and reusing
it will be more efficient than invoking this method each time.  </p>

@param  regex
        The expression to be compiled

@param  input
        The character sequence to be matched
@return whether or not the regular expression matches on the input
@throws  PatternSyntaxException
         If the expression's syntax is invalid
"
      end

      operation 9444610 "split"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "input" type class_ref 429442 // CharSequence
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits the given input sequence around matches of this pattern.

<p> The array returned by this method contains each substring of the
input sequence that is terminated by another subsequence that matches
this pattern or is terminated by the end of the input sequence.  The
substrings in the array are in the order in which they occur in the
input. If this pattern does not match any subsequence of the input then
the resulting array has just one element, namely the input sequence in
string form.

<p> When there is a positive-width match at the beginning of the input
sequence then an empty leading substring is included at the beginning
of the resulting array. A zero-width match at the beginning however
never produces such empty leading substring.

<p> The <tt>limit</tt> parameter controls the number of times the
pattern is applied and therefore affects the length of the resulting
array.  If the limit <i>n</i> is greater than zero then the pattern
will be applied at most <i>n</i>&nbsp;-&nbsp;1 times, the array's
length will be no greater than <i>n</i>, and the array's last entry
will contain all input beyond the last matched delimiter.  If <i>n</i>
is non-positive then the pattern will be applied as many times as
possible and the array can have any length.  If <i>n</i> is zero then
the pattern will be applied as many times as possible, the array can
have any length, and trailing empty strings will be discarded.

<p> The input <tt>\"boo:and:foo\"</tt>, for example, yields the following
results with these parameters:

<blockquote><table cellpadding=1 cellspacing=0
             summary=\"Split examples showing regex, limit, and result\">
<tr><th align=\"left\"><i>Regex&nbsp;&nbsp;&nbsp;&nbsp;</i></th>
    <th align=\"left\"><i>Limit&nbsp;&nbsp;&nbsp;&nbsp;</i></th>
    <th align=\"left\"><i>Result&nbsp;&nbsp;&nbsp;&nbsp;</i></th></tr>
<tr><td align=center>:</td>
    <td align=center>2</td>
    <td><tt>{ \"boo\", \"and:foo\" }</tt></td></tr>
<tr><td align=center>:</td>
    <td align=center>5</td>
    <td><tt>{ \"boo\", \"and\", \"foo\" }</tt></td></tr>
<tr><td align=center>:</td>
    <td align=center>-2</td>
    <td><tt>{ \"boo\", \"and\", \"foo\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td align=center>5</td>
    <td><tt>{ \"b\", \"\", \":and:f\", \"\", \"\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td align=center>-2</td>
    <td><tt>{ \"b\", \"\", \":and:f\", \"\", \"\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td align=center>0</td>
    <td><tt>{ \"b\", \"\", \":and:f\" }</tt></td></tr>
</table></blockquote>

@param  input
        The character sequence to be split

@param  limit
        The result threshold, as described above

@return  The array of strings computed by splitting the input
         around matches of this pattern
"
      end

      operation 9444738 "split"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "input" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits the given input sequence around matches of this pattern.

<p> This method works as if by invoking the two-argument {@link
#split(java.lang.CharSequence, int) split} method with the given input
sequence and a limit argument of zero.  Trailing empty strings are
therefore not included in the resulting array. </p>

<p> The input <tt>\"boo:and:foo\"</tt>, for example, yields the following
results with these expressions:

<blockquote><table cellpadding=1 cellspacing=0
             summary=\"Split examples showing regex and result\">
<tr><th align=\"left\"><i>Regex&nbsp;&nbsp;&nbsp;&nbsp;</i></th>
    <th align=\"left\"><i>Result</i></th></tr>
<tr><td align=center>:</td>
    <td><tt>{ \"boo\", \"and\", \"foo\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td><tt>{ \"b\", \"\", \":and:f\" }</tt></td></tr>
</table></blockquote>


@param  input
        The character sequence to be split

@return  The array of strings computed by splitting the input
         around matches of this pattern
"
      end

      operation 9444866 "quote"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a literal pattern <code>String</code> for the specified
<code>String</code>.

<p>This method produces a <code>String</code> that can be used to
create a <code>Pattern</code> that would match the string
<code>s</code> as if it were a literal pattern.</p> Metacharacters
or escape sequences in the input sequence will be given no special
meaning.

@param  s The string to be literalized
@return  A literal string replacement
@since 1.5
"
      end

      operation 9444994 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recompile the Pattern instance from a stream.  The original pattern
string is read in and the object tree is recompiled from it.
"
      end

      operation 9445122 "Pattern"
	private explicit_return_type ""
	nparams 2
	  param inout name "p" type class_ref 128130 // String
	  param in name "f" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This private constructor is used to create all Patterns. The pattern
string and match flags are all that is needed to completely describe
a Pattern. An empty pattern string results in an object tree with
only a Start node and a LastNode node.
"
      end

      operation 9445250 "normalize"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The pattern is converted to normalizedD form and then a pure group
is constructed to match canonical equivalences of the characters.
"
      end

      operation 9445378 "normalizeCharClass"
	private explicit_return_type "int"
	nparams 2
	  param inout name "newPattern" type class_ref 173058 // StringBuilder
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Complete the character class being parsed and add a set
of alternations to it that will match the canonical equivalences
of the characters within the class.
"
      end

      operation 9445506 "produceEquivalentAlternation"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "source" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a specific sequence composed of a regular character and
combining marks that follow it, produce the alternation that will
match all canonical equivalences of that sequence.
"
      end

      operation 9445634 "producePermutations"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "input" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings that have all the possible
permutations of the characters in the input string.
This is used to get a list of all possible orderings
of a set of combining marks. Note that some of the permutations
are invalid because of combining class collisions, and these
possibilities must be removed because they are not canonically
equivalent.
"
      end

      operation 9445762 "getClass"
	private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9445890 "composeOneStep"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "input" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to compose input by combining the first character
with the first combining mark following it. Returns a String
that is the composition of the leading character with its first
combining mark followed by the remaining combining marks. Returns
null if the first two characters cannot be further composed.
"
      end

      operation 9446018 "RemoveQEQuoting"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Preprocess any \\Q...\\E sequences in `temp', meta-quoting them.
See the description of `quotemeta' in perlfunc(1).
"
      end

      operation 9446146 "compile"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies regular expression to an int array and invokes the parsing
of the expression which will create the object tree.
"
      end

      operation 9446274 "namedGroups"
	package return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9446402 "printObjectTree"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 1144834 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to print out a subtree of the Pattern to help with debugging.
"
      end

      class 1145090 "TreeInfo"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2204418 "minLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2204546 "maxLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2204674 "maxValid"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2204802 "deterministic"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9446530 "TreeInfo"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9446658 "reset"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9446786 "has"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "f" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The following private methods are mainly used to improve the
readability of the code. In order to let the Java compiler easily
inline them, we should not put many assertions or error checks in them.


Indicates whether a particular flag is set or not.
"
      end

      operation 9446914 "accept"
	private explicit_return_type "void"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match next character, signal error if failed.
"
      end

      operation 9447042 "mark"
	private explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the end of pattern with a specific character.
"
      end

      operation 9447170 "peek"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peek the next character, and do not advance the cursor.
"
      end

      operation 9447298 "read"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the next character, and advance the cursor by one.
"
      end

      operation 9447426 "readEscaped"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the next character, and advance the cursor by one,
ignoring the COMMENTS setting
"
      end

      operation 9447554 "next"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Advance the cursor by one, and peek the next character.
"
      end

      operation 9447682 "nextEscaped"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Advance the cursor by one, and peek the next character,
ignoring the COMMENTS setting
"
      end

      operation 9447810 "peekPastWhitespace"
	private explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If in xmode peek past whitespace and comments.
"
      end

      operation 9447938 "parsePastWhitespace"
	private explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If in xmode parse past whitespace and comments.
"
      end

      operation 9448066 "parsePastLine"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "xmode parse past comment to end of line.
"
      end

      operation 9448194 "peekPastLine"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "xmode peek past comment to end of line.
"
      end

      operation 9448322 "isLineSeparator"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if character is a line separator in the current mode
"
      end

      operation 9448450 "skip"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the character after the next one, and advance the cursor by two.
"
      end

      operation 9448578 "unread"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unread one next character, and retreat cursor by one.
"
      end

      operation 9448706 "error"
	private return_type class_ref 1145218 // PatternSyntaxException
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal method used for handling all syntax errors. The pattern is
displayed with a pointer to aid in locating the syntax error.
"
      end

      operation 9448834 "findSupplementary"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if there is any supplementary character or unpaired
surrogate in the specified range.
"
      end

      operation 9448962 "isSupplementary"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified code point is a supplementary
character or unpaired surrogate.
"
      end

      operation 9449090 "expr"
	private return_type class_ref 1144834 // Node
	nparams 1
	  param inout name "end" type class_ref 1144834 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The following methods handle the main parsing. They are sorted
 according to their precedence order, the lowest one first.


The expression is parsed with branch nodes added for alternations.
This may be called recursively to parse sub expressions that may
contain alternations.
"
      end

      operation 9449218 "sequence"
	private return_type class_ref 1144834 // Node
	nparams 1
	  param inout name "end" type class_ref 1144834 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
      end

      operation 9449346 "atom"
	private return_type class_ref 1144834 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
      end

      operation 9449474 "append"
	private explicit_return_type "void"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9449602 "ref"
	private return_type class_ref 1144834 // Node
	nparams 1
	  param in name "refNum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a backref greedily, taking as many numbers as it
can. The first digit is always treated as a backref, but
multi digit numbers are only treated as a backref if at
least that many backrefs exist at this point in the regex.
"
      end

      operation 9449730 "escape"
	private explicit_return_type "int"
	nparams 3
	  param inout name "inclass" explicit_type "boolean"
	  param inout name "create" explicit_type "boolean"
	  param inout name "isrange" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an escape sequence to determine the actual value that needs
to be matched.
If -1 is returned and create was true a new object was added to the tree
to handle the escape sequence.
If the returned value is greater than zero, it is the value that
matches the escape sequence.
"
      end

      class 1145346 "CharProperty"
	abstract visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697154 // <generalisation>
	  relation 3697154 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697154 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9456258 "isSatisfiedBy"
	  abstract package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9456386 "complement"
	  package return_type class_ref 1145346 // CharProperty
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9456514 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9456642 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9449858 "clazz"
	private return_type class_ref 1145346 // CharProperty
	nparams 1
	  param inout name "consume" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a character class, and return the node that matches it.

Consumes a ] on the way out if consume is true. Usually consume
is true except for the case of [abc&&def] where def is a separate
right hand node with \"understood\" brackets.
"
      end

      operation 9449986 "bitsOrSingle"
	private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param inout name "bits" type class_ref 1145474 // BitClass
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1145474 "BitClass"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3695362 // <generalisation>
	  relation 3695362 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3695362 // <generalisation>
	    b parent class_ref 1145602 // BmpCharProperty
	end

	attribute 2205570 "bits"
	  const_attribute package explicit_type "boolean"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9452674 "BitClass"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9452802 "BitClass"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "bits" explicit_type "boolean"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9452930 "add"
	  package return_type class_ref 1145474 // BitClass
	  nparams 2
	    param in name "c" explicit_type "int"
	    param in name "flags" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9453058 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9450114 "range"
	private return_type class_ref 1145346 // CharProperty
	nparams 1
	  param inout name "bits" type class_ref 1145474 // BitClass
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a single character or a character range in a character class
and return its representative node.
"
      end

      operation 9450242 "family"
	private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param inout name "singleLetter" explicit_type "boolean"
	  param inout name "maybeComplement" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a Unicode character family and returns its representative node.
"
      end

      operation 9450370 "unicodeScriptPropertyFor"
	private return_type class_ref 1145346 // CharProperty
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a CharProperty matching all characters belong to
a UnicodeScript.
"
      end

      operation 9450498 "unicodeBlockPropertyFor"
	private return_type class_ref 1145346 // CharProperty
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a CharProperty matching all characters in a UnicodeBlock.
"
      end

      operation 9450626 "charPropertyNodeFor"
	private return_type class_ref 1145346 // CharProperty
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a CharProperty matching all characters in a named property.
"
      end

      operation 9450754 "groupname"
	private return_type class_ref 128130 // String
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses and returns the name of a \"named capturing group\", the trailing
\">\" is consumed after parsing.
"
      end

      operation 9450882 "group0"
	private return_type class_ref 1144834 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a group and returns the head node of a set of nodes that process
the group. Sometimes a double return system is used where the tail is
returned in root.
"
      end

      operation 9451010 "createGroup"
	private return_type class_ref 1144834 // Node
	nparams 1
	  param inout name "anonymous" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create group head and tail nodes using double return. If the group is
created with anonymous true then it is a pure group and should not
affect group counting.
"
      end

      operation 9451138 "addFlag"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
      end

      operation 9451266 "subFlag"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
      end

      attribute 2204930 "MAX_REPS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x7FFFFFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2205058 "GREEDY"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2205186 "LAZY"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2205314 "POSSESSIVE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2205442 "INDEPENDENT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9451394 "closure"
	private return_type class_ref 1144834 // Node
	nparams 1
	  param inout name "prev" type class_ref 1144834 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes repetition. If the next character peeked is a quantifier
then new nodes must be appended to handle the repetition.
Prev could be a single or a group, so it could be a chain of nodes.
"
      end

      operation 9451522 "c"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing control escape sequences.
"
      end

      operation 9451650 "o"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing octal escape sequences.
"
      end

      operation 9451778 "x"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing hexadecimal escape sequences.
"
      end

      operation 9451906 "cursor"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing unicode escape sequences.
"
      end

      operation 9452034 "setcursor"
	private explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9452162 "uxxxx"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9452290 "u"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9452418 "countChars"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "seq" type class_ref 429442 // CharSequence
	  param in name "index" explicit_type "int"
	  param in name "lengthInCodePoints" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility methods for code point support
"
      end

      operation 9452546 "countCodePoints"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "seq" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1145602 "BmpCharProperty"
	abstract visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697282 // <generalisation>
	  relation 3697282 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697282 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	operation 9456770 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9453186 "newSingle"
	private return_type class_ref 1145346 // CharProperty
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a suitably optimized, single character matcher.
"
      end

      operation 9453314 "newSlice"
	private return_type class_ref 1144834 // Node
	nparams 3
	  param inout name "buf" explicit_type "int"
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	  param inout name "hasSupplementary" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for creating a string slice matcher.
"
      end

      class 1145730 "LastNode"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3695746 // <generalisation>
	  relation 3695746 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3695746 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9453826 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method implements the classic accept node with
the addition of a check to see if the match occurred
using all of the input.
"
	end
      end

      class 1145858 "Start"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3695874 // <generalisation>
	  relation 3695874 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3695874 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2205698 "minLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9453954 "Start"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "node" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9454082 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9454210 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1145986 "StartS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696002 // <generalisation>
	  relation 3696002 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696002 // <generalisation>
	    b parent class_ref 1145858 // Start
	end

	operation 9454338 "StartS"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "node" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9454466 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146114 "Begin"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696130 // <generalisation>
	  relation 3696130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696130 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9454594 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146242 "End"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696258 // <generalisation>
	  relation 3696258 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696258 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9454722 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146370 "Caret"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696386 // <generalisation>
	  relation 3696386 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696386 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9454850 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146498 "UnixCaret"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696514 // <generalisation>
	  relation 3696514 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696514 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9454978 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146626 "LastMatch"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696642 // <generalisation>
	  relation 3696642 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696642 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9455106 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146754 "Dollar"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696770 // <generalisation>
	  relation 3696770 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696770 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2205826 "multiline"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9455234 "Dollar"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "mul" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9455362 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9455490 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1146882 "UnixDollar"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3696898 // <generalisation>
	  relation 3696898 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3696898 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2205954 "multiline"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9455618 "UnixDollar"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "mul" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9455746 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9455874 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147010 "LineEnding"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697026 // <generalisation>
	  relation 3697026 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697026 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9456002 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9456130 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147138 "SingleS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697410 // <generalisation>
	  relation 3697410 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697410 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	attribute 2206082 "c"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9456898 "SingleS"
	  package explicit_return_type ""
	  nparams 1
	    param in name "c" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9457026 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147266 "Single"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697538 // <generalisation>
	  relation 3697538 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697538 // <generalisation>
	    b parent class_ref 1145602 // BmpCharProperty
	end

	attribute 2206210 "c"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9457154 "Single"
	  package explicit_return_type ""
	  nparams 1
	    param in name "c" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9457282 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147394 "SingleI"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697666 // <generalisation>
	  relation 3697666 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697666 // <generalisation>
	    b parent class_ref 1145602 // BmpCharProperty
	end

	attribute 2206338 "lower"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2206466 "upper"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9457410 "SingleI"
	  package explicit_return_type ""
	  nparams 2
	    param in name "lower" explicit_type "int"
	    param in name "upper" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9457538 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147522 "SingleU"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697794 // <generalisation>
	  relation 3697794 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697794 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	attribute 2206594 "lower"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9457666 "SingleU"
	  package explicit_return_type ""
	  nparams 1
	    param in name "lower" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9457794 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147650 "Block"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3697922 // <generalisation>
	  relation 3697922 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3697922 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	classrelation 3698050 // block (<unidirectional association>)
	  relation 3698050 --->
	    a role_name "block" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3698050 // block (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	operation 9457922 "Block"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "block" type class_ref 895362 // UnicodeBlock
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9458050 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147778 "Script"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3698178 // <generalisation>
	  relation 3698178 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3698178 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	classrelation 3698306 // script (<unidirectional association>)
	  relation 3698306 --->
	    a role_name "script" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3698306 // script (<unidirectional association>)
	    b parent class_ref 895490 // UnicodeScript
	end

	operation 9458178 "Script"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "script" type class_ref 895490 // UnicodeScript
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9458306 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1147906 "Category"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3698434 // <generalisation>
	  relation 3698434 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3698434 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	attribute 2206722 "typeMask"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9458434 "Category"
	  package explicit_return_type ""
	  nparams 1
	    param in name "typeMask" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9458562 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148034 "Utype"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3698562 // <generalisation>
	  relation 3698562 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3698562 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	classrelation 3698690 // uprop (<unidirectional association>)
	  relation 3698690 --->
	    a role_name "uprop" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3698690 // uprop (<unidirectional association>)
	    b parent class_ref 1148162 // UnicodeProp
	end

	operation 9458690 "Utype"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "uprop" type class_ref 1148162 // UnicodeProp
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9458818 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148290 "Ctype"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3698818 // <generalisation>
	  relation 3698818 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3698818 // <generalisation>
	    b parent class_ref 1145602 // BmpCharProperty
	end

	attribute 2206850 "ctype"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9458946 "Ctype"
	  package explicit_return_type ""
	  nparams 1
	    param in name "ctype" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9459074 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148418 "VertWS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3698946 // <generalisation>
	  relation 3698946 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3698946 // <generalisation>
	    b parent class_ref 1145602 // BmpCharProperty
	end

	operation 9459202 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "cp" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148546 "HorizWS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699074 // <generalisation>
	  relation 3699074 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699074 // <generalisation>
	    b parent class_ref 1145602 // BmpCharProperty
	end

	operation 9459330 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "cp" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148674 "SliceNode"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699202 // <generalisation>
	  relation 3699202 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699202 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2206978 "buffer"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9459458 "SliceNode"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9459586 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148802 "Slice"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699330 // <generalisation>
	  relation 3699330 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699330 // <generalisation>
	    b parent class_ref 1148674 // SliceNode
	end

	operation 9459714 "Slice"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9459842 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1148930 "SliceI"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699458 // <generalisation>
	  relation 3699458 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699458 // <generalisation>
	    b parent class_ref 1148674 // SliceNode
	end

	operation 9459970 "SliceI"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9460098 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149058 "SliceU"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699586 // <generalisation>
	  relation 3699586 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699586 // <generalisation>
	    b parent class_ref 1148674 // SliceNode
	end

	operation 9460226 "SliceU"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9460354 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149186 "SliceS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699714 // <generalisation>
	  relation 3699714 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699714 // <generalisation>
	    b parent class_ref 1148674 // SliceNode
	end

	operation 9460482 "SliceS"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9460610 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149314 "SliceIS"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699842 // <generalisation>
	  relation 3699842 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699842 // <generalisation>
	    b parent class_ref 1148674 // SliceNode
	end

	operation 9460738 "SliceIS"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9460866 "toLower"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "c" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9460994 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149442 "SliceUS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3699970 // <generalisation>
	  relation 3699970 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3699970 // <generalisation>
	    b parent class_ref 1149314 // SliceIS
	end

	operation 9461122 "SliceUS"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "buf" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9461250 "toLower"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "c" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9461378 "inRange"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param in name "lower" explicit_type "int"
	  param in name "ch" explicit_type "int"
	  param in name "upper" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9461506 "rangeFor"
	class_operation private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param in name "lower" explicit_type "int"
	  param in name "upper" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns node for matching characters within an explicit value range.
"
      end

      operation 9461634 "caseInsensitiveRangeFor"
	private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param in name "lower" explicit_type "int"
	  param in name "upper" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns node for matching characters within an explicit value
range in a case insensitive manner.
"
      end

      class 1149570 "All"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3700098 // <generalisation>
	  relation 3700098 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3700098 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	operation 9461762 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149698 "Dot"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3700226 // <generalisation>
	  relation 3700226 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3700226 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	operation 9461890 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149826 "UnixDot"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3700354 // <generalisation>
	  relation 3700354 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3700354 // <generalisation>
	    b parent class_ref 1145346 // CharProperty
	end

	operation 9462018 "isSatisfiedBy"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1149954 "Ques"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3700482 // <generalisation>
	  relation 3700482 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3700482 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3700610 // atom (<unidirectional association>)
	  relation 3700610 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3700610 // atom (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2207106 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9462146 "Ques"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "node" type class_ref 1144834 // Node
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9462274 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9462402 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150082 "Curly"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3700738 // <generalisation>
	  relation 3700738 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3700738 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3700866 // atom (<unidirectional association>)
	  relation 3700866 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3700866 // atom (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2207234 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2207362 "cmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2207490 "cmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9462530 "Curly"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "node" type class_ref 1144834 // Node
	    param in name "cmin" explicit_type "int"
	    param in name "cmax" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9462658 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9462786 "match0"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Greedy match.
 i is the index to start matching at
 j is the number of atoms that have matched"
	end

	operation 9462914 "match1"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Reluctant match. At this point, the minimum has been satisfied.
 i is the index to start matching at
 j is the number of atoms that have matched"
	end

	operation 9463042 "match2"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9463170 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150210 "GroupCurly"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3700994 // <generalisation>
	  relation 3700994 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3700994 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3701122 // atom (<unidirectional association>)
	  relation 3701122 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3701122 // atom (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2207618 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2207746 "cmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2207874 "cmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2208002 "localIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2208130 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2208258 "capture"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9463298 "GroupCurly"
	  package explicit_return_type ""
	  nparams 7
	    param inout name "node" type class_ref 1144834 // Node
	    param in name "cmin" explicit_type "int"
	    param in name "cmax" explicit_type "int"
	    param in name "type" explicit_type "int"
	    param in name "local" explicit_type "int"
	    param in name "group" explicit_type "int"
	    param inout name "capture" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9463426 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9463554 "match0"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Aggressive group match"
	end

	operation 9463682 "match1"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Reluctant matching"
	end

	operation 9463810 "match2"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Possessive matching"
	end

	operation 9463938 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150338 "BranchConn"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3701250 // <generalisation>
	  relation 3701250 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3701250 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	operation 9464066 "BranchConn"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9464194 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9464322 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150466 "Branch"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3701378 // <generalisation>
	  relation 3701378 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3701378 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3701506 // atoms (<unidirectional association>)
	  relation 3701506 --->
	    a role_name "atoms" multiplicity "[]" init_value " new Node[2]" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3701506 // atoms (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2208386 "size"
	  package explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3701634 // conn (<unidirectional association>)
	  relation 3701634 --->
	    a role_name "conn" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3701634 // conn (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	operation 9464450 "Branch"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "first" type class_ref 1144834 // Node
	    param inout name "second" type class_ref 1144834 // Node
	    param inout name "branchConn" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9464578 "add"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "node" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9464706 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9464834 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150594 "GroupRef"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3701890 // <generalisation>
	  relation 3701890 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3701890 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3702018 // head (<unidirectional association>)
	  relation 3702018 --->
	    a role_name "head" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3702018 // head (<unidirectional association>)
	    b parent class_ref 1144962 // GroupHead
	end

	operation 9465346 "GroupRef"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "head" type class_ref 1144962 // GroupHead
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9465474 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9465602 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150722 "GroupTail"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3702146 // <generalisation>
	  relation 3702146 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3702146 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2208642 "localIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2208770 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9465730 "GroupTail"
	  package explicit_return_type ""
	  nparams 2
	    param in name "localCount" explicit_type "int"
	    param in name "groupCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9465858 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150850 "Prolog"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3702274 // <generalisation>
	  relation 3702274 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3702274 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3702402 // loop (<unidirectional association>)
	  relation 3702402 --->
	    a role_name "loop" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3702402 // loop (<unidirectional association>)
	    b parent class_ref 1150978 // Loop
	end

	operation 9465986 "Prolog"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "loop" type class_ref 1150978 // Loop
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9466114 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9466242 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1150978 "Loop"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3702530 // <generalisation>
	  relation 3702530 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3702530 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3702658 // body (<unidirectional association>)
	  relation 3702658 --->
	    a role_name "body" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3702658 // body (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2208898 "countIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " local count index in matcher locals"
	end

	attribute 2209026 "beginIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " group beginning index"
	end

	attribute 2209154 "cmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2209282 "cmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9466370 "Loop"
	  package explicit_return_type ""
	  nparams 2
	    param in name "countIndex" explicit_type "int"
	    param in name "beginIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9466498 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9466626 "matchInit"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9466754 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151106 "LazyLoop"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3702786 // <generalisation>
	  relation 3702786 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3702786 // <generalisation>
	    b parent class_ref 1150978 // Loop
	end

	operation 9466882 "LazyLoop"
	  package explicit_return_type ""
	  nparams 2
	    param in name "countIndex" explicit_type "int"
	    param in name "beginIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9467010 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9467138 "matchInit"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9467266 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151234 "BackRef"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3702914 // <generalisation>
	  relation 3702914 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3702914 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2209410 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9467394 "BackRef"
	  package explicit_return_type ""
	  nparams 1
	    param in name "groupCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9467522 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9467650 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151362 "CIBackRef"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3703042 // <generalisation>
	  relation 3703042 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3703042 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2209538 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2209666 "doUnicodeCase"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9467778 "CIBackRef"
	  package explicit_return_type ""
	  nparams 2
	    param in name "groupCount" explicit_type "int"
	    param inout name "doUnicodeCase" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9467906 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9468034 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151490 "First"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3703170 // <generalisation>
	  relation 3703170 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3703170 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3703298 // atom (<unidirectional association>)
	  relation 3703298 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3703298 // atom (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	operation 9468162 "First"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "node" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9468290 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9468418 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151618 "Conditional"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3703426 // <generalisation>
	  relation 3703426 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3703426 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3703554 // cond (<unidirectional association>)
	  relation 3703554 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3703554 // cond (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	classrelation 3703682 // yes (<unidirectional association>)
	  relation 3703682 --->
	    a role_name "yes" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3703682 // yes (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	classrelation 3703810 // not (<unidirectional association>)
	  relation 3703810 --->
	    a role_name "not" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3703810 // not (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	operation 9468546 "Conditional"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1144834 // Node
	    param inout name "yes" type class_ref 1144834 // Node
	    param inout name "not" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9468674 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9468802 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151746 "Pos"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3703938 // <generalisation>
	  relation 3703938 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3703938 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3704066 // cond (<unidirectional association>)
	  relation 3704066 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3704066 // cond (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	operation 9468930 "Pos"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "cond" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9469058 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1151874 "Neg"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3704194 // <generalisation>
	  relation 3704194 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3704194 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3704322 // cond (<unidirectional association>)
	  relation 3704322 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3704322 // cond (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	operation 9469186 "Neg"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "cond" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9469314 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3704450 // lookbehindEnd (<unidirectional association>)
	relation 3704450 --->
	  a role_name "lookbehindEnd" init_value " new Node() {
        boolean match(Matcher matcher, int i, CharSequence seq) {
            return i == matcher.lookbehindTo;
        }
    }" class_relation package
	    comment "
For use with lookbehinds; matches the position where the lookbehind
was encountered.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3704450 // lookbehindEnd (<unidirectional association>)
	  b parent class_ref 1144834 // Node
      end

      class 1152002 "Behind"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3704578 // <generalisation>
	  relation 3704578 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3704578 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3704706 // cond (<unidirectional association>)
	  relation 3704706 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3704706 // cond (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2209794 "rmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2209922 "rmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9469442 "Behind"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1144834 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9469570 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1152130 "BehindS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3704834 // <generalisation>
	  relation 3704834 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3704834 // <generalisation>
	    b parent class_ref 1152002 // Behind
	end

	operation 9469698 "BehindS"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1144834 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9469826 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1152258 "NotBehind"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3704962 // <generalisation>
	  relation 3704962 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3704962 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	classrelation 3705090 // cond (<unidirectional association>)
	  relation 3705090 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3705090 // cond (<unidirectional association>)
	    b parent class_ref 1144834 // Node
	end

	attribute 2210050 "rmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2210178 "rmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9469954 "NotBehind"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1144834 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9470082 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1152386 "NotBehindS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3705218 // <generalisation>
	  relation 3705218 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3705218 // <generalisation>
	    b parent class_ref 1152258 // NotBehind
	end

	operation 9470210 "NotBehindS"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1144834 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9470338 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9470466 "union"
	class_operation private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param in name "lhs" type class_ref 1145346 // CharProperty
	  param in name "rhs" type class_ref 1145346 // CharProperty
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set union of two CharProperty nodes.
"
      end

      operation 9470594 "intersection"
	class_operation private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param in name "lhs" type class_ref 1145346 // CharProperty
	  param in name "rhs" type class_ref 1145346 // CharProperty
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set intersection of two CharProperty nodes.
"
      end

      operation 9470722 "setDifference"
	class_operation private return_type class_ref 1145346 // CharProperty
	nparams 2
	  param in name "lhs" type class_ref 1145346 // CharProperty
	  param in name "rhs" type class_ref 1145346 // CharProperty
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set difference of two CharProperty nodes.
"
      end

      class 1152514 "Bound"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3705346 // <generalisation>
	  relation 3705346 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3705346 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2210306 "LEFT"
	  class_attribute package explicit_type "int"
	  init_value " 0x1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2210434 "RIGHT"
	  class_attribute package explicit_type "int"
	  init_value " 0x2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2210562 "BOTH"
	  class_attribute package explicit_type "int"
	  init_value " 0x3"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2210690 "NONE"
	  class_attribute package explicit_type "int"
	  init_value " 0x4"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2210818 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2210946 "useUWORD"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9470850 "Bound"
	  package explicit_return_type ""
	  nparams 2
	    param in name "n" explicit_type "int"
	    param inout name "useUWORD" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9470978 "isWord"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9471106 "check"
	  package explicit_return_type "int"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9471234 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9471362 "hasBaseCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "matcher" type class_ref 834690 // Matcher
	  param in name "i" explicit_type "int"
	  param inout name "seq" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Non spacing marks only count as word characters in bounds calculations
if they have a base character.
"
      end

      class 1152642 "BnM"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3705474 // <generalisation>
	  relation 3705474 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3705474 // <generalisation>
	    b parent class_ref 1144834 // Node
	end

	attribute 2211074 "buffer"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2211202 "lastOcc"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2211330 "optoSft"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9471490 "optimize"
	  class_operation package return_type class_ref 1144834 // Node
	  nparams 1
	    param inout name "node" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pre calculates arrays needed to generate the bad character
shift and the good suffix shift. Only the last seven bits
are used to see if chars match; This keeps the tables small
and covers the heavily used ASCII range, but occasionally
results in an aliased match for the bad character shift.
"
	end

	operation 9471618 "BnM"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "src" explicit_type "int"
	  multiplicity "[]"
	    param inout name "lastOcc" explicit_type "int"
	  multiplicity "[]"
	    param inout name "optoSft" explicit_type "int"
	  multiplicity "[]"
	    param inout name "next" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9471746 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9471874 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1145090 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1152770 "BnMS"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3705602 // <generalisation>
	  relation 3705602 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3705602 // <generalisation>
	    b parent class_ref 1152642 // BnM
	end

	attribute 2211458 "lengthInChars"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 9472002 "BnMS"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "src" explicit_type "int"
	  multiplicity "[]"
	    param inout name "lastOcc" explicit_type "int"
	  multiplicity "[]"
	    param inout name "optoSft" explicit_type "int"
	  multiplicity "[]"
	    param inout name "next" type class_ref 1144834 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9472130 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 834690 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 429442 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3705730 // accept (<unidirectional association>)
	relation 3705730 --->
	  a role_name "accept" init_value " new Node()" class_relation package
	    comment "/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

 This must be the very first initializer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3705730 // accept (<unidirectional association>)
	  b parent class_ref 1144834 // Node
      end

      classrelation 3705858 // lastAccept (<unidirectional association>)
	relation 3705858 --->
	  a role_name "lastAccept" init_value " new LastNode()" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3705858 // lastAccept (<unidirectional association>)
	  b parent class_ref 1144834 // Node
      end

      class 1152898 "CharPropertyNames"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 9472258 "charPropertyFor"
	  class_operation package return_type class_ref 1145346 // CharProperty
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1153026 "CharPropertyFactory"
	  abstract visibility private 
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  operation 9472386 "make"
	    abstract package return_type class_ref 1145346 // CharProperty
	    nparams 0
	    
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 9472514 "defCategory"
	  class_operation private explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param in name "typeMask" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9472642 "defRange"
	  class_operation private explicit_return_type "void"
	  nparams 3
	    param inout name "name" type class_ref 128130 // String
	    param in name "lower" explicit_type "int"
	    param in name "upper" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9472770 "defCtype"
	  class_operation private explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param in name "ctype" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1153154 "CloneableProperty"
	  abstract visibility private 
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3705986 // <generalisation>
	    relation 3705986 ---|>
	      a public
		java "${type}"
		classrelation_ref 3705986 // <generalisation>
	      b parent class_ref 1145346 // CharProperty
	  end

	  classrelation 3706114 // <realization>
	    relation 3706114 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3706114 // <realization>
	      b parent class_ref 185858 // Cloneable
	  end

	  operation 9472898 "clone"
	    public return_type class_ref 1153154 // CloneableProperty
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 9473026 "defClone"
	  class_operation private explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param in name "p" type class_ref 1153154 // CloneableProperty
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3706242 // map (<unidirectional association>)
	  relation 3706242 --->
	    a role_name "map" init_value " new HashMap<>()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, CharPropertyFactory> ${name}${value};
"
	      classrelation_ref 3706242 // map (<unidirectional association>)
	    b parent class_ref 132866 // HashMap
	end

	extra_member 178562 "initialization"
	  
	  cpp "" ""
	  java "  static {
            // Unicode character property aliases, defined in
            // http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt
            defCategory(\"Cn\", 1<<Character.UNASSIGNED);
            defCategory(\"Lu\", 1<<Character.UPPERCASE_LETTER);
            defCategory(\"Ll\", 1<<Character.LOWERCASE_LETTER);
            defCategory(\"Lt\", 1<<Character.TITLECASE_LETTER);
            defCategory(\"Lm\", 1<<Character.MODIFIER_LETTER);
            defCategory(\"Lo\", 1<<Character.OTHER_LETTER);
            defCategory(\"Mn\", 1<<Character.NON_SPACING_MARK);
            defCategory(\"Me\", 1<<Character.ENCLOSING_MARK);
            defCategory(\"Mc\", 1<<Character.COMBINING_SPACING_MARK);
            defCategory(\"Nd\", 1<<Character.DECIMAL_DIGIT_NUMBER);
            defCategory(\"Nl\", 1<<Character.LETTER_NUMBER);
            defCategory(\"No\", 1<<Character.OTHER_NUMBER);
            defCategory(\"Zs\", 1<<Character.SPACE_SEPARATOR);
            defCategory(\"Zl\", 1<<Character.LINE_SEPARATOR);
            defCategory(\"Zp\", 1<<Character.PARAGRAPH_SEPARATOR);
            defCategory(\"Cc\", 1<<Character.CONTROL);
            defCategory(\"Cf\", 1<<Character.FORMAT);
            defCategory(\"Co\", 1<<Character.PRIVATE_USE);
            defCategory(\"Cs\", 1<<Character.SURROGATE);
            defCategory(\"Pd\", 1<<Character.DASH_PUNCTUATION);
            defCategory(\"Ps\", 1<<Character.START_PUNCTUATION);
            defCategory(\"Pe\", 1<<Character.END_PUNCTUATION);
            defCategory(\"Pc\", 1<<Character.CONNECTOR_PUNCTUATION);
            defCategory(\"Po\", 1<<Character.OTHER_PUNCTUATION);
            defCategory(\"Sm\", 1<<Character.MATH_SYMBOL);
            defCategory(\"Sc\", 1<<Character.CURRENCY_SYMBOL);
            defCategory(\"Sk\", 1<<Character.MODIFIER_SYMBOL);
            defCategory(\"So\", 1<<Character.OTHER_SYMBOL);
            defCategory(\"Pi\", 1<<Character.INITIAL_QUOTE_PUNCTUATION);
            defCategory(\"Pf\", 1<<Character.FINAL_QUOTE_PUNCTUATION);
            defCategory(\"L\", ((1<<Character.UPPERCASE_LETTER) |
                              (1<<Character.LOWERCASE_LETTER) |
                              (1<<Character.TITLECASE_LETTER) |
                              (1<<Character.MODIFIER_LETTER)  |
                              (1<<Character.OTHER_LETTER)));
            defCategory(\"M\", ((1<<Character.NON_SPACING_MARK) |
                              (1<<Character.ENCLOSING_MARK)   |
                              (1<<Character.COMBINING_SPACING_MARK)));
            defCategory(\"N\", ((1<<Character.DECIMAL_DIGIT_NUMBER) |
                              (1<<Character.LETTER_NUMBER)        |
                              (1<<Character.OTHER_NUMBER)));
            defCategory(\"Z\", ((1<<Character.SPACE_SEPARATOR) |
                              (1<<Character.LINE_SEPARATOR)  |
                              (1<<Character.PARAGRAPH_SEPARATOR)));
            defCategory(\"C\", ((1<<Character.CONTROL)     |
                              (1<<Character.FORMAT)      |
                              (1<<Character.PRIVATE_USE) |
                              (1<<Character.SURROGATE))); // Other
            defCategory(\"P\", ((1<<Character.DASH_PUNCTUATION)      |
                              (1<<Character.START_PUNCTUATION)     |
                              (1<<Character.END_PUNCTUATION)       |
                              (1<<Character.CONNECTOR_PUNCTUATION) |
                              (1<<Character.OTHER_PUNCTUATION)     |
                              (1<<Character.INITIAL_QUOTE_PUNCTUATION) |
                              (1<<Character.FINAL_QUOTE_PUNCTUATION)));
            defCategory(\"S\", ((1<<Character.MATH_SYMBOL)     |
                              (1<<Character.CURRENCY_SYMBOL) |
                              (1<<Character.MODIFIER_SYMBOL) |
                              (1<<Character.OTHER_SYMBOL)));
            defCategory(\"LC\", ((1<<Character.UPPERCASE_LETTER) |
                               (1<<Character.LOWERCASE_LETTER) |
                               (1<<Character.TITLECASE_LETTER)));
            defCategory(\"LD\", ((1<<Character.UPPERCASE_LETTER) |
                               (1<<Character.LOWERCASE_LETTER) |
                               (1<<Character.TITLECASE_LETTER) |
                               (1<<Character.MODIFIER_LETTER)  |
                               (1<<Character.OTHER_LETTER)     |
                               (1<<Character.DECIMAL_DIGIT_NUMBER)));
            defRange(\"L1\", 0x00, 0xFF); // Latin-1
            map.put(\"all\", new CharPropertyFactory() {
                    CharProperty make() { return new All(); }});

            // Posix regular expression character classes, defined in
            // http://www.unix.org/onlinepubs/009695399/basedefs/xbd_chap09.html
            defRange(\"ASCII\", 0x00, 0x7F);   // ASCII
            defCtype(\"Alnum\", ASCII.ALNUM);  // Alphanumeric characters
            defCtype(\"Alpha\", ASCII.ALPHA);  // Alphabetic characters
            defCtype(\"Blank\", ASCII.BLANK);  // Space and tab characters
            defCtype(\"Cntrl\", ASCII.CNTRL);  // Control characters
            defRange(\"Digit\", '0', '9');     // Numeric characters
            defCtype(\"Graph\", ASCII.GRAPH);  // printable and visible
            defRange(\"Lower\", 'a', 'z');     // Lower-case alphabetic
            defRange(\"Print\", 0x20, 0x7E);   // Printable characters
            defCtype(\"Punct\", ASCII.PUNCT);  // Punctuation characters
            defCtype(\"Space\", ASCII.SPACE);  // Space characters
            defRange(\"Upper\", 'A', 'Z');     // Upper-case alphabetic
            defCtype(\"XDigit\",ASCII.XDIGIT); // hexadecimal digits

            // Java character properties, defined by methods in Character.java
            defClone(\"javaLowerCase\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isLowerCase(ch);}});
            defClone(\"javaUpperCase\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isUpperCase(ch);}});
            defClone(\"javaAlphabetic\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isAlphabetic(ch);}});
            defClone(\"javaIdeographic\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isIdeographic(ch);}});
            defClone(\"javaTitleCase\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isTitleCase(ch);}});
            defClone(\"javaDigit\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isDigit(ch);}});
            defClone(\"javaDefined\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isDefined(ch);}});
            defClone(\"javaLetter\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isLetter(ch);}});
            defClone(\"javaLetterOrDigit\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isLetterOrDigit(ch);}});
            defClone(\"javaJavaIdentifierStart\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isJavaIdentifierStart(ch);}});
            defClone(\"javaJavaIdentifierPart\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isJavaIdentifierPart(ch);}});
            defClone(\"javaUnicodeIdentifierStart\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isUnicodeIdentifierStart(ch);}});
            defClone(\"javaUnicodeIdentifierPart\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isUnicodeIdentifierPart(ch);}});
            defClone(\"javaIdentifierIgnorable\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isIdentifierIgnorable(ch);}});
            defClone(\"javaSpaceChar\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isSpaceChar(ch);}});
            defClone(\"javaWhitespace\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isWhitespace(ch);}});
            defClone(\"javaISOControl\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isISOControl(ch);}});
            defClone(\"javaMirrored\", new CloneableProperty() {
                boolean isSatisfiedBy(int ch) {
                    return Character.isMirrored(ch);}});
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end

      operation 9473154 "asPredicate"
	public return_type class_ref 184578 // Predicate
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a predicate which can be used to match a string.

@return  The predicate which can be used for matching on a string
@since   1.8
"
      end

      operation 9473282 "splitAsStream"
	public return_type class_ref 184706 // Stream
	nparams 1
	  param in name "input" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a stream from the given input sequence around matches of this
pattern.

<p> The stream returned by this method contains each substring of the
input sequence that is terminated by another subsequence that matches
this pattern or is terminated by the end of the input sequence.  The
substrings in the stream are in the order in which they occur in the
input. Trailing empty strings will be discarded and not encountered in
the stream.

<p> If this pattern does not match any subsequence of the input then
the resulting stream has just one element, namely the input sequence in
string form.

<p> When there is a positive-width match at the beginning of the input
sequence then an empty leading substring is included at the beginning
of the stream. A zero-width match at the beginning however never produces
such empty leading substring.

<p> If the input sequence is mutable, it must remain constant during the
execution of the terminal stream operation.  Otherwise, the result of the
terminal stream operation is undefined.

@param   input
         The character sequence to be split

@return  The stream of strings computed by splitting the input
         around matches of this pattern
@see     #split(CharSequence)
@since   1.8
"
      end
    end

    class 834690 "Matcher"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An engine that performs match operations on a {@linkplain java.lang.CharSequence
character sequence} by interpreting a {@link Pattern}.

<p> A matcher is created from a pattern by invoking the pattern's {@link
Pattern#matcher matcher} method.  Once created, a matcher can be used to
perform three different kinds of match operations:

<ul>

  <li><p> The {@link #matches matches} method attempts to match the entire
  input sequence against the pattern.  </p></li>

  <li><p> The {@link #lookingAt lookingAt} method attempts to match the
  input sequence, starting at the beginning, against the pattern.  </p></li>

  <li><p> The {@link #find find} method scans the input sequence looking for
  the next subsequence that matches the pattern.  </p></li>

</ul>

<p> Each of these methods returns a boolean indicating success or failure.
More information about a successful match can be obtained by querying the
state of the matcher.

<p> A matcher finds matches in a subset of its input called the
<i>region</i>. By default, the region contains all of the matcher's input.
The region can be modified via the{@link #region region} method and queried
via the {@link #regionStart regionStart} and {@link #regionEnd regionEnd}
methods. The way that the region boundaries interact with some pattern
constructs can be changed. See {@link #useAnchoringBounds
useAnchoringBounds} and {@link #useTransparentBounds useTransparentBounds}
for more details.

<p> This class also defines methods for replacing matched subsequences with
new strings whose contents can, if desired, be computed from the match
result.  The {@link #appendReplacement appendReplacement} and {@link
#appendTail appendTail} methods can be used in tandem in order to collect
the result into an existing string buffer, or the more convenient {@link
#replaceAll replaceAll} method can be used to create a string in which every
matching subsequence in the input sequence is replaced.

<p> The explicit state of a matcher includes the start and end indices of
the most recent successful match.  It also includes the start and end
indices of the input subsequence captured by each <a
href=\"Pattern.html#cg\">capturing group</a> in the pattern as well as a total
count of such subsequences.  As a convenience, methods are also provided for
returning these captured subsequences in string form.

<p> The explicit state of a matcher is initially undefined; attempting to
query any part of it before a successful match will cause an {@link
IllegalStateException} to be thrown.  The explicit state of a matcher is
recomputed by every match operation.

<p> The implicit state of a matcher includes the input character sequence as
well as the <i>append position</i>, which is initially zero and is updated
by the {@link #appendReplacement appendReplacement} method.

<p> A matcher may be reset explicitly by invoking its {@link #reset()}
method or, if a new input sequence is desired, its {@link
#reset(java.lang.CharSequence) reset(CharSequence)} method.  Resetting a
matcher discards its explicit state information and sets the append position
to zero.

<p> Instances of this class are not safe for use by multiple concurrent
threads. </p>


@author      Mike McCloskey
@author      Mark Reinhold
@author      JSR-51 Expert Group
@since       1.4
@spec        JSR-51
"
      classrelation 3694082 // <realization>
	relation 3694082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3694082 // <realization>
	  b parent class_ref 1091330 // MatchResult
      end

      classrelation 3694210 // parentPattern (<unidirectional association>)
	relation 3694210 --->
	  a role_name "parentPattern" package
	    comment "
The Pattern object that created this Matcher.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3694210 // parentPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      attribute 2199938 "groups"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The storage used by groups. They may contain invalid values if
a group was skipped during the matching.

"
      end

      attribute 2200066 "from"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The range within the sequence that is to be matched. Anchors
will match at these \"hard\" boundaries. Changing the region
changes these values.

"
      end

      attribute 2200194 "to"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The range within the sequence that is to be matched. Anchors
will match at these \"hard\" boundaries. Changing the region
changes these values.

"
      end

      attribute 2200322 "lookbehindTo"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Lookbehind uses this value to ensure that the subexpression
match ends at the point where the lookbehind was encountered.

"
      end

      classrelation 3694338 // text (<unidirectional association>)
	relation 3694338 --->
	  a role_name "text" package
	    comment "
The original string being matched.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3694338 // text (<unidirectional association>)
	  b parent class_ref 429442 // CharSequence
      end

      attribute 2200450 "ENDANCHOR"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Matcher state used by the last node. NOANCHOR is used when a
match does not have to consume all of the input. ENDANCHOR is
the mode used for matching all the input.

"
      end

      attribute 2200578 "NOANCHOR"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2200706 "acceptMode"
	package explicit_type "int"
	init_value " NOANCHOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2200834 "first"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The range of string that last matched the pattern. If the last
match failed then first is -1; last initially holds 0 then it
holds the index of the end of the last match (which is where the
next search starts).

"
      end

      attribute 2200962 "last"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The range of string that last matched the pattern. If the last
match failed then first is -1; last initially holds 0 then it
holds the index of the end of the last match (which is where the
next search starts).

"
      end

      attribute 2201090 "oldLast"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The end index of what matched in the last match operation.

"
      end

      attribute 2201218 "lastAppendPosition"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the last position appended in a substitution.

"
      end

      attribute 2201346 "locals"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Storage used by nodes to tell what repetition they are on in
a pattern, and where groups begin. The nodes themselves are stateless,
so they rely on this field to hold state during a match.

"
      end

      attribute 2201474 "hitEnd"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Boolean indicating whether or not more input could change
the results of the last match.

If hitEnd is true, and a match was found, then more input
might cause a different match to be found.
If hitEnd is true and a match was not found, then more
input could cause a match to be found.
If hitEnd is false and a match was found, then more input
will not change the match.
If hitEnd is false and a match was not found, then more
input will not cause a match to be found.

"
      end

      attribute 2201602 "requireEnd"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Boolean indicating whether or not more input could change
a positive match into a negative one.

If requireEnd is true, and a match was found, then more
input could cause the match to be lost.
If requireEnd is false and a match was found, then more
input might change the match but the match won't be lost.
If a match was not found, then requireEnd has no meaning.

"
      end

      attribute 2201730 "transparentBounds"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If transparentBounds is true then the boundaries of this
matcher's region are transparent to lookahead, lookbehind,
and boundary matching constructs that try to see beyond them.

"
      end

      attribute 2201858 "anchoringBounds"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If anchoringBounds is true then the boundaries of this
matcher's region match anchors such as ^ and $.

"
      end

      operation 9438338 "Matcher"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "No default constructor.
"
      end

      operation 9438466 "Matcher"
	package explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 417154 // Pattern
	  param inout name "text" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "All matchers have the state used by Pattern during a match.
"
      end

      operation 9438594 "pattern"
	public return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the pattern that is interpreted by this matcher.

@return  The pattern for which this matcher was created
"
      end

      operation 9438722 "toMatchResult"
	public return_type class_ref 1091330 // MatchResult
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the match state of this matcher as a {@link MatchResult}.
The result is unaffected by subsequent operations performed upon this
matcher.

@return  a <code>MatchResult</code> with the state of this matcher
@since 1.5
"
      end

      operation 9438850 "usePattern"
	public return_type class_ref 834690 // Matcher
	nparams 1
	  param inout name "newPattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the <tt>Pattern</tt> that this <tt>Matcher</tt> uses to
find matches with.

<p> This method causes this matcher to lose information
about the groups of the last match that occurred. The
matcher's position in the input is maintained and its
last append position is unaffected.</p>

@param  newPattern
        The new pattern used by this matcher
@return  This matcher
@throws  IllegalArgumentException
         If newPattern is <tt>null</tt>
@since 1.5
"
      end

      operation 9438978 "reset"
	public return_type class_ref 834690 // Matcher
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this matcher.

<p> Resetting a matcher discards all of its explicit state information
and sets its append position to zero. The matcher's region is set to the
default region, which is its entire character sequence. The anchoring
and transparency of this matcher's region boundaries are unaffected.

@return  This matcher
"
      end

      operation 9439106 "reset"
	public return_type class_ref 834690 // Matcher
	nparams 1
	  param inout name "input" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this matcher with a new input sequence.

<p> Resetting a matcher discards all of its explicit state information
and sets its append position to zero.  The matcher's region is set to
the default region, which is its entire character sequence.  The
anchoring and transparency of this matcher's region boundaries are
unaffected.

@param  input
        The new input character sequence

@return  This matcher
"
      end

      operation 9439234 "start"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the previous match.

@return  The index of the first character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed
"
      end

      operation 9439362 "start"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the subsequence captured by the given group
during the previous match operation.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>start(0)</tt> is equivalent to
<i>m.</i><tt>start()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The index of the first character captured by the group,
         or <tt>-1</tt> if the match was successful but the group
         itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index
"
      end

      operation 9439490 "start"
	public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the subsequence captured by the given
<a href=\"Pattern.html#groupname\">named-capturing group</a> during the
previous match operation.

@param  name
        The name of a named-capturing group in this matcher's pattern

@return  The index of the first character captured by the group,
         or {@code -1} if the match was successful but the group
         itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IllegalArgumentException
         If there is no capturing group in the pattern
         with the given name
@since 1.8
"
      end

      operation 9439618 "end"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character matched.

@return  The offset after the last character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed
"
      end

      operation 9439746 "end"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character of the subsequence
captured by the given group during the previous match operation.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>end(0)</tt> is equivalent to
<i>m.</i><tt>end()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The offset after the last character captured by the group,
         or <tt>-1</tt> if the match was successful
         but the group itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index
"
      end

      operation 9439874 "end"
	public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character of the subsequence
captured by the given <a href=\"Pattern.html#groupname\">named-capturing
group</a> during the previous match operation.

@param  name
        The name of a named-capturing group in this matcher's pattern

@return  The offset after the last character captured by the group,
         or {@code -1} if the match was successful
         but the group itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IllegalArgumentException
         If there is no capturing group in the pattern
         with the given name
@since 1.8
"
      end

      operation 9440002 "group"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence matched by the previous match.

<p> For a matcher <i>m</i> with input sequence <i>s</i>,
the expressions <i>m.</i><tt>group()</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(),</tt>&nbsp;<i>m.</i><tt>end())</tt>
are equivalent.  </p>

<p> Note that some patterns, for example <tt>a*</tt>, match the empty
string.  This method will return the empty string when the pattern
successfully matches the empty string in the input.  </p>

@return The (possibly empty) subsequence matched by the previous match,
        in string form

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed
"
      end

      operation 9440130 "group"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "group" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence captured by the given group during the
previous match operation.

<p> For a matcher <i>m</i>, input sequence <i>s</i>, and group index
<i>g</i>, the expressions <i>m.</i><tt>group(</tt><i>g</i><tt>)</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(</tt><i>g</i><tt>),</tt>&nbsp;<i>m.</i><tt>end(</tt><i>g</i><tt>))</tt>
are equivalent.  </p>

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <tt>m.group(0)</tt> is equivalent to <tt>m.group()</tt>.
</p>

<p> If the match was successful but the group specified failed to match
any part of the input sequence, then <tt>null</tt> is returned. Note
that some groups, for example <tt>(a*)</tt>, match the empty string.
This method will return the empty string when such a group successfully
matches the empty string in the input.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The (possibly empty) subsequence captured by the group
         during the previous match, or <tt>null</tt> if the group
         failed to match part of the input

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index
"
      end

      operation 9440258 "group"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence captured by the given
<a href=\"Pattern.html#groupname\">named-capturing group</a> during the previous
match operation.

<p> If the match was successful but the group specified failed to match
any part of the input sequence, then <tt>null</tt> is returned. Note
that some groups, for example <tt>(a*)</tt>, match the empty string.
This method will return the empty string when such a group successfully
matches the empty string in the input.  </p>

@param  name
        The name of a named-capturing group in this matcher's pattern

@return  The (possibly empty) subsequence captured by the named group
         during the previous match, or <tt>null</tt> if the group
         failed to match part of the input

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IllegalArgumentException
         If there is no capturing group in the pattern
         with the given name
@since 1.7
"
      end

      operation 9440386 "groupCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of capturing groups in this matcher's pattern.

<p> Group zero denotes the entire pattern by convention. It is not
included in this count.

<p> Any non-negative integer smaller than or equal to the value
returned by this method is guaranteed to be a valid group index for
this matcher.  </p>

@return The number of capturing groups in this matcher's pattern
"
      end

      operation 9440514 "matches"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to match the entire region against the pattern.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods.  </p>

@return  <tt>true</tt> if, and only if, the entire region sequence
         matches this matcher's pattern
"
      end

      operation 9440642 "find"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to find the next subsequence of the input sequence that matches
the pattern.

<p> This method starts at the beginning of this matcher's region, or, if
a previous invocation of the method was successful and the matcher has
not since been reset, at the first character not matched by the previous
match.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods.  </p>

@return  <tt>true</tt> if, and only if, a subsequence of the input
         sequence matches this matcher's pattern
"
      end

      operation 9440770 "find"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this matcher and then attempts to find the next subsequence of
the input sequence that matches the pattern, starting at the specified
index.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods, and subsequent
invocations of the {@link #find()} method will start at the first
character not matched by this match.  </p>

@param start the index to start searching for a match
@throws  IndexOutOfBoundsException
         If start is less than zero or if start is greater than the
         length of the input sequence.

@return  <tt>true</tt> if, and only if, a subsequence of the input
         sequence starting at the given index matches this matcher's
         pattern
"
      end

      operation 9440898 "lookingAt"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to match the input sequence, starting at the beginning of the
region, against the pattern.

<p> Like the {@link #matches matches} method, this method always starts
at the beginning of the region; unlike that method, it does not
require that the entire region be matched.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods.  </p>

@return  <tt>true</tt> if, and only if, a prefix of the input
         sequence matches this matcher's pattern
"
      end

      operation 9441026 "quoteReplacement"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a literal replacement <code>String</code> for the specified
<code>String</code>.

This method produces a <code>String</code> that will work
as a literal replacement <code>s</code> in the
<code>appendReplacement</code> method of the {@link Matcher} class.
The <code>String</code> produced will match the sequence of characters
in <code>s</code> treated as a literal sequence. Slashes ('\\') and
dollar signs ('$') will be given no special meaning.

@param  s The string to be literalized
@return  A literal string replacement
@since 1.5
"
      end

      operation 9441154 "appendReplacement"
	public return_type class_ref 834690 // Matcher
	nparams 2
	  param inout name "sb" type class_ref 166018 // StringBuffer
	  param inout name "replacement" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements a non-terminal append-and-replace step.

<p> This method performs the following actions: </p>

<ol>

  <li><p> It reads characters from the input sequence, starting at the
  append position, and appends them to the given string buffer.  It
  stops after reading the last character preceding the previous match,
  that is, the character at index {@link
  #start()}&nbsp;<tt>-</tt>&nbsp;<tt>1</tt>.  </p></li>

  <li><p> It appends the given replacement string to the string buffer.
  </p></li>

  <li><p> It sets the append position of this matcher to the index of
  the last character matched, plus one, that is, to {@link #end()}.
  </p></li>

</ol>

<p> The replacement string may contain references to subsequences
captured during the previous match: Each occurrence of
<tt>${</tt><i>name</i><tt>}</tt> or <tt>$</tt><i>g</i>
will be replaced by the result of evaluating the corresponding
{@link #group(String) group(name)} or {@link #group(int) group(g)}
respectively. For  <tt>$</tt><i>g</i>,
the first number after the <tt>$</tt> is always treated as part of
the group reference. Subsequent numbers are incorporated into g if
they would form a legal group reference. Only the numerals '0'
through '9' are considered as potential components of the group
reference. If the second group matched the string <tt>\"foo\"</tt>, for
example, then passing the replacement string <tt>\"$2bar\"</tt> would
cause <tt>\"foobar\"</tt> to be appended to the string buffer. A dollar
sign (<tt>$</tt>) may be included as a literal in the replacement
string by preceding it with a backslash (<tt>\\$</tt>).

<p> Note that backslashes (<tt>\\</tt>) and dollar signs (<tt>$</tt>) in
the replacement string may cause the results to be different than if it
were being treated as a literal replacement string. Dollar signs may be
treated as references to captured subsequences as described above, and
backslashes are used to escape literal characters in the replacement
string.

<p> This method is intended to be used in a loop together with the
{@link #appendTail appendTail} and {@link #find find} methods.  The
following code, for example, writes <tt>one dog two dogs in the
yard</tt> to the standard-output stream: </p>

<blockquote><pre>
Pattern p = Pattern.compile(\"cat\");
Matcher m = p.matcher(\"one cat two cats in the yard\");
StringBuffer sb = new StringBuffer();
while (m.find()) {
    m.appendReplacement(sb, \"dog\");
}
m.appendTail(sb);
System.out.println(sb.toString());</pre></blockquote>

@param  sb
        The target string buffer

@param  replacement
        The replacement string

@return  This matcher

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IllegalArgumentException
         If the replacement string refers to a named-capturing
         group that does not exist in the pattern

@throws  IndexOutOfBoundsException
         If the replacement string refers to a capturing group
         that does not exist in the pattern
"
      end

      operation 9441282 "appendTail"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "sb" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements a terminal append-and-replace step.

<p> This method reads characters from the input sequence, starting at
the append position, and appends them to the given string buffer.  It is
intended to be invoked after one or more invocations of the {@link
#appendReplacement appendReplacement} method in order to copy the
remainder of the input sequence.  </p>

@param  sb
        The target string buffer

@return  The target string buffer
"
      end

      operation 9441410 "replaceAll"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "replacement" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces every subsequence of the input sequence that matches the
pattern with the given replacement string.

<p> This method first resets this matcher.  It then scans the input
sequence looking for matches of the pattern.  Characters that are not
part of any match are appended directly to the result string; each match
is replaced in the result by the replacement string.  The replacement
string may contain references to captured subsequences as in the {@link
#appendReplacement appendReplacement} method.

<p> Note that backslashes (<tt>\\</tt>) and dollar signs (<tt>$</tt>) in
the replacement string may cause the results to be different than if it
were being treated as a literal replacement string. Dollar signs may be
treated as references to captured subsequences as described above, and
backslashes are used to escape literal characters in the replacement
string.

<p> Given the regular expression <tt>a*b</tt>, the input
<tt>\"aabfooaabfooabfoob\"</tt>, and the replacement string
<tt>\"-\"</tt>, an invocation of this method on a matcher for that
expression would yield the string <tt>\"-foo-foo-foo-\"</tt>.

<p> Invoking this method changes this matcher's state.  If the matcher
is to be used in further matching operations then it should first be
reset.  </p>

@param  replacement
        The replacement string

@return  The string constructed by replacing each matching subsequence
         by the replacement string, substituting captured subsequences
         as needed
"
      end

      operation 9441538 "replaceFirst"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "replacement" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the first subsequence of the input sequence that matches the
pattern with the given replacement string.

<p> This method first resets this matcher.  It then scans the input
sequence looking for a match of the pattern.  Characters that are not
part of the match are appended directly to the result string; the match
is replaced in the result by the replacement string.  The replacement
string may contain references to captured subsequences as in the {@link
#appendReplacement appendReplacement} method.

<p>Note that backslashes (<tt>\\</tt>) and dollar signs (<tt>$</tt>) in
the replacement string may cause the results to be different than if it
were being treated as a literal replacement string. Dollar signs may be
treated as references to captured subsequences as described above, and
backslashes are used to escape literal characters in the replacement
string.

<p> Given the regular expression <tt>dog</tt>, the input
<tt>\"zzzdogzzzdogzzz\"</tt>, and the replacement string
<tt>\"cat\"</tt>, an invocation of this method on a matcher for that
expression would yield the string <tt>\"zzzcatzzzdogzzz\"</tt>.  </p>

<p> Invoking this method changes this matcher's state.  If the matcher
is to be used in further matching operations then it should first be
reset.  </p>

@param  replacement
        The replacement string
@return  The string constructed by replacing the first matching
         subsequence by the replacement string, substituting captured
         subsequences as needed
"
      end

      operation 9441666 "region"
	public return_type class_ref 834690 // Matcher
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the limits of this matcher's region. The region is the part of the
input sequence that will be searched to find a match. Invoking this
method resets the matcher, and then sets the region to start at the
index specified by the <code>start</code> parameter and end at the
index specified by the <code>end</code> parameter.

<p>Depending on the transparency and anchoring being used (see
{@link #useTransparentBounds useTransparentBounds} and
{@link #useAnchoringBounds useAnchoringBounds}), certain constructs such
as anchors may behave differently at or around the boundaries of the
region.

@param  start
        The index to start searching at (inclusive)
@param  end
        The index to end searching at (exclusive)
@throws  IndexOutOfBoundsException
         If start or end is less than zero, if
         start is greater than the length of the input sequence, if
         end is greater than the length of the input sequence, or if
         start is greater than end.
@return  this matcher
@since 1.5
"
      end

      operation 9441794 "regionStart"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports the start index of this matcher's region. The
searches this matcher conducts are limited to finding matches
within {@link #regionStart regionStart} (inclusive) and
{@link #regionEnd regionEnd} (exclusive).

@return  The starting point of this matcher's region
@since 1.5
"
      end

      operation 9441922 "regionEnd"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports the end index (exclusive) of this matcher's region.
The searches this matcher conducts are limited to finding matches
within {@link #regionStart regionStart} (inclusive) and
{@link #regionEnd regionEnd} (exclusive).

@return  the ending point of this matcher's region
@since 1.5
"
      end

      operation 9442050 "hasTransparentBounds"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the transparency of region bounds for this matcher.

<p> This method returns <tt>true</tt> if this matcher uses
<i>transparent</i> bounds, <tt>false</tt> if it uses <i>opaque</i>
bounds.

<p> See {@link #useTransparentBounds useTransparentBounds} for a
description of transparent and opaque bounds.

<p> By default, a matcher uses opaque region boundaries.

@return <tt>true</tt> iff this matcher is using transparent bounds,
        <tt>false</tt> otherwise.
@see java.util.regex.Matcher#useTransparentBounds(boolean)
@since 1.5
"
      end

      operation 9442178 "useTransparentBounds"
	public return_type class_ref 834690 // Matcher
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the transparency of region bounds for this matcher.

<p> Invoking this method with an argument of <tt>true</tt> will set this
matcher to use <i>transparent</i> bounds. If the boolean
argument is <tt>false</tt>, then <i>opaque</i> bounds will be used.

<p> Using transparent bounds, the boundaries of this
matcher's region are transparent to lookahead, lookbehind,
and boundary matching constructs. Those constructs can see beyond the
boundaries of the region to see if a match is appropriate.

<p> Using opaque bounds, the boundaries of this matcher's
region are opaque to lookahead, lookbehind, and boundary matching
constructs that may try to see beyond them. Those constructs cannot
look past the boundaries so they will fail to match anything outside
of the region.

<p> By default, a matcher uses opaque bounds.

@param  b a boolean indicating whether to use opaque or transparent
        regions
@return this matcher
@see java.util.regex.Matcher#hasTransparentBounds
@since 1.5
"
      end

      operation 9442306 "hasAnchoringBounds"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the anchoring of region bounds for this matcher.

<p> This method returns <tt>true</tt> if this matcher uses
<i>anchoring</i> bounds, <tt>false</tt> otherwise.

<p> See {@link #useAnchoringBounds useAnchoringBounds} for a
description of anchoring bounds.

<p> By default, a matcher uses anchoring region boundaries.

@return <tt>true</tt> iff this matcher is using anchoring bounds,
        <tt>false</tt> otherwise.
@see java.util.regex.Matcher#useAnchoringBounds(boolean)
@since 1.5
"
      end

      operation 9442434 "useAnchoringBounds"
	public return_type class_ref 834690 // Matcher
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the anchoring of region bounds for this matcher.

<p> Invoking this method with an argument of <tt>true</tt> will set this
matcher to use <i>anchoring</i> bounds. If the boolean
argument is <tt>false</tt>, then <i>non-anchoring</i> bounds will be
used.

<p> Using anchoring bounds, the boundaries of this
matcher's region match anchors such as ^ and $.

<p> Without anchoring bounds, the boundaries of this
matcher's region will not match anchors such as ^ and $.

<p> By default, a matcher uses anchoring region boundaries.

@param  b a boolean indicating whether or not to use anchoring bounds.
@return this matcher
@see java.util.regex.Matcher#hasAnchoringBounds
@since 1.5
"
      end

      operation 9442562 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the string representation of this matcher. The
string representation of a <code>Matcher</code> contains information
that may be useful for debugging. The exact format is unspecified.

@return  The string representation of this matcher
@since 1.5
"
      end

      operation 9442690 "hitEnd"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns true if the end of input was hit by the search engine in
the last match operation performed by this matcher.

<p>When this method returns true, then it is possible that more input
would have changed the result of the last search.

@return  true iff the end of input was hit in the last match; false
         otherwise
@since 1.5
"
      end

      operation 9442818 "requireEnd"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns true if more input could change a positive match into a
negative one.

<p>If this method returns true, and a match was found, then more
input could cause the match to be lost. If this method returns false
and a match was found, then more input might change the match but the
match won't be lost. If a match was not found, then requireEnd has no
meaning.

@return  true iff more input could change a positive match into a
         negative one.
@since 1.5
"
      end

      operation 9442946 "search"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "from" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiates a search to find a Pattern within the given bounds.
The groups are filled with default values and the match of the root
of the state machine is called. The state machine will hold the state
of the match as it proceeds in this matcher.

Matcher.from is not set here, because it is the \"hard\" boundary
of the start of the search which anchors will set to. The from param
is the \"soft\" boundary of the start of the search, meaning that the
regex tries to match at that index but ^ won't match there. Subsequent
calls to the search methods start at a new \"soft\" boundary which is
the end of the previous match.
"
      end

      operation 9443074 "match"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "anchor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiates a search for an anchored match to a Pattern within the given
bounds. The groups are filled with default values and the match of the
root of the state machine is called. The state machine will hold the
state of the match as it proceeds in this matcher.
"
      end

      operation 9443202 "getTextLength"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the end index of the text.

@return the index after the last character in the text
"
      end

      operation 9443330 "getSubSequence"
	package return_type class_ref 429442 // CharSequence
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a String from this Matcher's input in the specified range.

@param  beginIndex   the beginning index, inclusive
@param  endIndex     the ending index, exclusive
@return A String generated from this Matcher's input
"
      end

      operation 9443458 "charAt"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this Matcher's input character at index i.

@return A char from the specified index
"
      end

      operation 9443586 "getMatchedGroupIndex"
	package explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the group index of the matched capturing group.

@return the index of the named-capturing group
"
      end
    end

    class 1091330 "MatchResult"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The result of a match operation.

<p>This interface contains query methods used to determine the
results of a match against a regular expression. The match boundaries,
groups and group boundaries can be seen but not modified through
a <code>MatchResult</code>.

@author  Michael McCloskey
@see Matcher
@since 1.5
"
      operation 9437442 "start"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the match.

@return  The index of the first character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed
"
      end

      operation 9437570 "start"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the subsequence captured by the given group
during this match.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>start(0)</tt> is equivalent to
<i>m.</i><tt>start()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The index of the first character captured by the group,
         or <tt>-1</tt> if the match was successful but the group
         itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index
"
      end

      operation 9437698 "end"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character matched.

@return  The offset after the last character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed
"
      end

      operation 9437826 "end"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character of the subsequence
captured by the given group during this match.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>end(0)</tt> is equivalent to
<i>m.</i><tt>end()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The offset after the last character captured by the group,
         or <tt>-1</tt> if the match was successful
         but the group itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index
"
      end

      operation 9437954 "group"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence matched by the previous match.

<p> For a matcher <i>m</i> with input sequence <i>s</i>,
the expressions <i>m.</i><tt>group()</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(),</tt>&nbsp;<i>m.</i><tt>end())</tt>
are equivalent.  </p>

<p> Note that some patterns, for example <tt>a*</tt>, match the empty
string.  This method will return the empty string when the pattern
successfully matches the empty string in the input.  </p>

@return The (possibly empty) subsequence matched by the previous match,
        in string form

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed
"
      end

      operation 9438082 "group"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "group" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence captured by the given group during the
previous match operation.

<p> For a matcher <i>m</i>, input sequence <i>s</i>, and group index
<i>g</i>, the expressions <i>m.</i><tt>group(</tt><i>g</i><tt>)</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(</tt><i>g</i><tt>),</tt>&nbsp;<i>m.</i><tt>end(</tt><i>g</i><tt>))</tt>
are equivalent.  </p>

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <tt>m.group(0)</tt> is equivalent to <tt>m.group()</tt>.
</p>

<p> If the match was successful but the group specified failed to match
any part of the input sequence, then <tt>null</tt> is returned. Note
that some groups, for example <tt>(a*)</tt>, match the empty string.
This method will return the empty string when such a group successfully
matches the empty string in the input.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The (possibly empty) subsequence captured by the group
         during the previous match, or <tt>null</tt> if the group
         failed to match part of the input

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index
"
      end

      operation 9438210 "groupCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of capturing groups in this match result's pattern.

<p> Group zero denotes the entire pattern by convention. It is not
included in this count.

<p> Any non-negative integer smaller than or equal to the value
returned by this method is guaranteed to be a valid group index for
this matcher.  </p>

@return The number of capturing groups in this matcher's pattern
"
      end
    end

    class 1144706 "ASCII"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class that implements the standard C ctype functionality.

@author Hong Zhang
"
      attribute 2197890 "UPPER"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00000100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198018 "LOWER"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00000200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198146 "DIGIT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00000400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198274 "SPACE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00000800"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198402 "PUNCT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00001000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198530 "CNTRL"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00002000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198658 "BLANK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00004000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198786 "HEX"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00008000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2198914 "UNDER"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00010000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199042 "ASCII"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x0000FF00"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199170 "ALPHA"
	class_attribute const_attribute package explicit_type "int"
	init_value " (UPPER|LOWER)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199298 "ALNUM"
	class_attribute const_attribute package explicit_type "int"
	init_value " (UPPER|LOWER|DIGIT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199426 "GRAPH"
	class_attribute const_attribute package explicit_type "int"
	init_value " (PUNCT|UPPER|LOWER|DIGIT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199554 "WORD"
	class_attribute const_attribute package explicit_type "int"
	init_value " (UPPER|LOWER|UNDER|DIGIT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199682 "XDIGIT"
	class_attribute const_attribute package explicit_type "int"
	init_value " (HEX)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2199810 "ctype"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] {
        CNTRL,                  /* 00 (NUL) */
        CNTRL,                  /* 01 (SOH) */
        CNTRL,                  /* 02 (STX) */
        CNTRL,                  /* 03 (ETX) */
        CNTRL,                  /* 04 (EOT) */
        CNTRL,                  /* 05 (ENQ) */
        CNTRL,                  /* 06 (ACK) */
        CNTRL,                  /* 07 (BEL) */
        CNTRL,                  /* 08 (BS)  */
        SPACE+CNTRL+BLANK,      /* 09 (HT)  */
        SPACE+CNTRL,            /* 0A (LF)  */
        SPACE+CNTRL,            /* 0B (VT)  */
        SPACE+CNTRL,            /* 0C (FF)  */
        SPACE+CNTRL,            /* 0D (CR)  */
        CNTRL,                  /* 0E (SI)  */
        CNTRL,                  /* 0F (SO)  */
        CNTRL,                  /* 10 (DLE) */
        CNTRL,                  /* 11 (DC1) */
        CNTRL,                  /* 12 (DC2) */
        CNTRL,                  /* 13 (DC3) */
        CNTRL,                  /* 14 (DC4) */
        CNTRL,                  /* 15 (NAK) */
        CNTRL,                  /* 16 (SYN) */
        CNTRL,                  /* 17 (ETB) */
        CNTRL,                  /* 18 (CAN) */
        CNTRL,                  /* 19 (EM)  */
        CNTRL,                  /* 1A (SUB) */
        CNTRL,                  /* 1B (ESC) */
        CNTRL,                  /* 1C (FS)  */
        CNTRL,                  /* 1D (GS)  */
        CNTRL,                  /* 1E (RS)  */
        CNTRL,                  /* 1F (US)  */
        SPACE+BLANK,            /* 20 SPACE */
        PUNCT,                  /* 21 !     */
        PUNCT,                  /* 22 \"     */
        PUNCT,                  /* 23 #     */
        PUNCT,                  /* 24 $     */
        PUNCT,                  /* 25 %     */
        PUNCT,                  /* 26 &     */
        PUNCT,                  /* 27 '     */
        PUNCT,                  /* 28 (     */
        PUNCT,                  /* 29 )     */
        PUNCT,                  /* 2A *     */
        PUNCT,                  /* 2B +     */
        PUNCT,                  /* 2C ,     */
        PUNCT,                  /* 2D -     */
        PUNCT,                  /* 2E .     */
        PUNCT,                  /* 2F /     */
        DIGIT+HEX+0,            /* 30 0     */
        DIGIT+HEX+1,            /* 31 1     */
        DIGIT+HEX+2,            /* 32 2     */
        DIGIT+HEX+3,            /* 33 3     */
        DIGIT+HEX+4,            /* 34 4     */
        DIGIT+HEX+5,            /* 35 5     */
        DIGIT+HEX+6,            /* 36 6     */
        DIGIT+HEX+7,            /* 37 7     */
        DIGIT+HEX+8,            /* 38 8     */
        DIGIT+HEX+9,            /* 39 9     */
        PUNCT,                  /* 3A :     */
        PUNCT,                  /* 3B ;     */
        PUNCT,                  /* 3C <     */
        PUNCT,                  /* 3D =     */
        PUNCT,                  /* 3E >     */
        PUNCT,                  /* 3F ?     */
        PUNCT,                  /* 40 @     */
        UPPER+HEX+10,           /* 41 A     */
        UPPER+HEX+11,           /* 42 B     */
        UPPER+HEX+12,           /* 43 C     */
        UPPER+HEX+13,           /* 44 D     */
        UPPER+HEX+14,           /* 45 E     */
        UPPER+HEX+15,           /* 46 F     */
        UPPER+16,               /* 47 G     */
        UPPER+17,               /* 48 H     */
        UPPER+18,               /* 49 I     */
        UPPER+19,               /* 4A J     */
        UPPER+20,               /* 4B K     */
        UPPER+21,               /* 4C L     */
        UPPER+22,               /* 4D M     */
        UPPER+23,               /* 4E N     */
        UPPER+24,               /* 4F O     */
        UPPER+25,               /* 50 P     */
        UPPER+26,               /* 51 Q     */
        UPPER+27,               /* 52 R     */
        UPPER+28,               /* 53 S     */
        UPPER+29,               /* 54 T     */
        UPPER+30,               /* 55 U     */
        UPPER+31,               /* 56 V     */
        UPPER+32,               /* 57 W     */
        UPPER+33,               /* 58 X     */
        UPPER+34,               /* 59 Y     */
        UPPER+35,               /* 5A Z     */
        PUNCT,                  /* 5B [     */
        PUNCT,                  /* 5C \\     */
        PUNCT,                  /* 5D ]     */
        PUNCT,                  /* 5E ^     */
        PUNCT|UNDER,            /* 5F _     */
        PUNCT,                  /* 60 `     */
        LOWER+HEX+10,           /* 61 a     */
        LOWER+HEX+11,           /* 62 b     */
        LOWER+HEX+12,           /* 63 c     */
        LOWER+HEX+13,           /* 64 d     */
        LOWER+HEX+14,           /* 65 e     */
        LOWER+HEX+15,           /* 66 f     */
        LOWER+16,               /* 67 g     */
        LOWER+17,               /* 68 h     */
        LOWER+18,               /* 69 i     */
        LOWER+19,               /* 6A j     */
        LOWER+20,               /* 6B k     */
        LOWER+21,               /* 6C l     */
        LOWER+22,               /* 6D m     */
        LOWER+23,               /* 6E n     */
        LOWER+24,               /* 6F o     */
        LOWER+25,               /* 70 p     */
        LOWER+26,               /* 71 q     */
        LOWER+27,               /* 72 r     */
        LOWER+28,               /* 73 s     */
        LOWER+29,               /* 74 t     */
        LOWER+30,               /* 75 u     */
        LOWER+31,               /* 76 v     */
        LOWER+32,               /* 77 w     */
        LOWER+33,               /* 78 x     */
        LOWER+34,               /* 79 y     */
        LOWER+35,               /* 7A z     */
        PUNCT,                  /* 7B {     */
        PUNCT,                  /* 7C |     */
        PUNCT,                  /* 7D }     */
        PUNCT,                  /* 7E ~     */
        CNTRL,                  /* 7F (DEL) */
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9435010 "getType"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435138 "isType"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435266 "isAscii"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435394 "isAlpha"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435522 "isDigit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435650 "isAlnum"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435778 "isGraph"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9435906 "isPrint"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436034 "isPunct"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436162 "isSpace"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436290 "isHexDigit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436418 "isOctDigit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436546 "isCntrl"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436674 "isLower"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436802 "isUpper"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9436930 "isWord"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9437058 "toDigit"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9437186 "toLower"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9437314 "toUpper"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1145218 "PatternSyntaxException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown to indicate a syntax error in a
regular-expression pattern.

@author  unascribed
@since 1.4
@spec JSR-51
"
      classrelation 3706370 // <generalisation>
	relation 3706370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3706370 // <generalisation>
	  b parent class_ref 187778 // IllegalArgumentException
      end

      attribute 2211586 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3864639126226059218L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3706498 // desc (<unidirectional association>)
	relation 3706498 --->
	  a role_name "desc" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3706498 // desc (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3706626 // pattern (<unidirectional association>)
	relation 3706626 --->
	  a role_name "pattern" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3706626 // pattern (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2211714 "index"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9473410 "PatternSyntaxException"
	public explicit_return_type ""
	nparams 3
	  param inout name "desc" type class_ref 128130 // String
	  param inout name "regex" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class.

@param  desc
        A description of the error

@param  regex
        The erroneous pattern

@param  index
        The approximate index in the pattern of the error,
        or <tt>-1</tt> if the index is not known
"
      end

      operation 9473538 "getIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the error index.

@return  The approximate index in the pattern of the error,
        or <tt>-1</tt> if the index is not known
"
      end

      operation 9473666 "getDescription"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the description of the error.

@return  The description of the error
"
      end

      operation 9473794 "getPattern"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the erroneous regular-expression pattern.

@return  The erroneous pattern
"
      end

      classrelation 3706754 // nl (<unidirectional association>)
	relation 3706754 --->
	  a role_name "nl" init_value "
        java.security.AccessController
            .doPrivileged(new GetPropertyAction(\"line.separator\"))" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3706754 // nl (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 9473922 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a multi-line string containing the description of the syntax
error and its index, the erroneous regular-expression pattern, and a
visual indication of the error index within the pattern.

@return  The full detail message
"
      end
    end

    class 1148162 "UnicodeProp"
      visibility package stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 2211842 "ALPHABETIC"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.isAlphabetic(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2211970 "LETTER"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.isLetter(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212098 "IDEOGRAPHIC"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.isIdeographic(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212226 "LOWERCASE"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.isLowerCase(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212354 "UPPERCASE"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.isUpperCase(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212482 "TITLECASE"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.isTitleCase(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212610 "WHITE_SPACE"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{Whitespace}
        public boolean is(int ch) {
            return ((((1 << Character.SPACE_SEPARATOR) |
                      (1 << Character.LINE_SEPARATOR) |
                      (1 << Character.PARAGRAPH_SEPARATOR)) >> Character.getType(ch)) & 1)
                   != 0 || (ch >= 0x9 && ch <= 0xd) || (ch == 0x85);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212738 "CONTROL"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{gc=Control}
        public boolean is(int ch) {
            return Character.getType(ch) == Character.CONTROL;
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212866 "PUNCTUATION"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{gc=Punctuation}
        public boolean is(int ch) {
            return ((((1 << Character.CONNECTOR_PUNCTUATION) |
                      (1 << Character.DASH_PUNCTUATION) |
                      (1 << Character.START_PUNCTUATION) |
                      (1 << Character.END_PUNCTUATION) |
                      (1 << Character.OTHER_PUNCTUATION) |
                      (1 << Character.INITIAL_QUOTE_PUNCTUATION) |
                      (1 << Character.FINAL_QUOTE_PUNCTUATION)) >> Character.getType(ch)) & 1)
                   != 0;
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2212994 "HEX_DIGIT"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{gc=Decimal_Number}
        // \\p{Hex_Digit}    -> PropList.txt: Hex_Digit
        public boolean is(int ch) {
            return DIGIT.is(ch) ||
                   (ch >= 0x0030 && ch <= 0x0039) ||
                   (ch >= 0x0041 && ch <= 0x0046) ||
                   (ch >= 0x0061 && ch <= 0x0066) ||
                   (ch >= 0xFF10 && ch <= 0xFF19) ||
                   (ch >= 0xFF21 && ch <= 0xFF26) ||
                   (ch >= 0xFF41 && ch <= 0xFF46);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213122 "ASSIGNED"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        public boolean is(int ch) {
            return Character.getType(ch) != Character.UNASSIGNED;
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213250 "NONCHARACTER_CODE_POINT"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // PropList.txt:Noncharacter_Code_Point
        public boolean is(int ch) {
            return (ch & 0xfffe) == 0xfffe || (ch >= 0xfdd0 && ch <= 0xfdef);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213378 "DIGIT"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{gc=Decimal_Number}
        public boolean is(int ch) {
            return Character.isDigit(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213506 "ALNUM"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{alpha}
        // \\p{digit}
        public boolean is(int ch) {
            return ALPHABETIC.is(ch) || DIGIT.is(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213634 "BLANK"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{Whitespace} --
        // [\\N{LF} \\N{VT} \\N{FF} \\N{CR} \\N{NEL}  -> 0xa, 0xb, 0xc, 0xd, 0x85
        //  \\p{gc=Line_Separator}
        //  \\p{gc=Paragraph_Separator}]
        public boolean is(int ch) {
            return Character.getType(ch) == Character.SPACE_SEPARATOR ||
                   ch == 0x9; // \\N{HT}
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213762 "GRAPH"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // [^
        //  \\p{space}
        //  \\p{gc=Control}
        //  \\p{gc=Surrogate}
        //  \\p{gc=Unassigned}]
        public boolean is(int ch) {
            return ((((1 << Character.SPACE_SEPARATOR) |
                      (1 << Character.LINE_SEPARATOR) |
                      (1 << Character.PARAGRAPH_SEPARATOR) |
                      (1 << Character.CONTROL) |
                      (1 << Character.SURROGATE) |
                      (1 << Character.UNASSIGNED)) >> Character.getType(ch)) & 1)
                   == 0;
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2213890 "PRINT"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        // \\p{graph}
        // \\p{blank}
        // -- \\p{cntrl}
        public boolean is(int ch) {
            return (GRAPH.is(ch) || BLANK.is(ch)) && !CONTROL.is(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2214018 "WORD"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        //  \\p{alpha}
        //  \\p{gc=Mark}
        //  \\p{digit}
        //  \\p{gc=Connector_Punctuation}
        //  \\p{Join_Control}    200C..200D

        public boolean is(int ch) {
            return ALPHABETIC.is(ch) ||
                   ((((1 << Character.NON_SPACING_MARK) |
                      (1 << Character.ENCLOSING_MARK) |
                      (1 << Character.COMBINING_SPACING_MARK) |
                      (1 << Character.DECIMAL_DIGIT_NUMBER) |
                      (1 << Character.CONNECTOR_PUNCTUATION)) >> Character.getType(ch)) & 1)
                   != 0 ||
                   JOIN_CONTROL.is(ch);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2214146 "JOIN_CONTROL"
	public type class_ref 1148162 // UnicodeProp
	cpp_decl ""
	java_decl "  ${@}${name} {
        //  200C..200D    PropList.txt:Join_Control
        public boolean is(int ch) {
           return (ch == 0x200C || ch == 0x200D);
        }
    },${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3706882 // posix (<unidirectional association>)
	relation 3706882 --->
	  a role_name "posix" init_value " new HashMap<>()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 3706882 // posix (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 3707010 // aliases (<unidirectional association>)
	relation 3707010 --->
	  a role_name "aliases" init_value " new HashMap<>()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 3707010 // aliases (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      extra_member 178690 "initialization"
	
	cpp "" ""
	java "  static {
        posix.put(\"ALPHA\", \"ALPHABETIC\");
        posix.put(\"LOWER\", \"LOWERCASE\");
        posix.put(\"UPPER\", \"UPPERCASE\");
        posix.put(\"SPACE\", \"WHITE_SPACE\");
        posix.put(\"PUNCT\", \"PUNCTUATION\");
        posix.put(\"XDIGIT\",\"HEX_DIGIT\");
        posix.put(\"ALNUM\", \"ALNUM\");
        posix.put(\"CNTRL\", \"CONTROL\");
        posix.put(\"DIGIT\", \"DIGIT\");
        posix.put(\"BLANK\", \"BLANK\");
        posix.put(\"GRAPH\", \"GRAPH\");
        posix.put(\"PRINT\", \"PRINT\");

        aliases.put(\"WHITESPACE\", \"WHITE_SPACE\");
        aliases.put(\"HEXDIGIT\",\"HEX_DIGIT\");
        aliases.put(\"NONCHARACTERCODEPOINT\", \"NONCHARACTER_CODE_POINT\");
        aliases.put(\"JOINCONTROL\", \"JOIN_CONTROL\");
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9474050 "forName"
	class_operation public return_type class_ref 1148162 // UnicodeProp
	nparams 1
	  param inout name "propName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9474178 "forPOSIXName"
	class_operation public return_type class_ref 1148162 // UnicodeProp
	nparams 1
	  param inout name "propName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9474306 "is"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 171522 "regex"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 824962 "ASCII"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1144706 // ASCII
      end
      comment "Copyright (c) 1999, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 825090 "MatchResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1091330 // MatchResult
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 825218 "Matcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 834690 // Matcher
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 825346 "Pattern"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.Normalizer;
import java.util.Locale;
import java.util.Iterator;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Arrays;
import java.util.NoSuchElementException;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.function.Predicate;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 417154 // Pattern
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 825474 "PatternSyntaxException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.security.action.GetPropertyAction;
${definition}"
      associated_elems
	class_ref 1145218 // PatternSyntaxException
      end
      comment "Copyright (c) 1999, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 825602 "UnicodeProp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 1148162 // UnicodeProp
      end
      comment "Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
