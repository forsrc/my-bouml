format 222
"xni" // jdk1.8::com::sun::org::apache::xerces::internal::xni
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/xni/"
  java_package "com.sun.org.apache.xerces.internal.xni"
  package_ref 167810 // parser

  classview 161154 "xni"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 657794 "XNIException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is the base exception of all XNI exceptions. It
can be constructed with an error message or used to wrap another
exception object.
<p>
<strong>Note:</strong> By extending the Java
<code>RuntimeException</code>, XNI handlers and components are
not required to catch XNI exceptions but may explicitly catch
them, if so desired.

@author Andy Clark, IBM

@version $Id: XNIException.java,v 1.6 2010-11-01 04:40:19 joehw Exp $
"
      classrelation 2227714 // <generalisation>
	relation 2227714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2227714 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1125762 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 9019819772686063775L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      classrelation 2227842 // fException (<unidirectional association>)
	relation 2227842 --->
	  a role_name "fException" private
	    comment " Data

 The wrapped exception. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2227842 // fException (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      operation 5162754 "XNIException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Constructs an XNI exception with a message.

@param message The exception message.
"
      end

      operation 5162882 "XNIException"
	public explicit_return_type ""
	nparams 1
	  param inout name "exception" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String)

Constructs an XNI exception with a wrapped exception.

@param exception The wrapped exception.
"
      end

      operation 5163010 "XNIException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "exception" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(Exception)

Constructs an XNI exception with a message and wrapped exception.

@param message The exception message.
@param exception The wrapped exception.
"
      end

      operation 5163138 "getException"
	public return_type class_ref 132226 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(Exception,String)

 Public methods

 Returns the wrapped exception. "
      end

      operation 5163266 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getException():Exception"
      end
    end

    class 658050 "XMLDocumentHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The document handler interface defines callback methods to report
information items in XML documents. Parser components interested in
document information implement this interface and are registered
as the document handler on the document source.

@author Andy Clark, IBM

"
      operation 4291842 "startDocument"
	public explicit_return_type "void"
	nparams 4
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 660994 // NamespaceContext
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDocumentHandler methods


The start of the document.

@param locator  The document locator, or null if the document
                location cannot be reported during the parsing
                of this document. However, it is <em>strongly</em>
                recommended that a locator be supplied that can
                at least report the system identifier of the
                document.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param namespaceContext
                The namespace context in effect at the
                start of this document.
                This object represents the current context.
                Implementors of this class are responsible
                for copying the namespace bindings from the
                the current context (and its parent contexts)
                if that information is important.

@param augs     Additional information that may include infoset augmentations
@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4291970 "xmlDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "standalone" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of an XMLDecl line in the document. If
present, this method will be called immediately following the
startDocument call.

@param version    The XML version.
@param encoding   The IANA encoding name of the document, or null if
                  not specified.
@param standalone The standalone value, or null if not specified.
@param augs       Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4292098 "doctypeDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "rootElement" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of the DOCTYPE line in the document.

@param rootElement
                The name of the root element.
@param publicId The public identifier if an external DTD or null
                if the external DTD is specified using SYSTEM.
@param systemId The system identifier if an external DTD, null
                otherwise.
@param augs     Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4292226 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A comment.

@param text   The text in the comment.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by application to signal an error.
"
      end

      operation 4292354 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4292482 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of an element.

@param element    The name of the element.
@param attributes The element attributes.
@param augs       Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4292610 "emptyElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An empty element.

@param element    The name of the element.
@param attributes The element attributes.
@param augs       Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4292738 "startGeneralEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the start of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name     The name of the general entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param augs     Additional information that may include infoset augmentations

@exception XNIException Thrown by handler to signal an error.
"
      end

      operation 4292866 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startEntity call.
<p>
<strong>Note:</strong> This method will never be called for the
document entity; it is only called for external general entities
referenced in document content.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.
@param augs     Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4292994 "endGeneralEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the end of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name   The name of the entity.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293122 "characters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Character content.

@param text   The content.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293250 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ignorable whitespace. For this method to be called, the document
source must have some way of determining that the text containing
only whitespace characters should be considered ignorable. For
example, the validator can determine if a length of whitespace
characters in the document are ignorable based on the element
content model.

@param text   The ignorable whitespace.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293378 "endElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of an element.

@param element The name of the element.
@param augs    Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293506 "startCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of a CDATA section.

@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293634 "endCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a CDATA section.

@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293762 "endDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of the document.

@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4293890 "setDocumentSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 661762 // XMLDocumentSource
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the document source. "
      end

      operation 4294018 "getDocumentSource"
	public return_type class_ref 661762 // XMLDocumentSource
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the document source. "
      end
    end

    class 658178 "XMLDTDHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD handler interface defines callback methods to report
information items in the DTD of an XML document. Parser components
interested in DTD information implement this interface and are
registered as the DTD handler on the DTD source.

@see XMLDTDContentModelHandler

@author Andy Clark, IBM

"
      attribute 946050 "CONDITIONAL_INCLUDE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants


Conditional section: INCLUDE.

@see #CONDITIONAL_IGNORE

"
      end

      attribute 946178 "CONDITIONAL_IGNORE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Conditional section: IGNORE.

@see #CONDITIONAL_INCLUDE

"
      end

      operation 4428546 "startDTD"
	public explicit_return_type "void"
	nparams 2
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDTDHandler methods


The start of the DTD.

@param locator  The document locator, or null if the document
                location cannot be reported during the parsing of
                the document DTD. However, it is <em>strongly</em>
                recommended that a locator be supplied that can
                at least report the base system identifier of the
                DTD.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4428674 "startParameterEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies of the start of a parameter entity. The parameter
entity name start with a '%' character.

@param name     The name of the parameter entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal parameter entities).
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4428802 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startEntity call.
<p>
<strong>Note:</strong> This method is only called for external
parameter entities referenced in the DTD.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4428930 "endParameterEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the end of a parameter entity. Parameter entity
names begin with a '%' character.

@param name The name of the parameter entity.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4429058 "startExternalSubset"
	public explicit_return_type "void"
	nparams 2
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of the DTD external subset.

@param identifier The resource identifier.
@param augmentations
                  Additional information that may include infoset
                  augmentations.
@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4429186 "endExternalSubset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of the DTD external subset.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4429314 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A comment.

@param text The text in the comment.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by application to signal an error.
"
      end

      operation 4429442 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4429570 "elementDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "contentModel" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An element declaration.

@param name         The name of the element.
@param contentModel The element content model.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4429698 "startAttlist"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of an attribute list.

@param elementName The name of the element that this attribute
                   list is associated with.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4429826 "attributeDecl"
	public explicit_return_type "void"
	nparams 8
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attributeName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "enumeration" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "defaultType" type class_ref 128130 // String
	  param inout name "defaultValue" type class_ref 661250 // XMLString
	  param inout name "nonNormalizedDefaultValue" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An attribute declaration.

@param elementName   The name of the element that this attribute
                     is associated with.
@param attributeName The name of the attribute.
@param type          The attribute type. This value will be one of
                     the following: \"CDATA\", \"ENTITY\", \"ENTITIES\",
                     \"ENUMERATION\", \"ID\", \"IDREF\", \"IDREFS\",
                     \"NMTOKEN\", \"NMTOKENS\", or \"NOTATION\".
@param enumeration   If the type has the value \"ENUMERATION\" or
                     \"NOTATION\", this array holds the allowed attribute
                     values; otherwise, this array is null.
@param defaultType   The attribute default type. This value will be
                     one of the following: \"#FIXED\", \"#IMPLIED\",
                     \"#REQUIRED\", or null.
@param defaultValue  The attribute default value, or null if no
                     default value is specified.
@param nonNormalizedDefaultValue  The attribute default value with no normalization
                     performed, or null if no default value is specified.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4429954 "endAttlist"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of an attribute list.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430082 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "nonNormalizedText" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An internal entity declaration.

@param name The name of the entity. Parameter entity names start with
            '%', whereas the name of a general entity is just the
            entity name.
@param text The value of the entity.
@param nonNormalizedText The non-normalized value of the entity. This
            value contains the same sequence of characters that was in
            the internal entity declaration, without any entity
            references expanded.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430210 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An external entity declaration.

@param name     The name of the entity. Parameter entity names start
                with '%', whereas the name of a general entity is just
                the entity name.
@param identifier    An object containing all location information
                     pertinent to this external entity.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430338 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "notation" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An unparsed entity declaration.

@param name     The name of the entity.
@param identifier    An object containing all location information
                     pertinent to this unparsed entity declaration.
@param notation The name of the notation.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430466 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A notation declaration

@param name     The name of the notation.
@param identifier    An object containing all location information
                     pertinent to this notation.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430594 "startConditional"
	public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "short"
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of a conditional section.

@param type The type of the conditional section. This value will
            either be CONDITIONAL_INCLUDE or CONDITIONAL_IGNORE.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #CONDITIONAL_INCLUDE
@see #CONDITIONAL_IGNORE
"
      end

      operation 4430722 "ignoredCharacters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Characters within an IGNORE conditional section.

@param text The ignored text.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430850 "endConditional"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a conditional section.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4430978 "endDTD"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of the DTD.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4431106 "setDTDSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 670722 // XMLDTDSource
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " set the source of this handler"
      end

      operation 4431234 "getDTDSource"
	public return_type class_ref 670722 // XMLDTDSource
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return the source from which this handler derives its events"
      end
    end

    class 658306 "XMLDTDContentModelHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD content model handler interface defines callback methods
to report information items in DTD content models of an element
declaration. Parser components interested in DTD content model
information implement this interface and are registered as the DTD
content model handler on the DTD content model source.

@see XMLDTDHandler

@author Andy Clark, IBM

"
      attribute 946306 "SEPARATOR_CHOICE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 separators

A choice separator for children and mixed content models. This
separator is used to specify that the allowed child is one of a
collection.
<p>
For example:
<pre>
&lt;!ELEMENT elem (foo|bar)&gt;
&lt;!ELEMENT elem (foo|bar+)&gt;
&lt;!ELEMENT elem (foo|bar|baz)&gt;
&lt;!ELEMENT elem (#PCDATA|foo|bar)*&gt;
</pre>

@see #SEPARATOR_SEQUENCE

"
      end

      attribute 946434 "SEPARATOR_SEQUENCE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A sequence separator for children content models. This separator
is used to specify that the allowed children must follow in the
specified sequence.
<p>
<pre>
&lt;!ELEMENT elem (foo,bar)&gt;
&lt;!ELEMENT elem (foo,bar*)&gt;
&lt;!ELEMENT elem (foo,bar,baz)&gt;
</pre>

@see #SEPARATOR_CHOICE

"
      end

      attribute 946562 "OCCURS_ZERO_OR_ONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " occurrence counts

This occurrence count limits the element, choice, or sequence in a
children content model to zero or one. In other words, the child
is optional.
<p>
For example:
<pre>
&lt;!ELEMENT elem (foo?)&gt;
</pre>

@see #OCCURS_ZERO_OR_MORE
@see #OCCURS_ONE_OR_MORE

"
      end

      attribute 946690 "OCCURS_ZERO_OR_MORE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This occurrence count limits the element, choice, or sequence in a
children content model to zero or more. In other words, the child
may appear an arbitrary number of times, or not at all. This
occurrence count is also used for mixed content models.
<p>
For example:
<pre>
&lt;!ELEMENT elem (foo*)&gt;
&lt;!ELEMENT elem (#PCDATA|foo|bar)*&gt;
</pre>

@see #OCCURS_ZERO_OR_ONE
@see #OCCURS_ONE_OR_MORE

"
      end

      attribute 946818 "OCCURS_ONE_OR_MORE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This occurrence count limits the element, choice, or sequence in a
children content model to one or more. In other words, the child
may appear an arbitrary number of times, but must appear at least
once.
<p>
For example:
<pre>
&lt;!ELEMENT elem (foo+)&gt;
</pre>

@see #OCCURS_ZERO_OR_ONE
@see #OCCURS_ZERO_OR_MORE

"
      end

      operation 4431362 "startContentModel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDTDContentModelHandler methods


The start of a content model. Depending on the type of the content
model, specific methods may be called between the call to the
startContentModel method and the call to the endContentModel method.

@param elementName The name of the element.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4431490 "any"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A content model of ANY.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #empty
@see #startGroup
"
      end

      operation 4431618 "empty"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A content model of EMPTY.

@throws XNIException Thrown by handler to signal an error.

@param augmentations Additional information that may include infoset
                     augmentations.

@see #any
@see #startGroup
"
      end

      operation 4431746 "startGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A start of either a mixed or children content model. A mixed
content model will immediately be followed by a call to the
<code>pcdata()</code> method. A children content model will
contain additional groups and/or elements.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #any
@see #empty
"
      end

      operation 4431874 "pcdata"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The appearance of \"#PCDATA\" within a group signifying a
mixed content model. This method will be the first called
following the content model's <code>startGroup()</code>.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #startGroup
"
      end

      operation 4432002 "element"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A referenced element in a mixed or children content model.

@param elementName The name of the referenced element.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4432130 "separator"
	public explicit_return_type "void"
	nparams 2
	  param in name "separator" explicit_type "short"
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The separator between choices or sequences of a mixed or children
content model.

@param separator The type of children separator.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #SEPARATOR_CHOICE
@see #SEPARATOR_SEQUENCE
"
      end

      operation 4432258 "occurrence"
	public explicit_return_type "void"
	nparams 2
	  param in name "occurrence" explicit_type "short"
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The occurrence count for a child in a children content model or
for the mixed content model group.

@param occurrence The occurrence count for the last element
                  or group.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #OCCURS_ZERO_OR_ONE
@see #OCCURS_ZERO_OR_MORE
@see #OCCURS_ONE_OR_MORE
"
      end

      operation 4432386 "endGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a group for mixed or children content models.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4432514 "endContentModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a content model.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4432642 "setDTDContentModelSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 670850 // XMLDTDContentModelSource
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " set content model source"
      end

      operation 4432770 "getDTDContentModelSource"
	public return_type class_ref 670850 // XMLDTDContentModelSource
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " get content model source"
      end
    end

    class 660866 "XMLLocator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Location information.

@author Andy Clark, IBM

"
      operation 4376066 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLLocator methods

 Returns the public identifier. "
      end

      operation 4376194 "getLiteralSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the literal system identifier. "
      end

      operation 4376322 "getBaseSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the base system identifier. "
      end

      operation 4376450 "getExpandedSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the expanded system identifier. "
      end

      operation 4376578 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the line number, or <code>-1</code> if no line number is available. "
      end

      operation 4376706 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the column number, or <code>-1</code> if no column number is available. "
      end

      operation 4376834 "getCharacterOffset"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the character offset, or <code>-1</code> if no character offset is available. "
      end

      operation 4376962 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoding of the current entity.
Note that, for a given entity, this value can only be
considered final once the encoding declaration has been read (or once it
has been determined that there is no such declaration) since, no encoding
having been specified on the XMLInputSource, the parser
will make an initial \"guess\" which could be in error.
"
      end

      operation 4377090 "getXMLVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the XML version of the current entity. This will normally be the
value from the XML or text declaration or defaulted by the parser. Note that
that this value may be different than the version of the processing rules
applied to the current entity. For instance, an XML 1.1 document may refer to
XML 1.0 entities. In such a case the rules of XML 1.1 are applied to the entire
document. Also note that, for a given entity, this value can only be considered
final once the XML or text declaration has been read or once it has been
determined that there is no such declaration.
"
      end
    end

    class 660994 "NamespaceContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an interface to query namespace information.
<p>
The prefix and namespace must be identical references for equal strings, thus
each string should be internalized (@see String.intern())
or added to the <code>SymbolTable</code>

@see <a href=\"../../../../../xerces2/com/sun/org/apache/xerces/internal/util/SymbolTable.html\">
com.sun.org.apache.xerces.internal.util.SymbolTable</a>

@author Andy Clark, IBM

"
      classrelation 1970306 // XML_URI (<unidirectional association>)
	relation 1970306 --->
	  a role_name "XML_URI" init_value " \"http://www.w3.org/XML/1998/namespace\".intern()" class_relation const_relation public
	    comment " Constants


The XML Namespace (\"http://www.w3.org/XML/1998/namespace\"). This is
the Namespace URI that is automatically mapped to the \"xml\" prefix.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1970306 // XML_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1970434 // XMLNS_URI (<unidirectional association>)
	relation 1970434 --->
	  a role_name "XMLNS_URI" init_value " \"http://www.w3.org/2000/xmlns/\".intern()" class_relation const_relation public
	    comment "
XML Information Set REC
all namespace attributes (including those named xmlns,
whose [prefix] property has no value) have a namespace URI of http://www.w3.org/2000/xmlns/

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1970434 // XMLNS_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4655874 "pushContext"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NamespaceContext methods


Start a new Namespace context.
<p>
A new context should be pushed at the beginning
of each XML element: the new context will automatically inherit
the declarations of its parent context, but it will also keep
track of which declarations were made within this context.
<p>

@see #popContext
"
      end

      operation 4656002 "popContext"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Revert to the previous Namespace context.
<p>
The context should be popped at the end of each
XML element.  After popping the context, all Namespace prefix
mappings that were previously in force are restored.
<p>
Users must not attempt to declare additional Namespace
prefixes after popping a context, unless you push another
context first.

@see #pushContext
"
      end

      operation 4656130 "declarePrefix"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Declare a Namespace prefix.
<p>
This method declares a prefix in the current Namespace
context; the prefix will remain in force until this context
is popped, unless it is shadowed in a descendant context.
<p>
Note that to declare a default Namespace, use the empty string.
The prefixes \"xml\" and \"xmlns\" can't be rebound.
<p>
Note that you must <em>not</em> declare a prefix after
you've pushed and popped another Namespace.

@param prefix The prefix to declare, or null for the empty
       string.
@param uri The Namespace URI to associate with the prefix.

@return true if the prefix was legal, false otherwise

@see #getURI
@see #getDeclaredPrefixAt
"
      end

      operation 4656258 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up a prefix and get the currently-mapped Namespace URI.
<p>
This method looks up the prefix in the current context. If no mapping
is found, this methods will continue lookup in the parent context(s).
Use the empty string (\"\") for the default Namespace.

@param prefix The prefix to look up.

@return The associated Namespace URI, or null if the prefix
        is undeclared in this context.
"
      end

      operation 4656386 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up a namespace URI and get one of the mapped prefix.
<p>
This method looks up the namespace URI in the current context.
If more than one prefix is currently mapped to the same URI,
this method will make an arbitrary selection
If no mapping is found, this methods will continue lookup in the
parent context(s).

@param uri The namespace URI to look up.

@return One of the associated prefixes, or null if the uri
        does not map to any prefix.

@see #getPrefix
"
      end

      operation 4656514 "getDeclaredPrefixCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a count of locally declared prefixes, including
the default prefix if bound.
"
      end

      operation 4656642 "getDeclaredPrefixAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prefix at the specified index in the current context.
"
      end

      operation 4656770 "getAllPrefixes"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an enumeration of all prefixes whose declarations are active
in the current context. This includes declarations from parent contexts
that have not been overridden.
@return Enumeration
"
      end

      operation 4656898 "reset"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset this Namespace support object for reuse.

<p>It is necessary to invoke this method before reusing the
Namespace support object for a new session.</p>

<p>Note that implementations of this method need to ensure that
the declaration of the prefixes \"xmlns\" and \"xml\" are available.</p>
"
      end
    end

    class 661122 "Augmentations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Augmentations interface defines a table of additional data that may
be passed along the document pipeline. The information can contain extra
arguments or infoset augmentations, for example PSVI. This additional
information is identified by a String key.
<p>
<strong>Note:</strong>
Methods that receive Augmentations are required to copy the information
if it is to be saved for use beyond the scope of the method.
The Augmentations content is volatile, and maybe modified by any method in
any component in the pipeline. Therefore, methods passed this structure
should not save any reference to the structure.

@author Elena Litani, IBM
"
      operation 5043458 "putItem"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "item" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add additional information identified by a key to the Augmentations structure.

@param key    Identifier, can't be <code>null</code>
@param item   Additional information

@return the previous value of the specified key in the Augmentations structure,
        or <code>null</code> if it did not have one.
"
      end

      operation 5043586 "getItem"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get information identified by a key from the Augmentations structure

@param key    Identifier, can't be <code>null</code>

@return the value to which the key is mapped in the Augmentations structure;
        <code>null</code> if the key is not mapped to any value.
"
      end

      operation 5043714 "removeItem"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove additional info from the Augmentations structure

@param key    Identifier, can't be <code>null</code>
@return the previous value of the specified key in the Augmentations structure,
        or <code>null</code> if it did not have one.
"
      end

      operation 5043842 "keys"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the keys in the Augmentations structure

"
      end

      operation 5043970 "removeAllItems"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all objects from the Augmentations structure.
"
      end
    end

    class 661250 "XMLString"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used as a structure to pass text contained in the underlying
character buffer of the scanner. The offset and length fields allow the
buffer to be re-used without creating new character arrays.
<p>
<strong>Note:</strong> Methods that are passed an XMLString structure
should consider the contents read-only and not make any modifications
to the contents of the buffer. The method receiving this structure
should also not modify the offset and length if this structure (or
the values of this structure) are passed to another method.
<p>
<strong>Note:</strong> Methods that are passed an XMLString structure
are required to copy the information out of the buffer if it is to be
saved for use beyond the scope of the method. The contents of the
structure are volatile and the contents of the character buffer cannot
be assured once the method that is passed this structure returns.
Therefore, methods passed this structure should not save any reference
to the structure or the character array contained in the structure.

@author Eric Ye, IBM
@author Andy Clark, IBM

"
      attribute 1115266 "ch"
	public explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 The character array. 
"
      end

      attribute 1115394 "offset"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The offset into the character array. 
"
      end

      attribute 1115522 "length"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The length of characters from the offset. 
"
      end

      operation 5117442 "XMLString"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 5117570 "XMLString"
	public explicit_return_type ""
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs an XMLString structure preset with the specified
values.

@param ch     The character array.
@param offset The offset into the character array.
@param length The length of characters from the offset.
"
      end

      operation 5117698 "XMLString"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(char[],int,int)

Constructs an XMLString structure with copies of the values in
the given structure.
<p>
<strong>Note:</strong> This does not copy the character array;
only the reference to the array is copied.

@param string The XMLString to copy.
"
      end

      operation 5117826 "setValues"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(XMLString)

 Public methods


Initializes the contents of the XMLString structure with the
specified values.

@param ch     The character array.
@param offset The offset into the character array.
@param length The length of characters from the offset.
"
      end

      operation 5117954 "setValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(char[],int,int)

Initializes the contents of the XMLString structure with copies
of the given string structure.
<p>
<strong>Note:</strong> This does not copy the character array;
only the reference to the array is copied.

@param s
"
      end

      operation 5118082 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(XMLString)
 Resets all of the values to their defaults. "
      end

      operation 5118210 "equals"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear()

Returns true if the contents of this XMLString structure and
the specified array are equal.

@param ch     The character array.
@param offset The offset into the character array.
@param length The length of characters from the offset.
"
      end

      operation 5118338 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " equals(char[],int,int):boolean

Returns true if the contents of this XMLString structure and
the specified string are equal.

@param s The string to compare.
"
      end

      operation 5118466 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " equals(String):boolean

 Object methods

 Returns a string representation of this object. "
      end
    end

    class 661378 "QName"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A structure that holds the components of an XML Namespaces qualified
name.
<p>
To be used correctly, the strings must be identical references for
equal strings. Within the parser, these values are considered symbols
and should always be retrieved from the <code>SymbolTable</code>.

@see <a href=\"../../../../../xerces2/com/sun/org/apache/xerces/internal/util/SymbolTable.html\">com.sun.org.apache.xerces.internal.util.SymbolTable</a>

@author Andy Clark, IBM

Better performance patch for the equals method by Daniel Petersson: refer to jaxp issue 61;
== were used to compare strings
@author Joe Wang, Oracle

@version $Id: QName.java,v 1.6 2010/03/18 19:32:31 joehw Exp $
"
      classrelation 1919746 // <realization>
	relation 1919746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1919746 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 1919874 // prefix (<unidirectional association>)
	relation 1919874 --->
	  a role_name "prefix" public
	    comment "
The qname prefix. For example, the prefix for the qname \"a:foo\"
is \"a\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1919874 // prefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1920002 // localpart (<unidirectional association>)
	relation 1920002 --->
	  a role_name "localpart" public
	    comment "
The qname localpart. For example, the localpart for the qname \"a:foo\"
is \"foo\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1920002 // localpart (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1920130 // rawname (<unidirectional association>)
	relation 1920130 --->
	  a role_name "rawname" public
	    comment "
The qname rawname. For example, the rawname for the qname \"a:foo\"
is \"a:foo\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1920130 // rawname (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1920258 // uri (<unidirectional association>)
	relation 1920258 --->
	  a role_name "uri" public
	    comment "
The URI to which the qname prefix is bound. This binding must be
performed by a XML Namespaces aware processor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1920258 // uri (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4530562 "QName"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4530690 "QName"
	public explicit_return_type ""
	nparams 4
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "rawname" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()
 Constructs a QName with the specified values. "
      end

      operation 4530818 "QName"
	public explicit_return_type ""
	nparams 1
	  param inout name "qname" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(String,String,String,String)
 Constructs a copy of the specified QName. "
      end

      operation 4530946 "setValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qname" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(QName)

 Public methods


Convenience method to set the values of the qname components.

@param QName The qualified name to be copied.
"
      end

      operation 4531074 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "rawname" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(QName)

Convenience method to set the values of the qname components.

@param prefix    The qname prefix. (e.g. \"a\")
@param localpart The qname localpart. (e.g. \"foo\")
@param rawname   The qname rawname. (e.g. \"a:foo\")
@param uri       The URI binding. (e.g. \"http://foo.com/mybinding\")
"
      end

      operation 4531202 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(String,String,String,String)
 Clears the values of the qname components. "
      end

      operation 4531330 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear()

 Cloneable methods

 Returns a clone of this object. "
      end

      operation 4531458 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clone():Object

 Object methods

 Returns the hashcode for this object. "
      end

      operation 4531586 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hashCode():int
 Returns true if the two objects are equal. "
      end

      operation 4531714 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " equals(Object):boolean
 Returns a string representation of this object. "
      end
    end

    class 661506 "XMLAttributes"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XMLAttributes interface defines a collection of attributes for
an element. In the parser, the document source would scan the entire
start element and collect the attributes. The attributes are
communicated to the document handler in the startElement method.
<p>
The attributes are read-write so that subsequent stages in the document
pipeline can modify the values or change the attributes that are
propogated to the next stage.

@see XMLDocumentHandler#startElement

@author Andy Clark, IBM

"
      operation 4295938 "addAttribute"
	public explicit_return_type "int"
	nparams 3
	  param inout name "attrName" type class_ref 661378 // QName
	  param inout name "attrType" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLAttributes methods


Adds an attribute. The attribute's non-normalized value of the
attribute will have the same value as the attribute value until
set using the <code>setNonNormalizedValue</code> method. Also,
the added attribute will be marked as specified in the XML instance
document unless set otherwise using the <code>setSpecified</code>
method.
<p>
<strong>Note:</strong> If an attribute of the same name already
exists, the old values for the attribute are replaced by the new
values.

@param attrName  The attribute name.
@param attrType  The attribute type. The type name is determined by
                 the type specified for this attribute in the DTD.
                 For example: \"CDATA\", \"ID\", \"NMTOKEN\", etc. However,
                 attributes of type enumeration will have the type
                 value specified as the pipe ('|') separated list of
                 the enumeration values prefixed by an open
                 parenthesis and suffixed by a close parenthesis.
                 For example: \"(true|false)\".
@param attrValue The attribute value.

@return Returns the attribute index.

@see #setNonNormalizedValue
@see #setSpecified
"
      end

      operation 4296066 "removeAllAttributes"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the attributes. This method will also remove all
entities associated to the attributes.
"
      end

      operation 4296194 "removeAttributeAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the attribute at the specified index.
<p>
<strong>Note:</strong> This operation changes the indexes of all
attributes following the attribute at the specified index.

@param attrIndex The attribute index.
"
      end

      operation 4296322 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of attributes in the list.
<p>
Once you know the number of attributes, you can iterate
through the list.

@see #getURI(int)
@see #getLocalName(int)
@see #getQName(int)
@see #getType(int)
@see #getValue(int)
"
      end

      operation 4296450 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by XML 1.0 qualified name.

@param qName The qualified (prefixed) name.

@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 4296578 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by Namespace name.

@param uri       The Namespace URI, or the empty string if
                 the name has no Namespace URI.
@param localName The attribute's local name.

@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 4296706 "setName"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrName" type class_ref 661378 // QName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the attribute at the specified index.

@param attrIndex The attribute index.
@param attrName  The new attribute name.
"
      end

      operation 4296834 "getName"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrName" type class_ref 661378 // QName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fields in the given QName structure with the values
of the attribute name at the specified index.

@param attrIndex The attribute index.
@param attrName  The attribute name structure to fill in.
"
      end

      operation 4296962 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prefix of the attribute at the specified index.

@param index The index of the attribute.
"
      end

      operation 4297090 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's Namespace URI by index.

@param index The attribute index (zero-based).

@return The Namespace URI, or the empty string if none
        is available, or null if the index is out of
        range.

@see #getLength
"
      end

      operation 4297218 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's local name by index.

@param index The attribute index (zero-based).

@return The local name, or the empty string if Namespace
        processing is not being performed, or null
        if the index is out of range.

@see #getLength
"
      end

      operation 4297346 "getQName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's XML 1.0 qualified name by index.

@param index The attribute index (zero-based).

@return The XML 1.0 qualified name, or the empty string
        if none is available, or null if the index
        is out of range.

@see #getLength
"
      end

      operation 4297474 "getQualifiedName"
	public return_type class_ref 661378 // QName
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "why the above method doens't return QName ?"
      end

      operation 4297602 "setType"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrType" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of the attribute at the specified index.

@param attrIndex The attribute index.
@param attrType  The attribute type. The type name is determined by
                 the type specified for this attribute in the DTD.
                 For example: \"CDATA\", \"ID\", \"NMTOKEN\", etc. However,
                 attributes of type enumeration will have the type
                 value specified as the pipe ('|') separated list of
                 the enumeration values prefixed by an open
                 parenthesis and suffixed by a close parenthesis.
                 For example: \"(true|false)\".
"
      end

      operation 4297730 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by index.
<p>
The attribute type is one of the strings \"CDATA\", \"ID\",
\"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\",
or \"NOTATION\" (always in upper case).
<p>
If the parser has not read a declaration for the attribute,
or if the parser does not report attribute types, then it must
return the value \"CDATA\" as stated in the XML 1.0 Recommentation
(clause 3.3.3, \"Attribute-Value Normalization\").
<p>
For an enumerated attribute that is not a notation, the
parser will report the type as \"NMTOKEN\".

@param index The attribute index (zero-based).

@return The attribute's type as a string, or null if the
        index is out of range.

@see #getLength
"
      end

      operation 4297858 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by XML 1.0 qualified name.
<p>
See {@link #getType(int) getType(int)} for a description
of the possible types.

@param qName The XML 1.0 qualified name.

@return The attribute type as a string, or null if the
        attribute is not in the list or if qualified names
        are not available.
"
      end

      operation 4297986 "getType"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by Namespace name.
<p>
See {@link #getType(int) getType(int)} for a description
of the possible types.

@param uri       The Namespace URI, or the empty String if the
                 name has no Namespace URI.
@param localName The local name of the attribute.

@return The attribute type as a string, or null if the
        attribute is not in the list or if Namespace
        processing is not being performed.
"
      end

      operation 4298114 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrValue" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the attribute at the specified index. This
method will overwrite the non-normalized value of the attribute.

@param attrIndex The attribute index.
@param attrValue The new attribute value.

@see #setNonNormalizedValue
"
      end

      operation 4298242 "setValue"
	public explicit_return_type "void"
	nparams 3
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrValue" type class_ref 128130 // String
	  param inout name "value" type class_ref 661250 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4298370 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by index.
<p>
If the attribute value is a list of tokens (IDREFS,
ENTITIES, or NMTOKENS), the tokens will be concatenated
into a single string with each token separated by a
single space.

@param index The attribute index (zero-based).

@return The attribute's value as a string, or null if the
        index is out of range.

@see #getLength
"
      end

      operation 4298498 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by XML 1.0 qualified name.
<p>
See {@link #getValue(int) getValue(int)} for a description
of the possible values.

@param qName The XML 1.0 qualified name.

@return The attribute value as a string, or null if the
        attribute is not in the list or if qualified names
        are not available.
"
      end

      operation 4298626 "getValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by Namespace name.
<p>
See {@link #getValue(int) getValue(int)} for a description
of the possible values.

@param uri       The Namespace URI, or the empty String if the
                 name has no Namespace URI.
@param localName The local name of the attribute.

@return The attribute value as a string, or null if the
        attribute is not in the list.
"
      end

      operation 4298754 "setNonNormalizedValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "attrValue" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the non-normalized value of the attribute at the specified
index.

@param attrIndex The attribute index.
@param attrValue The new non-normalized attribute value.
"
      end

      operation 4298882 "getNonNormalizedValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the non-normalized value of the attribute at the specified
index. If no non-normalized value is set, this method will return
the same value as the <code>getValue(int)</code> method.

@param attrIndex The attribute index.
"
      end

      operation 4299010 "setSpecified"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "specified" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether an attribute is specified in the instance document
or not.

@param attrIndex The attribute index.
@param specified True if the attribute is specified in the instance
                 document.
"
      end

      operation 4299138 "isSpecified"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the attribute is specified in the instance document.

@param attrIndex The attribute index.
"
      end

      operation 4299266 "getAugmentations"
	public return_type class_ref 661122 // Augmentations
	nparams 1
	  param in name "attributeIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an augmentation by attribute's index.

@param attributeIndex The attribute index.
@return Augmentations
"
      end

      operation 4299394 "getAugmentations"
	public return_type class_ref 661122 // Augmentations
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an augmentation by namespace name.

@param uri       The Namespace URI, or the empty string if
                 the name has no Namespace URI.
@param localPart
@return Augmentations
"
      end

      operation 4299522 "getAugmentations"
	public return_type class_ref 661122 // Augmentations
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an augmentation by XML 1.0 qualified name.
<p>

@param qName The XML 1.0 qualified name.

@return Augmentations

"
      end

      operation 4299650 "setAugmentations"
	public explicit_return_type "void"
	nparams 2
	  param in name "attrIndex" explicit_type "int"
	  param inout name "augs" type class_ref 661122 // Augmentations
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the augmentations of the attribute at the specified index.

@param attrIndex The attribute index.
@param augs      The augmentations.
"
      end
    end

    class 661634 "XMLResourceIdentifier"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> This represents the basic physical description of the location of any
XML resource (a Schema grammar, a DTD, a general entity etc.) </p>

@author Neil Graham, IBM
"
      operation 4392066 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the public identifier. "
      end

      operation 4392194 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the public identifier. "
      end

      operation 4392322 "setExpandedSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the expanded system identifier. "
      end

      operation 4392450 "getExpandedSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the expanded system identifier. "
      end

      operation 4392578 "setLiteralSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the literal system identifier. "
      end

      operation 4392706 "getLiteralSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the literal system identifier. "
      end

      operation 4392834 "setBaseSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setsthe base URI against which the literal SystemId is to be
resolved."
      end

      operation 4392962 "getBaseSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p> Returns the base URI against which the literal SystemId is to be
resolved. </p> "
      end

      operation 4393090 "setNamespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the namespace of the resource. "
      end

      operation 4393218 "getNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the namespace of the resource. "
      end
    end

    class 740354 "XMLDocumentFragmentHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This handler interface contains methods necessary to receive
information about document elements and content.
<p>
<strong>Note:</strong> Some of these methods overlap methods
found in the XMLDocumentHandler interface.

@see XMLDocumentHandler

@author Andy Clark, IBM
"
      operation 5160962 "startDocumentFragment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "namespaceContext" type class_ref 660994 // NamespaceContext
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDocumentFragmentHandler methods


The start of the document fragment.

@param locator          The document locator, or null if the
                        document location cannot be reported
                        during the parsing of this fragment.
                        However, it is <em>strongly</em>
                        recommended that a locator be supplied
                        that can at least report the base
                        system identifier.
@param namespaceContext The namespace context in effect at the
                        start of this document fragment. This
                        object only represents the current context.
                        Implementors of this class are responsible
                        for copying the namespace bindings from the
                        the current context (and its parent contexts)
                        if that information is important.
@param augmentations    Additional information that may include infoset
                        augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161090 "startGeneralEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the start of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name     The name of the general entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161218 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startEntity call.
<p>
<strong>Note:</strong> This method will never be called for the
document entity; it is only called for external general entities
referenced in document content.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161346 "endGeneralEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the end of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name The name of the general entity.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161474 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A comment.

@param text The text in the comment.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by application to signal an error.
"
      end

      operation 5161602 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161730 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of an element.

@param element    The name of the element.
@param attributes The element attributes.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161858 "emptyElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An empty element.

@param element    The name of the element.
@param attributes The element attributes.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5161986 "characters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Character content.

@param text The content.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5162114 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ignorable whitespace. For this method to be called, the document
source must have some way of determining that the text containing
only whitespace characters should be considered ignorable. For
example, the validator can determine if a length of whitespace
characters in the document are ignorable based on the element
content model.

@param text The ignorable whitespace.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5162242 "endElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of an element.

@param element The name of the element.
@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5162370 "startCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of a CDATA section.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5162498 "endCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a CDATA section.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 5162626 "endDocumentFragment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augmentations" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of the document fragment.

@param augmentations Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end
    end
  end

  deploymentview 154626 "xni"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 456194 "XMLDocumentHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource;
${definition}"
      associated_elems
	class_ref 658050 // XMLDocumentHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 456322 "XMLAttributes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 661506 // XMLAttributes
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 462466 "XMLLocator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 660866 // XMLLocator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 463234 "XMLResourceIdentifier"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 661634 // XMLResourceIdentifier
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 464514 "XMLDTDHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource;
${definition}"
      associated_elems
	class_ref 658178 // XMLDTDHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 464642 "XMLDTDContentModelHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource;
${definition}"
      associated_elems
	class_ref 658306 // XMLDTDContentModelHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 477442 "QName"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 661378 // QName
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 484610 "NamespaceContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 660994 // NamespaceContext
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 510082 "Augmentations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
${definition}"
      associated_elems
	class_ref 661122 // Augmentations
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 516226 "XMLString"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 661250 // XMLString
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 518658 "XMLDocumentFragmentHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 740354 // XMLDocumentFragmentHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 518786 "XNIException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 657794 // XNIException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end

  package_ref 168194 // grammars
end
