class Deflater
!!!9607298.java!!!	Deflater(in level : int, inout nowrap : boolean)
        this.level = level;
        this.strategy = DEFAULT_STRATEGY;
        this.zsRef = new ZStreamRef(init(level, DEFAULT_STRATEGY, nowrap));
!!!9607426.java!!!	Deflater(in level : int)
        this(level, false);
!!!9607554.java!!!	Deflater()
        this(DEFAULT_COMPRESSION, false);
!!!9607682.java!!!	setInput(inout b : byte [[]], in off : int, in len : int) : void
        if (b== null) {
            throw new NullPointerException();
        }
        if (off < 0 || len < 0 || off > b.length - len) {
            throw new ArrayIndexOutOfBoundsException();
        }
        synchronized (zsRef) {
            this.buf = b;
            this.off = off;
            this.len = len;
        }
!!!9607810.java!!!	setInput(inout b : byte [[]]) : void
        setInput(b, 0, b.length);
!!!9607938.java!!!	setDictionary(inout b : byte [[]], in off : int, in len : int) : void
        if (b == null) {
            throw new NullPointerException();
        }
        if (off < 0 || len < 0 || off > b.length - len) {
            throw new ArrayIndexOutOfBoundsException();
        }
        synchronized (zsRef) {
            ensureOpen();
            setDictionary(zsRef.address(), b, off, len);
        }
!!!9608066.java!!!	setDictionary(inout b : byte [[]]) : void
        setDictionary(b, 0, b.length);
!!!9608194.java!!!	setStrategy(in strategy : int) : void
        switch (strategy) {
          case DEFAULT_STRATEGY:
          case FILTERED:
          case HUFFMAN_ONLY:
            break;
          default:
            throw new IllegalArgumentException();
        }
        synchronized (zsRef) {
            if (this.strategy != strategy) {
                this.strategy = strategy;
                setParams = true;
            }
        }
!!!9608322.java!!!	setLevel(in level : int) : void
        if ((level < 0 || level > 9) && level != DEFAULT_COMPRESSION) {
            throw new IllegalArgumentException("invalid compression level");
        }
        synchronized (zsRef) {
            if (this.level != level) {
                this.level = level;
                setParams = true;
            }
        }
!!!9608450.java!!!	needsInput() : boolean
        synchronized (zsRef) {
            return len <= 0;
        }
!!!9608578.java!!!	finish() : void
        synchronized (zsRef) {
            finish = true;
        }
!!!9608706.java!!!	finished() : boolean
        synchronized (zsRef) {
            return finished;
        }
!!!9608834.java!!!	deflate(inout b : byte [[]], in off : int, in len : int) : int
        return deflate(b, off, len, NO_FLUSH);
!!!9608962.java!!!	deflate(inout b : byte [[]]) : int
        return deflate(b, 0, b.length, NO_FLUSH);
!!!9609090.java!!!	deflate(inout b : byte [[]], in off : int, in len : int, in flush : int) : int
        if (b == null) {
            throw new NullPointerException();
        }
        if (off < 0 || len < 0 || off > b.length - len) {
            throw new ArrayIndexOutOfBoundsException();
        }
        synchronized (zsRef) {
            ensureOpen();
            if (flush == NO_FLUSH || flush == SYNC_FLUSH ||
                flush == FULL_FLUSH) {
                int thisLen = this.len;
                int n = deflateBytes(zsRef.address(), b, off, len, flush);
                bytesWritten += n;
                bytesRead += (thisLen - this.len);
                return n;
            }
            throw new IllegalArgumentException();
        }
!!!9609218.java!!!	getAdler() : int
        synchronized (zsRef) {
            ensureOpen();
            return getAdler(zsRef.address());
        }
!!!9609346.java!!!	getTotalIn() : int
        return (int) getBytesRead();
!!!9609474.java!!!	getBytesRead() : long
        synchronized (zsRef) {
            ensureOpen();
            return bytesRead;
        }
!!!9609602.java!!!	getTotalOut() : int
        return (int) getBytesWritten();
!!!9609730.java!!!	getBytesWritten() : long
        synchronized (zsRef) {
            ensureOpen();
            return bytesWritten;
        }
!!!9609858.java!!!	reset() : void
        synchronized (zsRef) {
            ensureOpen();
            reset(zsRef.address());
            finish = false;
            finished = false;
            off = len = 0;
            bytesRead = bytesWritten = 0;
        }
!!!9609986.java!!!	end() : void
        synchronized (zsRef) {
            long addr = zsRef.address();
            zsRef.clear();
            if (addr != 0) {
                end(addr);
                buf = null;
            }
        }
!!!9610114.java!!!	finalize() : void
        end();
!!!9610242.java!!!	ensureOpen() : void
        assert Thread.holdsLock(zsRef);
        if (zsRef.address() == 0)
            throw new NullPointerException("Deflater has been closed");
