class CipherAdapter
!!!8011522.java!!!	CipherAdapter(inout cipher : Cipher)
            this.cipher = cipher;
!!!8011650.java!!!	engineInitVerify(inout publicKey : PublicKey) : void
            cipher.init(Cipher.DECRYPT_MODE, publicKey);
            if (data == null) {
                data = new ByteArrayOutputStream(128);
            } else {
                data.reset();
            }
!!!8011778.java!!!	engineInitSign(inout privateKey : PrivateKey) : void
            cipher.init(Cipher.ENCRYPT_MODE, privateKey);
            data = null;
!!!8011906.java!!!	engineInitSign(inout privateKey : PrivateKey, inout random : SecureRandom) : void
            cipher.init(Cipher.ENCRYPT_MODE, privateKey, random);
            data = null;
!!!8012034.java!!!	engineUpdate(in b : byte) : void
            engineUpdate(new byte[] {b}, 0, 1);
!!!8012162.java!!!	engineUpdate(inout b : byte [[]], in off : int, in len : int) : void
            if (data != null) {
                data.write(b, off, len);
                return;
            }
            byte[] out = cipher.update(b, off, len);
            if ((out != null) && (out.length != 0)) {
                throw new SignatureException
                    ("Cipher unexpectedly returned data");
            }
!!!8012290.java!!!	engineSign() : byte
            try {
                return cipher.doFinal();
            } catch (IllegalBlockSizeException e) {
                throw new SignatureException("doFinal() failed", e);
            } catch (BadPaddingException e) {
                throw new SignatureException("doFinal() failed", e);
            }
!!!8012418.java!!!	engineVerify(inout sigBytes : byte [[]]) : boolean
            try {
                byte[] out = cipher.doFinal(sigBytes);
                byte[] dataBytes = data.toByteArray();
                data.reset();
                return MessageDigest.isEqual(out, dataBytes);
            } catch (BadPaddingException e) {
                // e.g. wrong public key used
                // return false rather than throwing exception
                return false;
            } catch (IllegalBlockSizeException e) {
                throw new SignatureException("doFinal() failed", e);
            }
!!!8012546.java!!!	engineSetParameter(inout param : String, inout value : Object) : void
            throw new InvalidParameterException("Parameters not supported");
!!!8012674.java!!!	engineGetParameter(inout param : String) : Object
            throw new InvalidParameterException("Parameters not supported");
