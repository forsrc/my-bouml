class DEREncodedKeyValue
!!!5393154.java!!!	DEREncodedKeyValue(inout element : Element, inout BaseURI : String)
        super(element, BaseURI);
!!!5393282.java!!!	DEREncodedKeyValue(inout doc : Document, inout publicKey : PublicKey)
        super(doc);

        this.addBase64Text(getEncodedDER(publicKey));
!!!5393410.java!!!	DEREncodedKeyValue(inout doc : Document, inout encodedKey : byte [[]])
        super(doc);

        this.addBase64Text(encodedKey);
!!!5393538.java!!!	setId(inout id : String) : void
        if (id != null) {
            this.constructionElement.setAttributeNS(null, Constants._ATT_ID, id);
            this.constructionElement.setIdAttributeNS(null, Constants._ATT_ID, true);
        } else {
            this.constructionElement.removeAttributeNS(null, Constants._ATT_ID);
        }
!!!5393666.java!!!	getId() : String
        return this.constructionElement.getAttributeNS(null, Constants._ATT_ID);
!!!5393794.java!!!	getBaseLocalName() : String
        return Constants._TAG_DERENCODEDKEYVALUE;
!!!5393922.java!!!	getPublicKey() : PublicKey
        byte[] encodedKey = getBytesFromTextChild();

        // Iterate over the supported key types until one produces a public key.
        for (String keyType : supportedKeyTypes) {
            try {
                KeyFactory keyFactory = KeyFactory.getInstance(keyType);
                X509EncodedKeySpec keySpec = new X509EncodedKeySpec(encodedKey);
                PublicKey publicKey = keyFactory.generatePublic(keySpec);
                if (publicKey != null) {
                    return publicKey;
                }
            } catch (NoSuchAlgorithmException e) {
                // Do nothing, try the next type
            } catch (InvalidKeySpecException e) {
                // Do nothing, try the next type
            }
        }
        throw new XMLSecurityException("DEREncodedKeyValue.UnsupportedEncodedKey");
!!!5394050.java!!!	getEncodedDER(inout publicKey : PublicKey) : byte
        try {
            KeyFactory keyFactory = KeyFactory.getInstance(publicKey.getAlgorithm());
            X509EncodedKeySpec keySpec = keyFactory.getKeySpec(publicKey, X509EncodedKeySpec.class);
            return keySpec.getEncoded();
        } catch (NoSuchAlgorithmException e) {
            Object exArgs[] = { publicKey.getAlgorithm(), publicKey.getFormat(), publicKey.getClass().getName() };
            throw new XMLSecurityException("DEREncodedKeyValue.UnsupportedPublicKey", exArgs, e);
        } catch (InvalidKeySpecException e) {
            Object exArgs[] = { publicKey.getAlgorithm(), publicKey.getFormat(), publicKey.getClass().getName() };
            throw new XMLSecurityException("DEREncodedKeyValue.UnsupportedPublicKey", exArgs, e);
        }
