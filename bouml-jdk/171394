format 222
"datatype" // jdk1.8::com::sun::org::apache::xerces::internal::jaxp::datatype
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/jaxp/datatype/"
  java_package "com.sun.org.apache.xerces.internal.jaxp.datatype"
  classview 164738 "datatype"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 722946 "DatatypeFactoryImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Factory that creates new <code>javax.xml.datatype</code> <code>Object</code>s that map XML to/from Java <code>Object</code>s.</p>

<p id=\"DatatypeFactory.newInstance\">{@link #newInstance()} is used to create a new <code>DatatypeFactory</code>.
The following implementation resolution mechanisms are used in the following order:</p>
<ol>
   <li>
     If the system property specified by {@link #DATATYPEFACTORY_PROPERTY}, \"<code>javax.xml.datatype.DatatypeFactory</code>\",
     exists, a class with the name of the property's value is instantiated.
     Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.
   </li>
   <li>
     If the file ${JAVA_HOME}/lib/jaxp.properties exists, it is loaded in a {@link java.util.Properties} <code>Object</code>.
     The <code>Properties</code> <code>Object </code> is then queried for the property as documented in the prior step
     and processed as documented in the prior step.
   </li>
   <li>
     The services resolution mechanism is used, e.g. <code>META-INF/services/java.xml.datatype.DatatypeFactory</code>.
     Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.
   </li>
   <li>
     The final mechanism is to attempt to instantiate the <code>Class</code> specified by
     {@link #DATATYPEFACTORY_IMPLEMENTATION_CLASS}, \"<code>javax.xml.datatype.DatatypeFactoryImpl</code>\".
     Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.
   </li>
</ol>

@author <a href=\"mailto:Joseph.Fialli@Sun.COM\">Joseph Fialli</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Id: DatatypeFactoryImpl.java,v 1.6 2010/05/19 05:02:55 joehw Exp $
"
      classrelation 2104962 // <generalisation>
	relation 2104962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2104962 // <generalisation>
	  b parent class_ref 683266 // DatatypeFactory
      end

      operation 4912258 "DatatypeFactoryImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Public constructor is empty..</p>

<p>Use {@link DatatypeFactory#newInstance()} to create a <code>DatatypeFactory</code>.</p>
"
      end

      operation 4912386 "newDuration"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as its string representation, \"PnYnMnDTnHnMnS\",
as defined in XML Schema 1.0 section 3.2.6.1.</p>

<p>XML Schema Part 2: Datatypes, 3.2.6 duration, defines <code>duration</code> as:</p>
<blockquote>
duration represents a duration of time.
The value space of duration is a six-dimensional space where the coordinates designate the
Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively.
These components are ordered in their significance by their order of appearance i.e. as
year, month, day, hour, minute, and second.
</blockquote>
<p>All six values are set and availabe from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation <code>String</code> representation of a <code>Duration</code>.

@return New <code>Duration</code> created from parsing the <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If <code>lexicalRepresentation</code> is not a valid representation of a <code>Duration</code>.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException if <code>lexicalRepresentation</code> is <code>null</code>.
"
      end

      operation 4912514 "newDuration"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as milliseconds.</p>

<p>XML Schema Part 2: Datatypes, 3.2.6 duration, defines <code>duration</code> as:</p>
<blockquote>
duration represents a duration of time.
The value space of duration is a six-dimensional space where the coordinates designate the
Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively.
These components are ordered in their significance by their order of appearance i.e. as
year, month, day, hour, minute, and second.
</blockquote>
<p>All six values are set by computing their values from the specified milliseconds
and are availabe using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getMonths()} and {@link Duration#getDays()} can be influenced.</p>

@param durationInMilliseconds Duration in milliseconds to create.

@return New <code>Duration</code> representing <code>durationInMilliseconds</code>.
"
      end

      operation 4912642 "newDuration"
	public return_type class_ref 683778 // Duration
	nparams 7
	  param in name "isPositive" explicit_type "boolean"
	  param in name "years" type class_ref 686338 // BigInteger
	  param in name "months" type class_ref 686338 // BigInteger
	  param in name "days" type class_ref 686338 // BigInteger
	  param in name "hours" type class_ref 686338 // BigInteger
	  param in name "minutes" type class_ref 686338 // BigInteger
	  param in name "seconds" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as isPositive, years, months, days, hours, minutes, seconds.</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param years of this <code>Duration</code>
@param months of this <code>Duration</code>
@param days of this <code>Duration</code>
@param hours of this <code>Duration</code>
@param minutes of this <code>Duration</code>
@param seconds of this <code>Duration</code>

@return New <code>Duration</code> created from the specified values.

@throws IllegalArgumentException If values are not a valid representation of a <code>Duration</code>.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If any values are <code>null</code>.

@see #newDuration(boolean isPositive, BigInteger years, BigInteger months, BigInteger days,
  BigInteger hours, BigInteger minutes, BigDecimal seconds)
"
      end

      operation 4912770 "newDurationYearMonth"
	public return_type class_ref 683778 // Duration
	nparams 3
	  param in name "isPositive" explicit_type "boolean"
	  param in name "year" type class_ref 686338 // BigInteger
	  param in name "month" type class_ref 686338 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified
<code>year</code> and <code>month</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

<p>A <code>null</code> value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param year Year of <code>Duration</code>.
@param month Month of <code>Duration</code>.

@return New <code>Duration</code> created using the specified <code>year</code> and <code>month</code>.

@throws IllegalArgumentException If the values are not a valid representation of a
<code>Duration</code>: if all of the fields (year, month) are null or
if any of the fields is negative.
@throws UnsupportedOperationException If implementation cannot support requested values.
"
      end

      operation 4912898 "newDurationYearMonth"
	public return_type class_ref 683778 // Duration
	nparams 3
	  param in name "isPositive" explicit_type "boolean"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified
<code>year</code> and <code>month</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param year Year of <code>Duration</code>.
@param month Month of <code>Duration</code>.

@return New <code>Duration</code> created using the specified <code>year</code> and <code>month</code>.

@throws IllegalArgumentException If the values are not a valid representation of a
<code>Duration</code>: if any of the fields (year, month) is negative.
"
      end

      operation 4913026 "newDurationYearMonth"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> by parsing its <code>String</code> representation,
\"<em>PnYnM</em>\", <a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The datatype <code>xdt:yearMonthDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only year and month components.
This datatype resides in the namespace {@link javax.xml.XMLConstants#W3C_XPATH_DATATYPE_NS_URI}.</p>

<p>Both values are set and availabe from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation Lexical representation of a duration.

@return New <code>Duration</code> created using the specified <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If <code>lexicalRepresentation</code> is not a valid representation of a <code>Duration</code> expressed only in terms of years and months.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>.
"
      end

      operation 4913154 "newDurationYearMonth"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified milliseconds as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The datatype <code>xdt:yearMonthDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only year and month components.
This datatype resides in the namespace {@link javax.xml.XMLConstants#W3C_XPATH_DATATYPE_NS_URI}.</p>

<p>Both values are set by computing their values from the specified milliseconds
and are availabe using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getMonths()} can be influenced.</p>

<p>Any remaining milliseconds after determining the year and month are discarded.</p>

@param durationInMilliseconds Milliseconds of <code>Duration</code> to create.

@return New <code>Duration</code> created using the specified <code>durationInMilliseconds</code>.
"
      end

      operation 4913282 "newDurationDayTime"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> by parsing its <code>String</code> representation,
\"<em>PnDTnHnMnS</em>\", <a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>All four values are set and availabe from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation Lexical representation of a duration.

@return New <code>Duration</code> created using the specified <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If <code>lexicalRepresentation</code> is not a valid representation of a <code>Duration</code> expressed only in terms of days and time.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>.
"
      end

      operation 4913410 "newDurationDayTime"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified milliseconds as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>All four values are set by computing their values from the specified milliseconds
and are availabe using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getDays()} can be influenced.</p>

<p>Any remaining milliseconds after determining the day, hour, minute and second are discarded.</p>

@param durationInMilliseconds Milliseconds of <code>Duration</code> to create.

@return New <code>Duration</code> created with the specified <code>durationInMilliseconds</code>.

@see <a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>
"
      end

      operation 4913538 "newDurationDayTime"
	public return_type class_ref 683778 // Duration
	nparams 5
	  param in name "isPositive" explicit_type "boolean"
	  param in name "day" type class_ref 686338 // BigInteger
	  param in name "hour" type class_ref 686338 // BigInteger
	  param in name "minute" type class_ref 686338 // BigInteger
	  param in name "second" type class_ref 686338 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified
<code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

<p>A <code>null</code> value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param day Day of <code>Duration</code>.
@param hour Hour of <code>Duration</code>.
@param minute Minute of <code>Duration</code>.
@param second Second of <code>Duration</code>.

@return New <code>Duration</code> created with the specified <code>day</code>, <code>hour</code>, <code>minute</code>
and <code>second</code>.

@throws IllegalArgumentException If the values are not a valid representation of a
<code>Duration</code>: if all the fields (day, hour, ...) are null or
if any of the fields is negative.
@throws UnsupportedOperationException If implementation cannot support requested values.
"
      end

      operation 4913666 "newDurationDayTime"
	public return_type class_ref 683778 // Duration
	nparams 5
	  param in name "isPositive" explicit_type "boolean"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified
<code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param day Day of <code>Duration</code>.
@param hour Hour of <code>Duration</code>.
@param minute Minute of <code>Duration</code>.
@param second Second of <code>Duration</code>.

@return New <code>Duration</code> created with the specified <code>day</code>, <code>hour</code>, <code>minute</code>
and <code>second</code>.

@throws IllegalArgumentException If the values are not a valid representation of a
<code>Duration</code>: if any of the fields (day, hour, ...) is negative.
"
      end

      operation 4913794 "newXMLGregorianCalendar"
	public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new instance of an <code>XMLGregorianCalendar</code>.</p>

<p>All date/time datatype fields set to {@link DatatypeConstants#FIELD_UNDEFINED} or null.</p>

@return New <code>XMLGregorianCalendar</code> with all date/time datatype fields set to
  {@link DatatypeConstants#FIELD_UNDEFINED} or null.
"
      end

      operation 4913922 "newXMLGregorianCalendar"
	public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new XMLGregorianCalendar by parsing the String as a lexical representation.</p>

<p>Parsing the lexical string representation is defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">XML Schema 1.0 Part 2, Section 3.2.[7-14].1,
<em>Lexical Representation</em>.</a></p>

<p>The string representation may not have any leading and trailing whitespaces.</p>

<p>The parsing is done field by field so that
the following holds for any lexically correct String x:</p>
<pre>
newXMLGregorianCalendar(x).toXMLFormat().equals(x)
</pre>
<p>Except for the noted lexical/canonical representation mismatches
listed in <a href=\"http://www.w3.org/2001/05/xmlschema-errata#e2-45\">
XML Schema 1.0 errata, Section 3.2.7.2</a>.</p>

@param lexicalRepresentation Lexical representation of one the eight XML Schema date/time datatypes.

@return <code>XMLGregorianCalendar</code> created from the <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If the <code>lexicalRepresentation</code> is not a valid <code>XMLGregorianCalendar</code>.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>.
"
      end

      operation 4914050 "newXMLGregorianCalendar"
	public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 1
	  param in name "cal" type class_ref 723202 // GregorianCalendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create an <code>XMLGregorianCalendar</code> from a {@link GregorianCalendar}.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"2\">
         Field by Field Conversion from
         {@link GregorianCalendar} to an {@link XMLGregorianCalendar}
      </th>
    </tr>
    <tr>
       <th><code>java.util.GregorianCalendar</code> field</th>
       <th><code>javax.xml.datatype.XMLGregorianCalendar</code> field</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>ERA == GregorianCalendar.BC ? -YEAR : YEAR</code></td>
      <td>{@link XMLGregorianCalendar#setYear(int year)}</td>
    </tr>
    <tr>
      <td><code>MONTH + 1</code></td>
      <td>{@link XMLGregorianCalendar#setMonth(int month)}</td>
    </tr>
    <tr>
      <td><code>DAY_OF_MONTH</code></td>
      <td>{@link XMLGregorianCalendar#setDay(int day)}</td>
    </tr>
    <tr>
      <td><code>HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND</code></td>
      <td>{@link XMLGregorianCalendar#setTime(int hour, int minute, int second, BigDecimal fractional)}</td>
    </tr>
    <tr>
      <td>
        <code>(ZONE_OFFSET + DST_OFFSET) / (60*1000)</code><br/>
        <em>(in minutes)</em>
      </td>
      <td>{@link XMLGregorianCalendar#setTimezone(int offset)}<sup><em>*</em></sup>
      </td>
    </tr>
  </tbody>
</table>
<p><em>*</em>conversion loss of information. It is not possible to represent
a <code>java.util.GregorianCalendar</code> daylight savings timezone id in the
XML Schema 1.0 date/time datatype representation.</p>

<p>To compute the return value's <code>TimeZone</code> field,
<ul>
<li>when <code>this.getTimezone() != FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using the <code>this.getTimezone()</code>.</li>
<li>else use the <code>GregorianCalendar</code> default timezone value
for the host is defined as specified by
<code>java.util.TimeZone.getDefault()</code>.</li></p>

@param cal <code>java.util.GregorianCalendar</code> used to create <code>XMLGregorianCalendar</code>

@return <code>XMLGregorianCalendar</code> created from <code>java.util.GregorianCalendar</code>

@throws NullPointerException If <code>cal</code> is <code>null</code>.
"
      end

      operation 4914178 "newXMLGregorianCalendar"
	public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 8
	  param in name "year" type class_ref 686338 // BigInteger
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "fractionalSecond" type class_ref 145794 // BigDecimal
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}, final ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor allowing for complete value spaces allowed by
W3C XML Schema 1.0 recommendation for xsd:dateTime and related
builtin datatypes. Note that <code>year</code> parameter supports
arbitrarily large numbers and fractionalSecond has infinite
precision.</p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param hour of <code>XMLGregorianCalendar</code> to be created.
@param minute of <code>XMLGregorianCalendar</code> to be created.
@param second of <code>XMLGregorianCalendar</code> to be created.
@param fractionalSecond of <code>XMLGregorianCalendar</code> to be created.
@param timezone of <code>XMLGregorianCalendar</code> to be created.

@return <code>XMLGregorianCalendar</code> created from specified values.

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}.
@throws NullPointerException If any parameters are <code>null</code>.

"
      end
    end

    class 723330 "DurationDayTimeImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Represent a subtype <code>xdt:dayTimeDuration</code> of a <code>Duration</code>
as specified in <a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>


<p>The DurationYearMonth object represents a period of Gregorian time,
with a lexical representation, \"<em>PnDTnHnMnS</em>\" that contains only year and month components.
</p>


@author <a href=\"mailto:Vikram.Aroskar@Sun.COM\">Vikram Aroskar</a>
@author <a href=\"mailto:Huizhe.wang@oracle.com\">Joe Wang</a>
@version $Revision: 1.2 $, $Date: 2010/05/19 23:20:06 $

@see XMLGregorianCalendar#add(Duration)
"
      classrelation 2107010 // <generalisation>
	relation 2107010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2107010 // <generalisation>
	  b parent class_ref 723458 // DurationImpl
      end

      operation 4924418 "DurationDayTimeImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "isPositive" explicit_type "boolean"
	  param inout name "days" type class_ref 686338 // BigInteger
	  param inout name "hours" type class_ref 686338 // BigInteger
	  param inout name "minutes" type class_ref 686338 // BigInteger
	  param inout name "seconds" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4924546 "DurationDayTimeImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "isPositive" explicit_type "boolean"
	  param in name "days" explicit_type "int"
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4924674 "DurationDayTimeImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Construct a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> by parsing its <code>String</code> representation,
\"<em>PnDTnHnMnS</em>\", <a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>All four values are set and availabe from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation Lexical representation of a duration.

@throws IllegalArgumentException If <code>lexicalRepresentation</code> is not a valid representation of a <code>Duration</code> expressed only in terms of days and time.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>.
"
      end

      operation 4924802 "DurationDayTimeImpl"
	protected explicit_return_type ""
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified milliseconds as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>All four values are set by computing their values from the specified milliseconds
and are availabe using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getDays()} can be influenced.</p>

<p>Any remaining milliseconds after determining the day, hour, minute and second are discarded.</p>

@param durationInMilliseconds Milliseconds of <code>Duration</code> to create.

@return New <code>Duration</code> created with the specified <code>durationInMilliseconds</code>.

@see <a href=\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>
"
      end

      operation 4924930 "getValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value space of xs:dayTimeDuration is the set of fractional second values.
@return fractional second values
"
      end

      operation 4925058 "convertToCanonicalDayTime"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 723458 "DurationImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Immutable representation of a time span as defined in
the W3C XML Schema 1.0 specification.</p>

<p>A Duration object represents a period of Gregorian time,
which consists of six fields (years, months, days, hours,
minutes, and seconds) plus a sign (+/-) field.</p>

<p>The first five fields have non-negative (>=0) integers or null
(which represents that the field is not set),
and the seconds field has a non-negative decimal or null.
A negative sign indicates a negative duration.</p>

<p>This class provides a number of methods that make it easy
to use for the duration datatype of XML Schema 1.0 with
the errata.</p>

<h2>Order relationship</h2>
<p>Duration objects only have partial order, where two values A and B
maybe either:</p>
<ol>
 <li>A&lt;B (A is shorter than B)
 <li>A&gt;B (A is longer than B)
 <li>A==B   (A and B are of the same duration)
 <li>A&lt;>B (Comparison between A and B is indeterminate)
</ol>
<p>For example, 30 days cannot be meaningfully compared to one month.
The {@link #compare(Duration)} method implements this
relationship.</p>

<p>See the {@link #isLongerThan(Duration)} method for details about
the order relationship among {@link Duration} objects.</p>



<h2>Operations over Duration</h2>
<p>This class provides a set of basic arithmetic operations, such
as addition, subtraction and multiplication.
Because durations don't have total order, an operation could
fail for some combinations of operations. For example, you cannot
subtract 15 days from 1 month. See the javadoc of those methods
for detailed conditions where this could happen.</p>

<p>Also, division of a duration by a number is not provided because
the {@link Duration} class can only deal with finite precision
decimal numbers. For example, one cannot represent 1 sec divided by 3.</p>

<p>However, you could substitute a division by 3 with multiplying
by numbers such as 0.3 or 0.333.</p>



<h2>Range of allowed values</h2>
<p>
Because some operations of {@link Duration} rely on {@link Calendar}
even though {@link Duration} can hold very large or very small values,
some of the methods may not work correctly on such {@link Duration}s.
The impacted methods document their dependency on {@link Calendar}.


@author <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@author <a href=\"mailto:Joseph.Fialli@Sun.com\">Joseph Fialli</a>
@version $Revision: 1.8 $, $Date: 2010/05/19 23:20:06 $

@see XMLGregorianCalendar#add(Duration)
"
      classrelation 2105090 // <generalisation>
	relation 2105090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2105090 // <generalisation>
	  b parent class_ref 683778 // Duration
      end

      classrelation 2105218 // <realization>
	relation 2105218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2105218 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1088514 "FIELD_NUM"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Number of Fields.</p>

"
      end

      classrelation 2105346 // FIELDS (<unidirectional association>)
	relation 2105346 --->
	  a role_name "FIELDS" multiplicity "[]" init_value " new DatatypeConstants.Field[]{
                        DatatypeConstants.YEARS,
                        DatatypeConstants.MONTHS,
                        DatatypeConstants.DAYS,
                        DatatypeConstants.HOURS,
                        DatatypeConstants.MINUTES,
                        DatatypeConstants.SECONDS
                }" class_relation const_relation private
	    comment "
<p>Internal array of value Fields.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2105346 // FIELDS (<unidirectional association>)
	  b parent class_ref 723842 // Field
      end

      attribute 1088642 "FIELD_IDS"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
                                DatatypeConstants.YEARS.getId(),
                                DatatypeConstants.MONTHS.getId(),
                                DatatypeConstants.DAYS.getId(),
                                DatatypeConstants.HOURS.getId(),
                                DatatypeConstants.MINUTES.getId(),
                                DatatypeConstants.SECONDS.getId()
                        }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Internal array of value Field ids.</p>

"
      end

      classrelation 2105474 // GMT (<unidirectional association>)
	relation 2105474 --->
	  a role_name "GMT" init_value " TimeZone.getTimeZone(\"GMT\")" class_relation const_relation private
	    comment "
TimeZone for GMT.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2105474 // GMT (<unidirectional association>)
	  b parent class_ref 723970 // TimeZone
      end

      classrelation 2105602 // ZERO (<unidirectional association>)
	relation 2105602 --->
	  a role_name "ZERO" init_value " BigDecimal.valueOf((long) 0)" class_relation const_relation private
	    comment "
<p>BigDecimal value of 0.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2105602 // ZERO (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      attribute 1088770 "signum"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Indicates the sign. -1, 0 or 1 if the duration is negative,
zero, or positive.</p>

"
      end

      classrelation 2105730 // years (<unidirectional association>)
	relation 2105730 --->
	  a role_name "years" protected
	    comment "
<p>Years of this <code>Duration</code>.</p>


These were final since Duration is immutable. But new subclasses need
to be able to set after conversion. It won't break the immutable nature
of them since there's no other way to set new values to them

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2105730 // years (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2105858 // months (<unidirectional association>)
	relation 2105858 --->
	  a role_name "months" protected
	    comment "
<p>Months of this <code>Duration</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2105858 // months (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2105986 // days (<unidirectional association>)
	relation 2105986 --->
	  a role_name "days" protected
	    comment "
<p>Days of this <code>Duration</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2105986 // days (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2106114 // hours (<unidirectional association>)
	relation 2106114 --->
	  a role_name "hours" protected
	    comment "
<p>Hours of this <code>Duration</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2106114 // hours (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2106242 // minutes (<unidirectional association>)
	relation 2106242 --->
	  a role_name "minutes" protected
	    comment "
<p>Minutes of this <code>Duration</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2106242 // minutes (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2106370 // seconds (<unidirectional association>)
	relation 2106370 --->
	  a role_name "seconds" protected
	    comment "
<p>Seconds of this <code>Duration</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2106370 // seconds (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      operation 4918018 "getSign"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sign of this duration in -1,0, or 1.

@return
     -1 if this duration is negative, 0 if the duration is zero,
     and 1 if the duration is postive.
"
      end

      operation 4918146 "calcSignum"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "isPositive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc
@param isPositive Sign.

@return 1 if positive, else -1.
"
      end

      operation 4918274 "DurationImpl"
	protected explicit_return_type ""
	nparams 7
	  param inout name "isPositive" explicit_type "boolean"
	  param inout name "years" type class_ref 686338 // BigInteger
	  param inout name "months" type class_ref 686338 // BigInteger
	  param inout name "days" type class_ref 686338 // BigInteger
	  param inout name "hours" type class_ref 686338 // BigInteger
	  param inout name "minutes" type class_ref 686338 // BigInteger
	  param inout name "seconds" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new Duration object by specifying each field individually.</p>

<p>All the parameters are optional as long as at least one field is present.
If specified, parameters have to be zero or positive.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param years of this <code>Duration</code>
@param months of this <code>Duration</code>
@param days of this <code>Duration</code>
@param hours of this <code>Duration</code>
@param minutes of this <code>Duration</code>
@param seconds of this <code>Duration</code>

@throws IllegalArgumentException
   If years, months, days, hours, minutes and
   seconds parameters are all <code>null</code>. Or if any
   of those parameters are negative.
"
      end

      operation 4918402 "testNonNegative"
	class_operation protected explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 686338 // BigInteger
	  param inout name "f" type class_ref 723842 // Field
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes sure that the given number is non-negative. If it is not,
throw {@link IllegalArgumentException}.</p>

@param n Number to test.
@param f Field to test.
"
      end

      operation 4918530 "testNonNegative"
	class_operation protected explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 145794 // BigDecimal
	  param inout name "f" type class_ref 723842 // Field
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes sure that the given number is non-negative. If it is not,
throw {@link IllegalArgumentException}.</p>

@param n Number to test.
@param f Field to test.
"
      end

      operation 4918658 "DurationImpl"
	protected explicit_return_type ""
	nparams 7
	  param in name "isPositive" explicit_type "boolean"
	  param in name "years" explicit_type "int"
	  param in name "months" explicit_type "int"
	  param in name "days" explicit_type "int"
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new Duration object by specifying each field
individually.</p>

<p>This method is functionally equivalent to
invoking another constructor by wrapping
all non-zero parameters into {@link BigInteger} and {@link BigDecimal}.
Zero value of int parameter is equivalent of null value of
the corresponding field.</p>

@see #DurationImpl(boolean, BigInteger, BigInteger, BigInteger, BigInteger,
  BigInteger, BigDecimal)
"
      end

      operation 4918786 "wrap"
	class_operation protected return_type class_ref 686338 // BigInteger
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc

@param i int to convert to BigInteger.

@return BigInteger representation of int.
"
      end

      operation 4918914 "DurationImpl"
	protected explicit_return_type ""
	nparams 1
	  param in name "durationInMilliSeconds" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new Duration object by specifying the duration
in milliseconds.</p>

@param durationInMilliSeconds
     The length of the duration in milliseconds.
"
      end

      operation 4919042 "DurationImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "lexicalRepresentation" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Duration object by
parsing its string representation
\"PnYnMnDTnHnMnS\" as defined in XML Schema 1.0 section 3.2.6.1.

<p>
The string representation may not have any leading
and trailing whitespaces.

<p>
For example, this method parses strings like
\"P1D\" (1 day), \"-PT100S\" (-100 sec.), \"P1DT12H\" (1 days and 12 hours).

<p>
The parsing is done field by field so that
the following holds for any lexically correct string x:
<pre>
new Duration(x).toString().equals(x)
</pre>

Returns a non-null valid duration object that holds the value
indicated by the lexicalRepresentation parameter.

@param lexicalRepresentation
     Lexical representation of a duration.
@throws IllegalArgumentException
     If the given string does not conform to the aforementioned
     specification.
@throws NullPointerException
     If the given string is null.
"
      end

      operation 4919170 "isDigit"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc

@param ch char to test.

@return true if ch is a digit, else false.
"
      end

      operation 4919298 "isDigitOrPeriod"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc

@param ch to test.

@return true if ch is a digit or a period, else false.
"
      end

      operation 4919426 "parsePiece"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "whole" type class_ref 128130 // String
	  param inout name "idx" explicit_type "int"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc

@param whole String to parse.
@param idx TODO: ???

@return Result of parsing.

@throws IllegalArgumentException If whole cannot be parsed.
"
      end

      operation 4919554 "organizeParts"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "whole" type class_ref 128130 // String
	  param inout name "parts" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "partsIndex" explicit_type "int"
	multiplicity "[]"
	  param in name "len" explicit_type "int"
	  param inout name "tokens" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc.

@param whole TODO: ???
@param parts TODO: ???
@param partsIndex TODO: ???
@param len TODO: ???
@param tokens TODO: ???

@throws IllegalArgumentException TODO: ???
"
      end

      operation 4919682 "parseBigInteger"
	class_operation private return_type class_ref 686338 // BigInteger
	nparams 3
	  param inout name "whole" type class_ref 128130 // String
	  param inout name "part" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc

@param whole TODO: ???.
@param part TODO: ???.
@param index TODO: ???.

@return TODO: ???.

@throws IllegalArgumentException TODO: ???.
"
      end

      operation 4919810 "parseBigDecimal"
	class_operation private return_type class_ref 145794 // BigDecimal
	nparams 3
	  param inout name "whole" type class_ref 128130 // String
	  param inout name "part" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: Javadoc.

@param whole TODO: ???.
@param part TODO: ???.
@param index TODO: ???.

@return TODO: ???.

@throws IllegalArgumentException TODO: ???.
"
      end

      classrelation 2106498 // TEST_POINTS (<unidirectional association>)
	relation 2106498 --->
	  a role_name "TEST_POINTS" multiplicity "[]" init_value " new XMLGregorianCalendar[] {
        XMLGregorianCalendarImpl.parse(\"1696-09-01T00:00:00Z\"),
        XMLGregorianCalendarImpl.parse(\"1697-02-01T00:00:00Z\"),
        XMLGregorianCalendarImpl.parse(\"1903-03-01T00:00:00Z\"),
        XMLGregorianCalendarImpl.parse(\"1903-07-01T00:00:00Z\")
    }" class_relation const_relation private
	    comment "
<p>Four constants defined for the comparison of durations.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2106498 // TEST_POINTS (<unidirectional association>)
	  b parent class_ref 683650 // XMLGregorianCalendar
      end

      operation 4919938 "compare"
	public explicit_return_type "int"
	nparams 1
	  param inout name "rhs" type class_ref 683778 // Duration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Partial order relation comparison with this <code>Duration</code> instance.</p>

<p>Comparison result must be in accordance with
<a href=\"http://www.w3.org/TR/xmlschema-2/#duration-order\">W3C XML Schema 1.0 Part 2, Section 3.2.7.6.2,
<i>Order relation on duration</i></a>.</p>

<p>Return:</p>
<ul>
  <li>{@link DatatypeConstants#LESSER} if this <code>Duration</code> is shorter than <code>duration</code> parameter</li>
  <li>{@link DatatypeConstants#EQUAL} if this <code>Duration</code> is equal to <code>duration</code> parameter</li>
  <li>{@link DatatypeConstants#GREATER} if this <code>Duration</code> is longer than <code>duration</code> parameter</li>
  <li>{@link DatatypeConstants#INDETERMINATE} if a conclusive partial order relation cannot be determined</li>
</ul>

@param duration to compare

@return the relationship between <code>this</code> <code>Duration</code>and <code>duration</code> parameter as
  {@link DatatypeConstants#LESSER}, {@link DatatypeConstants#EQUAL}, {@link DatatypeConstants#GREATER}
  or {@link DatatypeConstants#INDETERMINATE}.

@throws UnsupportedOperationException If the underlying implementation
  cannot reasonably process the request, e.g. W3C XML Schema allows for
  arbitrarily large/small/precise values, the request may be beyond the
  implementations capability.
@throws NullPointerException if <code>duration</code> is <code>null</code>.

@see #isShorterThan(Duration)
@see #isLongerThan(Duration)
"
      end

      operation 4920066 "compareDates"
	private explicit_return_type "int"
	nparams 2
	  param inout name "duration1" type class_ref 683778 // Duration
	  param inout name "duration2" type class_ref 683778 // Duration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares 2 given durations. (refer to W3C Schema Datatypes \"3.2.6 duration\")

@param duration1  Unnormalized duration
@param duration2  Unnormalized duration
@return INDETERMINATE if the order relationship between date1 and date2 is indeterminate.
EQUAL if the order relation between date1 and date2 is EQUAL.
If the strict parameter is true, return LESS_THAN if date1 is less than date2 and
return GREATER_THAN if date1 is greater than date2.
If the strict parameter is false, return LESS_THAN if date1 is less than OR equal to date2 and
return GREATER_THAN if date1 is greater than OR equal to date2
"
      end

      operation 4920194 "compareResults"
	private explicit_return_type "int"
	nparams 2
	  param in name "resultA" explicit_type "int"
	  param in name "resultB" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4920322 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code consistent with the definition of the equals method.

@see Object#hashCode()
"
      end

      operation 4920450 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this duration object.

<p>
The result is formatter according to the XML Schema 1.0
spec and can be always parsed back later into the
equivalent duration object by
the {@link #DurationImpl(String)} constructor.

<p>
Formally, the following holds for any {@link Duration}
object x.
<pre>
new Duration(x.toString()).equals(x)
</pre>

@return
     Always return a non-null valid String object.
"
      end

      operation 4920578 "toString"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "bd" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Turns {@link BigDecimal} to a string representation.</p>

<p>Due to a behavior change in the {@link BigDecimal#toString()}
method in JDK1.5, this had to be implemented here.</p>

@param bd <code>BigDecimal</code> to format as a <code>String</code>

@return  <code>String</code> representation of <code>BigDecimal</code>
"
      end

      operation 4920706 "isSet"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "field" type class_ref 723842 // Field
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a field is set.

A field of a duration object may or may not be present.
This method can be used to test if a field is present.

@param field
     one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
     MINUTES, or SECONDS.)
@return
     true if the field is present. false if not.

@throws NullPointerException
     If the field parameter is null.
"
      end

      operation 4920834 "getField"
	public return_type class_ref 398210 // Number
	nparams 1
	  param inout name "field" type class_ref 723842 // Field
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a field.

Fields of a duration object may contain arbitrary large value.
Therefore this method is designed to return a {@link Number} object.

In case of YEARS, MONTHS, DAYS, HOURS, and MINUTES, the returned
number will be a non-negative integer. In case of seconds,
the returned number may be a non-negative decimal value.

@param field
     one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
     MINUTES, or SECONDS.)
@return
     If the specified field is present, this method returns
     a non-null non-negative {@link Number} object that
     represents its value. If it is not present, return null.
     For YEARS, MONTHS, DAYS, HOURS, and MINUTES, this method
     returns a {@link BigInteger} object. For SECONDS, this
     method returns a {@link BigDecimal}.

@throws NullPointerException
     If the field parameter is null.
"
      end

      operation 4920962 "getYears"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the YEARS field as an integer value,
or 0 if not present.

<p>
This method is a convenience method around the
{@link #getField(DatatypeConstants.Field)} method.

<p>
Note that since this method returns <tt>int</tt>, this
method will return an incorrect value for {@link Duration}s
with the year field that goes beyond the range of <tt>int</tt>.
Use <code>getField(YEARS)</code> to avoid possible loss of precision.</p>

@return
     If the YEARS field is present, return
     its value as an integer by using the {@link Number#intValue()}
     method. If the YEARS field is not present, return 0.
"
      end

      operation 4921090 "getMonths"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the MONTHS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the MONTHS field.

@return Months of this <code>Duration</code>.
"
      end

      operation 4921218 "getDays"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the DAYS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the DAYS field.

@return Days of this <code>Duration</code>.
"
      end

      operation 4921346 "getHours"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the HOURS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the HOURS field.

@return Hours of this <code>Duration</code>.

"
      end

      operation 4921474 "getMinutes"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the MINUTES field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the MINUTES field.

@return Minutes of this <code>Duration</code>.

"
      end

      operation 4921602 "getSeconds"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the SECONDS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the SECONDS field.

@return seconds in the integer value. The fraction of seconds
  will be discarded (for example, if the actual value is 2.5,
  this method returns 2)
"
      end

      operation 4921730 "getInt"
	private explicit_return_type "int"
	nparams 1
	  param inout name "field" type class_ref 723842 // Field
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the requested field value as an int.</p>

<p>If field is not set, i.e. == null, 0 is returned.</p>

@param field To get value for.

@return int value of field or 0 if field is not set.
"
      end

      operation 4921858 "getTimeInMillis"
	public explicit_return_type "long"
	nparams 1
	  param in name "startInstant" type class_ref 723586 // Calendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the length of the duration in milli-seconds.</p>

<p>If the seconds field carries more digits than milli-second order,
those will be simply discarded (or in other words, rounded to zero.)
For example, for any Calendar value <code>x<code>,</p>
<pre>
<code>new Duration(\"PT10.00099S\").getTimeInMills(x) == 10000</code>.
<code>new Duration(\"-PT10.00099S\").getTimeInMills(x) == -10000</code>.
</pre>

<p>
Note that this method uses the {@link #addTo(Calendar)} method,
which may work incorectly with {@link Duration} objects with
very large values in its fields. See the {@link #addTo(Calendar)}
method for details.

@param startInstant
     The length of a month/year varies. The <code>startInstant</code> is
     used to disambiguate this variance. Specifically, this method
     returns the difference between <code>startInstant</code> and
     <code>startInstant+duration</code>

@return milliseconds between <code>startInstant</code> and
  <code>startInstant</code> plus this <code>Duration</code>

@throws NullPointerException if <code>startInstant</code> parameter
is null.

"
      end

      operation 4921986 "getTimeInMillis"
	public explicit_return_type "long"
	nparams 1
	  param in name "startInstant" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the length of the duration in milli-seconds.</p>

<p>If the seconds field carries more digits than milli-second order,
those will be simply discarded (or in other words, rounded to zero.)
For example, for any <code>Date</code> value <code>x<code>,</p>
<pre>
<code>new Duration(\"PT10.00099S\").getTimeInMills(x) == 10000</code>.
<code>new Duration(\"-PT10.00099S\").getTimeInMills(x) == -10000</code>.
</pre>

<p>
Note that this method uses the {@link #addTo(Date)} method,
which may work incorectly with {@link Duration} objects with
very large values in its fields. See the {@link #addTo(Date)}
method for details.

@param startInstant
     The length of a month/year varies. The <code>startInstant</code> is
     used to disambiguate this variance. Specifically, this method
     returns the difference between <code>startInstant</code> and
     <code>startInstant+duration</code>.

@throws NullPointerException
     If the startInstant parameter is null.

@return milliseconds between <code>startInstant</code> and
  <code>startInstant</code> plus this <code>Duration</code>

@see #getTimeInMillis(Calendar)
"
      end

      operation 4922114 "normalizeWith"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param inout name "startTimeInstant" type class_ref 723586 // Calendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "    /**
     * Returns an equivalent but \"normalized\" duration value.
     *
     * Intuitively, the normalization moves YEARS into
     * MONTHS (by x12) and moves DAYS, HOURS, and MINUTES fields
     * into SECONDS (by x86400, x3600, and x60 respectively.)
     *
     *
     * Formally, this method satisfies the following conditions:
     * <ul>
     *  <li>x.normalize().equals(x)
     *  <li>!x.normalize().isSet(Duration.YEARS)
     *  <li>!x.normalize().isSet(Duration.DAYS)
     *  <li>!x.normalize().isSet(Duration.HOURS)
     *  <li>!x.normalize().isSet(Duration.MINUTES)
     * </ul>
     *
     * @return
     *      always return a non-null valid value.
     */
    public Duration normalize() {
        return null;
    }

<p>Converts the years and months fields into the days field
by using a specific time instant as the reference point.</p>

<p>For example, duration of one month normalizes to 31 days
given the start time instance \"July 8th 2003, 17:40:32\".</p>

<p>Formally, the computation is done as follows:</p>
<ol>
 <li>The given Calendar object is cloned.
 <li>The years, months and days fields will be added to
     the {@link Calendar} object
     by using the {@link Calendar#add(int,int)} method.
 <li>The difference between two Calendars are computed in terms of days.
 <li>The computed days, along with the hours, minutes and seconds
     fields of this duration object is used to construct a new
     Duration object.
</ol>

<p>Note that since the Calendar class uses <code>int</code> to
hold the value of year and month, this method may produce
an unexpected result if this duration object holds
a very large value in the years or months fields.</p>

@param startTimeInstant <code>Calendar</code> reference point.

@return <code>Duration</code> of years and months of this <code>Duration</code> as days.

@throws NullPointerException If the startTimeInstant parameter is null.
"
      end

      operation 4922242 "multiply"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "factor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Computes a new duration whose value is <code>factor</code> times
longer than the value of this duration.</p>

<p>This method is provided for the convenience.
It is functionally equivalent to the following code:</p>
<pre>
multiply(new BigDecimal(String.valueOf(factor)))
</pre>

@param factor Factor times longer of new <code>Duration</code> to create.

@return New <code>Duration</code> that is <code>factor</code>times longer than this <code>Duration</code>.

@see #multiply(BigDecimal)
"
      end

      operation 4922370 "multiply"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param inout name "factor" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes a new duration whose value is <code>factor</code> times
longer than the value of this duration.

<p>
For example,
<pre>
\"P1M\" (1 month) * \"12\" = \"P12M\" (12 months)
\"PT1M\" (1 min) * \"0.3\" = \"PT18S\" (18 seconds)
\"P1M\" (1 month) * \"1.5\" = IllegalStateException
</pre>

<p>
Since the {@link Duration} class is immutable, this method
doesn't change the value of this object. It simply computes
a new Duration object and returns it.

<p>
The operation will be performed field by field with the precision
of {@link BigDecimal}. Since all the fields except seconds are
restricted to hold integers,
any fraction produced by the computation will be
carried down toward the next lower unit. For example,
if you multiply \"P1D\" (1 day) with \"0.5\", then it will be 0.5 day,
which will be carried down to \"PT12H\" (12 hours).
When fractions of month cannot be meaningfully carried down
to days, or year to months, this will cause an
{@link IllegalStateException} to be thrown.
For example if you multiple one month by 0.5.</p>

<p>
To avoid {@link IllegalStateException}, use
the {@link #normalizeWith(Calendar)} method to remove the years
and months fields.

@param factor to multiply by

@return
     returns a non-null valid {@link Duration} object

@throws IllegalStateException if operation produces fraction in
the months field.

@throws NullPointerException if the <code>factor</code> parameter is
<code>null</code>.

"
      end

      operation 4922498 "getFieldAsBigDecimal"
	private return_type class_ref 145794 // BigDecimal
	nparams 1
	  param inout name "f" type class_ref 723842 // Field
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Gets the value of the field as a {@link BigDecimal}.</p>

<p>If the field is unset, return 0.</p>

@param f Field to get value for.

@return  non-null valid {@link BigDecimal}.
"
      end

      operation 4922626 "toBigInteger"
	class_operation private return_type class_ref 686338 // BigInteger
	nparams 2
	  param inout name "value" type class_ref 145794 // BigDecimal
	  param inout name "canBeNull" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>BigInteger value of BigDecimal value.</p>

@param value Value to convert.
@param canBeNull Can returned value be null?

@return BigInteger value of BigDecimal, possibly null.
"
      end

      classrelation 2106626 // FACTORS (<unidirectional association>)
	relation 2106626 --->
	  a role_name "FACTORS" multiplicity "[]" init_value " new BigDecimal[]{
        BigDecimal.valueOf(12),
        null/*undefined*/,
        BigDecimal.valueOf(24),
        BigDecimal.valueOf(60),
        BigDecimal.valueOf(60)
    }" class_relation const_relation private
	    comment "
1 unit of FIELDS[i] is equivalent to <code>FACTORS[i]</code> unit of
FIELDS[i+1].

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2106626 // FACTORS (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      operation 4922754 "add"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "rhs" type class_ref 683778 // Duration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Computes a new duration whose value is <code>this+rhs</code>.</p>

<p>For example,</p>
<pre>
\"1 day\" + \"-3 days\" = \"-2 days\"
\"1 year\" + \"1 day\" = \"1 year and 1 day\"
\"-(1 hour,50 minutes)\" + \"-20 minutes\" = \"-(1 hours,70 minutes)\"
\"15 hours\" + \"-3 days\" = \"-(2 days,9 hours)\"
\"1 year\" + \"-1 day\" = IllegalStateException
</pre>

<p>Since there's no way to meaningfully subtract 1 day from 1 month,
there are cases where the operation fails in
{@link IllegalStateException}.</p>

<p>
Formally, the computation is defined as follows.</p>
<p>
Firstly, we can assume that two {@link Duration}s to be added
are both positive without losing generality (i.e.,
<code>(-X)+Y=Y-X</code>, <code>X+(-Y)=X-Y</code>,
<code>(-X)+(-Y)=-(X+Y)</code>)

<p>
Addition of two positive {@link Duration}s are simply defined as
field by field addition where missing fields are treated as 0.
<p>
A field of the resulting {@link Duration} will be unset if and
only if respective fields of two input {@link Duration}s are unset.
<p>
Note that <code>lhs.add(rhs)</code> will be always successful if
<code>lhs.signum()*rhs.signum()!=-1</code> or both of them are
normalized.</p>

@param rhs <code>Duration</code> to add to this <code>Duration</code>

@return
     non-null valid Duration object.

@throws NullPointerException
     If the rhs parameter is null.
@throws IllegalStateException
     If two durations cannot be meaningfully added. For
     example, adding negative one day to one month causes
     this exception.


@see #subtract(Duration)
"
      end

      operation 4922882 "alignSigns"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "buf" type class_ref 145794 // BigDecimal
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4923010 "sanitize"
	class_operation private return_type class_ref 145794 // BigDecimal
	nparams 2
	  param inout name "value" type class_ref 686338 // BigInteger
	  param in name "signum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute <code>value*signum</code> where value==null is treated as
value==0.
@param value Value to sanitize.
@param signum 0 to sanitize to 0, > 0 to sanitize to <code>value</code>, < 0 to sanitize to negative <code>value</code>.

@return non-null {@link BigDecimal}.
"
      end

      operation 4923138 "sanitize"
	class_operation package return_type class_ref 145794 // BigDecimal
	nparams 2
	  param inout name "value" type class_ref 145794 // BigDecimal
	  param in name "signum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute <code>value*signum</code> where <code>value==null</code> is treated as <code>value==0</code></p>.

@param value Value to sanitize.
@param signum 0 to sanitize to 0, > 0 to sanitize to <code>value</code>, < 0 to sanitize to negative <code>value</code>.

@return non-null {@link BigDecimal}.
"
      end

      operation 4923266 "subtract"
	public return_type class_ref 683778 // Duration
	nparams 1
	  param in name "rhs" type class_ref 683778 // Duration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Computes a new duration whose value is <code>this-rhs</code>.</p>

<p>For example:</p>
<pre>
\"1 day\" - \"-3 days\" = \"4 days\"
\"1 year\" - \"1 day\" = IllegalStateException
\"-(1 hour,50 minutes)\" - \"-20 minutes\" = \"-(1hours,30 minutes)\"
\"15 hours\" - \"-3 days\" = \"3 days and 15 hours\"
\"1 year\" - \"-1 day\" = \"1 year and 1 day\"
</pre>

<p>Since there's no way to meaningfully subtract 1 day from 1 month,
there are cases where the operation fails in {@link IllegalStateException}.</p>

<p>Formally the computation is defined as follows.
First, we can assume that two {@link Duration}s are both positive
without losing generality.  (i.e.,
<code>(-X)-Y=-(X+Y)</code>, <code>X-(-Y)=X+Y</code>,
<code>(-X)-(-Y)=-(X-Y)</code>)</p>

<p>Then two durations are subtracted field by field.
If the sign of any non-zero field <tt>F</tt> is different from
the sign of the most significant field,
1 (if <tt>F</tt> is negative) or -1 (otherwise)
will be borrowed from the next bigger unit of <tt>F</tt>.</p>

<p>This process is repeated until all the non-zero fields have
the same sign.</p>

<p>If a borrow occurs in the days field (in other words, if
the computation needs to borrow 1 or -1 month to compensate
days), then the computation fails by throwing an
{@link IllegalStateException}.</p>

@param rhs <code>Duration</code> to substract from this <code>Duration</code>.

@return New <code>Duration</code> created from subtracting <code>rhs</code> from this <code>Duration</code>.

@throws IllegalStateException
     If two durations cannot be meaningfully subtracted. For
     example, subtracting one day from one month causes
     this exception.

@throws NullPointerException
     If the rhs parameter is null.

@see #add(Duration)
"
      end

      operation 4923394 "negate"
	public return_type class_ref 683778 // Duration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@link Duration} object whose
value is <code>-this</code>.

<p>
Since the {@link Duration} class is immutable, this method
doesn't change the value of this object. It simply computes
a new Duration object and returns it.

@return
     always return a non-null valid {@link Duration} object.
"
      end

      operation 4923522 "signum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sign of this duration in -1,0, or 1.

@return
     -1 if this duration is negative, 0 if the duration is zero,
     and 1 if the duration is postive.
"
      end

      operation 4923650 "addTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "calendar" type class_ref 723586 // Calendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this duration to a {@link Calendar} object.

<p>
Calls {@link java.util.Calendar#add(int,int)} in the
order of YEARS, MONTHS, DAYS, HOURS, MINUTES, SECONDS, and MILLISECONDS
if those fields are present. Because the {@link Calendar} class
uses int to hold values, there are cases where this method
won't work correctly (for example if values of fields
exceed the range of int.)
</p>

<p>
Also, since this duration class is a Gregorian duration, this
method will not work correctly if the given {@link Calendar}
object is based on some other calendar systems.
</p>

<p>
Any fractional parts of this {@link Duration} object
beyond milliseconds will be simply ignored. For example, if
this duration is \"P1.23456S\", then 1 is added to SECONDS,
234 is added to MILLISECONDS, and the rest will be unused.
</p>

<p>
Note that because {@link Calendar#add(int, int)} is using
<tt>int</tt>, {@link Duration} with values beyond the
range of <tt>int</tt> in its fields
will cause overflow/underflow to the given {@link Calendar}.
{@link XMLGregorianCalendar#add(Duration)} provides the same
basic operation as this method while avoiding
the overflow/underflow issues.

@param calendar
     A calendar object whose value will be modified.
@throws NullPointerException
     if the calendar parameter is null.
"
      end

      operation 4923778 "addTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this duration to a {@link Date} object.

<p>
The given date is first converted into
a {@link java.util.GregorianCalendar}, then the duration
is added exactly like the {@link #addTo(Calendar)} method.

<p>
The updated time instant is then converted back into a
{@link Date} object and used to update the given {@link Date} object.

<p>
This somewhat redundant computation is necessary to unambiguously
determine the duration of months and years.

@param date
     A date object whose value will be modified.
@throws NullPointerException
     if the date parameter is null.
"
      end

      attribute 1088898 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Stream Unique Identifier.</p>

<p>TODO: Serialization should use the XML string representation as
the serialization format to ensure future compatibility.</p>

"
      end

      operation 4923906 "writeReplace"
	private return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes {@link Duration} as a lexical representation
for maximum future compatibility.

@return
     An object that encapsulates the string
     returned by <code>this.toString()</code>.
"
      end

      class 724098 "DurationStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2106754 // <realization>
	  relation 2106754 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2106754 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 2106882 // lexical (<unidirectional association>)
	  relation 2106882 --->
	    a role_name "lexical" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2106882 // lexical (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 4924034 "DurationStream"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "_lexical" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4924162 "readResolve"
	  private return_type class_ref 129538 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 261506 // ObjectStreamException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 1089026 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 4924290 "getCalendarTimeInMillis"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "cal" type class_ref 723586 // Calendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the {@link Calendar#getTimeInMillis} method.
Prior to JDK1.4, this method was protected and therefore
cannot be invoked directly.

In future, this should be replaced by
<code>cal.getTimeInMillis()</code>
"
      end
    end

    class 724226 "DurationYearMonthImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Represent a subtype <code>xdt:yearMonthDuration</code> of a <code>Duration</code>
as specified in <a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>


<p>The DurationYearMonth object represents a period of Gregorian time,
with a lexical representation, \"<em>PnYnM</em>\" that contains only year and month components.
</p>


@author <a href=\"mailto:Vikram.Aroskar@Sun.COM\">Vikram Aroskar</a>
@author <a href=\"mailto:Huizhe.wang@oracle.com\">Joe Wang</a>
@version $Revision: 1.1 $, $Date: 2010/05/19 05:02:55 $

@see XMLGregorianCalendar#add(Duration)
"
      classrelation 2107138 // <generalisation>
	relation 2107138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2107138 // <generalisation>
	  b parent class_ref 723458 // DurationImpl
      end

      operation 4925186 "DurationYearMonthImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "isPositive" explicit_type "boolean"
	  param inout name "years" type class_ref 686338 // BigInteger
	  param inout name "months" type class_ref 686338 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new Duration object by specifying each field individually.</p>

<p>All the parameters are optional as long as at least one field is present.
If specified, parameters have to be zero or positive.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param years of this <code>Duration</code>
@param months of this <code>Duration</code>

@throws IllegalArgumentException
   If years, months parameters are all <code>null</code>. Or if any
   of those parameters are negative.
"
      end

      operation 4925314 "DurationYearMonthImpl"
	protected explicit_return_type ""
	nparams 3
	  param in name "isPositive" explicit_type "boolean"
	  param in name "years" explicit_type "int"
	  param in name "months" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Construct a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified
<code>year</code> and <code>month</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param year Year of <code>Duration</code>.
@param month Month of <code>Duration</code>.

@throws IllegalArgumentException If the values are not a valid representation of a
<code>Duration</code>: if any of the fields (year, month) is negative.
"
      end

      operation 4925442 "DurationYearMonthImpl"
	protected explicit_return_type ""
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Construct a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified milliseconds as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The datatype <code>xdt:yearMonthDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only year and month components.
This datatype resides in the namespace {@link javax.xml.XMLConstants#W3C_XPATH_DATATYPE_NS_URI}.</p>

<p>Both values are set by computing their values from the specified milliseconds
and are availabe using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getMonths()} can be influenced.</p>

<p>Any remaining milliseconds after determining the year and month are discarded.</p>

@param durationInMilliseconds Milliseconds of <code>Duration</code> to create.
"
      end

      operation 4925570 "DurationYearMonthImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Construct a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> by parsing its <code>String</code> representation,
\"<em>PnYnM</em>\", <a href=\"http://www.w3.org/TR/xpath-datamodel#yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The datatype <code>xdt:yearMonthDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only year and month components.
This datatype resides in the namespace {@link javax.xml.XMLConstants#W3C_XPATH_DATATYPE_NS_URI}.</p>

<p>Both values are set and availabe from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation Lexical representation of a duration.

@throws IllegalArgumentException If <code>lexicalRepresentation</code> is not a valid representation of a <code>Duration</code> expressed only in terms of years and months.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>.
"
      end

      operation 4925698 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value space of xs:yearMonthDuration is the set of xs:integer month values.
@return the value of yearMonthDuration
"
      end

      operation 4925826 "convertToCanonicalYearMonth"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 724354 "XMLGregorianCalendarImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Representation for W3C XML Schema 1.0 date/time datatypes.
Specifically, these date/time datatypes are
{@link DatatypeConstants#DATETIME dateTime},
{@link DatatypeConstants#TIME time},
{@link DatatypeConstants#DATE date},
{@link DatatypeConstants#GYEARMONTH gYearMonth},
{@link DatatypeConstants#GMONTHDAY gMonthDay},
{@link DatatypeConstants#GYEAR gYear},
{@link DatatypeConstants#GMONTH gMonth} and
{@link DatatypeConstants#GDAY gDay}
defined in the XML Namespace
<code>\"http://www.w3.org/2001/XMLSchema\"</code>.
These datatypes are normatively defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime\">W3C XML Schema 1.0 Part 2, Section 3.2.7-14</a>.</p>

<p>The table below defines the mapping between XML Schema 1.0
date/time datatype fields and this class' fields. It also summarizes
the value constraints for the date and time fields defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">W3C XML Schema 1.0 Part 2, Appendix D,
<i>ISO 8601 Date and Time Formats</i></a>.</p>

<a name=\"datetimefieldsmapping\"/>
<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"3\">
        Date/time datatype field mapping between XML Schema 1.0 and Java representation
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>XML Schema 1.0<br/>
          datatype<br/>
           field</th>
      <th>Related<br/>XMLGregorianCalendar<br/>Accessor(s)</th>
      <th>Value Range</th>
    </tr>
    <a name=\"datetimefield-year\"/>
    <tr>
      <td> year </td>
      <td> {@link #getYear()} + {@link #getEon()} or<br/>
           {@link #getEonAndYear}
      </td>
      <td> <code>getYear()</code> is a value between -(10^9-1) to (10^9)-1
           or {@link DatatypeConstants#FIELD_UNDEFINED}.<br/>
           {@link #getEon()} is high order year value in billion of years.<br/>
           <code>getEon()</code> has values greater than or equal to (10^9) or less than or equal to -(10^9).
           A value of null indicates field is undefined.</br>
           Given that <a href=\"http://www.w3.org/2001/05/xmlschema-errata#e2-63\">XML Schema 1.0 errata</a> states that the year zero
           will be a valid lexical value in a future version of XML Schema,
           this class allows the year field to be set to zero. Otherwise,
           the year field value is handled exactly as described
           in the errata and [ISO-8601-1988]. Note that W3C XML Schema 1.0
           validation does not allow for the year field to have a value of zero.
           </td>
    </tr>
    <a name=\"datetimefield-month\"/>
    <tr>
      <td> month </td>
      <td> {@link #getMonth()} </td>
      <td> 1 to 12 or {@link DatatypeConstants#FIELD_UNDEFINED} </td>
    </tr>
    <a name=\"datetimefield-day\"/>
    <tr>
      <td> day </td>
      <td> {@link #getDay()} </td>
      <td> Independent of month, max range is 1 to 31 or {@link DatatypeConstants#FIELD_UNDEFINED}.<br/>
           The normative value constraint stated relative to month
           field's value is in <a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">W3C XML Schema 1.0 Part 2, Appendix D</a>.
      </td>
    </tr>
    <a name=\"datetimefield-hour\"/>
    <tr>
      <td> hour </td>
      <td> {@link #getHour()} </td>
      <td>
        0 to 23 or {@link DatatypeConstants#FIELD_UNDEFINED}.
        An hour value of 24 is allowed to be set in the lexical space provided the minute and second
        field values are zero. However, an hour value of 24 is not allowed in value space and will be
        transformed to represent the value of the first instance of the following day as per
        <a href=\"http://www.w3.org/TR/xmlschema-2/#built-in-primitive-datatypes\">
        XML Schema Part 2: Datatypes Second Edition, 3.2 Primitive datatypes</a>.
      </td>
    </tr>
    <a name=\"datetimefield-minute\"/>
    <tr>
      <td> minute </td>
      <td> {@link #getMinute()} </td>
      <td> 0 to 59 or {@link DatatypeConstants#FIELD_UNDEFINED} </td>
    </tr>
    <a name=\"datetimefield-second\"/>
    <tr>
      <td>second</td>
      <td>
        {@link #getSecond()} + {@link #getMillisecond()}/1000 or<br/>
        {@link #getSecond()} + {@link #getFractionalSecond()}
      </td>
      <td>
        {@link #getSecond()} from 0 to 60 or {@link DatatypeConstants#FIELD_UNDEFINED}.<br/>
        <i>(Note: 60 only allowable for leap second.)</i><br/>
        {@link #getFractionalSecond()} allows for infinite precision over the range from 0.0 to 1.0 when
        the {@link #getSecond()} is defined.<br/>
        <code>FractionalSecond</code> is optional and has a value of <code>null</code> when it is undefined.<br />
           {@link #getMillisecond()} is the convenience
           millisecond precision of value of {@link #getFractionalSecond()}.
      </td>
    </tr>
    <tr id=\"datetimefield-timezone\">
      <td> timezone </td>
      <td> {@link #getTimezone()} </td>
      <td> Number of minutes or {@link DatatypeConstants#FIELD_UNDEFINED}.
        Value range from -14 hours (-14 * 60 minutes) to 14 hours (14 * 60 minutes).
      </td>
    </tr>
  </tbody>
 </table>

<p>All maximum value space constraints listed for the fields in the table
above are checked by factory methods, setter methods and parse methods of
this class. <code>IllegalArgumentException</code> is thrown when
parameter's value is outside the maximum value constraint for the field.
Validation checks, for example, whether days in month should be
limited to 29, 30 or 31 days, that are dependent on the values of other
fields are not checked by these methods.
</p>

<p>The following operations are defined for this class:
<ul>
  <li>factory methods to create instances</li>
  <li>accessors/mutators for independent date/time fields</li>
  <li>conversion between this class and W3C XML Schema 1.0 lexical representation</li>
  <li>conversion between this class and <code>java.util.GregorianCalendar</code></li>
  <li>partial order relation comparator method, {@link #compare(XMLGregorianCalendar)}</li>
  <li>{@link #equals(Object)} defined relative to {@link #compare(XMLGregorianCalendar)}.</li>
  <li> addition operation with {@link javax.xml.datatype.Duration}.
instance as defined in <a href=\"http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes\">
W3C XML Schema 1.0 Part 2, Appendix E, <i>Adding durations to dateTimes</i></a>.</li>
</ul>
</p>

@author <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@author <a href=\"mailto:Joseph.Fialli@Sun.com\">Joseph Fialli</a>
@author <a href=\"mailto:Sunitha.Reddy@Sun.com\">Sunitha Reddy</a>
@version $Revision: 1.14 $, $Date: 2010-11-10 07:41:41 $
@see javax.xml.datatype.Duration
@since 1.5
"
      classrelation 2107394 // <generalisation>
	relation 2107394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2107394 // <generalisation>
	  b parent class_ref 683650 // XMLGregorianCalendar
      end

      classrelation 2107522 // <realization>
	relation 2107522 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2107522 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2107650 // <realization>
	relation 2107650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2107650 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2107778 // eon (<unidirectional association>)
	relation 2107778 --->
	  a role_name "eon" init_value " null" private
	    comment "
<p>Eon of this <code>XMLGregorianCalendar</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2107778 // eon (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      attribute 1089154 "year"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Year of this <code>XMLGregorianCalendar</code>.</p>

"
      end

      attribute 1089282 "month"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Month of this <code>XMLGregorianCalendar</code>.</p>

"
      end

      attribute 1089410 "day"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Day of this <code>XMLGregorianCalendar</code>.</p>

"
      end

      attribute 1089538 "timezone"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Timezone of this <code>XMLGregorianCalendar</code> in minutes.</p>

"
      end

      attribute 1089666 "hour"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Hour of this <code>XMLGregorianCalendar</code>.</p>

"
      end

      attribute 1089794 "minute"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Minute of this <code>XMLGregorianCalendar</code>.</p>

"
      end

      attribute 1089922 "second"
	private explicit_type "int"
	init_value " DatatypeConstants.FIELD_UNDEFINED "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Second of this <code>XMLGregorianCalendar</code>.</p>

"
      end

      classrelation 2107906 // fractionalSecond (<unidirectional association>)
	relation 2107906 --->
	  a role_name "fractionalSecond" init_value " null" private
	    comment "
<p>Fractional second of this <code>XMLGregorianCalendar</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2107906 // fractionalSecond (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      classrelation 2108034 // BILLION (<unidirectional association>)
	relation 2108034 --->
	  a role_name "BILLION" init_value " new BigInteger(\"1000000000\")" class_relation const_relation private
	    comment "
<p>Constant to represent a billion.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108034 // BILLION (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2108162 // PURE_GREGORIAN_CHANGE (<unidirectional association>)
	relation 2108162 --->
	  a role_name "PURE_GREGORIAN_CHANGE" init_value "
        new Date(Long.MIN_VALUE)" class_relation const_relation private
	    comment "
  <p>Obtain a pure Gregorian Calendar by calling
  GregorianCalendar.setChange(PURE_GREGORIAN_CHANGE). </p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108162 // PURE_GREGORIAN_CHANGE (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      attribute 1090050 "YEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Year index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090178 "MONTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Month index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090306 "DAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Day index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090434 "HOUR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hour index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090562 "MINUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Minute index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090690 "SECOND"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Second index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090818 "MILLISECOND"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Second index for MIN_ and MAX_FIELD_VALUES.

"
      end

      attribute 1090946 "TIMEZONE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Timezone index for MIN_ and MAX_FIELD_VALUES

"
      end

      classrelation 2108290 // FIELD_NAME (<unidirectional association>)
	relation 2108290 --->
	  a role_name "FIELD_NAME" multiplicity "[]" init_value " {
        \"Year\",
        \"Month\",
        \"Day\",
        \"Hour\",
        \"Minute\",
        \"Second\",
        \"Millisecond\",
        \"Timezone\"
    }" class_relation const_relation private
	    comment "
field names indexed by YEAR..TIMEZONE.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2108290 // FIELD_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1091074 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Stream Unique Identifier.</p>

<p>TODO: Serialization should use the XML string representation as
the serialization format to ensure future compatibility.</p>

"
      end

      classrelation 2108418 // LEAP_YEAR_DEFAULT (<unidirectional association>)
	relation 2108418 --->
	  a role_name "LEAP_YEAR_DEFAULT" init_value "
                createDateTime(
                        400,  //year
                DatatypeConstants.JANUARY,  //month
                        1,  // day
                    0,  // hour
                    0,  // minute
                    0,  // second
                    DatatypeConstants.FIELD_UNDEFINED,  // milliseconds
                    DatatypeConstants.FIELD_UNDEFINED // timezone
                )" class_relation const_relation public
	    comment "
<p>Use as a template for default field values when
converting to a {@link GregorianCalendar}, set to a leap
year date of January 1, 0400 at midnight.</p>

<p>Fields that are optional for an <code>xsd:dateTime</code> instances are defaulted to not being set to any value.
<code>XMLGregorianCalendar</code> fields millisecond, fractional second and timezone return the value indicating
that the field is not set, {@link DatatypeConstants#FIELD_UNDEFINED} for millisecond and timezone
and <code>null</code> for fractional second.</p>

@see #toGregorianCalendar(TimeZone, Locale, XMLGregorianCalendar)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108418 // LEAP_YEAR_DEFAULT (<unidirectional association>)
	  b parent class_ref 683650 // XMLGregorianCalendar
      end

      operation 4931074 "XMLGregorianCalendarImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "lexicalRepresentation" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

Constructs a new XMLGregorianCalendar object.

String parsing documented by {@link #parse(String)}.

Returns a non-null valid XMLGregorianCalendar object that holds the
value indicated by the lexicalRepresentation parameter.

@param lexicalRepresentation
     Lexical representation of one the eight
     XML Schema date/time datatypes.
@throws IllegalArgumentException
     If the given string does not conform as documented in
     {@link #parse(String)}.
@throws NullPointerException
     If the given string is null.
"
      end

      operation 4931202 "XMLGregorianCalendarImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create an instance with all date/time datatype fields set to
{@link DatatypeConstants#FIELD_UNDEFINED} or null respectively.</p>
"
      end

      operation 4931330 "XMLGregorianCalendarImpl"
	protected explicit_return_type ""
	nparams 8
	  param inout name "year" type class_ref 686338 // BigInteger
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param inout name "fractionalSecond" type class_ref 145794 // BigDecimal
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Private constructor allowing for complete value spaces allowed by
W3C XML Schema 1.0 recommendation for xsd:dateTime and related
builtin datatypes. Note that <code>year</code> parameter supports
arbitrarily large numbers and fractionalSecond has infinite
precision.</p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param hour of <code>XMLGregorianCalendar</code> to be created.
@param minute of <code>XMLGregorianCalendar</code> to be created.
@param second of <code>XMLGregorianCalendar</code> to be created.
@param fractionalSecond of <code>XMLGregorianCalendar</code> to be created.
@param timezone of <code>XMLGregorianCalendar</code> to be created.

"
      end

      operation 4931458 "XMLGregorianCalendarImpl"
	private explicit_return_type ""
	nparams 8
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "millisecond" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Private constructor of value spaces that a
<code>java.util.GregorianCalendar</code> instance would need to convert to an
<code>XMLGregorianCalendar</code> instance.</p>

<p><code>XMLGregorianCalendar eon</code> and
<code>fractionalSecond</code> are set to <code>null</code></p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param hour of <code>XMLGregorianCalendar</code> to be created.
@param minute of <code>XMLGregorianCalendar</code> to be created.
@param second of <code>XMLGregorianCalendar</code> to be created.
@param millisecond of <code>XMLGregorianCalendar</code> to be created.
@param timezone of <code>XMLGregorianCalendar</code> to be created.
"
      end

      operation 4931586 "XMLGregorianCalendarImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "cal" type class_ref 723202 // GregorianCalendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Convert a <code>java.util.GregorianCalendar</code> to XML Schema 1.0
representation.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"2\">
         Field by Field Conversion from
         <code>java.util.GregorianCalendar</code> to this class
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
       <th><code>javax.xml.datatype.XMLGregorianCalendar</code> field</th>
       <th><code>java.util.GregorianCalendar</code> field</th>
    </tr>
    <tr>
      <th>{@link #setYear(int)}</th>
      <th><code>ERA == GregorianCalendar.BC ? -YEAR : YEAR</code></th>
    </tr>
    <tr>
      <th>{@link #setMonth(int)}</th>
      <th><code>MONTH + 1</code></th>
    </tr>
    <tr>
      <th>{@link #setDay(int)}</th>
      <th><code>DAY_OF_MONTH</code></th>
    </tr>
    <tr>
      <th>{@link #setTime(int,int,int, BigDecimal)}</th>
      <th><code>HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND</code></th>
    </tr>
    <tr>
      <th>{@link #setTimezone(int)}<i>*</i></th>
      <th><code>(ZONE_OFFSET + DST_OFFSET) / (60*1000)</code><br/>
      <i>(in minutes)</i>
      </th>
    </tr>
  </tbody>
</table>
<p><i>*</i>conversion loss of information. It is not possible to represent
a <code>java.util.GregorianCalendar</code> daylight savings timezone id in the
XML Schema 1.0 date/time datatype representation.</p>

<p>To compute the return value's <code>TimeZone</code> field,
<ul>
<li>when <code>this.getTimezone() != DatatypeConstants.FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using the <code>this.getTimezone()</code>.</li>
<li>else use the <code>GregorianCalendar</code> default timezone value
for the host is defined as specified by
<code>java.util.TimeZone.getDefault()</code>.</li></p>

@param cal <code>java.util.GregorianCalendar</code> used to create <code>XMLGregorianCalendar</code>
"
      end

      operation 4931714 "createDateTime"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 8
	  param inout name "year" type class_ref 686338 // BigInteger
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param inout name "fractionalSecond" type class_ref 145794 // BigDecimal
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Factories

<p>Create a Java representation of XML Schema builtin datatype <code>dateTime</code>.
All possible fields are specified for this factory method.</p>

@param year represents both high-order eons and low-order year.
@param month of <code>dateTime</code>
@param day of <code>dateTime</code>
@param hours of <code>dateTime</code>
@param minutes of <code>dateTime</code>
@param seconds of <code>dateTime</code>
@param fractionalSecond value of null indicates optional field is absent.
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException if any parameter is outside value
constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4931842 "createDateTime"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java instance of XML Schema builtin datatype dateTime.</p>

@param year represents both high-order eons and low-order year.
@param month of <code>dateTime</code>
@param day of <code>dateTime</code>
@param hour of <code>dateTime</code>
@param minute of <code>dateTime</code>
@param second of <code>dateTime</code>

@return <code>XMLGregorianCalendar</code> created from parameter values.

@throws IllegalArgumentException if any parameter is outside value constraints for the field as specified in
  <a href=\"#datetimefieldmapping\">date/time field mapping table</a>.

@see DatatypeConstants#FIELD_UNDEFINED
"
      end

      operation 4931970 "createDateTime"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 8
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param in name "milliseconds" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java representation of XML Schema builtin datatype <code>dateTime</code>.
All possible fields are specified for this factory method.</p>

@param year represents low-order year.
@param month of <code>dateTime</code>
@param day of <code>dateTime</code>
@param hours of <code>dateTime</code>
@param minutes of <code>dateTime</code>
@param seconds of <code>dateTime</code>
@param milliseconds of <code>dateTime</code>. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@throws IllegalArgumentException if any parameter is outside value constraints for the field as specified in
  <a href=\"#datetimefieldmapping\">date/time field mapping table</a>.

@see DatatypeConstants#FIELD_UNDEFINED
"
      end

      operation 4932098 "createDate"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 4
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java representation of XML Schema builtin datatype <code>date</code> or <code>g*</code>.</p>

<p>For example, an instance of <code>gYear</code> can be created invoking this factory
with <code>month</code> and <code>day</code> parameters set to
{@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException if any parameter is outside value
constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4932226 "createTime"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 4
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a Java instance of XML Schema builtin datatype <code>time</code>.
@param hours number of hours
@param minutes number of minutes
@param seconds number of seconds
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException if any parameter is outside value
constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4932354 "createTime"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 5
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param inout name "fractionalSecond" type class_ref 145794 // BigDecimal
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java instance of XML Schema builtin datatype time.</p>

@param hours number of hours
@param minutes number of minutes
@param seconds number of seconds
@param fractionalSecond value of <code>null</code> indicates that this optional field is not set.
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException if any parameter is outside value
constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4932482 "createTime"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 5
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param in name "milliseconds" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java instance of XML Schema builtin datatype time.</p>

@param hours number of hours
@param minutes number of minutes
@param seconds number of seconds
@param milliseconds number of milliseconds
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException if any parameter is outside value
constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4932610 "getEon"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Accessors

<p>Return high order component for XML Schema 1.0 dateTime datatype field for
<code>year</code>.
<code>null</code> if this optional part of the year field is not defined.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.</p>
@return eon of this <code>XMLGregorianCalendar</code>. The value
returned is an integer multiple of 10^9.

@see #getYear()
@see #getEonAndYear()
"
      end

      operation 4932738 "getYear"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return low order component for XML Schema 1.0 dateTime datatype field for
<code>year</code> or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.</p>

@return year  of this <code>XMLGregorianCalendar</code>.

@see #getEon()
@see #getEonAndYear()
"
      end

      operation 4932866 "getEonAndYear"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return XML Schema 1.0 dateTime datatype field for
<code>year</code>.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.</p>

@return sum of <code>eon</code> and <code>BigInteger.valueOf(year)</code>
when both fields are defined. When only <code>year</code> is defined,
return it. When both <code>eon</code> and <code>year</code> are not
defined, return <code>null</code>.

@see #getEon()
@see #getYear()
"
      end

      operation 4932994 "getMonth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return number of month or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-month\">month field of date/time field mapping table</a>.</p>

@return year  of this <code>XMLGregorianCalendar</code>.

"
      end

      operation 4933122 "getDay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return day in month or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-day\">day field of date/time field mapping table</a>.</p>

@see #setDay(int)
"
      end

      operation 4933250 "getTimezone"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return timezone offset in minutes or
{@link DatatypeConstants#FIELD_UNDEFINED} if this optional field is not defined.

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-timezone\">timezone field of date/time field mapping table</a>.</p>

@see #setTimezone(int)
"
      end

      operation 4933378 "getHour"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return hours or {@link DatatypeConstants#FIELD_UNDEFINED}.
Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.</p>
@see #setTime(int, int, int)
"
      end

      operation 4933506 "getMinute"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return minutes or {@link DatatypeConstants#FIELD_UNDEFINED}.<\\p>
Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.</p>
@see #setTime(int, int, int)
"
      end

      operation 4933634 "getSecond"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return seconds or {@link DatatypeConstants#FIELD_UNDEFINED}.<\\p>

<p>Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.
When this field is not defined, the optional xs:dateTime
fractional seconds field, represented by
{@link #getFractionalSecond()} and {@link #getMillisecond()},
must not be defined.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.</p>

@return Second  of this <code>XMLGregorianCalendar</code>.

@see #getFractionalSecond()
@see #getMillisecond()
@see #setTime(int, int, int)
"
      end

      operation 4933762 "getSeconds"
	private return_type class_ref 145794 // BigDecimal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return result of adding second and fractional second field
"
      end

      operation 4933890 "getMillisecond"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return millisecond precision of {@link #getFractionalSecond()}.<\\p>

<p>This method represents a convenience accessor to infinite
precision fractional second value returned by
{@link #getFractionalSecond()}. The returned value is the rounded
down to milliseconds value of
{@link #getFractionalSecond()}. When {@link #getFractionalSecond()}
returns <code>null</code>, this method must return
{@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.</p>

@return Millisecond  of this <code>XMLGregorianCalendar</code>.

@see #getFractionalSecond()
@see #setTime(int, int, int)
"
      end

      operation 4934018 "getFractionalSecond"
	public return_type class_ref 145794 // BigDecimal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return fractional seconds.</p>

<p><code>null</code> is returned when this optional field is not defined.</p>

<p>Value constraints are detailed in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.</p>

<p>This optional field can only have a defined value when the
xs:dateTime second field, represented by ({@link #getSecond()},
does not return {@link DatatypeConstants#FIELD_UNDEFINED}).</p>

@return fractional seconds  of this <code>XMLGregorianCalendar</code>.

@see #getSecond()
@see #setTime(int, int, int, BigDecimal)
"
      end

      operation 4934146 "setYear"
	public explicit_return_type "void"
	nparams 1
	  param inout name "year" type class_ref 686338 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setters

<p>Set low and high order component of XSD <code>dateTime</code> year field.</p>

<p>Unset this field by invoking the setter with a parameter value of <code>null</code>.</p>

@param year value constraints summarized in <a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>year</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4934274 "setYear"
	public explicit_return_type "void"
	nparams 1
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set year of XSD <code>dateTime</code> year field.</p>

<p>Unset this field by invoking the setter with a parameter value of
{@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Note: if the absolute value of the <code>year</code> parameter
is less than 10^9, the eon component of the XSD year field is set to
<code>null</code> by this method.</p>

@param year value constraints are summarized in <a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.
  If year is {@link DatatypeConstants#FIELD_UNDEFINED}, then eon is set to <code>null</code>.
"
      end

      operation 4934402 "setEon"
	private explicit_return_type "void"
	nparams 1
	  param inout name "eon" type class_ref 686338 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set high order part of XSD <code>dateTime</code> year field.</p>

<p>Unset this field by invoking the setter with a parameter value of
<code>null</code>.</p>

@param eon value constraints summarized in <a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.
"
      end

      operation 4934530 "setMonth"
	public explicit_return_type "void"
	nparams 1
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set month.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param month value constraints summarized in <a href=\"#datetimefield-month\">month field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>month</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4934658 "setDay"
	public explicit_return_type "void"
	nparams 1
	  param in name "day" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set days in month.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param day value constraints summarized in <a href=\"#datetimefield-day\">day field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>day</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4934786 "setTimezone"
	public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the number of minutes in the timezone offset.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param offset value constraints summarized in <a href=\"#datetimefield-timezone\">
  timezone field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>offset</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4934914 "setTime"
	public explicit_return_type "void"
	nparams 3
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set time as one unit.</p>

@param hour value constraints are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.
@param minute value constraints are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.
@param second value constraints are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.

@see #setTime(int, int, int, BigDecimal)

@throws IllegalArgumentException if any parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4935042 "invalidFieldValue"
	private explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4935170 "testHour"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4935298 "setHour"
	public explicit_return_type "void"
	nparams 1
	  param in name "hour" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4935426 "setHour"
	private explicit_return_type "void"
	nparams 2
	  param in name "hour" explicit_type "int"
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4935554 "setMinute"
	public explicit_return_type "void"
	nparams 1
	  param in name "minute" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4935682 "setSecond"
	public explicit_return_type "void"
	nparams 1
	  param in name "second" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4935810 "setTime"
	public explicit_return_type "void"
	nparams 4
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param inout name "fractional" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set time as one unit, including the optional infinite precison
fractional seconds.</p>

@param hour value constraints are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.
@param minute value constraints are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.
@param second value constraints are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.
@param fractional value of <code>null</code> indicates this optional
                  field is not set.

@throws IllegalArgumentException if any parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4935938 "setTime"
	public explicit_return_type "void"
	nparams 4
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "millisecond" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set time as one unit, including optional milliseconds.</p>

@param hour value constraints are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.
@param minute value constraints are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.
@param second value constraints are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.
@param millisecond value of {@link DatatypeConstants#FIELD_UNDEFINED} indicates this
                   optional field is not set.

@throws IllegalArgumentException if any parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.
"
      end

      operation 4936066 "compare"
	public explicit_return_type "int"
	nparams 1
	  param inout name "rhs" type class_ref 683650 // XMLGregorianCalendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " comparisons

<p>Compare two instances of W3C XML Schema 1.0 date/time datatypes
according to partial order relation defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">W3C XML Schema 1.0 Part 2, Section 3.2.7.3,
<i>Order relation on dateTime</i></a>.</p>

<p><code>xsd:dateTime</code> datatype field mapping to accessors of
this class are defined in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.</p>

@param rhs instance of <code>XMLGregorianCalendar</code> to compare

@return the relationship between <code>lhs</code> and <code>rhs</code> as
  {@link DatatypeConstants#LESSER},
  {@link DatatypeConstants#EQUAL},
  {@link DatatypeConstants#GREATER} or
  {@link DatatypeConstants#INDETERMINATE}.

@throws NullPointerException if <code>lhs</code> or <code>rhs</code>
parameters are null.
"
      end

      operation 4936194 "normalize"
	public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Normalize this instance to UTC.</p>

<p>2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z</p>
<p>Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).</p>
"
      end

      operation 4936322 "normalizeToTimezone"
	private return_type class_ref 683650 // XMLGregorianCalendar
	nparams 1
	  param in name "timezone" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Normalize this instance to UTC.</p>

<p>2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z</p>
<p>Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).</p>
"
      end

      operation 4936450 "internalCompare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "P" type class_ref 683650 // XMLGregorianCalendar
	  param inout name "Q" type class_ref 683650 // XMLGregorianCalendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 <p>Implements Step B from http://www.w3.org/TR/xmlschema-2/#dateTime-order </p>
@param P calendar instance with normalized timezone offset or
         having same timezone as Q
@param Q calendar instance with normalized timezone offset or
         having same timezone as P

@return result of comparing P and Q, value of
  {@link DatatypeConstants#EQUAL},
  {@link DatatypeConstants#LESSER},
  {@link DatatypeConstants#GREATER} or
  {@link DatatypeConstants#INDETERMINATE}.
"
      end

      operation 4936578 "compareField"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "Pfield" explicit_type "int"
	  param in name "Qfield" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Implement Step B from
http://www.w3.org/TR/xmlschema-2/#dateTime-order.</p>
"
      end

      operation 4936706 "compareField"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "Pfield" type class_ref 686338 // BigInteger
	  param inout name "Qfield" type class_ref 686338 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4936834 "compareField"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "Pfield" type class_ref 145794 // BigDecimal
	  param inout name "Qfield" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4936962 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Indicates whether parameter <code>obj</code> is \"equal to\" this one.</p>

@param obj to compare.

@return <code>true</code> when <code>compare(this,(XMLGregorianCalendar)obj) == EQUAL.</code>.
"
      end

      operation 4937090 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a hash code consistent with the definition of the equals method.</p>

@return hash code of this object.
"
      end

      operation 4937218 "parse"
	class_operation public return_type class_ref 683650 // XMLGregorianCalendar
	nparams 1
	  param inout name "lexicalRepresentation" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new XMLGregorianCalendar object by
parsing its lexical string representation as defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">XML Schema 1.0 Part 2, Section 3.2.[7-14].1,
<i>Lexical Representation</i>.</a></p>

<p>The string representation may not have any leading and trailing whitespaces.</p>

<p>The parsing is done field by field so that
the following holds for any lexically correct string x:</p>
<pre>
new XMLGregorianCalendar(x).toXMLFormat().equals(x)
</pre>
Except for the noted lexical/canonical representation mismatches
listed in <a href=\"http://www.w3.org/2001/05/xmlschema-errata#e2-45\">
XML Schema 1.0 errata, Section 3.2.7.2</a>.

<p>Returns a non-null valid XMLGregorianCalendar object that holds the value
indicated by the lexicalRepresentation parameter.</p>

@param lexicalRepresentation Lexical representation of one the 8 XML Schema calendar datatypes.

@return <code>XMLGregorianCalendar</code> created from parsing <code>lexicalRepresentation</code> parameter.

@throws IllegalArgumentException
     If the given string does not conform to the aforementioned
     specification.
@throws NullPointerException
     If the given string is null.
"
      end

      operation 4937346 "toXMLFormat"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the lexical representation of <code>this</code> instance.
The format is specified in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">XML Schema 1.0 Part 2, Section 3.2.[7-14].1,
<i>Lexical Representation</i>\".</a></p>

<p>Specific target lexical representation format is determined by
{@link #getXMLSchemaType()}.</p>

@return XML, as <code>String</code>, representation of this <code>XMLGregorianCalendar</code>

@throws java.lang.IllegalStateException if the combination of set fields
   does not match one of the eight defined XML Schema builtin date/time datatypes.
"
      end

      operation 4937474 "getXMLSchemaType"
	public return_type class_ref 673666 // QName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the name of the XML Schema date/time type that this instance
maps to. Type is computed based on fields that are set.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"7\">
        Required fields for XML Schema 1.0 Date/Time Datatypes.<br/>
        <i>(timezone is optional for all date/time datatypes)</i>
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Datatype</td>
      <td>year</td>
      <td>month</td>
      <td>day</td>
      <td>hour</td>
      <td>minute</td>
      <td>second</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DATETIME}</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DATE}</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#TIME}</td>
      <td></td>
      <td></td>
      <td></td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GYEARMONTH}</td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GMONTHDAY}</td>
      <td></td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GYEAR}</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GMONTH}</td>
      <td></td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GDAY}</td>
      <td></td>
      <td></td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
  </tbody>
</table>

@throws java.lang.IllegalStateException if the combination of set fields
   does not match one of the eight defined XML Schema builtin
   date/time datatypes.
@return One of the following class constants:
  {@link DatatypeConstants#DATETIME},
  {@link DatatypeConstants#TIME},
  {@link DatatypeConstants#DATE},
  {@link DatatypeConstants#GYEARMONTH},
  {@link DatatypeConstants#GMONTHDAY},
  {@link DatatypeConstants#GYEAR},
  {@link DatatypeConstants#GMONTH} or
  {@link DatatypeConstants#GDAY}.
"
      end

      operation 4937602 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate instance by <code>getXMLSchemaType()</code> constraints.
@return true if data values are valid.
"
      end

      operation 4937730 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "duration" type class_ref 683778 // Duration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Add <code>duration</code> to this instance.<\\p>

<p>The computation is specified in
<a href=\"http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes\">XML Schema 1.0 Part 2, Appendix E,
<i>Adding durations to dateTimes</i>></a>.
<a href=\"#datetimefieldsmapping\">date/time field mapping table</a>
defines the mapping from XML Schema 1.0 <code>dateTime</code> fields
to this class' representation of those fields.</p>

@param duration Duration to add to this <code>XMLGregorianCalendar</code>.

@throws NullPointerException  when <code>duration</code> parameter is <code>null</code>.
"
      end

      classrelation 2108546 // FOUR (<unidirectional association>)
	relation 2108546 --->
	  a role_name "FOUR" init_value " BigInteger.valueOf(4)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108546 // FOUR (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2108674 // HUNDRED (<unidirectional association>)
	relation 2108674 --->
	  a role_name "HUNDRED" init_value " BigInteger.valueOf(100)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108674 // HUNDRED (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2108802 // FOUR_HUNDRED (<unidirectional association>)
	relation 2108802 --->
	  a role_name "FOUR_HUNDRED" init_value " BigInteger.valueOf(400)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108802 // FOUR_HUNDRED (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2108930 // SIXTY (<unidirectional association>)
	relation 2108930 --->
	  a role_name "SIXTY" init_value " BigInteger.valueOf(60)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2108930 // SIXTY (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2109058 // TWENTY_FOUR (<unidirectional association>)
	relation 2109058 --->
	  a role_name "TWENTY_FOUR" init_value " BigInteger.valueOf(24)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2109058 // TWENTY_FOUR (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2109186 // TWELVE (<unidirectional association>)
	relation 2109186 --->
	  a role_name "TWELVE" init_value " BigInteger.valueOf(12)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2109186 // TWELVE (<unidirectional association>)
	  b parent class_ref 686338 // BigInteger
      end

      classrelation 2109314 // DECIMAL_ZERO (<unidirectional association>)
	relation 2109314 --->
	  a role_name "DECIMAL_ZERO" init_value " new BigDecimal(\"0\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2109314 // DECIMAL_ZERO (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      classrelation 2109442 // DECIMAL_ONE (<unidirectional association>)
	relation 2109442 --->
	  a role_name "DECIMAL_ONE" init_value " new BigDecimal(\"1\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2109442 // DECIMAL_ONE (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      classrelation 2109570 // DECIMAL_SIXTY (<unidirectional association>)
	relation 2109570 --->
	  a role_name "DECIMAL_SIXTY" init_value " new BigDecimal(\"60\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2109570 // DECIMAL_SIXTY (<unidirectional association>)
	  b parent class_ref 145794 // BigDecimal
      end

      attribute 1091202 "daysInMonth"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 0,  // XML Schema months start at 1.
                                       31, 28, 31, 30, 31, 30,
                                       31, 31, 30, 31, 30, 31}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4937858 "maximumDayInMonthFor"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "year" type class_ref 686338 // BigInteger
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4937986 "maximumDayInMonthFor"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4938114 "toGregorianCalendar"
	public return_type class_ref 723202 // GregorianCalendar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Convert <code>this</code> to <code>java.util.GregorianCalendar</code>.</p>

<p>When <code>this</code> instance has an undefined field, this
conversion relies on the <code>java.util.GregorianCalendar</code> default
for its corresponding field. A notable difference between
XML Schema 1.0 date/time datatypes and <code>java.util.GregorianCalendar</code>
is that Timezone value is optional for date/time datatypes and it is
a required field for <code>java.util.GregorianCalendar</code>. See javadoc
for <code>java.util.TimeZone.getDefault()</code> on how the default
is determined. To explicitly specify the <code>TimeZone</code>
instance, see
{@link #toGregorianCalendar(TimeZone, Locale, XMLGregorianCalendar)}.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"2\">
         Field by Field Conversion from this class to
         <code>java.util.GregorianCalendar</code>
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
       <th><code>java.util.GregorianCalendar</code> field</th>
       <th><code>javax.xml.datatype.XMLGregorianCalendar</code> field</th>
    </tr>
    <tr>
      <th><code>ERA</code></th>
      <th>{@link #getEonAndYear()}<code>.signum() < 0 ? GregorianCalendar.BC : GregorianCalendar.AD</code></th>
    </tr>
    <tr>
      <th><code>YEAR</code></th>
      <th>{@link #getEonAndYear()}<code>.abs().intValue()</code><i>*</i></th>
    </tr>
    <tr>
      <th><code>MONTH</code></th>
      <th>{@link #getMonth()}<code> - 1</code></th>
    </tr>
    <tr>
      <th><code>DAY_OF_MONTH</code></th>
      <th>{@link #getDay()}</th>
    </tr>
    <tr>
      <th><code>AM_PM</code></th>
      <th>{@link #getHour()} < 12 : Calendar.AM : Calendar.PM</th>
    </tr>
    <tr>
      <th><code>HOUR_OF_DAY</code></th>
      <th>{@link #getHour()}</th>
    </tr>
    <tr>
      <th><code>MINUTE</code></th>
      <th>{@link #getMinute()}</th>
    </tr>
    <tr>
      <th><code>SECOND</code></th>
      <th>{@link #getSecond()}</th>
    </tr>
    <tr>
      <th><code>MILLISECOND</code></th>
      <th>get millisecond order from {@link #getFractionalSecond()}<i>*</i> </th>
    </tr>
    <tr>
      <th><code>GregorianCalendar.setTimeZone(TimeZone)</code></th>
      <th>{@link #getTimezone()} formatted into Custom timezone id</th>
    </tr>
  </tbody>
</table>
<i>*</i> designates possible loss of precision during the conversion due
to source datatype having higer precison than target datatype.

<p>To ensure consistency in conversion implementations, the new
<code>GregorianCalendar</code> should be instantiated in following
manner.
<ul>
  <li>Using <code>timeZone</code> value as defined above, create a new
<code>java.util.GregorianCalendar(timeZone,Locale.getDefault())</code>.
  </li>
  <li>Initialize all GregorianCalendar fields by calling {(@link GegorianCalendar#clear()}.</li>
  <li>Obtain a pure Gregorian Calendar by invoking
  <code>GregorianCalendar.setGregorianChange(
  new Date(Long.MIN_VALUE))</code>.</li>
  <li>Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY,
      MINUTE, SECOND and MILLISECOND are set using the method
      <code>Calendar.set(int,int)</code></li>
</ul>
</p>

@see #toGregorianCalendar(java.util.TimeZone, java.util.Locale, XMLGregorianCalendar)
"
      end

      operation 4938242 "getDefaultLocale"
	private return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return default locale
"
      end

      operation 4938370 "toGregorianCalendar"
	public return_type class_ref 723202 // GregorianCalendar
	nparams 3
	  param inout name "timezone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	  param inout name "defaults" type class_ref 683650 // XMLGregorianCalendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Convert <code>this</code> along with provided parameters
to <code>java.util.GregorianCalendar</code> instance.</p>

<p> Since XML Schema 1.0 date/time datetypes has no concept of
timezone ids or daylight savings timezone ids, this conversion operation
allows the user to explicitly specify one with
<code>timezone</code> parameter.</p>

<p>To compute the return value's <code>TimeZone</code> field,
<ul>
<li>when parameter <code>timeZone</code> is non-null,
it is the timezone field.</li>
<li>else when <code>this.getTimezone() != DatatypeConstants.FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using the <code>this.getTimezone()</code>.</li>
<li>else when <code>defaults.getTimezone() != DatatypeConstants.FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using <code>defaults.getTimezone()</code>.</li>
<li>else use the <code>GregorianCalendar</code> default timezone value
for the host is definedas specified by
<code>java.util.TimeZone.getDefault()</code>.</li></p>

<p>To ensure consistency in conversion implementations, the new
<code>GregorianCalendar</code> should be instantiated in following
manner.
<ul>
  <li>Create a new <code>java.util.GregorianCalendar(TimeZone,
      Locale)</code> with TimeZone set as specified above and the
      <code>Locale</code> parameter.
  </li>
  <li>Initialize all GregorianCalendar fields by calling {(@link GegorianCalendar#clear()}.</li>
  <li>Obtain a pure Gregorian Calendar by invoking
  <code>GregorianCalendar.setGregorianChange(
  new Date(Long.MIN_VALUE))</code>.</li>
  <li>Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY,
      MINUTE, SECOND and MILLISECOND are set using the method
      <code>Calendar.set(int,int)</code></li>
</ul>

@param timezone provide Timezone. <code>null</code> is a legal value.
@param aLocale  provide explicit Locale. Use default GregorianCalendar locale if
                value is <code>null</code>.
@param defaults provide default field values to use when corresponding
                field for this instance is DatatypeConstants.FIELD_UNDEFINED or null.
                If <code>defaults</code>is <code>null</code> or a field
                within the specified <code>defaults</code> is undefined,
                just use <code>java.util.GregorianCalendar</code> defaults.
@return a java.util.GregorianCalendar conversion of this instance.

@see #LEAP_YEAR_DEFAULT
"
      end

      operation 4938498 "getTimeZone"
	public return_type class_ref 723970 // TimeZone
	nparams 1
	  param in name "defaultZoneoffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a <code>java.util.TimeZone</code> for this class.</p>

<p>If timezone field is defined for this instance,
returns TimeZone initialized with custom timezone id
of zoneoffset. If timezone field is undefined,
try the defaultZoneoffset that was passed in.
If defaultZoneoffset is DatatypeConstants.FIELD_UNDEFINED, return
default timezone for this host.
(Same default as java.util.GregorianCalendar).</p>

@param defaultZoneoffset default zoneoffset if this zoneoffset is
{@link DatatypeConstants#FIELD_UNDEFINED}.

@return TimeZone for this.
"
      end

      operation 4938626 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates and returns a copy of this object.</p>

@return copy of this <code>Object</code>
"
      end

      operation 4938754 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Unset all fields to undefined.</p>

<p>Set all int fields to {@link DatatypeConstants#FIELD_UNDEFINED} and reference fields
to null.</p>
"
      end

      operation 4938882 "setMillisecond"
	public explicit_return_type "void"
	nparams 1
	  param in name "millisecond" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4939010 "setFractionalSecond"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fractional" type class_ref 145794 // BigDecimal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 724482 "Parser"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2109698 // format (<unidirectional association>)
	  relation 2109698 --->
	    a role_name "format" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2109698 // format (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2109826 // value (<unidirectional association>)
	  relation 2109826 --->
	    a role_name "value" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2109826 // value (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1091330 "flen"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1091458 "vlen"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1091586 "fidx"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1091714 "vidx"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 4939138 "Parser"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "format" type class_ref 128130 // String
	    param inout name "value" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4939266 "parse"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Parse a formated <code>String</code> into an <code>XMLGregorianCalendar</code>.</p>

<p>If <code>String</code> is not formated as a legal <code>XMLGregorianCalendar</code> value,
an <code>IllegalArgumentException</code> is thrown.</p>

@throws IllegalArgumentException If <code>String</code> is not formated as a legal <code>XMLGregorianCalendar</code> value.
"
	end

	operation 4939394 "peek"
	  private explicit_return_type "char"
	  nparams 0
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4939522 "read"
	  private explicit_return_type "char"
	  nparams 0
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4939650 "skip"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "ch" explicit_type "char"
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4939778 "parseInt"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "minDigits" explicit_type "int"
	    param in name "maxDigits" explicit_type "int"
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4939906 "parseAndSetYear"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "minDigits" explicit_type "int"
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4940034 "parseBigDecimal"
	  private return_type class_ref 145794 // BigDecimal
	  nparams 0
	  nexceptions 1
	    exception class_ref 187778 // IllegalArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 4940162 "isDigit"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4940290 "format"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "format" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this object according to the format specification.

<p>
I wrote a custom format method for a particular format string to
see if it improves the performance, but it didn't. So this interpreting
approach isn't too bad.

<p>
StringBuffer -> StringBuilder change had a very visible impact.
It almost cut the execution time to half, but unfortunately we can't use it
because we need to run on JDK 1.3
"
      end

      operation 4940418 "print2Number"
	private explicit_return_type "int"
	nparams 3
	  param inout name "out" explicit_type "char"
	multiplicity "[]"
	  param in name "bufptr" explicit_type "int"
	  param in name "number" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints an int as two digits into the buffer.

@param number
     Number to be printed. Must be positive.
"
      end

      operation 4940546 "print4Number"
	private explicit_return_type "int"
	nparams 3
	  param inout name "out" explicit_type "char"
	multiplicity "[]"
	  param in name "bufptr" explicit_type "int"
	  param in name "number" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints an int as four digits into the buffer.

@param number
     Number to be printed. Must be positive.
"
      end

      operation 4940674 "sanitize"
	class_operation package return_type class_ref 686338 // BigInteger
	nparams 2
	  param inout name "value" type class_ref 398210 // Number
	  param in name "signum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute <code>value*signum</code> where value==null is treated as
value==0.
@return non-null {@link BigInteger}.
"
      end

      operation 4940802 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p><code>reset()</code> is designed to allow the reuse of existing
<code>XMLGregorianCalendar</code>s thus saving resources associated
 with the creation of new <code>XMLGregorianCalendar</code>s.</p>
"
      end
    end
  end

  deploymentview 158082 "datatype"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 502402 "DatatypeFactoryImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.math.BigDecimal;
import java.util.GregorianCalendar;
import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.Duration;
import javax.xml.datatype.XMLGregorianCalendar;
${definition}"
      associated_elems
	class_ref 722946 // DatatypeFactoryImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 502658 "DurationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectStreamException;
import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.Duration;
import javax.xml.datatype.XMLGregorianCalendar;
import com.sun.org.apache.xerces.internal.util.DatatypeMessageFormatter;
${definition}"
      associated_elems
	class_ref 723458 // DurationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 502786 "DurationDayTimeImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.math.BigDecimal;
import javax.xml.datatype.DatatypeConstants;
${definition}"
      associated_elems
	class_ref 723330 // DurationDayTimeImpl
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 502914 "DurationYearMonthImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import javax.xml.datatype.DatatypeConstants;
${definition}"
      associated_elems
	class_ref 724226 // DurationYearMonthImpl
      end
      comment "Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 503170 "XMLGregorianCalendarImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.TimeZone;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Date;
import java.util.Locale;
import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.Duration;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import com.sun.org.apache.xerces.internal.util.DatatypeMessageFormatter;
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
${definition}"
      associated_elems
	class_ref 724354 // XMLGregorianCalendarImpl
      end
      comment "Copyright (c) 2004, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
