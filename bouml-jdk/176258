format 222
"serialize" // jdk1.8::com::sun::org::apache::xml::internal::serialize
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/serialize/"
  java_package "com.sun.org.apache.xml.internal.serialize"
  classview 169602 "serialize"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 784386 "BaseMarkupSerializer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class for a serializer supporting both DOM and SAX pretty
serializing of XML/HTML/XHTML documents. Derives classes perform
the method-specific serializing, this class provides the common
serializing mechanisms.
<p>
The serializer must be initialized with the proper writer and
output format before it can be used by calling {@link #setOutputCharStream}
or {@link #setOutputByteStream} for the writer and {@link #setOutputFormat}
for the output format.
<p>
The serializer can be reused any number of times, but cannot
be used concurrently by two threads.
<p>
If an output stream is used, the encoding is taken from the
output format (defaults to <tt>UTF-8</tt>). If a writer is
used, make sure the writer uses the same encoding (if applies)
as specified in the output format.
<p>
The serializer supports both DOM and SAX. DOM serializing is done
by calling {@link #serialize(Document)} and SAX serializing is done by firing
SAX events and using the serializer as a document handler.
This also applies to derived class.
<p>
If an I/O exception occurs while serializing, the serializer
will not throw an exception directly, but only throw it
at the end of serializing (either DOM or SAX's {@link
org.xml.sax.DocumentHandler#endDocument}.
<p>
For elements that are not specified as whitespace preserving,
the serializer will potentially break long text lines at space
boundaries, indent lines, and serialize elements on separate
lines. Line terminators will be regarded as spaces, and
spaces at beginning of line will be stripped.
<p>
When indenting, the serializer is capable of detecting seemingly
element content, and serializing these elements indented on separate
lines. An element is serialized indented when it is the first or
last child of an element, or immediate following or preceding
another element.


@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@author <a href=\"mailto:rahul.srivastava@sun.com\">Rahul Srivastava</a>
@author Elena Litani, IBM
@author Sunitha Reddy, Sun Microsystems
@see Serializer
@see LSSerializer
"
      classrelation 2505218 // <realization>
	relation 2505218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505218 // <realization>
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2505346 // <realization>
	relation 2505346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505346 // <realization>
	  b parent class_ref 722178 // DocumentHandler
      end

      classrelation 2505474 // <realization>
	relation 2505474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505474 // <realization>
	  b parent class_ref 617602 // LexicalHandler
      end

      classrelation 2505602 // <realization>
	relation 2505602 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505602 // <realization>
	  b parent class_ref 617986 // DTDHandler
      end

      classrelation 2505730 // <realization>
	relation 2505730 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505730 // <realization>
	  b parent class_ref 617858 // DeclHandler
      end

      classrelation 2505858 // <realization>
	relation 2505858 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505858 // <realization>
	  b parent class_ref 784514 // DOMSerializer
      end

      classrelation 2505986 // <realization>
	relation 2505986 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2505986 // <realization>
	  b parent class_ref 784642 // Serializer
      end

      attribute 1198338 "features"
	protected explicit_type "short"
	init_value " 0xFFFFFFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DOM L3 implementation
"
      end

      classrelation 2506114 // fDOMErrorHandler (<unidirectional association>)
	relation 2506114 --->
	  a role_name "fDOMErrorHandler" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2506114 // fDOMErrorHandler (<unidirectional association>)
	  b parent class_ref 662018 // DOMErrorHandler
      end

      classrelation 2506242 // fDOMError (<unidirectional association>)
	relation 2506242 --->
	  a role_name "fDOMError" init_value " new DOMErrorImpl()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2506242 // fDOMError (<unidirectional association>)
	  b parent class_ref 659330 // DOMErrorImpl
      end

      classrelation 2506370 // fDOMFilter (<unidirectional association>)
	relation 2506370 --->
	  a role_name "fDOMFilter" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2506370 // fDOMFilter (<unidirectional association>)
	  b parent class_ref 784898 // LSSerializerFilter
      end

      classrelation 2506498 // _encodingInfo (<unidirectional association>)
	relation 2506498 --->
	  a role_name "_encodingInfo" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2506498 // _encodingInfo (<unidirectional association>)
	  b parent class_ref 785026 // EncodingInfo
      end

      classrelation 2506626 // _elementStates (<unidirectional association>)
	relation 2506626 --->
	  a role_name "_elementStates" multiplicity "[]" private
	    comment "
Holds array of all element states that have been entered.
The array is automatically resized. When leaving an element,
it's state is not removed but reused when later returning
to the same nesting level.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2506626 // _elementStates (<unidirectional association>)
	  b parent class_ref 785154 // ElementState
      end

      attribute 1198466 "_elementStateCount"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the next state to place in the array,
or one plus the index of the current state. When zero,
we are in no state.

"
      end

      classrelation 2506754 // _preRoot (<unidirectional association>)
	relation 2506754 --->
	  a role_name "_preRoot" private
	    comment "
Vector holding comments and PIs that come before the root
element (even after it), see {@link #serializePreRoot}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2506754 // _preRoot (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1198594 "_started"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the document has been started (header serialized), this
flag is set to true so it's not started twice.

"
      end

      attribute 1198722 "_prepared"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if the serializer has been prepared. This flag is set
to false when the serializer is reset prior to using it,
and to true after it has been prepared for usage.

"
      end

      classrelation 2506882 // _prefixes (<unidirectional association>)
	relation 2506882 --->
	  a role_name "_prefixes" protected
	    comment "
Association between namespace URIs (keys) and prefixes (values).
Accumulated here prior to starting an element and placing this
list in the element state.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 2506882 // _prefixes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2507010 // _docTypePublicId (<unidirectional association>)
	relation 2507010 --->
	  a role_name "_docTypePublicId" protected
	    comment "
The system identifier of the document type, if known.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507010 // _docTypePublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2507138 // _docTypeSystemId (<unidirectional association>)
	relation 2507138 --->
	  a role_name "_docTypeSystemId" protected
	    comment "
The system identifier of the document type, if known.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507138 // _docTypeSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2507266 // _format (<unidirectional association>)
	relation 2507266 --->
	  a role_name "_format" protected
	    comment "
The output format associated with this serializer. This will never
be a null reference. If no format was passed to the constructor,
the default one for this document type will be used. The format
object is never changed by the serializer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507266 // _format (<unidirectional association>)
	  b parent class_ref 784770 // OutputFormat
      end

      classrelation 2507394 // _printer (<unidirectional association>)
	relation 2507394 --->
	  a role_name "_printer" protected
	    comment "
The printer used for printing text parts.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507394 // _printer (<unidirectional association>)
	  b parent class_ref 785282 // Printer
      end

      attribute 1198850 "_indenting"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if indenting printer.

"
      end

      classrelation 2507522 // fStrBuffer (<unidirectional association>)
	relation 2507522 --->
	  a role_name "fStrBuffer" init_value " new StringBuffer(40)" const_relation protected
	    comment " Temporary buffer to store character data 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507522 // fStrBuffer (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      classrelation 2507650 // _writer (<unidirectional association>)
	relation 2507650 --->
	  a role_name "_writer" private
	    comment "
The underlying writer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507650 // _writer (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end

      classrelation 2507778 // _output (<unidirectional association>)
	relation 2507778 --->
	  a role_name "_output" private
	    comment "
The output stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507778 // _output (<unidirectional association>)
	  b parent class_ref 151298 // OutputStream
      end

      classrelation 2507906 // fCurrentNode (<unidirectional association>)
	relation 2507906 --->
	  a role_name "fCurrentNode" init_value " null" protected
	    comment " Current node that is being processed  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2507906 // fCurrentNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      operation 5515010 "BaseMarkupSerializer"
	protected explicit_return_type ""
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------//
 Constructor and initialization //
--------------------------------//

Protected constructor can only be used by derived class.
Must initialize the serializer before serializing any document,
by calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first
"
      end

      operation 5515138 "asDocumentHandler"
	public return_type class_ref 722178 // DocumentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5515266 "asContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5515394 "asDOMSerializer"
	public return_type class_ref 784514 // DOMSerializer
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5515522 "setOutputByteStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5515650 "setOutputCharStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5515778 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5515906 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5516034 "prepare"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5516162 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------//
 DOM document serializing methods //
----------------------------------//

Serializes the DOM element using the previously specified
writer and output format. Throws an exception only if
an I/O exception occured while serializing.

@param elem The element to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5516290 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes a node using the previously specified
writer and output format. Throws an exception only if
an I/O exception occured while serializing.

@param node Node to serialize
@throws IOException An I/O exception occured while serializing
"
      end

      operation 5516418 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "frag" type class_ref 650114 // DocumentFragment
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes the DOM document fragmnt using the previously specified
writer and output format. Throws an exception only if
an I/O exception occured while serializing.

@param elem The element to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5516546 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes the DOM document using the previously specified
writer and output format. Throws an exception only if
an I/O exception occured while serializing.

@param doc The document to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5516674 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 SAX document handler serializing methods //
------------------------------------------//"
      end

      operation 5516802 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5516930 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517058 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "code" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517186 "processingInstructionIO"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "code" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517314 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517442 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517570 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517698 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517826 "startNonEscaping"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5517954 "endNonEscaping"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5518082 "startPreserving"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5518210 "endPreserving"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5518338 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called at the end of the document to wrap it up.
Will flush the output stream and throw an exception
if any I/O error occured while serializing.

@throws SAXException An I/O exception occured during
 serializing
"
      end

      operation 5518466 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5518594 "endEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5518722 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5518850 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------//
 SAX content handler serializing methods //
-----------------------------------------//"
      end

      operation 5518978 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5519106 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5519234 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 SAX DTD/Decl handler serializing methods //
------------------------------------------//"
      end

      operation 5519362 "endDTD"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5519490 "elementDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "model" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5519618 "attributeDecl"
	public explicit_return_type "void"
	nparams 5
	  param inout name "eName" type class_ref 128130 // String
	  param inout name "aName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "valueDefault" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5519746 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5519874 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5520002 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "notationName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5520130 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5520258 "serializeNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 Generic node serializing methods methods //
------------------------------------------//

Serialize the DOM node. This method is shared across XML, HTML and XHTML
serializers and the differences are masked out in a separate {@link
#serializeElement}.

@param node The node to serialize
@see #serializeElement
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5520386 "serializeDocument"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Serializes XML Declaration, according to 'xml-declaration' property.
"
      end

      operation 5520514 "serializeDTD"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Serializes DTD, if present.
"
      end

      operation 5520642 "content"
	protected return_type class_ref 785154 // ElementState
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must be called by a method about to print any type of content.
If the element was just opened, the opening tag is closed and
will be matched to a closing tag. Returns the current element
state with <tt>empty</tt> and <tt>afterElement</tt> set to false.

@return The current element state
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5520770 "characters"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to print the text contents in the prevailing element format.
Since this method is capable of printing text as CDATA, it is used
for that purpose as well. White space handling is determined by the
current element state. In addition, the output format can dictate
whether the text is printed as CDATA or unescaped.

@param text The text to print
@param unescaped True is should print unescaped
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5520898 "getEntityRef"
	abstract protected return_type class_ref 128130 // String
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suitable entity reference for this character value,
or null if no such entity exists. Calling this method with <tt>'&amp;'</tt>
will return <tt>\"&amp;amp;\"</tt>.

@param ch Character value
@return Character entity name, or null
"
      end

      operation 5521026 "serializeElement"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to serializee the DOM element. The element is serialized based on
the serializer's method (XML, HTML, XHTML).

@param elem The element to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5521154 "serializePreRoot"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Comments and PIs cannot be serialized before the root element,
because the root element serializes the document type, which
generally comes first. Instead such PIs and comments are
accumulated inside a vector and serialized by calling this
method. Will be called when the root element is serialized
and when the document finished serializing.

@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5521282 "printCDATAText"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "---------------------------------------------//
 Text pretty printing and formatting methods //
---------------------------------------------//"
      end

      operation 5521410 "surrogates"
	protected explicit_return_type "void"
	nparams 2
	  param in name "high" explicit_type "int"
	  param in name "low" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5521538 "printText"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "preserveSpace" explicit_type "boolean"
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to print additional text with whitespace handling.
If spaces are preserved, the text is printed as if by calling
{@link #printText(String,boolean,boolean)} with a call to {@link Printer#breakLine}
for each new line. If spaces are not preserved, the text is
broken at space boundaries if longer than the line width;
Multiple spaces are printed as such, but spaces at beginning
of line are removed.

@param text The text to print
@param preserveSpace Space preserving flag
@param unescaped Print unescaped
"
      end

      operation 5521666 "printText"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "preserveSpace" explicit_type "boolean"
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5521794 "printDoctypeURL"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print a document type public or system identifier URL.
Encapsulates the URL in double quotes, escapes non-printing
characters and print it equivalent to {@link #printText}.

@param url The document type url to print
"
      end

      operation 5521922 "printEscaped"
	protected explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5522050 "printHex"
	package explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Escapes chars
"
      end

      operation 5522178 "printEscaped"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Escapes a string so it may be printed as text content or attribute
value. Non printable characters are escaped using character references.
Where the format specifies a deault entity reference, that reference
is used (e.g. <tt>&amp;lt;</tt>).

@param source The string to escape
"
      end

      operation 5522306 "getElementState"
	protected return_type class_ref 785154 // ElementState
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------//
 Element state handling methods //
--------------------------------//

Return the state of the current element.

@return Current element state
"
      end

      operation 5522434 "enterElementState"
	protected return_type class_ref 785154 // ElementState
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "preserveSpace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enter a new element state for the specified element.
Tag name and space preserving is specified, element
state is initially empty.

@return Current element state, or null
"
      end

      operation 5522562 "leaveElementState"
	protected return_type class_ref 785154 // ElementState
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave the current element state and return to the
state of the parent element. If this was the root
element, return to the state of the document.

@return Previous element state
"
      end

      operation 5522690 "isDocumentState"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if in the state of the document.
Returns true before entering any element and after
leaving the root element.

@return True if in the state of the document
"
      end

      operation 5522818 "getPrefix"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the namespace prefix for the specified URI.
If the URI has been mapped to a prefix, returns the
prefix, otherwise returns null.

@param namespaceURI The namespace URI
@return The namespace prefix if known, or null
"
      end

      operation 5522946 "modifyDOMError"
	protected return_type class_ref 659458 // DOMError
	nparams 4
	  param inout name "message" type class_ref 128130 // String
	  param in name "severity" explicit_type "short"
	  param inout name "type" type class_ref 128130 // String
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method modifies global DOM error object

@param message
@param severity
@param type
@return a DOMError
"
      end

      operation 5523074 "fatalError"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5523202 "checkUnboundNamespacePrefixedNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM level 3:
Check a node to determine if it contains unbound namespace prefixes.

@param node The node to check for unbound namespace prefices
"
      end
    end

    class 784514 "DOMSerializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for a DOM serializer implementation.


@author <a href=\"mailto:Scott_Boag/CAM/Lotus@lotus.com\">Scott Boag</a>
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      operation 5513858 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serialized the DOM element. Throws an exception only if
an I/O exception occured while serializing.

@param elem The element to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5513986 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes the DOM document. Throws an exception only if
an I/O exception occured while serializing.

@param doc The document to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end

      operation 5514114 "serialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "frag" type class_ref 650114 // DocumentFragment
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes the DOM document fragment. Throws an exception
only if an I/O exception occured while serializing.

@param frag The document fragment to serialize
@throws IOException An I/O exception occured while
  serializing
"
      end
    end

    class 784642 "Serializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for a DOM serializer implementation, factory for DOM and SAX
serializers, and static methods for serializing DOM documents.
<p>
To serialize a document using SAX events, create a compatible serializer
and pass it around as a {@link
org.xml.sax.DocumentHandler}. If an I/O error occurs while serializing, it will
be thrown by {@link DocumentHandler#endDocument}. The SAX serializer
may also be used as {@link org.xml.sax.DTDHandler}, {@link org.xml.sax.ext.DeclHandler} and
{@link org.xml.sax.ext.LexicalHandler}.
<p>
To serialize a DOM document or DOM element, create a compatible
serializer and call it's {@link
DOMSerializer#serialize(Document)} or {@link DOMSerializer#serialize(Element)} methods.
Both methods would produce a full XML document, to serizlie only
the portion of the document use {@link OutputFormat#setOmitXMLDeclaration}
and specify no document type.
<p>
The {@link OutputFormat} dictates what underlying serialized is used
to serialize the document based on the specified method. If the output
format or method are missing, the default is an XML serializer with
UTF-8 encoding and now indentation.


@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@author <a href=\"mailto:Scott_Boag/CAM/Lotus@lotus.com\">Scott Boag</a>
@see DocumentHandler
@see ContentHandler
@see OutputFormat
@see DOMSerializer
"
      operation 5514242 "setOutputByteStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output stream to which the document should be
serialized. This method should not be called while the
serializer is in the process of serializing a document.
"
      end

      operation 5514370 "setOutputCharStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 428034 // Writer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies a writer to which the document should be serialized.
This method should not be called while the serializer is in
the process of serializing a document.
"
      end

      operation 5514498 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies an output format for this serializer. It the
serializer has already been associated with an output format,
it will switch to the new format. This method should not be
called while the serializer is in the process of serializing
a document.

@param format The output format to use
"
      end

      operation 5514626 "asDocumentHandler"
	public return_type class_ref 722178 // DocumentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link DocumentHandler} interface into this serializer.
If the serializer does not support the {@link DocumentHandler}
interface, it should return null.
"
      end

      operation 5514754 "asContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link ContentHandler} interface into this serializer.
If the serializer does not support the {@link ContentHandler}
interface, it should return null.
"
      end

      operation 5514882 "asDOMSerializer"
	public return_type class_ref 784514 // DOMSerializer
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link DOMSerializer} interface into this serializer.
If the serializer does not support the {@link DOMSerializer}
interface, it should return null.
"
      end
    end

    class 784770 "OutputFormat"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Specifies an output format to control the serializer. Based on the
XSLT specification for output format, plus additional parameters.
Used to select the suitable serializer and determine how the
document should be formatted on output.
<p>
The two interesting constructors are:
<ul>
<li>{@link #OutputFormat(String,String,boolean)} creates a format
 for the specified method (XML, HTML, Text, etc), encoding and indentation
<li>{@link #OutputFormat(Document,String,boolean)} creates a format
 compatible with the document type (XML, HTML, Text, etc), encoding and
 indentation
</ul>


@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
        <a href=\"mailto:visco@intalio.com\">Keith Visco</a>
@see Serializer
@see Method
@see LineSeparator
"
      class 786818 "DTD"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2515330 // HTMLPublicId (<unidirectional association>)
	  relation 2515330 --->
	    a role_name "HTMLPublicId" init_value " \"-//W3C//DTD HTML 4.01//EN\"" class_relation const_relation public
	      comment "
Public identifier for HTML 4.01 (Strict) document type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2515330 // HTMLPublicId (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2515458 // HTMLSystemId (<unidirectional association>)
	  relation 2515458 --->
	    a role_name "HTMLSystemId" init_value "
            \"http://www.w3.org/TR/html4/strict.dtd\"" class_relation const_relation public
	      comment "
System identifier for HTML 4.01 (Strict) document type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2515458 // HTMLSystemId (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2515586 // XHTMLPublicId (<unidirectional association>)
	  relation 2515586 --->
	    a role_name "XHTMLPublicId" init_value "
            \"-//W3C//DTD XHTML 1.0 Strict//EN\"" class_relation const_relation public
	      comment "
Public identifier for XHTML 1.0 (Strict) document type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2515586 // XHTMLPublicId (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2515714 // XHTMLSystemId (<unidirectional association>)
	  relation 2515714 --->
	    a role_name "XHTMLSystemId" init_value "
            \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"" class_relation const_relation public
	      comment "
System identifier for XHTML 1.0 (Strict) document type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2515714 // XHTMLSystemId (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      class 786946 "Defaults"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1204738 "Indent"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "If indentation is turned on, the default identation
level is 4.

@see #setIndenting(boolean)

"
	end

	classrelation 2515842 // Encoding (<unidirectional association>)
	  relation 2515842 --->
	    a role_name "Encoding" init_value " \"UTF-8\"" class_relation const_relation public
	      comment "
The default encoding for Web documents it UTF-8.

@see #getEncoding()

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2515842 // Encoding (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1204866 "LineWidth"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 72"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The default line width at which to break long lines
when identing. This is set to 72.

"
	end
      end

      classrelation 2515970 // _method (<unidirectional association>)
	relation 2515970 --->
	  a role_name "_method" private
	    comment "
Holds the output method specified for this document,
or null if no method was specified.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2515970 // _method (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2516098 // _version (<unidirectional association>)
	relation 2516098 --->
	  a role_name "_version" private
	    comment "
Specifies the version of the output method.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2516098 // _version (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1204994 "_indent"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The indentation level, or zero if no indentation
was requested.

"
      end

      classrelation 2516226 // _encoding (<unidirectional association>)
	relation 2516226 --->
	  a role_name "_encoding" init_value " Defaults.Encoding" private
	    comment "
The encoding to use, if an input stream is used.
The default is always UTF-8.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2516226 // _encoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2516354 // _encodingInfo (<unidirectional association>)
	relation 2516354 --->
	  a role_name "_encodingInfo" init_value " null" private
	    comment "
The EncodingInfo instance for _encoding.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2516354 // _encodingInfo (<unidirectional association>)
	  b parent class_ref 785026 // EncodingInfo
      end

      attribute 1205122 "_allowJavaNames"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " whether java names for encodings are permitted
"
      end

      classrelation 2516482 // _mediaType (<unidirectional association>)
	relation 2516482 --->
	  a role_name "_mediaType" private
	    comment "
The specified media type or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2516482 // _mediaType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2516610 // _doctypeSystem (<unidirectional association>)
	relation 2516610 --->
	  a role_name "_doctypeSystem" private
	    comment "
The specified document type system identifier, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2516610 // _doctypeSystem (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2516738 // _doctypePublic (<unidirectional association>)
	relation 2516738 --->
	  a role_name "_doctypePublic" private
	    comment "
The specified document type public identifier, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2516738 // _doctypePublic (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1205250 "_omitXmlDeclaration"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ture if the XML declaration should be ommited;

"
      end

      attribute 1205378 "_omitDoctype"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ture if the DOCTYPE declaration should be ommited;

"
      end

      attribute 1205506 "_omitComments"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ture if comments should be ommited;

"
      end

      attribute 1205634 "_stripComments"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ture if the comments should be ommited;

"
      end

      attribute 1205762 "_standalone"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if the document type should be marked as standalone.

"
      end

      classrelation 2516866 // _cdataElements (<unidirectional association>)
	relation 2516866 --->
	  a role_name "_cdataElements" multiplicity "[]" private
	    comment "
List of element tag names whose text node children must
be output as CDATA.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2516866 // _cdataElements (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2516994 // _nonEscapingElements (<unidirectional association>)
	relation 2516994 --->
	  a role_name "_nonEscapingElements" multiplicity "[]" private
	    comment "
List of element tag names whose text node children must
be output unescaped.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2516994 // _nonEscapingElements (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2517122 // _lineSeparator (<unidirectional association>)
	relation 2517122 --->
	  a role_name "_lineSeparator" init_value " LineSeparator.Web" private
	    comment "
The selected line separator.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2517122 // _lineSeparator (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1205890 "_lineWidth"
	private explicit_type "int"
	init_value " Defaults.LineWidth"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The line width at which to wrap long lines when indenting.

"
      end

      attribute 1206018 "_preserve"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if spaces should be preserved in elements that do not
specify otherwise, or specify the default behavior.

"
      end

      attribute 1206146 "_preserveEmptyAttributes"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, an empty string valued attribute is output as \"\". If false and
and we are using the HTMLSerializer, then only the attribute name is
serialized. Defaults to false for backwards compatibility.

"
      end

      operation 5536642 "OutputFormat"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new output format with the default values.
"
      end

      operation 5536770 "OutputFormat"
	public explicit_return_type ""
	nparams 3
	  param inout name "method" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "indenting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new output format with the default values for
the specified method and encoding. If <tt>indent</tt>
is true, the document will be pretty printed with the default
indentation level and default line wrapping.

@param method The specified output method
@param encoding The specified encoding
@param indenting True for pretty printing
@see #setEncoding
@see #setIndenting
@see #setMethod
"
      end

      operation 5536898 "OutputFormat"
	public explicit_return_type ""
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new output format with the proper method,
document type identifiers and media type for the specified
document.

@param doc The document to output
@see #whichMethod
"
      end

      operation 5537026 "OutputFormat"
	public explicit_return_type ""
	nparams 3
	  param inout name "doc" type class_ref 378626 // Document
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "indenting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new output format with the proper method,
document type identifiers and media type for the specified
document, and with the specified encoding. If <tt>indent</tt>
is true, the document will be pretty printed with the default
indentation level and default line wrapping.

@param doc The document to output
@param encoding The specified encoding
@param indenting True for pretty printing
@see #setEncoding
@see #setIndenting
@see #whichMethod
"
      end

      operation 5537154 "getMethod"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the method specified for this output format.
Typically the method will be <tt>xml</tt>, <tt>html</tt>
or <tt>text</tt>, but it might be other values.
If no method was specified, null will be returned
and the most suitable method will be determined for
the document by calling {@link #whichMethod}.

@return The specified output method, or null
"
      end

      operation 5537282 "setMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method for this output format.

@see #getMethod
@param method The output method, or null
"
      end

      operation 5537410 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version for this output method.
If no version was specified, will return null
and the default version number will be used.
If the serializerr does not support that particular
version, it should default to a supported version.

@return The specified method version, or null
"
      end

      operation 5537538 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the version for this output method.
For XML the value would be \"1.0\", for HTML
it would be \"4.0\".

@see #getVersion
@param version The output method version, or null
"
      end

      operation 5537666 "getIndent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the indentation specified. If no indentation
was specified, zero is returned and the document
should not be indented.

@return The indentation or zero
@see #setIndenting
"
      end

      operation 5537794 "getIndenting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if indentation was specified.
"
      end

      operation 5537922 "setIndent"
	public explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the indentation. The document will not be
indented if the indentation is set to zero.
Calling {@link #setIndenting} will reset this
value to zero (off) or the default (on).

@param indent The indentation, or zero
"
      end

      operation 5538050 "setIndenting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the indentation on and off. When set on, the default
indentation level and default line wrapping is used
(see {@link Defaults#Indent} and {@link Defaults#LineWidth}).
To specify a different indentation level or line wrapping,
use {@link #setIndent} and {@link #setLineWidth}.

@param on True if indentation should be on
"
      end

      operation 5538178 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified encoding. If no encoding was
specified, the default is always \"UTF-8\".

@return The encoding
"
      end

      operation 5538306 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the encoding for this output method. If no
encoding was specified, the default is always \"UTF-8\".
Make sure the encoding is compatible with the one
used by the {@link java.io.Writer}.

@see #getEncoding
@param encoding The encoding, or null
"
      end

      operation 5538434 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encInfo" type class_ref 785026 // EncodingInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the encoding for this output method with an <code>EncodingInfo</code>
instance.
"
      end

      operation 5538562 "getEncodingInfo"
	public return_type class_ref 785026 // EncodingInfo
	nparams 0
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>EncodingInfo<code> instance for the encoding.

@see #setEncoding
"
      end

      operation 5538690 "setAllowJavaNames"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allow" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether java encoding names are permitted
"
      end

      operation 5538818 "setAllowJavaNames"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether java encoding names are permitted
"
      end

      operation 5538946 "getMediaType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified media type, or null.
To determine the media type based on the
document type, use {@link #whichMediaType}.

@return The specified media type, or null
"
      end

      operation 5539074 "setMediaType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mediaType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the media type.

@see #getMediaType
@param mediaType The specified media type
"
      end

      operation 5539202 "setDoctype"
	public explicit_return_type "void"
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the document type public and system identifiers.
Required only if the DOM Document or SAX events do not
specify the document type, and one must be present in
the serialized document. Any document type specified
by the DOM Document or SAX events will override these
values.

@param publicId The public identifier, or null
@param systemId The system identifier, or null
"
      end

      operation 5539330 "getDoctypePublic"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified document type public identifier,
or null.
"
      end

      operation 5539458 "getDoctypeSystem"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified document type system identifier,
or null.
"
      end

      operation 5539586 "getOmitComments"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if comments should be ommited.
The default is false.
"
      end

      operation 5539714 "setOmitComments"
	public explicit_return_type "void"
	nparams 1
	  param inout name "omit" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets comment omitting on and off.

@param omit True if comments should be ommited
"
      end

      operation 5539842 "getOmitDocumentType"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the DOCTYPE declaration should
be ommited. The default is false.
"
      end

      operation 5539970 "setOmitDocumentType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "omit" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets DOCTYPE declaration omitting on and off.

@param omit True if DOCTYPE declaration should be ommited
"
      end

      operation 5540098 "getOmitXMLDeclaration"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the XML document declaration should
be ommited. The default is false.
"
      end

      operation 5540226 "setOmitXMLDeclaration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "omit" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets XML declaration omitting on and off.

@param omit True if XML declaration should be ommited
"
      end

      operation 5540354 "getStandalone"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the document type is standalone.
The default is false.
"
      end

      operation 5540482 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "standalone" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets document DTD standalone. The public and system
identifiers must be null for the document to be
serialized as standalone.

@param standalone True if document DTD is standalone
"
      end

      operation 5540610 "getCDataElements"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of all the elements whose text node children
should be output as CDATA, or null if no such elements were
specified.
"
      end

      operation 5540738 "isCDataElement"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the text node children of the given elements
should be output as CDATA.

@param tagName The element's tag name
@return True if should serialize as CDATA
"
      end

      operation 5540866 "setCDataElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cdataElements" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the list of elements for which text node children
should be output as CDATA.

@param cdataElements List of CDATA element tag names
"
      end

      operation 5540994 "getNonEscapingElements"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of all the elements whose text node children
should be output unescaped (no character references), or null
if no such elements were specified.
"
      end

      operation 5541122 "isNonEscapingElement"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the text node children of the given elements
should be output unescaped.

@param tagName The element's tag name
@return True if should serialize unescaped
"
      end

      operation 5541250 "setNonEscapingElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nonEscapingElements" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the list of elements for which text node children
should be output unescaped (no character references).

@param nonEscapingElements List of unescaped element tag names
"
      end

      operation 5541378 "getLineSeparator"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a specific line separator to use. The default is the
Web line separator (<tt>\\n</tt>). A string is returned to
support double codes (CR + LF).

@return The specified line separator
"
      end

      operation 5541506 "setLineSeparator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lineSeparator" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the line separator. The default is the Web line separator
(<tt>\\n</tt>). The machine's line separator can be obtained
from the system property <tt>line.separator</tt>, but is only
useful if the document is edited on machines of the same type.
For general documents, use the Web line separator.

@param lineSeparator The specified line separator
"
      end

      operation 5541634 "getPreserveSpace"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the default behavior for this format is to
preserve spaces. All elements that do not specify otherwise
or specify the default behavior will be formatted based on
this rule. All elements that specify space preserving will
always preserve space.
"
      end

      operation 5541762 "setPreserveSpace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserve" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets space preserving as the default behavior. The default is
space stripping and all elements that do not specify otherwise
or use the default value will not preserve spaces.

@param preserve True if spaces should be preserved
"
      end

      operation 5541890 "getLineWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the selected line width for breaking up long lines.
When indenting, and only when indenting, long lines will be
broken at space boundaries based on this line width.
No line wrapping occurs if this value is zero.
"
      end

      operation 5542018 "setLineWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "lineWidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the line width. If zero then no line wrapping will
occur. Calling {@link #setIndenting} will reset this
value to zero (off) or the default (on).

@param lineWidth The line width to use, zero for default
@see #getLineWidth
@see #setIndenting
"
      end

      operation 5542146 "getPreserveEmptyAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preserveEmptyAttribute flag. If flag is false, then'
attributes with empty string values are output as the attribute
name only (in HTML mode).
@return preserve the preserve flag
"
      end

      operation 5542274 "setPreserveEmptyAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserve" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preserveEmptyAttribute flag. If flag is false, then'
attributes with empty string values are output as the attribute
name only (in HTML mode).
@param preserve the preserve flag
"
      end

      operation 5542402 "getLastPrintable"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last printable character based on the selected
encoding. Control characters and non-printable characters
are always printed as character references.
"
      end

      operation 5542530 "whichMethod"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine the output method for the specified document.
If the document is an instance of {@link org.w3c.dom.html.HTMLDocument}
then the method is said to be <tt>html</tt>. If the root
element is 'html' and all text nodes preceding the root
element are all whitespace, then the method is said to be
<tt>html</tt>. Otherwise the method is <tt>xml</tt>.

@param doc The document to check
@return The suitable method
"
      end

      operation 5542658 "whichDoctypePublic"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the document type public identifier
specified for this document, or null.
"
      end

      operation 5542786 "whichDoctypeSystem"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the document type system identifier
specified for this document, or null.
"
      end

      operation 5542914 "whichMediaType"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suitable media format for a document
output with the specified method.
"
      end
    end

    class 785026 "EncodingInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an encoding.

@version $Id: EncodingInfo.java,v 1.6 2007/10/18 03:39:08 joehw Exp $
"
      classrelation 2509698 // fArgsForMethod (<unidirectional association>)
	relation 2509698 --->
	  a role_name "fArgsForMethod" multiplicity "[]" init_value " null" private
	    comment " An array to hold the argument for a method of Charset, CharsetEncoder or CharToByteConverter.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2509698 // fArgsForMethod (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2509826 // ianaName (<unidirectional association>)
	relation 2509826 --->
	  a role_name "ianaName" package
	    comment " name of encoding as registered with IANA;
 preferably a MIME name, but aliases are fine too.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2509826 // ianaName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2509954 // javaName (<unidirectional association>)
	relation 2509954 --->
	  a role_name "javaName" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2509954 // javaName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1201538 "lastPrintable"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2510082 // fCharsetEncoder (<unidirectional association>)
	relation 2510082 --->
	  a role_name "fCharsetEncoder" init_value " null" package
	    comment " The CharsetEncoder with which we test unusual characters.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2510082 // fCharsetEncoder (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2510210 // fCharToByteConverter (<unidirectional association>)
	relation 2510210 --->
	  a role_name "fCharToByteConverter" init_value " null" package
	    comment " The CharToByteConverter with which we test unusual characters.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2510210 // fCharToByteConverter (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1201666 "fHaveTriedCToB"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Is the converter null because it can't be instantiated
 for some reason (perhaps we're running with insufficient authority as
 an applet?
"
      end

      attribute 1201794 "fHaveTriedCharsetEncoder"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Is the charset encoder usable or available.
"
      end

      operation 5526658 "EncodingInfo"
	public explicit_return_type ""
	nparams 3
	  param inout name "ianaName" type class_ref 128130 // String
	  param inout name "javaName" type class_ref 128130 // String
	  param in name "lastPrintable" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new <code>EncodingInfo</code> instance.
"
      end

      operation 5526786 "getIANAName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a MIME charset name of this encoding.
"
      end

      operation 5526914 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 1
	  param inout name "output" type class_ref 151298 // OutputStream
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a writer for this encoding based on
an output stream.

@return A suitable writer
@exception UnsupportedEncodingException There is no convertor
 to support this encoding
"
      end

      operation 5527042 "isPrintable"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the specified character is printable or not in this encoding.

@param ch a code point (0-0x10ffff)
"
      end

      operation 5527170 "isPrintable0"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the specified character is printable or not in this encoding.
This method accomplishes this using a java.nio.CharsetEncoder. If NIO isn't
available it will attempt use a sun.io.CharToByteConverter.

@param ch a code point (0-0x10ffff)
"
      end

      operation 5527298 "testJavaEncodingName"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " is this an encoding name recognized by this JDK?
 if not, will throw UnsupportedEncodingException"
      end

      class 785794 "CharsetMethods"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2510338 // fgCharsetForNameMethod (<unidirectional association>)
	  relation 2510338 --->
	    a role_name "fgCharsetForNameMethod" init_value " null" class_relation private
	      comment " Method: java.nio.charset.Charset.forName(java.lang.String)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2510338 // fgCharsetForNameMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 2510466 // fgCharsetCanEncodeMethod (<unidirectional association>)
	  relation 2510466 --->
	    a role_name "fgCharsetCanEncodeMethod" init_value " null" class_relation private
	      comment " Method: java.nio.charset.Charset.canEncode()
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2510466 // fgCharsetCanEncodeMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 2510594 // fgCharsetNewEncoderMethod (<unidirectional association>)
	  relation 2510594 --->
	    a role_name "fgCharsetNewEncoderMethod" init_value " null" class_relation private
	      comment " Method: java.nio.charset.Charset.newEncoder()
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2510594 // fgCharsetNewEncoderMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 2510722 // fgCharsetEncoderCanEncodeMethod (<unidirectional association>)
	  relation 2510722 --->
	    a role_name "fgCharsetEncoderCanEncodeMethod" init_value " null" class_relation private
	      comment " Method: java.nio.charset.CharsetEncoder.canEncode(char)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2510722 // fgCharsetEncoderCanEncodeMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	attribute 1201922 "fgNIOCharsetAvailable"
	  class_attribute private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Flag indicating whether or not java.nio.charset.* is available.
"
	end

	operation 5527426 "CharsetMethods"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	extra_member 146178 "initialization"
	  
	  cpp "" ""
	  java "  static {
            try {
                Class charsetClass = Class.forName(\"java.nio.charset.Charset\");
                Class charsetEncoderClass = Class.forName(\"java.nio.charset.CharsetEncoder\");
                fgCharsetForNameMethod = charsetClass.getMethod(\"forName\", new Class [] {String.class});
                fgCharsetCanEncodeMethod = charsetClass.getMethod(\"canEncode\", new Class [] {});
                fgCharsetNewEncoderMethod = charsetClass.getMethod(\"newEncoder\", new Class [] {});
                fgCharsetEncoderCanEncodeMethod = charsetEncoderClass.getMethod(\"canEncode\", new Class [] {Character.TYPE});
                fgNIOCharsetAvailable = true;
            }
            // ClassNotFoundException, NoSuchMethodException or SecurityException
            // Whatever the case, we cannot use java.nio.charset.*.
            catch (Exception exc) {
                fgCharsetForNameMethod = null;
                fgCharsetCanEncodeMethod = null;
                fgCharsetEncoderCanEncodeMethod = null;
                fgCharsetNewEncoderMethod = null;
                fgNIOCharsetAvailable = false;
            }
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end

      class 785922 "CharToByteConverterMethods"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2510850 // fgGetConverterMethod (<unidirectional association>)
	  relation 2510850 --->
	    a role_name "fgGetConverterMethod" init_value " null" class_relation private
	      comment " Method: sun.io.CharToByteConverter.getConverter(java.lang.String)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2510850 // fgGetConverterMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 2510978 // fgCanConvertMethod (<unidirectional association>)
	  relation 2510978 --->
	    a role_name "fgCanConvertMethod" init_value " null" class_relation private
	      comment " Method: sun.io.CharToByteConverter.canConvert(char)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2510978 // fgCanConvertMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	attribute 1202050 "fgConvertersAvailable"
	  class_attribute private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Flag indicating whether or not sun.io.CharToByteConverter is available.
"
	end

	operation 5527554 "CharToByteConverterMethods"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	extra_member 146306 "initialization"
	  
	  cpp "" ""
	  java "  static {
            try {
                Class clazz = Class.forName(\"sun.io.CharToByteConverter\");
                fgGetConverterMethod = clazz.getMethod(\"getConverter\", new Class [] {String.class});
                fgCanConvertMethod = clazz.getMethod(\"canConvert\", new Class [] {Character.TYPE});
                fgConvertersAvailable = true;
            }
            // ClassNotFoundException, NoSuchMethodException or SecurityException
            // Whatever the case, we cannot use sun.io.CharToByteConverter.
            catch (Exception exc) {
                fgGetConverterMethod = null;
                fgCanConvertMethod = null;
                fgConvertersAvailable = false;
            }
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end
    end

    class 785154 "ElementState"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Holds the state of the currently serialized element.


@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@see BaseMarkupSerializer
"
      classrelation 2509186 // rawName (<unidirectional association>)
	relation 2509186 --->
	  a role_name "rawName" public
	    comment "
The element's raw tag name (local or prefix:local).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2509186 // rawName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2509314 // localName (<unidirectional association>)
	relation 2509314 --->
	  a role_name "localName" public
	    comment "
The element's local tag name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2509314 // localName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2509442 // namespaceURI (<unidirectional association>)
	relation 2509442 --->
	  a role_name "namespaceURI" public
	    comment "
The element's namespace URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2509442 // namespaceURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1200642 "preserveSpace"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if element is space preserving.

"
      end

      attribute 1200770 "empty"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if element is empty. Turns false immediately
after serializing the first contents of the element.

"
      end

      attribute 1200898 "afterElement"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if the last serialized node was an element node.

"
      end

      attribute 1201026 "afterComment"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if the last serialized node was a comment node.

"
      end

      attribute 1201154 "doCData"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if textual content of current element should be
serialized as CDATA section.

"
      end

      attribute 1201282 "unescaped"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if textual content of current element should be
serialized as raw characters (unescaped).

"
      end

      attribute 1201410 "inCData"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True while inside CData and printing text as CData.

"
      end

      classrelation 2509570 // prefixes (<unidirectional association>)
	relation 2509570 --->
	  a role_name "prefixes" public
	    comment "
Association between namespace URIs (keys) and prefixes (values).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 2509570 // prefixes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end
    end

    class 785282 "Printer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The printer is responsible for sending text to the output stream
or writer. This class performs direct writing for efficiency.
{@link IndentPrinter} supports indentation and line wrapping by
extending this class.

@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      classrelation 2513154 // _format (<unidirectional association>)
	relation 2513154 --->
	  a role_name "_format" const_relation protected
	    comment "
The output format associated with this serializer. This will never
be a null reference. If no format was passed to the constructor,
the default one for this document type will be used. The format
object is never changed by the serializer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513154 // _format (<unidirectional association>)
	  b parent class_ref 784770 // OutputFormat
      end

      classrelation 2513282 // _writer (<unidirectional association>)
	relation 2513282 --->
	  a role_name "_writer" protected
	    comment "
The writer to which the document is written.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513282 // _writer (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end

      classrelation 2513410 // _dtdWriter (<unidirectional association>)
	relation 2513410 --->
	  a role_name "_dtdWriter" protected
	    comment "
The DTD writer. When we switch to DTD mode, all output is
accumulated in this DTD writer. When we switch out of it,
the output is obtained as a string. Must not be reset to
null until we're done with the document.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513410 // _dtdWriter (<unidirectional association>)
	  b parent class_ref 250370 // StringWriter
      end

      classrelation 2513538 // _docWriter (<unidirectional association>)
	relation 2513538 --->
	  a role_name "_docWriter" protected
	    comment "
Holds a reference to the document writer while we are
in DTD mode.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513538 // _docWriter (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end

      classrelation 2513666 // _exception (<unidirectional association>)
	relation 2513666 --->
	  a role_name "_exception" protected
	    comment "
Holds the exception thrown by the serializer.  Exceptions do not cause
the serializer to quit, but are held and one is thrown at the end.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513666 // _exception (<unidirectional association>)
	  b parent class_ref 146818 // IOException
      end

      attribute 1203970 "BufferSize"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The size of the output buffer.

"
      end

      attribute 1204098 "_buffer"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[ BufferSize ]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Output buffer.

"
      end

      attribute 1204226 "_pos"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Position within the output buffer.

"
      end

      operation 5532162 "Printer"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5532290 "getException"
	public return_type class_ref 146818 // IOException
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5532418 "enterDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by any of the DTD handlers to enter DTD mode.
Once entered, all output will be accumulated in a string
that can be printed as part of the document's DTD.
This method may be called any number of time but will only
have affect the first time it's called. To exist DTD state
and get the accumulated DTD, call {@link #leaveDTD}.
"
      end

      operation 5532546 "leaveDTD"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the root element to leave DTD mode and if any
DTD parts were printer, will return a string with their
textual content.
"
      end

      operation 5532674 "printText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5532802 "printText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 166018 // StringBuffer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5532930 "printText"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533058 "printText"
	public explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "char"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533186 "printSpace"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533314 "breakLine"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533442 "breakLine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserveSpace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533570 "flushLine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserveSpace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533698 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the output stream. Must be called when done printing
the document, otherwise some text might be buffered.
"
      end

      operation 5533826 "indent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5533954 "unindent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5534082 "getNextIndent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5534210 "setNextIndent"
	public explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5534338 "setThisIndent"
	public explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 785410 "DOMSerializerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "EXPERIMENTAL: Implemenatation of DOM Level 3 org.w3c.ls.LSSerializer  by delegating serialization
calls to <CODE>XMLSerializer</CODE>.
LSSerializer provides an API for serializing (writing) a DOM document out in an
XML document. The XML data is written to an output stream.
During serialization of XML data, namespace fixup is done when possible as
defined in DOM Level 3 Core, Appendix B.

@author Elena Litani, IBM
@author Gopal Sharma, Sun Microsystems
@author Arun Yadav, Sun Microsystems
@author Sunitha Reddy, Sun Microsystems
@version $Id: DOMSerializerImpl.java,v 1.11 2010-11-01 04:40:36 joehw Exp $
"
      classrelation 2508034 // <realization>
	relation 2508034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2508034 // <realization>
	  b parent class_ref 651778 // LSSerializer
      end

      classrelation 2508162 // <realization>
	relation 2508162 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2508162 // <realization>
	  b parent class_ref 650498 // DOMConfiguration
      end

      classrelation 2508290 // serializer (<unidirectional association>)
	relation 2508290 --->
	  a role_name "serializer" private
	    comment " TODO: When DOM Level 3 goes to REC replace method calls using
 reflection for: getXmlEncoding, getInputEncoding and getXmlEncoding
 with regular static calls on the Document object.
 data
 serializer
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2508290 // serializer (<unidirectional association>)
	  b parent class_ref 785538 // XMLSerializer
      end

      classrelation 2508418 // xml11Serializer (<unidirectional association>)
	relation 2508418 --->
	  a role_name "xml11Serializer" private
	    comment " XML 1.1 serializer
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2508418 // xml11Serializer (<unidirectional association>)
	  b parent class_ref 785666 // XML11Serializer
      end

      classrelation 2508546 // fRecognizedParameters (<unidirectional association>)
	relation 2508546 --->
	  a role_name "fRecognizedParameters" private
	    comment "Recognized parameters
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2508546 // fRecognizedParameters (<unidirectional association>)
	  b parent class_ref 658562 // DOMStringList
      end

      attribute 1198978 "features"
	protected explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " REVISIT: Currently we handle 3 different configurations, would be nice just have one configuration
that has different recognized parameters depending if it is used in Core/LS.

"
      end

      attribute 1199106 "NAMESPACES"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1199234 "WELLFORMED"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1199362 "ENTITIES"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1199490 "CDATA"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1199618 "SPLITCDATA"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1199746 "COMMENTS"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1199874 "DISCARDDEFAULT"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1200002 "INFOSET"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1200130 "XMLDECL"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1200258 "NSDECL"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1200386 "DOM_ELEMENT_CONTENT_WHITESPACE"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1200514 "FORMAT_PRETTY_PRINT"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2508674 // fErrorHandler (<unidirectional association>)
	relation 2508674 --->
	  a role_name "fErrorHandler" init_value " null" private
	    comment " well-formness checking
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2508674 // fErrorHandler (<unidirectional association>)
	  b parent class_ref 662018 // DOMErrorHandler
      end

      classrelation 2508802 // fError (<unidirectional association>)
	relation 2508802 --->
	  a role_name "fError" init_value " new DOMErrorImpl()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2508802 // fError (<unidirectional association>)
	  b parent class_ref 659330 // DOMErrorImpl
      end

      classrelation 2508930 // fLocator (<unidirectional association>)
	relation 2508930 --->
	  a role_name "fLocator" init_value " new DOMLocatorImpl()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2508930 // fLocator (<unidirectional association>)
	  b parent class_ref 659714 // DOMLocatorImpl
      end

      classrelation 2509058 // abort (<unidirectional association>)
	relation 2509058 --->
	  a role_name "abort" init_value " new RuntimeException()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2509058 // abort (<unidirectional association>)
	  b parent class_ref 214786 // RuntimeException
      end

      operation 5524354 "DOMSerializerImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new LSSerializer.
The constructor turns on the namespace support in <code>XMLSerializer</code> and
initializes the following fields: fNSBinder, fLocalNSBinder, fSymbolTable,
fEmptySymbol, fXmlSymbol, fXmlnsSymbol, fNamespaceCounter, fFeatures.
"
      end

      operation 5524482 "getDomConfig"
	public return_type class_ref 650498 // DOMConfiguration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " LSSerializer methods
"
      end

      operation 5524610 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM L3-EXPERIMENTAL:
Setter for boolean and object parameters
"
      end

      operation 5524738 "canSetParameter"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "state" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM L3-EXPERIMENTAL:
Check if parameter can be set
"
      end

      operation 5524866 "getParameterNames"
	public return_type class_ref 658562 // DOMStringList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3 Core CR - Experimental.

 The list of the parameters supported by this
<code>DOMConfiguration</code> object and for which at least one value
can be set by the application. Note that this list can also contain
parameter names defined outside this specification.
"
      end

      operation 5524994 "getParameter"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM L3-EXPERIMENTAL:
Getter for boolean and object parameters
"
      end

      operation 5525122 "writeToString"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "wnode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 646658 // DOMException
	  exception class_ref 730370 // LSException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM L3 EXPERIMENTAL:
 Serialize the specified node as described above in the description of
<code>LSSerializer</code>. The result of serializing the node is
returned as a string. Writing a Document or Entity node produces a
serialized form that is well formed XML. Writing other node types
produces a fragment of text in a form that is not fully defined by
this document, but that should be useful to a human for debugging or
diagnostic purposes.
@param wnode  The node to be written.
@return  Returns the serialized data
@exception DOMException
   DOMSTRING_SIZE_ERR: The resulting string is too long to fit in a
  <code>DOMString</code>.
@exception LSException
   SERIALIZE_ERR: Unable to serialize the node.  DOM applications should
   attach a <code>DOMErrorHandler</code> using the parameter
   &quot;<i>error-handler</i>&quot; to get details on error.
"
      end

      operation 5525250 "setNewLine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newLine" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM L3 EXPERIMENTAL:
The end-of-line sequence of characters to be used in the XML being
written out. The only permitted values are these:
<dl>
<dt><code>null</code></dt>
<dd>
Use a default end-of-line sequence. DOM implementations should choose
the default to match the usual convention for text files in the
environment being used. Implementations must choose a default
sequence that matches one of those allowed by  2.11 \"End-of-Line
Handling\". </dd>
<dt>CR</dt>
<dd>The carriage-return character (#xD).</dd>
<dt>CR-LF</dt>
<dd> The
carriage-return and line-feed characters (#xD #xA). </dd>
<dt>LF</dt>
<dd> The line-feed
character (#xA). </dd>
</dl>
<br>The default value for this attribute is <code>null</code>.
"
      end

      operation 5525378 "getNewLine"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM L3 EXPERIMENTAL:
The end-of-line sequence of characters to be used in the XML being
written out. The only permitted values are these:
<dl>
<dt><code>null</code></dt>
<dd>
Use a default end-of-line sequence. DOM implementations should choose
the default to match the usual convention for text files in the
environment being used. Implementations must choose a default
sequence that matches one of those allowed by  2.11 \"End-of-Line
Handling\". </dd>
<dt>CR</dt>
<dd>The carriage-return character (#xD).</dd>
<dt>CR-LF</dt>
<dd> The
carriage-return and line-feed characters (#xD #xA). </dd>
<dt>LF</dt>
<dd> The line-feed
character (#xA). </dd>
</dl>
<br>The default value for this attribute is <code>null</code>.
"
      end

      operation 5525506 "getFilter"
	public return_type class_ref 784898 // LSSerializerFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " When the application provides a filter, the serializer will call out
to the filter before serializing each Node. Attribute nodes are never
passed to the filter. The filter implementation can choose to remove
the node from the stream or to terminate the serialization early.
"
      end

      operation 5525634 "setFilter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 784898 // LSSerializerFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " When the application provides a filter, the serializer will call out
to the filter before serializing each Node. Attribute nodes are never
passed to the filter. The filter implementation can choose to remove
the node from the stream or to terminate the serialization early.
"
      end

      operation 5525762 "initSerializer"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ser" type class_ref 785538 // XMLSerializer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " this initializes a newly-created serializer"
      end

      operation 5525890 "copySettings"
	private explicit_return_type "void"
	nparams 2
	  param inout name "src" type class_ref 785538 // XMLSerializer
	  param inout name "dest" type class_ref 785538 // XMLSerializer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " copies all settings that could have been modified
 by calls to LSSerializer methods from one serializer to another.
 IMPORTANT:  if new methods are implemented or more settings of
 the serializer are made alterable, this must be
 reflected in this method!"
      end

      operation 5526018 "write"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "destination" type class_ref 652034 // LSOutput
	nexceptions 1
	  exception class_ref 730370 // LSException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "copysettings

 Serialize the specified node as described above in the general
description of the <code>LSSerializer</code> interface. The output
is written to the supplied <code>LSOutput</code>.
<br> When writing to a <code>LSOutput</code>, the encoding is found by
looking at the encoding information that is reachable through the
<code>LSOutput</code> and the item to be written (or its owner
document) in this order:
<ol>
<li> <code>LSOutput.encoding</code>,
</li>
<li>
<code>Document.actualEncoding</code>,
</li>
<li>
<code>Document.xmlEncoding</code>.
</li>
</ol>
<br> If no encoding is reachable through the above properties, a
default encoding of \"UTF-8\" will be used.
<br> If the specified encoding is not supported an
\"unsupported-encoding\" error is raised.
<br> If no output is specified in the <code>LSOutput</code>, a
\"no-output-specified\" error is raised.
@param node  The node to serialize.
@param destination The destination for the serialized DOM.
@return  Returns <code>true</code> if <code>node</code> was
  successfully serialized and <code>false</code> in case the node
  couldn't be serialized.
"
      end

      operation 5526146 "writeToURI"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "URI" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 730370 // LSException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "write

 Serialize the specified node as described above in the general
description of the <code>LSSerializer</code> interface. The output
is written to the supplied URI.
<br> When writing to a URI, the encoding is found by looking at the
encoding information that is reachable through the item to be written
(or its owner document) in this order:
<ol>
<li>
<code>Document.inputEncoding</code>,
</li>
<li>
<code>Document.xmlEncoding</code>.
</li>
</ol>
<br> If no encoding is reachable through the above properties, a
default encoding of \"UTF-8\" will be used.
<br> If the specified encoding is not supported an
\"unsupported-encoding\" error is raised.
@param node  The node to serialize.
@param URI The URI to write to.
@return  Returns <code>true</code> if <code>node</code> was
  successfully serialized and <code>false</code> in case the node
  couldn't be serialized.
"
      end

      operation 5526274 "prepareForSerialization"
	private explicit_return_type "void"
	nparams 2
	  param inout name "ser" type class_ref 785538 // XMLSerializer
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeURI

  Private methods
"
      end

      operation 5526402 "verify"
	private explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "verifyNames" explicit_type "boolean"
	  param inout name "xml11Version" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5526530 "getPathWithoutEscapes"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "origPath" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 785538 "XMLSerializer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an XML serializer supporting both DOM and SAX pretty
serializing. For usage instructions see {@link Serializer}.
<p>
If an output stream is used, the encoding is taken from the
output format (defaults to <tt>UTF-8</tt>). If a writer is
used, make sure the writer uses the same encoding (if applies)
as specified in the output format.
<p>
The serializer supports both DOM and SAX. SAX serializing is done by firing
SAX events and using the serializer as a document handler. DOM serializing is done
by calling {@link #serialize(Document)} or by using DOM Level 3
{@link org.w3c.dom.ls.DOMSerializer} and
serializing with {@link org.w3c.dom.ls.DOMSerializer#write},
{@link org.w3c.dom.ls.DOMSerializer#writeToString}.
<p>
If an I/O exception occurs while serializing, the serializer
will not throw an exception directly, but only throw it
at the end of serializing (either DOM or SAX's {@link
org.xml.sax.DocumentHandler#endDocument}.
<p>
For elements that are not specified as whitespace preserving,
the serializer will potentially break long text lines at space
boundaries, indent lines, and serialize elements on separate
lines. Line terminators will be regarded as spaces, and
spaces at beginning of line will be stripped.
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@author <a href=\"mailto:rahul.srivastava@sun.com\">Rahul Srivastava</a>
@author Elena Litani IBM
@see Serializer
"
      classrelation 2518146 // <generalisation>
	relation 2518146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2518146 // <generalisation>
	  b parent class_ref 784386 // BaseMarkupSerializer
      end

      attribute 1206274 "DEBUG"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " constants

"
      end

      classrelation 2518274 // fNSBinder (<unidirectional association>)
	relation 2518274 --->
	  a role_name "fNSBinder" protected
	    comment " data


 DOM Level 3 implementation: variables intialized in DOMSerializerImpl

 stores namespaces in scope 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2518274 // fNSBinder (<unidirectional association>)
	  b parent class_ref 702722 // NamespaceSupport
      end

      classrelation 2518402 // fLocalNSBinder (<unidirectional association>)
	relation 2518402 --->
	  a role_name "fLocalNSBinder" protected
	    comment " stores all namespace bindings on the current element 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2518402 // fLocalNSBinder (<unidirectional association>)
	  b parent class_ref 702722 // NamespaceSupport
      end

      classrelation 2518530 // fSymbolTable (<unidirectional association>)
	relation 2518530 --->
	  a role_name "fSymbolTable" protected
	    comment " symbol table for serialization 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2518530 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2518658 // PREFIX (<unidirectional association>)
	relation 2518658 --->
	  a role_name "PREFIX" init_value " \"NS\"" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2518658 // PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1206402 "fNamespaces"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Controls whether namespace fixup should be performed during
the serialization.
NOTE: if this field is set to true the following
fields need to be initialized: fNSBinder, fLocalNSBinder, fSymbolTable,
XMLSymbols.EMPTY_STRING, fXmlSymbol, fXmlnsSymbol

"
      end

      attribute 1206530 "fNamespacePrefixes"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Controls whether namespace prefixes will be printed out during serialization

"
      end

      attribute 1206658 "fPreserveSpace"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5548674 "XMLSerializer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5548802 "XMLSerializer"
	public explicit_return_type ""
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5548930 "XMLSerializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified writer
using the specified output format. If <tt>format</tt> is null,
will use a default output format.

@param writer The writer to use
@param format The output format to use, null for the default
"
      end

      operation 5549058 "XMLSerializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified output
stream using the specified output format. If <tt>format</tt>
is null, will use a default output format.

@param output The output stream to use
@param format The output format to use, null for the default
"
      end

      operation 5549186 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5549314 "setNamespaces"
	public explicit_return_type "void"
	nparams 1
	  param inout name "namespaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This methods turns on namespace fixup algorithm during
DOM serialization.
@see org.w3c.dom.ls.DOMSerializer

@param namespaces
"
      end

      operation 5549442 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "attrs" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------//
 SAX content handler serializing methods //
-----------------------------------------//"
      end

      operation 5549570 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5549698 "endElementIO"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5549826 "startElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrs" type class_ref 636930 // AttributeList
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 SAX document handler serializing methods //
------------------------------------------//"
      end

      operation 5549954 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5550082 "startDocument"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "rootTagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 Generic node serializing methods methods //
------------------------------------------//

Called to serialize the document's DOCTYPE by the root element.
The document type declaration must name the root element,
but the root element is only known when that element is serialized,
and not at the start of the document.
<p>
This method will check if it has not been called before ({@link #_started}),
will serialize the document type declaration, and will serialize all
pre-root comments and PIs that were accumulated in the document
(see {@link #serializePreRoot}). Pre-root will be serialized even if
this is not the first root element of the document.
"
      end

      operation 5550210 "serializeElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to serialize a DOM element. Equivalent to calling {@link
#startElement}, {@link #endElement} and serializing everything
inbetween, but better optimized.
"
      end

      operation 5550338 "printNamespaceAttr"
	private explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes a namespace attribute with the given prefix and value for URI.
In case prefix is empty will serialize default namespace declaration.

@param prefix
@param uri
@exception IOException
"
      end

      operation 5550466 "printAttribute"
	private explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "isSpecified" explicit_type "boolean"
	  param inout name "attr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints attribute.
NOTE: xml:space attribute modifies output format

@param name
@param value
@param isSpecified
@exception IOException
"
      end

      operation 5550594 "getEntityRef"
	protected return_type class_ref 128130 // String
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5550722 "extractNamespaces"
	private return_type class_ref 593410 // Attributes
	nparams 1
	  param inout name "attrs" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieve and remove the namespaces declarations from the list of attributes.

"
      end

      operation 5550850 "printEscaped"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Printing attribute value
"
      end

      operation 5550978 "printXMLChar"
	protected explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " print text data "
      end

      operation 5551106 "printText"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "preserveSpace" explicit_type "boolean"
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5551234 "printText"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "preserveSpace" explicit_type "boolean"
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5551362 "checkUnboundNamespacePrefixedNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3:
Check a node to determine if it contains unbound namespace prefixes.

@param node The node to check for unbound namespace prefices
"
      end

      operation 5551490 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 785666 "XML11Serializer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an XML serializer supporting both DOM and SAX pretty
serializing. For usage instructions see {@link Serializer}.
<p>
If an output stream is used, the encoding is taken from the
output format (defaults to <tt>UTF-8</tt>). If a writer is
used, make sure the writer uses the same encoding (if applies)
as specified in the output format.
<p>
The serializer supports both DOM and SAX. SAX serializing is done by firing
SAX events and using the serializer as a document handler. DOM serializing is done
by calling {@link #serialize(Document)} or by using DOM Level 3
{@link org.w3c.dom.ls.DOMSerializer} and
serializing with {@link org.w3c.dom.ls.DOMSerializer#write},
{@link org.w3c.dom.ls.DOMSerializer#writeToString}.
<p>
If an I/O exception occurs while serializing, the serializer
will not throw an exception directly, but only throw it
at the end of serializing (either DOM or SAX's {@link
org.xml.sax.DocumentHandler#endDocument}.
<p>
For elements that are not specified as whitespace preserving,
the serializer will potentially break long text lines at space
boundaries, indent lines, and serialize elements on separate
lines. Line terminators will be regarded as spaces, and
spaces at beginning of line will be stripped.
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@author <a href=\"mailto:rahul.srivastava@sun.com\">Rahul Srivastava</a>
@author Elena Litani IBM
@see Serializer
"
      classrelation 2518786 // <generalisation>
	relation 2518786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2518786 // <generalisation>
	  b parent class_ref 785538 // XMLSerializer
      end

      attribute 1206786 "DEBUG"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " constants

"
      end

      classrelation 2518914 // fNSBinder (<unidirectional association>)
	relation 2518914 --->
	  a role_name "fNSBinder" protected
	    comment " data


 DOM Level 3 implementation: variables intialized in DOMSerializerImpl

 stores namespaces in scope 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2518914 // fNSBinder (<unidirectional association>)
	  b parent class_ref 702722 // NamespaceSupport
      end

      classrelation 2519042 // fLocalNSBinder (<unidirectional association>)
	relation 2519042 --->
	  a role_name "fLocalNSBinder" protected
	    comment " stores all namespace bindings on the current element 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2519042 // fLocalNSBinder (<unidirectional association>)
	  b parent class_ref 702722 // NamespaceSupport
      end

      classrelation 2519170 // fSymbolTable (<unidirectional association>)
	relation 2519170 --->
	  a role_name "fSymbolTable" protected
	    comment " symbol table for serialization 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2519170 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      attribute 1206914 "fDOML1"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " is node dom level 1 node?
"
      end

      attribute 1207042 "fNamespaceCounter"
	protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " counter for new prefix names
"
      end

      classrelation 2519298 // PREFIX (<unidirectional association>)
	relation 2519298 --->
	  a role_name "PREFIX" init_value " \"NS\"" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2519298 // PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1207170 "fNamespaces"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Controls whether namespace fixup should be performed during
the serialization.
NOTE: if this field is set to true the following
fields need to be initialized: fNSBinder, fLocalNSBinder, fSymbolTable,
XMLSymbols.EMPTY_STRING, fXmlSymbol, fXmlnsSymbol, fNamespaceCounter.

"
      end

      attribute 1207298 "fPreserveSpace"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5551618 "XML11Serializer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5551746 "XML11Serializer"
	public explicit_return_type ""
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5551874 "XML11Serializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified writer
using the specified output format. If <tt>format</tt> is null,
will use a default output format.

@param writer The writer to use
@param format The output format to use, null for the default
"
      end

      operation 5552002 "XML11Serializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified output
stream using the specified output format. If <tt>format</tt>
is null, will use a default output format.

@param output The output stream to use
@param format The output format to use, null for the default
"
      end

      operation 5552130 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------//
 SAX content handler serializing methods //
-----------------------------------------//"
      end

      operation 5552258 "printEscaped"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " overwrite printing functions to make sure serializer prints out valid XML
"
      end

      operation 5552386 "printCDATAText"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5552514 "printXMLChar"
	protected explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " note that this \"int\" should, in all cases, be a char.
 REVISIT:  make it a char..."
      end

      operation 5552642 "surrogates"
	protected explicit_return_type "void"
	nparams 2
	  param in name "high" explicit_type "int"
	  param in name "low" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5552770 "printText"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "preserveSpace" explicit_type "boolean"
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5552898 "printText"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "preserveSpace" explicit_type "boolean"
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5553026 "reset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 786050 "Encodings"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides information about encodings. Depends on the Java runtime
to provides writers for the different encodings, but can be used
to override encoding names and provide the last printable character
for each encoding.

@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      attribute 1202178 "DEFAULT_LAST_PRINTABLE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x7F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The last printable character for unknown encodings.

"
      end

      attribute 1202306 "LAST_PRINTABLE_UNICODE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0xffff"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " last printable character for Unicode-compatible encodings
"
      end

      classrelation 2511106 // UNICODE_ENCODINGS (<unidirectional association>)
	relation 2511106 --->
	  a role_name "UNICODE_ENCODINGS" multiplicity "[]" init_value " {
        \"Unicode\", \"UnicodeBig\", \"UnicodeLittle\", \"GB2312\", \"UTF8\", \"UTF-16\",
    }" class_relation const_relation package
	    comment " unicode-compliant encodings; can express plane 0
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2511106 // UNICODE_ENCODINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2511234 // DEFAULT_ENCODING (<unidirectional association>)
	relation 2511234 --->
	  a role_name "DEFAULT_ENCODING" init_value " \"UTF8\"" class_relation const_relation package
	    comment " default (Java) encoding if none supplied:
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2511234 // DEFAULT_ENCODING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2511362 // _encodings (<unidirectional association>)
	relation 2511362 --->
	  a role_name "_encodings" init_value " new ConcurrentHashMap()" class_relation const_relation private
	    comment " note that the size of this Map
 is bounded by the number of encodings recognized by EncodingMap;
 therefore it poses no static mutability risk.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, EncodingInfo> ${name}${value};
"
	    classrelation_ref 2511362 // _encodings (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 5527682 "getEncodingInfo"
	class_operation package return_type class_ref 785026 // EncodingInfo
	nparams 2
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "allowJavaNames" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param encoding a MIME charset name, or null.
"
      end

      classrelation 2511490 // JIS_DANGER_CHARS (<unidirectional association>)
	relation 2511490 --->
	  a role_name "JIS_DANGER_CHARS" init_value " \"\\\\\\u007e\\u007f\\u00a2\\u00a3\\u00a5\\u00ac\"
    +\"\\u2014\\u2015\\u2016\\u2026\\u203e\\u203e\\u2225\\u222f\\u301c\"
    +\"\\uff3c\\uff5e\\uffe0\\uffe1\\uffe2\\uffe3\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2511490 // JIS_DANGER_CHARS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 786178 "HTMLdtd"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for accessing information specific to HTML documents.
The HTML DTD is expressed as three utility function groups. Two methods
allow for checking whether an element requires an open tag on printing
({@link #isEmptyTag}) or on parsing ({@link #isOptionalClosing}).
<P>
Two other methods translate character references from name to value and
from value to name. A small entities resource is loaded into memory the
first time any of these methods is called for fast and efficient access.


@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      classrelation 2511618 // HTMLPublicId (<unidirectional association>)
	relation 2511618 --->
	  a role_name "HTMLPublicId" init_value " \"-//W3C//DTD HTML 4.01//EN\"" class_relation const_relation public
	    comment "
Public identifier for HTML 4.01 (Strict) document type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2511618 // HTMLPublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2511746 // HTMLSystemId (<unidirectional association>)
	relation 2511746 --->
	  a role_name "HTMLSystemId" init_value "
        \"http://www.w3.org/TR/html4/strict.dtd\"" class_relation const_relation public
	    comment "
System identifier for HTML 4.01 (Strict) document type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2511746 // HTMLSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2511874 // XHTMLPublicId (<unidirectional association>)
	relation 2511874 --->
	  a role_name "XHTMLPublicId" init_value "
        \"-//W3C//DTD XHTML 1.0 Strict//EN\"" class_relation const_relation public
	    comment "
Public identifier for XHTML 1.0 (Strict) document type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2511874 // XHTMLPublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2512002 // XHTMLSystemId (<unidirectional association>)
	relation 2512002 --->
	  a role_name "XHTMLSystemId" init_value "
        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"" class_relation const_relation public
	    comment "
System identifier for XHTML 1.0 (Strict) document type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2512002 // XHTMLSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2512130 // _byChar (<unidirectional association>)
	relation 2512130 --->
	  a role_name "_byChar" class_relation private
	    comment "
Table of reverse character reference mapping. Character codes are held
as single-character strings, mapped to their reference name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer, String> ${name}${value};
"
	    classrelation_ref 2512130 // _byChar (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2512258 // _byName (<unidirectional association>)
	relation 2512258 --->
	  a role_name "_byName" class_relation private
	    comment "
Table of entity name to value mapping. Entities are held as strings,
character references as <TT>Character</TT> objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2512258 // _byName (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2512386 // _boolAttrs (<unidirectional association>)
	relation 2512386 --->
	  a role_name "_boolAttrs" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String[]> ${name}${value};
"
	    classrelation_ref 2512386 // _boolAttrs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2512514 // _elemDefs (<unidirectional association>)
	relation 2512514 --->
	  a role_name "_elemDefs" class_relation const_relation private
	    comment "
Holds element definitions.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2512514 // _elemDefs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2512642 // ENTITIES_RESOURCE (<unidirectional association>)
	relation 2512642 --->
	  a role_name "ENTITIES_RESOURCE" init_value " \"HTMLEntities.res\"" class_relation const_relation private
	    comment "
Locates the HTML entities file that is loaded upon initialization.
This file is a resource loaded with the default class loader.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2512642 // ENTITIES_RESOURCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1202434 "ONLY_OPENING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Only opening tag should be printed.

"
      end

      attribute 1202562 "ELEM_CONTENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0002"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Element contains element content only.

"
      end

      attribute 1202690 "PRESERVE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0004"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Element preserve spaces.

"
      end

      attribute 1202818 "OPT_CLOSING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0008"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Optional closing tag.

"
      end

      attribute 1202946 "EMPTY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0010 | ONLY_OPENING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Element is empty (also means only opening tag)

"
      end

      attribute 1203074 "ALLOWED_HEAD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0020"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Allowed to appear in head.

"
      end

      attribute 1203202 "CLOSE_P"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0040"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When opened, closes P.

"
      end

      attribute 1203330 "CLOSE_DD_DT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0080"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When opened, closes DD or DT.

"
      end

      attribute 1203458 "CLOSE_SELF"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When opened, closes itself.

"
      end

      attribute 1203586 "CLOSE_TABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When opened, closes another table section.

"
      end

      attribute 1203714 "CLOSE_TH_TD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x04000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When opened, closes TH or TD.

"
      end

      operation 5527810 "isEmptyTag"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if element is declared to be empty. HTML elements are
defines as empty in the DTD, not by the document syntax.

@param tagName The element tag name (upper case)
@return True if element is empty
"
      end

      operation 5527938 "isElementContent"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if element is declared to have element content.
Whitespaces appearing inside element content will be ignored,
other text will simply report an error.

@param tagName The element tag name (upper case)
@return True if element content
"
      end

      operation 5528066 "isPreserveSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if element's textual contents preserves spaces.
This only applies to PRE and TEXTAREA, all other HTML elements
do not preserve space.

@param tagName The element tag name (upper case)
@return True if element's text content preserves spaces
"
      end

      operation 5528194 "isOptionalClosing"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if element's closing tag is optional and need not
exist. An error will not be reported for such elements if they
are not closed. For example, <tt>LI</tt> is most often not closed.

@param tagName The element tag name (upper case)
@return True if closing tag implied
"
      end

      operation 5528322 "isOnlyOpening"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if element's closing tag is generally not printed.
For example, <tt>LI</tt> should not print the closing tag.

@param tagName The element tag name (upper case)
@return True if only opening tag should be printed
"
      end

      operation 5528450 "isClosing"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "openTag" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the opening of one element (<tt>tagName</tt>) implies
the closing of another open element (<tt>openTag</tt>). For example,
every opening <tt>LI</tt> will close the previously open <tt>LI</tt>,
and every opening <tt>BODY</tt> will close the previously open <tt>HEAD</tt>.

@param tagName The newly opened element
@param openTag The already opened element
@return True if closing tag closes opening tag
"
      end

      operation 5528578 "isURI"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified attribute it a URI and should be
escaped appropriately. In HTML URIs are escaped differently
than normal attributes.

@param tagName The element's tag name
@param attrName The attribute's name
"
      end

      operation 5528706 "isBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified attribute is a boolean and should be
printed without the value. This applies to attributes that are true
if they exist, such as selected (OPTION/INPUT).

@param tagName The element's tag name
@param attrName The attribute's name
"
      end

      operation 5528834 "charFromName"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of an HTML character reference by its name. If the
reference is not found or was not defined as a character reference,
returns EOF (-1).

@param name Name of character reference
@return Character code or EOF (-1)
"
      end

      operation 5528962 "fromChar"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of an HTML character reference based on its character
value. Only valid for entities defined from character references. If no
such character value was defined, return null.

@param value Character value of entity
@return Entity's name or null
"
      end

      operation 5529090 "initialize"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize upon first access. Will load all the HTML character references
into a list that is accessible by name or character value and is optimized
for character substitution. This method may be called any number of times
but will execute only once.
"
      end

      operation 5529218 "defineEntity"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "value" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines a new character reference. The reference's name and value are
supplied. Nothing happens if the character reference is already defined.
<P>
Unlike internal entities, character references are a string to single
character mapping. They are used to map non-ASCII characters both on
parsing and printing, primarily for HTML documents. '&lt;amp;' is an
example of a character reference.

@param name The entity's name
@param value The entity's value
"
      end

      operation 5529346 "defineElement"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5529474 "defineBoolean"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5529602 "defineBoolean"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrNames" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5529730 "isElement"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "flag" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 146434 "initialization"
	
	cpp "" ""
	java "  static {
        _elemDefs = new HashMap<>();
        defineElement( \"ADDRESS\", CLOSE_P );
        defineElement( \"AREA\", EMPTY );
        defineElement( \"BASE\",  EMPTY | ALLOWED_HEAD );
        defineElement( \"BASEFONT\", EMPTY );
        defineElement( \"BLOCKQUOTE\", CLOSE_P );
        defineElement( \"BODY\", OPT_CLOSING );
        defineElement( \"BR\", EMPTY );
        defineElement( \"COL\", EMPTY );
        defineElement( \"COLGROUP\", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE );
        defineElement( \"DD\", OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT );
        defineElement( \"DIV\", CLOSE_P );
        defineElement( \"DL\", ELEM_CONTENT | CLOSE_P );
        defineElement( \"DT\", OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT );
        defineElement( \"FIELDSET\", CLOSE_P );
        defineElement( \"FORM\", CLOSE_P );
        defineElement( \"FRAME\", EMPTY | OPT_CLOSING );
        defineElement( \"H1\", CLOSE_P );
        defineElement( \"H2\", CLOSE_P );
        defineElement( \"H3\", CLOSE_P );
        defineElement( \"H4\", CLOSE_P );
        defineElement( \"H5\", CLOSE_P );
        defineElement( \"H6\", CLOSE_P );
        defineElement( \"HEAD\", ELEM_CONTENT | OPT_CLOSING );
        defineElement( \"HR\", EMPTY | CLOSE_P );
        defineElement( \"HTML\", ELEM_CONTENT | OPT_CLOSING );
        defineElement( \"IMG\", EMPTY );
        defineElement( \"INPUT\", EMPTY );
        defineElement( \"ISINDEX\", EMPTY | ALLOWED_HEAD );
        defineElement( \"LI\", OPT_CLOSING | ONLY_OPENING | CLOSE_SELF );
        defineElement( \"LINK\", EMPTY | ALLOWED_HEAD );
        defineElement( \"MAP\", ALLOWED_HEAD );
        defineElement( \"META\", EMPTY | ALLOWED_HEAD );
        defineElement( \"OL\", ELEM_CONTENT | CLOSE_P );
        defineElement( \"OPTGROUP\", ELEM_CONTENT );
        defineElement( \"OPTION\", OPT_CLOSING | ONLY_OPENING | CLOSE_SELF );
        defineElement( \"P\", OPT_CLOSING | CLOSE_P | CLOSE_SELF );
        defineElement( \"PARAM\", EMPTY );
        defineElement( \"PRE\", PRESERVE | CLOSE_P );
        defineElement( \"SCRIPT\", ALLOWED_HEAD | PRESERVE );
        defineElement( \"NOSCRIPT\", ALLOWED_HEAD | PRESERVE );
        defineElement( \"SELECT\", ELEM_CONTENT );
        defineElement( \"STYLE\", ALLOWED_HEAD | PRESERVE );
        defineElement( \"TABLE\", ELEM_CONTENT | CLOSE_P );
        defineElement( \"TBODY\", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE );
        defineElement( \"TD\", OPT_CLOSING | CLOSE_TH_TD );
        defineElement( \"TEXTAREA\", PRESERVE );
        defineElement( \"TFOOT\", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE );
        defineElement( \"TH\", OPT_CLOSING | CLOSE_TH_TD );
        defineElement( \"THEAD\", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE );
        defineElement( \"TITLE\", ALLOWED_HEAD );
        defineElement( \"TR\", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE );
        defineElement( \"UL\", ELEM_CONTENT | CLOSE_P );

        _boolAttrs = new HashMap<>();
        defineBoolean( \"AREA\", \"href\" );
        defineBoolean( \"BUTTON\", \"disabled\" );
        defineBoolean( \"DIR\", \"compact\" );
        defineBoolean( \"DL\", \"compact\" );
        defineBoolean( \"FRAME\", \"noresize\" );
        defineBoolean( \"HR\", \"noshade\" );
        defineBoolean( \"IMAGE\", \"ismap\" );
        defineBoolean( \"INPUT\", new String[] { \"defaultchecked\", \"checked\", \"readonly\", \"disabled\" } );
        defineBoolean( \"LINK\", \"link\" );
        defineBoolean( \"MENU\", \"compact\" );
        defineBoolean( \"OBJECT\", \"declare\" );
        defineBoolean( \"OL\", \"compact\" );
        defineBoolean( \"OPTGROUP\", \"disabled\" );
        defineBoolean( \"OPTION\", new String[] { \"default-selected\", \"selected\", \"disabled\" } );
        defineBoolean( \"SCRIPT\", \"defer\" );
        defineBoolean( \"SELECT\", new String[] { \"multiple\", \"disabled\" } );
        defineBoolean( \"STYLE\", \"disabled\" );
        defineBoolean( \"TD\", \"nowrap\" );
        defineBoolean( \"TH\", \"nowrap\" );
        defineBoolean( \"TEXTAREA\", new String[] { \"disabled\", \"readonly\" } );
        defineBoolean( \"UL\", \"compact\" );

        initialize();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 786306 "HTMLSerializer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an HTML/XHTML serializer supporting both DOM and SAX
pretty serializing. HTML/XHTML mode is determined in the
constructor.  For usage instructions see {@link Serializer}.
<p>
If an output stream is used, the encoding is taken from the
output format (defaults to <tt>UTF-8</tt>). If a writer is
used, make sure the writer uses the same encoding (if applies)
as specified in the output format.
<p>
The serializer supports both DOM and SAX. DOM serializing is done
by calling {@link #serialize} and SAX serializing is done by firing
SAX events and using the serializer as a document handler.
<p>
If an I/O exception occurs while serializing, the serializer
will not throw an exception directly, but only throw it
at the end of serializing (either DOM or SAX's {@link
org.xml.sax.DocumentHandler#endDocument}.
<p>
For elements that are not specified as whitespace preserving,
the serializer will potentially break long text lines at space
boundaries, indent lines, and serialize elements on separate
lines. Line terminators will be regarded as spaces, and
spaces at beginning of line will be stripped.
<p>
XHTML is slightly different than HTML:
<ul>
<li>Element/attribute names are lower case and case matters
<li>Attributes must specify value, even if empty string
<li>Empty elements must have '/' in empty tag
<li>Contents of SCRIPT and STYLE elements serialized as CDATA
</ul>

@deprecated This class was deprecated in Xerces 2.6.2. It is
recommended that new applications use JAXP's Transformation API
for XML (TrAX) for serializing HTML. See the Xerces documentation
for more information.
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@see Serializer
"
      classrelation 2512770 // <generalisation>
	relation 2512770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2512770 // <generalisation>
	  b parent class_ref 784386 // BaseMarkupSerializer
      end

      attribute 1203842 "_xhtml"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if serializing in XHTML format.

"
      end

      classrelation 2512898 // XHTMLNamespace (<unidirectional association>)
	relation 2512898 --->
	  a role_name "XHTMLNamespace" init_value " \"http://www.w3.org/1999/xhtml\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2512898 // XHTMLNamespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2513026 // fUserXHTMLNamespace (<unidirectional association>)
	relation 2513026 --->
	  a role_name "fUserXHTMLNamespace" init_value " null" private
	    comment " for users to override XHTMLNamespace if need be.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513026 // fUserXHTMLNamespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5529858 "HTMLSerializer"
	protected explicit_return_type ""
	nparams 2
	  param inout name "xhtml" explicit_type "boolean"
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new HTML/XHTML serializer depending on the value of
<tt>xhtml</tt>. The serializer cannot be used without calling
{@link #setOutputCharStream} or {@link #setOutputByteStream} first.

@param xhtml True if XHTML serializing
"
      end

      operation 5529986 "HTMLSerializer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5530114 "HTMLSerializer"
	public explicit_return_type ""
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5530242 "HTMLSerializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified writer
using the specified output format. If <tt>format</tt> is null,
will use a default output format.

@param writer The writer to use
@param format The output format to use, null for the default
"
      end

      operation 5530370 "HTMLSerializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified output
stream using the specified output format. If <tt>format</tt>
is null, will use a default output format.

@param output The output stream to use
@param format The output format to use, null for the default
"
      end

      operation 5530498 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5530626 "setXHTMLNamespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newNamespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set  value for alternate XHTML namespace."
      end

      operation 5530754 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "attrs" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setXHTMLNamespace(String)
-----------------------------------------//
 SAX content handler serializing methods //
-----------------------------------------//"
      end

      operation 5530882 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5531010 "endElementIO"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5531138 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 SAX document handler serializing methods //
------------------------------------------//"
      end

      operation 5531266 "startElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrs" type class_ref 636930 // AttributeList
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5531394 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5531522 "startDocument"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "rootTagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 Generic node serializing methods methods //
------------------------------------------//

Called to serialize the document's DOCTYPE by the root element.
The document type declaration must name the root element,
but the root element is only known when that element is serialized,
and not at the start of the document.
<p>
This method will check if it has not been called before ({@link #_started}),
will serialize the document type declaration, and will serialize all
pre-root comments and PIs that were accumulated in the document
(see {@link #serializePreRoot}). Pre-root will be serialized even if
this is not the first root element of the document.
"
      end

      operation 5531650 "serializeElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to serialize a DOM element. Equivalent to calling {@link
#startElement}, {@link #endElement} and serializing everything
inbetween, but better optimized.
"
      end

      operation 5531778 "characters"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5531906 "getEntityRef"
	protected return_type class_ref 128130 // String
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5532034 "escapeURI"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 786434 "IndentPrinter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Extends {@link Printer} and adds support for indentation and line
wrapping.

@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      classrelation 2513794 // <generalisation>
	relation 2513794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2513794 // <generalisation>
	  b parent class_ref 785282 // Printer
      end

      classrelation 2513922 // _line (<unidirectional association>)
	relation 2513922 --->
	  a role_name "_line" private
	    comment "
Holds the currently accumulating text line. This buffer will constantly
be reused by deleting its contents instead of reallocating it.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2513922 // _line (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      classrelation 2514050 // _text (<unidirectional association>)
	relation 2514050 --->
	  a role_name "_text" private
	    comment "
Holds the currently accumulating text that follows {@link #_line}.
When the end of the part is identified by a call to {@link #printSpace}
or {@link #breakLine}, this part is added to the accumulated line.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514050 // _text (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      attribute 1204354 "_spaces"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Counts how many white spaces come between the accumulated line and the
current accumulated text. Multiple spaces at the end of the a line
will not be printed.

"
      end

      attribute 1204482 "_thisIndent"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Holds the indentation for the current line that is now accumulating in
memory and will be sent for printing shortly.

"
      end

      attribute 1204610 "_nextIndent"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Holds the indentation for the next line to be printed. After this line is
printed, {@link #_nextIndent} is assigned to {@link #_thisIndent}.

"
      end

      operation 5534466 "IndentPrinter"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5534594 "enterDTD"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by any of the DTD handlers to enter DTD mode.
Once entered, all output will be accumulated in a string
that can be printed as part of the document's DTD.
This method may be called any number of time but will only
have affect the first time it's called. To exist DTD state
and get the accumulated DTD, call {@link #leaveDTD}.
"
      end

      operation 5534722 "leaveDTD"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the root element to leave DTD mode and if any
DTD parts were printer, will return a string with their
textual content.
"
      end

      operation 5534850 "printText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to print additional text. Each time this method is called
it accumulates more text. When a space is printed ({@link
#printSpace}) all the accumulated text becomes one part and is
added to the accumulate line. When a line is long enough, it can
be broken at its text boundary.

@param text The text to print
"
      end

      operation 5534978 "printText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5535106 "printText"
	public explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5535234 "printText"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5535362 "printSpace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to print a single space between text parts that may be
broken into separate lines. Must not be called to print a space
when preserving spaces. The text accumulated so far with {@link
#printText} will be added to the accumulated line, and a space
separator will be counted. If the line accumulated so far is
long enough, it will be printed.
"
      end

      operation 5535490 "breakLine"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to print a line consisting of the text accumulated so
far. This is equivalent to calling {@link #printSpace} but
forcing the line to print and starting a new line ({@link
#printSpace} will only start a new line if the current line
is long enough).
"
      end

      operation 5535618 "breakLine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserveSpace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5535746 "flushLine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserveSpace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes the line accumulated so far to the writer and get ready
to accumulate the next line. This method is called by {@link
#printText} and {@link #printSpace} when the accumulated line plus
accumulated text are two long to fit on a given line. At the end of
this method _line is empty and _spaces is zero.
"
      end

      operation 5535874 "flush"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the output stream. Must be called when done printing
the document, otherwise some text might be buffered.
"
      end

      operation 5536002 "indent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increment the indentation for the next line.
"
      end

      operation 5536130 "unindent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decrement the indentation for the next line.
"
      end

      operation 5536258 "getNextIndent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5536386 "setNextIndent"
	public explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5536514 "setThisIndent"
	public explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 786562 "LineSeparator"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author <a href=\"mailto:arkin@intalio..com\">Assaf Arkin</a>
@see OutputFormat
"
      classrelation 2514178 // Unix (<unidirectional association>)
	relation 2514178 --->
	  a role_name "Unix" init_value " \"\\n\"" class_relation const_relation public
	    comment "
Line separator for Unix systems (<tt>\\n</tt>).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514178 // Unix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2514306 // Windows (<unidirectional association>)
	relation 2514306 --->
	  a role_name "Windows" init_value " \"\\r\\n\"" class_relation const_relation public
	    comment "
Line separator for Windows systems (<tt>\\r\\n</tt>).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514306 // Windows (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2514434 // Macintosh (<unidirectional association>)
	relation 2514434 --->
	  a role_name "Macintosh" init_value " \"\\r\"" class_relation const_relation public
	    comment "
Line separator for Macintosh systems (<tt>\\r</tt>).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514434 // Macintosh (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2514562 // Web (<unidirectional association>)
	relation 2514562 --->
	  a role_name "Web" init_value " \"\\n\"" class_relation const_relation public
	    comment "
Line separator for the Web (<tt>\\n</tt>).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514562 // Web (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 786690 "Method"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@see OutputFormat
"
      classrelation 2514690 // XML (<unidirectional association>)
	relation 2514690 --->
	  a role_name "XML" init_value " \"xml\"" class_relation const_relation public
	    comment "
The output method for XML documents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514690 // XML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2514818 // HTML (<unidirectional association>)
	relation 2514818 --->
	  a role_name "HTML" init_value " \"html\"" class_relation const_relation public
	    comment "
The output method for HTML documents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514818 // HTML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2514946 // XHTML (<unidirectional association>)
	relation 2514946 --->
	  a role_name "XHTML" init_value " \"xhtml\"" class_relation const_relation public
	    comment "
The output method for HTML documents as XHTML.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2514946 // XHTML (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2515074 // TEXT (<unidirectional association>)
	relation 2515074 --->
	  a role_name "TEXT" init_value " \"text\"" class_relation const_relation public
	    comment "
The output method for text documents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2515074 // TEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2515202 // FOP (<unidirectional association>)
	relation 2515202 --->
	  a role_name "FOP" init_value " \"fop\"" class_relation const_relation public
	    comment "
The output method for FO documents as PDF.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2515202 // FOP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 787074 "SecuritySupport"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is duplicated for each subpackage so keep it in sync.
It is package private and therefore is not exposed as part of any API.

@xerces.internal
"
      classrelation 2517250 // securitySupport (<unidirectional association>)
	relation 2517250 --->
	  a role_name "securitySupport" init_value " new SecuritySupport()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2517250 // securitySupport (<unidirectional association>)
	  b parent class_ref 787074 // SecuritySupport
      end

      operation 5543042 "getInstance"
	class_operation package return_type class_ref 787074 // SecuritySupport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance of this class.
"
      end

      operation 5543170 "getContextClassLoader"
	package return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5543298 "getSystemClassLoader"
	package return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5543426 "getParentClassLoader"
	package return_type class_ref 129026 // ClassLoader
	nparams 1
	  param in name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5543554 "getSystemProperty"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "propName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5543682 "getFileInputStream"
	package return_type class_ref 580226 // FileInputStream
	nparams 1
	  param in name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5543810 "getResourceAsStream"
	package return_type class_ref 146434 // InputStream
	nparams 2
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5543938 "getFileExists"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5544066 "getLastModified"
	package explicit_return_type "long"
	nparams 1
	  param in name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5544194 "SecuritySupport"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 787202 "SerializerFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "

@version $Revision: 1.6 $ $Date: 2010-11-01 04:40:36 $
@author <a href=\"mailto:Scott_Boag/CAM/Lotus@lotus.com\">Scott Boag</a>
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      classrelation 2517378 // FactoriesProperty (<unidirectional association>)
	relation 2517378 --->
	  a role_name "FactoriesProperty" init_value " \"com.sun.org.apache.xml.internal.serialize.factories\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2517378 // FactoriesProperty (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2517506 // _factories (<unidirectional association>)
	relation 2517506 --->
	  a role_name "_factories" init_value " Collections.synchronizedMap(new HashMap())" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, SerializerFactory> ${name}${value};
"
	    classrelation_ref 2517506 // _factories (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      extra_member 146562 "initialization"
	
	cpp "" ""
	java "  static {
        SerializerFactory factory;
        String            list;
        StringTokenizer   token;
        String            className;

        // The default factories are always registered first,
        // any factory specified in the properties file and supporting
        // the same method will override the default factory.
        factory =  new SerializerFactoryImpl( Method.XML );
        registerSerializerFactory( factory );
        factory =  new SerializerFactoryImpl( Method.HTML );
        registerSerializerFactory( factory );
        factory =  new SerializerFactoryImpl( Method.XHTML );
        registerSerializerFactory( factory );
        factory =  new SerializerFactoryImpl( Method.TEXT );
        registerSerializerFactory( factory );

        list = SecuritySupport.getSystemProperty( FactoriesProperty );
        if ( list != null ) {
            token = new StringTokenizer( list, \" ;,:\" );
            while ( token.hasMoreTokens() ) {
                className = token.nextToken();
                try {
                    factory = (SerializerFactory) ObjectFactory.newInstance( className, true);
                    if ( _factories.containsKey( factory.getSupportedMethod() ) )
                        _factories.put( factory.getSupportedMethod(), factory );
                } catch ( Exception except ) { }
            }
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5544322 "registerSerializerFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 787202 // SerializerFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a serializer factory, keyed by the given
method string.
"
      end

      operation 5544450 "getSerializerFactory"
	class_operation public return_type class_ref 787202 // SerializerFactory
	nparams 1
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a serializer factory, keyed by the given
method string.
"
      end

      operation 5544578 "getSupportedMethod"
	abstract protected return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the method supported by this factory and used to register
the factory. This call is required so factories can be added from
a properties file by knowing only the class name. This method is
protected, it is only required by this class but must be implemented
in derived classes.
"
      end

      operation 5544706 "makeSerializer"
	abstract public return_type class_ref 784642 // Serializer
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new serializer based on the {@link OutputFormat}.
If this method is used to create the serializer, the {@link
Serializer#setOutputByteStream} or {@link Serializer#setOutputCharStream}
methods must be called before serializing a document.
"
      end

      operation 5544834 "makeSerializer"
	abstract public return_type class_ref 784642 // Serializer
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new serializer, based on the {@link OutputFormat} and
using the writer as the output character stream.  If this
method is used, the encoding property will be ignored.
"
      end

      operation 5544962 "makeSerializer"
	abstract public return_type class_ref 784642 // Serializer
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 784770 // OutputFormat
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new serializer, based on the {@link OutputFormat} and
using the output byte stream and the encoding specified in the
output format.

@throws UnsupportedEncodingException The specified encoding is
  not supported
"
      end
    end

    class 787330 "SerializerFactoryImpl"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default serializer factory can construct serializers for the three
markup serializers (XML, HTML, XHTML ).


@author <a href=\"mailto:Scott_Boag/CAM/Lotus@lotus.com\">Scott Boag</a>
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
"
      classrelation 2517634 // <generalisation>
	relation 2517634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2517634 // <generalisation>
	  b parent class_ref 787202 // SerializerFactory
      end

      classrelation 2517762 // _method (<unidirectional association>)
	relation 2517762 --->
	  a role_name "_method" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2517762 // _method (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5545090 "SerializerFactoryImpl"
	package explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5545218 "makeSerializer"
	public return_type class_ref 784642 // Serializer
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5545346 "makeSerializer"
	public return_type class_ref 784642 // Serializer
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5545474 "makeSerializer"
	public return_type class_ref 784642 // Serializer
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 784770 // OutputFormat
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5545602 "getSerializer"
	private return_type class_ref 784642 // Serializer
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5545730 "getSupportedMethod"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 787458 "TextSerializer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements a text serializer supporting both DOM and SAX
serializing. For usage instructions see {@link Serializer}.
<p>
If an output stream is used, the encoding is taken from the
output format (defaults to <tt>UTF-8</tt>). If a writer is
used, make sure the writer uses the same encoding (if applies)
as specified in the output format.
<p>
The serializer supports both DOM and SAX. DOM serializing is done
by calling {@link #serialize} and SAX serializing is done by firing
SAX events and using the serializer as a document handler.
<p>
If an I/O exception occurs while serializing, the serializer
will not throw an exception directly, but only throw it
at the end of serializing (either DOM or SAX's {@link
org.xml.sax.DocumentHandler#endDocument}.


@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@see Serializer
"
      classrelation 2517890 // <generalisation>
	relation 2517890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2517890 // <generalisation>
	  b parent class_ref 784386 // BaseMarkupSerializer
      end

      operation 5545858 "TextSerializer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5545986 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5546114 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	  param inout name "attrs" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------//
 SAX content handler serializing methods //
-----------------------------------------//"
      end

      operation 5546242 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "rawName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5546370 "startElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "tagName" type class_ref 128130 // String
	  param inout name "attrs" type class_ref 636930 // AttributeList
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 SAX document handler serializing methods //
------------------------------000---------//"
      end

      operation 5546498 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5546626 "endElementIO"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5546754 "processingInstructionIO"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "code" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5546882 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5547010 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5547138 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5547266 "characters"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "unescaped" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5547394 "startDocument"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "rootTagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------//
 Generic node serializing methods methods //
------------------------------------------//

Called to serialize the document's DOCTYPE by the root element.
<p>
This method will check if it has not been called before ({@link #_started}),
will serialize the document type declaration, and will serialize all
pre-root comments and PIs that were accumulated in the document
(see {@link #serializePreRoot}). Pre-root will be serialized even if
this is not the first root element of the document.
"
      end

      operation 5547522 "serializeElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to serialize a DOM element. Equivalent to calling {@link
#startElement}, {@link #endElement} and serializing everything
inbetween, but better optimized.
"
      end

      operation 5547650 "serializeNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serialize the DOM node. This method is unique to the Text serializer.

@param node The node to serialize
"
      end

      operation 5547778 "content"
	protected return_type class_ref 785154 // ElementState
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5547906 "getEntityRef"
	protected return_type class_ref 128130 // String
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 787586 "XHTMLSerializer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an XHTML serializer supporting both DOM and SAX
pretty serializing. For usage instructions see either {@link
Serializer} or {@link BaseMarkupSerializer}.

@deprecated This class was deprecated in Xerces 2.6.2. It is
recommended that new applications use JAXP's Transformation API
for XML (TrAX) for serializing XHTML. See the Xerces documentation
for more information.
@author <a href=\"mailto:arkin@intalio.com\">Assaf Arkin</a>
@see Serializer
"
      classrelation 2518018 // <generalisation>
	relation 2518018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2518018 // <generalisation>
	  b parent class_ref 786306 // HTMLSerializer
      end

      operation 5548034 "XHTMLSerializer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5548162 "XHTMLSerializer"
	public explicit_return_type ""
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer. The serializer cannot be used without
calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
first.
"
      end

      operation 5548290 "XHTMLSerializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified writer
using the specified output format. If <tt>format</tt> is null,
will use a default output format.

@param writer The writer to use
@param format The output format to use, null for the default
"
      end

      operation 5548418 "XHTMLSerializer"
	public explicit_return_type ""
	nparams 2
	  param inout name "output" type class_ref 151298 // OutputStream
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new serializer that writes to the specified output
stream using the specified output format. If <tt>format</tt>
is null, will use a default output format.

@param output The output stream to use
@param format The output format to use, null for the default
"
      end

      operation 5548546 "setOutputFormat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 784770 // OutputFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 162946 "serialize"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 553858 "DOMSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.w3c.dom.Element;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
${definition}"
      associated_elems
	class_ref 784514 // DOMSerializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 553986 "Serializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import org.xml.sax.ContentHandler;
import org.xml.sax.DocumentHandler;
${definition}"
      associated_elems
	class_ref 784642 // Serializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 554114 "BaseMarkupSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.DOMErrorImpl;
import com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl;
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import org.w3c.dom.DOMError;
import org.w3c.dom.DOMErrorHandler;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Entity;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.Notation;
import org.w3c.dom.ls.LSException;
import org.w3c.dom.ls.LSSerializerFilter;
import org.w3c.dom.traversal.NodeFilter;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.ext.DeclHandler;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 784386 // BaseMarkupSerializer
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Sep 14, 2000:
  Fixed comments to preserve whitespaces and add a line break
  when indenting. Reported by Gervase Markham <gerv@gerv.net>
 Sep 14, 2000:
  Fixed serializer to report IO exception directly, instead at
  the end of document processing.
  Reported by Patrick Higgins <phiggins@transzap.com>
 Sep 13, 2000:
   CR in character data will print as &#0D;
 Aug 25, 2000:
   Fixed processing instruction printing inside element content
   to not escape content. Reported by Mikael Staldal
   <d96-mst@d.kth.se>
 Aug 25, 2000:
   Added ability to omit comments.
   Contributed by Anupam Bagchi <abagchi@jtcsv.com>
 Aug 26, 2000:
   Fixed bug in newline handling when preserving spaces.
   Contributed by Mike Dusseault <mdusseault@home.com>
 Aug 29, 2000:
   Fixed state.unescaped not being set to false when
   entering element state.
   Reported by Lowell Vaughn <lvaughn@agillion.com>"
    end

    artifact 554370 "DOMSerializerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.lang.reflect.Method;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.StringTokenizer;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl;
import com.sun.org.apache.xerces.internal.dom.DOMErrorImpl;
import com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl;
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
import com.sun.org.apache.xerces.internal.dom.DOMNormalizer;
import com.sun.org.apache.xerces.internal.dom.DOMStringListImpl;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.DOMError;
import org.w3c.dom.DOMErrorHandler;
import org.w3c.dom.DOMStringList;
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.NamespaceSupport;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XML11Char;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import org.w3c.dom.Attr;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.ls.LSException;
import org.w3c.dom.ls.LSOutput;
import org.w3c.dom.ls.LSSerializer;
import org.w3c.dom.ls.LSSerializerFilter;
${definition}"
      associated_elems
	class_ref 785410 // DOMSerializerImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 554498 "ElementState"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
${definition}"
      associated_elems
	class_ref 785154 // ElementState
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 554626 "EncodingInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import com.sun.org.apache.xerces.internal.util.EncodingMap;
${definition}"
      associated_elems
	class_ref 785026 // EncodingInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 554754 "Encodings"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.util.EncodingMap;
import java.io.UnsupportedEncodingException;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
${definition}"
      associated_elems
	class_ref 786050 // Encodings
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 554882 "HTMLdtd"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 786178 // HTMLdtd
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Aug 21, 2000:
   Fixed bug in isElement and made HTMLdtd public.
   Contributed by Eric SCHAEFFER\" <eschaeffer@posterconseil.com>"
    end

    artifact 555010 "HTMLSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Locale;
import java.util.Map;
import org.w3c.dom.Attr;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.xml.sax.AttributeList;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 786306 // HTMLSerializer
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Sep 14, 2000:
  Fixed serializer to report IO exception directly, instead at
  the end of document processing.
  Reported by Patrick Higgins <phiggins@transzap.com>
 Aug 21, 2000:
  Fixed bug in startDocument not calling prepare.
  Reported by Mikael Staldal <d96-mst-ingen-reklam@d.kth.se>
 Aug 21, 2000:
  Added ability to omit DOCTYPE declaration.
 Sep 1, 2000:
   If no output format is provided the serializer now defaults
   to ISO-8859-1 encoding. Reported by Mikael Staldal
   <d96-mst@d.kth.se>"
    end

    artifact 555138 "Printer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Writer;
import java.io.StringWriter;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 785282 // Printer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Sep 14, 2000:
  Fixed serializer to report IO exception directly, instead at
  the end of document processing.
  Reported by Patrick Higgins <phiggins@transzap.com>"
    end

    artifact 555266 "IndentPrinter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Writer;
import java.io.StringWriter;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 786434 // IndentPrinter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 555394 "LineSeparator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 786562 // LineSeparator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 555522 "Method"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 786690 // Method
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 555650 "OutputFormat"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.UnsupportedEncodingException;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Node;
import org.w3c.dom.html.HTMLDocument;
${definition}"
      associated_elems
	class_ref 784770 // OutputFormat
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Aug 21, 2000:
  Added ability to omit DOCTYPE declaration.
  Reported by Lars Martin <lars@smb-tec.com>
 Aug 25, 2000:
  Added ability to omit comments.
  Contributed by Anupam Bagchi <abagchi@jtcsv.com>"
    end

    artifact 555778 "SecuritySupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
${definition}"
      associated_elems
	class_ref 787074 // SecuritySupport
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 555906 "SerializerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.utils.ObjectFactory;
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;
${definition}"
      associated_elems
	class_ref 787202 // SerializerFactory
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 556034 "SerializerFactoryImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.Writer;
import java.io.UnsupportedEncodingException;
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
${definition}"
      associated_elems
	class_ref 787330 // SerializerFactoryImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 556162 "TextSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.AttributeList;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 787458 // TextSerializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Sep 14, 2000:
  Fixed serializer to report IO exception directly, instead at
  the end of document processing.
  Reported by Patrick Higgins <phiggins@transzap.com>"
    end

    artifact 556290 "XHTMLSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.Writer;
${definition}"
      associated_elems
	class_ref 787586 // XHTMLSerializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 556418 "XMLSerializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
import com.sun.org.apache.xerces.internal.util.NamespaceSupport;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.Map;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMError;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;
import org.xml.sax.AttributeList;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.AttributesImpl;
${definition}"
      associated_elems
	class_ref 785538 // XMLSerializer
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Sep 14, 2000:
  Fixed problem with namespace handling. Contributed by
  David Blondeau <blondeau@intalio.com>
 Sep 14, 2000:
  Fixed serializer to report IO exception directly, instead at
  the end of document processing.
  Reported by Patrick Higgins <phiggins@transzap.com>
 Aug 21, 2000:
  Fixed bug in startDocument not calling prepare.
  Reported by Mikael Staldal <d96-mst-ingen-reklam@d.kth.se>
 Aug 21, 2000:
  Added ability to omit DOCTYPE declaration."
    end

    artifact 556546 "XML11Serializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import com.sun.org.apache.xerces.internal.dom.DOMMessageFormatter;
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.util.NamespaceSupport;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XML11Char;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import org.xml.sax.SAXException;
import org.w3c.dom.DOMError;
${definition}"
      associated_elems
	class_ref 785666 // XML11Serializer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Sep 14, 2000:
  Fixed problem with namespace handling. Contributed by
  David Blondeau <blondeau@intalio.com>
 Sep 14, 2000:
  Fixed serializer to report IO exception directly, instead at
  the end of document processing.
  Reported by Patrick Higgins <phiggins@transzap.com>
 Aug 21, 2000:
  Fixed bug in startDocument not calling prepare.
  Reported by Mikael Staldal <d96-mst-ingen-reklam@d.kth.se>
 Aug 21, 2000:
  Added ability to omit DOCTYPE declaration."
    end
  end
end
