format 222
"ranges" // jdk1.8::org::w3c::dom::ranges
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/org/w3c/dom/ranges/"
  java_package "org.w3c.dom.ranges"
  classview 160642 "ranges"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 653826 "DocumentRange"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
@since DOM Level 2
"
      operation 4227586 "createRange"
	public return_type class_ref 653954 // Range
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This interface can be obtained from the object implementing the
<code>Document</code> interface using binding-specific casting
methods.
@return The initial state of the Range returned from this method is
  such that both of its boundary-points are positioned at the
  beginning of the corresponding Document, before any content. The
  Range returned can only be used to select content associated with
  this Document, or with DocumentFragments and Attrs for which this
  Document is the <code>ownerDocument</code>.
"
      end
    end

    class 653954 "Range"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
@since DOM Level 2
"
      operation 4321666 "getStartContainer"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Node within which the Range begins
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4321794 "getStartOffset"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offset within the starting node of the Range.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4321922 "getEndContainer"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Node within which the Range ends
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4322050 "getEndOffset"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offset within the ending node of the Range.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4322178 "getCollapsed"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TRUE if the Range is collapsed
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4322306 "getCommonAncestorContainer"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The deepest common ancestor container of the Range's two
boundary-points.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4322434 "setStart"
	public explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attributes describing the start of the Range.
@param refNode The <code>refNode</code> value. This parameter must be
  different from <code>null</code>.
@param offset The <code>startOffset</code> value.
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor
  of <code>refNode</code> is an Entity, Notation, or DocumentType
  node.
@exception DOMException
  INDEX_SIZE_ERR: Raised if <code>offset</code> is negative or greater
  than the number of child units in <code>refNode</code>. Child units
  are 16-bit units if <code>refNode</code> is a type of CharacterData
  node (e.g., a Text or Comment node) or a ProcessingInstruction
  node. Child units are Nodes in all other cases.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4322562 "setEnd"
	public explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attributes describing the end of a Range.
@param refNode The <code>refNode</code> value. This parameter must be
  different from <code>null</code>.
@param offset The <code>endOffset</code> value.
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor
  of <code>refNode</code> is an Entity, Notation, or DocumentType
  node.
@exception DOMException
  INDEX_SIZE_ERR: Raised if <code>offset</code> is negative or greater
  than the number of child units in <code>refNode</code>. Child units
  are 16-bit units if <code>refNode</code> is a type of CharacterData
  node (e.g., a Text or Comment node) or a ProcessingInstruction
  node. Child units are Nodes in all other cases.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4322690 "setStartBefore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the start position to be before a node
@param refNode Range starts before <code>refNode</code>
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of
  <code>refNode</code> is not an Attr, Document, or DocumentFragment
  node or if <code>refNode</code> is a Document, DocumentFragment,
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4322818 "setStartAfter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the start position to be after a node
@param refNode Range starts after <code>refNode</code>
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of
  <code>refNode</code> is not an Attr, Document, or DocumentFragment
  node or if <code>refNode</code> is a Document, DocumentFragment,
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4322946 "setEndBefore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the end position to be before a node.
@param refNode Range ends before <code>refNode</code>
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of
  <code>refNode</code> is not an Attr, Document, or DocumentFragment
  node or if <code>refNode</code> is a Document, DocumentFragment,
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4323074 "setEndAfter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the end of a Range to be after a node
@param refNode Range ends after <code>refNode</code>.
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of
  <code>refNode</code> is not an Attr, Document or DocumentFragment
  node or if <code>refNode</code> is a Document, DocumentFragment,
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4323202 "collapse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toStart" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Collapse a Range onto one of its boundary-points
@param toStart If TRUE, collapses the Range onto its start; if FALSE,
  collapses it onto its end.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4323330 "selectNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Select a node and its contents
@param refNode The node to select.
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if an ancestor of <code>refNode</code>
  is an Entity, Notation or DocumentType node or if
  <code>refNode</code> is a Document, DocumentFragment, Attr, Entity,
  or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      operation 4323458 "selectNodeContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Select the contents within a node
@param refNode Node to select from
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor
  of <code>refNode</code> is an Entity, Notation or DocumentType node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created
  from a different document than the one that created this range.
"
      end

      attribute 910978 "START_TO_START"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " CompareHow

Compare start boundary-point of <code>sourceRange</code> to start
boundary-point of Range on which <code>compareBoundaryPoints</code>
is invoked.

"
      end

      attribute 911106 "START_TO_END"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compare start boundary-point of <code>sourceRange</code> to end
boundary-point of Range on which <code>compareBoundaryPoints</code>
is invoked.

"
      end

      attribute 911234 "END_TO_END"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compare end boundary-point of <code>sourceRange</code> to end
boundary-point of Range on which <code>compareBoundaryPoints</code>
is invoked.

"
      end

      attribute 911362 "END_TO_START"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compare end boundary-point of <code>sourceRange</code> to start
boundary-point of Range on which <code>compareBoundaryPoints</code>
is invoked.

"
      end

      operation 4323586 "compareBoundaryPoints"
	public explicit_return_type "short"
	nparams 2
	  param in name "how" explicit_type "short"
	  param inout name "sourceRange" type class_ref 653954 // Range
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare the boundary-points of two Ranges in a document.
@param how A code representing the type of comparison, as defined
  above.
@param sourceRange The <code>Range</code> on which this current
  <code>Range</code> is compared to.
@return  -1, 0 or 1 depending on whether the corresponding
  boundary-point of the Range is respectively before, equal to, or
  after the corresponding boundary-point of <code>sourceRange</code>.
@exception DOMException
  WRONG_DOCUMENT_ERR: Raised if the two Ranges are not in the same
  Document or DocumentFragment.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
"
      end

      operation 4323714 "deleteContents"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the contents of a Range from the containing document or
document fragment without returning a reference to the removed
content.
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of
  the Range is read-only or any of the nodes that contain any of the
  content of the Range are read-only.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
"
      end

      operation 4323842 "extractContents"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the contents of a Range from the containing document or document
fragment to a new DocumentFragment.
@return A DocumentFragment containing the extracted contents.
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of
  the Range is read-only or any of the nodes which contain any of the
  content of the Range are read-only.
  <br>HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be
  extracted into the new DocumentFragment.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
"
      end

      operation 4323970 "cloneContents"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Duplicates the contents of a Range
@return A DocumentFragment that contains content equivalent to this
  Range.
@exception DOMException
  HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be
  extracted into the new DocumentFragment.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
"
      end

      operation 4324098 "insertNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 646658 // DOMException
	  exception class_ref 665090 // RangeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a node into the Document or DocumentFragment at the start of
the Range. If the container is a Text node, this will be split at the
start of the Range (as if the Text node's splitText method was
performed at the insertion point) and the insertion will occur
between the two resulting Text nodes. Adjacent Text nodes will not be
automatically merged. If the node to be inserted is a
DocumentFragment node, the children will be inserted rather than the
DocumentFragment node itself.
@param newNode The node to insert at the start of the Range
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of the
  start of the Range is read-only.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>newNode</code> and the
  container of the start of the Range were not created from the same
  document.
  <br>HIERARCHY_REQUEST_ERR: Raised if the container of the start of
  the Range is of a type that does not allow children of the type of
  <code>newNode</code> or if <code>newNode</code> is an ancestor of
  the container.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>newNode</code> is an Attr,
  Entity, Notation, or Document node.
"
      end

      operation 4324226 "surroundContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newParent" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 646658 // DOMException
	  exception class_ref 665090 // RangeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reparents the contents of the Range to the given node and inserts the
node at the position of the start of the Range.
@param newParent The node to surround the contents with.
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of
  either boundary-point of the Range is read-only.
  <br>WRONG_DOCUMENT_ERR: Raised if <code> newParent</code> and the
  container of the start of the Range were not created from the same
  document.
  <br>HIERARCHY_REQUEST_ERR: Raised if the container of the start of
  the Range is of a type that does not allow children of the type of
  <code>newParent</code> or if <code>newParent</code> is an ancestor
  of the container or if <code>node</code> would end up with a child
  node of a type not allowed by the type of <code>node</code>.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already
  been invoked on this object.
@exception RangeException
  BAD_BOUNDARYPOINTS_ERR: Raised if the Range partially selects a
  non-text node.
  <br>INVALID_NODE_TYPE_ERR: Raised if <code> node</code> is an Attr,
  Entity, DocumentType, Notation, Document, or DocumentFragment node.
"
      end

      operation 4324354 "cloneRange"
	public return_type class_ref 653954 // Range
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produces a new Range whose boundary-points are equal to the
boundary-points of the Range.
@return The duplicated Range.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4324482 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the contents of a Range as a string. This string contains only
the data characters, not any markup.
@return The contents of the Range.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end

      operation 4324610 "detach"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to indicate that the Range is no longer in use and that the
implementation may relinquish any resources associated with this
Range. Subsequent calls to any methods or attribute getters on this
Range will result in a <code>DOMException</code> being thrown with an
error code of <code>INVALID_STATE_ERR</code>.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
  invoked on this object.
"
      end
    end

    class 665090 "RangeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Range operations may throw a <code>RangeException</code> as specified in
their method descriptions.
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
@since DOM Level 2
"
      classrelation 1813762 // <generalisation>
	relation 1813762 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1813762 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 4321410 "RangeException"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 910466 "code"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 910594 "BAD_BOUNDARYPOINTS_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " RangeExceptionCode

If the boundary-points of a Range do not meet specific requirements.

"
      end

      attribute 910722 "INVALID_NODE_TYPE_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the container of an boundary-point of a Range is being set to either
a node of an invalid type or a node with an ancestor of an invalid
type.

"
      end
    end
  end

  deploymentview 154242 "ranges"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 450306 "DocumentRange"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 653826 // DocumentRange
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 458626 "RangeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 665090 // RangeException
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 458882 "Range"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
${definition}"
      associated_elems
	class_ref 653954 // Range
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end
  end
end
