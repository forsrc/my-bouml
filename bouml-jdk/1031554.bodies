class PKIXRevocationChecker
!!!8048130.java!!!	setOcspResponder(inout uri : URI) : void
        this.ocspResponder = uri;
!!!8048258.java!!!	getOcspResponder() : URI
        return ocspResponder;
!!!8048386.java!!!	setOcspResponderCert(inout cert : X509Certificate) : void
        this.ocspResponderCert = cert;
!!!8048514.java!!!	getOcspResponderCert() : X509Certificate
        return ocspResponderCert;
!!!8048642.java!!!	setOcspExtensions(inout extensions : List) : void
        this.ocspExtensions = (extensions == null)
                              ? Collections.<Extension>emptyList()
                              : new ArrayList<Extension>(extensions);
!!!8048770.java!!!	getOcspExtensions() : List
        return Collections.unmodifiableList(ocspExtensions);
!!!8048898.java!!!	setOcspResponses(inout responses : Map) : void
        if (responses == null) {
            this.ocspResponses = Collections.<X509Certificate, byte[]>emptyMap();
        } else {
            Map<X509Certificate, byte[]> copy = new HashMap<>(responses.size());
            for (Map.Entry<X509Certificate, byte[]> e : responses.entrySet()) {
                copy.put(e.getKey(), e.getValue().clone());
            }
            this.ocspResponses = copy;
        }
!!!8049026.java!!!	getOcspResponses() : Map
        Map<X509Certificate, byte[]> copy = new HashMap<>(ocspResponses.size());
        for (Map.Entry<X509Certificate, byte[]> e : ocspResponses.entrySet()) {
            copy.put(e.getKey(), e.getValue().clone());
        }
        return copy;
!!!8049154.java!!!	setOptions(inout options : Set) : void
        this.options = (options == null)
                       ? Collections.<Option>emptySet()
                       : new HashSet<Option>(options);
!!!8049282.java!!!	getOptions() : Set
        return Collections.unmodifiableSet(options);
!!!8049538.java!!!	clone() : PKIXRevocationChecker
        PKIXRevocationChecker copy = (PKIXRevocationChecker)super.clone();
        copy.ocspExtensions = new ArrayList<>(ocspExtensions);
        copy.ocspResponses = new HashMap<>(ocspResponses);
        // deep-copy the encoded responses, since they are mutable
        for (Map.Entry<X509Certificate, byte[]> entry :
                 copy.ocspResponses.entrySet())
        {
            byte[] encoded = entry.getValue();
            entry.setValue(encoded.clone());
        }
        copy.options = new HashSet<>(options);
        return copy;
