class ParserConfigurationSettings
!!!4272770.java!!!	ParserConfigurationSettings()
        this(null);
!!!4272898.java!!!	ParserConfigurationSettings(inout parent : XMLComponentManager)

        // create storage for recognized features and properties
        fRecognizedFeatures = new HashSet<String>();
        fRecognizedProperties = new HashSet<String>();

        // create table for features and properties
        fFeatures = new HashMap<String, Boolean>();
        fProperties = new HashMap<String, Object>();

        // save parent
        fParentSettings = parent;

!!!4273026.java!!!	addRecognizedFeatures(inout featureIds : String [[]]) : void

        // add recognized features
        int featureIdsCount = featureIds != null ? featureIds.length : 0;
        for (int i = 0; i < featureIdsCount; i++) {
            String featureId = featureIds[i];
            if (!fRecognizedFeatures.contains(featureId)) {
                fRecognizedFeatures.add(featureId);
            }
        }

!!!4273154.java!!!	setFeature(inout featureId : String, inout state : boolean) : void

        // check and store
        FeatureState checkState = checkFeature(featureId);
        if (checkState.isExceptional()) {
            throw new XMLConfigurationException(checkState.status, featureId);
        }

        fFeatures.put(featureId, state);
!!!4273282.java!!!	addRecognizedProperties(inout propertyIds : String [[]]) : void
        fRecognizedProperties.addAll(Arrays.asList(propertyIds));
!!!4273410.java!!!	setProperty(inout propertyId : String, inout value : Object) : void

        // check and store
        PropertyState checkState = checkProperty(propertyId);
        if (checkState.isExceptional()) {
            throw new XMLConfigurationException(checkState.status, propertyId);
        }
        fProperties.put(propertyId, value);

!!!4273538.java!!!	getFeature(inout featureId : String) : boolean

        FeatureState state = getFeatureState(featureId);
        if (state.isExceptional()) {
            throw new XMLConfigurationException(state.status, featureId);
        }
        return state.state;
!!!4273666.java!!!	getFeature(inout featureId : String, inout defaultValue : boolean) : boolean
        FeatureState state = getFeatureState(featureId);
        if (state.isExceptional()) {
            return defaultValue;
        }
        return state.state;
!!!4273794.java!!!	getFeatureState(inout featureId : String) : FeatureState
        Boolean state = (Boolean) fFeatures.get(featureId);

        if (state == null) {
            FeatureState checkState = checkFeature(featureId);
            if (checkState.isExceptional()) {
                return checkState;
            }
            return FeatureState.is(false);
        }
        return FeatureState.is(state);
!!!4273922.java!!!	getProperty(inout propertyId : String) : Object

        PropertyState state = getPropertyState(propertyId);
        if (state.isExceptional()) {
            throw new XMLConfigurationException(state.status, propertyId);
        }

        return state.state;
!!!4274050.java!!!	getProperty(inout propertyId : String, inout defaultValue : Object) : Object
        PropertyState state = getPropertyState(propertyId);
        if (state.isExceptional()) {
            return defaultValue;
        }

        return state.state;
!!!4274178.java!!!	getPropertyState(inout propertyId : String) : PropertyState
        Object propertyValue = fProperties.get(propertyId);

        if (propertyValue == null) {
            PropertyState state = checkProperty(propertyId);
            if (state.isExceptional()) {
                return state;
            }
        }

        return PropertyState.is(propertyValue);
!!!4274306.java!!!	checkFeature(inout featureId : String) : FeatureState

        // check feature
        if (!fRecognizedFeatures.contains(featureId)) {
            if (fParentSettings != null) {
                return fParentSettings.getFeatureState(featureId);
            }
            else {
                return FeatureState.NOT_RECOGNIZED;
            }
        }

        // TODO: reasonable default?
        return FeatureState.RECOGNIZED;
!!!4274434.java!!!	checkProperty(inout propertyId : String) : PropertyState

        // check property
        if (!fRecognizedProperties.contains(propertyId)) {
            if (fParentSettings != null) {
                PropertyState state = fParentSettings.getPropertyState(propertyId);
                if (state.isExceptional()) {
                    return state;
                }
            }
            else {
                return PropertyState.NOT_RECOGNIZED;
            }
        }
        return PropertyState.RECOGNIZED;
