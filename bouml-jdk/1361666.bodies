class ToggleButtonPainter
!!!11389698.java!!!	ToggleButtonPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11389826.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_DISABLED: paintBackgroundDisabled(g); break;
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;
            case BACKGROUND_FOCUSED: paintBackgroundFocused(g); break;
            case BACKGROUND_MOUSEOVER: paintBackgroundMouseOver(g); break;
            case BACKGROUND_MOUSEOVER_FOCUSED: paintBackgroundMouseOverAndFocused(g); break;
            case BACKGROUND_PRESSED: paintBackgroundPressed(g); break;
            case BACKGROUND_PRESSED_FOCUSED: paintBackgroundPressedAndFocused(g); break;
            case BACKGROUND_SELECTED: paintBackgroundSelected(g); break;
            case BACKGROUND_SELECTED_FOCUSED: paintBackgroundSelectedAndFocused(g); break;
            case BACKGROUND_PRESSED_SELECTED: paintBackgroundPressedAndSelected(g); break;
            case BACKGROUND_PRESSED_SELECTED_FOCUSED: paintBackgroundPressedAndSelectedAndFocused(g); break;
            case BACKGROUND_MOUSEOVER_SELECTED: paintBackgroundMouseOverAndSelected(g); break;
            case BACKGROUND_MOUSEOVER_SELECTED_FOCUSED: paintBackgroundMouseOverAndSelectedAndFocused(g); break;
            case BACKGROUND_DISABLED_SELECTED: paintBackgroundDisabledAndSelected(g); break;

        }
!!!11389954.java!!!	getExtendedCacheKeys(inout c : JComponent) : Object
        Object[] extendedCacheKeys = null;
        switch(state) {
            case BACKGROUND_ENABLED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color12, -0.10655806f, 0.24313724f, 0),
                     getComponentColor(c, "background", color13, -0.09823123f, 0.2117647f, 0),
                     getComponentColor(c, "background", color6, -0.07016757f, 0.12941176f, 0),
                     getComponentColor(c, "background", color14, -0.0749532f, 0.24705881f, 0),
                     getComponentColor(c, "background", color15, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color12, -0.10655806f, 0.24313724f, 0),
                     getComponentColor(c, "background", color13, -0.09823123f, 0.2117647f, 0),
                     getComponentColor(c, "background", color6, -0.07016757f, 0.12941176f, 0),
                     getComponentColor(c, "background", color14, -0.0749532f, 0.24705881f, 0),
                     getComponentColor(c, "background", color15, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_MOUSEOVER:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color19, -0.10658931f, 0.25098038f, 0),
                     getComponentColor(c, "background", color20, -0.098526314f, 0.2352941f, 0),
                     getComponentColor(c, "background", color21, -0.07333623f, 0.20392156f, 0),
                     getComponentColor(c, "background", color15, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color19, -0.10658931f, 0.25098038f, 0),
                     getComponentColor(c, "background", color20, -0.098526314f, 0.2352941f, 0),
                     getComponentColor(c, "background", color21, -0.07333623f, 0.20392156f, 0),
                     getComponentColor(c, "background", color15, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_PRESSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color25, -0.05960039f, 0.10196078f, 0),
                     getComponentColor(c, "background", color26, -0.04772438f, 0.06666666f, 0),
                     getComponentColor(c, "background", color27, -0.0018306673f, -0.02352941f, 0),
                     getComponentColor(c, "background", color28, -0.0212406f, 0.13333333f, 0),
                     getComponentColor(c, "background", color29, -0.030845039f, 0.23921567f, 0)};
                break;
            case BACKGROUND_PRESSED_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color25, -0.05960039f, 0.10196078f, 0),
                     getComponentColor(c, "background", color26, -0.04772438f, 0.06666666f, 0),
                     getComponentColor(c, "background", color27, -0.0018306673f, -0.02352941f, 0),
                     getComponentColor(c, "background", color28, -0.0212406f, 0.13333333f, 0),
                     getComponentColor(c, "background", color29, -0.030845039f, 0.23921567f, 0)};
                break;
            case BACKGROUND_SELECTED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color33, -0.06401469f, -0.07058823f, 0),
                     getComponentColor(c, "background", color34, -0.06530018f, 0.035294116f, 0),
                     getComponentColor(c, "background", color35, -0.06507177f, 0.031372547f, 0)};
                break;
            case BACKGROUND_SELECTED_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color33, -0.06401469f, -0.07058823f, 0),
                     getComponentColor(c, "background", color34, -0.06530018f, 0.035294116f, 0),
                     getComponentColor(c, "background", color35, -0.06507177f, 0.031372547f, 0)};
                break;
            case BACKGROUND_PRESSED_SELECTED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color38, -0.03909774f, -0.2509804f, 0),
                     getComponentColor(c, "background", color39, -0.040013492f, -0.13333333f, 0),
                     getComponentColor(c, "background", color40, -0.039558575f, -0.1372549f, 0)};
                break;
            case BACKGROUND_PRESSED_SELECTED_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color38, -0.03909774f, -0.2509804f, 0),
                     getComponentColor(c, "background", color39, -0.040013492f, -0.13333333f, 0),
                     getComponentColor(c, "background", color40, -0.039558575f, -0.1372549f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_SELECTED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color43, -0.0595709f, -0.12941176f, 0),
                     getComponentColor(c, "background", color44, -0.061075766f, -0.031372547f, 0),
                     getComponentColor(c, "background", color45, -0.06080256f, -0.035294116f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_SELECTED_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color43, -0.0595709f, -0.12941176f, 0),
                     getComponentColor(c, "background", color44, -0.061075766f, -0.031372547f, 0),
                     getComponentColor(c, "background", color45, -0.06080256f, -0.035294116f, 0)};
                break;
        }
        return extendedCacheKeys;
!!!11390082.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11390210.java!!!	paintBackgroundDisabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11390338.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);

!!!11390466.java!!!	paintBackgroundFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color16);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient5(roundRect));
        g.fill(roundRect);

!!!11390594.java!!!	paintBackgroundMouseOver(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient6(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient7(roundRect));
        g.fill(roundRect);

!!!11390722.java!!!	paintBackgroundMouseOverAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color16);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient6(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient7(roundRect));
        g.fill(roundRect);

!!!11390850.java!!!	paintBackgroundPressed(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color22);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient8(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);

!!!11390978.java!!!	paintBackgroundPressedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color16);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient8(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);

!!!11391106.java!!!	paintBackgroundSelected(inout g : Graphics2D) : void
        roundRect = decodeRoundRect5();
        g.setPaint(color30);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient9(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11391234.java!!!	paintBackgroundSelectedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect6();
        g.setPaint(color16);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient9(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11391362.java!!!	paintBackgroundPressedAndSelected(inout g : Graphics2D) : void
        roundRect = decodeRoundRect5();
        g.setPaint(color30);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient11(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11391490.java!!!	paintBackgroundPressedAndSelectedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect6();
        g.setPaint(color16);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient11(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11391618.java!!!	paintBackgroundMouseOverAndSelected(inout g : Graphics2D) : void
        roundRect = decodeRoundRect5();
        g.setPaint(color30);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient12(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11391746.java!!!	paintBackgroundMouseOverAndSelectedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect6();
        g.setPaint(color16);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient12(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11391874.java!!!	paintBackgroundDisabledAndSelected(inout g : Graphics2D) : void
        roundRect = decodeRoundRect5();
        g.setPaint(color46);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient13(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient14(roundRect));
        g.fill(roundRect);

!!!11392002.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2857143f), //x
                               decodeY(0.42857143f), //y
                               decodeX(2.7142859f) - decodeX(0.2857143f), //width
                               decodeY(2.857143f) - decodeY(0.42857143f), //height
                               12.0f, 12.0f); //rounding
        return roundRect;
!!!11392130.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2857143f), //x
                               decodeY(0.2857143f), //y
                               decodeX(2.7142859f) - decodeX(0.2857143f), //width
                               decodeY(2.7142859f) - decodeY(0.2857143f), //height
                               9.0f, 9.0f); //rounding
        return roundRect;
!!!11392258.java!!!	decodeRoundRect3() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.42857143f), //x
                               decodeY(0.42857143f), //y
                               decodeX(2.5714285f) - decodeX(0.42857143f), //width
                               decodeY(2.5714285f) - decodeY(0.42857143f), //height
                               7.0f, 7.0f); //rounding
        return roundRect;
!!!11392386.java!!!	decodeRoundRect4() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.08571429f), //x
                               decodeY(0.08571429f), //y
                               decodeX(2.914286f) - decodeX(0.08571429f), //width
                               decodeY(2.914286f) - decodeY(0.08571429f), //height
                               11.0f, 11.0f); //rounding
        return roundRect;
!!!11392514.java!!!	decodeRoundRect5() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2857143f), //x
                               decodeY(0.42857143f), //y
                               decodeX(2.7142859f) - decodeX(0.2857143f), //width
                               decodeY(2.857143f) - decodeY(0.42857143f), //height
                               9.0f, 9.0f); //rounding
        return roundRect;
!!!11392642.java!!!	decodeRoundRect6() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.08571429f), //x
                               decodeY(0.08571429f), //y
                               decodeX(2.914286f) - decodeX(0.08571429f), //width
                               decodeY(2.9142857f) - decodeY(0.08571429f), //height
                               11.0f, 11.0f); //rounding
        return roundRect;
!!!11392770.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color2,
                            decodeColor(color2,color3,0.5f),
                            color3});
!!!11392898.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.03f,0.06f,0.33f,0.6f,0.65f,0.7f,0.825f,0.95f,0.975f,1.0f },
                new Color[] { color4,
                            decodeColor(color4,color5,0.5f),
                            color5,
                            decodeColor(color5,color6,0.5f),
                            color6,
                            decodeColor(color6,color6,0.5f),
                            color6,
                            decodeColor(color6,color7,0.5f),
                            color7,
                            decodeColor(color7,color8,0.5f),
                            color8});
!!!11393026.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color10,
                            decodeColor(color10,color11,0.5f),
                            color11});
!!!11393154.java!!!	decodeGradient4(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.024f,0.06f,0.276f,0.6f,0.65f,0.7f,0.856f,0.96f,0.98399997f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3],
                            decodeColor((Color)componentColors[3],(Color)componentColors[4],0.5f),
                            (Color)componentColors[4]});
!!!11393282.java!!!	decodeGradient5(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.03f,0.06f,0.33f,0.6f,0.65f,0.7f,0.825f,0.95f,0.975f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3],
                            decodeColor((Color)componentColors[3],(Color)componentColors[4],0.5f),
                            (Color)componentColors[4]});
!!!11393410.java!!!	decodeGradient6(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color17,
                            decodeColor(color17,color18,0.5f),
                            color18});
!!!11393538.java!!!	decodeGradient7(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.024f,0.06f,0.276f,0.6f,0.65f,0.7f,0.856f,0.96f,0.98f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3],
                            decodeColor((Color)componentColors[3],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3]});
!!!11393666.java!!!	decodeGradient8(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.05f,0.5f,0.95f },
                new Color[] { color23,
                            decodeColor(color23,color24,0.5f),
                            color24});
!!!11393794.java!!!	decodeGradient9(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color31,
                            decodeColor(color31,color32,0.5f),
                            color32});
!!!11393922.java!!!	decodeGradient10(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.06684492f,0.13368984f,0.56684494f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2]});
!!!11394050.java!!!	decodeGradient11(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color36,
                            decodeColor(color36,color37,0.5f),
                            color37});
!!!11394178.java!!!	decodeGradient12(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color41,
                            decodeColor(color41,color42,0.5f),
                            color42});
!!!11394306.java!!!	decodeGradient13(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color47,
                            decodeColor(color47,color48,0.5f),
                            color48});
!!!11394434.java!!!	decodeGradient14(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.06684492f,0.13368984f,0.56684494f,1.0f },
                new Color[] { color48,
                            decodeColor(color48,color49,0.5f),
                            color49,
                            decodeColor(color49,color49,0.5f),
                            color49});
