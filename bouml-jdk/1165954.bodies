class StreamOpFlag
!!!9585794.java!!!	set(inout t : StreamOpFlag::Type) : StreamOpFlag::MaskBuilder
        return new MaskBuilder(new EnumMap<>(Type.class)).set(t);
!!!9585922.java!!!	StreamOpFlag(in position : int, inout maskBuilder : StreamOpFlag::MaskBuilder)
        this.maskTable = maskBuilder.build();
        // Two bits per flag
        position *= 2;
        this.bitPosition = position;
        this.set = SET_BITS << position;
        this.clear = CLEAR_BITS << position;
        this.preserve = PRESERVE_BITS << position;
!!!9586050.java!!!	set() : int
        return set;
!!!9586178.java!!!	clear() : int
        return clear;
!!!9586306.java!!!	isStreamFlag() : boolean
        return maskTable.get(Type.STREAM) > 0;
!!!9586434.java!!!	isKnown(in flags : int) : boolean
        return (flags & preserve) == set;
!!!9586562.java!!!	isCleared(in flags : int) : boolean
        return (flags & preserve) == clear;
!!!9586690.java!!!	isPreserved(in flags : int) : boolean
        return (flags & preserve) == preserve;
!!!9586818.java!!!	canSet(inout t : StreamOpFlag::Type) : boolean
        return (maskTable.get(t) & SET_BITS) > 0;
!!!9586946.java!!!	createMask(inout t : StreamOpFlag::Type) : int
        int mask = 0;
        for (StreamOpFlag flag : StreamOpFlag.values()) {
            mask |= flag.maskTable.get(t) << flag.bitPosition;
        }
        return mask;
!!!9587074.java!!!	createFlagMask() : int
        int mask = 0;
        for (StreamOpFlag flag : StreamOpFlag.values()) {
            mask |= flag.preserve;
        }
        return mask;
!!!9587202.java!!!	getMask(in flags : int) : int
        return (flags == 0)
               ? FLAG_MASK
               : ~(flags | ((FLAG_MASK_IS & flags) << 1) | ((FLAG_MASK_NOT & flags) >> 1));
!!!9587330.java!!!	combineOpFlags(in newStreamOrOpFlags : int, in prevCombOpFlags : int) : int
        // 0x01 or 0x10 nibbles are transformed to 0x11
        // 0x00 nibbles remain unchanged
        // Then all the bits are flipped
        // Then the result is logically or'ed with the operation flags.
        return (prevCombOpFlags & StreamOpFlag.getMask(newStreamOrOpFlags)) | newStreamOrOpFlags;
!!!9587458.java!!!	toStreamFlags(in combOpFlags : int) : int
        // By flipping the nibbles 0x11 become 0x00 and 0x01 become 0x10
        // Shift left 1 to restore set flags and mask off anything other than the set flags
        return ((~combOpFlags) >> 1) & FLAG_MASK_IS & combOpFlags;
!!!9587586.java!!!	toCharacteristics(in streamFlags : int) : int
        return streamFlags & SPLITERATOR_CHARACTERISTICS_MASK;
!!!9587714.java!!!	fromCharacteristics(inout spliterator : Spliterator) : int
        int characteristics = spliterator.characteristics();
        if ((characteristics & Spliterator.SORTED) != 0 && spliterator.getComparator() != null) {
            // Do not propagate the SORTED characteristic if it does not correspond
            // to a natural sort order
            return characteristics & SPLITERATOR_CHARACTERISTICS_MASK & ~Spliterator.SORTED;
        }
        else {
            return characteristics & SPLITERATOR_CHARACTERISTICS_MASK;
        }
!!!9587842.java!!!	fromCharacteristics(in characteristics : int) : int
        return characteristics & SPLITERATOR_CHARACTERISTICS_MASK;
