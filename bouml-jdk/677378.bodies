class ValidationState
!!!4565378.java!!!	setExtraChecking(inout newValue : boolean) : void
        fExtraChecking = newValue;
!!!4565506.java!!!	setFacetChecking(inout newValue : boolean) : void
        fFacetChecking = newValue;
!!!4565634.java!!!	setNormalizationRequired(inout newValue : boolean) : void
          fNormalize = newValue;
!!!4565762.java!!!	setUsingNamespaces(inout newValue : boolean) : void
          fNamespaces = newValue;
!!!4565890.java!!!	setEntityState(inout state : EntityState) : void
        fEntityState = state;
!!!4566018.java!!!	setNamespaceSupport(inout namespace : NamespaceContext) : void
        fNamespaceContext = namespace;
!!!4566146.java!!!	setSymbolTable(inout sTable : SymbolTable) : void
        fSymbolTable = sTable;
!!!4566274.java!!!	checkIDRefID() : String
        if (fIdList == null) {
            if (fIdRefList != null) {
                return fIdRefList.get(0);
            }
        }

        if (fIdRefList != null) {
            String key;
            for (int i = 0; i < fIdRefList.size(); i++) {
                key = fIdRefList.get(i);
                if (!fIdList.contains(key)) {
                      return key;
                }
            }
        }
        return null;
!!!4566402.java!!!	reset() : void
        fExtraChecking = true;
        fFacetChecking = true;
        fNamespaces = true;
        fIdList = null;
        fIdRefList = null;
        fEntityState = null;
        fNamespaceContext = null;
        fSymbolTable = null;
!!!4566530.java!!!	resetIDTables() : void
        fIdList = null;
        fIdRefList = null;
!!!4566658.java!!!	needExtraChecking() : boolean
        return fExtraChecking;
!!!4566786.java!!!	needFacetChecking() : boolean
        return fFacetChecking;
!!!4566914.java!!!	needToNormalize() : boolean
        return fNormalize;
!!!4567042.java!!!	useNamespaces() : boolean
        return fNamespaces;
!!!4567170.java!!!	isEntityDeclared(inout name : String) : boolean
        if (fEntityState !=null) {
            return fEntityState.isEntityDeclared(getSymbol(name));
        }
        return false;
!!!4567298.java!!!	isEntityUnparsed(inout name : String) : boolean
        if (fEntityState !=null) {
            return fEntityState.isEntityUnparsed(getSymbol(name));
        }
        return false;
!!!4567426.java!!!	isIdDeclared(inout name : String) : boolean
        if (fIdList == null) return false;
        return fIdList.contains(name);
!!!4567554.java!!!	addId(inout name : String) : void
        if (fIdList == null) fIdList = new ArrayList();
        fIdList.add(name);
!!!4567682.java!!!	addIdRef(inout name : String) : void
        if (fIdRefList == null) fIdRefList = new ArrayList();
        fIdRefList.add(name);
!!!4567810.java!!!	getSymbol(inout symbol : String) : String
        if (fSymbolTable != null)
            return fSymbolTable.addSymbol(symbol);
        // if there is no symbol table, we return java-internalized string,
        // because symbol table strings are also java-internalzied.
        // this guarantees that the returned string from this method can be
        // compared by reference with other symbol table string. -SG
        return symbol.intern();
!!!4567938.java!!!	getURI(inout prefix : String) : String
        if (fNamespaceContext !=null) {
            return fNamespaceContext.getURI(prefix);
        }
        return null;
!!!4568066.java!!!	setLocale(inout locale : Locale) : void
        fLocale = locale;
!!!4568194.java!!!	getLocale() : Locale
        return fLocale;
