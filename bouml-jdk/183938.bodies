class AbstractList
!!!521858.java!!!	add(inout e : E) : boolean
        add(size(), e);
        return true;
!!!522114.java!!!	set(in index : int, inout element : E) : E
        throw new UnsupportedOperationException();
!!!522242.java!!!	add(in index : int, inout element : E) : void
        throw new UnsupportedOperationException();
!!!522370.java!!!	remove(in index : int) : E
        throw new UnsupportedOperationException();
!!!522498.java!!!	indexOf(inout o : Object) : int
        ListIterator<E> it = listIterator();
        if (o==null) {
            while (it.hasNext())
                if (it.next()==null)
                    return it.previousIndex();
        } else {
            while (it.hasNext())
                if (o.equals(it.next()))
                    return it.previousIndex();
        }
        return -1;
!!!522626.java!!!	lastIndexOf(inout o : Object) : int
        ListIterator<E> it = listIterator(size());
        if (o==null) {
            while (it.hasPrevious())
                if (it.previous()==null)
                    return it.nextIndex();
        } else {
            while (it.hasPrevious())
                if (o.equals(it.previous()))
                    return it.nextIndex();
        }
        return -1;
!!!522754.java!!!	clear() : void
        removeRange(0, size());
!!!522882.java!!!	addAll(in index : int, inout c : Collection) : boolean
        rangeCheckForAdd(index);
        boolean modified = false;
        for (E e : c) {
            add(index++, e);
            modified = true;
        }
        return modified;
!!!523010.java!!!	iterator() : Iterator
        return new Itr();
!!!523138.java!!!	listIterator() : ListIterator
        return listIterator(0);
!!!523266.java!!!	listIterator(in index : int) : ListIterator
        rangeCheckForAdd(index);

        return new ListItr(index);
!!!525954.java!!!	subList(in fromIndex : int, in toIndex : int) : List
        return (this instanceof RandomAccess ?
                new RandomAccessSubList<>(this, fromIndex, toIndex) :
                new SubList<>(this, fromIndex, toIndex));
!!!526082.java!!!	equals(inout o : Object) : boolean
        if (o == this)
            return true;
        if (!(o instanceof List))
            return false;

        ListIterator<E> e1 = listIterator();
        ListIterator<?> e2 = ((List<?>) o).listIterator();
        while (e1.hasNext() && e2.hasNext()) {
            E o1 = e1.next();
            Object o2 = e2.next();
            if (!(o1==null ? o2==null : o1.equals(o2)))
                return false;
        }
        return !(e1.hasNext() || e2.hasNext());
!!!526210.java!!!	hashCode() : int
        int hashCode = 1;
        for (E e : this)
            hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
        return hashCode;
!!!526338.java!!!	removeRange(in fromIndex : int, in toIndex : int) : void
        ListIterator<E> it = listIterator(fromIndex);
        for (int i=0, n=toIndex-fromIndex; i<n; i++) {
            it.next();
            it.remove();
        }
!!!526466.java!!!	rangeCheckForAdd(in index : int) : void
        if (index < 0 || index > size())
            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
!!!526594.java!!!	outOfBoundsMsg(in index : int) : String
        return "Index: "+index+", Size: "+size();
