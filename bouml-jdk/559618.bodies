class Select
!!!3569410.java!!!	Select(in opcode : short, inout match : int [[]], inout targets : InstructionHandle [[]], inout target : InstructionHandle)
    super(opcode, target);

    this.targets = targets;
    for(int i=0; i < targets.length; i++) {
      BranchInstruction.notifyTargetChanged(targets[i], this);
    }

    this.match = match;

    if((match_length = match.length) != targets.length)
      throw new ClassGenException("Match and target array have not the same length");

    indices = new int[match_length];
!!!3569538.java!!!	updatePosition(in offset : int, in max_offset : int) : int
    position += offset; // Additional offset caused by preceding SWITCHs, GOTOs, etc.

    short old_length = length;

    /* Alignment on 4-byte-boundary, + 1, because of tag byte.
     */
    padding = (4 - ((position + 1) % 4)) % 4;
    length  = (short)(fixed_length + padding); // Update length

    return length - old_length;
!!!3569666.java!!!	dump(inout out : DataOutputStream) : void
    out.writeByte(opcode);

    for(int i=0; i < padding; i++) // Padding bytes
      out.writeByte(0);

    index = getTargetOffset();     // Write default target offset
    out.writeInt(index);
!!!3569794.java!!!	initFromFile(inout bytes : ByteSequence, inout wide : boolean) : void
    padding = (4 - (bytes.getIndex() % 4)) % 4; // Compute number of pad bytes

    for(int i=0; i < padding; i++) {
      bytes.readByte();
    }

    // Default branch target common for both cases (TABLESWITCH, LOOKUPSWITCH)
    index = bytes.readInt();
!!!3569922.java!!!	toString(inout verbose : boolean) : String
    final StringBuilder buf = new StringBuilder(super.toString(verbose));

    if(verbose) {
      for(int i=0; i < match_length; i++) {
        String s = "null";

        if(targets[i] != null)
          s = targets[i].getInstruction().toString();

          buf.append("(").append(match[i]).append(", ")
             .append(s).append(" = {").append(indices[i]).append("})");
      }
    }
    else
      buf.append(" ...");

    return buf.toString();
!!!3570050.java!!!	setTarget(in i : int, inout target : InstructionHandle) : void
    notifyTargetChanging(targets[i], this);
    targets[i] = target;
    notifyTargetChanged(targets[i], this);
!!!3570178.java!!!	updateTarget(inout old_ih : InstructionHandle, inout new_ih : InstructionHandle) : void
    boolean targeted = false;

    if(target == old_ih) {
      targeted = true;
      setTarget(new_ih);
    }

    for(int i=0; i < targets.length; i++) {
      if(targets[i] == old_ih) {
        targeted = true;
        setTarget(i, new_ih);
      }
    }

    if(!targeted)
      throw new ClassGenException("Not targeting " + old_ih);
!!!3570306.java!!!	containsTarget(inout ih : InstructionHandle) : boolean
    if(target == ih)
      return true;

    for(int i=0; i < targets.length; i++)
      if(targets[i] == ih)
        return true;

    return false;
!!!3570434.java!!!	dispose() : void
    super.dispose();

    for(int i=0; i < targets.length; i++)
      targets[i].removeTargeter(this);
!!!3570562.java!!!	getMatchs() : int
 return match;
!!!3570690.java!!!	getIndices() : int
 return indices;
!!!3570818.java!!!	getTargets() : InstructionHandle
 return targets;
