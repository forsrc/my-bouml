format 222
"utils" // jdk1.8::com::sun::org::apache::xml::internal::utils
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/utils/"
  java_package "com.sun.org.apache.xml.internal.utils"
  classview 156546 "utils"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 583426 "QName"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to represent a qualified name: \"The name of an internal XSLT object,
specifically a named template (see [7 Named Templates]), a mode (see [6.7 Modes]),
an attribute set (see [8.1.4 Named Attribute Sets]), a key (see [14.2 Keys]),
a locale (see [14.3 Number Formatting]), a variable or a parameter (see
[12 Variables and Parameters]) is specified as a QName. If it has a prefix,
then the prefix is expanded into a URI reference using the namespace declarations
in effect on the attribute in which the name occurs. The expanded name
consisting of the local part of the name and the possibly null URI reference
is used as the name of the object. The default namespace is not used for
unprefixed names.\"
@xsl.usage general
"
      classrelation 2554754 // <realization>
	relation 2554754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2554754 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1234690 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 467434581652829920L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2554882 // _localName (<unidirectional association>)
	relation 2554882 --->
	  a role_name "_localName" protected
	    comment "
The local name.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2554882 // _localName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2555010 // _namespaceURI (<unidirectional association>)
	relation 2555010 --->
	  a role_name "_namespaceURI" protected
	    comment "
The namespace URI.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2555010 // _namespaceURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2555138 // _prefix (<unidirectional association>)
	relation 2555138 --->
	  a role_name "_prefix" protected
	    comment "
The namespace prefix.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2555138 // _prefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2555266 // S_XMLNAMESPACEURI (<unidirectional association>)
	relation 2555266 --->
	  a role_name "S_XMLNAMESPACEURI" init_value "
    \"http://www.w3.org/XML/1998/namespace\"" class_relation const_relation public
	    comment "
The XML namespace.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2555266 // S_XMLNAMESPACEURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1234818 "m_hashCode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The cached hashcode, which is calculated at construction time.
@serial

"
      end

      operation 5691138 "QName"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty QName.
20001019: Try making this public, to support Serializable? -- JKESS
"
      end

      operation 5691266 "QName"
	public explicit_return_type ""
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new QName with the specified namespace URI and
local name.

@param namespaceURI The namespace URI if known, or null
@param localName The local name
"
      end

      operation 5691394 "QName"
	public explicit_return_type ""
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new QName with the specified namespace URI and
local name.

@param namespaceURI The namespace URI if known, or null
@param localName The local name
@param validate If true the new QName will be validated and an IllegalArgumentException will
                be thrown if it is invalid.
"
      end

      operation 5691522 "QName"
	public explicit_return_type ""
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new QName with the specified namespace URI, prefix
and local name.

@param namespaceURI The namespace URI if known, or null
@param prefix The namespace prefix is known, or null
@param localName The local name

"
      end

      operation 5691650 "QName"
	public explicit_return_type ""
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new QName with the specified namespace URI, prefix
and local name.

@param namespaceURI The namespace URI if known, or null
@param prefix The namespace prefix is known, or null
@param localName The local name
@param validate If true the new QName will be validated and an IllegalArgumentException will
                be thrown if it is invalid.
"
      end

      operation 5691778 "QName"
	public explicit_return_type ""
	nparams 1
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, without namespace resolution.  Good
for a few odd cases.

@param localName Local part of qualified name

"
      end

      operation 5691906 "QName"
	public explicit_return_type ""
	nparams 2
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, without namespace resolution.  Good
for a few odd cases.

@param localName Local part of qualified name
@param validate If true the new QName will be validated and an IllegalArgumentException will
                be thrown if it is invalid.
"
      end

      operation 5692034 "QName"
	public explicit_return_type ""
	nparams 2
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "namespaces" type class_ref 183810 // Stack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, resolving the prefix
using the given namespace stack. The default namespace is
not resolved.

@param qname Qualified name to resolve
@param namespaces Namespace stack to use to resolve namespace
"
      end

      operation 5692162 "QName"
	public explicit_return_type ""
	nparams 3
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "namespaces" type class_ref 183810 // Stack
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, resolving the prefix
using the given namespace stack. The default namespace is
not resolved.

@param qname Qualified name to resolve
@param namespaces Namespace stack to use to resolve namespace
@param validate If true the new QName will be validated and an IllegalArgumentException will
                be thrown if it is invalid.
"
      end

      operation 5692290 "QName"
	public explicit_return_type ""
	nparams 3
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 648194 // Element
	  param inout name "resolver" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, resolving the prefix
using the given namespace context and prefix resolver.
The default namespace is not resolved.

@param qname Qualified name to resolve
@param namespaceContext Namespace Context to use
@param resolver Prefix resolver for this context
"
      end

      operation 5692418 "QName"
	public explicit_return_type ""
	nparams 4
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 648194 // Element
	  param inout name "resolver" type class_ref 635650 // PrefixResolver
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, resolving the prefix
using the given namespace context and prefix resolver.
The default namespace is not resolved.

@param qname Qualified name to resolve
@param namespaceContext Namespace Context to use
@param resolver Prefix resolver for this context
@param validate If true the new QName will be validated and an IllegalArgumentException will
                be thrown if it is invalid.
"
      end

      operation 5692546 "QName"
	public explicit_return_type ""
	nparams 2
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "resolver" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, resolving the prefix
using the given namespace stack. The default namespace is
not resolved.

@param qname Qualified name to resolve
@param resolver Prefix resolver for this context
"
      end

      operation 5692674 "QName"
	public explicit_return_type ""
	nparams 3
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "resolver" type class_ref 635650 // PrefixResolver
	  param inout name "validate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a QName from a string, resolving the prefix
using the given namespace stack. The default namespace is
not resolved.

@param qname Qualified name to resolve
@param resolver Prefix resolver for this context
@param validate If true the new QName will be validated and an IllegalArgumentException will
                be thrown if it is invalid.
"
      end

      operation 5692802 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the namespace URI. Returns null if the namespace URI
is not known.

@return The namespace URI, or null
"
      end

      operation 5692930 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the namespace prefix. Returns null if the namespace
prefix is not known.

@return The namespace prefix, or null
"
      end

      operation 5693058 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local part of the qualified name.

@return The local part of the qualified name
"
      end

      operation 5693186 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the string representation of the qualified name, using the
prefix if available, or the '{ns}foo' notation if not. Performs
string concatenation, so beware of performance issues.

@return the string representation of the namespace
"
      end

      operation 5693314 "toNamespacedString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the string representation of the qualified name using the
the '{ns}foo' notation. Performs
string concatenation, so beware of performance issues.

@return the string representation of the namespace
"
      end

      operation 5693442 "getNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the namespace of the qualified name.

@return the namespace URI of the qualified name
"
      end

      operation 5693570 "getLocalPart"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the local part of the qualified name.

@return the local part of the qualified name
"
      end

      operation 5693698 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the cached hashcode of the qualified name.

@return the cached hashcode of the qualified name
"
      end

      operation 5693826 "equals"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override equals and agree that we're equal if
the passed object is a string and it matches
the name of the arg.

@param ns Namespace URI to compare to
@param localPart Local part of qualified name to compare to

@return True if the local name and uri match
"
      end

      operation 5693954 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override equals and agree that we're equal if
the passed object is a QName and it matches
the name of the arg.

@return True if the qualified names are equal
"
      end

      operation 5694082 "getQNameFromString"
	class_operation public return_type class_ref 583426 // QName
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a string, create and return a QName object


@param name String to use to create QName

@return a QName object
"
      end

      operation 5694210 "isXMLNSDecl"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "attRawName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function tells if a raw attribute name is a
xmlns attribute.

@param attRawName Raw name of attribute

@return True if the attribute starts with or is equal to xmlns
"
      end

      operation 5694338 "getPrefixFromXMLNSDecl"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "attRawName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function tells if a raw attribute name is a
xmlns attribute.

@param attRawName Raw name of attribute

@return Prefix of attribute
"
      end

      operation 5694466 "getLocalPart"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of the given node.

@param qname Input name

@return Local part of the name if prefixed, or the given name if not
"
      end

      operation 5694594 "getPrefixPart"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of the given node.

@param qname Input name

@return Prefix of name or empty string if none there
"
      end
    end

    class 587266 "Constants"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Primary constants used by the XSLT Processor
@xsl.usage advanced
"
      classrelation 1547010 // S_XMLNAMESPACEURI (<unidirectional association>)
	relation 1547010 --->
	  a role_name "S_XMLNAMESPACEURI" init_value " \"http://www.w3.org/XML/1998/namespace\"" class_relation const_relation public
	    comment "
Mnemonics for standard XML Namespace URIs, as Java Strings:
<ul>
<li>S_XMLNAMESPACEURI (http://www.w3.org/XML/1998/namespace) is the
URI permanantly assigned to the \"xml:\" prefix. This is used for some
features built into the XML specification itself, such as xml:space
and xml:lang. It was defined by the W3C's XML Namespaces spec.</li>
<li>S_XSLNAMESPACEURL (http://www.w3.org/1999/XSL/Transform) is the
URI which indicates that a name may be an XSLT directive. In most
XSLT stylesheets, this is bound to the \"xsl:\" prefix. It's defined
by the W3C's XSLT Recommendation.</li>
<li>S_OLDXSLNAMESPACEURL (http://www.w3.org/XSL/Transform/1.0) was
used in early prototypes of XSLT processors for much the same purpose
as S_XSLNAMESPACEURL. It is now considered obsolete, and the version
of XSLT which it signified is not fully compatable with the final
XSLT Recommendation, so what it really signifies is a badly obsolete
stylesheet.</li>
</ul> 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547010 // S_XMLNAMESPACEURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547138 // S_XSLNAMESPACEURL (<unidirectional association>)
	relation 1547138 --->
	  a role_name "S_XSLNAMESPACEURL" init_value " \"http://www.w3.org/1999/XSL/Transform\"" class_relation const_relation public
	    comment "
Mnemonics for standard XML Namespace URIs, as Java Strings:
<ul>
<li>S_XMLNAMESPACEURI (http://www.w3.org/XML/1998/namespace) is the
URI permanantly assigned to the \"xml:\" prefix. This is used for some
features built into the XML specification itself, such as xml:space
and xml:lang. It was defined by the W3C's XML Namespaces spec.</li>
<li>S_XSLNAMESPACEURL (http://www.w3.org/1999/XSL/Transform) is the
URI which indicates that a name may be an XSLT directive. In most
XSLT stylesheets, this is bound to the \"xsl:\" prefix. It's defined
by the W3C's XSLT Recommendation.</li>
<li>S_OLDXSLNAMESPACEURL (http://www.w3.org/XSL/Transform/1.0) was
used in early prototypes of XSLT processors for much the same purpose
as S_XSLNAMESPACEURL. It is now considered obsolete, and the version
of XSLT which it signified is not fully compatable with the final
XSLT Recommendation, so what it really signifies is a badly obsolete
stylesheet.</li>
</ul> 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547138 // S_XSLNAMESPACEURL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547266 // S_OLDXSLNAMESPACEURL (<unidirectional association>)
	relation 1547266 --->
	  a role_name "S_OLDXSLNAMESPACEURL" init_value " \"http://www.w3.org/XSL/Transform/1.0\"" class_relation const_relation public
	    comment "
Mnemonics for standard XML Namespace URIs, as Java Strings:
<ul>
<li>S_XMLNAMESPACEURI (http://www.w3.org/XML/1998/namespace) is the
URI permanantly assigned to the \"xml:\" prefix. This is used for some
features built into the XML specification itself, such as xml:space
and xml:lang. It was defined by the W3C's XML Namespaces spec.</li>
<li>S_XSLNAMESPACEURL (http://www.w3.org/1999/XSL/Transform) is the
URI which indicates that a name may be an XSLT directive. In most
XSLT stylesheets, this is bound to the \"xsl:\" prefix. It's defined
by the W3C's XSLT Recommendation.</li>
<li>S_OLDXSLNAMESPACEURL (http://www.w3.org/XSL/Transform/1.0) was
used in early prototypes of XSLT processors for much the same purpose
as S_XSLNAMESPACEURL. It is now considered obsolete, and the version
of XSLT which it signified is not fully compatable with the final
XSLT Recommendation, so what it really signifies is a badly obsolete
stylesheet.</li>
</ul> 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547266 // S_OLDXSLNAMESPACEURL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547394 // S_VENDOR (<unidirectional association>)
	relation 1547394 --->
	  a role_name "S_VENDOR" init_value " \"Apache Software Foundation\"" class_relation const_relation public
	    comment " Authorship mnemonics, as Java Strings. Not standardized,
as far as I know.
<ul>
<li>S_VENDOR -- the name of the organization/individual who published
this XSLT processor. </li>
<li>S_VENDORURL -- URL where one can attempt to retrieve more
information about this publisher and product.</li>
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547394 // S_VENDOR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547522 // S_VENDORURL (<unidirectional association>)
	relation 1547522 --->
	  a role_name "S_VENDORURL" init_value " \"http://xml.apache.org\"" class_relation const_relation public
	    comment " Authorship mnemonics, as Java Strings. Not standardized,
as far as I know.
<ul>
<li>S_VENDOR -- the name of the organization/individual who published
this XSLT processor. </li>
<li>S_VENDORURL -- URL where one can attempt to retrieve more
information about this publisher and product.</li>
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547522 // S_VENDORURL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547650 // S_BUILTIN_EXTENSIONS_URL (<unidirectional association>)
	relation 1547650 --->
	  a role_name "S_BUILTIN_EXTENSIONS_URL" init_value " \"http://xml.apache.org/xalan\"" class_relation const_relation public
	    comment " S_BUILTIN_EXTENSIONS_URL is a mnemonic for the XML Namespace
(http://xml.apache.org/xalan) predefined to signify Xalan's
built-in XSLT Extensions. When used in stylesheets, this is often
bound to the \"xalan:\" prefix.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547650 // S_BUILTIN_EXTENSIONS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547778 // S_BUILTIN_OLD_EXTENSIONS_URL (<unidirectional association>)
	relation 1547778 --->
	  a role_name "S_BUILTIN_OLD_EXTENSIONS_URL" init_value " \"http://xml.apache.org/xslt\"" class_relation const_relation public
	    comment "
The old built-in extension url. It is still supported for
backward compatibility.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547778 // S_BUILTIN_OLD_EXTENSIONS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1547906 // S_EXTENSIONS_OLD_JAVA_URL (<unidirectional association>)
	relation 1547906 --->
	  a role_name "S_EXTENSIONS_OLD_JAVA_URL" init_value " \"http://xml.apache.org/xslt/java\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1547906 // S_EXTENSIONS_OLD_JAVA_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548034 // S_EXTENSIONS_JAVA_URL (<unidirectional association>)
	relation 1548034 --->
	  a role_name "S_EXTENSIONS_JAVA_URL" init_value " \"http://xml.apache.org/xalan/java\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548034 // S_EXTENSIONS_JAVA_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548162 // S_EXTENSIONS_LOTUSXSL_JAVA_URL (<unidirectional association>)
	relation 1548162 --->
	  a role_name "S_EXTENSIONS_LOTUSXSL_JAVA_URL" init_value " \"http://xsl.lotus.com/java\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548162 // S_EXTENSIONS_LOTUSXSL_JAVA_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548290 // S_EXTENSIONS_XALANLIB_URL (<unidirectional association>)
	relation 1548290 --->
	  a role_name "S_EXTENSIONS_XALANLIB_URL" init_value " \"http://xml.apache.org/xalan\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548290 // S_EXTENSIONS_XALANLIB_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548418 // S_EXTENSIONS_REDIRECT_URL (<unidirectional association>)
	relation 1548418 --->
	  a role_name "S_EXTENSIONS_REDIRECT_URL" init_value " \"http://xml.apache.org/xalan/redirect\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548418 // S_EXTENSIONS_REDIRECT_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548546 // S_EXTENSIONS_PIPE_URL (<unidirectional association>)
	relation 1548546 --->
	  a role_name "S_EXTENSIONS_PIPE_URL" init_value " \"http://xml.apache.org/xalan/PipeDocument\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548546 // S_EXTENSIONS_PIPE_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548674 // S_EXTENSIONS_SQL_URL (<unidirectional association>)
	relation 1548674 --->
	  a role_name "S_EXTENSIONS_SQL_URL" init_value " \"http://xml.apache.org/xalan/sql\"" class_relation const_relation public
	    comment "
Xalan extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548674 // S_EXTENSIONS_SQL_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548802 // S_EXSLT_COMMON_URL (<unidirectional association>)
	relation 1548802 --->
	  a role_name "S_EXSLT_COMMON_URL" init_value " \"http://exslt.org/common\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548802 // S_EXSLT_COMMON_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1548930 // S_EXSLT_MATH_URL (<unidirectional association>)
	relation 1548930 --->
	  a role_name "S_EXSLT_MATH_URL" init_value " \"http://exslt.org/math\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1548930 // S_EXSLT_MATH_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1549058 // S_EXSLT_SETS_URL (<unidirectional association>)
	relation 1549058 --->
	  a role_name "S_EXSLT_SETS_URL" init_value " \"http://exslt.org/sets\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1549058 // S_EXSLT_SETS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1549186 // S_EXSLT_DATETIME_URL (<unidirectional association>)
	relation 1549186 --->
	  a role_name "S_EXSLT_DATETIME_URL" init_value " \"http://exslt.org/dates-and-times\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1549186 // S_EXSLT_DATETIME_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1549314 // S_EXSLT_FUNCTIONS_URL (<unidirectional association>)
	relation 1549314 --->
	  a role_name "S_EXSLT_FUNCTIONS_URL" init_value " \"http://exslt.org/functions\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1549314 // S_EXSLT_FUNCTIONS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1549442 // S_EXSLT_DYNAMIC_URL (<unidirectional association>)
	relation 1549442 --->
	  a role_name "S_EXSLT_DYNAMIC_URL" init_value " \"http://exslt.org/dynamic\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1549442 // S_EXSLT_DYNAMIC_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1549570 // S_EXSLT_STRINGS_URL (<unidirectional association>)
	relation 1549570 --->
	  a role_name "S_EXSLT_STRINGS_URL" init_value " \"http://exslt.org/strings\"" class_relation const_relation public
	    comment "
EXSLT extension namespaces.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1549570 // S_EXSLT_STRINGS_URL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 777346 "XSLTVERSUPPORTED"
	class_attribute const_attribute public explicit_type "double"
	init_value " 1.0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum version of XSLT supported by this processor.

"
      end
    end

    class 619010 "XMLString"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is meant to be an interface to character strings, whether they
be java Strings or <code>com.sun.org.apache.xml.internal.utils.FastStringBuffer</code>s, or
other character data.  By using XMLString, character copies can be reduced
in the XML pipeline.
"
      operation 5741698 "dispatchCharactersEvents"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5741826 "dispatchAsComment"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "lh" type class_ref 617602 // LexicalHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
comment method on the passed LexicalHandler for the
string-value.

@param lh A non-null reference to a LexicalHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5741954 "fixWhiteSpace"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "trimHead" explicit_type "boolean"
	  param inout name "trimTail" explicit_type "boolean"
	  param inout name "doublePunctuationSpaces" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Conditionally trim all leading and trailing whitespace in the specified String.
All strings of white space are
replaced by a single space character (#x20), except spaces after punctuation which
receive double spaces if doublePunctuationSpaces is true.
This function may be useful to a formatter, but to get first class
results, the formatter should probably do it's own white space handling
based on the semantics of the formatting object.

@param   trimHead    Trim leading whitespace?
@param   trimTail    Trim trailing whitespace?
@param   doublePunctuationSpaces    Use double spaces for punctuation?
@return              The trimmed string.
"
      end

      operation 5742082 "length"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this string.

@return  the length of the sequence of characters represented by this
         object.
"
      end

      operation 5742210 "charAt"
	abstract public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character at the specified index. An index ranges
from <code>0</code> to <code>length() - 1</code>. The first character
of the sequence is at index <code>0</code>, the next at index
<code>1</code>, and so on, as for array indexing.

@param      index   the index of the character.
@return     the character at the specified index of this string.
            The first character is at index <code>0</code>.
@exception  IndexOutOfBoundsException  if the <code>index</code>
            argument is negative or not less than the length of this
            string.
"
      end

      operation 5742338 "getChars"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li><code>srcBegin</code> is negative.
           <li><code>srcBegin</code> is greater than <code>srcEnd</code>
           <li><code>srcEnd</code> is greater than the length of this
               string
           <li><code>dstBegin</code> is negative
           <li><code>dstBegin+(srcEnd-srcBegin)</code> is larger than
               <code>dst.length</code></ul>
@exception NullPointerException if <code>dst</code> is <code>null</code>
"
      end

      operation 5742466 "equals"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "anObject" type class_ref 619010 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is an <code>XMLString</code> object that represents
the same sequence of characters as this object.

@param   anObject   the object to compare this <code>String</code>
                    against.
@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5742594 "equals"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified <code>String</code>.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   anotherString   the object to compare this <code>String</code>
                         against.
@return  <code>true</code> if the <code>String</code>s are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5742722 "equals"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   anObject   the object to compare this <code>String</code>
                    against.
@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5742850 "equalsIgnoreCase"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>String</code> to another <code>String</code>,
ignoring case considerations.  Two strings are considered equal
ignoring case if they are of the same length, and corresponding
characters in the two strings are equal ignoring case.

@param   anotherString   the <code>String</code> to compare this
                         <code>String</code> against.
@return  <code>true</code> if the argument is not <code>null</code>
         and the <code>String</code>s are equal,
         ignoring case; <code>false</code> otherwise.
@see     #equals(Object)
@see     java.lang.Character#toLowerCase(char)
@see java.lang.Character#toUpperCase(char)
"
      end

      operation 5742978 "compareTo"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "anotherString" type class_ref 619010 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically.

@param   anotherString   the <code>String</code> to be compared.
@return  the value <code>0</code> if the argument string is equal to
         this string; a value less than <code>0</code> if this string
         is lexicographically less than the string argument; and a
         value greater than <code>0</code> if this string is
         lexicographically greater than the string argument.
@exception java.lang.NullPointerException if <code>anotherString</code>
         is <code>null</code>.
"
      end

      operation 5743106 "compareToIgnoreCase"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 619010 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically, ignoring case considerations.
This method returns an integer whose sign is that of
<code>this.toUpperCase().toLowerCase().compareTo(
str.toUpperCase().toLowerCase())</code>.
<p>
Note that this method does <em>not</em> take locale into account,
and will result in an unsatisfactory ordering for certain locales.
The java.text package provides <em>collators</em> to allow
locale-sensitive ordering.

@param   str   the <code>String</code> to be compared.
@return  a negative integer, zero, or a positive integer as the
         the specified String is greater than, equal to, or less
         than this String, ignoring case considerations.
@see     java.text.Collator#compare(String, String)
@since   1.2
"
      end

      operation 5743234 "startsWith"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param in name "toffset" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5743362 "startsWith"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 619010 // XMLString
	  param in name "toffset" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5743490 "startsWith"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
@since   JDK1. 0
"
      end

      operation 5743618 "startsWith"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 619010 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
@since   JDK1. 0
"
      end

      operation 5743746 "endsWith"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "suffix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string ends with the specified suffix.

@param   suffix   the suffix.
@return  <code>true</code> if the character sequence represented by the
         argument is a suffix of the character sequence represented by
         this object; <code>false</code> otherwise. Note that the
         result will be <code>true</code> if the argument is the
         empty string or is equal to this <code>String</code> object
         as determined by the {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>suffix</code> is
         <code>null</code>.
"
      end

      operation 5743874 "hashCode"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this string. The hashcode for a
<code>String</code> object is computed as
<blockquote><pre>
s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
</pre></blockquote>
using <code>int</code> arithmetic, where <code>s[i]</code> is the
<i>i</i>th character of the string, <code>n</code> is the length of
the string, and <code>^</code> indicates exponentiation.
(The hash value of the empty string is zero.)

@return  a hash code value for this object.
"
      end

      operation 5744002 "indexOf"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character. If a character with value <code>ch</code> occurs
in the character sequence represented by this <code>String</code>
object, then the index of the first such occurrence is returned --
that is, the smallest value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is <code>true</code>. If no such character occurs in this string,
then <code>-1</code> is returned.

@param   ch   a character.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5744130 "indexOf"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character, starting the search at the specified index.
<p>
If a character with value <code>ch</code> occurs in the character
sequence represented by this <code>String</code> object at an index
no smaller than <code>fromIndex</code>, then the index of the first
such occurrence is returned--that is, the smallest value <i>k</i>
such that:
<blockquote><pre>
(this.charAt(<i>k</i>) == ch) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is true. If no such character occurs in this string at or after
position <code>fromIndex</code>, then <code>-1</code> is returned.
<p>
There is no restriction on the value of <code>fromIndex</code>. If it
is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   ch          a character.
@param   fromIndex   the index to start the search from.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object that is greater
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur.
"
      end

      operation 5744258 "lastIndexOf"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified character. That is, the index returned is the largest
value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is true.
The String is searched backwards starting at the last character.

@param   ch   a character.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5744386 "lastIndexOf"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified character, searching backward starting at the specified
index. That is, the index returned is the largest value <i>k</i>
such that:
<blockquote><pre>
this.charAt(k) == ch) && (k <= fromIndex)
</pre></blockquote>
is true.

@param   ch          a character.
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of <code>fromIndex</code>. If it is
         greater than or equal to the length of this string, it has
         the same effect as if it were equal to one less than the
         length of this string: this entire string may be searched.
         If it is negative, it has the same effect as if it were -1:
         -1 is returned.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object that is less
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur before that point.
"
      end

      operation 5744514 "indexOf"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
is <code>true</code>.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5744642 "indexOf"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 619010 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
is <code>true</code>.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5744770 "indexOf"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring, starting at the specified index. The integer
returned is the smallest value <i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is <code>true</code>.
<p>
There is no restriction on the value of <code>fromIndex</code>. If
it is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from.
@return  If the string argument occurs as a substring within this
         object at a starting index no smaller than
         <code>fromIndex</code>, then the index of the first character
         of the first such substring is returned. If it does not occur
         as a substring starting at <code>fromIndex</code> or beyond,
         <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>
"
      end

      operation 5744898 "lastIndexOf"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the rightmost occurrence
of the specified substring.  The rightmost empty string \"\" is
considered to occur at the index value <code>this.length()</code>.
The returned index is the largest value <i>k</i> such that
<blockquote><pre>
this.startsWith(str, k)
</pre></blockquote>
is true.

@param   str   the substring to search for.
@return  if the string argument occurs one or more times as a substring
         within this object, then the index of the first character of
         the last such substring is returned. If it does not occur as
         a substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException  if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5745026 "lastIndexOf"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of
the specified substring.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of fromIndex. If it is greater than
         the length of this string, it has the same effect as if it
         were equal to the length of this string: this entire string
         may be searched. If it is negative, it has the same effect
         as if it were -1: -1 is returned.
@return  If the string argument occurs one or more times as a substring
         within this object at a starting index no greater than
         <code>fromIndex</code>, then the index of the first character of
         the last such substring is returned. If it does not occur as a
         substring starting at <code>fromIndex</code> or earlier,
         <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5745154 "substring"
	abstract public return_type class_ref 619010 // XMLString
	nparams 1
	  param in name "beginIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins with the character at the specified index and
extends to the end of this string. <p>
Examples:
<blockquote><pre>
\"unhappy\".substring(2) returns \"happy\"
\"Harbison\".substring(3) returns \"bison\"
\"emptiness\".substring(9) returns \"\" (an empty string)
</pre></blockquote>

@param      beginIndex   the beginning index, inclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if
            <code>beginIndex</code> is negative or larger than the
            length of this <code>String</code> object.
"
      end

      operation 5745282 "substring"
	abstract public return_type class_ref 619010 // XMLString
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins at the specified <code>beginIndex</code> and
extends to the character at index <code>endIndex - 1</code>.
Thus the length of the substring is <code>endIndex-beginIndex</code>.

@param      beginIndex   the beginning index, inclusive.
@param      endIndex     the ending index, exclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if the
            <code>beginIndex</code> is negative, or
            <code>endIndex</code> is larger than the length of
            this <code>String</code> object, or
            <code>beginIndex</code> is larger than
            <code>endIndex</code>.
"
      end

      operation 5745410 "concat"
	abstract public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the specified string to the end of this string.

@param   str   the <code>String</code> that is concatenated to the end
               of this <code>String</code>.
@return  a string that represents the concatenation of this object's
         characters followed by the string argument's characters.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5745538 "toLowerCase"
	abstract public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to lower
case using the rules of the given <code>Locale</code>.

@param locale use the case transformation rules for this locale
@return the String, converted to lowercase.
@see     java.lang.Character#toLowerCase(char)
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 5745666 "toLowerCase"
	abstract public return_type class_ref 619010 // XMLString
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to lower
case using the rules of the default locale, which is returned
by <code>Locale.getDefault</code>.
<p>

@return  the string, converted to lowercase.
@see     java.lang.Character#toLowerCase(char)
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 5745794 "toUpperCase"
	abstract public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to upper
case using the rules of the given locale.
@param locale use the case transformation rules for this locale
@return the String, converted to uppercase.
@see     java.lang.Character#toUpperCase(char)
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 5745922 "toUpperCase"
	abstract public return_type class_ref 619010 // XMLString
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to upper
case using the rules of the default locale, which is returned
by <code>Locale.getDefault</code>.

<p>
If no character in this string has a different uppercase version,
based on calling the <code>toUpperCase</code> method defined by
<code>Character</code>, then the original string is returned.
<p>
Otherwise, this method creates a new <code>String</code> object
representing a character sequence identical in length to the
character sequence represented by this <code>String</code> object and
with every character equal to the result of applying the method
<code>Character.toUpperCase</code> to the corresponding character of
this <code>String</code> object. <p>
Examples:
<blockquote><pre>
\"Fahrvergn&uuml;gen\".toUpperCase() returns \"FAHRVERGN&Uuml;GEN\"
\"Visit Ljubinje!\".toUpperCase() returns \"VISIT LJUBINJE!\"
</pre></blockquote>

@return  the string, converted to uppercase.
@see     java.lang.Character#toUpperCase(char)
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 5746050 "trim"
	abstract public return_type class_ref 619010 // XMLString
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes white space from both ends of this string.
<p>
If this <code>String</code> object represents an empty character
sequence, or the first and last characters of character sequence
represented by this <code>String</code> object both have codes
greater than <code>'&#92;u0020'</code> (the space character), then a
reference to this <code>String</code> object is returned.
<p>
Otherwise, if there is no character with a code greater than
<code>'&#92;u0020'</code> in the string, then a new
<code>String</code> object representing an empty string is created
and returned.
<p>
Otherwise, let <i>k</i> be the index of the first character in the
string whose code is greater than <code>'&#92;u0020'</code>, and let
<i>m</i> be the index of the last character in the string whose code
is greater than <code>'&#92;u0020'</code>. A new <code>String</code>
object is created, representing the substring of this string that
begins with the character at index <i>k</i> and ends with the
character at index <i>m</i>-that is, the result of
<code>this.substring(<i>k</i>,&nbsp;<i>m</i>+1)</code>.
<p>
This method may be used to trim
{@link Character#isSpace(char) whitespace} from the beginning and end
of a string; in fact, it trims all ASCII control characters as well.

@return  this string, with white space removed from the front and end.
"
      end

      operation 5746178 "toString"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This object (which is already a string!) is itself returned.

@return  the string itself.
"
      end

      operation 5746306 "hasString"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this object contains a java String object.

@return true if this XMLString can return a string without creating one.
"
      end

      operation 5746434 "toDouble"
	public explicit_return_type "double"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a string to a double -- Allowed input is in fixed
notation ddd.fff.

@return A double value representation of the string, or return Double.NaN
if the string can not be converted.
"
      end
    end

    class 626690 "SuballocatedIntVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of int. Very similar API to our
IntVector class (same API); different internal storage.

This version uses an array-of-arrays solution. Read/write access is thus
a bit slower than the simple IntVector, and basic storage is a trifle
higher due to the top-level array -- but appending is O(1) fast rather
than O(N**2) slow, which will swamp those costs in situations where
long vectors are being built up.

Known issues:

Some methods are private because they haven't yet been tested properly.

Retrieval performance is critical, since this is used at the core
of the DTM model. (Append performance is almost as important.)
That's pushing me toward just letting reads from unset indices
throw exceptions or return stale data; safer behavior would have
performance costs.
"
      attribute 1238914 "m_blocksize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate          
"
      end

      attribute 1239042 "m_SHIFT"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bitwise addressing (much faster than div/remainder 
"
      end

      attribute 1239170 "m_MASK"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bitwise addressing (much faster than div/remainder 
"
      end

      attribute 1239298 "NUMBLOCKS_DEFAULT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The default number of blocks to (over)allocate by 
"
      end

      attribute 1239426 "m_numblocks"
	protected explicit_type "int"
	init_value " NUMBLOCKS_DEFAULT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of blocks to (over)allocate by 
"
      end

      attribute 1239554 "m_map"
	protected explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of arrays of ints          
"
      end

      attribute 1239682 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of ints in array          
"
      end

      attribute 1239810 "m_map0"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"Shortcut\" handle to m_map[0]. Surprisingly helpful for short vectors. 
"
      end

      attribute 1239938 "m_buildCache"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"Shortcut\" handle to most recently added row of m_map.
Very helpful during construction.
@xsl.usage internal

"
      end

      attribute 1240066 "m_buildCacheStartIndex"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5708290 "SuballocatedIntVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is currently 2K, which may be overkill for
small lists and undershootng for large ones.
"
      end

      operation 5708418 "SuballocatedIntVector"
	public explicit_return_type ""
	nparams 2
	  param in name "blocksize" explicit_type "int"
	  param in name "numblocks" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size and number
of blocks. For efficiency, we will round the requested size
off to a power of two.

@param blocksize Size of block to allocate
@param numblocks Number of blocks to allocate
"
      end

      operation 5708546 "SuballocatedIntVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct a IntVector, using the given block size and
the default number of blocks (32).

@param blocksize Size of block to allocate
"
      end

      operation 5708674 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return length of the list
"
      end

      operation 5708802 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "sz" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the length of the list. This will only work to truncate the list, and
even then it has not been heavily tested and may not be trustworthy.

@return length of the list
"
      end

      operation 5708930 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a int onto the vector.

@param value Int to add to the list
"
      end

      operation 5709058 "addElements"
	private explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several int values onto the vector.

@param value Int to add to the list
"
      end

      operation 5709186 "addElements"
	private explicit_return_type "void"
	nparams 1
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several slots onto the vector, but do not set the values.
Note: \"Not Set\" means the value is unspecified.

@param numberOfElements Int to add to the list
"
      end

      operation 5709314 "insertElementAt"
	private explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

Insertion may be an EXPENSIVE operation!

@param value Int to insert
@param at Index of where to insert
"
      end

      operation 5709442 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wipe it out. Currently defined as equivalent to setSize(0).
"
      end

      operation 5709570 "removeElement"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s Int to remove from array

@return True if the int was removed, false if it was not found
"
      end

      operation 5709698 "removeElementAt"
	private explicit_return_type "void"
	nparams 1
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param at index of where to remove and int
"
      end

      operation 5709826 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param value object to set
@param at    Index of where to set the object
"
      end

      operation 5709954 "elementAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element. This is often at the innermost loop of an
application, so performance is critical.

@param i index of value to get

@return value at given index. If that value wasn't previously set,
the result is undefined for performance reasons. It may throw an
exception (see below), may return zero, or (if setSize has previously
been used) may return stale data.

@throws ArrayIndexOutOfBoundsException if the index was _clearly_
unreasonable (negative, or past the highest block).

@throws NullPointerException if the index points to a block that could
have existed (based on the highest index used) but has never had anything
set into it.
%REVIEW% Could add a catch to create the block in that case, or return 0.
Try/Catch is _supposed_ to be nearly free when not thrown to. Do we
believe that? Should we have a separate safeElementAt?
"
      end

      operation 5710082 "contains"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given node.

@param s object to look for

@return true if the object is in the list
"
      end

      operation 5710210 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "elem" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@param index Index of where to begin search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5710338 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5710466 "lastIndexOf"
	private explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5710594 "getMap0"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the internal m_map0 array
@return the m_map0 array
"
      end

      operation 5710722 "getMap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the m_map double array
@return the internal map of array of arrays
"
      end
    end

    class 626818 "BoolStack"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple stack for boolean values.
@xsl.usage internal
"
      classrelation 2548482 // <realization>
	relation 2548482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2548482 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1225730 "m_values"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of boolean values          
"
      end

      attribute 1225858 "m_allocatedSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array size allocated           
"
      end

      attribute 1225986 "m_index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Index into the array of booleans          
"
      end

      operation 5655938 "BoolStack"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5656066 "BoolStack"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param size array size to allocate
"
      end

      operation 5656194 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Current length of the list
"
      end

      operation 5656322 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the stack.

"
      end

      operation 5656450 "push"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "val" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes an item onto the top of this stack.


@param val the boolean to be pushed onto this stack.
@return  the <code>item</code> argument.
"
      end

      operation 5656578 "pop"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns that
object as the value of this function.

@return     The object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5656706 "popAndTop"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns the
next object at the top as the value of this function.


@return Next object to the top or false if none there
"
      end

      operation 5656834 "setTop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the item at the top of this stack


@param b Object to set at the top of this stack
"
      end

      operation 5656962 "peek"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.

@return     the object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5657090 "peekOrFalse"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.  If the stack is empty, it returns false.

@return     the object at the top of this stack.
"
      end

      operation 5657218 "peekOrTrue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.  If the stack is empty, it returns true.

@return     the object at the top of this stack.
"
      end

      operation 5657346 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this stack is empty.

@return  <code>true</code> if this stack is empty;
         <code>false</code> otherwise.
"
      end

      operation 5657474 "grow"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Grows the size of the stack

"
      end

      operation 5657602 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 626946 "XMLStringFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A concrete class that implements this interface creates XMLString objects.
"
      operation 5751554 "newstr"
	abstract public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "string" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new XMLString from a Java string.


@param string Java String reference, which must be non-null.

@return An XMLString object that wraps the String reference.
"
      end

      operation 5751682 "newstr"
	abstract public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "string" type class_ref 633730 // FastStringBuffer
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLString from a FastStringBuffer.


@param string FastStringBuffer reference, which must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.

@return An XMLString object that wraps the FastStringBuffer reference.
"
      end

      operation 5751810 "newstr"
	abstract public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "string" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLString from a FastStringBuffer.


@param string FastStringBuffer reference, which must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.

@return An XMLString object that wraps the FastStringBuffer reference.
"
      end

      operation 5751938 "emptystr"
	abstract public return_type class_ref 619010 // XMLString
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cheap representation of an empty string.

@return An non-null reference to an XMLString that represents \"\".
"
      end
    end

    class 632706 "NodeVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of Nodes.
@xsl.usage internal
"
      classrelation 2553346 // <realization>
	relation 2553346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2553346 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2553474 // <realization>
	relation 2553474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2553474 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1232770 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -713473092200731870L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1232898 "m_blocksize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Size of blocks to allocate.
 @serial

"
      end

      attribute 1233026 "m_map"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array of nodes this points to.
 @serial

"
      end

      attribute 1233154 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of nodes in this NodeVector.
 @serial

"
      end

      attribute 1233282 "m_mapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Size of the array this points to.
 @serial

 lazy initialization"
      end

      operation 5680642 "NodeVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
"
      end

      operation 5680770 "NodeVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a NodeVector, using the given block size.

@param blocksize Size of blocks to allocate
"
      end

      operation 5680898 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned LocPathIterator.

@return A clone of this

@throws CloneNotSupportedException
"
      end

      operation 5681026 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of nodes in this NodeVector
"
      end

      operation 5681154 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a Node onto the vector.

@param value Node to add to the vector
"
      end

      operation 5681282 "push"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a Node onto the vector.

@param value Node to add to the vector
"
      end

      operation 5681410 "pop"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a node from the tail of the vector and return the result.

@return the node at the tail of the vector
"
      end

      operation 5681538 "popAndTop"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a node from the tail of the vector and return the
top of the stack after the pop.

@return The top of the stack after it's been popped
"
      end

      operation 5681666 "popQuick"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a node from the tail of the vector.
"
      end

      operation 5681794 "peepOrNull"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node at the top of the stack without popping the stack.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@return Node at the top of the stack or null if stack is empty.
"
      end

      operation 5681922 "pushPair"
	public explicit_return_type "void"
	nparams 2
	  param in name "v1" explicit_type "int"
	  param in name "v2" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a pair of nodes into the stack.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@param v1 First node to add to vector
@param v2 Second node to add to vector
"
      end

      operation 5682050 "popPair"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a pair of nodes from the tail of the stack.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.
"
      end

      operation 5682178 "setTail"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the tail of the stack to the given node.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@param n Node to set at the tail of vector
"
      end

      operation 5682306 "setTailSub1"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the given node one position from the tail.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@param n Node to set
"
      end

      operation 5682434 "peepTail"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node at the tail of the vector without popping
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@return Node at the tail of the vector
"
      end

      operation 5682562 "peepTailSub1"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node one position from the tail without popping.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@return Node one away from the tail
"
      end

      operation 5682690 "insertInOrder"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert a node in order in the list.

@param value Node to insert
"
      end

      operation 5682818 "insertElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

@param value Node to insert
@param at Position where to insert
"
      end

      operation 5682946 "appendNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nodes" type class_ref 632706 // NodeVector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the nodes to the list.

@param nodes NodeVector to append to this list
"
      end

      operation 5683074 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.
"
      end

      operation 5683202 "RemoveAllNoClear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the length to zero, but don't clear the array.
"
      end

      operation 5683330 "removeElement"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s Node to remove from the list

@return True if the node was successfully removed
"
      end

      operation 5683458 "removeElementAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param i Index of node to remove
"
      end

      operation 5683586 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "node" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param node Node to set
@param index Index of where to set the node
"
      end

      operation 5683714 "elementAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i Index of node to get

@return Node at specified index
"
      end

      operation 5683842 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given node.

@param s Node to look for

@return True if the given node was found.
"
      end

      operation 5683970 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "elem" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Node to look for
@param index Index of where to start the search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5684098 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Node to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5684226 "sort"
	public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "lo0" explicit_type "int"
	  param in name "hi0" explicit_type "int"
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sort an array using a quicksort algorithm.

@param a The array to be sorted.
@param lo0  The low index.
@param hi0  The high index.

@throws Exception
"
      end

      operation 5684354 "sort"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sort an array using a quicksort algorithm.

@throws Exception
"
      end
    end

    class 633730 "FastStringBuffer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Bare-bones, unsafe, fast string buffer. No thread-safety, no
parameter range checking, exposed fields. Note that in typical
applications, thread-safety of a StringBuffer is a somewhat
dubious concept in any case.
<p>
Note that Stree and DTM used a single FastStringBuffer as a string pool,
by recording start and length indices within this single buffer. This
minimizes heap overhead, but of course requires more work when retrieving
the data.
<p>
FastStringBuffer operates as a \"chunked buffer\". Doing so
reduces the need to recopy existing information when an append
exceeds the space available; we just allocate another chunk and
flow across to it. (The array of chunks may need to grow,
admittedly, but that's a much smaller object.) Some excess
recopying may arise when we extract Strings which cross chunk
boundaries; larger chunks make that less frequent.
<p>
The size values are parameterized, to allow tuning this code. In
theory, Result Tree Fragments might want to be tuned differently
from the main document's text.
<p>
%REVIEW% An experiment in self-tuning is
included in the code (using nested FastStringBuffers to achieve
variation in chunk sizes), but this implementation has proven to
be problematic when data may be being copied from the FSB into itself.
We should either re-architect that to make this safe (if possible)
or remove that code and clean up for performance/maintainability reasons.
<p>
"
      attribute 1229570 "DEBUG_FORCE_INIT_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If nonzero, forces the inial chunk size.
"
      end

      attribute 1229698 "DEBUG_FORCE_FIXED_CHUNKSIZE"
	class_attribute const_attribute package explicit_type "boolean"
	init_value "true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " %BUG% %REVIEW% *****PROBLEM SUSPECTED: If data from an FSB is being copied
 back into the same FSB (variable set from previous variable, for example)
 and blocksize changes in mid-copy... there's risk of severe malfunction in
 the read process, due to how the resizing code re-jiggers storage. Arggh.
 If we want to retain the variable-size-block feature, we need to reconsider
 that issue. For now, I have forced us into fixed-size mode.
"
      end

      attribute 1229826 "SUPPRESS_LEADING_WS"
	class_attribute const_attribute public explicit_type "int"
	init_value "0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Manifest constant: Suppress leading whitespace.
This should be used when normalize-to-SAX is called for the first chunk of a
multi-chunk output, or one following unsuppressed whitespace in a previous
chunk.
@see #sendNormalizedSAXcharacters(org.xml.sax.ContentHandler,int,int)

"
      end

      attribute 1229954 "SUPPRESS_TRAILING_WS"
	class_attribute const_attribute public explicit_type "int"
	init_value "0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Manifest constant: Suppress trailing whitespace.
This should be used when normalize-to-SAX is called for the last chunk of a
multi-chunk output; it may have to be or'ed with SUPPRESS_LEADING_WS.

"
      end

      attribute 1230082 "SUPPRESS_BOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " SUPPRESS_LEADING_WS | SUPPRESS_TRAILING_WS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Manifest constant: Suppress both leading and trailing whitespace.
This should be used when normalize-to-SAX is called for a complete string.
(I'm not wild about the name of this one. Ideas welcome.)
@see #sendNormalizedSAXcharacters(org.xml.sax.ContentHandler,int,int)

"
      end

      attribute 1230210 "CARRY_WS"
	class_attribute const_attribute private explicit_type "int"
	init_value "0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Manifest constant: Carry trailing whitespace of one chunk as leading
whitespace of the next chunk. Used internally; I don't see any reason
to make it public right now.

"
      end

      attribute 1230338 "m_chunkBits"
	package explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_chunkBits sets our chunking strategy, by saying how many
bits of index can be used within a single chunk before flowing over
to the next chunk. For example, if m_chunkbits is set to 15, each
chunk can contain up to 2^15 (32K) characters

"
      end

      attribute 1230466 "m_maxChunkBits"
	package explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_maxChunkBits affects our chunk-growth strategy, by saying what
the largest permissible chunk size is in this particular FastStringBuffer
hierarchy.

"
      end

      attribute 1230594 "m_rebundleBits"
	package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_rechunkBits affects our chunk-growth strategy, by saying how
many chunks should be allocated at one size before we encapsulate them
into the first chunk of the next size up. For example, if m_rechunkBits
is set to 3, then after 8 chunks at a given size we will rebundle
them as the first element of a FastStringBuffer using a chunk size
8 times larger (chunkBits shifted left three bits).

"
      end

      attribute 1230722 "m_chunkSize"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_chunkSize establishes the maximum size of one chunk of the array
as 2**chunkbits characters.
(Which may also be the minimum size if we aren't tuning for storage)

 =1<<(m_chunkBits-1);"
      end

      attribute 1230850 "m_chunkMask"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_chunkMask is m_chunkSize-1 -- in other words, m_chunkBits
worth of low-order '1' bits, useful for shift-and-mask addressing
within the chunks.

 =m_chunkSize-1;"
      end

      attribute 1230978 "m_array"
	package explicit_type "char"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_array holds the string buffer's text contents, using an
array-of-arrays. Note that this array, and the arrays it contains, may be
reallocated when necessary in order to allow the buffer to grow;
references to them should be considered to be invalidated after any
append. However, the only time these arrays are directly exposed
is in the sendSAXcharacters call.

"
      end

      attribute 1231106 "m_lastChunk"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_lastChunk is an index into m_array[], pointing to the last
chunk of the Chunked Array currently in use. Note that additional
chunks may actually be allocated, eg if the FastStringBuffer had
previously been truncated or if someone issued an ensureSpace request.
<p>
The insertion point for append operations is addressed by the combination
of m_lastChunk and m_firstFree.

"
      end

      attribute 1231234 "m_firstFree"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field m_firstFree is an index into m_array[m_lastChunk][], pointing to
the first character in the Chunked Array which is not part of the
FastStringBuffer's current content. Since m_array[][] is zero-based,
the length of that content can be calculated as
(m_lastChunk<<m_chunkBits) + m_firstFree

"
      end

      classrelation 2551682 // m_innerFSB (<unidirectional association>)
	relation 2551682 --->
	  a role_name "m_innerFSB" init_value " null" package
	    comment "
Field m_innerFSB, when non-null, is a FastStringBuffer whose total
length equals m_chunkSize, and which replaces m_array[0]. This allows
building a hierarchy of FastStringBuffers, where early appends use
a smaller chunkSize (for less wasted memory overhead) but later
ones use a larger chunkSize (for less heap activity overhead).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2551682 // m_innerFSB (<unidirectional association>)
	  b parent class_ref 633730 // FastStringBuffer
      end

      operation 5669634 "FastStringBuffer"
	public explicit_return_type ""
	nparams 3
	  param in name "initChunkBits" explicit_type "int"
	  param in name "maxChunkBits" explicit_type "int"
	  param in name "rebundleBits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a FastStringBuffer, with allocation policy as per parameters.
<p>
For coding convenience, I've expressed both allocation sizes in terms of
a number of bits. That's needed for the final size of a chunk,
to permit fast and efficient shift-and-mask addressing. It's less critical
for the inital size, and may be reconsidered.
<p>
An alternative would be to accept integer sizes and round to powers of two;
that really doesn't seem to buy us much, if anything.

@param initChunkBits Length in characters of the initial allocation
of a chunk, expressed in log-base-2. (That is, 10 means allocate 1024
characters.) Later chunks will use larger allocation units, to trade off
allocation speed of large document against storage efficiency of small
ones.
@param maxChunkBits Number of character-offset bits that should be used for
addressing within a chunk. Maximum length of a chunk is 2^chunkBits
characters.
@param rebundleBits Number of character-offset bits that addressing should
advance before we attempt to take a step from initChunkBits to maxChunkBits
"
      end

      operation 5669762 "FastStringBuffer"
	public explicit_return_type ""
	nparams 2
	  param in name "initChunkBits" explicit_type "int"
	  param in name "maxChunkBits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a FastStringBuffer, using a default rebundleBits value.

NEEDSDOC @param initChunkBits
NEEDSDOC @param maxChunkBits
"
      end

      operation 5669890 "FastStringBuffer"
	public explicit_return_type ""
	nparams 1
	  param in name "initChunkBits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a FastStringBuffer, using default maxChunkBits and
rebundleBits values.
<p>
ISSUE: Should this call assert initial size, or fixed size?
Now configured as initial, with a default for fixed.

NEEDSDOC @param initChunkBits
"
      end

      operation 5670018 "FastStringBuffer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a FastStringBuffer, using a default allocation policy.
"
      end

      operation 5670146 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list. Synonym for length().

@return the number of characters in the FastStringBuffer's content.
"
      end

      operation 5670274 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list. Synonym for size().

@return the number of characters in the FastStringBuffer's content.
"
      end

      operation 5670402 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Discard the content of the FastStringBuffer, and most of the memory
that was allocated by it, restoring the initial state. Note that this
may eventually be different from setLength(0), which see.
"
      end

      operation 5670530 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "l" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly set how much of the FastStringBuffer's storage is to be
considered part of its content. This is a fast but hazardous
operation. It is not protected against negative values, or values
greater than the amount of storage currently available... and even
if additional storage does exist, its contents are unpredictable.
The only safe use for our setLength() is to truncate the FastStringBuffer
to a shorter string.

@param l New length. If l<0 or l>=getLength(), this operation will
not report an error but future operations will almost certainly fail.
"
      end

      operation 5670658 "setLength"
	private explicit_return_type "void"
	nparams 2
	  param in name "l" explicit_type "int"
	  param inout name "rootFSB" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subroutine for the public setLength() method. Deals with the fact
that truncation may require restoring one of the innerFSBs

NEEDSDOC @param l
NEEDSDOC @param rootFSB
"
      end

      operation 5670786 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Note that this operation has been somewhat deoptimized by the shift to a
chunked array, as there is no factory method to produce a String object
directly from an array of arrays and hence a double copy is needed.
By using ensureCapacity we hope to minimize the heap overhead of building
the intermediate StringBuffer.
<p>
(It really is a pity that Java didn't design String as a final subclass
of MutableString, rather than having StringBuffer be a separate hierarchy.
We'd avoid a <strong>lot</strong> of double-buffering.)

@return the contents of the FastStringBuffer as a standard Java string.
"
      end

      operation 5670914 "append"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a single character onto the FastStringBuffer, growing the
storage if necessary.
<p>
NOTE THAT after calling append(), previously obtained
references to m_array[][] may no longer be valid....
though in fact they should be in this instance.

@param value character to be appended.
"
      end

      operation 5671042 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the contents of a String onto the FastStringBuffer,
growing the storage if necessary.
<p>
NOTE THAT after calling append(), previously obtained
references to m_array[] may no longer be valid.

@param value String whose contents are to be appended.
"
      end

      operation 5671170 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the contents of a StringBuffer onto the FastStringBuffer,
growing the storage if necessary.
<p>
NOTE THAT after calling append(), previously obtained
references to m_array[] may no longer be valid.

@param value StringBuffer whose contents are to be appended.
"
      end

      operation 5671298 "append"
	public explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append part of the contents of a Character Array onto the
FastStringBuffer,  growing the storage if necessary.
<p>
NOTE THAT after calling append(), previously obtained
references to m_array[] may no longer be valid.

@param chars character array from which data is to be copied
@param start offset in chars of first character to be copied,
zero-based.
@param length number of characters to be copied
"
      end

      operation 5671426 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the contents of another FastStringBuffer onto
this FastStringBuffer, growing the storage if necessary.
<p>
NOTE THAT after calling append(), previously obtained
references to m_array[] may no longer be valid.

@param value FastStringBuffer whose contents are
to be appended.
"
      end

      operation 5671554 "isWhitespace"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the specified range of characters are all whitespace,
as defined by XMLCharacterRecognizer.
<p>
CURRENTLY DOES NOT CHECK FOR OUT-OF-RANGE.

@param start Offset of first character in the range.
@param length Number of characters to send.
"
      end

      operation 5671682 "getString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param start Offset of first character in the range.
@param length Number of characters to send.
@return a new String object initialized from the specified range of
characters.
"
      end

      operation 5671810 "getOneChunkString"
	protected return_type class_ref 128130 // String
	nparams 3
	  param in name "startChunk" explicit_type "int"
	  param in name "startColumn" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5671938 "getString"
	package return_type class_ref 166018 // StringBuffer
	nparams 3
	  param inout name "sb" type class_ref 166018 // StringBuffer
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param sb StringBuffer to be appended to
@param start Offset of first character in the range.
@param length Number of characters to send.
@return sb with the requested text appended to it
"
      end

      operation 5672066 "getString"
	package return_type class_ref 166018 // StringBuffer
	nparams 4
	  param inout name "sb" type class_ref 166018 // StringBuffer
	  param in name "startChunk" explicit_type "int"
	  param in name "startColumn" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal support for toString() and getString().
PLEASE NOTE SIGNATURE CHANGE from earlier versions; it now appends into
and returns a StringBuffer supplied by the caller. This simplifies
m_innerFSB support.
<p>
Note that this operation has been somewhat deoptimized by the shift to a
chunked array, as there is no factory method to produce a String object
directly from an array of arrays and hence a double copy is needed.
By presetting length we hope to minimize the heap overhead of building
the intermediate StringBuffer.
<p>
(It really is a pity that Java didn't design String as a final subclass
of MutableString, rather than having StringBuffer be a separate hierarchy.
We'd avoid a <strong>lot</strong> of double-buffering.)


@param sb
@param startChunk
@param startColumn
@param length

@return the contents of the FastStringBuffer as a standard Java string.
"
      end

      operation 5672194 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a single character from the string buffer.


@param pos character position requested.
@return A character from the requested position.
"
      end

      operation 5672322 "sendSAXcharacters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" type class_ref 605954 // ContentHandler
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the specified range of characters as one or more SAX characters()
events.
Note that the buffer reference passed to the ContentHandler may be
invalidated if the FastStringBuffer is edited; it's the user's
responsibility to manage access to the FastStringBuffer to prevent this
problem from arising.
<p>
Note too that there is no promise that the output will be sent as a
single call. As is always true in SAX, one logical string may be split
across multiple blocks of memory and hence delivered as several
successive events.

@param ch SAX ContentHandler object to receive the event.
@param start Offset of first character in the range.
@param length Number of characters to send.
@exception org.xml.sax.SAXException may be thrown by handler's
characters() method.
"
      end

      operation 5672450 "sendNormalizedSAXcharacters"
	public explicit_return_type "int"
	nparams 3
	  param inout name "ch" type class_ref 605954 // ContentHandler
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the specified range of characters as one or more SAX characters()
events, normalizing the characters according to XSLT rules.

@param ch SAX ContentHandler object to receive the event.
@param start Offset of first character in the range.
@param length Number of characters to send.
@return normalization status to apply to next chunk (because we may
have been called recursively to process an inner FSB):
<dl>
<dt>0</dt>
<dd>if this output did not end in retained whitespace, and thus whitespace
at the start of the following chunk (if any) should be converted to a
single space.
<dt>SUPPRESS_LEADING_WS</dt>
<dd>if this output ended in retained whitespace, and thus whitespace
at the start of the following chunk (if any) should be completely
suppressed.</dd>
</dd>
</dl>
@exception org.xml.sax.SAXException may be thrown by handler's
characters() method.
"
      end

      attribute 1231362 "SINGLE_SPACE"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " {' '}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5672578 "sendNormalizedSAXcharacters"
	class_operation package explicit_return_type "int"
	nparams 5
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "handler" type class_ref 605954 // ContentHandler
	  param in name "edgeTreatmentFlags" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal method to directly normalize and dispatch the character array.
This version is aware of the fact that it may be called several times
in succession if the data is made up of multiple \"chunks\", and thus
must actively manage the handling of leading and trailing whitespace.

Note: The recursion is due to the possible recursion of inner FSBs.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@param handler SAX ContentHandler object to receive the event.
@param edgeTreatmentFlags How leading/trailing spaces should be handled.
This is a bitfield contining two flags, bitwise-ORed together:
<dl>
<dt>SUPPRESS_LEADING_WS</dt>
<dd>When false, causes leading whitespace to be converted to a single
space; when true, causes it to be discarded entirely.
Should be set TRUE for the first chunk, and (in multi-chunk output)
whenever the previous chunk ended in retained whitespace.</dd>
<dt>SUPPRESS_TRAILING_WS</dt>
<dd>When false, causes trailing whitespace to be converted to a single
space; when true, causes it to be discarded entirely.
Should be set TRUE for the last or only chunk.
</dd>
</dl>
@return normalization status, as in the edgeTreatmentFlags parameter:
<dl>
<dt>0</dt>
<dd>if this output did not end in retained whitespace, and thus whitespace
at the start of the following chunk (if any) should be converted to a
single space.
<dt>SUPPRESS_LEADING_WS</dt>
<dd>if this output ended in retained whitespace, and thus whitespace
at the start of the following chunk (if any) should be completely
suppressed.</dd>
</dd>
</dl>


@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5672706 "sendNormalizedSAXcharacters"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "handler" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly normalize and dispatch the character array.

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@param handler SAX ContentHandler object to receive the event.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5672834 "sendSAXComment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" type class_ref 617602 // LexicalHandler
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the specified range of characters as sax Comment.
<p>
Note that, unlike sendSAXcharacters, this has to be done as a single
call to LexicalHandler#comment.

@param ch SAX LexicalHandler object to receive the event.
@param start Offset of first character in the range.
@param length Number of characters to send.
@exception org.xml.sax.SAXException may be thrown by handler's
characters() method.
"
      end

      operation 5672962 "getChars"
	private explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li><code>srcBegin</code> is negative.
           <li><code>srcBegin</code> is greater than <code>srcEnd</code>
           <li><code>srcEnd</code> is greater than the length of this
               string
           <li><code>dstBegin</code> is negative
           <li><code>dstBegin+(srcEnd-srcBegin)</code> is larger than
               <code>dst.length</code></ul>
@exception NullPointerException if <code>dst</code> is <code>null</code>
"
      end

      operation 5673090 "FastStringBuffer"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encapsulation c'tor. After this is called, the source FastStringBuffer
will be reset to use the new object as its m_innerFSB, and will have
had its chunk size reset appropriately. IT SHOULD NEVER BE CALLED
EXCEPT WHEN source.length()==1<<(source.m_chunkBits+source.m_rebundleBits)

NEEDSDOC @param source
"
      end
    end

    class 633858 "IntStack"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implement a stack of simple integers.

%OPT%
This is currently based on IntVector, which permits fast acess but pays a
heavy recopying penalty if/when its size is increased. If we expect deep
stacks, we should consider a version based on ChunkedIntVector.
@xsl.usage internal
"
      classrelation 2551938 // <generalisation>
	relation 2551938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2551938 // <generalisation>
	  b parent class_ref 634370 // IntVector
      end

      operation 5675906 "IntStack"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5676034 "IntStack"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5676162 "IntStack"
	public explicit_return_type ""
	nparams 1
	  param inout name "v" type class_ref 633858 // IntStack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor for IntStack

@param v IntStack to copy
"
      end

      operation 5676290 "push"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes an item onto the top of this stack.

@param   i   the int to be pushed onto this stack.
@return  the <code>item</code> argument.
"
      end

      operation 5676418 "pop"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns that
object as the value of this function.

@return     The object at the top of this stack.
"
      end

      operation 5676546 "quickPop"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quickly pops a number of items from the stack.
"
      end

      operation 5676674 "peek"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.

@return     the object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5676802 "peek"
	public explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the position the stack counting down n items.

@param n The number of items down, indexed from zero.
@return     the object at n items down.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5676930 "setTop"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an object at a the top of the statck


@param val object to set at the top
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5677058 "empty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this stack is empty.

@return  <code>true</code> if this stack is empty;
         <code>false</code> otherwise.
@since   JDK1.0
"
      end

      operation 5677186 "search"
	public explicit_return_type "int"
	nparams 1
	  param in name "o" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns where an object is on this stack.

@param   o   the desired object.
@return  the distance from the top of the stack where the object is]
         located; the return value <code>-1</code> indicates that the
         object is not on the stack.
@since   JDK1.0
"
      end

      operation 5677314 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns clone of current IntStack

@return clone of current IntStack
"
      end
    end

    class 634242 "StringVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of strings, optimized
for small lists.
@xsl.usage internal
"
      classrelation 2558082 // <realization>
	relation 2558082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2558082 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1237762 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 4995234972032919748L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1237890 "m_blocksize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @serial Size of blocks to allocate           
"
      end

      classrelation 2558210 // m_map (<unidirectional association>)
	relation 2558210 --->
	  a role_name "m_map" multiplicity "[]" protected
	    comment " @serial Array of strings this contains          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2558210 // m_map (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1238018 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @serial Number of strings this contains          
"
      end

      attribute 1238146 "m_mapSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @serial Size of the array          
"
      end

      operation 5703554 "StringVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5703682 "StringVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StringVector, using the given block size.

@param blocksize Size of the blocks to allocate
"
      end

      operation 5703810 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of strings in the list
"
      end

      operation 5703938 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of strings in the list
"
      end

      operation 5704066 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a string onto the vector.

@param value Sting to add to the vector
"
      end

      operation 5704194 "elementAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i Index of string to find

@return String at given index
"
      end

      operation 5704322 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param s String to look for

@return True if the string is in this table
"
      end

      operation 5704450 "containsIgnoreCase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string. Ignore case.

@param s String to find

@return True if the String is in this vector
"
      end

      operation 5704578 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param s String to push into the vector
"
      end

      operation 5704706 "pop"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the tail of this vector.

@return The String last added to this vector or null not found.
The string is removed from the vector.
"
      end

      operation 5704834 "peek"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the string at the tail of this vector without popping.

@return The string at the tail of this vector.
"
      end
    end

    class 634370 "IntVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of int.

This version is based on a \"realloc\" strategy -- a simle array is
used, and when more storage is needed, a larger array is obtained
and all existing data is recopied into it. As a result, read/write
access to existing nodes is O(1) fast but appending may be O(N**2)
slow. See also SuballocatedIntVector.
@xsl.usage internal
"
      classrelation 2551810 // <realization>
	relation 2551810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2551810 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1231490 "m_blocksize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate          
"
      end

      attribute 1231618 "m_map"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of ints          
 IntStack is trying to see this directly"
      end

      attribute 1231746 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of ints in array          
"
      end

      attribute 1231874 "m_mapSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of array          
"
      end

      operation 5673346 "IntVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5673474 "IntVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5673602 "IntVector"
	public explicit_return_type ""
	nparams 2
	  param in name "blocksize" explicit_type "int"
	  param in name "increaseSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5673730 "IntVector"
	public explicit_return_type ""
	nparams 1
	  param inout name "v" type class_ref 634370 // IntVector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor for IntVector

@param v Existing IntVector to copy
"
      end

      operation 5673858 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return length of the list
"
      end

      operation 5673986 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "sz" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return length of the list
"
      end

      operation 5674114 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a int onto the vector.

@param value Int to add to the list
"
      end

      operation 5674242 "addElements"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several int values onto the vector.

@param value Int to add to the list
"
      end

      operation 5674370 "addElements"
	public explicit_return_type "void"
	nparams 1
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several slots onto the vector, but do not set the values.

@param numberOfElements Int to add to the list
"
      end

      operation 5674498 "insertElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

@param value Int to insert
@param at Index of where to insert
"
      end

      operation 5674626 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.
"
      end

      operation 5674754 "removeElement"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s Int to remove from array

@return True if the int was removed, false if it was not found
"
      end

      operation 5674882 "removeElementAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param i index of where to remove and int
"
      end

      operation 5675010 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param value object to set
@param index Index of where to set the object
"
      end

      operation 5675138 "elementAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i index of object to get

@return object at given index
"
      end

      operation 5675266 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given node.

@param s object to look for

@return true if the object is in the list
"
      end

      operation 5675394 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "elem" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@param index Index of where to begin search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5675522 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5675650 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5675778 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns clone of current IntVector

@return clone of current IntVector
"
      end
    end

    class 635650 "PrefixResolver"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class that implements this interface can resolve prefixes to
namespaces. Examples would include resolving the meaning of a
prefix at a particular point in a document, or mapping the prefixes
used in an XPath expression.
@xsl.usage advanced
"
      operation 5689986 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a namespace, get the corrisponding prefix.  This assumes that
the PrefixResolver holds its own namespace context, or is a namespace
context itself.

@param prefix The prefix to look up, which may be an empty string (\"\") for the default Namespace.

@return The associated Namespace URI, or null if the prefix
        is undeclared in this context.
"
      end

      operation 5690114 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "context" type class_ref 317570 // Node
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a namespace, get the corresponding prefix, based on the context node.

@param prefix The prefix to look up, which may be an empty string (\"\") for the default Namespace.
@param context The node context from which to look up the URI.

@return The associated Namespace URI as a string, or null if the prefix
        is undeclared in this context.
"
      end

      operation 5690242 "getBaseIdentifier"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the base identifier.

@return The base identifier from where relative URIs should be absolutized, or null
if the base ID is unknown.
<p>
CAVEAT: Note that the base URI in an XML document may vary with where
you are in the document, if part of the doc's contents were brought in
via an external entity reference or if mechanisms such as xml:base have
been used. Unless this PrefixResolver is bound to a specific portion of
the document, or has been kept up to date via some other mechanism, it
may not accurately reflect that context information.
"
      end

      operation 5690370 "handlesNullPrefixes"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 635778 "XMLReaderManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Creates XMLReader objects and caches them for re-use.
This class follows the singleton pattern.
"
      classrelation 2563202 // NAMESPACES_FEATURE (<unidirectional association>)
	relation 2563202 --->
	  a role_name "NAMESPACES_FEATURE" init_value "
                             \"http://xml.org/sax/features/namespaces\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563202 // NAMESPACES_FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2563330 // NAMESPACE_PREFIXES_FEATURE (<unidirectional association>)
	relation 2563330 --->
	  a role_name "NAMESPACE_PREFIXES_FEATURE" init_value "
                             \"http://xml.org/sax/features/namespace-prefixes\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563330 // NAMESPACE_PREFIXES_FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2563458 // m_singletonManager (<unidirectional association>)
	relation 2563458 --->
	  a role_name "m_singletonManager" init_value "
                                                     new XMLReaderManager()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563458 // m_singletonManager (<unidirectional association>)
	  b parent class_ref 635778 // XMLReaderManager
      end

      classrelation 2563586 // property (<unidirectional association>)
	relation 2563586 --->
	  a role_name "property" init_value " \"org.xml.sax.driver\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563586 // property (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2563714 // m_parserFactory (<unidirectional association>)
	relation 2563714 --->
	  a role_name "m_parserFactory" class_relation private
	    comment "
Parser factory to be used to construct XMLReader objects

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563714 // m_parserFactory (<unidirectional association>)
	  b parent class_ref 587778 // SAXParserFactory
      end

      classrelation 2563842 // m_readers (<unidirectional association>)
	relation 2563842 --->
	  a role_name "m_readers" private
	    comment "
Cache of XMLReader objects

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563842 // m_readers (<unidirectional association>)
	  b parent class_ref 129282 // ThreadLocal
      end

      classrelation 2563970 // m_inUse (<unidirectional association>)
	relation 2563970 --->
	  a role_name "m_inUse" private
	    comment "
Keeps track of whether an XMLReader object is in use.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2563970 // m_inUse (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      attribute 1243906 "m_useServicesMechanism"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1244034 "_secureProcessing"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2564098 // _accessExternalDTD (<unidirectional association>)
	relation 2564098 --->
	  a role_name "_accessExternalDTD" init_value " XalanConstants.EXTERNAL_ACCESS_DEFAULT" private
	    comment "
protocols allowed for external DTD references in source file and/or stylesheet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2564098 // _accessExternalDTD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2564226 // _xmlSecurityManager (<unidirectional association>)
	relation 2564226 --->
	  a role_name "_xmlSecurityManager" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2564226 // _xmlSecurityManager (<unidirectional association>)
	  b parent class_ref 588546 // XMLSecurityManager
      end

      operation 5740546 "XMLReaderManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hidden constructor
"
      end

      operation 5740674 "getInstance"
	class_operation public return_type class_ref 635778 // XMLReaderManager
	nparams 1
	  param inout name "useServicesMechanism" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the singleton reader manager
"
      end

      operation 5740802 "getXMLReader"
	public return_type class_ref 606466 // XMLReader
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a cached XMLReader for this thread, or creates a new
XMLReader, if the existing reader is in use.  When the caller no
longer needs the reader, it must release it with a call to
{@link #releaseXMLReader}.
"
      end

      operation 5740930 "releaseXMLReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 606466 // XMLReader
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the cached XMLReader as available.  If the reader was not
actually in the cache, do nothing.

@param reader The XMLReader that's being released.
"
      end

      operation 5741058 "useServicesMechnism"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the state of the services mechanism feature.
"
      end

      operation 5741186 "setServicesMechnism"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the state of the services mechanism feature.
"
      end

      operation 5741314 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set feature
"
      end

      operation 5741442 "getProperty"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get property value
"
      end

      operation 5741570 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set property.
"
      end
    end

    class 745346 "TreeWalker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class does a pre-order walk of the DOM tree, calling a ContentHandler
interface as it goes.
@xsl.usage advanced
"
      classrelation 2559490 // m_contentHandler (<unidirectional association>)
	relation 2559490 --->
	  a role_name "m_contentHandler" init_value " null" private
	    comment " Local reference to a ContentHandler          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2559490 // m_contentHandler (<unidirectional association>)
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2559618 // m_dh (<unidirectional association>)
	relation 2559618 --->
	  a role_name "m_dh" protected
	    comment " ARGHH!!  JAXP Uses Xerces without setting the namespace processing to ON!
 DOM2Helper m_dh = new DOM2Helper();
 DomHelper for this TreeWalker          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2559618 // m_dh (<unidirectional association>)
	  b parent class_ref 795906 // DOMHelper
      end

      classrelation 2559746 // m_locator (<unidirectional association>)
	relation 2559746 --->
	  a role_name "m_locator" init_value " new LocatorImpl()" private
	    comment " Locator object for this TreeWalker          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2559746 // m_locator (<unidirectional association>)
	  b parent class_ref 792322 // LocatorImpl
      end

      operation 5712642 "getContentHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ContentHandler used for the tree walk.

@return the ContentHandler used for the tree walk
"
      end

      operation 5712770 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ContentHandler used for the tree walk.

@return the ContentHandler used for the tree walk
"
      end

      operation 5712898 "TreeWalker"
	public explicit_return_type ""
	nparams 3
	  param inout name "contentHandler" type class_ref 605954 // ContentHandler
	  param inout name "dh" type class_ref 795906 // DOMHelper
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
@param   contentHandler The implementation of the
@param   systemId System identifier for the document.
contentHandler operation (toXMLString, digest, ...)
"
      end

      operation 5713026 "TreeWalker"
	public explicit_return_type ""
	nparams 2
	  param inout name "contentHandler" type class_ref 605954 // ContentHandler
	  param inout name "dh" type class_ref 795906 // DOMHelper
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
@param   contentHandler The implemention of the
contentHandler operation (toXMLString, digest, ...)
"
      end

      operation 5713154 "TreeWalker"
	public explicit_return_type ""
	nparams 1
	  param inout name "contentHandler" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
@param   contentHandler The implementation of the
contentHandler operation (toXMLString, digest, ...)
"
      end

      operation 5713282 "traverse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pos" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a pre-order traversal non-recursive style.

Note that TreeWalker assumes that the subtree is intended to represent
a complete (though not necessarily well-formed) document and, during a
traversal, startDocument and endDocument will always be issued to the
SAX listener.

@param pos Node in the tree where to start traversal

@throws TransformerException
"
      end

      operation 5713410 "traverseFragment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pos" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a pre-order traversal non-recursive style.

In contrast to the traverse() method this method will not issue
startDocument() and endDocument() events to the SAX listener.

@param pos Node in the tree where to start traversal

@throws TransformerException
"
      end

      operation 5713538 "traverse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pos" type class_ref 317570 // Node
	  param inout name "top" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a pre-order traversal non-recursive style.

Note that TreeWalker assumes that the subtree is intended to represent
a complete (though not necessarily well-formed) document and, during a
traversal, startDocument and endDocument will always be issued to the
SAX listener.

@param pos Node in the tree where to start traversal
@param top Node in the tree where to end traversal

@throws TransformerException
"
      end

      attribute 1240322 "nextIsRaw"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating whether following text to be processed is raw text          
"
      end

      operation 5713666 "dispatachChars"
	private explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Optimized dispatch of characters.
"
      end

      operation 5713794 "startNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start processing given node


@param node Node to process

@throws org.xml.sax.SAXException
"
      end

      operation 5713922 "endNode"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End processing of given node


@param node Node we just finished processing

@throws org.xml.sax.SAXException
"
      end
    end

    class 795778 "AttList"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Wraps a DOM attribute list in a SAX Attributes.
@xsl.usage internal
"
      classrelation 2548098 // <realization>
	relation 2548098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2548098 // <realization>
	  b parent class_ref 593410 // Attributes
      end

      classrelation 2548226 // m_attrs (<unidirectional association>)
	relation 2548226 --->
	  a role_name "m_attrs" package
	    comment " List of attribute nodes          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2548226 // m_attrs (<unidirectional association>)
	  b parent class_ref 327042 // NamedNodeMap
      end

      attribute 1225602 "m_lastIndex"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Index of last attribute node          
"
      end

      classrelation 2548354 // m_dh (<unidirectional association>)
	relation 2548354 --->
	  a role_name "m_dh" package
	    comment " ARGHH!!  JAXP Uses Xerces without setting the namespace processing to ON!
 DOM2Helper m_dh = new DOM2Helper();
 Local reference to DOMHelper          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2548354 // m_dh (<unidirectional association>)
	  b parent class_ref 795906 // DOMHelper
      end

      operation 5654274 "AttList"
	public explicit_return_type ""
	nparams 2
	  param inout name "attrs" type class_ref 327042 // NamedNodeMap
	  param inout name "dh" type class_ref 795906 // DOMHelper
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Constructor AttList
   *
   *
   * @param attrs List of attributes this will contain
   */
  public AttList(NamedNodeMap attrs)
  {

    m_attrs = attrs;
    m_lastIndex = m_attrs.getLength() - 1;
    m_dh = new DOM2Helper();
  }

Constructor AttList


@param attrs List of attributes this will contain
@param dh DOMHelper
"
      end

      operation 5654402 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of attribute nodes in the list


@return number of attribute nodes
"
      end

      operation 5654530 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's Namespace URI by index.

@param index The attribute index (zero-based).
@return The Namespace URI, or the empty string if none
        is available, or null if the index is out of
        range.
"
      end

      operation 5654658 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's local name by index.

@param index The attribute index (zero-based).
@return The local name, or the empty string if Namespace
        processing is not being performed, or null
        if the index is out of range.
"
      end

      operation 5654786 "getQName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's qualified name by index.


@param i The attribute index (zero-based).

@return The attribute's qualified name
"
      end

      operation 5654914 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the attribute's node type by index


@param i The attribute index (zero-based)

@return the attribute's node type
"
      end

      operation 5655042 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the attribute's node value by index


@param i The attribute index (zero-based)

@return the attribute's node value
"
      end

      operation 5655170 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the attribute's node type by name


@param name Attribute name

@return the attribute's node type
"
      end

      operation 5655298 "getType"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by Namespace name.

@param uri The Namespace URI, or the empty String if the
       name has no Namespace URI.
@param localName The local name of the attribute.
@return The attribute type as a string, or null if the
        attribute is not in the list or if Namespace
        processing is not being performed.
"
      end

      operation 5655426 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by name.


@param name The attribute node's name

@return The attribute node's value
"
      end

      operation 5655554 "getValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by Namespace name.

@param uri The Namespace URI, or the empty String if the
       name has no Namespace URI.
@param localName The local name of the attribute.
@return The attribute value as a string, or null if the
        attribute is not in the list.
"
      end

      operation 5655682 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by Namespace name.

@param uri The Namespace URI, or the empty string if
       the name has no Namespace URI.
@param localPart The attribute's local name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5655810 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by raw XML 1.0 name.

@param qName The qualified (prefixed) name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end
    end

    class 795906 "DOMHelper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@deprecated Since the introduction of the DTM, this class will be removed.
This class provides a front-end to DOM implementations, providing
a number of utility functions that either aren't yet standardized
by the DOM spec or that are defined in optional DOM modules and
hence may not be present in all DOMs.
"
      operation 5660162 "createDocument"
	class_operation public return_type class_ref 378626 // Document
	nparams 1
	  param inout name "isSecureProcessing" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 1 did not have a standard mechanism for creating a new
Document object. This function provides a DOM-implementation-independent
abstraction for that for that concept. It's typically used when
outputting a new DOM as the result of an operation.
<p>
TODO: This isn't directly compatable with DOM Level 2.
The Level 2 createDocument call also creates the root
element, and thus requires that you know what that element will be
before creating the Document. We should think about whether we want
to change this code, and the callers, so we can use the DOM's own
method. (It's also possible that DOM Level 3 may relax this
sequence, but you may give up some intelligence in the DOM by
doing so; the intent was that knowing the document type and root
element might let the DOM automatically switch to a specialized
subclass for particular kinds of documents.)

@param isSecureProcessing state of the secure processing feature.
@return The newly created DOM Document object, with no children, or
null if we can't find a DOM implementation that permits creating
new empty Documents.
"
      end

      operation 5660290 "createDocument"
	class_operation public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 1 did not have a standard mechanism for creating a new
Document object. This function provides a DOM-implementation-independent
abstraction for that for that concept. It's typically used when
outputting a new DOM as the result of an operation.

@return The newly created DOM Document object, with no children, or
null if we can't find a DOM implementation that permits creating
new empty Documents.
"
      end

      operation 5660418 "shouldStripSourceNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "textNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells, through the combination of the default-space attribute
on xsl:stylesheet, xsl:strip-space, xsl:preserve-space, and the
xml:space attribute, whether or not extra whitespace should be stripped
from the node.  Literal elements from template elements should
<em>not</em> be tested with this function.
@param textNode A text node from the source tree.
@return true if the text node should be stripped of extra whitespace.

@throws javax.xml.transform.TransformerException
@xsl.usage advanced
"
      end

      operation 5660546 "getUniqueID"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supports the XPath function GenerateID by returning a unique
identifier string for any given DOM Node.
<p>
Warning: The base implementation uses the Node object's hashCode(),
which is NOT guaranteed to be unique. If that method hasn't been
overridden in this DOM ipmlementation, most Java implementions will
derive it from the object's address and should be OK... but if
your DOM uses a different definition of hashCode (eg hashing the
contents of the subtree), or if your DOM may have multiple objects
that represent a single Node in the data structure (eg via proxying),
you may need to find another way to assign a unique identifier.
<p>
Also, be aware that if nodes are destroyed and recreated, there is
an open issue regarding whether an ID may be reused. Currently
we're assuming that the input document is stable for the duration
of the XPath/XSLT operation, so this shouldn't arise in this context.
<p>
(DOM Level 3 is investigating providing a unique node \"key\", but
that won't help Level 1 and Level 2 implementations.)

@param node whose identifier you want to obtain

@return a string which should be different for every Node object.
"
      end

      operation 5660674 "isNodeAfter"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "node1" type class_ref 317570 // Node
	  param inout name "node2" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Figure out whether node2 should be considered as being later
in the document than node1, in Document Order as defined
by the XPath model. This may not agree with the ordering defined
by other XML applications.
<p>
There are some cases where ordering isn't defined, and neither are
the results of this function -- though we'll generally return true.

TODO: Make sure this does the right thing with attribute nodes!!!

@param node1 DOM Node to perform position comparison on.
@param node2 DOM Node to perform position comparison on .

@return false if node2 comes before node1, otherwise return true.
You can think of this as
<code>(node1.documentOrderPosition &lt;= node2.documentOrderPosition)</code>.
"
      end

      operation 5660802 "isNodeTheSame"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "node1" type class_ref 317570 // Node
	  param inout name "node2" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end isNodeAfter(Node node1, Node node2)

Use DTMNodeProxy to determine whether two nodes are the same.

@param node1 The first DOM node to compare.
@param node2 The second DOM node to compare.
@return true if the two nodes are the same.
"
      end

      operation 5660930 "isNodeAfterSibling"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "child1" type class_ref 317570 // Node
	  param inout name "child2" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Figure out if child2 is after child1 in document order.
<p>
Warning: Some aspects of \"document order\" are not well defined.
For example, the order of attributes is considered
meaningless in XML, and the order reported by our model will
be consistant for a given invocation but may not
match that of either the source file or the serialized output.

@param parent Must be the parent of both child1 and child2.
@param child1 Must be the child of parent and not equal to child2.
@param child2 Must be the child of parent and not equal to child1.
@return true if child 2 is after child1 in document order.
"
      end

      operation 5661058 "getLevel"
	public explicit_return_type "short"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end isNodeAfterSibling(Node parent, Node child1, Node child2)
==========================================================
 SECTION: Namespace resolution
==========================================================

Get the depth level of this node in the tree (equals 1 for
a parentless node).

@param n Node to be examined.
@return the number of ancestors, plus one
@xsl.usage internal
"
      end

      operation 5661186 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an XML Namespace prefix and a context in which the prefix
is to be evaluated, return the Namespace Name this prefix was
bound to. Note that DOM Level 3 is expected to provide a version of
this which deals with the DOM's \"early binding\" behavior.

Default handling:

@param prefix String containing namespace prefix to be resolved,
without the ':' which separates it from the localname when used
in a Node Name. The empty sting signifies the default namespace
at this point in the document.
@param namespaceContext Element which provides context for resolution.
(We could extend this to work for other nodes by first seeking their
nearest Element ancestor.)

@return a String containing the Namespace URI which this prefix
represents in the specified context.
"
      end

      classrelation 2549122 // m_NSInfos (<unidirectional association>)
	relation 2549122 --->
	  a role_name "m_NSInfos" init_value " new HashMap<>()" package
	    comment "
An experiment for the moment.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Node, NSInfo> ${name}${value};
"
	    classrelation_ref 2549122 // m_NSInfos (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2549250 // m_NSInfoUnProcWithXMLNS (<unidirectional association>)
	relation 2549250 --->
	  a role_name "m_NSInfoUnProcWithXMLNS" init_value " new NSInfo(false,
                                                            true)" class_relation const_relation protected
	    comment " Object to put into the m_NSInfos table that tells that a node has not been
 processed, but has xmlns namespace decls.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2549250 // m_NSInfoUnProcWithXMLNS (<unidirectional association>)
	  b parent class_ref 796418 // NSInfo
      end

      classrelation 2549378 // m_NSInfoUnProcWithoutXMLNS (<unidirectional association>)
	relation 2549378 --->
	  a role_name "m_NSInfoUnProcWithoutXMLNS" init_value " new NSInfo(false,
                                                               false)" class_relation const_relation protected
	    comment " Object to put into the m_NSInfos table that tells that a node has not been
 processed, but has no xmlns namespace decls.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2549378 // m_NSInfoUnProcWithoutXMLNS (<unidirectional association>)
	  b parent class_ref 796418 // NSInfo
      end

      classrelation 2549506 // m_NSInfoUnProcNoAncestorXMLNS (<unidirectional association>)
	relation 2549506 --->
	  a role_name "m_NSInfoUnProcNoAncestorXMLNS" init_value "
    new NSInfo(false, false, NSInfo.ANCESTORNOXMLNS)" class_relation const_relation protected
	    comment " Object to put into the m_NSInfos table that tells that a node has not been
 processed, and has no xmlns namespace decls, and has no ancestor decls.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2549506 // m_NSInfoUnProcNoAncestorXMLNS (<unidirectional association>)
	  b parent class_ref 796418 // NSInfo
      end

      classrelation 2549634 // m_NSInfoNullWithXMLNS (<unidirectional association>)
	relation 2549634 --->
	  a role_name "m_NSInfoNullWithXMLNS" init_value " new NSInfo(true,
                                                          true)" class_relation const_relation protected
	    comment " Object to put into the m_NSInfos table that tells that a node has been
 processed, and has xmlns namespace decls.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2549634 // m_NSInfoNullWithXMLNS (<unidirectional association>)
	  b parent class_ref 796418 // NSInfo
      end

      classrelation 2549762 // m_NSInfoNullWithoutXMLNS (<unidirectional association>)
	relation 2549762 --->
	  a role_name "m_NSInfoNullWithoutXMLNS" init_value " new NSInfo(true,
                                                             false)" class_relation const_relation protected
	    comment " Object to put into the m_NSInfos table that tells that a node has been
 processed, and has no xmlns namespace decls.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2549762 // m_NSInfoNullWithoutXMLNS (<unidirectional association>)
	  b parent class_ref 796418 // NSInfo
      end

      classrelation 2549890 // m_NSInfoNullNoAncestorXMLNS (<unidirectional association>)
	relation 2549890 --->
	  a role_name "m_NSInfoNullNoAncestorXMLNS" init_value "
    new NSInfo(true, false, NSInfo.ANCESTORNOXMLNS)" class_relation const_relation protected
	    comment " Object to put into the m_NSInfos table that tells that a node has been
 processed, and has no xmlns namespace decls. and has no ancestor decls.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2549890 // m_NSInfoNullNoAncestorXMLNS (<unidirectional association>)
	  b parent class_ref 796418 // NSInfo
      end

      classrelation 2550018 // m_candidateNoAncestorXMLNS (<unidirectional association>)
	relation 2550018 --->
	  a role_name "m_candidateNoAncestorXMLNS" init_value " new Vector()" protected
	    comment " Vector of node (odd indexes) and NSInfos (even indexes) that tell if
 the given node is a candidate for ancestor namespace processing.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2550018 // m_candidateNoAncestorXMLNS (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 5661314 "getNamespaceOfNode"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the namespace of the given node. Differs from simply getting
the node's prefix and using getNamespaceForPrefix in that it attempts
to cache some of the data in NSINFO objects, to avoid repeated lookup.
TODO: Should we consider moving that logic into getNamespaceForPrefix?

@param n Node to be examined.

@return String containing the Namespace Name (uri) for this node.
Note that this is undefined for any nodes other than Elements and
Attributes.
"
      end

      operation 5661442 "getLocalNameOfNode"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of the given node. If the node's name begins
with a namespace prefix, this is the part after the colon; otherwise
it's the full node name.

@param n the node to be examined.

@return String containing the Local Name
"
      end

      operation 5661570 "getExpandedElementName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element name with the namespace prefix (if any) replaced
by the Namespace URI it was bound to. This is not a standard
representation of a node name, but it allows convenient
single-string comparison of the \"universal\" names of two nodes.

@param elem Element to be examined.

@return String in the form \"namespaceURI:localname\" if the node
belongs to a namespace, or simply \"localname\" if it doesn't.
@see #getExpandedAttributeName
"
      end

      operation 5661698 "getExpandedAttributeName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "attr" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the attribute name with the namespace prefix (if any) replaced
by the Namespace URI it was bound to. This is not a standard
representation of a node name, but it allows convenient
single-string comparison of the \"universal\" names of two nodes.

@param attr Attr to be examined

@return String in the form \"namespaceURI:localname\" if the node
belongs to a namespace, or simply \"localname\" if it doesn't.
@see #getExpandedElementName
"
      end

      operation 5661826 "isIgnorableWhitespace"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 649090 // Text
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "==========================================================
 SECTION: DOM Helper Functions
==========================================================

Tell if the node is ignorable whitespace. Note that this can
be determined only in the context of a DTD or other Schema,
and that DOM Level 2 has nostandardized DOM API which can
return that information.
@deprecated

@param node Node to be examined

@return CURRENTLY HARDCODED TO FALSE, but should return true if
and only if the node is of type Text, contains only whitespace,
and does not appear as part of the #PCDATA content of an element.
(Note that determining this last may require allowing for
Entity References.)
"
      end

      operation 5661954 "getRoot"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the first unparented node in the ancestor chain.
@deprecated

@param node Starting node, to specify which chain to chase

@return the topmost ancestor.
"
      end

      operation 5662082 "getRootNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the root node of the document tree, regardless of
whether or not the node passed in is a document node.
<p>
TODO: This doesn't handle DocumentFragments or \"orphaned\" subtrees
-- it's currently returning ownerDocument even when the tree is
not actually part of the main Document tree. We should either
rewrite the description to say that it finds the Document node,
or change the code to walk up the ancestor chain.


@param n Node to be examined

@return the Document node. Note that this is not the correct answer
if n was (or was a child of) a DocumentFragment or an orphaned node,
as can arise if the DOM has been edited rather than being generated
by a parser.
"
      end

      operation 5662210 "isNamespaceNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether the given node is a namespace decl node. In DOM Level 2
this can be done in a namespace-aware manner, but in Level 1 DOMs
it has to be done by testing the node name.

@param n Node to be examined.

@return boolean -- true iff the node is an Attr whose name is
\"xmlns\" or has the \"xmlns:\" prefix.
"
      end

      operation 5662338 "getParentOfNode"
	class_operation public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 214786 // RuntimeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the XPath-model parent of a DOM node -- ownerElement for Attrs,
parent for other nodes.
<p>
Background: The DOM believes that you must be your Parent's
Child, and thus Attrs don't have parents. XPath said that Attrs
do have their owning Element as their parent. This function
bridges the difference, either by using the DOM Level 2 ownerElement
function or by using a \"silly and expensive function\" in Level 1
DOMs.
<p>
(There's some discussion of future DOMs generalizing ownerElement
into ownerNode and making it work on all types of nodes. This
still wouldn't help the users of Level 1 or Level 2 DOMs)
<p>

@param node Node whose XPath parent we want to obtain

@return the parent of the node, or the ownerElement if it's an
Attr node, or null if the node is an orphan.

@throws RuntimeException if the Document has no root element.
This can't arise if the Document was created
via the DOM Level 2 factory methods, but is possible if other
mechanisms were used to obtain it
"
      end

      operation 5662466 "getElementByID"
	public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "id" type class_ref 128130 // String
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an ID, return the element. This can work only if the document
is interpreted in the context of a DTD or Schema, since otherwise
we don't know which attributes are or aren't IDs.
<p>
Note that DOM Level 1 had no ability to retrieve this information.
DOM Level 2 introduced it but does not promise that it will be
supported in all DOMs; those which can't support it will always
return null.
<p>
TODO: getElementByID is currently unimplemented. Support DOM Level 2?

@param id The unique identifier to be searched for.
@param doc The document to search within.
@return CURRENTLY HARDCODED TO NULL, but it should be:
The node which has this unique identifier, or null if there
is no such node or this DOM can't reliably recognize it.
"
      end

      operation 5662594 "getUnparsedEntityURI"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The getUnparsedEntityURI function returns the URI of the unparsed
entity with the specified name in the same document as the context
node (see [3.3 Unparsed Entities]). It returns the empty string if
there is no such entity.
<p>
XML processors may choose to use the System Identifier (if one
is provided) to resolve the entity, rather than the URI in the
Public Identifier. The details are dependent on the processor, and
we would have to support some form of plug-in resolver to handle
this properly. Currently, we simply return the System Identifier if
present, and hope that it a usable URI or that our caller can
map it to one.
TODO: Resolve Public Identifiers... or consider changing function name.
<p>
If we find a relative URI
reference, XML expects it to be resolved in terms of the base URI
of the document. The DOM doesn't do that for us, and it isn't
entirely clear whether that should be done here; currently that's
pushed up to a higher levelof our application. (Note that DOM Level
1 didn't store the document's base URI.)
TODO: Consider resolving Relative URIs.
<p>
(The DOM's statement that \"An XML processor may choose to
completely expand entities before the structure model is passed
to the DOM\" refers only to parsed entities, not unparsed, and hence
doesn't affect this function.)

@param name A string containing the Entity Name of the unparsed
entity.
@param doc Document node for the document to be searched.

@return String containing the URI of the Unparsed Entity, or an
empty string if no such entity exists.
"
      end

      operation 5662722 "locateAttrParent"
	class_operation private return_type class_ref 317570 // Node
	nparams 2
	  param inout name "elem" type class_ref 648194 // Element
	  param inout name "attr" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for getParentOfNode; walks a DOM tree until it finds
the Element which owns the Attr. This is hugely expensive, and
if at all possible you should use the DOM Level 2 Attr.ownerElement()
method instead.
 <p>
The DOM Level 1 developers expected that folks would keep track
of the last Element they'd seen and could recover the info from
that source. Obviously that doesn't work very well if the only
information you've been presented with is the Attr. The DOM Level 2
getOwnerElement() method fixes that, but only for Level 2 and
later DOMs.

@param elem Element whose subtree is to be searched for this Attr
@param attr Attr whose owner is to be located.

@return the first Element whose attribute list includes the provided
attr. In modern DOMs, this will also be the only such Element. (Early
DOMs had some hope that Attrs might be sharable, but this idea has
been abandoned.)
"
      end

      classrelation 2550146 // m_DOMFactory (<unidirectional association>)
	relation 2550146 --->
	  a role_name "m_DOMFactory" init_value " null" protected
	    comment "
The factory object used for creating nodes
in the result tree.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2550146 // m_DOMFactory (<unidirectional association>)
	  b parent class_ref 378626 // Document
      end

      operation 5662850 "setDOMFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "domFactory" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Store the factory object required to create DOM nodes
in the result tree. In fact, that's just the result tree's
Document node...

@param domFactory The DOM Document Node within whose context
the result tree will be built.
"
      end

      operation 5662978 "getDOMFactory"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the factory object required to create DOM nodes
in the result tree.

@return The result tree's DOM Document Node.
"
      end

      operation 5663106 "getNodeData"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the textual contents of the node. See
getNodeData(Node,FastStringBuffer) for discussion of how
whitespace nodes are handled.

@param node DOM Node to be examined
@return String containing a concatenation of all the
textual content within that node.
@see #getNodeData(Node,FastStringBuffer)

"
      end

      operation 5663234 "getNodeData"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "buf" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the text content of a DOM subtree, appending it into a
user-supplied FastStringBuffer object. Note that attributes are
not considered part of the content of an element.
<p>
There are open questions regarding whitespace stripping.
Currently we make no special effort in that regard, since the standard
DOM doesn't yet provide DTD-based information to distinguish
whitespace-in-element-context from genuine #PCDATA. Note that we
should probably also consider xml:space if/when we address this.
DOM Level 3 may solve the problem for us.

@param node Node whose subtree is to be walked, gathering the
contents of all Text or CDATASection nodes.
@param buf FastStringBuffer into which the contents of the text
nodes are to be concatenated.
"
      end
    end

    class 796034 "CharKey"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple class for fast lookup of char values, when used with
hashtables.  You can set the char, then use it as a key.
@xsl.usage internal
"
      classrelation 2548610 // <generalisation>
	relation 2548610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2548610 // <generalisation>
	  b parent class_ref 129538 // Object
      end

      attribute 1226114 "m_char"
	private explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " String value          
"
      end

      operation 5657730 "CharKey"
	public explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor CharKey

@param key char value of this object.
"
      end

      operation 5657858 "CharKey"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor for a CharKey.
"
      end

      operation 5657986 "setChar"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the hash value of the character.

@return hash value of the character.
"
      end

      operation 5658114 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the hash value of the character.

@return hash value of the character.
"
      end

      operation 5658242 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override of equals() for this object

@param obj to compare to

@return True if this object equals this string value
"
      end
    end

    class 796162 "DefaultErrorHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implement SAX error handler for default reporting.
@xsl.usage general
"
      classrelation 2548738 // <realization>
	relation 2548738 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2548738 // <realization>
	  b parent class_ref 618114 // ErrorHandler
      end

      classrelation 2548866 // <realization>
	relation 2548866 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2548866 // <realization>
	  b parent class_ref 583170 // ErrorListener
      end

      classrelation 2548994 // m_pw (<unidirectional association>)
	relation 2548994 --->
	  a role_name "m_pw" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2548994 // m_pw (<unidirectional association>)
	  b parent class_ref 195330 // PrintWriter
      end

      attribute 1226242 "m_throwExceptionOnError"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "if this flag is set to true, we will rethrow the exception on
the error() and fatalError() methods. If it is false, the errors
are reported to System.err.

"
      end

      operation 5658370 "DefaultErrorHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "pw" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor DefaultErrorHandler
"
      end

      operation 5658498 "DefaultErrorHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "pw" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor DefaultErrorHandler
"
      end

      operation 5658626 "DefaultErrorHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor DefaultErrorHandler
"
      end

      operation 5658754 "DefaultErrorHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "throwExceptionOnError" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor DefaultErrorHandler
"
      end

      operation 5658882 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a warning.

<p>SAX parsers will use this method to report conditions that
are not errors or fatal errors as defined by the XML 1.0
recommendation.  The default behaviour is to take no action.</p>

<p>The SAX parser must continue to provide normal parsing events
after invoking this method: it should still be possible for the
application to process the document through to the end.</p>

@param exception The warning information encapsulated in a
                 SAX parse exception.
@throws SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5659010 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a recoverable error.

<p>This corresponds to the definition of \"error\" in section 1.2
of the W3C XML 1.0 Recommendation.  For example, a validating
parser would use this callback to report the violation of a
validity constraint.  The default behaviour is to take no
action.</p>

<p>The SAX parser must continue to provide normal parsing events
after invoking this method: it should still be possible for the
application to process the document through to the end.  If the
application cannot do so, then the parser should report a fatal
error even if the XML 1.0 recommendation does not require it to
do so.</p>

@param exception The error information encapsulated in a
                 SAX parse exception.
@throws SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5659138 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a non-recoverable error.

<p>This corresponds to the definition of \"fatal error\" in
section 1.2 of the W3C XML 1.0 Recommendation.  For example, a
parser would use this callback to report the violation of a
well-formedness constraint.</p>

<p>The application must assume that the document is unusable
after the parser has invoked this method, and should continue
(if at all) only for the sake of collecting addition error
messages: in fact, SAX parsers are free to stop reporting any
other events once this method has been invoked.</p>

@param exception The error information encapsulated in a
                 SAX parse exception.
@throws SAXException Any SAX exception, possibly
           wrapping another exception.
"
      end

      operation 5659266 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a warning.

<p>SAX parsers will use this method to report conditions that
are not errors or fatal errors as defined by the XML 1.0
recommendation.  The default behaviour is to take no action.</p>

<p>The SAX parser must continue to provide normal parsing events
after invoking this method: it should still be possible for the
application to process the document through to the end.</p>

@param exception The warning information encapsulated in a
                 SAX parse exception.
@throws javax.xml.transform.TransformerException Any SAX exception, possibly
           wrapping another exception.
@see javax.xml.transform.TransformerException
"
      end

      operation 5659394 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a recoverable error.

<p>This corresponds to the definition of \"error\" in section 1.2
of the W3C XML 1.0 Recommendation.  For example, a validating
parser would use this callback to report the violation of a
validity constraint.  The default behaviour is to take no
action.</p>

<p>The SAX parser must continue to provide normal parsing events
after invoking this method: it should still be possible for the
application to process the document through to the end.  If the
application cannot do so, then the parser should report a fatal
error even if the XML 1.0 recommendation does not require it to
do so.</p>

@param exception The error information encapsulated in a
                 SAX parse exception.
@throws javax.xml.transform.TransformerException Any SAX exception, possibly
           wrapping another exception.
@see javax.xml.transform.TransformerException
"
      end

      operation 5659522 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a non-recoverable error.

<p>This corresponds to the definition of \"fatal error\" in
section 1.2 of the W3C XML 1.0 Recommendation.  For example, a
parser would use this callback to report the violation of a
well-formedness constraint.</p>

<p>The application must assume that the document is unusable
after the parser has invoked this method, and should continue
(if at all) only for the sake of collecting addition error
messages: in fact, SAX parsers are free to stop reporting any
other events once this method has been invoked.</p>

@param exception The error information encapsulated in a
                 SAX parse exception.
@throws javax.xml.transform.TransformerException Any SAX exception, possibly
           wrapping another exception.
@see javax.xml.transform.TransformerException
"
      end

      operation 5659650 "ensureLocationSet"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5659778 "printLocation"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 128258 // PrintStream
	  param inout name "exception" type class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5659906 "printLocation"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 128258 // PrintStream
	  param inout name "exception" type class_ref 618242 // SAXParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5660034 "printLocation"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 195330 // PrintWriter
	  param inout name "exception" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 796290 "DOM2Helper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@deprecated Since the introduction of the DTM, this class will be removed.
This class provides a DOM level 2 \"helper\", which provides services currently
not provided be the DOM standard.
"
      classrelation 2550274 // <generalisation>
	relation 2550274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2550274 // <generalisation>
	  b parent class_ref 795906 // DOMHelper
      end

      operation 5663362 "DOM2Helper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an instance.
"
      end

      operation 5663490 "checkNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check node to see if it was created by a DOM implementation
that this helper is intended to support. This is currently
disabled, and assumes all nodes are acceptable rather than checking
that they implement com.sun.org.apache.xerces.internal.dom.NodeImpl.

@param node The node to be tested.

@throws TransformerException if the node is not one which this
DOM2Helper can support. If we return without throwing the exception,
the node is compatable.
@xsl.usage internal
"
      end

      operation 5663618 "supportsSAX"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the DOM implementation handled by this helper
supports the SAX ContentHandler interface.

@return true (since Xerces does).
"
      end

      classrelation 2550402 // m_doc (<unidirectional association>)
	relation 2550402 --->
	  a role_name "m_doc" private
	    comment " Field m_doc: Document Node for the document this helper is currently
accessing or building
@see #setDocument
@see #getDocument
 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2550402 // m_doc (<unidirectional association>)
	  b parent class_ref 378626 // Document
      end

      operation 5663746 "setDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify which document this helper is currently operating on.

@param doc The DOM Document node for this document.
@see #getDocument
"
      end

      operation 5663874 "getDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query which document this helper is currently operating on.

@return The DOM Document node for this document.
@see #setDocument
"
      end

      operation 5664002 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 606594 // InputSource
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse an XML document.

<p>Right now the Xerces DOMParser class is used.  This needs
fixing, either via jaxp, or via some other, standard method.</p>

<p>The application can use this method to instruct the SAX parser
to begin parsing an XML document from any valid input
source (a character stream, a byte stream, or a URI).</p>

<p>Applications may not invoke this method while a parse is in
progress (they should create a new Parser instead for each
additional XML document).  Once a parse is complete, an
application may reuse the same Parser object, possibly with a
different input source.</p>

@param source The input source for the top-level of the
       XML document.

@throws TransformerException if any checked exception is thrown.
@xsl.usage internal
"
      end

      operation 5664130 "getElementByID"
	public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "id" type class_ref 128130 // String
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an XML ID, return the element. This requires assistance from the
DOM and parser, and is meaningful only in the context of a DTD
or schema which declares attributes as being of type ID. This
information may or may not be available in all parsers, may or
may not be available for specific documents, and may or may not
be available when validation is not turned on.

@param id The ID to search for, as a String.
@param doc The document to search within, as a DOM Document node.
@return DOM Element node with an attribute of type ID whose value
uniquely matches the requested id string, or null if there isn't
such an element or if the DOM can't answer the question for other
reasons.
"
      end

      operation 5664258 "isNodeAfter"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "node1" type class_ref 317570 // Node
	  param inout name "node2" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Figure out whether node2 should be considered as being later
in the document than node1, in Document Order as defined
by the XPath model. This may not agree with the ordering defined
by other XML applications.
<p>
There are some cases where ordering isn't defined, and neither are
the results of this function -- though we'll generally return true.
<p>
TODO: Make sure this does the right thing with attribute nodes!!!

@param node1 DOM Node to perform position comparison on.
@param node2 DOM Node to perform position comparison on .

@return false if node2 comes before node1, otherwise return true.
You can think of this as
<code>(node1.documentOrderPosition &lt;= node2.documentOrderPosition)</code>.
"
      end

      operation 5664386 "getParentOfNode"
	class_operation public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XPath-model parent of a node.  This version takes advantage
of the DOM Level 2 Attr.ownerElement() method; the base version we
would otherwise inherit is prepared to fall back on exhaustively
walking the document to find an Attr's parent.

@param node Node to be examined

@return the DOM parent of the input node, if there is one, or the
ownerElement if the input node is an Attr, or null if the node is
a Document, a DocumentFragment, or an orphan.
"
      end

      operation 5664514 "getLocalNameOfNode"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of the given node, as defined by the
XML Namespaces specification. This is prepared to handle documents
built using DOM Level 1 methods by falling back upon explicitly
parsing the node name.

@param n Node to be examined

@return String containing the local name, or null if the node
was not assigned a Namespace.
"
      end

      operation 5664642 "getNamespaceOfNode"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Namespace Name (Namespace URI) for the given node.
In a Level 2 DOM, you can ask the node itself. Note, however, that
doing so conflicts with our decision in getLocalNameOfNode not
to trust the that the DOM was indeed created using the Level 2
methods. If Level 1 methods were used, these two functions will
disagree with each other.
<p>
TODO: Reconcile with getLocalNameOfNode.

@param n Node to be examined

@return String containing the Namespace URI bound to this DOM node
at the time the Node was created.
"
      end
    end

    class 796418 "NSInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class holds information about the namespace info
of a node.  It is used to optimize namespace lookup in
a generic DOM.
@xsl.usage internal
"
      operation 5684482 "NSInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "hasProcessedNS" explicit_type "boolean"
	  param inout name "hasXMLNSAttrs" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor NSInfo


@param hasProcessedNS Flag indicating whether namespaces
have been processed for this node
@param hasXMLNSAttrs Flag indicating whether this node
has XMLNS attributes.
"
      end

      operation 5684610 "NSInfo"
	public explicit_return_type ""
	nparams 3
	  param inout name "hasProcessedNS" explicit_type "boolean"
	  param inout name "hasXMLNSAttrs" explicit_type "boolean"
	  param in name "ancestorHasXMLNSAttrs" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unused at the moment

Constructor NSInfo


@param hasProcessedNS Flag indicating whether namespaces
have been processed for this node
@param hasXMLNSAttrs Flag indicating whether this node
has XMLNS attributes.
@param ancestorHasXMLNSAttrs Flag indicating whether one of this node's
ancestor has XMLNS attributes.
"
      end

      operation 5684738 "NSInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "hasXMLNSAttrs" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor NSInfo


@param namespace The namespace URI
@param hasXMLNSAttrs Flag indicating whether this node
has XMLNS attributes.
"
      end

      classrelation 2553602 // m_namespace (<unidirectional association>)
	relation 2553602 --->
	  a role_name "m_namespace" public
	    comment " The namespace URI          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2553602 // m_namespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1233410 "m_hasXMLNSAttrs"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating whether this node has an XMLNS attribute          
"
      end

      attribute 1233538 "m_hasProcessedNS"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating whether namespaces have been processed for this node 
"
      end

      attribute 1233666 "m_ancestorHasXMLNSAttrs"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating whether one of this node's ancestor has an XMLNS attribute          
"
      end

      attribute 1233794 "ANCESTORXMLNSUNPROCESSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for ancestors XMLNS atributes not processed          
"
      end

      attribute 1233922 "ANCESTORHASXMLNS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant indicating an ancestor has an XMLNS attribute           
"
      end

      attribute 1234050 "ANCESTORNOXMLNS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant indicating ancestors don't have an XMLNS attribute           
"
      end
    end

    class 796546 "DOMBuilder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class takes SAX events (in addition to some extra events
that SAX doesn't handle yet) and adds the result to a document
or document fragment.
@xsl.usage general
"
      classrelation 2550530 // <realization>
	relation 2550530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2550530 // <realization>
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2550658 // <realization>
	relation 2550658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2550658 // <realization>
	  b parent class_ref 617602 // LexicalHandler
      end

      classrelation 2550786 // m_doc (<unidirectional association>)
	relation 2550786 --->
	  a role_name "m_doc" public
	    comment " Root document          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2550786 // m_doc (<unidirectional association>)
	  b parent class_ref 378626 // Document
      end

      classrelation 2550914 // m_currentNode (<unidirectional association>)
	relation 2550914 --->
	  a role_name "m_currentNode" init_value " null" protected
	    comment " Current node           
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2550914 // m_currentNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 2551042 // m_root (<unidirectional association>)
	relation 2551042 --->
	  a role_name "m_root" init_value " null" protected
	    comment " The root node          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2551042 // m_root (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 2551170 // m_nextSibling (<unidirectional association>)
	relation 2551170 --->
	  a role_name "m_nextSibling" init_value " null" protected
	    comment " The next sibling node  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2551170 // m_nextSibling (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 2551298 // m_docFrag (<unidirectional association>)
	relation 2551298 --->
	  a role_name "m_docFrag" init_value " null" public
	    comment " First node of document fragment or null if not a DocumentFragment     
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2551298 // m_docFrag (<unidirectional association>)
	  b parent class_ref 650114 // DocumentFragment
      end

      classrelation 2551426 // m_elemStack (<unidirectional association>)
	relation 2551426 --->
	  a role_name "m_elemStack" init_value " new Stack()" protected
	    comment " Vector of element nodes          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2551426 // m_elemStack (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      operation 5664770 "DOMBuilder"
	public explicit_return_type ""
	nparams 2
	  param inout name "doc" type class_ref 378626 // Document
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOMBuilder instance constructor... it will add the DOM nodes
to the document fragment.

@param doc Root document
@param node Current node
"
      end

      operation 5664898 "DOMBuilder"
	public explicit_return_type ""
	nparams 2
	  param inout name "doc" type class_ref 378626 // Document
	  param inout name "docFrag" type class_ref 650114 // DocumentFragment
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOMBuilder instance constructor... it will add the DOM nodes
to the document fragment.

@param doc Root document
@param docFrag Document fragment
"
      end

      operation 5665026 "DOMBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOMBuilder instance constructor... it will add the DOM nodes
to the document.

@param doc Root document
"
      end

      operation 5665154 "getRootDocument"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the root document or DocumentFragment of the DOM being created.

@return The root document or document fragment if not null
"
      end

      operation 5665282 "getRootNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the root node of the DOM tree.
"
      end

      operation 5665410 "getCurrentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the node currently being processed.

@return the current node being processed
"
      end

      operation 5665538 "setNextSibling"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nextSibling" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the next sibling node, which is where the result nodes
should be inserted before.

@param nextSibling the next sibling node.
"
      end

      operation 5665666 "getNextSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the next sibling node.

@return the next sibling node.
"
      end

      operation 5665794 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return null since there is no Writer for this class.

@return null
"
      end

      operation 5665922 "append"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "newNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a node to the current container.

@param newNode New node to append
"
      end

      operation 5666050 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive an object for locating the origin of SAX document events.

<p>SAX parsers are strongly encouraged (though not absolutely
required) to supply a locator: if it does so, it must supply
the locator to the application by invoking this method before
invoking any of the other methods in the ContentHandler
interface.</p>

<p>The locator allows the application to determine the end
position of any document-related event, even if the parser is
not reporting an error.  Typically, the application will
use this information for reporting its own errors (such as
character content that does not match an application's
business rules).  The information returned by the locator
is probably not sufficient for use with a search engine.</p>

<p>Note that the locator will return correct information only
during the invocation of the events in this interface.  The
application should not attempt to use it at any other time.</p>

@param locator An object that can return the location of
               any SAX document event.
@see org.xml.sax.Locator
"
      end

      operation 5666178 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of a document.

<p>The SAX parser will invoke this method only once, before any
other methods in this interface or in DTDHandler (except for
setDocumentLocator).</p>
"
      end

      operation 5666306 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of a document.

<p>The SAX parser will invoke this method only once, and it will
be the last method invoked during the parse.  The parser shall
not invoke this method until it has either abandoned parsing
(because of an unrecoverable error) or reached the end of
input.</p>
"
      end

      operation 5666434 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of an element.

<p>The Parser will invoke this method at the beginning of every
element in the XML document; there will be a corresponding
endElement() event for every startElement() event (even when the
element is empty). All of the element's content will be
reported, in order, before the corresponding endElement()
event.</p>

<p>If the element name has a namespace prefix, the prefix will
still be attached.  Note that the attribute list provided will
contain only attributes with explicit values (specified or
defaulted): #IMPLIED attributes will be omitted.</p>


@param ns The namespace of the node
@param localName The local part of the qualified name
@param name The element name.
@param atts The attributes attached to the element, if any.
@see #endElement
@see org.xml.sax.Attributes
"
      end

      operation 5666562 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "


Receive notification of the end of an element.

<p>The SAX parser will invoke this method at the end of every
element in the XML document; there will be a corresponding
startElement() event for every endElement() event (even when the
element is empty).</p>

<p>If the element name has a namespace prefix, the prefix will
still be attached to the name.</p>


@param ns the namespace of the element
@param localName The local part of the qualified name of the element
@param name The element name
"
      end

      operation 5666690 "setIDAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" type class_ref 128130 // String
	  param inout name "elem" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an ID string to node association in the ID table.

@param id The ID string.
@param elem The associated ID.
"
      end

      operation 5666818 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@see #ignorableWhitespace
@see org.xml.sax.Locator
"
      end

      operation 5666946 "charactersRaw"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If available, when the disable-output-escaping attribute is used,
output raw text without escaping.  A PI will be inserted in front
of the node with the name \"lotusxsl-next-is-raw\" and a value of
\"formatter-to-dom\".

@param ch Array containing the characters
@param start Index to start of characters in the array
@param length Number of characters in the array
"
      end

      operation 5667074 "startEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the beginning of an entity.

The start and end of the document entity are not reported.
The start and end of the external DTD subset are reported
using the pseudo-name \"[dtd]\".  All other events must be
properly nested within start/end entity events.

@param name The name of the entity.  If it is a parameter
       entity, the name will begin with '%'.
@see #endEntity
@see org.xml.sax.ext.DeclHandler#internalEntityDecl
@see org.xml.sax.ext.DeclHandler#externalEntityDecl
"
      end

      operation 5667202 "endEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of an entity.

@param name The name of the entity that is ending.
@see #startEntity
"
      end

      operation 5667330 "entityReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notivication of a entityReference.

@param name name of the entity reference
"
      end

      operation 5667458 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of ignorable whitespace in element content.

<p>Validating Parsers must use this method to report each chunk
of ignorable whitespace (see the W3C XML 1.0 recommendation,
section 2.10): non-validating parsers may also use this method
if they are capable of parsing and using content models.</p>

<p>SAX parsers may return all contiguous whitespace in a single
chunk, or they may split it into several chunks; however, all of
the characters in any single event must come from the same
external entity, so that the Locator provides useful
information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@see #characters
"
      end

      operation 5667586 "isOutsideDocElem"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the current node is outside the document element.

@return true if the current node is outside the document element.
"
      end

      operation 5667714 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a processing instruction.

<p>The Parser will invoke this method once for each processing
instruction found: note that processing instructions may occur
before or after the main document element.</p>

<p>A SAX parser should never report an XML declaration (XML 1.0,
section 2.8) or a text declaration (XML 1.0, section 4.3.1)
using this method.</p>

@param target The processing instruction target.
@param data The processing instruction data, or null if
       none was supplied.
"
      end

      operation 5667842 "comment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report an XML comment anywhere in the document.

This callback will be used for comments inside or outside the
document element, including comments in the external DTD
subset (if read).

@param ch An array holding the characters in the comment.
@param start The starting position in the array.
@param length The number of characters to use from the array.
"
      end

      attribute 1226370 "m_inCData"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating that we are processing a CData section          
"
      end

      operation 5667970 "startCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the start of a CDATA section.

@see #endCDATA
"
      end

      operation 5668098 "endCDATA"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of a CDATA section.

@see #startCDATA
"
      end

      operation 5668226 "cdata"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of cdata.

<p>The Parser will call this method to report each chunk of
character data.  SAX parsers may return all contiguous character
data in a single chunk, or they may split it into several
chunks; however, all of the characters in any single event
must come from the same external entity, so that the Locator
provides useful information.</p>

<p>The application must not attempt to read from the array
outside of the specified range.</p>

<p>Note that some parsers will report whitespace using the
ignorableWhitespace() method rather than this one (validating
parsers must do so).</p>

@param ch The characters from the XML document.
@param start The start position in the array.
@param length The number of characters to read from the array.
@see #ignorableWhitespace
@see org.xml.sax.Locator
"
      end

      operation 5668354 "startDTD"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the start of DTD declarations, if any.

Any declarations are assumed to be in the internal subset
unless otherwise indicated.

@param name The document type name.
@param publicId The declared public identifier for the
       external DTD subset, or null if none was declared.
@param systemId The declared system identifier for the
       external DTD subset, or null if none was declared.
@see #endDTD
@see #startEntity
"
      end

      operation 5668482 "endDTD"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the end of DTD declarations.

@see #startDTD
"
      end

      operation 5668610 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the scope of a prefix-URI Namespace mapping.

<p>The information from this event is not necessary for
normal Namespace processing: the SAX XML reader will
automatically replace prefixes for element and attribute
names when the http://xml.org/sax/features/namespaces
feature is true (the default).</p>

<p>There are cases, however, when applications need to
use prefixes in character data or in attribute values,
where they cannot safely be expanded automatically; the
start/endPrefixMapping event supplies the information
to the application to expand prefixes in those contexts
itself, if necessary.</p>

<p>Note that start/endPrefixMapping events are not
guaranteed to be properly nested relative to each-other:
all startPrefixMapping events will occur before the
corresponding startElement event, and all endPrefixMapping
events will occur after the corresponding endElement event,
but their order is not guaranteed.</p>

@param prefix The Namespace prefix being declared.
@param uri The Namespace URI the prefix is mapped to.
@see #endPrefixMapping
@see #startElement
"
      end

      operation 5668738 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End the scope of a prefix-URI mapping.

<p>See startPrefixMapping for details.  This event will
always occur after the corresponding endElement event,
but the order of endPrefixMapping events is not otherwise
guaranteed.</p>

@param prefix The prefix that was being mapping.
@see #startPrefixMapping
@see #endElement
"
      end

      operation 5668866 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a skipped entity.

<p>The Parser will invoke this method once for each entity
skipped.  Non-validating processors may skip entities if they
have not seen the declarations (because, for example, the
entity was declared in an external DTD subset).  All processors
may skip external entities, depending on the values of the
http://xml.org/sax/features/external-general-entities and the
http://xml.org/sax/features/external-parameter-entities
properties.</p>

@param name The name of the skipped entity.  If it is a
       parameter entity, the name will begin with '%'.
"
      end
    end

    class 796674 "DOMOrder"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@deprecated Since the introduction of the DTM, this class will be removed.
Nodes that implement this index can return a document order index.
Eventually, this will be replaced by DOM 3 methods.
(compareDocumentOrder and/or compareTreePosition.)
"
      operation 5668994 "getUid"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the UID (document order index).

@return integer whose relative value corresponds to document order
-- that is, if node1.getUid()<node2.getUid(), node1 comes before
node2, and if they're equal node1 and node2 are the same node. No
promises are made beyond that.
"
      end
    end

    class 796802 "ElemDesc"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is in support of SerializerToHTML, and acts as a sort
of element representative for HTML elements.
@xsl.usage internal
"
      classrelation 2551554 // m_attrs (<unidirectional association>)
	relation 2551554 --->
	  a role_name "m_attrs" init_value " null" package
	    comment " Table of attributes for the element 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2551554 // m_attrs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1226498 "m_flags"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Element's flags, describing the role this element plays during
formatting of the document. This is used as a bitvector; more than one flag
may be set at a time, bitwise-ORed together. Mnemonic and bits
have been assigned to the flag values. NOTE: Some bits are
currently assigned multiple mnemonics; it is the caller's
responsibility to disambiguate these if necessary. 
"
      end

      attribute 1226626 "EMPTY"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the EMPTY flag 
"
      end

      attribute 1226754 "FLOW"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the FLOW flag  
"
      end

      attribute 1226882 "BLOCK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 3)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the BLOCK flag          
"
      end

      attribute 1227010 "BLOCKFORM"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the BLOCKFORM  flag         
"
      end

      attribute 1227138 "BLOCKFORMFIELDSET"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 5)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the BLOCKFORMFIELDSET flag          
"
      end

      attribute 1227266 "CDATA"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 6)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the CDATA flag         
"
      end

      attribute 1227394 "PCDATA"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 7)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the PCDATA flag          
"
      end

      attribute 1227522 "RAW"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 8)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the RAW flag         
"
      end

      attribute 1227650 "INLINE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 9)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the INLINE flag          
"
      end

      attribute 1227778 "INLINEA"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 10)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the INLINEA flag          
"
      end

      attribute 1227906 "INLINELABEL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 11)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the INLINELABEL flag          
"
      end

      attribute 1228034 "FONTSTYLE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 12)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the FONTSTYLE flag          
"
      end

      attribute 1228162 "PHRASE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 13)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the PHRASE flag          
"
      end

      attribute 1228290 "FORMCTRL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 14)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the FORMCTRL flag         
"
      end

      attribute 1228418 "SPECIAL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 15)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the SPECIAL flag         
"
      end

      attribute 1228546 "ASPECIAL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 16)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the ASPECIAL flag         
"
      end

      attribute 1228674 "HEADMISC"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 17)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the HEADMISC flag         
"
      end

      attribute 1228802 "HEAD"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 18)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the HEAD flag         
"
      end

      attribute 1228930 "LIST"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 19)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the LIST flag         
"
      end

      attribute 1229058 "PREFORMATTED"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 20)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the PREFORMATTED flag         
"
      end

      attribute 1229186 "WHITESPACESENSITIVE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 21)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the WHITESPACESENSITIVE flag         
"
      end

      attribute 1229314 "ATTRURL"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the ATTRURL flag         
"
      end

      attribute 1229442 "ATTREMPTY"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines mnemonic and bit-value for the ATTREMPTY flag         
"
      end

      operation 5669122 "ElemDesc"
	package explicit_return_type ""
	nparams 1
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an ElementDescription with an initial set of flags.

@param flags Element flags
@see m_flags
"
      end

      operation 5669250 "is"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "\"is (this element described by these flags)\".

This might more properly be called areFlagsSet(). It accepts an
integer (being used as a bitvector) and checks whether all the
corresponding bits are set in our internal flags. Note that this
test is performed as a bitwise AND, not an equality test, so a
0 bit in the input means \"don't test\", not \"must be set false\".

@param flags Vector of flags to compare against this element's flags

@return true if the flags set in the parameter are also set in the
element's stored flags.

@see m_flags
@see isAttrFlagSet
"
      end

      operation 5669378 "setAttr"
	package explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a new attribute for this element


@param name Attribute name
@param flags Attibute flags
"
      end

      operation 5669506 "isAttrFlagSet"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find out if a flag is set in a given attribute of this element


@param name Attribute name
@param flags Flag to check

@return True if the flag is set in the attribute. Returns false
if the attribute is not found
@see m_flags
"
      end
    end

    class 796930 "Hashtree2Node"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple static utility to convert Hashtable to a Node.

Please maintain JDK 1.1.x compatibility; no Collections!

@see com.sun.org.apache.xalan.internal.xslt.EnvironmentCheck
@see com.sun.org.apache.xalan.internal.lib.Extensions
@author shane_curcuru@us.ibm.com
@xsl.usage general
"
      operation 5673218 "appendHashToNode"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "hash" type class_ref 137090 // Hashtable
	  param inout name "name" type class_ref 128130 // String
	  param inout name "container" type class_ref 317570 // Node
	  param inout name "factory" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a Hashtable into a Node tree.

<p>The hash may have either Hashtables as values (in which
case we recurse) or other values, in which case we print them
as &lt;item> elements, with a 'key' attribute with the value
of the key, and the element contents as the value.</p>

<p>If args are null we simply return without doing anything.
If we encounter an error, we will attempt to add an 'ERROR'
Element with exception info; if that doesn't work we simply
return without doing anything else byt printStackTrace().</p>

@param hash to get info from (may have sub-hashtables)
@param name to use as parent element for appended node
futurework could have namespace and prefix as well
@param container Node to append our report to
@param factory Document providing createElement, etc. services
"
      end
    end

    class 797058 "ListingErrorHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Sample implementation of similar SAX ErrorHandler and JAXP ErrorListener.

<p>This implementation is suitable for various use cases, and
provides some basic configuration API's as well to control
when we re-throw errors, etc.</p>

@author shane_curcuru@us.ibm.com
@xsl.usage general
"
      classrelation 2552066 // <realization>
	relation 2552066 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2552066 // <realization>
	  b parent class_ref 618114 // ErrorHandler
      end

      classrelation 2552194 // <realization>
	relation 2552194 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2552194 // <realization>
	  b parent class_ref 583170 // ErrorListener
      end

      classrelation 2552322 // m_pw (<unidirectional association>)
	relation 2552322 --->
	  a role_name "m_pw" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2552322 // m_pw (<unidirectional association>)
	  b parent class_ref 195330 // PrintWriter
      end

      operation 5677442 "ListingErrorHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "pw" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor ListingErrorHandler; user-supplied PrintWriter.
"
      end

      operation 5677570 "ListingErrorHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor ListingErrorHandler; uses System.err.
"
      end

      operation 5677698 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ======== Implement org.xml.sax.ErrorHandler ======== 

Receive notification of a warning.

<p>SAX parsers will use this method to report conditions that
are not errors or fatal errors as defined by the XML 1.0
recommendation.  The default behaviour is to take no action.</p>

<p>The SAX parser must continue to provide normal parsing events
after invoking this method: it should still be possible for the
application to process the document through to the end.</p>

<p>Filters may use this method to report other, non-XML warnings
as well.</p>

@param exception The warning information encapsulated in a
                 SAX parse exception.
@exception org.xml.sax.SAXException Any SAX exception, possibly
wrapping another exception; only if setThrowOnWarning is true.
@see org.xml.sax.SAXParseException
"
      end

      operation 5677826 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a recoverable error.

<p>This corresponds to the definition of \"error\" in section 1.2
of the W3C XML 1.0 Recommendation.  For example, a validating
parser would use this callback to report the violation of a
validity constraint.  The default behaviour is to take no
action.</p>

<p>The SAX parser must continue to provide normal parsing events
after invoking this method: it should still be possible for the
application to process the document through to the end.  If the
application cannot do so, then the parser should report a fatal
error even if the XML 1.0 recommendation does not require it to
do so.</p>

<p>Filters may use this method to report other, non-XML errors
as well.</p>

@param exception The error information encapsulated in a
                 SAX parse exception.
@exception org.xml.sax.SAXException Any SAX exception, possibly
wrapping another exception; only if setThrowOnErroris true.
@see org.xml.sax.SAXParseException
"
      end

      operation 5677954 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 618242 // SAXParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a non-recoverable error.

<p>This corresponds to the definition of \"fatal error\" in
section 1.2 of the W3C XML 1.0 Recommendation.  For example, a
parser would use this callback to report the violation of a
well-formedness constraint.</p>

<p>The application must assume that the document is unusable
after the parser has invoked this method, and should continue
(if at all) only for the sake of collecting addition error
messages: in fact, SAX parsers are free to stop reporting any
other events once this method has been invoked.</p>

@param exception The error information encapsulated in a
                 SAX parse exception.
@exception org.xml.sax.SAXException Any SAX exception, possibly
wrapping another exception; only if setThrowOnFatalError is true.
@see org.xml.sax.SAXParseException
"
      end

      operation 5678082 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ======== Implement javax.xml.transform.ErrorListener ======== 

Receive notification of a warning.

<p>{@link javax.xml.transform.Transformer} can use this method to report
conditions that are not errors or fatal errors.  The default behaviour
is to take no action.</p>

<p>After invoking this method, the Transformer must continue with
the transformation. It should still be possible for the
application to process the document through to the end.</p>

@param exception The warning information encapsulated in a
                 transformer exception.

@throws javax.xml.transform.TransformerException  only if
setThrowOnWarning is true.

@see javax.xml.transform.TransformerException
"
      end

      operation 5678210 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a recoverable error.

<p>The transformer must continue to try and provide normal transformation
after invoking this method.  It should still be possible for the
application to process the document through to the end if no other errors
are encountered.</p>

@param exception The error information encapsulated in a
                 transformer exception.

@throws javax.xml.transform.TransformerException  only if
setThrowOnError is true.

@see javax.xml.transform.TransformerException
"
      end

      operation 5678338 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 583554 // TransformerException
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a non-recoverable error.

<p>The transformer must continue to try and provide normal transformation
after invoking this method.  It should still be possible for the
application to process the document through to the end if no other errors
are encountered, but there is no guarantee that the output will be
useable.</p>

@param exception The error information encapsulated in a
                 transformer exception.

@throws javax.xml.transform.TransformerException  only if
setThrowOnError is true.

@see javax.xml.transform.TransformerException
"
      end

      operation 5678466 "logExceptionLocation"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 195330 // PrintWriter
	  param inout name "exception" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ======== Implement worker methods ======== 

Print out location information about the exception.

Cribbed from DefaultErrorHandler.printLocation()
@param pw PrintWriter to send output to
@param exception TransformerException or SAXParseException
to log information about
"
      end

      operation 5678594 "logSourceLine"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 195330 // PrintWriter
	  param inout name "locator" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print out the specific source line that caused the exception,
if possible to load it.

@param pw PrintWriter to send output to
@param locator Xalan wrapper for either a JAXP or a SAX
source location object
"
      end

      operation 5678722 "getSourceLine"
	class_operation protected return_type class_ref 128130 // String
	nparams 2
	  param inout name "sourceUrl" type class_ref 128130 // String
	  param in name "lineNum" explicit_type "int"
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the specific source line that caused the exception,
if possible to load it; allow exceptions to be thrown.

@author shane_curcuru@us.ibm.com
"
      end

      operation 5678850 "setThrowOnWarning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ======== Implement settable properties ======== 

User-settable behavior: when to re-throw exceptions.

<p>This allows per-instance configuration of
ListingErrorHandlers.  You can ask us to either throw
an exception when we're called for various warning /
error / fatalErrors, or simply log them and continue.</p>

@param b if we should throw an exception on warnings
"
      end

      operation 5678978 "getThrowOnWarning"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "User-settable behavior: when to re-throw exceptions.

@return if we throw an exception on warnings
"
      end

      attribute 1232002 "throwOnWarning"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If we should throw exception on warnings; default:false.  
"
      end

      operation 5679106 "setThrowOnError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "User-settable behavior: when to re-throw exceptions.

<p>This allows per-instance configuration of
ListingErrorHandlers.  You can ask us to either throw
an exception when we're called for various warning /
error / fatalErrors, or simply log them and continue.</p>

<p>Note that the behavior of many parsers/transformers
after an error is not necessarily defined!</p>

@param b if we should throw an exception on errors
"
      end

      operation 5679234 "getThrowOnError"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "User-settable behavior: when to re-throw exceptions.

@return if we throw an exception on errors
"
      end

      attribute 1232130 "throwOnError"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If we should throw exception on errors; default:true.  
"
      end

      operation 5679362 "setThrowOnFatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "User-settable behavior: when to re-throw exceptions.

<p>This allows per-instance configuration of
ListingErrorHandlers.  You can ask us to either throw
an exception when we're called for various warning /
error / fatalErrors, or simply log them and continue.</p>

<p>Note that the behavior of many parsers/transformers
after a fatalError is not necessarily defined, most
products will probably barf if you continue.</p>

@param b if we should throw an exception on fatalErrors
"
      end

      operation 5679490 "getThrowOnFatalError"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "User-settable behavior: when to re-throw exceptions.

@return if we throw an exception on fatalErrors
"
      end

      attribute 1232258 "throwOnFatalError"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If we should throw exception on fatalErrors; default:true.  
"
      end
    end

    class 797186 "LocaleUtility"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Igor Hersht, igorh@ca.ibm.com
"
      attribute 1232386 "IETF_SEPARATOR"
	class_attribute const_attribute public explicit_type "char"
	init_value " '-'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "IETF RFC 1766 tag separator

"
      end

      classrelation 2552450 // EMPTY_STRING (<unidirectional association>)
	relation 2552450 --->
	  a role_name "EMPTY_STRING" init_value " \"\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2552450 // EMPTY_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5679618 "langToLocale"
	class_operation public return_type class_ref 312962 // Locale
	nparams 1
	  param inout name "lang" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 797314 "MutableAttrListImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Mutable version of AttributesImpl.
@xsl.usage advanced
"
      classrelation 2552578 // <generalisation>
	relation 2552578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2552578 // <generalisation>
	  b parent class_ref 593282 // AttributesImpl
      end

      classrelation 2552706 // <realization>
	relation 2552706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2552706 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1232514 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6289452013442934470L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5679746 "MutableAttrListImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new, empty AttributesImpl object.
"
      end

      operation 5679874 "MutableAttrListImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy an existing Attributes object.

<p>This constructor is especially useful inside a start
element event.</p>

@param atts The existing Attributes object.
"
      end

      operation 5680002 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an attribute to the end of the list.

<p>For the sake of speed, this method does no checking
to see if the attribute is already in the list: that is
the responsibility of the application.</p>

@param uri The Namespace URI, or the empty string if
       none is available or Namespace processing is not
       being performed.
@param localName The local name, or the empty string if
       Namespace processing is not being performed.
@param qName The qualified (prefixed) name, or the empty string
       if qualified names are not available.
@param type The attribute type as a string.
@param value The attribute value.
"
      end

      operation 5680130 "addAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the contents of the attribute list to this list.

@param atts List of attributes to add to this list
"
      end

      operation 5680258 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if list contains the given (raw) attribute name.

@param name Raw name of attribute to look for

@return true if an attribute is found with this name
"
      end
    end

    class 797442 "NameSpace"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of a namespace.  One of these will
be pushed on the namespace stack for each
element.
@xsl.usage advanced
"
      classrelation 2552834 // <realization>
	relation 2552834 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2552834 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1232642 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1471232939184881839L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2552962 // m_next (<unidirectional association>)
	relation 2552962 --->
	  a role_name "m_next" init_value " null" public
	    comment " Next NameSpace element on the stack.
 @serial             
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2552962 // m_next (<unidirectional association>)
	  b parent class_ref 797442 // NameSpace
      end

      classrelation 2553090 // m_prefix (<unidirectional association>)
	relation 2553090 --->
	  a role_name "m_prefix" public
	    comment " Prefix of this NameSpace element.
 @serial          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2553090 // m_prefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2553218 // m_uri (<unidirectional association>)
	relation 2553218 --->
	  a role_name "m_uri" public
	    comment " Namespace URI of this NameSpace element.
 @serial           
 if null, then Element namespace is empty."
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2553218 // m_uri (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5680386 "NameSpace"
	public explicit_return_type ""
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a namespace for placement on the
result tree namespace stack.

@param prefix Prefix of this element
@param uri URI of  this element
"
      end
    end

    class 797570 "NodeConsumer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The tree walker will test for this interface, and call
setOriginatingNode before calling the SAX event.  For creating
DOM backpointers for things that are normally created via
SAX events.
"
      operation 5680514 "setOriginatingNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the node that is originating the SAX event.

@param n Reference to node that originated the current event.
"
      end
    end

    class 797698 "ObjectPool"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Pool of object of a given type to pick from to help memory usage
@xsl.usage internal
"
      classrelation 2553730 // <realization>
	relation 2553730 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2553730 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1234178 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8519013691660936643L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2553858 // objectType (<unidirectional association>)
	relation 2553858 --->
	  a role_name "objectType" const_relation private
	    comment " Type of objects in this pool.
 @serial          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2553858 // objectType (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 2553986 // freeStack (<unidirectional association>)
	relation 2553986 --->
	  a role_name "freeStack" const_relation private
	    comment " Stack of given objects this points to.
 @serial          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2553986 // freeStack (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      operation 5684866 "ObjectPool"
	public explicit_return_type ""
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor ObjectPool

@param type Type of objects for this pool
"
      end

      operation 5684994 "ObjectPool"
	public explicit_return_type ""
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor ObjectPool

@param className Fully qualified name of the type of objects for this pool.
"
      end

      operation 5685122 "ObjectPool"
	public explicit_return_type ""
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor ObjectPool


@param type Type of objects for this pool
@param size Size of vector to allocate
"
      end

      operation 5685250 "ObjectPool"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor ObjectPool

"
      end

      operation 5685378 "getInstanceIfFree"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the given object in this pool if available


@return an instance of the given object if available or null
"
      end

      operation 5685506 "getInstance"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the given object in this pool


@return An instance of the given object
"
      end

      operation 5685634 "freeInstance"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an instance of the given object to the pool


@param obj Object to add.
"
      end
    end

    class 797826 "ObjectStack"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implement a stack of simple integers.

%OPT%
This is currently based on ObjectVector, which permits fast acess but pays a
heavy recopying penalty if/when its size is increased. If we expect deep
stacks, we should consider a version based on ChunkedObjectVector.
@xsl.usage internal
"
      classrelation 2554370 // <generalisation>
	relation 2554370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2554370 // <generalisation>
	  b parent class_ref 797954 // ObjectVector
      end

      operation 5688450 "ObjectStack"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5688578 "ObjectStack"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a ObjectVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5688706 "ObjectStack"
	public explicit_return_type ""
	nparams 1
	  param inout name "v" type class_ref 797826 // ObjectStack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor for ObjectStack

@param v ObjectStack to copy
"
      end

      operation 5688834 "push"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "i" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes an item onto the top of this stack.

@param   i   the int to be pushed onto this stack.
@return  the <code>item</code> argument.
"
      end

      operation 5688962 "pop"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns that
object as the value of this function.

@return     The object at the top of this stack.
"
      end

      operation 5689090 "quickPop"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quickly pops a number of items from the stack.
"
      end

      operation 5689218 "peek"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.

@return     the object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5689346 "peek"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the position the stack counting down n items.

@param n The number of items down, indexed from zero.
@return     the object at n items down.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5689474 "setTop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an object at a the top of the statck


@param val object to set at the top
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5689602 "empty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this stack is empty.

@return  <code>true</code> if this stack is empty;
         <code>false</code> otherwise.
@since   JDK1.0
"
      end

      operation 5689730 "search"
	public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns where an object is on this stack.

@param   o   the desired object.
@return  the distance from the top of the stack where the object is]
         located; the return value <code>-1</code> indicates that the
         object is not on the stack.
@since   JDK1.0
"
      end

      operation 5689858 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns clone of current ObjectStack

@return clone of current ObjectStack
"
      end
    end

    class 797954 "ObjectVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of objects.

This version is based on a \"realloc\" strategy -- a simle array is
used, and when more storage is needed, a larger array is obtained
and all existing data is recopied into it. As a result, read/write
access to existing nodes is O(1) fast but appending may be O(N**2)
slow.
@xsl.usage internal
"
      classrelation 2554114 // <realization>
	relation 2554114 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2554114 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1234306 "m_blocksize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate          
"
      end

      classrelation 2554242 // m_map (<unidirectional association>)
	relation 2554242 --->
	  a role_name "m_map" multiplicity "[]" protected
	    comment " Array of objects          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2554242 // m_map (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1234434 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of ints in array          
"
      end

      attribute 1234562 "m_mapSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of array          
"
      end

      operation 5685762 "ObjectVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5685890 "ObjectVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5686018 "ObjectVector"
	public explicit_return_type ""
	nparams 2
	  param in name "blocksize" explicit_type "int"
	  param in name "increaseSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5686146 "ObjectVector"
	public explicit_return_type ""
	nparams 1
	  param inout name "v" type class_ref 797954 // ObjectVector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor for ObjectVector

@param v Existing ObjectVector to copy
"
      end

      operation 5686274 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return length of the list
"
      end

      operation 5686402 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "sz" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return length of the list
"
      end

      operation 5686530 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append an object onto the vector.

@param value Object to add to the list
"
      end

      operation 5686658 "addElements"
	public explicit_return_type "void"
	nparams 2
	  param inout name "value" type class_ref 129538 // Object
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several Object values onto the vector.

@param value Object to add to the list
"
      end

      operation 5686786 "addElements"
	public explicit_return_type "void"
	nparams 1
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several slots onto the vector, but do not set the values.

@param numberOfElements number of slots to append
"
      end

      operation 5686914 "insertElementAt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "value" type class_ref 129538 // Object
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified object in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

@param value Object to insert
@param at Index of where to insert
"
      end

      operation 5687042 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all elements objects from the list.
"
      end

      operation 5687170 "removeElement"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s Object to remove from array

@return True if the object was removed, false if it was not found
"
      end

      operation 5687298 "removeElementAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param i index of where to remove an object
"
      end

      operation 5687426 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "value" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param value object to set
@param index Index of where to set the object
"
      end

      operation 5687554 "elementAt"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i index of object to get

@return object at given index
"
      end

      operation 5687682 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given Object.

@param s object to look for

@return true if the object is in the list
"
      end

      operation 5687810 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elem" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@param index Index of where to begin search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5687938 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elem" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5688066 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elem" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5688194 "setToSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the array to the supplied size.

@param size
"
      end

      operation 5688322 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns clone of current ObjectVector

@return clone of current ObjectVector
"
      end
    end

    class 798082 "PrefixResolverDefault"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a generic PrefixResolver that
can be used to perform prefix-to-namespace lookup
for the XPath object.
@xsl.usage general
"
      classrelation 2554498 // <realization>
	relation 2554498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2554498 // <realization>
	  b parent class_ref 635650 // PrefixResolver
      end

      classrelation 2554626 // m_context (<unidirectional association>)
	relation 2554626 --->
	  a role_name "m_context" package
	    comment "
The context to resolve the prefix from, if the context
is not given.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2554626 // m_context (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      operation 5690498 "PrefixResolverDefault"
	public explicit_return_type ""
	nparams 1
	  param inout name "xpathExpressionContext" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a PrefixResolverDefault object.
@param xpathExpressionContext The context from
which XPath expression prefixes will be resolved.
Warning: This will not work correctly if xpathExpressionContext
is an attribute node.
"
      end

      operation 5690626 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a namespace, get the corrisponding prefix.  This assumes that
the PrevixResolver hold's it's own namespace context, or is a namespace
context itself.
@param prefix Prefix to resolve.
@return Namespace that prefix resolves to, or null if prefix
is not bound.
"
      end

      operation 5690754 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a namespace, get the corrisponding prefix.
Warning: This will not work correctly if namespaceContext
is an attribute node.
@param prefix Prefix to resolve.
@param namespaceContext Node from which to start searching for a
xmlns attribute that binds a prefix to a namespace.
@return Namespace that prefix resolves to, or null if prefix
is not bound.
"
      end

      operation 5690882 "getBaseIdentifier"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the base identifier.

@return null
"
      end

      operation 5691010 "handlesNullPrefixes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see PrefixResolver#handlesNullPrefixes()
"
      end
    end

    class 798210 "RawCharacterHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface that a Serializer/ContentHandler/ContentHandler must
implement in order for disable-output-escaping to work.
@xsl.usage advanced
"
      operation 5694722 "charactersRaw"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serialize the characters without escaping.

@param ch Array of characters
@param start Start index of characters in the array
@param length Number of characters in the array

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 798338 "SAXSourceLocator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class SAXSourceLocator extends org.xml.sax.helpers.LocatorImpl
for the purpose of implementing the SourceLocator interface,
and thus can be both a SourceLocator and a SAX Locator.
"
      classrelation 2555778 // <generalisation>
	relation 2555778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2555778 // <generalisation>
	  b parent class_ref 792322 // LocatorImpl
      end

      classrelation 2555906 // <realization>
	relation 2555906 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2555906 // <realization>
	  b parent class_ref 617346 // SourceLocator
      end

      classrelation 2556034 // <realization>
	relation 2556034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2556034 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1235202 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3181680946321164112L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2556162 // m_locator (<unidirectional association>)
	relation 2556162 --->
	  a role_name "m_locator" package
	    comment " The SAX Locator object.
 @serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2556162 // m_locator (<unidirectional association>)
	  b parent class_ref 606082 // Locator
      end

      operation 5696130 "SAXSourceLocator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor SAXSourceLocator

"
      end

      operation 5696258 "SAXSourceLocator"
	public explicit_return_type ""
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor SAXSourceLocator


@param locator Source locator
"
      end

      operation 5696386 "SAXSourceLocator"
	public explicit_return_type ""
	nparams 1
	  param inout name "locator" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor SAXSourceLocator


@param locator Source locator
"
      end

      operation 5696514 "SAXSourceLocator"
	public explicit_return_type ""
	nparams 1
	  param inout name "spe" type class_ref 618242 // SAXParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor SAXSourceLocator


@param spe SAXParseException exception.
"
      end

      operation 5696642 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the public identifier for the current document event.

<p>The return value is the public identifier of the document
entity or of the external parsed entity in which the markup
triggering the event appears.</p>

@return A string containing the public identifier, or
        null if none is available.
@see #getSystemId
"
      end

      operation 5696770 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the system identifier for the current document event.

<p>The return value is the system identifier of the document
entity or of the external parsed entity in which the markup
triggering the event appears.</p>

<p>If the system identifier is a URL, the parser must resolve it
fully before passing it to the application.</p>

@return A string containing the system identifier, or null
        if none is available.
@see #getPublicId
"
      end

      operation 5696898 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the line number where the current document event ends.

<p><strong>Warning:</strong> The return value from the method
is intended only as an approximation for the sake of error
reporting; it is not intended to provide sufficient information
to edit the character content of the original XML document.</p>

<p>The return value is an approximation of the line number
in the document entity or external parsed entity where the
markup triggering the event appears.</p>

@return The line number, or -1 if none is available.
@see #getColumnNumber
"
      end

      operation 5697026 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the column number where the current document event ends.

<p><strong>Warning:</strong> The return value from the method
is intended only as an approximation for the sake of error
reporting; it is not intended to provide sufficient information
to edit the character content of the original XML document.</p>

<p>The return value is an approximation of the column number
in the document entity or external parsed entity where the
markup triggering the event appears.</p>

@return The column number, or -1 if none is available.
@see #getLineNumber
"
      end
    end

    class 798466 "SerializableLocatorImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The standard SAX implementation of LocatorImpl is not serializable,
limiting its utility as \"a persistent snapshot of a locator\".
This is a quick hack to make it so. Note that it makes more sense
in many cases to set up fields to hold this data rather than pointing
at another object... but that decision should be made on architectural
grounds rather than serializability.
<p>
It isn't clear whether subclassing LocatorImpl and adding serialization
methods makes more sense than copying it and just adding Serializable
to its interface. Since it's so simple, I've taken the latter approach
for now.

@see org.xml.sax.helpers.LocatorImpl
@see org.xml.sax.Locator Locator
@since XalanJ2
@author Joe Kesselman
"
      classrelation 2556290 // <realization>
	relation 2556290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2556290 // <realization>
	  b parent class_ref 606082 // Locator
      end

      classrelation 2556418 // <realization>
	relation 2556418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2556418 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1235330 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2660312888446371460L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5697154 "SerializableLocatorImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Zero-argument constructor.

<p>SAX says \"This will not normally be useful, since the main purpose
of this class is to make a snapshot of an existing Locator.\" In fact,
it _is_ sometimes useful when you want to construct a new Locator
pointing to a specific location... which, after all, is why the
setter methods are provided.
</p>
"
      end

      operation 5697282 "SerializableLocatorImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor.

<p>Create a persistent copy of the current state of a locator.
When the original locator changes, this copy will still keep
the original values (and it can be used outside the scope of
DocumentHandler methods).</p>

@param locator The locator to copy.
"
      end

      operation 5697410 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.Locator
//////////////////////////////////////////////////////////////////

Return the saved public identifier.

@return The public identifier as a string, or null if none
        is available.
@see org.xml.sax.Locator#getPublicId
@see #setPublicId
"
      end

      operation 5697538 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the saved system identifier.

@return The system identifier as a string, or null if none
        is available.
@see org.xml.sax.Locator#getSystemId
@see #setSystemId
"
      end

      operation 5697666 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the saved line number (1-based).

@return The line number as an integer, or -1 if none is available.
@see org.xml.sax.Locator#getLineNumber
@see #setLineNumber
"
      end

      operation 5697794 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the saved column number (1-based).

@return The column number as an integer, or -1 if none is available.
@see org.xml.sax.Locator#getColumnNumber
@see #setColumnNumber
"
      end

      operation 5697922 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Setters for the properties (not in org.xml.sax.Locator)
//////////////////////////////////////////////////////////////////

Set the public identifier for this locator.

@param publicId The new public identifier, or null
       if none is available.
@see #getPublicId
"
      end

      operation 5698050 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system identifier for this locator.

@param systemId The new system identifier, or null
       if none is available.
@see #getSystemId
"
      end

      operation 5698178 "setLineNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "lineNumber" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the line number for this locator (1-based).

@param lineNumber The line number, or -1 if none is available.
@see #getLineNumber
"
      end

      operation 5698306 "setColumnNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "columnNumber" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the column number for this locator (1-based).

@param columnNumber The column number, or -1 if none is available.
@see #getColumnNumber
"
      end

      classrelation 2556546 // publicId (<unidirectional association>)
	relation 2556546 --->
	  a role_name "publicId" private
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////

The public ID.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2556546 // publicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2556674 // systemId (<unidirectional association>)
	relation 2556674 --->
	  a role_name "systemId" private
	    comment "
The system ID.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2556674 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1235458 "lineNumber"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The line number.
@serial

"
      end

      attribute 1235586 "columnNumber"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The column number.
@serial

"
      end
    end

    class 798594 "StopParseException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a special exception that is used to stop parsing when
search for an element.  For instance, when searching for xml:stylesheet
PIs, it is used to stop the parse once the document element is found.
@see StylesheetPIHandler
@xsl.usage internal
"
      classrelation 2556802 // <generalisation>
	relation 2556802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2556802 // <generalisation>
	  b parent class_ref 379266 // SAXException
      end

      attribute 1235714 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 210102479218258961L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5698434 "StopParseException"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor StopParseException.
"
      end
    end

    class 798722 "StringBufferPool"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class pools string buffers, since they are reused so often.
String buffers are good candidates for pooling, because of
their supporting character arrays.
@xsl.usage internal
"
      classrelation 2556930 // m_stringBufPool (<unidirectional association>)
	relation 2556930 --->
	  a role_name "m_stringBufPool" init_value "
    new ObjectPool(com.sun.org.apache.xml.internal.utils.FastStringBuffer.class)" class_relation private
	    comment " The global pool of string buffers.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2556930 // m_stringBufPool (<unidirectional association>)
	  b parent class_ref 797698 // ObjectPool
      end

      operation 5698562 "get"
	class_operation public return_type class_ref 633730 // FastStringBuffer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the first free instance of a string buffer, or create one
if there are no free instances.

@return A string buffer ready for use.
"
      end

      operation 5698690 "free"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string buffer back to the pool.

@param sb Must be a non-null reference to a string buffer.
"
      end
    end

    class 798850 "StringComparable"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "International friendly string comparison with case-order
@author Igor Hersht, igorh@ca.ibm.com
"
      classrelation 2557058 // <realization>
	relation 2557058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2557058 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1235842 "UNKNOWN_CASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1235970 "UPPER_CASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1236098 "LOWER_CASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2557186 // m_text (<unidirectional association>)
	relation 2557186 --->
	  a role_name "m_text" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2557186 // m_text (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2557314 // m_locale (<unidirectional association>)
	relation 2557314 --->
	  a role_name "m_locale" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2557314 // m_locale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 2557442 // m_collator (<unidirectional association>)
	relation 2557442 --->
	  a role_name "m_collator" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2557442 // m_collator (<unidirectional association>)
	  b parent class_ref 798978 // RuleBasedCollator
      end

      classrelation 2557570 // m_caseOrder (<unidirectional association>)
	relation 2557570 --->
	  a role_name "m_caseOrder" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2557570 // m_caseOrder (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1236226 "m_mask"
	private explicit_type "int"
	init_value " 0xFFFFFFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5698818 "StringComparable"
	public explicit_return_type ""
	nparams 4
	  param in name "text" type class_ref 128130 // String
	  param in name "locale" type class_ref 312962 // Locale
	  param in name "collator" type class_ref 589826 // Collator
	  param in name "caseOrder" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5698946 "getComparator"
	class_operation public return_type class_ref 194946 // Comparable
	nparams 4
	  param in name "text" type class_ref 128130 // String
	  param in name "locale" type class_ref 312962 // Locale
	  param in name "collator" type class_ref 589826 // Collator
	  param in name "caseOrder" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5699074 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5699202 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5699330 "getCaseDiff"
	private explicit_return_type "int"
	nparams 2
	  param in name "text" type class_ref 128130 // String
	  param in name "pattern" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5699458 "getFirstCaseDiff"
	private explicit_return_type "int"
	nparams 3
	  param in name "text" type class_ref 128130 // String
	  param in name "pattern" type class_ref 128130 // String
	  param in name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5699586 "getMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "strength" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a mask for the part of the order we're interested in"
      end

      operation 5699714 "getElement"
	private explicit_return_type "int"
	nparams 1
	  param in name "maxStrengthElement" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get collation element with given strength
 from the element with max strength"
      end
    end

    class 799106 "StringToIntTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple lookup table that stores a list of strings, the even
number strings being keys, and the odd number strings being values.
@xsl.usage internal
"
      attribute 1236354 "INVALID_KEY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1236482 "m_blocksize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Block size to allocate          
"
      end

      classrelation 2557698 // m_map (<unidirectional association>)
	relation 2557698 --->
	  a role_name "m_map" multiplicity "[]" private
	    comment " Array of strings this table points to. Associated with ints
in m_values         
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2557698 // m_map (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1236610 "m_values"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of ints this table points. Associated with strings from
m_map.         
"
      end

      attribute 1236738 "m_firstFree"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of ints in the table          
"
      end

      attribute 1236866 "m_mapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of this table         
"
      end

      operation 5699842 "StringToIntTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5699970 "StringToIntTable"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StringToIntTable, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5700098 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return the length of the list
"
      end

      operation 5700226 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a string onto the vector.

@param key String to append
@param value The int value of the string
"
      end

      operation 5700354 "get"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param key String to look for

@return The String's int value

"
      end

      operation 5700482 "getIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string. Ignore case.

@param key String to look for

@return The string's int value
"
      end

      operation 5700610 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param key String to look for

@return True if the string is in the table
"
      end

      operation 5700738 "keys"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return array of keys in the table.

@return Array of strings
"
      end
    end

    class 799234 "StringToStringTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple lookup table that stores a list of strings, the even
number strings being keys, and the odd number strings being values.
@xsl.usage internal
"
      attribute 1236994 "m_blocksize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate          
"
      end

      classrelation 2557826 // m_map (<unidirectional association>)
	relation 2557826 --->
	  a role_name "m_map" multiplicity "[]" private
	    comment " Array of strings this contains          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2557826 // m_map (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1237122 "m_firstFree"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of strings this contains           
"
      end

      attribute 1237250 "m_mapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of this table           
"
      end

      operation 5700866 "StringToStringTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5700994 "StringToStringTable"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StringToStringTable, using the given block size.

@param blocksize Size of blocks to allocate
"
      end

      operation 5701122 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of strings in the list
"
      end

      operation 5701250 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a string onto the vector.
The strings go to the even locations in the array
and the values in the odd.

@param key String to add to the list
@param value Value of the string
"
      end

      operation 5701378 "get"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param key String to look up

@return return the value of the string or null if not found.
"
      end

      operation 5701506 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the given string and its value from this table.

@param key String to remove from the table
"
      end

      operation 5701634 "getIgnoreCase"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string. Ignore case

@param key String to look up

@return The value of the string or null if not found
"
      end

      operation 5701762 "getByValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "val" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string in the value.

@param val Value of the string to look up

@return the string associated with the given value or null if not found
"
      end

      operation 5701890 "elementAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i index of the string to look up.

@return The string at the given index.
"
      end

      operation 5702018 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param key String to look up

@return True if the given string is in this table
"
      end

      operation 5702146 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "val" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param val value to look up

@return True if the given value is in the table.
"
      end
    end

    class 799362 "StringToStringTableVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of StringToStringTables, optimized
for small lists.
@xsl.usage internal
"
      attribute 1237378 "m_blocksize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate         
"
      end

      classrelation 2557954 // m_map (<unidirectional association>)
	relation 2557954 --->
	  a role_name "m_map" multiplicity "[]" private
	    comment " Array of StringToStringTable objects          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2557954 // m_map (<unidirectional association>)
	  b parent class_ref 799234 // StringToStringTable
      end

      attribute 1237506 "m_firstFree"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of StringToStringTable objects in this array          
"
      end

      attribute 1237634 "m_mapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of this array          
"
      end

      operation 5702274 "StringToStringTableVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5702402 "StringToStringTableVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StringToStringTableVector, using the given block size.

@param blocksize Size of blocks to allocate
"
      end

      operation 5702530 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of StringToStringTable objects in the list
"
      end

      operation 5702658 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of StringToStringTable objects in the list
"
      end

      operation 5702786 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 799234 // StringToStringTable
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a StringToStringTable object onto the vector.

@param value StringToStringTable object to add
"
      end

      operation 5702914 "get"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a string, find the last added occurance value
that matches the key.

@param key String to look up

@return the last added occurance value that matches the key
or null if not found.
"
      end

      operation 5703042 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a string, find out if there is a value in this table
that matches the key.

@param key String to look for

@return True if the string was found in table, null if not
"
      end

      operation 5703170 "removeLastElem"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the last element.
"
      end

      operation 5703298 "elementAt"
	public return_type class_ref 799234 // StringToStringTable
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i Index of element to find

@return The StringToStringTable object at the given index
"
      end

      operation 5703426 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 799234 // StringToStringTable
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given StringToStringTable.

@param s The StringToStringTable to find

@return True if the StringToStringTable is found
"
      end
    end

    class 799490 "StylesheetPIHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Search for the xml-stylesheet processing instructions in an XML document.
@see <a href=\"http://www.w3.org/TR/xml-stylesheet/\">Associating Style Sheets with XML documents, Version 1.0</a>
"
      classrelation 2558338 // <generalisation>
	relation 2558338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2558338 // <generalisation>
	  b parent class_ref 635906 // DefaultHandler
      end

      classrelation 2558466 // m_baseID (<unidirectional association>)
	relation 2558466 --->
	  a role_name "m_baseID" package
	    comment " The baseID of the document being processed.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2558466 // m_baseID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2558594 // m_media (<unidirectional association>)
	relation 2558594 --->
	  a role_name "m_media" package
	    comment " The desired media criteria. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2558594 // m_media (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2558722 // m_title (<unidirectional association>)
	relation 2558722 --->
	  a role_name "m_title" package
	    comment " The desired title criteria.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2558722 // m_title (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2558850 // m_charset (<unidirectional association>)
	relation 2558850 --->
	  a role_name "m_charset" package
	    comment " The desired character set criteria.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2558850 // m_charset (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2558978 // m_stylesheets (<unidirectional association>)
	relation 2558978 --->
	  a role_name "m_stylesheets" init_value " new Vector()" package
	    comment " A list of SAXSource objects that match the criteria.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2558978 // m_stylesheets (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2559106 // m_uriResolver (<unidirectional association>)
	relation 2559106 --->
	  a role_name "m_uriResolver" package
	    comment " Add code to use a URIResolver. Patch from Dmitri Ilyin.

The object that implements the URIResolver interface,
or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2559106 // m_uriResolver (<unidirectional association>)
	  b parent class_ref 642946 // URIResolver
      end

      operation 5704962 "setURIResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 642946 // URIResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the object that will be used to resolve URIs in href
in xml-stylesheet processing instruction.

@param resolver An object that implements the URIResolver interface,
or null.
"
      end

      operation 5705090 "getURIResolver"
	public return_type class_ref 642946 // URIResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the object that will be used to resolve URIs in href
in xml-stylesheet processing instruction.

@return The URIResolver that was set with setURIResolver.
"
      end

      operation 5705218 "StylesheetPIHandler"
	public explicit_return_type ""
	nparams 4
	  param inout name "baseID" type class_ref 128130 // String
	  param inout name "media" type class_ref 128130 // String
	  param inout name "title" type class_ref 128130 // String
	  param inout name "charset" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StylesheetPIHandler instance that will search
for xml-stylesheet PIs based on the given criteria.

@param baseID The base ID of the XML document, needed to resolve
              relative IDs.
@param media The desired media criteria.
@param title The desired title criteria.
@param charset The desired character set criteria.
"
      end

      operation 5705346 "getAssociatedStylesheet"
	public return_type class_ref 627202 // Source
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the last stylesheet found that match the constraints.

@return Source object that references the last stylesheet reference
        that matches the constraints.
"
      end

      operation 5705474 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle the xml-stylesheet processing instruction.

@param target The processing instruction target.
@param data The processing instruction data, or null if
            none is supplied.
@throws org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#processingInstruction
@see <a href=\"http://www.w3.org/TR/xml-stylesheet/\">Associating Style Sheets with XML documents, Version 1.0</a>
"
      end

      operation 5705602 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The spec notes that \"The xml-stylesheet processing instruction is allowed only in the prolog of an XML document.\",
so, at least for right now, I'm going to go ahead an throw a TransformerException
in order to stop the parse.

@param namespaceURI The Namespace URI, or an empty string.
@param localName The local name (without prefix), or empty string if not namespace processing.
@param qName The qualified name (with prefix).
@param atts  The specified or defaulted attributes.

@throws StopParseException since there can be no valid xml-stylesheet processing
                           instructions past the first element.
"
      end

      operation 5705730 "setBaseId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "baseId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Added additional getter and setter methods for the Base Id
to fix bugzilla bug 24187

"
      end

      operation 5705858 "getBaseId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 799618 "SuballocatedByteVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple table that stores a list of byte. Very similar API to our
IntVector class (same API); different internal storage.

This version uses an array-of-arrays solution. Read/write access is thus
a bit slower than the simple IntVector, and basic storage is a trifle
higher due to the top-level array -- but appending is O(1) fast rather
than O(N**2) slow, which will swamp those costs in situations where
long vectors are being built up.

Known issues:

Some methods are private because they haven't yet been tested properly.

If an element has not been set (because we skipped it), its value will
initially be 0. Shortening the vector does not clear old storage; if you
then skip values and setElementAt a higher index again, you may see old data
reappear in the truncated-and-restored section. Doing anything else would
have performance costs.
@xsl.usage internal
"
      attribute 1238274 "m_blocksize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate          
"
      end

      attribute 1238402 "m_numblocks"
	protected explicit_type "int"
	init_value "32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of blocks to (over)allocate by 
"
      end

      attribute 1238530 "m_map"
	protected explicit_type "byte"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of arrays of bytes          
"
      end

      attribute 1238658 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of bytes in array          
"
      end

      attribute 1238786 "m_map0"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"Shortcut\" handle to m_map[0] 
"
      end

      operation 5705986 "SuballocatedByteVector"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5706114 "SuballocatedByteVector"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a ByteVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5706242 "SuballocatedByteVector"
	public explicit_return_type ""
	nparams 2
	  param in name "blocksize" explicit_type "int"
	  param in name "increaseSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a ByteVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5706370 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return length of the list
"
      end

      operation 5706498 "setSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "sz" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the length of the list.

@return length of the list
"
      end

      operation 5706626 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a byte onto the vector.

@param value Byte to add to the list
"
      end

      operation 5706754 "addElements"
	private explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "byte"
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several byte values onto the vector.

@param value Byte to add to the list
"
      end

      operation 5706882 "addElements"
	private explicit_return_type "void"
	nparams 1
	  param in name "numberOfElements" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append several slots onto the vector, but do not set the values.
Note: \"Not Set\" means the value is unspecified.

@param numberOfElements
"
      end

      operation 5707010 "insertElementAt"
	private explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "byte"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

Insertion may be an EXPENSIVE operation!

@param value Byte to insert
@param at Index of where to insert
"
      end

      operation 5707138 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wipe it out.
"
      end

      operation 5707266 "removeElement"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s Byte to remove from array

@return True if the byte was removed, false if it was not found
"
      end

      operation 5707394 "removeElementAt"
	private explicit_return_type "void"
	nparams 1
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param at index of where to remove a byte
"
      end

      operation 5707522 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "byte"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param value
@param at     Index of where to set the object
"
      end

      operation 5707650 "elementAt"
	public explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element. This is often at the innermost loop of an
application, so performance is critical.

@param i index of value to get

@return value at given index. If that value wasn't previously set,
the result is undefined for performance reasons. It may throw an
exception (see below), may return zero, or (if setSize has previously
been used) may return stale data.

@throws ArrayIndexOutOfBoundsException if the index was _clearly_
unreasonable (negative, or past the highest block).

@throws NullPointerException if the index points to a block that could
have existed (based on the highest index used) but has never had anything
set into it.
%REVIEW% Could add a catch to create the block in that case, or return 0.
Try/Catch is _supposed_ to be nearly free when not thrown to. Do we
believe that? Should we have a separate safeElementAt?
"
      end

      operation 5707778 "contains"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given node.

@param s object to look for

@return true if the object is in the list
"
      end

      operation 5707906 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "elem" explicit_type "byte"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@param index Index of where to begin search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5708034 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5708162 "lastIndexOf"
	private explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Object to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end
    end

    class 799746 "SystemIDResolver"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to resolve relative URIs and SystemID
strings into absolute URIs.

<p>This is a generic utility for resolving URIs, other than the
fact that it's declared to throw TransformerException.  Please
see code comments for details on how resolution is performed.</p>
@xsl.usage internal
"
      operation 5710850 "getAbsoluteURIFromRelative"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "localPath" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an absolute URI from a given relative URI (local path).

<p>The relative URI is a local filesystem path. The path can be
absolute or relative. If it is a relative path, it is resolved relative
to the system property \"user.dir\" if it is available; if not (i.e. in an
Applet perhaps which throws SecurityException) then we just return the
relative path. The space and backslash characters are also replaced to
generate a good absolute URI.</p>

@param localPath The relative URI to resolve

@return Resolved absolute URI
"
      end

      operation 5710978 "getAbsolutePathFromRelativePath"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "relativePath" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an absolute path from a relative path.

@param relativePath A relative path
@return The absolute path
"
      end

      operation 5711106 "isAbsoluteURI"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the systemId denotes an absolute URI .

@param systemId The systemId string
@return true if the systemId is an an absolute URI
"
      end

      operation 5711234 "isAbsolutePath"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the local path is an absolute path.

@param systemId The path string
@return true if the path is absolute
"
      end

      operation 5711362 "isWindowsAbsolutePath"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the local path is a Windows absolute path.

@param systemId The path string
@return true if the path is a Windows absolute path
"
      end

      operation 5711490 "replaceChars"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace spaces with \"%20\" and backslashes with forward slashes in
the input string to generate a well-formed URI string.

@param str The input string
@return The string after conversion
"
      end

      operation 5711618 "getAbsoluteURI"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take a SystemID string and try to turn it into a good absolute URI.

@param systemId A URI string, which may be absolute or relative.

@return The resolved absolute URI
"
      end

      operation 5711746 "getAbsoluteURI"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "urlString" type class_ref 128130 // String
	  param inout name "base" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take a SystemID string and try to turn it into a good absolute URI.

@param urlString SystemID string
@param base The URI string used as the base for resolving the systemID

@return The resolved absolute URI
@throws TransformerException thrown if the string can't be turned into a URI.
"
      end
    end

    class 799874 "ThreadControllerWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A utility class that wraps the ThreadController, which is used
by IncrementalSAXSource for the incremental building of DTM.
"
      class 800002 "ThreadController"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 800130 "SafeThread"
	  visibility package 
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 2559362 // <generalisation>
	    relation 2559362 ---|>
	      a public
		java "${type}"
		classrelation_ref 2559362 // <generalisation>
	      b parent class_ref 128642 // Thread
	  end

	  attribute 1240194 "ran"
	    volatile private explicit_type "boolean"
	    init_value " false"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 5712130 "SafeThread"
	    public explicit_return_type ""
	    nparams 1
	      param inout name "target" type class_ref 128770 // Runnable
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 5712258 "run"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 5712386 "run"
	  public return_type class_ref 128642 // Thread
	  nparams 2
	    param inout name "task" type class_ref 128770 // Runnable
	    param in name "priority" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Will get a thread from the pool, execute the task
 and return the thread to the pool.

 The return value is used only to wait for completion


NEEDSDOC @param task
@param priority if >0 the task will run with the given priority
 ( doesn't seem to be used in xalan, since it's allways the default )
@return  The thread that is running the task, can be used
         to wait for completion
"
	end

	operation 5712514 "waitThread"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "worker" type class_ref 128642 // Thread
	    param inout name "task" type class_ref 128770 // Runnable
	  nexceptions 1
	    exception class_ref 129666 // InterruptedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Wait until the task is completed on the worker
 thread.

NEEDSDOC @param worker
NEEDSDOC @param task

@throws InterruptedException
"
	end
      end

      classrelation 2559234 // m_tpool (<unidirectional association>)
	relation 2559234 --->
	  a role_name "m_tpool" init_value " new ThreadController()" class_relation private
	    comment " The ThreadController pool   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2559234 // m_tpool (<unidirectional association>)
	  b parent class_ref 800002 // ThreadController
      end

      operation 5711874 "runThread"
	class_operation public return_type class_ref 128642 // Thread
	nparams 2
	  param inout name "runnable" type class_ref 128770 // Runnable
	  param in name "priority" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5712002 "waitThread"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "worker" type class_ref 128642 // Thread
	  param inout name "task" type class_ref 128770 // Runnable
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 800258 "Trie"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A digital search trie for 7-bit ASCII text
The API is a subset of java.util.Hashtable
The key must be a 7-bit ASCII string
The value may be any Java Object
@xsl.usage internal
"
      attribute 1240450 "ALPHA_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 128"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of the m_nextChar array.  
"
      end

      class 800386 "Node"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 5714434 "Node"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor, creates a Node[ALPHA_SIZE].
"
	end

	classrelation 2560002 // m_nextChar (<unidirectional association>)
	  relation 2560002 --->
	    a role_name "m_nextChar" multiplicity "[]" package
	      comment " The next nodes.   
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2560002 // m_nextChar (<unidirectional association>)
	    b parent class_ref 800386 // Node
	end

	classrelation 2560130 // m_Value (<unidirectional association>)
	  relation 2560130 --->
	    a role_name "m_Value" package
	      comment " The value.   
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2560130 // m_Value (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end
      end

      classrelation 2559874 // m_Root (<unidirectional association>)
	relation 2559874 --->
	  a role_name "m_Root" package
	    comment " The root node of the tree.    
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2559874 // m_Root (<unidirectional association>)
	  b parent class_ref 800386 // Node
      end

      attribute 1240578 "m_charBuffer"
	private explicit_type "char"
	multiplicity "[]"
	init_value " new char[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " helper buffer to convert Strings to char arrays 
"
      end

      operation 5714050 "Trie"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct the trie.
"
      end

      operation 5714178 "put"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put an object into the trie for lookup.

@param key must be a 7-bit ASCII string
@param value any java object.

@return The old object that matched key, or null.
"
      end

      operation 5714306 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an object that matches the key.

@param key must be a 7-bit ASCII string

@return The object that matches the key, or null.
"
      end
    end

    class 800514 "UnImplNode"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<meta name=\"usage\" content=\"internal\"/>
To be subclassed by classes that wish to fake being nodes.
"
      classrelation 2560258 // <realization>
	relation 2560258 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2560258 // <realization>
	  b parent class_ref 317570 // Node
      end

      classrelation 2560386 // <realization>
	relation 2560386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2560386 // <realization>
	  b parent class_ref 648194 // Element
      end

      classrelation 2560514 // <realization>
	relation 2560514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2560514 // <realization>
	  b parent class_ref 333058 // NodeList
      end

      classrelation 2560642 // <realization>
	relation 2560642 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2560642 // <realization>
	  b parent class_ref 378626 // Document
      end

      operation 5714562 "UnImplNode"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor UnImplNode

"
      end

      operation 5714690 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throw an error.

@param msg Message Key for the error
"
      end

      operation 5714818 "error"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throw an error.

@param msg Message Key for the error
@param args Array of arguments to be used in the error message
"
      end

      operation 5714946 "appendChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "newChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param newChild New node to append to the list of this node's children

@return null

@throws DOMException
"
      end

      operation 5715074 "hasChildNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return false
"
      end

      operation 5715202 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return 0
"
      end

      operation 5715330 "getParentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5715458 "getChildNodes"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5715586 "getFirstChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5715714 "getLastChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5715842 "getNextSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5715970 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.NodeList

@return 0
"
      end

      operation 5716098 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLength():int

Unimplemented. See org.w3c.dom.NodeList

@param index index of a child of this node in its list of children

@return null
"
      end

      operation 5716226 "getOwnerDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " item(int):Node

Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5716354 "getTagName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5716482 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5716610 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unimplemented. See org.w3c.dom.Node "
      end

      operation 5716738 "getElementsByTagName"
	public return_type class_ref 333058 // NodeList
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param name Name of the element

@return null
"
      end

      operation 5716866 "removeAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "oldAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param oldAttr Attribute to be removed from this node's list of attributes

@return null

@throws DOMException
"
      end

      operation 5716994 "setAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param newAttr Attribute node to be added to this node's list of attributes

@return null

@throws DOMException
"
      end

      operation 5717122 "hasAttribute"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element


@param name Name of an attribute

@return false
"
      end

      operation 5717250 "hasAttributeNS"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "x" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element


@param name
@param x

@return false
"
      end

      operation 5717378 "getAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element


@param name Attribute node name

@return null
"
      end

      operation 5717506 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param name Attribute node name to remove from list of attributes

@throws DOMException
"
      end

      operation 5717634 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param name Name of attribute to set
@param value Value of attribute

@throws DOMException
"
      end

      operation 5717762 "getAttribute"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param name Name of attribute to get

@return null
"
      end

      operation 5717890 "hasAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. Introduced in DOM Level 2.

@return false
"
      end

      operation 5718018 "getElementsByTagNameNS"
	public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param namespaceURI Namespace URI of the element
@param localName Local part of qualified name of the element

@return null
"
      end

      operation 5718146 "setAttributeNodeNS"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param newAttr Attribute to set

@return null

@throws DOMException
"
      end

      operation 5718274 "getAttributeNodeNS"
	public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param namespaceURI Namespace URI of attribute node to get
@param localName Local part of qualified name of attribute node to get

@return null
"
      end

      operation 5718402 "removeAttributeNS"
	public explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param namespaceURI Namespace URI of attribute node to remove
@param localName Local part of qualified name of attribute node to remove

@throws DOMException
"
      end

      operation 5718530 "setAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param namespaceURI Namespace URI of attribute node to set
@param qualifiedName qualified name of attribute
@param value value of attribute

@throws DOMException
"
      end

      operation 5718658 "getAttributeNS"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Element

@param namespaceURI Namespace URI of attribute node to get
@param localName Local part of qualified name of attribute node to get

@return null
"
      end

      operation 5718786 "getPreviousSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5718914 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param deep Flag indicating whether to clone deep (clone member variables)

@return null
"
      end

      operation 5719042 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null

@throws DOMException
"
      end

      operation 5719170 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nodeValue" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param nodeValue Value to set this node to

@throws DOMException
"
      end

      operation 5719298 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node


NEEDSDOC @param value
@return value Node value

@throws DOMException

 public String getValue ()
 {
  error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED); //\"getValue not supported!\");
  return null;
 }

Unimplemented. See org.w3c.dom.Node

@param value Value to set this node to

@throws DOMException
"
      end

      operation 5719426 "getOwnerElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the name of this attribute.

@return the name of this attribute.

 public String getName()
 {
  return this.getNodeName();
 }

Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5719554 "getSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return False
"
      end

      operation 5719682 "getAttributes"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5719810 "insertBefore"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param newChild New child node to insert
@param refChild Insert in front of this child

@return null

@throws DOMException
"
      end

      operation 5719938 "replaceChild"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param newChild Replace existing child with this one
@param oldChild Existing child to be replaced

@return null

@throws DOMException
"
      end

      operation 5720066 "removeChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param oldChild Child to be removed

@return null

@throws DOMException
"
      end

      operation 5720194 "isSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the DOM implementation implements a specific feature and
that feature is supported by this node.
@param feature The name of the feature to test. This is the same name
  which can be passed to the method <code>hasFeature</code> on
  <code>DOMImplementation</code>.
@param version This is the version number of the feature to test. In
  Level 2, version 1, this is the string \"2.0\". If the version is not
  specified, supporting any version of the feature will cause the
  method to return <code>true</code>.

@return Returns <code>false</code>
@since DOM Level 2
"
      end

      operation 5720322 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5720450 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5720578 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@param prefix Prefix to set for this node

@throws DOMException
"
      end

      operation 5720706 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Node

@return null
"
      end

      operation 5720834 "getDoctype"
	public return_type class_ref 649986 // DocumentType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@return null
"
      end

      operation 5720962 "getImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@return null
"
      end

      operation 5721090 "getDocumentElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@return null
"
      end

      operation 5721218 "createElement"
	public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param tagName Element tag name

@return null

@throws DOMException
"
      end

      operation 5721346 "createDocumentFragment"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@return null
"
      end

      operation 5721474 "createTextNode"
	public return_type class_ref 649090 // Text
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param data Data for text node

@return null
"
      end

      operation 5721602 "createComment"
	public return_type class_ref 649474 // Comment
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param data Data for comment

@return null
"
      end

      operation 5721730 "createCDATASection"
	public return_type class_ref 649218 // CDATASection
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param data Data for CDATA section

@return null

@throws DOMException
"
      end

      operation 5721858 "createProcessingInstruction"
	public return_type class_ref 650242 // ProcessingInstruction
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param target Target for Processing instruction
@param data Data for Processing instruction

@return null

@throws DOMException
"
      end

      operation 5721986 "createAttribute"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param name Attribute name

@return null

@throws DOMException
"
      end

      operation 5722114 "createEntityReference"
	public return_type class_ref 650370 // EntityReference
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param name Entity Reference name

@return null

@throws DOMException
"
      end

      operation 5722242 "importNode"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "importedNode" type class_ref 317570 // Node
	  param inout name "deep" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param importedNode The node to import.
@param deep If <code>true</code>, recursively import the subtree under
  the specified node; if <code>false</code>, import only the node
  itself, as explained above. This has no effect on <code>Attr</code>
  , <code>EntityReference</code>, and <code>Notation</code> nodes.

@return null

@throws DOMException
"
      end

      operation 5722370 "createElementNS"
	public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param namespaceURI Namespace URI for the element
@param qualifiedName Qualified name of the element

@return null

@throws DOMException
"
      end

      operation 5722498 "createAttributeNS"
	public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param namespaceURI Namespace URI of the attribute
@param qualifiedName Qualified name of the attribute

@return null

@throws DOMException
"
      end

      operation 5722626 "getElementById"
	public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "elementId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented. See org.w3c.dom.Document

@param elementId ID of the element to get

@return null
"
      end

      operation 5722754 "setData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set Node data


@param data data to set for this node

@throws DOMException
"
      end

      operation 5722882 "substringData"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented.

@param offset Start offset of substring to extract.
@param count The length of the substring to extract.

@return null

@throws DOMException
"
      end

      operation 5723010 "appendData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented.

@param arg String data to append

@throws DOMException
"
      end

      operation 5723138 "insertData"
	public explicit_return_type "void"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "arg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented.

@param offset Start offset of substring to insert.
@param arg The (sub)string to insert.

@throws DOMException
"
      end

      operation 5723266 "deleteData"
	public explicit_return_type "void"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented.

@param offset Start offset of substring to delete.
@param count The length of the substring to delete.

@throws DOMException
"
      end

      operation 5723394 "replaceData"
	public explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "arg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented.

@param offset Start offset of substring to replace.
@param count The length of the substring to replace.
@param arg substring to replace with

@throws DOMException
"
      end

      operation 5723522 "splitText"
	public return_type class_ref 649090 // Text
	nparams 1
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unimplemented.

@param offset Offset into text to split

@return null, unimplemented

@throws DOMException
"
      end

      operation 5723650 "adoptNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "source" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NEEDSDOC Method adoptNode


NEEDSDOC @param source

NEEDSDOC (adoptNode) @return

@throws DOMException
"
      end

      operation 5723778 "getInputEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying, as part of the XML declaration, the encoding
of this document. This is <code>null</code> when unspecified.
@since DOM Level 3

NEEDSDOC ($objectName$) @return
"
      end

      operation 5723906 "setInputEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying, as part of the XML declaration, the encoding
of this document. This is <code>null</code> when unspecified.
@since DOM Level 3

NEEDSDOC @param encoding
"
      end

      operation 5724034 "getStandalone"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying, as part of the XML declaration, whether this
document is standalone.
@since DOM Level 3

NEEDSDOC ($objectName$) @return
"
      end

      operation 5724162 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "standalone" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying, as part of the XML declaration, whether this
document is standalone.
@since DOM Level 3

NEEDSDOC @param standalone
"
      end

      operation 5724290 "getStrictErrorChecking"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying whether errors checking is enforced or not.
When set to <code>false</code>, the implementation is free to not
test every possible error case normally defined on DOM operations,
and not raise any <code>DOMException</code>. In case of error, the
behavior is undefined. This attribute is <code>true</code> by
defaults.
@since DOM Level 3

NEEDSDOC ($objectName$) @return
"
      end

      operation 5724418 "setStrictErrorChecking"
	public explicit_return_type "void"
	nparams 1
	  param inout name "strictErrorChecking" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying whether errors checking is enforced or not.
When set to <code>false</code>, the implementation is free to not
test every possible error case normally defined on DOM operations,
and not raise any <code>DOMException</code>. In case of error, the
behavior is undefined. This attribute is <code>true</code> by
defaults.
@since DOM Level 3

NEEDSDOC @param strictErrorChecking
"
      end

      operation 5724546 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying, as part of the XML declaration, the version
number of this document. This is <code>null</code> when unspecified.
@since DOM Level 3

NEEDSDOC ($objectName$) @return
"
      end

      operation 5724674 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>EXPERIMENTAL! Based on the <a
href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605'>Document
Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.</a>.
<p>
An attribute specifying, as part of the XML declaration, the version
number of this document. This is <code>null</code> when unspecified.
@since DOM Level 3

NEEDSDOC @param version
"
      end

      operation 5724802 "setUserData"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "data" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 647298 // UserDataHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "RAMESH : Pending proper implementation of DOM Level 3"
      end

      operation 5724930 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the object associated to a key on a this node. The object
must first have been set to this node by calling
<code>setUserData</code> with the same key.
@param key The key the object is associated to.
@return Returns the <code>DOMObject</code> associated to the given key
  on this node, or <code>null</code> if there was none.
@since DOM Level 3
"
      end

      operation 5725058 "getFeature"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method returns a specialized object which implements the
specialized APIs of the specified feature and version. The
specialized object may also be obtained by using binding-specific
casting methods but is not necessarily expected to, as discussed in Mixed DOM implementations.
@param feature The name of the feature requested (case-insensitive).
@param version  This is the version number of the feature to test. If
  the version is <code>null</code> or the empty string, supporting
  any version of the feature will cause the method to return an
  object that supports at least one version of the feature.
@return  Returns an object which implements the specialized APIs of
  the specified feature and version, if any, or <code>null</code> if
  there is no object which implements interfaces associated with that
  feature. If the <code>DOMObject</code> returned by this method
  implements the <code>Node</code> interface, it must delegate to the
  primary core <code>Node</code> and not return results inconsistent
  with the primary core <code>Node</code> such as attributes,
  childNodes, etc.
@since DOM Level 3
"
      end

      operation 5725186 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether two nodes are equal.
<br>This method tests for equality of nodes, not sameness (i.e.,
whether the two nodes are references to the same object) which can be
tested with <code>Node.isSameNode</code>. All nodes that are the same
will also be equal, though the reverse may not be true.
<br>Two nodes are equal if and only if the following conditions are
satisfied: The two nodes are of the same type.The following string
attributes are equal: <code>nodeName</code>, <code>localName</code>,
<code>namespaceURI</code>, <code>prefix</code>, <code>nodeValue</code>
, <code>baseURI</code>. This is: they are both <code>null</code>, or
they have the same length and are character for character identical.
The <code>attributes</code> <code>NamedNodeMaps</code> are equal.
This is: they are both <code>null</code>, or they have the same
length and for each node that exists in one map there is a node that
exists in the other map and is equal, although not necessarily at the
same index.The <code>childNodes</code> <code>NodeLists</code> are
equal. This is: they are both <code>null</code>, or they have the
same length and contain equal nodes at the same index. This is true
for <code>Attr</code> nodes as for any other type of node. Note that
normalization can affect equality; to avoid this, nodes should be
normalized before being compared.
<br>For two <code>DocumentType</code> nodes to be equal, the following
conditions must also be satisfied: The following string attributes
are equal: <code>publicId</code>, <code>systemId</code>,
<code>internalSubset</code>.The <code>entities</code>
<code>NamedNodeMaps</code> are equal.The <code>notations</code>
<code>NamedNodeMaps</code> are equal.
<br>On the other hand, the following do not affect equality: the
<code>ownerDocument</code> attribute, the <code>specified</code>
attribute for <code>Attr</code> nodes, the
<code>isWhitespaceInElementContent</code> attribute for
<code>Text</code> nodes, as well as any user data or event listeners
registered on the nodes.

@param arg The node to compare equality with.
@return If the nodes, and possibly subtrees are equal,
  <code>true</code> otherwise <code>false</code>.
@since DOM Level 3
"
      end

      operation 5725314 "lookupNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "specifiedPrefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 - Experimental:
Look up the namespace URI associated to the given prefix, starting from this node.
Use lookupNamespaceURI(null) to lookup the default namespace

@param namespaceURI
@return th URI for the namespace
@since DOM Level 3
"
      end

      operation 5725442 "isDefaultNamespace"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3: Experimental
 This method checks if the specified <code>namespaceURI</code> is the
 default namespace or not.
 @param namespaceURI The namespace URI to look for.
 @return  <code>true</code> if the specified <code>namespaceURI</code>
  is the default namespace, <code>false</code> otherwise.
@since DOM Level 3
"
      end

      operation 5725570 "lookupPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
DOM Level 3 - Experimental:
Look up the prefix associated to the given namespace URI, starting from this node.

@param namespaceURI
@return the prefix for the namespace
"
      end

      operation 5725698 "isSameNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this node is the same node as the given one.
<br>This method provides a way to determine whether two
<code>Node</code> references returned by the implementation reference
the same object. When two <code>Node</code> references are references
to the same object, even if through a proxy, the references may be
used completely interchangably, such that all attributes have the
same values and calling the same DOM method on either reference
always has exactly the same effect.
@param other The node to test against.
@return Returns <code>true</code> if the nodes are the same,
  <code>false</code> otherwise.
@since DOM Level 3
"
      end

      operation 5725826 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "textContent" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute returns the text content of this node and its
descendants. When it is defined to be null, setting it has no effect.
When set, any possible children this node may have are removed and
replaced by a single <code>Text</code> node containing the string
this attribute is set to. On getting, no serialization is performed,
the returned string does not contain any markup. No whitespace
normalization is performed, the returned string does not contain the
element content whitespaces . Similarly, on setting, no parsing is
performed either, the input string is taken as pure textual content.
<br>The string returned is made of the text content of this node
depending on its type, as defined below:
<table border='1'>
<tr>
<th>Node type</th>
<th>Content</th>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>
ELEMENT_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE,
DOCUMENT_FRAGMENT_NODE</td>
<td valign='top' rowspan='1' colspan='1'>concatenation of the <code>textContent</code>
attribute value of every child node, excluding COMMENT_NODE and
PROCESSING_INSTRUCTION_NODE nodes</td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>ATTRIBUTE_NODE, TEXT_NODE,
CDATA_SECTION_NODE, COMMENT_NODE, PROCESSING_INSTRUCTION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
<code>nodeValue</code></td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>DOCUMENT_NODE, DOCUMENT_TYPE_NODE, NOTATION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
null</td>
</tr>
</table>
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
@exception DOMException
  DOMSTRING_SIZE_ERR: Raised when it would return more characters than
  fit in a <code>DOMString</code> variable on the implementation
  platform.
@since DOM Level 3
"
      end

      operation 5725954 "getTextContent"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute returns the text content of this node and its
descendants. When it is defined to be null, setting it has no effect.
When set, any possible children this node may have are removed and
replaced by a single <code>Text</code> node containing the string
this attribute is set to. On getting, no serialization is performed,
the returned string does not contain any markup. No whitespace
normalization is performed, the returned string does not contain the
element content whitespaces . Similarly, on setting, no parsing is
performed either, the input string is taken as pure textual content.
<br>The string returned is made of the text content of this node
depending on its type, as defined below:
<table border='1'>
<tr>
<th>Node type</th>
<th>Content</th>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>
ELEMENT_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE,
DOCUMENT_FRAGMENT_NODE</td>
<td valign='top' rowspan='1' colspan='1'>concatenation of the <code>textContent</code>
attribute value of every child node, excluding COMMENT_NODE and
PROCESSING_INSTRUCTION_NODE nodes</td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>ATTRIBUTE_NODE, TEXT_NODE,
CDATA_SECTION_NODE, COMMENT_NODE, PROCESSING_INSTRUCTION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
<code>nodeValue</code></td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>DOCUMENT_NODE, DOCUMENT_TYPE_NODE, NOTATION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
null</td>
</tr>
</table>
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
@exception DOMException
  DOMSTRING_SIZE_ERR: Raised when it would return more characters than
  fit in a <code>DOMString</code> variable on the implementation
  platform.
@since DOM Level 3
"
      end

      operation 5726082 "compareDocumentPosition"
	public explicit_return_type "short"
	nparams 1
	  param inout name "other" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares a node with this node with regard to their position in the
document.
@param other The node to compare against this node.
@return Returns how the given node is positioned relatively to this
  node.
@since DOM Level 3
"
      end

      operation 5726210 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The absolute base URI of this node or <code>null</code> if undefined.
This value is computed according to . However, when the
<code>Document</code> supports the feature \"HTML\" , the base URI is
computed using first the value of the href attribute of the HTML BASE
element if any, and the value of the <code>documentURI</code>
attribute from the <code>Document</code> interface otherwise.
<br> When the node is an <code>Element</code>, a <code>Document</code>
or a a <code>ProcessingInstruction</code>, this attribute represents
the properties [base URI] defined in . When the node is a
<code>Notation</code>, an <code>Entity</code>, or an
<code>EntityReference</code>, this attribute represents the
properties [declaration base URI] in the . How will this be affected
by resolution of relative namespace URIs issue?It's not.Should this
only be on Document, Element, ProcessingInstruction, Entity, and
Notation nodes, according to the infoset? If not, what is it equal to
on other nodes? Null? An empty string? I think it should be the
parent's.No.Should this be read-only and computed or and actual
read-write attribute?Read-only and computed (F2F 19 Jun 2000 and
teleconference 30 May 2001).If the base HTML element is not yet
attached to a document, does the insert change the Document.baseURI?
Yes. (F2F 26 Sep 2001)
@since DOM Level 3
"
      end

      operation 5726338 "renameNode"
	public return_type class_ref 317570 // Node
	nparams 3
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Renaming node
"
      end

      operation 5726466 "normalizeDocument"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3 WD - Experimental
 Normalize document.
"
      end

      operation 5726594 "getDomConfig"
	public return_type class_ref 650498 // DOMConfiguration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The configuration used when <code>Document.normalizeDocument</code> is
invoked.
@since DOM Level 3
"
      end

      classrelation 2560770 // fDocumentURI (<unidirectional association>)
	relation 2560770 --->
	  a role_name "fDocumentURI" protected
	    comment "Experimental DOM Level 3 feature: documentURI 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2560770 // fDocumentURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5726722 "setDocumentURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "documentURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
"
      end

      operation 5726850 "getDocumentURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
The location of the document or <code>null</code> if undefined.
<br>Beware that when the <code>Document</code> supports the feature
\"HTML\" , the href attribute of the HTML BASE element takes precedence
over this attribute.
@since DOM Level 3
"
      end

      classrelation 2560898 // actualEncoding (<unidirectional association>)
	relation 2560898 --->
	  a role_name "actualEncoding" protected
	    comment "Experimental DOM Level 3 feature: Document actualEncoding 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2560898 // actualEncoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5726978 "getActualEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
An attribute specifying the actual encoding of this document. This is
<code>null</code> otherwise.
<br> This attribute represents the property [character encoding scheme]
defined in .
@since DOM Level 3
"
      end

      operation 5727106 "setActualEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
An attribute specifying the actual encoding of this document. This is
<code>null</code> otherwise.
<br> This attribute represents the property [character encoding scheme]
defined in .
@since DOM Level 3
"
      end

      operation 5727234 "replaceWholeText"
	public return_type class_ref 649090 // Text
	nparams 1
	  param inout name "content" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
"
      end

      operation 5727362 "getWholeText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Returns all text of <code>Text</code> nodes logically-adjacent text
nodes to this node, concatenated in document order.
@since DOM Level 3
"
      end

      operation 5727490 "isWhitespaceInElementContent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Returns whether this text node contains whitespace in element content,
often abusively called \"ignorable whitespace\".
"
      end

      operation 5727618 "setIdAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: set the type of this attribute to be ID type.

@param id
"
      end

      operation 5727746 "setIdAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "makeId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3: register the given attribute node as an ID attribute
"
      end

      operation 5727874 "setIdAttributeNode"
	public explicit_return_type "void"
	nparams 2
	  param inout name "at" type class_ref 648066 // Attr
	  param inout name "makeId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3: register the given attribute node as an ID attribute
"
      end

      operation 5728002 "setIdAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "makeId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3: register the given attribute node as an ID attribute
"
      end

      operation 5728130 "getSchemaTypeInfo"
	public return_type class_ref 648322 // TypeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method getSchemaTypeInfo.
@return TypeInfo
"
      end

      operation 5728258 "isId"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2561026 // xmlEncoding (<unidirectional association>)
	relation 2561026 --->
	  a role_name "xmlEncoding" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2561026 // xmlEncoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5728386 "getXmlEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5728514 "setXmlEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "xmlEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1240706 "xmlStandalone"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5728642 "getXmlStandalone"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5728770 "setXmlStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "xmlStandalone" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2561154 // xmlVersion (<unidirectional association>)
	relation 2561154 --->
	  a role_name "xmlVersion" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2561154 // xmlVersion (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5728898 "getXmlVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5729026 "setXmlVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "xmlVersion" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 800642 "URI"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class to represent a Uniform Resource Identifier (URI). This class
is designed to handle the parsing of URIs and provide access to
the various components (scheme, host, port, userinfo, path, query
string and fragment) that may constitute a URI.
<p>
Parsing of a URI specification is done according to the URI
syntax described in RFC 2396
<http://www.ietf.org/rfc/rfc2396.txt?number=2396>. Every URI consists
of a scheme, followed by a colon (':'), followed by a scheme-specific
part. For URIs that follow the \"generic URI\" syntax, the scheme-
specific part begins with two slashes (\"//\") and may be followed
by an authority segment (comprised of user information, host, and
port), path segment, query segment and fragment. Note that RFC 2396
no longer specifies the use of the parameters segment and excludes
the \"user:password\" syntax as part of the authority segment. If
\"user:password\" appears in a URI, the entire user/password string
is stored as userinfo.
<p>
For URIs that do not follow the \"generic URI\" syntax (e.g. mailto),
the entire scheme-specific part is treated as the \"path\" portion
of the URI.
<p>
Note that, unlike the java.net.URL class, this class does not provide
any built-in network access functionality nor does it provide any
scheme-specific functionality (for example, it does not know a
default port for a specific scheme). Rather, it only knows the
grammar and basic set of operations that can be applied to a URI.


"
      classrelation 2561282 // <realization>
	relation 2561282 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2561282 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1240834 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7096266377907081897L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 800770 "MalformedURIException"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2561410 // <generalisation>
	  relation 2561410 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2561410 // <generalisation>
	    b parent class_ref 146818 // IOException
	end

	operation 5729154 "MalformedURIException"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>MalformedURIException</code> with no specified
detail message.
"
	end

	operation 5729282 "MalformedURIException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "p_msg" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>MalformedURIException</code> with the
specified detail message.

@param p_msg the detail message.
"
	end
      end

      classrelation 2561538 // RESERVED_CHARACTERS (<unidirectional association>)
	relation 2561538 --->
	  a role_name "RESERVED_CHARACTERS" init_value " \";/?:@&=+$,\"" class_relation const_relation private
	    comment " reserved characters 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2561538 // RESERVED_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2561666 // MARK_CHARACTERS (<unidirectional association>)
	relation 2561666 --->
	  a role_name "MARK_CHARACTERS" init_value " \"-_.!~*'() \"" class_relation const_relation private
	    comment "
URI punctuation mark characters - these, combined with
  alphanumerics, constitute the \"unreserved\" characters

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2561666 // MARK_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2561794 // SCHEME_CHARACTERS (<unidirectional association>)
	relation 2561794 --->
	  a role_name "SCHEME_CHARACTERS" init_value " \"+-.\"" class_relation const_relation private
	    comment " scheme can be composed of alphanumerics and these characters 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2561794 // SCHEME_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2561922 // USERINFO_CHARACTERS (<unidirectional association>)
	relation 2561922 --->
	  a role_name "USERINFO_CHARACTERS" init_value " \";:&=+$,\"" class_relation const_relation private
	    comment "
userinfo can be composed of unreserved, escaped and these
  characters

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2561922 // USERINFO_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2562050 // m_scheme (<unidirectional association>)
	relation 2562050 --->
	  a role_name "m_scheme" init_value " null" private
	    comment " Stores the scheme (usually the protocol) for this URI.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562050 // m_scheme (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2562178 // m_userinfo (<unidirectional association>)
	relation 2562178 --->
	  a role_name "m_userinfo" init_value " null" private
	    comment " If specified, stores the userinfo for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562178 // m_userinfo (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2562306 // m_host (<unidirectional association>)
	relation 2562306 --->
	  a role_name "m_host" init_value " null" private
	    comment " If specified, stores the host for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562306 // m_host (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1240962 "m_port"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If specified, stores the port for this URI; otherwise -1.
 @serial 
"
      end

      classrelation 2562434 // m_path (<unidirectional association>)
	relation 2562434 --->
	  a role_name "m_path" init_value " null" private
	    comment " If specified, stores the path for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562434 // m_path (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2562562 // m_queryString (<unidirectional association>)
	relation 2562562 --->
	  a role_name "m_queryString" init_value " null" private
	    comment "
If specified, stores the query string for this URI; otherwise
  null.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562562 // m_queryString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2562690 // m_fragment (<unidirectional association>)
	relation 2562690 --->
	  a role_name "m_fragment" init_value " null" private
	    comment " If specified, stores the fragment for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562690 // m_fragment (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1241090 "DEBUG"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicate whether in DEBUG mode          
"
      end

      operation 5729410 "URI"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new and uninitialized URI.
"
      end

      operation 5729538 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "p_other" type class_ref 800642 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from another URI. All fields for this URI are
set equal to the fields of the URI passed in.

@param p_other the URI to copy (cannot be null)
"
      end

      operation 5729666 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a URI specification string. If the
specification follows the \"generic URI\" syntax, (two slashes
following the first colon), the specification will be parsed
accordingly - setting the scheme, userinfo, host,port, path, query
string and fragment fields as necessary. If the specification does
not follow the \"generic URI\" syntax, the specification is parsed
into a scheme and scheme-specific part (stored as the path) only.

@param p_uriSpec the URI specification string (cannot be null or
                 empty)

@throws MalformedURIException if p_uriSpec violates any syntax
                                  rules
"
      end

      operation 5729794 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_base" type class_ref 800642 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a base URI and a URI specification string.
The URI specification string may be a relative URI.

@param p_base the base URI (cannot be null if p_uriSpec is null or
              empty)
@param p_uriSpec the URI specification string (cannot be null or
                 empty if p_base is null)

@throws MalformedURIException if p_uriSpec violates any syntax
                                 rules
"
      end

      operation 5729922 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_schemeSpecificPart" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that does not follow the generic URI syntax.
Only the scheme and scheme-specific part (stored as the path) are
initialized.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_schemeSpecificPart the scheme-specific part (cannot be
                            null or empty)

@throws MalformedURIException if p_scheme violates any
                                 syntax rules
"
      end

      operation 5730050 "URI"
	public explicit_return_type ""
	nparams 5
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_host" type class_ref 128130 // String
	  param inout name "p_path" type class_ref 128130 // String
	  param inout name "p_queryString" type class_ref 128130 // String
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that follows the generic URI syntax from its
component parts. Each component is validated for syntax and some
basic semantic checks are performed as well.  See the individual
setter methods for specifics.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_host the hostname or IPv4 address for the URI
@param p_path the URI path - if the path contains '?' or '#',
              then the query string and/or fragment will be
              set from the path; however, if the query and
              fragment are specified both in the path and as
              separate parameters, an exception is thrown
@param p_queryString the URI query string (cannot be specified
                     if path is null)
@param p_fragment the URI fragment (cannot be specified if path
                  is null)

@throws MalformedURIException if any of the parameters violates
                                 syntax rules or semantic rules
"
      end

      operation 5730178 "URI"
	public explicit_return_type ""
	nparams 7
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_userinfo" type class_ref 128130 // String
	  param inout name "p_host" type class_ref 128130 // String
	  param in name "p_port" explicit_type "int"
	  param inout name "p_path" type class_ref 128130 // String
	  param inout name "p_queryString" type class_ref 128130 // String
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that follows the generic URI syntax from its
component parts. Each component is validated for syntax and some
basic semantic checks are performed as well.  See the individual
setter methods for specifics.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_userinfo the URI userinfo (cannot be specified if host
                  is null)
@param p_host the hostname or IPv4 address for the URI
@param p_port the URI port (may be -1 for \"unspecified\"; cannot
              be specified if host is null)
@param p_path the URI path - if the path contains '?' or '#',
              then the query string and/or fragment will be
              set from the path; however, if the query and
              fragment are specified both in the path and as
              separate parameters, an exception is thrown
@param p_queryString the URI query string (cannot be specified
                     if path is null)
@param p_fragment the URI fragment (cannot be specified if path
                  is null)

@throws MalformedURIException if any of the parameters violates
                                 syntax rules or semantic rules
"
      end

      operation 5730306 "initialize"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_other" type class_ref 800642 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize all fields of this URI from another URI.

@param p_other the URI to copy (cannot be null)
"
      end

      operation 5730434 "initialize"
	private explicit_return_type "void"
	nparams 2
	  param inout name "p_base" type class_ref 800642 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this URI from a base URI and a URI specification string.
See RFC 2396 Section 4 and Appendix B for specifications on parsing
the URI and Section 5 for specifications on resolving relative URIs
and relative paths.

@param p_base the base URI (may be null if p_uriSpec is an absolute
              URI)
@param p_uriSpec the URI spec string which may be an absolute or
                 relative URI (can only be null/empty if p_base
                 is not null)

@throws MalformedURIException if p_base is null and p_uriSpec
                                 is not an absolute URI or if
                                 p_uriSpec violates syntax rules
"
      end

      operation 5730562 "initializeScheme"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the scheme for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@throws MalformedURIException if URI does not have a conformant
                                 scheme
"
      end

      operation 5730690 "initializeAuthority"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the authority (userinfo, host and port) for this
URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@throws MalformedURIException if p_uriSpec violates syntax rules
"
      end

      operation 5730818 "initializePath"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the path for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@throws MalformedURIException if p_uriSpec violates syntax rules
"
      end

      operation 5730946 "getScheme"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scheme for this URI.

@return the scheme for this URI
"
      end

      operation 5731074 "getSchemeSpecificPart"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scheme-specific part for this URI (everything following the
scheme and the first colon). See RFC 2396 Section 5.2 for spec.

@return the scheme-specific part for this URI
"
      end

      operation 5731202 "getUserinfo"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the userinfo for this URI.

@return the userinfo for this URI (null if not specified).
"
      end

      operation 5731330 "getHost"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the host for this URI.

@return the host for this URI (null if not specified).
"
      end

      operation 5731458 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the port for this URI.

@return the port for this URI (-1 if not specified).
"
      end

      operation 5731586 "getPath"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "p_includeQueryString" explicit_type "boolean"
	  param inout name "p_includeFragment" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for this URI (optionally with the query string and
fragment).

@param p_includeQueryString if true (and query string is not null),
                            then a \"?\" followed by the query string
                            will be appended
@param p_includeFragment if true (and fragment is not null),
                            then a \"#\" followed by the fragment
                            will be appended

@return the path for this URI possibly including the query string
        and fragment
"
      end

      operation 5731714 "getPath"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for this URI. Note that the value returned is the path
only and does not include the query string or fragment.

@return the path for this URI.
"
      end

      operation 5731842 "getQueryString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the query string for this URI.

@return the query string for this URI. Null is returned if there
        was no \"?\" in the URI spec, empty string if there was a
        \"?\" but no query string following it.
"
      end

      operation 5731970 "getFragment"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the fragment for this URI.

@return the fragment for this URI. Null is returned if there
        was no \"#\" in the URI spec, empty string if there was a
        \"#\" but no fragment following it.
"
      end

      operation 5732098 "setScheme"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_scheme" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the scheme for this URI. The scheme is converted to lowercase
before it is set.

@param p_scheme the scheme for this URI (cannot be null)

@throws MalformedURIException if p_scheme is not a conformant
                                 scheme name
"
      end

      operation 5732226 "setUserinfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_userinfo" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the userinfo for this URI. If a non-null value is passed in and
the host value is null, then an exception is thrown.

@param p_userinfo the userinfo for this URI

@throws MalformedURIException if p_userinfo contains invalid
                                 characters
"
      end

      operation 5732354 "setHost"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_host" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the host for this URI. If null is passed in, the userinfo
field is also set to null and the port is set to -1.

@param p_host the host for this URI

@throws MalformedURIException if p_host is not a valid IP
                                 address or DNS hostname.
"
      end

      operation 5732482 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "p_port" explicit_type "int"
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the port for this URI. -1 is used to indicate that the port is
not specified, otherwise valid port numbers are  between 0 and 65535.
If a valid port number is passed in and the host field is null,
an exception is thrown.

@param p_port the port number for this URI

@throws MalformedURIException if p_port is not -1 and not a
                                 valid port number
"
      end

      operation 5732610 "setPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_path" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the path for this URI. If the supplied path is null, then the
query string and fragment are set to null as well. If the supplied
path includes a query string and/or fragment, these fields will be
parsed and set as well. Note that, for URIs following the \"generic
URI\" syntax, the path specified should start with a slash.
For URIs that do not follow the generic URI syntax, this method
sets the scheme-specific part.

@param p_path the path for this URI (may be null)

@throws MalformedURIException if p_path contains invalid
                                 characters
"
      end

      operation 5732738 "appendPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_addToPath" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append to the end of the path of this URI. If the current path does
not end in a slash and the path to be appended does not begin with
a slash, a slash will be appended to the current path before the
new segment is added. Also, if the current path ends in a slash
and the new segment begins with a slash, the extra slash will be
removed before the new segment is appended.

@param p_addToPath the new segment to be added to the current path

@throws MalformedURIException if p_addToPath contains syntax
                                 errors
"
      end

      operation 5732866 "setQueryString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_queryString" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the query string for this URI. A non-null value is valid only
if this is an URI conforming to the generic URI syntax and
the path value is not null.

@param p_queryString the query string for this URI

@throws MalformedURIException if p_queryString is not null and this
                                 URI does not conform to the generic
                                 URI syntax or if the path is null
"
      end

      operation 5732994 "setFragment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 800770 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the fragment for this URI. A non-null value is valid only
if this is a URI conforming to the generic URI syntax and
the path value is not null.

@param p_fragment the fragment for this URI

@throws MalformedURIException if p_fragment is not null and this
                                 URI does not conform to the generic
                                 URI syntax or if the path is null
"
      end

      operation 5733122 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_test" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Determines if the passed-in Object is equivalent to this URI.

@param p_test the Object to test for equality.

@return true if p_test is a URI with all values equal to this
        URI, false otherwise
"
      end

      operation 5733250 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 5733378 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Get the URI as a string specification. See RFC 2396 Section 5.2.

@return the URI string specification
"
      end

      operation 5733506 "isGenericURI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the indicator as to whether this URI uses the \"generic URI\"
syntax.

@return true if this URI uses the \"generic URI\" syntax, false
        otherwise
"
      end

      operation 5733634 "isConformantSchemeName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_scheme" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a scheme conforms to the rules for a scheme name.
A scheme is conformant if it starts with an alphanumeric, and
contains only alphanumerics, '+','-' and '.'.


@param p_scheme The sheme name to check
@return true if the scheme is conformant, false otherwise
"
      end

      operation 5733762 "isWellFormedAddress"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_address" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a string is syntactically capable of representing
a valid IPv4 address or the domain name of a network host. A valid
IPv4 address consists of four decimal digit groups separated by a
'.'. A hostname consists of domain labels (each of which must
begin and end with an alphanumeric but may contain '-') separated
& by a '.'. See RFC 2396 Section 3.2.2.


@param p_address The address string to check
@return true if the string is a syntactically valid IPv4 address
             or hostname
"
      end

      operation 5733890 "isDigit"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a digit.


@param p_char the character to check
@return true if the char is betweeen '0' and '9', false otherwise
"
      end

      operation 5734018 "isHex"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a character is a hexadecimal character.


@param p_char the character to check
@return true if the char is betweeen '0' and '9', 'a' and 'f'
        or 'A' and 'F', false otherwise
"
      end

      operation 5734146 "isAlpha"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an alphabetic character: a-z or A-Z


@param p_char the character to check
@return true if the char is alphabetic, false otherwise
"
      end

      operation 5734274 "isAlphanum"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an alphanumeric: 0-9, a-z or A-Z


@param p_char the character to check
@return true if the char is alphanumeric, false otherwise
"
      end

      operation 5734402 "isReservedCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a character is a reserved character:
';', '/', '?', ':', '@', '&', '=', '+', '$' or ','


@param p_char the character to check
@return true if the string contains any reserved characters
"
      end

      operation 5734530 "isUnreservedCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an unreserved character.


@param p_char the character to check
@return true if the char is unreserved, false otherwise
"
      end

      operation 5734658 "isURIString"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "p_uric" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a given string contains only URI characters (also
called \"uric\" in RFC 2396). uric consist of all reserved
characters, unreserved characters and escaped characters.


@param p_uric URI string
@return true if the string is comprised of uric, false otherwise
"
      end
    end

    class 800898 "WrappedRuntimeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for throwing important checked exceptions
over non-checked methods.  It should be used with care,
and in limited circumstances.
"
      classrelation 2562818 // <generalisation>
	relation 2562818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2562818 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1241218 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7140414456714658073L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2562946 // m_exception (<unidirectional association>)
	relation 2562946 --->
	  a role_name "m_exception" private
	    comment " Primary checked exception.
 @serial          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2562946 // m_exception (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      operation 5734786 "WrappedRuntimeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a WrappedRuntimeException from a
checked exception.

@param e Primary checked exception
"
      end

      operation 5734914 "WrappedRuntimeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor WrappedRuntimeException


@param msg Exception information.
@param e Primary checked exception
"
      end

      operation 5735042 "getException"
	public return_type class_ref 132226 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the checked exception that this runtime exception wraps.

@return The primary checked exception
"
      end
    end

    class 801026 "WrongParserException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Certain functions may throw this error if they are paired with
the incorrect parser.
@xsl.usage general
"
      classrelation 2563074 // <generalisation>
	relation 2563074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2563074 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1241346 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6481643018533043846L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5735170 "WrongParserException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a WrongParserException object.
@param message The error message that should be reported to the user.
"
      end
    end

    class 801154 "XML11Char"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "THIS IS A COPY OF THE XERCES-2J CLASS com.sun.org.apache.xerces.internal.utls.XMLChar

This class defines the basic properties of characters in XML 1.1. The data
in this class can be used to verify that a character is a valid
XML 1.1 character or if the character is a space, name start, or name
character.
<p>
A series of convenience methods are supplied to ease the burden
of the developer.  Using the character as an index into the <code>XML11CHARS</code>
array and applying the appropriate mask flag (e.g.
<code>MASK_VALID</code>), yields the same results as calling the
convenience methods. There is one exception: check the comments
for the <code>isValid</code> method for details.

"
      attribute 1241474 "XML11CHARS"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte [1 << 16]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Character flags for XML 1.1. 
"
      end

      attribute 1241602 "MASK_XML11_VALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Valid character mask. 
"
      end

      attribute 1241730 "MASK_XML11_SPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Space character mask. 
"
      end

      attribute 1241858 "MASK_XML11_NAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Name start character mask. 
"
      end

      attribute 1241986 "MASK_XML11_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 Name character mask. 
"
      end

      attribute 1242114 "MASK_XML11_CONTROL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 control character mask 
"
      end

      attribute 1242242 "MASK_XML11_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 content for external entities (valid - \"special\" chars - control chars) 
"
      end

      attribute 1242370 "MASK_XML11_NCNAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML namespaces 1.1 NCNameStart 
"
      end

      attribute 1242498 "MASK_XML11_NCNAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML namespaces 1.1 NCName 
"
      end

      attribute 1242626 "MASK_XML11_CONTENT_INTERNAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " MASK_XML11_CONTROL | MASK_XML11_CONTENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML 1.1 content for internal entities (valid - \"special\" chars) 
"
      end

      extra_member 146818 "initialization"
	
	cpp "" ""
	java "  static {

        // Initializing the Character Flag Array
        // Code generated by: XML11CharGenerator.

        Arrays.fill(XML11CHARS, 1, 9, (byte) 17 ); // Fill 8 of value (byte) 17
        XML11CHARS[9] = 35;
        XML11CHARS[10] = 3;
        Arrays.fill(XML11CHARS, 11, 13, (byte) 17 ); // Fill 2 of value (byte) 17
        XML11CHARS[13] = 3;
        Arrays.fill(XML11CHARS, 14, 32, (byte) 17 ); // Fill 18 of value (byte) 17
        XML11CHARS[32] = 35;
        Arrays.fill(XML11CHARS, 33, 38, (byte) 33 ); // Fill 5 of value (byte) 33
        XML11CHARS[38] = 1;
        Arrays.fill(XML11CHARS, 39, 45, (byte) 33 ); // Fill 6 of value (byte) 33
        Arrays.fill(XML11CHARS, 45, 47, (byte) -87 ); // Fill 2 of value (byte) -87
        XML11CHARS[47] = 33;
        Arrays.fill(XML11CHARS, 48, 58, (byte) -87 ); // Fill 10 of value (byte) -87
        XML11CHARS[58] = 45;
        XML11CHARS[59] = 33;
        XML11CHARS[60] = 1;
        Arrays.fill(XML11CHARS, 61, 65, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(XML11CHARS, 65, 91, (byte) -19 ); // Fill 26 of value (byte) -19
        Arrays.fill(XML11CHARS, 91, 93, (byte) 33 ); // Fill 2 of value (byte) 33
        XML11CHARS[93] = 1;
        XML11CHARS[94] = 33;
        XML11CHARS[95] = -19;
        XML11CHARS[96] = 33;
        Arrays.fill(XML11CHARS, 97, 123, (byte) -19 ); // Fill 26 of value (byte) -19
        Arrays.fill(XML11CHARS, 123, 127, (byte) 33 ); // Fill 4 of value (byte) 33
        Arrays.fill(XML11CHARS, 127, 133, (byte) 17 ); // Fill 6 of value (byte) 17
        XML11CHARS[133] = 35;
        Arrays.fill(XML11CHARS, 134, 160, (byte) 17 ); // Fill 26 of value (byte) 17
        Arrays.fill(XML11CHARS, 160, 183, (byte) 33 ); // Fill 23 of value (byte) 33
        XML11CHARS[183] = -87;
        Arrays.fill(XML11CHARS, 184, 192, (byte) 33 ); // Fill 8 of value (byte) 33
        Arrays.fill(XML11CHARS, 192, 215, (byte) -19 ); // Fill 23 of value (byte) -19
        XML11CHARS[215] = 33;
        Arrays.fill(XML11CHARS, 216, 247, (byte) -19 ); // Fill 31 of value (byte) -19
        XML11CHARS[247] = 33;
        Arrays.fill(XML11CHARS, 248, 768, (byte) -19 ); // Fill 520 of value (byte) -19
        Arrays.fill(XML11CHARS, 768, 880, (byte) -87 ); // Fill 112 of value (byte) -87
        Arrays.fill(XML11CHARS, 880, 894, (byte) -19 ); // Fill 14 of value (byte) -19
        XML11CHARS[894] = 33;
        Arrays.fill(XML11CHARS, 895, 8192, (byte) -19 ); // Fill 7297 of value (byte) -19
        Arrays.fill(XML11CHARS, 8192, 8204, (byte) 33 ); // Fill 12 of value (byte) 33
        Arrays.fill(XML11CHARS, 8204, 8206, (byte) -19 ); // Fill 2 of value (byte) -19
        Arrays.fill(XML11CHARS, 8206, 8232, (byte) 33 ); // Fill 26 of value (byte) 33
        XML11CHARS[8232] = 35;
        Arrays.fill(XML11CHARS, 8233, 8255, (byte) 33 ); // Fill 22 of value (byte) 33
        Arrays.fill(XML11CHARS, 8255, 8257, (byte) -87 ); // Fill 2 of value (byte) -87
        Arrays.fill(XML11CHARS, 8257, 8304, (byte) 33 ); // Fill 47 of value (byte) 33
        Arrays.fill(XML11CHARS, 8304, 8592, (byte) -19 ); // Fill 288 of value (byte) -19
        Arrays.fill(XML11CHARS, 8592, 11264, (byte) 33 ); // Fill 2672 of value (byte) 33
        Arrays.fill(XML11CHARS, 11264, 12272, (byte) -19 ); // Fill 1008 of value (byte) -19
        Arrays.fill(XML11CHARS, 12272, 12289, (byte) 33 ); // Fill 17 of value (byte) 33
        Arrays.fill(XML11CHARS, 12289, 55296, (byte) -19 ); // Fill 43007 of value (byte) -19
        Arrays.fill(XML11CHARS, 57344, 63744, (byte) 33 ); // Fill 6400 of value (byte) 33
        Arrays.fill(XML11CHARS, 63744, 64976, (byte) -19 ); // Fill 1232 of value (byte) -19
        Arrays.fill(XML11CHARS, 64976, 65008, (byte) 33 ); // Fill 32 of value (byte) 33
        Arrays.fill(XML11CHARS, 65008, 65534, (byte) -19 ); // Fill 526 of value (byte) -19

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5735298 "isXML11Space"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <clinit>()

 Public static methods


Returns true if the specified character is a space character
as amdended in the XML 1.1 specification.

@param c The character to check.
"
      end

      operation 5735426 "isXML11Valid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Space(int):boolean

Returns true if the specified character is valid. This method
also checks the surrogate character range from 0x10000 to 0x10FFFF.
<p>
If the program chooses to apply the mask directly to the
<code>XML11CHARS</code> array, then they are responsible for checking
the surrogate character range.

@param c The character to check.
"
      end

      operation 5735554 "isXML11Invalid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Valid(int):boolean

Returns true if the specified character is invalid.

@param c The character to check.
"
      end

      operation 5735682 "isXML11ValidLiteral"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Invalid(int):boolean

Returns true if the specified character is valid and permitted outside
of a character reference.
That is, this method will return false for the same set as
isXML11Valid, except it also reports false for \"control characters\".

@param c The character to check.
"
      end

      operation 5735810 "isXML11Content"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidLiteral(int):boolean

Returns true if the specified character can be considered
content in an external parsed entity.

@param c The character to check.
"
      end

      operation 5735938 "isXML11InternalEntityContent"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Content(int):boolean

Returns true if the specified character can be considered
content in an internal parsed entity.

@param c The character to check.
"
      end

      operation 5736066 "isXML11NameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11InternalEntityContent(int):boolean

Returns true if the specified character is a valid name start
character as defined by production [4] in the XML 1.1
specification.

@param c The character to check.
"
      end

      operation 5736194 "isXML11Name"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11NameStart(int):boolean

Returns true if the specified character is a valid name
character as defined by production [4a] in the XML 1.1
specification.

@param c The character to check.
"
      end

      operation 5736322 "isXML11NCNameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11Name(int):boolean

Returns true if the specified character is a valid NCName start
character as defined by production [4] in Namespaces in XML
1.1 recommendation.

@param c The character to check.
"
      end

      operation 5736450 "isXML11NCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11NCNameStart(int):boolean

Returns true if the specified character is a valid NCName
character as defined by production [5] in Namespaces in XML
1.1 recommendation.

@param c The character to check.
"
      end

      operation 5736578 "isXML11NameHighSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11NCName(int):boolean

Returns whether the given character is a valid
high surrogate for a name character. This includes
all high surrogates for characters [0x10000-0xEFFFF].
In other words everything excluding planes 15 and 16.

@param c The character to check.
"
      end

      operation 5736706 "isXML11ValidName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[5] Name ::= NameStartChar NameChar*


Check to see if a string is a valid Name according to [5]
in the XML 1.1 Recommendation

@param name string to check
@return true if name is a valid Name
"
      end

      operation 5736834 "isXML11ValidNCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "ncName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidName(String):boolean

from the namespace 1.1 rec
[4] NCName ::= NCNameStartChar NCNameChar*


Check to see if a string is a valid NCName according to [4]
from the XML Namespaces 1.1 Recommendation

@param ncName string to check
@return true if name is a valid NCName
"
      end

      operation 5736962 "isXML11ValidNmtoken"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nmtoken" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidNCName(String):boolean

[7] Nmtoken ::= (NameChar)+


Check to see if a string is a valid Nmtoken according to [7]
in the XML 1.1 Recommendation

@param nmtoken string to check
@return true if nmtoken is a valid Nmtoken
"
      end

      operation 5737090 "isXML11ValidQName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXML11ValidName(String):boolean

Simple check to determine if qname is legal. If it returns false
then <param>str</param> is illegal; if it returns true then
<param>str</param> is legal.
"
      end
    end

    class 801282 "XMLChar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines the basic XML character properties. The data
in this class can be used to verify that a character is a valid
XML character or if the character is a space, name start, or name
character.
<p>
A series of convenience methods are supplied to ease the burden
of the developer. Because inlining the checks can improve per
character performance, the tables of character properties are
public. Using the character as an index into the <code>CHARS</code>
array and applying the appropriate mask flag (e.g.
<code>MASK_VALID</code>), yields the same results as calling the
convenience methods. There is one exception: check the comments
for the <code>isValid</code> method for details.

@author Glenn Marcy, IBM
@author Andy Clark, IBM
@author Eric Ye, IBM
@author Arnaud  Le Hors, IBM
@author Rahul Srivastava, Sun Microsystems Inc.

"
      attribute 1242754 "CHARS"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[1 << 16]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Character flags. 
"
      end

      attribute 1242882 "MASK_VALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid character mask. 
"
      end

      attribute 1243010 "MASK_SPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Space character mask. 
"
      end

      attribute 1243138 "MASK_NAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Name start character mask. 
"
      end

      attribute 1243266 "MASK_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Name character mask. 
"
      end

      attribute 1243394 "MASK_PUBID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Pubid character mask. 
"
      end

      attribute 1243522 "MASK_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Content character mask. Special characters are those that can
be considered the start of markup, such as '&lt;' and '&amp;'.
The various newline characters are considered special as well.
All other valid XML characters can be considered content.
<p>
This is an optimization for the inner loop of character scanning.

"
      end

      attribute 1243650 "MASK_NCNAME_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NCName start character mask. 
"
      end

      attribute 1243778 "MASK_NCNAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NCName character mask. 
"
      end

      extra_member 146946 "initialization"
	
	cpp "" ""
	java "  static {

        //
        // [2] Char ::= #x9 | #xA | #xD | [#x20-#xD7FF] |
        //              [#xE000-#xFFFD] | [#x10000-#x10FFFF]
        //

        int charRange[] = {
            0x0009, 0x000A, 0x000D, 0x000D, 0x0020, 0xD7FF, 0xE000, 0xFFFD,
        };

        //
        // [3] S ::= (#x20 | #x9 | #xD | #xA)+
        //

        int spaceChar[] = {
            0x0020, 0x0009, 0x000D, 0x000A,
        };

        //
        // [4] NameChar ::= Letter | Digit | '.' | '-' | '_' | ':' |
        //                  CombiningChar | Extender
        //

        int nameChar[] = {
            0x002D, 0x002E, // '-' and '.'
        };

        //
        // [5] Name ::= (Letter | '_' | ':') (NameChar)*
        //

        int nameStartChar[] = {
            0x003A, 0x005F, // ':' and '_'
        };

        //
        // [13] PubidChar ::= #x20 | 0xD | 0xA | [a-zA-Z0-9] | [-'()+,./:=?;!*#@$_%]
        //

        int pubidChar[] = {
            0x000A, 0x000D, 0x0020, 0x0021, 0x0023, 0x0024, 0x0025, 0x003D,
            0x005F
        };

        int pubidRange[] = {
            0x0027, 0x003B, 0x003F, 0x005A, 0x0061, 0x007A
        };

        //
        // [84] Letter ::= BaseChar | Ideographic
        //

        int letterRange[] = {
            // BaseChar
            0x0041, 0x005A, 0x0061, 0x007A, 0x00C0, 0x00D6, 0x00D8, 0x00F6,
            0x00F8, 0x0131, 0x0134, 0x013E, 0x0141, 0x0148, 0x014A, 0x017E,
            0x0180, 0x01C3, 0x01CD, 0x01F0, 0x01F4, 0x01F5, 0x01FA, 0x0217,
            0x0250, 0x02A8, 0x02BB, 0x02C1, 0x0388, 0x038A, 0x038E, 0x03A1,
            0x03A3, 0x03CE, 0x03D0, 0x03D6, 0x03E2, 0x03F3, 0x0401, 0x040C,
            0x040E, 0x044F, 0x0451, 0x045C, 0x045E, 0x0481, 0x0490, 0x04C4,
            0x04C7, 0x04C8, 0x04CB, 0x04CC, 0x04D0, 0x04EB, 0x04EE, 0x04F5,
            0x04F8, 0x04F9, 0x0531, 0x0556, 0x0561, 0x0586, 0x05D0, 0x05EA,
            0x05F0, 0x05F2, 0x0621, 0x063A, 0x0641, 0x064A, 0x0671, 0x06B7,
            0x06BA, 0x06BE, 0x06C0, 0x06CE, 0x06D0, 0x06D3, 0x06E5, 0x06E6,
            0x0905, 0x0939, 0x0958, 0x0961, 0x0985, 0x098C, 0x098F, 0x0990,
            0x0993, 0x09A8, 0x09AA, 0x09B0, 0x09B6, 0x09B9, 0x09DC, 0x09DD,
            0x09DF, 0x09E1, 0x09F0, 0x09F1, 0x0A05, 0x0A0A, 0x0A0F, 0x0A10,
            0x0A13, 0x0A28, 0x0A2A, 0x0A30, 0x0A32, 0x0A33, 0x0A35, 0x0A36,
            0x0A38, 0x0A39, 0x0A59, 0x0A5C, 0x0A72, 0x0A74, 0x0A85, 0x0A8B,
            0x0A8F, 0x0A91, 0x0A93, 0x0AA8, 0x0AAA, 0x0AB0, 0x0AB2, 0x0AB3,
            0x0AB5, 0x0AB9, 0x0B05, 0x0B0C, 0x0B0F, 0x0B10, 0x0B13, 0x0B28,
            0x0B2A, 0x0B30, 0x0B32, 0x0B33, 0x0B36, 0x0B39, 0x0B5C, 0x0B5D,
            0x0B5F, 0x0B61, 0x0B85, 0x0B8A, 0x0B8E, 0x0B90, 0x0B92, 0x0B95,
            0x0B99, 0x0B9A, 0x0B9E, 0x0B9F, 0x0BA3, 0x0BA4, 0x0BA8, 0x0BAA,
            0x0BAE, 0x0BB5, 0x0BB7, 0x0BB9, 0x0C05, 0x0C0C, 0x0C0E, 0x0C10,
            0x0C12, 0x0C28, 0x0C2A, 0x0C33, 0x0C35, 0x0C39, 0x0C60, 0x0C61,
            0x0C85, 0x0C8C, 0x0C8E, 0x0C90, 0x0C92, 0x0CA8, 0x0CAA, 0x0CB3,
            0x0CB5, 0x0CB9, 0x0CE0, 0x0CE1, 0x0D05, 0x0D0C, 0x0D0E, 0x0D10,
            0x0D12, 0x0D28, 0x0D2A, 0x0D39, 0x0D60, 0x0D61, 0x0E01, 0x0E2E,
            0x0E32, 0x0E33, 0x0E40, 0x0E45, 0x0E81, 0x0E82, 0x0E87, 0x0E88,
            0x0E94, 0x0E97, 0x0E99, 0x0E9F, 0x0EA1, 0x0EA3, 0x0EAA, 0x0EAB,
            0x0EAD, 0x0EAE, 0x0EB2, 0x0EB3, 0x0EC0, 0x0EC4, 0x0F40, 0x0F47,
            0x0F49, 0x0F69, 0x10A0, 0x10C5, 0x10D0, 0x10F6, 0x1102, 0x1103,
            0x1105, 0x1107, 0x110B, 0x110C, 0x110E, 0x1112, 0x1154, 0x1155,
            0x115F, 0x1161, 0x116D, 0x116E, 0x1172, 0x1173, 0x11AE, 0x11AF,
            0x11B7, 0x11B8, 0x11BC, 0x11C2, 0x1E00, 0x1E9B, 0x1EA0, 0x1EF9,
            0x1F00, 0x1F15, 0x1F18, 0x1F1D, 0x1F20, 0x1F45, 0x1F48, 0x1F4D,
            0x1F50, 0x1F57, 0x1F5F, 0x1F7D, 0x1F80, 0x1FB4, 0x1FB6, 0x1FBC,
            0x1FC2, 0x1FC4, 0x1FC6, 0x1FCC, 0x1FD0, 0x1FD3, 0x1FD6, 0x1FDB,
            0x1FE0, 0x1FEC, 0x1FF2, 0x1FF4, 0x1FF6, 0x1FFC, 0x212A, 0x212B,
            0x2180, 0x2182, 0x3041, 0x3094, 0x30A1, 0x30FA, 0x3105, 0x312C,
            0xAC00, 0xD7A3,
            // Ideographic
            0x3021, 0x3029, 0x4E00, 0x9FA5,
        };
        int letterChar[] = {
            // BaseChar
            0x0386, 0x038C, 0x03DA, 0x03DC, 0x03DE, 0x03E0, 0x0559, 0x06D5,
            0x093D, 0x09B2, 0x0A5E, 0x0A8D, 0x0ABD, 0x0AE0, 0x0B3D, 0x0B9C,
            0x0CDE, 0x0E30, 0x0E84, 0x0E8A, 0x0E8D, 0x0EA5, 0x0EA7, 0x0EB0,
            0x0EBD, 0x1100, 0x1109, 0x113C, 0x113E, 0x1140, 0x114C, 0x114E,
            0x1150, 0x1159, 0x1163, 0x1165, 0x1167, 0x1169, 0x1175, 0x119E,
            0x11A8, 0x11AB, 0x11BA, 0x11EB, 0x11F0, 0x11F9, 0x1F59, 0x1F5B,
            0x1F5D, 0x1FBE, 0x2126, 0x212E,
            // Ideographic
            0x3007,
        };

        //
        // [87] CombiningChar ::= ...
        //

        int combiningCharRange[] = {
            0x0300, 0x0345, 0x0360, 0x0361, 0x0483, 0x0486, 0x0591, 0x05A1,
            0x05A3, 0x05B9, 0x05BB, 0x05BD, 0x05C1, 0x05C2, 0x064B, 0x0652,
            0x06D6, 0x06DC, 0x06DD, 0x06DF, 0x06E0, 0x06E4, 0x06E7, 0x06E8,
            0x06EA, 0x06ED, 0x0901, 0x0903, 0x093E, 0x094C, 0x0951, 0x0954,
            0x0962, 0x0963, 0x0981, 0x0983, 0x09C0, 0x09C4, 0x09C7, 0x09C8,
            0x09CB, 0x09CD, 0x09E2, 0x09E3, 0x0A40, 0x0A42, 0x0A47, 0x0A48,
            0x0A4B, 0x0A4D, 0x0A70, 0x0A71, 0x0A81, 0x0A83, 0x0ABE, 0x0AC5,
            0x0AC7, 0x0AC9, 0x0ACB, 0x0ACD, 0x0B01, 0x0B03, 0x0B3E, 0x0B43,
            0x0B47, 0x0B48, 0x0B4B, 0x0B4D, 0x0B56, 0x0B57, 0x0B82, 0x0B83,
            0x0BBE, 0x0BC2, 0x0BC6, 0x0BC8, 0x0BCA, 0x0BCD, 0x0C01, 0x0C03,
            0x0C3E, 0x0C44, 0x0C46, 0x0C48, 0x0C4A, 0x0C4D, 0x0C55, 0x0C56,
            0x0C82, 0x0C83, 0x0CBE, 0x0CC4, 0x0CC6, 0x0CC8, 0x0CCA, 0x0CCD,
            0x0CD5, 0x0CD6, 0x0D02, 0x0D03, 0x0D3E, 0x0D43, 0x0D46, 0x0D48,
            0x0D4A, 0x0D4D, 0x0E34, 0x0E3A, 0x0E47, 0x0E4E, 0x0EB4, 0x0EB9,
            0x0EBB, 0x0EBC, 0x0EC8, 0x0ECD, 0x0F18, 0x0F19, 0x0F71, 0x0F84,
            0x0F86, 0x0F8B, 0x0F90, 0x0F95, 0x0F99, 0x0FAD, 0x0FB1, 0x0FB7,
            0x20D0, 0x20DC, 0x302A, 0x302F,
        };

        int combiningCharChar[] = {
            0x05BF, 0x05C4, 0x0670, 0x093C, 0x094D, 0x09BC, 0x09BE, 0x09BF,
            0x09D7, 0x0A02, 0x0A3C, 0x0A3E, 0x0A3F, 0x0ABC, 0x0B3C, 0x0BD7,
            0x0D57, 0x0E31, 0x0EB1, 0x0F35, 0x0F37, 0x0F39, 0x0F3E, 0x0F3F,
            0x0F97, 0x0FB9, 0x20E1, 0x3099, 0x309A,
        };

        //
        // [88] Digit ::= ...
        //

        int digitRange[] = {
            0x0030, 0x0039, 0x0660, 0x0669, 0x06F0, 0x06F9, 0x0966, 0x096F,
            0x09E6, 0x09EF, 0x0A66, 0x0A6F, 0x0AE6, 0x0AEF, 0x0B66, 0x0B6F,
            0x0BE7, 0x0BEF, 0x0C66, 0x0C6F, 0x0CE6, 0x0CEF, 0x0D66, 0x0D6F,
            0x0E50, 0x0E59, 0x0ED0, 0x0ED9, 0x0F20, 0x0F29,
        };

        //
        // [89] Extender ::= ...
        //

        int extenderRange[] = {
            0x3031, 0x3035, 0x309D, 0x309E, 0x30FC, 0x30FE,
        };

        int extenderChar[] = {
            0x00B7, 0x02D0, 0x02D1, 0x0387, 0x0640, 0x0E46, 0x0EC6, 0x3005,
        };

        //
        // SpecialChar ::= '<', '&', '\\n', '\\r', ']'
        //

        int specialChar[] = {
            '<', '&', '\\n', '\\r', ']',
        };

        //
        // Initialize
        //

        // set valid characters
        for (int i = 0; i < charRange.length; i += 2) {
            for (int j = charRange[i]; j <= charRange[i + 1]; j++) {
                CHARS[j] |= MASK_VALID | MASK_CONTENT;
            }
        }

        // remove special characters
        for (int i = 0; i < specialChar.length; i++) {
            CHARS[specialChar[i]] = (byte)(CHARS[specialChar[i]] & ~MASK_CONTENT);
        }

        // set space characters
        for (int i = 0; i < spaceChar.length; i++) {
            CHARS[spaceChar[i]] |= MASK_SPACE;
        }

        // set name start characters
        for (int i = 0; i < nameStartChar.length; i++) {
            CHARS[nameStartChar[i]] |= MASK_NAME_START | MASK_NAME |
                                       MASK_NCNAME_START | MASK_NCNAME;
        }
        for (int i = 0; i < letterRange.length; i += 2) {
            for (int j = letterRange[i]; j <= letterRange[i + 1]; j++) {
                CHARS[j] |= MASK_NAME_START | MASK_NAME |
                            MASK_NCNAME_START | MASK_NCNAME;
            }
        }
        for (int i = 0; i < letterChar.length; i++) {
            CHARS[letterChar[i]] |= MASK_NAME_START | MASK_NAME |
                                    MASK_NCNAME_START | MASK_NCNAME;
        }

        // set name characters
        for (int i = 0; i < nameChar.length; i++) {
            CHARS[nameChar[i]] |= MASK_NAME | MASK_NCNAME;
        }
        for (int i = 0; i < digitRange.length; i += 2) {
            for (int j = digitRange[i]; j <= digitRange[i + 1]; j++) {
                CHARS[j] |= MASK_NAME | MASK_NCNAME;
            }
        }
        for (int i = 0; i < combiningCharRange.length; i += 2) {
            for (int j = combiningCharRange[i]; j <= combiningCharRange[i + 1]; j++) {
                CHARS[j] |= MASK_NAME | MASK_NCNAME;
            }
        }
        for (int i = 0; i < combiningCharChar.length; i++) {
            CHARS[combiningCharChar[i]] |= MASK_NAME | MASK_NCNAME;
        }
        for (int i = 0; i < extenderRange.length; i += 2) {
            for (int j = extenderRange[i]; j <= extenderRange[i + 1]; j++) {
                CHARS[j] |= MASK_NAME | MASK_NCNAME;
            }
        }
        for (int i = 0; i < extenderChar.length; i++) {
            CHARS[extenderChar[i]] |= MASK_NAME | MASK_NCNAME;
        }

        // remove ':' from allowable MASK_NCNAME_START and MASK_NCNAME chars
        CHARS[':'] &= ~(MASK_NCNAME_START | MASK_NCNAME);

        // set Pubid characters
        for (int i = 0; i < pubidChar.length; i++) {
            CHARS[pubidChar[i]] |= MASK_PUBID;
        }
        for (int i = 0; i < pubidRange.length; i += 2) {
            for (int j = pubidRange[i]; j <= pubidRange[i + 1]; j++) {
                CHARS[j] |= MASK_PUBID;
            }
        }

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5737218 "isSupplemental"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <clinit>()

 Public static methods


Returns true if the specified character is a supplemental character.

@param c The character to check.
"
      end

      operation 5737346 "supplemental"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "h" explicit_type "char"
	  param in name "l" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true the supplemental character corresponding to the given
surrogates.

@param h The high surrogate.
@param l The low surrogate.
"
      end

      operation 5737474 "highSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the high surrogate of a supplemental character

@param c The supplemental character to \"split\".
"
      end

      operation 5737602 "lowSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the low surrogate of a supplemental character

@param c The supplemental character to \"split\".
"
      end

      operation 5737730 "isHighSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given character is a high surrogate

@param c The character to check.
"
      end

      operation 5737858 "isLowSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given character is a low surrogate

@param c The character to check.
"
      end

      operation 5737986 "isValid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified character is valid. This method
also checks the surrogate character range from 0x10000 to 0x10FFFF.
<p>
If the program chooses to apply the mask directly to the
<code>CHARS</code> array, then they are responsible for checking
the surrogate character range.

@param c The character to check.
"
      end

      operation 5738114 "isInvalid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValid(int):boolean

Returns true if the specified character is invalid.

@param c The character to check.
"
      end

      operation 5738242 "isContent"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isInvalid(int):boolean

Returns true if the specified character can be considered content.

@param c The character to check.
"
      end

      operation 5738370 "isMarkup"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isContent(int):boolean

Returns true if the specified character can be considered markup.
Markup characters include '&lt;', '&amp;', and '%'.

@param c The character to check.
"
      end

      operation 5738498 "isSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isMarkup(int):boolean

Returns true if the specified character is a space character
as defined by production [3] in the XML 1.0 specification.

@param c The character to check.
"
      end

      operation 5738626 "isNameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isSpace(int):boolean

Returns true if the specified character is a valid name start
character as defined by production [5] in the XML 1.0
specification.

@param c The character to check.
"
      end

      operation 5738754 "isName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNameStart(int):boolean

Returns true if the specified character is a valid name
character as defined by production [4] in the XML 1.0
specification.

@param c The character to check.
"
      end

      operation 5738882 "isNCNameStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isName(int):boolean

Returns true if the specified character is a valid NCName start
character as defined by production [4] in Namespaces in XML
recommendation.

@param c The character to check.
"
      end

      operation 5739010 "isNCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNCNameStart(int):boolean

Returns true if the specified character is a valid NCName
character as defined by production [5] in Namespaces in XML
recommendation.

@param c The character to check.
"
      end

      operation 5739138 "isPubid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNCName(int):boolean

Returns true if the specified character is a valid Pubid
character as defined by production [13] in the XML 1.0
specification.

@param c The character to check.
"
      end

      operation 5739266 "isValidName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isPubid(int):boolean

[5] Name ::= (Letter | '_' | ':') (NameChar)*


Check to see if a string is a valid Name according to [5]
in the XML 1.0 Recommendation

@param name string to check
@return true if name is a valid Name
"
      end

      operation 5739394 "isValidNCName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "ncName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidName(String):boolean

from the namespace rec
[4] NCName ::= (Letter | '_') (NCNameChar)*


Check to see if a string is a valid NCName according to [4]
from the XML Namespaces 1.0 Recommendation

@param ncName string to check
@return true if name is a valid NCName
"
      end

      operation 5739522 "isValidNmtoken"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nmtoken" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidNCName(String):boolean

[7] Nmtoken ::= (NameChar)+


Check to see if a string is a valid Nmtoken according to [7]
in the XML 1.0 Recommendation

@param nmtoken string to check
@return true if nmtoken is a valid Nmtoken
"
      end

      operation 5739650 "isValidIANAEncoding"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "ianaEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidName(String):boolean
 encodings

Returns true if the encoding name is a valid IANA encoding.
This method does not verify that there is a decoder available
for this encoding, only that the characters are valid for an
IANA encoding name.

@param ianaEncoding The IANA encoding name.
"
      end

      operation 5739778 "isValidJavaEncoding"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "javaEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidIANAEncoding(String):boolean

Returns true if the encoding name is a valid Java encoding.
This method does not verify that there is a decoder available
for this encoding, only that the characters are valid for an
Java encoding name.

@param javaEncoding The Java encoding name.
"
      end

      operation 5739906 "isValidQName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidIANAEncoding(String):boolean

Simple check to determine if qname is legal. If it returns false
then <param>str</param> is illegal; if it returns true then
<param>str</param> is legal.
"
      end
    end

    class 801410 "XMLCharacterRecognizer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class used to verify whether the specified <var>ch</var>
conforms to the XML 1.0 definition of whitespace.
@xsl.usage internal
"
      operation 5740034 "isWhiteSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified <var>ch</var> conforms to the XML 1.0 definition
of whitespace.  Refer to <A href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-S\">
the definition of <CODE>S</CODE></A> for details.
@param ch Character to check as XML whitespace.
@return =true if <var>ch</var> is XML whitespace; otherwise =false.
"
      end

      operation 5740162 "isWhiteSpace"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the string is whitespace.

@param ch Character array to check as XML whitespace.
@param start Start index of characters in the array
@param length Number of characters in the array
@return True if the characters in the array are
XML whitespace; otherwise, false.
"
      end

      operation 5740290 "isWhiteSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "buf" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the string is whitespace.

@param buf StringBuffer to check as XML whitespace.
@return True if characters in buffer are XML whitespace, false otherwise
"
      end

      operation 5740418 "isWhiteSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the string is whitespace.

@param s String to check as XML whitespace.
@return True if characters in buffer are XML whitespace, false otherwise
"
      end
    end

    class 801538 "XMLStringDefault"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default implementation of the XMLString interface,
which is just a simple wrapper of a String object.
"
      classrelation 2564354 // <realization>
	relation 2564354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2564354 // <realization>
	  b parent class_ref 619010 // XMLString
      end

      classrelation 2564482 // m_str (<unidirectional association>)
	relation 2564482 --->
	  a role_name "m_str" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2564482 // m_str (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5746562 "XMLStringDefault"
	public explicit_return_type ""
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLStringDefault object from a String
"
      end

      operation 5746690 "dispatchCharactersEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5746818 "dispatchAsComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lh" type class_ref 617602 // LexicalHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
comment method on the passed LexicalHandler for the
string-value.

@param lh A non-null reference to a LexicalHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5746946 "fixWhiteSpace"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "trimHead" explicit_type "boolean"
	  param inout name "trimTail" explicit_type "boolean"
	  param inout name "doublePunctuationSpaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Conditionally trim all leading and trailing whitespace in the specified String.
All strings of white space are
replaced by a single space character (#x20), except spaces after punctuation which
receive double spaces if doublePunctuationSpaces is true.
This function may be useful to a formatter, but to get first class
results, the formatter should probably do it's own white space handling
based on the semantics of the formatting object.

@param   trimHead    Trim leading whitespace?
@param   trimTail    Trim trailing whitespace?
@param   doublePunctuationSpaces    Use double spaces for punctuation?
@return              The trimmed string.
"
      end

      operation 5747074 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this string.

@return  the length of the sequence of characters represented by this
         object.
"
      end

      operation 5747202 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character at the specified index. An index ranges
from <code>0</code> to <code>length() - 1</code>. The first character
of the sequence is at index <code>0</code>, the next at index
<code>1</code>, and so on, as for array indexing.

@param      index   the index of the character.
@return     the character at the specified index of this string.
            The first character is at index <code>0</code>.
@exception  IndexOutOfBoundsException  if the <code>index</code>
            argument is negative or not less than the length of this
            string.
"
      end

      operation 5747330 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li><code>srcBegin</code> is negative.
           <li><code>srcBegin</code> is greater than <code>srcEnd</code>
           <li><code>srcEnd</code> is greater than the length of this
               string
           <li><code>dstBegin</code> is negative
           <li><code>dstBegin+(srcEnd-srcBegin)</code> is larger than
               <code>dst.length</code></ul>
@exception NullPointerException if <code>dst</code> is <code>null</code>
"
      end

      operation 5747458 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified <code>String</code>.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   obj2   the object to compare this <code>String</code> against.
@return  <code>true</code> if the <code>String</code>s are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5747586 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anObject" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   anObject   the object to compare this <code>String</code>
                    against.
@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5747714 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   anObject   the object to compare this <code>String</code>
                    against.
@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5747842 "equalsIgnoreCase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>String</code> to another <code>String</code>,
ignoring case considerations.  Two strings are considered equal
ignoring case if they are of the same length, and corresponding
characters in the two strings are equal ignoring case.

@param   anotherString   the <code>String</code> to compare this
                         <code>String</code> against.
@return  <code>true</code> if the argument is not <code>null</code>
         and the <code>String</code>s are equal,
         ignoring case; <code>false</code> otherwise.
@see     #equals(Object)
@see     java.lang.Character#toLowerCase(char)
@see java.lang.Character#toUpperCase(char)
"
      end

      operation 5747970 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherString" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically.

@param   anotherString   the <code>String</code> to be compared.
@return  the value <code>0</code> if the argument string is equal to
         this string; a value less than <code>0</code> if this string
         is lexicographically less than the string argument; and a
         value greater than <code>0</code> if this string is
         lexicographically greater than the string argument.
@exception java.lang.NullPointerException if <code>anotherString</code>
         is <code>null</code>.
"
      end

      operation 5748098 "compareToIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically, ignoring case considerations.
This method returns an integer whose sign is that of
<code>this.toUpperCase().toLowerCase().compareTo(
str.toUpperCase().toLowerCase())</code>.
<p>
Note that this method does <em>not</em> take locale into account,
and will result in an unsatisfactory ordering for certain locales.
The java.text package provides <em>collators</em> to allow
locale-sensitive ordering.

@param   str   the <code>String</code> to be compared.
@return  a negative integer, zero, or a positive integer as the
         the specified String is greater than, equal to, or less
         than this String, ignoring case considerations.
@see     java.text.Collator#compare(String, String)
@since   1.2
"
      end

      operation 5748226 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param in name "toffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5748354 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 619010 // XMLString
	  param in name "toffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5748482 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
@since   JDK1. 0
"
      end

      operation 5748610 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
@since   JDK1. 0
"
      end

      operation 5748738 "endsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "suffix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string ends with the specified suffix.

@param   suffix   the suffix.
@return  <code>true</code> if the character sequence represented by the
         argument is a suffix of the character sequence represented by
         this object; <code>false</code> otherwise. Note that the
         result will be <code>true</code> if the argument is the
         empty string or is equal to this <code>String</code> object
         as determined by the {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>suffix</code> is
         <code>null</code>.
"
      end

      operation 5748866 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this string. The hashcode for a
<code>String</code> object is computed as
<blockquote><pre>
s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
</pre></blockquote>
using <code>int</code> arithmetic, where <code>s[i]</code> is the
<i>i</i>th character of the string, <code>n</code> is the length of
the string, and <code>^</code> indicates exponentiation.
(The hash value of the empty string is zero.)

@return  a hash code value for this object.
"
      end

      operation 5748994 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character. If a character with value <code>ch</code> occurs
in the character sequence represented by this <code>String</code>
object, then the index of the first such occurrence is returned --
that is, the smallest value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is <code>true</code>. If no such character occurs in this string,
then <code>-1</code> is returned.

@param   ch   a character.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5749122 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character, starting the search at the specified index.
<p>
If a character with value <code>ch</code> occurs in the character
sequence represented by this <code>String</code> object at an index
no smaller than <code>fromIndex</code>, then the index of the first
such occurrence is returned--that is, the smallest value <i>k</i>
such that:
<blockquote><pre>
(this.charAt(<i>k</i>) == ch) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is true. If no such character occurs in this string at or after
position <code>fromIndex</code>, then <code>-1</code> is returned.
<p>
There is no restriction on the value of <code>fromIndex</code>. If it
is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   ch          a character.
@param   fromIndex   the index to start the search from.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object that is greater
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur.
"
      end

      operation 5749250 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified character. That is, the index returned is the largest
value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is true.
The String is searched backwards starting at the last character.

@param   ch   a character.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5749378 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified character, searching backward starting at the specified
index. That is, the index returned is the largest value <i>k</i>
such that:
<blockquote><pre>
this.charAt(k) == ch) && (k <= fromIndex)
</pre></blockquote>
is true.

@param   ch          a character.
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of <code>fromIndex</code>. If it is
         greater than or equal to the length of this string, it has
         the same effect as if it were equal to one less than the
         length of this string: this entire string may be searched.
         If it is negative, it has the same effect as if it were -1:
         -1 is returned.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object that is less
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur before that point.
"
      end

      operation 5749506 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
is <code>true</code>.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5749634 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
is <code>true</code>.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5749762 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring, starting at the specified index. The integer
returned is the smallest value <i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is <code>true</code>.
<p>
There is no restriction on the value of <code>fromIndex</code>. If
it is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from.
@return  If the string argument occurs as a substring within this
         object at a starting index no smaller than
         <code>fromIndex</code>, then the index of the first character
         of the first such substring is returned. If it does not occur
         as a substring starting at <code>fromIndex</code> or beyond,
         <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>
"
      end

      operation 5749890 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the rightmost occurrence
of the specified substring.  The rightmost empty string \"\" is
considered to occur at the index value <code>this.length()</code>.
The returned index is the largest value <i>k</i> such that
<blockquote><pre>
this.startsWith(str, k)
</pre></blockquote>
is true.

@param   str   the substring to search for.
@return  if the string argument occurs one or more times as a substring
         within this object, then the index of the first character of
         the last such substring is returned. If it does not occur as
         a substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException  if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5750018 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of
the specified substring.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of fromIndex. If it is greater than
         the length of this string, it has the same effect as if it
         were equal to the length of this string: this entire string
         may be searched. If it is negative, it has the same effect
         as if it were -1: -1 is returned.
@return  If the string argument occurs one or more times as a substring
         within this object at a starting index no greater than
         <code>fromIndex</code>, then the index of the first character of
         the last such substring is returned. If it does not occur as a
         substring starting at <code>fromIndex</code> or earlier,
         <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5750146 "substring"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param in name "beginIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins with the character at the specified index and
extends to the end of this string. <p>
Examples:
<blockquote><pre>
\"unhappy\".substring(2) returns \"happy\"
\"Harbison\".substring(3) returns \"bison\"
\"emptiness\".substring(9) returns \"\" (an empty string)
</pre></blockquote>

@param      beginIndex   the beginning index, inclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if
            <code>beginIndex</code> is negative or larger than the
            length of this <code>String</code> object.
"
      end

      operation 5750274 "substring"
	public return_type class_ref 619010 // XMLString
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins at the specified <code>beginIndex</code> and
extends to the character at index <code>endIndex - 1</code>.
Thus the length of the substring is <code>endIndex-beginIndex</code>.

@param      beginIndex   the beginning index, inclusive.
@param      endIndex     the ending index, exclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if the
            <code>beginIndex</code> is negative, or
            <code>endIndex</code> is larger than the length of
            this <code>String</code> object, or
            <code>beginIndex</code> is larger than
            <code>endIndex</code>.
"
      end

      operation 5750402 "concat"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the specified string to the end of this string.

@param   str   the <code>String</code> that is concatenated to the end
               of this <code>String</code>.
@return  a string that represents the concatenation of this object's
         characters followed by the string argument's characters.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5750530 "toLowerCase"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to lower
case using the rules of the given <code>Locale</code>.

@param locale use the case transformation rules for this locale
@return the String, converted to lowercase.
@see     java.lang.Character#toLowerCase(char)
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 5750658 "toLowerCase"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to lower
case using the rules of the default locale, which is returned
by <code>Locale.getDefault</code>.
<p>

@return  the string, converted to lowercase.
@see     java.lang.Character#toLowerCase(char)
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 5750786 "toUpperCase"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to upper
case using the rules of the given locale.
@param locale use the case transformation rules for this locale
@return the String, converted to uppercase.
@see     java.lang.Character#toUpperCase(char)
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 5750914 "toUpperCase"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to upper
case using the rules of the default locale, which is returned
by <code>Locale.getDefault</code>.

<p>
If no character in this string has a different uppercase version,
based on calling the <code>toUpperCase</code> method defined by
<code>Character</code>, then the original string is returned.
<p>
Otherwise, this method creates a new <code>String</code> object
representing a character sequence identical in length to the
character sequence represented by this <code>String</code> object and
with every character equal to the result of applying the method
<code>Character.toUpperCase</code> to the corresponding character of
this <code>String</code> object. <p>
Examples:
<blockquote><pre>
\"Fahrvergn&uuml;gen\".toUpperCase() returns \"FAHRVERGN&Uuml;GEN\"
\"Visit Ljubinje!\".toUpperCase() returns \"VISIT LJUBINJE!\"
</pre></blockquote>

@return  the string, converted to uppercase.
@see     java.lang.Character#toUpperCase(char)
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 5751042 "trim"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes white space from both ends of this string.
<p>
If this <code>String</code> object represents an empty character
sequence, or the first and last characters of character sequence
represented by this <code>String</code> object both have codes
greater than <code>'&#92;u0020'</code> (the space character), then a
reference to this <code>String</code> object is returned.
<p>
Otherwise, if there is no character with a code greater than
<code>'&#92;u0020'</code> in the string, then a new
<code>String</code> object representing an empty string is created
and returned.
<p>
Otherwise, let <i>k</i> be the index of the first character in the
string whose code is greater than <code>'&#92;u0020'</code>, and let
<i>m</i> be the index of the last character in the string whose code
is greater than <code>'&#92;u0020'</code>. A new <code>String</code>
object is created, representing the substring of this string that
begins with the character at index <i>k</i> and ends with the
character at index <i>m</i>-that is, the result of
<code>this.substring(<i>k</i>,&nbsp;<i>m</i>+1)</code>.
<p>
This method may be used to trim
{@link Character#isSpace(char) whitespace} from the beginning and end
of a string; in fact, it trims all ASCII control characters as well.

@return  this string, with white space removed from the front and end.
"
      end

      operation 5751170 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This object (which is already a string!) is itself returned.

@return  the string itself.
"
      end

      operation 5751298 "hasString"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this object contains a java String object.

@return true if this XMLString can return a string without creating one.
"
      end

      operation 5751426 "toDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a string to a double -- Allowed input is in fixed
notation ddd.fff.

@return A double value representation of the string, or return Double.NaN
if the string can not be converted.
"
      end
    end

    class 801666 "XMLStringFactoryDefault"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default implementation of XMLStringFactory.
This implementation creates XMLStringDefault objects.
"
      classrelation 2564610 // <generalisation>
	relation 2564610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2564610 // <generalisation>
	  b parent class_ref 626946 // XMLStringFactory
      end

      classrelation 2564738 // EMPTY_STR (<unidirectional association>)
	relation 2564738 --->
	  a role_name "EMPTY_STR" init_value " new XMLStringDefault(\"\")" class_relation const_relation private
	    comment " A constant representing the empty String
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2564738 // EMPTY_STR (<unidirectional association>)
	  b parent class_ref 801538 // XMLStringDefault
      end

      operation 5752066 "newstr"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "string" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new XMLString from a Java string.


@param string Java String reference, which must be non-null.

@return An XMLString object that wraps the String reference.
"
      end

      operation 5752194 "newstr"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLString from a FastStringBuffer.


@param fsb FastStringBuffer reference, which must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.

@return An XMLString object that wraps the FastStringBuffer reference.
"
      end

      operation 5752322 "newstr"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "string" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLString from a FastStringBuffer.


@param string FastStringBuffer reference, which must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.

@return An XMLString object that wraps the FastStringBuffer reference.
"
      end

      operation 5752450 "emptystr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cheap representation of an empty string.

@return An non-null reference to an XMLString that represents \"\".
"
      end
    end
  end

  deploymentview 150530 "utils"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 403586 "Constants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 587266 // Constants
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Constants.java,v 1.2.4.1 2005/09/15 08:15:37 suresh_emailid Exp $
"
    end

    artifact 563714 "AttList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Attr;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
${definition}"
      associated_elems
	class_ref 795778 // AttList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: AttList.java,v 1.2.4.1 2005/09/15 08:15:35 suresh_emailid Exp $
"
    end

    artifact 563842 "BoolStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 626818 // BoolStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: BoolStack.java,v 1.2.4.1 2005/09/15 08:15:35 suresh_emailid Exp $
"
    end

    artifact 563970 "CharKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 796034 // CharKey
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: CharKey.java,v 1.3 2005/09/28 13:49:18 pvedula Exp $
"
    end

    artifact 564098 "DefaultErrorHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_elems
	class_ref 796162 // DefaultErrorHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DefaultErrorHandler.java,v 1.2.4.1 2005/09/15 08:15:43 suresh_emailid Exp $
"
    end

    artifact 564226 "DOMHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.ref.DTMNodeProxy;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Entity;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
${definition}"
      associated_elems
	class_ref 795906 // DOMHelper
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DOMHelper.java,v 1.2.4.1 2005/09/15 08:15:40 suresh_emailid Exp $
"
    end

    artifact 564354 "DOM2Helper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.InputSource;
${definition}"
      associated_elems
	class_ref 796290 // DOM2Helper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DOM2Helper.java,v 1.2.4.1 2005/09/15 08:15:37 suresh_emailid Exp $
"
    end

    artifact 564482 "DOMBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Stack;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.CDATASection;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 796546 // DOMBuilder
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DOMBuilder.java,v 1.2.4.1 2005/09/15 08:15:39 suresh_emailid Exp $
"
    end

    artifact 564610 "DOMOrder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 796674 // DOMOrder
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DOMOrder.java,v 1.2.4.1 2005/09/15 08:15:41 suresh_emailid Exp $
"
    end

    artifact 564738 "ElemDesc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 796802 // ElemDesc
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ElemDesc.java,v 1.2.4.1 2005/09/15 08:15:44 suresh_emailid Exp $
"
    end

    artifact 564866 "FastStringBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 633730 // FastStringBuffer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FastStringBuffer.java,v 1.2.4.1 2005/09/15 08:15:44 suresh_emailid Exp $
"
    end

    artifact 564994 "Hashtree2Node"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 796930 // Hashtree2Node
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Hashtree2Node.java,v 1.2.4.1 2005/09/15 08:15:45 suresh_emailid Exp $
"
    end

    artifact 565122 "IntVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 634370 // IntVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: IntVector.java,v 1.2.4.1 2005/09/15 08:15:45 suresh_emailid Exp $
"
    end

    artifact 565250 "IntStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EmptyStackException;
${definition}"
      associated_elems
	class_ref 633858 // IntStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: IntStack.java,v 1.2.4.1 2005/09/15 08:15:45 suresh_emailid Exp $
"
    end

    artifact 565378 "ListingErrorHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URL;
import java.net.URLConnection;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_elems
	class_ref 797058 // ListingErrorHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ListingErrorHandler.java,v 1.2.4.1 2005/09/15 08:15:46 suresh_emailid Exp $
"
    end

    artifact 565506 "LocaleUtility"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 797186 // LocaleUtility
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: LocaleUtility.java,v 1.2.4.1 2005/09/15 08:15:47 suresh_emailid Exp $
"
    end

    artifact 565634 "MutableAttrListImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import org.xml.sax.Attributes;
import org.xml.sax.helpers.AttributesImpl;
${definition}"
      associated_elems
	class_ref 797314 // MutableAttrListImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: MutableAttrListImpl.java,v 1.2.4.1 2005/09/15 08:15:47 suresh_emailid Exp $
"
    end

    artifact 565762 "NameSpace"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 797442 // NameSpace
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NameSpace.java,v 1.2.4.1 2005/09/15 08:15:49 suresh_emailid Exp $
"
    end

    artifact 565890 "NodeConsumer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 797570 // NodeConsumer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NodeConsumer.java,v 1.2.4.1 2005/09/15 08:15:50 suresh_emailid Exp $
"
    end

    artifact 566018 "NodeVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import com.sun.org.apache.xml.internal.dtm.DTM;
${definition}"
      associated_elems
	class_ref 632706 // NodeVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NodeVector.java,v 1.2.4.1 2005/09/15 08:15:50 suresh_emailid Exp $
"
    end

    artifact 566146 "NSInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 796418 // NSInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NSInfo.java,v 1.2.4.1 2005/09/15 08:15:48 suresh_emailid Exp $
"
    end

    artifact 566274 "ObjectPool"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import com.sun.org.apache.xalan.internal.utils.ObjectFactory;
${definition}"
      associated_elems
	class_ref 797698 // ObjectPool
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ObjectPool.java,v 1.2.4.1 2005/09/15 08:15:50 suresh_emailid Exp $
"
    end

    artifact 566402 "ObjectVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 797954 // ObjectVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ObjectVector.java,v 1.2.4.1 2005/09/15 08:15:51 suresh_emailid Exp $
"
    end

    artifact 566530 "ObjectStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EmptyStackException;
${definition}"
      associated_elems
	class_ref 797826 // ObjectStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ObjectStack.java,v 1.2.4.1 2005/09/15 08:15:51 suresh_emailid Exp $
"
    end

    artifact 566658 "PrefixResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 635650 // PrefixResolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: PrefixResolver.java,v 1.2.4.1 2005/09/15 08:15:51 suresh_emailid Exp $
"
    end

    artifact 566786 "PrefixResolverDefault"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 798082 // PrefixResolverDefault
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: PrefixResolverDefault.java,v 1.2.4.1 2005/09/15 08:15:51 suresh_emailid Exp $
"
    end

    artifact 566914 "QName"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Stack;
import java.util.StringTokenizer;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 583426 // QName
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: QName.java,v 1.2.4.1 2005/09/15 08:15:52 suresh_emailid Exp $
"
    end

    artifact 567042 "RawCharacterHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 798210 // RawCharacterHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: RawCharacterHandler.java,v 1.2.4.1 2005/09/15 08:15:52 suresh_emailid Exp $
"
    end

    artifact 567298 "SAXSourceLocator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import javax.xml.transform.SourceLocator;
import org.xml.sax.Locator;
import org.xml.sax.SAXParseException;
import org.xml.sax.helpers.LocatorImpl;
${definition}"
      associated_elems
	class_ref 798338 // SAXSourceLocator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SAXSourceLocator.java,v 1.2.4.1 2005/09/15 08:15:52 suresh_emailid Exp $
"
    end

    artifact 567426 "SerializableLocatorImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 798466 // SerializableLocatorImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializableLocatorImpl.java,v 1.2.4.1 2005/09/15 08:15:54 suresh_emailid Exp $
"
    end

    artifact 567554 "StopParseException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 798594 // StopParseException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StopParseException.java,v 1.2.4.1 2005/09/15 08:15:54 suresh_emailid Exp $
"
    end

    artifact 567682 "StringBufferPool"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 798722 // StringBufferPool
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringBufferPool.java,v 1.2.4.1 2005/09/15 08:15:54 suresh_emailid Exp $
"
    end

    artifact 567810 "StringComparable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.text.Collator;
import java.text.RuleBasedCollator;
import java.text.CollationElementIterator;
import java.util.Locale;
import java.text.CollationKey;
${definition}"
      associated_elems
	class_ref 798850 // StringComparable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringComparable.java,v 1.2.4.1 2005/09/15 08:15:55 suresh_emailid Exp $
"
    end

    artifact 567938 "StringToIntTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 799106 // StringToIntTable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringToIntTable.java,v 1.2.4.1 2005/09/15 08:15:55 suresh_emailid Exp $
"
    end

    artifact 568066 "StringToStringTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 799234 // StringToStringTable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringToStringTable.java,v 1.2.4.1 2005/09/15 08:15:56 suresh_emailid Exp $
"
    end

    artifact 568194 "StringToStringTableVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 799362 // StringToStringTableVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringToStringTableVector.java,v 1.2.4.1 2005/09/15 08:15:56 suresh_emailid Exp $
"
    end

    artifact 568322 "StringVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 634242 // StringVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringVector.java,v 1.2.4.1 2005/09/15 08:15:56 suresh_emailid Exp $
"
    end

    artifact 568450 "StylesheetPIHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.StringTokenizer;
import java.util.Vector;
import javax.xml.transform.Source;
import javax.xml.transform.TransformerException;
import javax.xml.transform.URIResolver;
import javax.xml.transform.sax.SAXSource;
import com.sun.org.apache.xml.internal.utils.SystemIDResolver;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.helpers.DefaultHandler;
${definition}"
      associated_elems
	class_ref 799490 // StylesheetPIHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StylesheetPIHandler.java,v 1.2.4.1 2005/09/15 08:15:57 suresh_emailid Exp $
"
    end

    artifact 568578 "SuballocatedByteVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 799618 // SuballocatedByteVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SuballocatedByteVector.java,v 1.2.4.1 2005/09/15 08:15:57 suresh_emailid Exp $
"
    end

    artifact 568706 "SuballocatedIntVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 626690 // SuballocatedIntVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SuballocatedIntVector.java,v 1.3 2005/09/28 13:49:22 pvedula Exp $
"
    end

    artifact 568834 "SystemIDResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.utils.URI.MalformedURIException;
${definition}"
      associated_elems
	class_ref 799746 // SystemIDResolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SystemIDResolver.java,v 1.2.4.1 2005/09/15 08:15:58 suresh_emailid Exp $
"
    end

    artifact 568962 "ThreadControllerWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 799874 // ThreadControllerWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ThreadControllerWrapper.java,v 1.2.4.1 2005/09/15 08:15:59 suresh_emailid Exp $
"
    end

    artifact 569090 "TreeWalker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import java.io.File;
import org.w3c.dom.Comment;
import org.w3c.dom.Element;
import org.w3c.dom.EntityReference;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.ext.LexicalHandler;
import org.xml.sax.helpers.LocatorImpl;
${definition}"
      associated_elems
	class_ref 745346 // TreeWalker
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 569218 "Trie"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 800258 // Trie
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Trie.java,v 1.2.4.1 2005/09/15 08:15:59 suresh_emailid Exp $
"
    end

    artifact 569346 "UnImplNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.EntityReference;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.w3c.dom.UserDataHandler;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.TypeInfo;
${definition}"
      associated_elems
	class_ref 800514 // UnImplNode
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: UnImplNode.java,v
"
    end

    artifact 569474 "URI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import com.sun.org.apache.xml.internal.res.XMLErrorResources;
import com.sun.org.apache.xml.internal.res.XMLMessages;
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 800642 // URI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: URI.java,v 1.2.4.1 2005/09/15 08:16:00 suresh_emailid Exp $
"
    end

    artifact 569602 "WrappedRuntimeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 800898 // WrappedRuntimeException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WrappedRuntimeException.java,v 1.2.4.1 2005/09/15 08:16:00 suresh_emailid Exp $
"
    end

    artifact 569730 "WrongParserException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 801026 // WrongParserException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WrongParserException.java,v 1.2.4.1 2005/09/15 08:16:00 suresh_emailid Exp $
"
    end

    artifact 569858 "XML11Char"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 801154 // XML11Char
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 569986 "XMLChar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 801282 // XMLChar
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLChar.java,v 1.2.4.1 2005/09/15 08:16:01 suresh_emailid Exp $
"
    end

    artifact 570114 "XMLCharacterRecognizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 801410 // XMLCharacterRecognizer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLCharacterRecognizer.java,v 1.2.4.1 2005/09/15 08:16:01 suresh_emailid Exp $
"
    end

    artifact 570242 "XMLReaderManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.XalanConstants;
import com.sun.org.apache.xalan.internal.utils.FactoryImpl;
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import com.sun.org.apache.xalan.internal.utils.XMLSecurityManager;
import java.util.HashMap;
import javax.xml.XMLConstants;
import javax.xml.parsers.FactoryConfigurationError;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;
${definition}"
      associated_elems
	class_ref 635778 // XMLReaderManager
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLReaderManager.java,v 1.2.4.1 2005/09/15 08:16:02 suresh_emailid Exp $
"
    end

    artifact 570370 "XMLString"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 619010 // XMLString
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLString.java,v 1.2.4.1 2005/09/15 08:16:02 suresh_emailid Exp $
"
    end

    artifact 570498 "XMLStringDefault"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 801538 // XMLStringDefault
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLStringDefault.java,v 1.2.4.1 2005/09/15 08:16:02 suresh_emailid Exp $
"
    end

    artifact 570626 "XMLStringFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 626946 // XMLStringFactory
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLStringFactory.java,v 1.2.4.1 2005/09/15 08:16:03 suresh_emailid Exp $
"
    end

    artifact 570754 "XMLStringFactoryDefault"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 801666 // XMLStringFactoryDefault
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLStringFactoryDefault.java,v 1.2.4.1 2005/09/15 08:16:03 suresh_emailid Exp $
"
    end
  end

  package_ref 176514 // res
end
