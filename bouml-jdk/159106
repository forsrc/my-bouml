format 222
"login" // jdk1.8::javax::security::auth::login
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/security/auth/login/"
  java_package "javax.security.auth.login"
  classview 153858 "login"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 507906 "LoginException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the basic login exception.

@see javax.security.auth.login.LoginContext
"
      classrelation 4021378 // <generalisation>
	relation 4021378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4021378 // <generalisation>
	  b parent class_ref 1016066 // GeneralSecurityException
      end

      attribute 2354178 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4679091624035232488L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10238850 "LoginException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a LoginException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10238978 "LoginException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a LoginException with the specified detail message.
A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end

    class 508418 "LoginContext"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> The {@code LoginContext} class describes the basic methods used
to authenticate Subjects and provides a way to develop an
application independent of the underlying authentication technology.
A {@code Configuration} specifies the authentication technology, or
{@code LoginModule}, to be used with a particular application.
Different LoginModules can be plugged in under an application
without requiring any modifications to the application itself.

<p> In addition to supporting <i>pluggable</i> authentication, this class
also supports the notion of <i>stacked</i> authentication.
Applications may be configured to use more than one
LoginModule.  For example, one could
configure both a Kerberos LoginModule and a smart card
LoginModule under an application.

<p> A typical caller instantiates a LoginContext with
a <i>name</i> and a {@code CallbackHandler}.
LoginContext uses the <i>name</i> as the index into a
Configuration to determine which LoginModules should be used,
and which ones must succeed in order for the overall authentication to
succeed.  The {@code CallbackHandler} is passed to the underlying
LoginModules so they may communicate and interact with users
(prompting for a username and password via a graphical user interface,
for example).

<p> Once the caller has instantiated a LoginContext,
it invokes the {@code login} method to authenticate
a {@code Subject}.  The {@code login} method invokes
the configured modules to perform their respective types of authentication
(username/password, smart card pin verification, etc.).
Note that the LoginModules will not attempt authentication retries nor
introduce delays if the authentication fails.
Such tasks belong to the LoginContext caller.

<p> If the {@code login} method returns without
throwing an exception, then the overall authentication succeeded.
The caller can then retrieve
the newly authenticated Subject by invoking the
{@code getSubject} method.  Principals and Credentials associated
with the Subject may be retrieved by invoking the Subject's
respective {@code getPrincipals}, {@code getPublicCredentials},
and {@code getPrivateCredentials} methods.

<p> To logout the Subject, the caller calls
the {@code logout} method.  As with the {@code login}
method, this {@code logout} method invokes the {@code logout}
method for the configured modules.

<p> A LoginContext should not be used to authenticate
more than one Subject.  A separate LoginContext
should be used to authenticate each different Subject.

<p> The following documentation applies to all LoginContext constructors:
<ol>

<li> {@code Subject}
<ul>
<li> If the constructor has a Subject
input parameter, the LoginContext uses the caller-specified
Subject object.

<li> If the caller specifies a {@code null} Subject
and a {@code null} value is permitted,
the LoginContext instantiates a new Subject.

<li> If the constructor does <b>not</b> have a Subject
input parameter, the LoginContext instantiates a new Subject.
<p>
</ul>

<li> {@code Configuration}
<ul>
<li> If the constructor has a Configuration
input parameter and the caller specifies a non-null Configuration,
the LoginContext uses the caller-specified Configuration.
<p>
If the constructor does <b>not</b> have a Configuration
input parameter, or if the caller specifies a {@code null}
Configuration object, the constructor uses the following call to
get the installed Configuration:
<pre>
     config = Configuration.getConfiguration();
</pre>
For both cases,
the <i>name</i> argument given to the constructor is passed to the
{@code Configuration.getAppConfigurationEntry} method.
If the Configuration has no entries for the specified <i>name</i>,
then the {@code LoginContext} calls
{@code getAppConfigurationEntry} with the name, \"<i>other</i>\"
(the default entry name).  If there is no entry for \"<i>other</i>\",
then a {@code LoginException} is thrown.

<li> When LoginContext uses the installed Configuration, the caller
requires the createLoginContext.<em>name</em> and possibly
createLoginContext.other AuthPermissions. Furthermore, the
LoginContext will invoke configured modules from within an
{@code AccessController.doPrivileged} call so that modules that
perform security-sensitive tasks (such as connecting to remote hosts,
and updating the Subject) will require the respective permissions, but
the callers of the LoginContext will not require those permissions.

<li> When LoginContext uses a caller-specified Configuration, the caller
does not require any createLoginContext AuthPermission.  The LoginContext
saves the {@code AccessControlContext} for the caller,
and invokes the configured modules from within an
{@code AccessController.doPrivileged} call constrained by that context.
This means the caller context (stored when the LoginContext was created)
must have sufficient permissions to perform any security-sensitive tasks
that the modules may perform.
<p>
</ul>

<li> {@code CallbackHandler}
<ul>
<li> If the constructor has a CallbackHandler
input parameter, the LoginContext uses the caller-specified
CallbackHandler object.

<li> If the constructor does <b>not</b> have a CallbackHandler
input parameter, or if the caller specifies a {@code null}
CallbackHandler object (and a {@code null} value is permitted),
the LoginContext queries the
{@code auth.login.defaultCallbackHandler} security property for the
fully qualified class name of a default handler
implementation. If the security property is not set,
then the underlying modules will not have a
CallbackHandler for use in communicating
with users.  The caller thus assumes that the configured
modules have alternative means for authenticating the user.


<li> When the LoginContext uses the installed Configuration (instead of
a caller-specified Configuration, see above),
then this LoginContext must wrap any
caller-specified or default CallbackHandler implementation
in a new CallbackHandler implementation
whose {@code handle} method implementation invokes the
specified CallbackHandler's {@code handle} method in a
{@code java.security.AccessController.doPrivileged} call
constrained by the caller's current {@code AccessControlContext}.
</ul>
</ol>

@see java.security.Security
@see javax.security.auth.AuthPermission
@see javax.security.auth.Subject
@see javax.security.auth.callback.CallbackHandler
@see javax.security.auth.login.Configuration
@see javax.security.auth.spi.LoginModule
@see java.security.Security security properties
"
      classrelation 4023554 // INIT_METHOD (<unidirectional association>)
	relation 4023554 --->
	  a role_name "INIT_METHOD" init_value " \"initialize\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4023554 // INIT_METHOD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4023682 // LOGIN_METHOD (<unidirectional association>)
	relation 4023682 --->
	  a role_name "LOGIN_METHOD" init_value " \"login\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4023682 // LOGIN_METHOD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4023810 // COMMIT_METHOD (<unidirectional association>)
	relation 4023810 --->
	  a role_name "COMMIT_METHOD" init_value " \"commit\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4023810 // COMMIT_METHOD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4023938 // ABORT_METHOD (<unidirectional association>)
	relation 4023938 --->
	  a role_name "ABORT_METHOD" init_value " \"abort\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4023938 // ABORT_METHOD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4024066 // LOGOUT_METHOD (<unidirectional association>)
	relation 4024066 --->
	  a role_name "LOGOUT_METHOD" init_value " \"logout\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024066 // LOGOUT_METHOD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4024194 // OTHER (<unidirectional association>)
	relation 4024194 --->
	  a role_name "OTHER" init_value " \"other\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024194 // OTHER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4024322 // DEFAULT_HANDLER (<unidirectional association>)
	relation 4024322 --->
	  a role_name "DEFAULT_HANDLER" init_value "
                                \"auth.login.defaultCallbackHandler\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024322 // DEFAULT_HANDLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4024450 // subject (<unidirectional association>)
	relation 4024450 --->
	  a role_name "subject" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024450 // subject (<unidirectional association>)
	  b parent class_ref 503042 // Subject
      end

      attribute 2355330 "subjectProvided"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2355458 "loginSucceeded"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4024578 // callbackHandler (<unidirectional association>)
	relation 4024578 --->
	  a role_name "callbackHandler" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024578 // callbackHandler (<unidirectional association>)
	  b parent class_ref 507778 // CallbackHandler
      end

      classrelation 4024706 // state (<unidirectional association>)
	relation 4024706 --->
	  a role_name "state" init_value " new HashMap<String,Object>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,?> ${name}${value};
"
	    classrelation_ref 4024706 // state (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4024834 // config (<unidirectional association>)
	relation 4024834 --->
	  a role_name "config" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024834 // config (<unidirectional association>)
	  b parent class_ref 509058 // Configuration
      end

      classrelation 4024962 // creatorAcc (<unidirectional association>)
	relation 4024962 --->
	  a role_name "creatorAcc" init_value " null" private
	    comment " customized config only"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4024962 // creatorAcc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      class 1245826 "ModuleInfo"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4026114 // entry (<unidirectional association>)
	  relation 4026114 --->
	    a role_name "entry" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4026114 // entry (<unidirectional association>)
	    b parent class_ref 509698 // AppConfigurationEntry
	end

	classrelation 4026242 // module (<unidirectional association>)
	  relation 4026242 --->
	    a role_name "module" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4026242 // module (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 10244226 "ModuleInfo"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "newEntry" type class_ref 509698 // AppConfigurationEntry
	    param inout name "newModule" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4025090 // moduleStack (<unidirectional association>)
	relation 4025090 --->
	  a role_name "moduleStack" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4025090 // moduleStack (<unidirectional association>)
	  b parent class_ref 1245826 // ModuleInfo
      end

      classrelation 4025218 // contextClassLoader (<unidirectional association>)
	relation 4025218 --->
	  a role_name "contextClassLoader" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4025218 // contextClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 4025346 // PARAMS (<unidirectional association>)
	relation 4025346 --->
	  a role_name "PARAMS" multiplicity "[]" init_value " { }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	    classrelation_ref 4025346 // PARAMS (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      attribute 2355586 "moduleIndex"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " state saved in the event a user-specified asynchronous exception
 was specified and thrown
"
      end

      classrelation 4025474 // firstError (<unidirectional association>)
	relation 4025474 --->
	  a role_name "firstError" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4025474 // firstError (<unidirectional association>)
	  b parent class_ref 507906 // LoginException
      end

      classrelation 4025602 // firstRequiredError (<unidirectional association>)
	relation 4025602 --->
	  a role_name "firstRequiredError" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4025602 // firstRequiredError (<unidirectional association>)
	  b parent class_ref 507906 // LoginException
      end

      attribute 2355714 "success"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2355842 "debug"
	class_attribute const_attribute private explicit_type "sun.security.util.Debug"
	init_value "
        sun.security.util.Debug.getInstance(\"logincontext\", \"\\t[LoginContext]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10242178 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10242306 "loadDefaultCallbackHandler"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10242434 "LoginContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new {@code LoginContext} object with a name.

@param name the name used as the index into the
         {@code Configuration}.

@exception LoginException if the caller-specified {@code name}
         does not appear in the {@code Configuration}
         and there is no {@code Configuration} entry
         for \"<i>other</i>\", or if the
         <i>auth.login.defaultCallbackHandler</i>
         security property was set, but the implementation
         class could not be loaded.
         <p>
@exception SecurityException if a SecurityManager is set and
         the caller does not have
         AuthPermission(\"createLoginContext.<i>name</i>\"),
         or if a configuration entry for <i>name</i> does not exist and
         the caller does not additionally have
         AuthPermission(\"createLoginContext.other\")
"
      end

      operation 10242562 "LoginContext"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new {@code LoginContext} object with a name
and a {@code Subject} object.

<p>

@param name the name used as the index into the
         {@code Configuration}. <p>

@param subject the {@code Subject} to authenticate.

@exception LoginException if the caller-specified {@code name}
         does not appear in the {@code Configuration}
         and there is no {@code Configuration} entry
         for \"<i>other</i>\", if the caller-specified {@code subject}
         is {@code null}, or if the
         <i>auth.login.defaultCallbackHandler</i>
         security property was set, but the implementation
         class could not be loaded.
         <p>
@exception SecurityException if a SecurityManager is set and
         the caller does not have
         AuthPermission(\"createLoginContext.<i>name</i>\"),
         or if a configuration entry for <i>name</i> does not exist and
         the caller does not additionally have
         AuthPermission(\"createLoginContext.other\")
"
      end

      operation 10242690 "LoginContext"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "callbackHandler" type class_ref 507778 // CallbackHandler
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new {@code LoginContext} object with a name
and a {@code CallbackHandler} object.

<p>

@param name the name used as the index into the
         {@code Configuration}. <p>

@param callbackHandler the {@code CallbackHandler} object used by
         LoginModules to communicate with the user.

@exception LoginException if the caller-specified {@code name}
         does not appear in the {@code Configuration}
         and there is no {@code Configuration} entry
         for \"<i>other</i>\", or if the caller-specified
         {@code callbackHandler} is {@code null}.
         <p>
@exception SecurityException if a SecurityManager is set and
         the caller does not have
         AuthPermission(\"createLoginContext.<i>name</i>\"),
         or if a configuration entry for <i>name</i> does not exist and
         the caller does not additionally have
         AuthPermission(\"createLoginContext.other\")
"
      end

      operation 10242818 "LoginContext"
	public explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	  param inout name "callbackHandler" type class_ref 507778 // CallbackHandler
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new {@code LoginContext} object with a name,
a {@code Subject} to be authenticated, and a
{@code CallbackHandler} object.

<p>

@param name the name used as the index into the
         {@code Configuration}. <p>

@param subject the {@code Subject} to authenticate. <p>

@param callbackHandler the {@code CallbackHandler} object used by
         LoginModules to communicate with the user.

@exception LoginException if the caller-specified {@code name}
         does not appear in the {@code Configuration}
         and there is no {@code Configuration} entry
         for \"<i>other</i>\", or if the caller-specified
         {@code subject} is {@code null},
         or if the caller-specified
         {@code callbackHandler} is {@code null}.
         <p>
@exception SecurityException if a SecurityManager is set and
         the caller does not have
         AuthPermission(\"createLoginContext.<i>name</i>\"),
         or if a configuration entry for <i>name</i> does not exist and
         the caller does not additionally have
         AuthPermission(\"createLoginContext.other\")
"
      end

      operation 10242946 "LoginContext"
	public explicit_return_type ""
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	  param inout name "callbackHandler" type class_ref 507778 // CallbackHandler
	  param inout name "config" type class_ref 509058 // Configuration
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new {@code LoginContext} object with a name,
a {@code Subject} to be authenticated,
a {@code CallbackHandler} object, and a login
{@code Configuration}.

<p>

@param name the name used as the index into the caller-specified
         {@code Configuration}. <p>

@param subject the {@code Subject} to authenticate,
         or {@code null}. <p>

@param callbackHandler the {@code CallbackHandler} object used by
         LoginModules to communicate with the user, or {@code null}.
         <p>

@param config the {@code Configuration} that lists the
         login modules to be called to perform the authentication,
         or {@code null}.

@exception LoginException if the caller-specified {@code name}
         does not appear in the {@code Configuration}
         and there is no {@code Configuration} entry
         for \"<i>other</i>\".
         <p>
@exception SecurityException if a SecurityManager is set,
         <i>config</i> is {@code null},
         and either the caller does not have
         AuthPermission(\"createLoginContext.<i>name</i>\"),
         or if a configuration entry for <i>name</i> does not exist and
         the caller does not additionally have
         AuthPermission(\"createLoginContext.other\")

@since 1.5
"
      end

      operation 10243074 "login"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform the authentication.

<p> This method invokes the {@code login} method for each
LoginModule configured for the <i>name</i> specified to the
{@code LoginContext} constructor, as determined by the login
{@code Configuration}.  Each {@code LoginModule}
then performs its respective type of authentication
(username/password, smart card pin verification, etc.).

<p> This method completes a 2-phase authentication process by
calling each configured LoginModule's {@code commit} method
if the overall authentication succeeded (the relevant REQUIRED,
REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded),
or by calling each configured LoginModule's {@code abort} method
if the overall authentication failed.  If authentication succeeded,
each successful LoginModule's {@code commit} method associates
the relevant Principals and Credentials with the {@code Subject}.
If authentication failed, each LoginModule's {@code abort} method
removes/destroys any previously stored state.

<p> If the {@code commit} phase of the authentication process
fails, then the overall authentication fails and this method
invokes the {@code abort} method for each configured
{@code LoginModule}.

<p> If the {@code abort} phase
fails for any reason, then this method propagates the
original exception thrown either during the {@code login} phase
or the {@code commit} phase.  In either case, the overall
authentication fails.

<p> In the case where multiple LoginModules fail,
this method propagates the exception raised by the first
{@code LoginModule} which failed.

<p> Note that if this method enters the {@code abort} phase
(either the {@code login} or {@code commit} phase failed),
this method invokes all LoginModules configured for the
application regardless of their respective {@code Configuration}
flag parameters.  Essentially this means that {@code Requisite}
and {@code Sufficient} semantics are ignored during the
{@code abort} phase.  This guarantees that proper cleanup
and state restoration can take place.

<p>

@exception LoginException if the authentication fails.
"
      end

      operation 10243202 "logout"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logout the {@code Subject}.

<p> This method invokes the {@code logout} method for each
{@code LoginModule} configured for this {@code LoginContext}.
Each {@code LoginModule} performs its respective logout procedure
which may include removing/destroying
{@code Principal} and {@code Credential} information
from the {@code Subject} and state cleanup.

<p> Note that this method invokes all LoginModules configured for the
application regardless of their respective
{@code Configuration} flag parameters.  Essentially this means
that {@code Requisite} and {@code Sufficient} semantics are
ignored for this method.  This guarantees that proper cleanup
and state restoration can take place.

<p>

@exception LoginException if the logout fails.
"
      end

      operation 10243330 "getSubject"
	public return_type class_ref 503042 // Subject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the authenticated Subject.

<p>

@return the authenticated Subject.  If the caller specified a
         Subject to this LoginContext's constructor,
         this method returns the caller-specified Subject.
         If a Subject was not specified and authentication succeeds,
         this method returns the Subject instantiated and used for
         authentication by this LoginContext.
         If a Subject was not specified, and authentication fails or
         has not been attempted, this method returns null.
"
      end

      operation 10243458 "clearState"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10243586 "throwException"
	private explicit_return_type "void"
	nparams 2
	  param inout name "originalError" type class_ref 507906 // LoginException
	  param inout name "le" type class_ref 507906 // LoginException
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10243714 "invokePriv"
	private explicit_return_type "void"
	nparams 1
	  param in name "methodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the login, commit, and logout methods
from a LoginModule inside a doPrivileged block restricted
by creatorAcc (may be null).

This version is called if the caller did not instantiate
the LoginContext with a Configuration object.
"
      end

      operation 10243842 "invoke"
	private explicit_return_type "void"
	nparams 1
	  param inout name "methodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1245954 "SecureCallbackHandler"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4025730 // <realization>
	  relation 4025730 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4025730 // <realization>
	    b parent class_ref 507778 // CallbackHandler
	end

	classrelation 4025858 // acc (<unidirectional association>)
	  relation 4025858 --->
	    a role_name "acc" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4025858 // acc (<unidirectional association>)
	    b parent class_ref 129154 // AccessControlContext
	end

	classrelation 4025986 // ch (<unidirectional association>)
	  relation 4025986 --->
	    a role_name "ch" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4025986 // ch (<unidirectional association>)
	    b parent class_ref 507778 // CallbackHandler
	end

	operation 10243970 "SecureCallbackHandler"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "acc" type class_ref 129154 // AccessControlContext
	    param inout name "ch" type class_ref 507778 // CallbackHandler
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10244098 "handle"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "callbacks" type class_ref 508674 // Callback
	  multiplicity "[]"
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 508802 // UnsupportedCallbackException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 509058 "Configuration"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Configuration object is responsible for specifying which LoginModules
should be used for a particular application, and in what order the
LoginModules should be invoked.

<p> A login configuration contains the following information.
Note that this example only represents the default syntax for the
{@code Configuration}.  Subclass implementations of this class
may implement alternative syntaxes and may retrieve the
{@code Configuration} from any source such as files, databases,
or servers.

<pre>
     Name {
           ModuleClass  Flag    ModuleOptions;
           ModuleClass  Flag    ModuleOptions;
           ModuleClass  Flag    ModuleOptions;
     };
     Name {
           ModuleClass  Flag    ModuleOptions;
           ModuleClass  Flag    ModuleOptions;
     };
     other {
           ModuleClass  Flag    ModuleOptions;
           ModuleClass  Flag    ModuleOptions;
     };
</pre>

<p> Each entry in the {@code Configuration} is indexed via an
application name, <i>Name</i>, and contains a list of
LoginModules configured for that application.  Each {@code LoginModule}
is specified via its fully qualified class name.
Authentication proceeds down the module list in the exact order specified.
If an application does not have a specific entry,
it defaults to the specific entry for \"<i>other</i>\".

<p> The <i>Flag</i> value controls the overall behavior as authentication
proceeds down the stack.  The following represents a description of the
valid values for <i>Flag</i> and their respective semantics:

<pre>
     1) Required     - The {@code LoginModule} is required to succeed.
                     If it succeeds or fails, authentication still continues
                     to proceed down the {@code LoginModule} list.

     2) Requisite    - The {@code LoginModule} is required to succeed.
                     If it succeeds, authentication continues down the
                     {@code LoginModule} list.  If it fails,
                     control immediately returns to the application
                     (authentication does not proceed down the
                     {@code LoginModule} list).

     3) Sufficient   - The {@code LoginModule} is not required to
                     succeed.  If it does succeed, control immediately
                     returns to the application (authentication does not
                     proceed down the {@code LoginModule} list).
                     If it fails, authentication continues down the
                     {@code LoginModule} list.

     4) Optional     - The {@code LoginModule} is not required to
                     succeed.  If it succeeds or fails,
                     authentication still continues to proceed down the
                     {@code LoginModule} list.
</pre>

<p> The overall authentication succeeds only if all <i>Required</i> and
<i>Requisite</i> LoginModules succeed.  If a <i>Sufficient</i>
{@code LoginModule} is configured and succeeds,
then only the <i>Required</i> and <i>Requisite</i> LoginModules prior to
that <i>Sufficient</i> {@code LoginModule} need to have succeeded for
the overall authentication to succeed. If no <i>Required</i> or
<i>Requisite</i> LoginModules are configured for an application,
then at least one <i>Sufficient</i> or <i>Optional</i>
{@code LoginModule} must succeed.

<p> <i>ModuleOptions</i> is a space separated list of
{@code LoginModule}-specific values which are passed directly to
the underlying LoginModules.  Options are defined by the
{@code LoginModule} itself, and control the behavior within it.
For example, a {@code LoginModule} may define options to support
debugging/testing capabilities.  The correct way to specify options in the
{@code Configuration} is by using the following key-value pairing:
<i>debug=\"true\"</i>.  The key and value should be separated by an
'equals' symbol, and the value should be surrounded by double quotes.
If a String in the form, ${system.property}, occurs in the value,
it will be expanded to the value of the system property.
Note that there is no limit to the number of
options a {@code LoginModule} may define.

<p> The following represents an example {@code Configuration} entry
based on the syntax above:

<pre>
Login {
  com.sun.security.auth.module.UnixLoginModule required;
  com.sun.security.auth.module.Krb5LoginModule optional
                  useTicketCache=\"true\"
                  ticketCache=\"${user.home}${/}tickets\";
};
</pre>

<p> This {@code Configuration} specifies that an application named,
\"Login\", requires users to first authenticate to the
<i>com.sun.security.auth.module.UnixLoginModule</i>, which is
required to succeed.  Even if the <i>UnixLoginModule</i>
authentication fails, the
<i>com.sun.security.auth.module.Krb5LoginModule</i>
still gets invoked.  This helps hide the source of failure.
Since the <i>Krb5LoginModule</i> is <i>Optional</i>, the overall
authentication succeeds only if the <i>UnixLoginModule</i>
(<i>Required</i>) succeeds.

<p> Also note that the LoginModule-specific options,
<i>useTicketCache=\"true\"</i> and
<i>ticketCache=${user.home}${/}tickets\"</i>,
are passed to the <i>Krb5LoginModule</i>.
These options instruct the <i>Krb5LoginModule</i> to
use the ticket cache at the specified location.
The system properties, <i>user.home</i> and <i>/</i>
(file.separator), are expanded to their respective values.

<p> There is only one Configuration object installed in the runtime at any
given time.  A Configuration object can be installed by calling the
{@code setConfiguration} method.  The installed Configuration object
can be obtained by calling the {@code getConfiguration} method.

<p> If no Configuration object has been installed in the runtime, a call to
{@code getConfiguration} installs an instance of the default
Configuration implementation (a default subclass implementation of this
abstract class).
The default Configuration implementation can be changed by setting the value
of the {@code login.configuration.provider} security property to the fully
qualified name of the desired Configuration subclass implementation.

<p> Application code can directly subclass Configuration to provide a custom
implementation.  In addition, an instance of a Configuration object can be
constructed by invoking one of the {@code getInstance} factory methods
with a standard type.  The default policy type is \"JavaLoginConfig\".
See the Configuration section in the <a href=
\"{@docRoot}/../technotes/guides/security/StandardNames.html#Configuration\">
Java Cryptography Architecture Standard Algorithm Name Documentation</a>
for a list of standard Configuration types.

@see javax.security.auth.login.LoginContext
@see java.security.Security security properties
"
      classrelation 996738 // configuration (<unidirectional association>)
	relation 996738 --->
	  a role_name "configuration" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 996738 // configuration (<unidirectional association>)
	  b parent class_ref 509058 // Configuration
      end

      classrelation 996866 // acc (<unidirectional association>)
	relation 996866 --->
	  a role_name "acc" init_value "
            java.security.AccessController.getContext()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 996866 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      operation 3034498 "checkPermission"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3034626 "Configuration"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 3034754 "getConfiguration"
	class_operation public return_type class_ref 509058 // Configuration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the installed login Configuration.

<p>

@return the login Configuration.  If a Configuration object was set
         via the {@code Configuration.setConfiguration} method,
         then that object is returned.  Otherwise, a default
         Configuration object is returned.

@exception SecurityException if the caller does not have permission
                         to retrieve the Configuration.

@see #setConfiguration
"
      end

      operation 3034882 "setConfiguration"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "configuration" type class_ref 509058 // Configuration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the login {@code Configuration}.

<p>

@param configuration the new {@code Configuration}

@exception SecurityException if the current thread does not have
                 Permission to set the {@code Configuration}.

@see #getConfiguration
"
      end

      operation 3035010 "getInstance"
	class_operation public return_type class_ref 509058 // Configuration
	nparams 2
	  param inout name "type" type class_ref 128130 // String
	  param inout name "params" type class_ref 509186 // Parameters
	nexceptions 1
	  exception class_ref 509314 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Configuration object of the specified type.

<p> This method traverses the list of registered security providers,
starting with the most preferred Provider.
A new Configuration object encapsulating the
ConfigurationSpi implementation from the first
Provider that supports the specified type is returned.

<p> Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param type the specified Configuration type.  See the Configuration
   section in the <a href=
   \"{@docRoot}/../technotes/guides/security/StandardNames.html#Configuration\">
   Java Cryptography Architecture Standard Algorithm Name
   Documentation</a> for a list of standard Configuration types.

@param params parameters for the Configuration, which may be null.

@return the new Configuration object.

@exception SecurityException if the caller does not have permission
         to get a Configuration instance for the specified type.

@exception NullPointerException if the specified type is null.

@exception IllegalArgumentException if the specified parameters
         are not understood by the ConfigurationSpi implementation
         from the selected Provider.

@exception NoSuchAlgorithmException if no Provider supports a
         ConfigurationSpi implementation for the specified type.

@see Provider
@since 1.6
"
      end

      class 509186 "Parameters"
	visibility public stereotype "interface"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 3035138 "getInstance"
	class_operation public return_type class_ref 509058 // Configuration
	nparams 3
	  param inout name "type" type class_ref 128130 // String
	  param inout name "params" type class_ref 509186 // Parameters
	  param inout name "provider" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 509442 // NoSuchProviderException
	  exception class_ref 509314 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Configuration object of the specified type.

<p> A new Configuration object encapsulating the
ConfigurationSpi implementation from the specified provider
is returned.   The specified provider must be registered
in the provider list.

<p> Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param type the specified Configuration type.  See the Configuration
   section in the <a href=
   \"{@docRoot}/../technotes/guides/security/StandardNames.html#Configuration\">
   Java Cryptography Architecture Standard Algorithm Name
   Documentation</a> for a list of standard Configuration types.

@param params parameters for the Configuration, which may be null.

@param provider the provider.

@return the new Configuration object.

@exception SecurityException if the caller does not have permission
         to get a Configuration instance for the specified type.

@exception NullPointerException if the specified type is null.

@exception IllegalArgumentException if the specified provider
         is null or empty,
         or if the specified parameters are not understood by
         the ConfigurationSpi implementation from the specified provider.

@exception NoSuchProviderException if the specified provider is not
         registered in the security provider list.

@exception NoSuchAlgorithmException if the specified provider does not
         support a ConfigurationSpi implementation for the specified
         type.

@see Provider
@since 1.6
"
      end

      operation 3035266 "getInstance"
	class_operation public return_type class_ref 509058 // Configuration
	nparams 3
	  param inout name "type" type class_ref 128130 // String
	  param inout name "params" type class_ref 509186 // Parameters
	  param inout name "provider" type class_ref 509570 // Provider
	nexceptions 1
	  exception class_ref 509314 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Configuration object of the specified type.

<p> A new Configuration object encapsulating the
ConfigurationSpi implementation from the specified Provider
object is returned.  Note that the specified Provider object
does not have to be registered in the provider list.

@param type the specified Configuration type.  See the Configuration
   section in the <a href=
   \"{@docRoot}/../technotes/guides/security/StandardNames.html#Configuration\">
   Java Cryptography Architecture Standard Algorithm Name
   Documentation</a> for a list of standard Configuration types.

@param params parameters for the Configuration, which may be null.

@param provider the Provider.

@return the new Configuration object.

@exception SecurityException if the caller does not have permission
         to get a Configuration instance for the specified type.

@exception NullPointerException if the specified type is null.

@exception IllegalArgumentException if the specified Provider is null,
         or if the specified parameters are not understood by
         the ConfigurationSpi implementation from the specified Provider.

@exception NoSuchAlgorithmException if the specified Provider does not
         support a ConfigurationSpi implementation for the specified
         type.

@see Provider
@since 1.6
"
      end

      operation 3035394 "handleException"
	class_operation private return_type class_ref 509058 // Configuration
	nparams 1
	  param inout name "nsae" type class_ref 509314 // NoSuchAlgorithmException
	nexceptions 1
	  exception class_ref 509314 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3035522 "getProvider"
	public return_type class_ref 509570 // Provider
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Provider of this Configuration.

<p> This Configuration instance will only have a Provider if it
was obtained via a call to {@code Configuration.getInstance}.
Otherwise this method returns null.

@return the Provider of this Configuration, or null.

@since 1.6
"
      end

      operation 3035650 "getType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type of this Configuration.

<p> This Configuration instance will only have a type if it
was obtained via a call to {@code Configuration.getInstance}.
Otherwise this method returns null.

@return the type of this Configuration, or null.

@since 1.6
"
      end

      operation 3035778 "getParameters"
	public return_type class_ref 509186 // Parameters
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return Configuration parameters.

<p> This Configuration instance will only have parameters if it
was obtained via a call to {@code Configuration.getInstance}.
Otherwise this method returns null.

@return Configuration parameters, or null.

@since 1.6
"
      end

      operation 3035906 "getAppConfigurationEntry"
	abstract public return_type class_ref 509698 // AppConfigurationEntry
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the AppConfigurationEntries for the specified <i>name</i>
from this Configuration.

<p>

@param name the name used to index the Configuration.

@return an array of AppConfigurationEntries for the specified <i>name</i>
         from this Configuration, or null if there are no entries
         for the specified <i>name</i>
"
      end

      operation 3036034 "refresh"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refresh and reload the Configuration.

<p> This method causes this Configuration object to refresh/reload its
contents in an implementation-dependent manner.
For example, if this Configuration object stores its entries in a file,
calling {@code refresh} may cause the file to be re-read.

<p> The default implementation of this method does nothing.
This method should be overridden if a refresh operation is supported
by the implementation.

@exception SecurityException if the caller does not have permission
                         to refresh its Configuration.
"
      end

      class 509826 "ConfigDelegate"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 996994 // <generalisation>
	  relation 996994 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 996994 // <generalisation>
	    b parent class_ref 509058 // Configuration
	end

	classrelation 997122 // spi (<unidirectional association>)
	  relation 997122 --->
	    a role_name "spi" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 997122 // spi (<unidirectional association>)
	    b parent class_ref 509954 // ConfigurationSpi
	end

	classrelation 997250 // p (<unidirectional association>)
	  relation 997250 --->
	    a role_name "p" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 997250 // p (<unidirectional association>)
	    b parent class_ref 509570 // Provider
	end

	classrelation 997378 // type (<unidirectional association>)
	  relation 997378 --->
	    a role_name "type" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 997378 // type (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 997506 // params (<unidirectional association>)
	  relation 997506 --->
	    a role_name "params" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 997506 // params (<unidirectional association>)
	    b parent class_ref 509186 // Parameters
	end

	operation 3036162 "ConfigDelegate"
	  private explicit_return_type ""
	  nparams 4
	    param inout name "spi" type class_ref 509954 // ConfigurationSpi
	    param inout name "p" type class_ref 509570 // Provider
	    param inout name "type" type class_ref 128130 // String
	    param inout name "params" type class_ref 509186 // Parameters
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3036290 "getType"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3036418 "getParameters"
	  public return_type class_ref 509186 // Parameters
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3036546 "getProvider"
	  public return_type class_ref 509570 // Provider
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3036674 "getAppConfigurationEntry"
	  public return_type class_ref 509698 // AppConfigurationEntry
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3036802 "refresh"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 509698 "AppConfigurationEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a single {@code LoginModule} entry
configured for the application specified in the
{@code getAppConfigurationEntry(String appName)}
method in the {@code Configuration} class.  Each respective
{@code AppConfigurationEntry} contains a {@code LoginModule} name,
a control flag (specifying whether this {@code LoginModule} is
REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL), and LoginModule-specific
options.  Please refer to the {@code Configuration} class for
more information on the different control flags and their semantics.

@see javax.security.auth.login.Configuration
"
      classrelation 4022018 // loginModuleName (<unidirectional association>)
	relation 4022018 --->
	  a role_name "loginModuleName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4022018 // loginModuleName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 1245186 "LoginModuleControlFlag"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4022402 // controlFlag (<unidirectional association>)
	  relation 4022402 --->
	    a role_name "controlFlag" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4022402 // controlFlag (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4022530 // REQUIRED (<unidirectional association>)
	  relation 4022530 --->
	    a role_name "REQUIRED" init_value "
                                new LoginModuleControlFlag(\"required\")" class_relation const_relation public
	      comment "
Required {@code LoginModule}.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4022530 // REQUIRED (<unidirectional association>)
	    b parent class_ref 1245186 // LoginModuleControlFlag
	end

	classrelation 4022658 // REQUISITE (<unidirectional association>)
	  relation 4022658 --->
	    a role_name "REQUISITE" init_value "
                                new LoginModuleControlFlag(\"requisite\")" class_relation const_relation public
	      comment "
Requisite {@code LoginModule}.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4022658 // REQUISITE (<unidirectional association>)
	    b parent class_ref 1245186 // LoginModuleControlFlag
	end

	classrelation 4022786 // SUFFICIENT (<unidirectional association>)
	  relation 4022786 --->
	    a role_name "SUFFICIENT" init_value "
                                new LoginModuleControlFlag(\"sufficient\")" class_relation const_relation public
	      comment "
Sufficient {@code LoginModule}.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4022786 // SUFFICIENT (<unidirectional association>)
	    b parent class_ref 1245186 // LoginModuleControlFlag
	end

	classrelation 4022914 // OPTIONAL (<unidirectional association>)
	  relation 4022914 --->
	    a role_name "OPTIONAL" init_value "
                                new LoginModuleControlFlag(\"optional\")" class_relation const_relation public
	      comment "
Optional {@code LoginModule}.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4022914 // OPTIONAL (<unidirectional association>)
	    b parent class_ref 1245186 // LoginModuleControlFlag
	end

	operation 10240642 "LoginModuleControlFlag"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "controlFlag" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10240770 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a String representation of this controlFlag.

<p> The String has the format, \"LoginModuleControlFlag: <i>flag</i>\",
where <i>flag</i> is either <i>required</i>, <i>requisite</i>,
<i>sufficient</i>, or <i>optional</i>.

@return a String representation of this controlFlag.
"
	end
      end

      classrelation 4022146 // controlFlag (<unidirectional association>)
	relation 4022146 --->
	  a role_name "controlFlag" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4022146 // controlFlag (<unidirectional association>)
	  b parent class_ref 1245186 // LoginModuleControlFlag
      end

      classrelation 4022274 // options (<unidirectional association>)
	relation 4022274 --->
	  a role_name "options" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,?> ${name}${value};
"
	    classrelation_ref 4022274 // options (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 10240130 "AppConfigurationEntry"
	public explicit_return_type ""
	nparams 3
	  param inout name "loginModuleName" type class_ref 128130 // String
	  param inout name "controlFlag" type class_ref 1245186 // LoginModuleControlFlag
	  param inout name "options" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor for this class.

<p> This entry represents a single {@code LoginModule}
entry configured for the application specified in the
{@code getAppConfigurationEntry(String appName)}
method from the {@code Configuration} class.

@param loginModuleName String representing the class name of the
                 {@code LoginModule} configured for the
                 specified application. <p>

@param controlFlag either REQUIRED, REQUISITE, SUFFICIENT,
                 or OPTIONAL. <p>

@param options the options configured for this {@code LoginModule}.

@exception IllegalArgumentException if {@code loginModuleName}
                 is null, if {@code LoginModuleName}
                 has a length of 0, if {@code controlFlag}
                 is not either REQUIRED, REQUISITE, SUFFICIENT
                 or OPTIONAL, or if {@code options} is null.
"
      end

      operation 10240258 "getLoginModuleName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the class name of the configured {@code LoginModule}.

@return the class name of the configured {@code LoginModule} as
         a String.
"
      end

      operation 10240386 "getControlFlag"
	public return_type class_ref 1245186 // LoginModuleControlFlag
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the controlFlag
(either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
for this {@code LoginModule}.

@return the controlFlag
         (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
         for this {@code LoginModule}.
"
      end

      operation 10240514 "getOptions"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the options configured for this {@code LoginModule}.

@return the options configured for this {@code LoginModule}
         as an unmodifiable {@code Map}.
"
      end
    end

    class 509954 "ConfigurationSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the {@code Configuration} class.
All the abstract methods in this class must be implemented by each
service provider who wishes to supply a Configuration implementation.

<p> Subclass implementations of this abstract class must provide
a public constructor that takes a {@code Configuration.Parameters}
object as an input parameter.  This constructor also must throw
an IllegalArgumentException if it does not understand the
{@code Configuration.Parameters} input.


@since 1.6
"
      operation 10240898 "engineGetAppConfigurationEntry"
	abstract protected return_type class_ref 509698 // AppConfigurationEntry
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the AppConfigurationEntries for the specified <i>name</i>.

<p>

@param name the name used to index the Configuration.

@return an array of AppConfigurationEntries for the specified
         <i>name</i>, or null if there are no entries.
"
      end

      operation 10241026 "engineRefresh"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refresh and reload the Configuration.

<p> This method causes this Configuration object to refresh/reload its
contents in an implementation-dependent manner.
For example, if this Configuration object stores its entries in a file,
calling {@code refresh} may cause the file to be re-read.

<p> The default implementation of this method does nothing.
This method should be overridden if a refresh operation is supported
by the implementation.

@exception SecurityException if the caller does not have permission
         to refresh its Configuration.
"
      end
    end

    class 1244674 "AccountException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generic account exception.

@since 1.5
"
      classrelation 4021506 // <generalisation>
	relation 4021506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4021506 // <generalisation>
	  b parent class_ref 507906 // LoginException
      end

      attribute 2354306 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2112878680072211787L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10239106 "AccountException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10239234 "AccountException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountException with the specified detail message.
A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1244802 "AccountExpiredException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a user account has expired.

<p> This exception is thrown by LoginModules when they determine
that an account has expired.  For example, a {@code LoginModule},
after successfully authenticating a user, may determine that the
user's account has expired.  In this case the {@code LoginModule}
throws this exception to notify the application.  The application can
then take the appropriate steps to notify the user.

"
      classrelation 4021634 // <generalisation>
	relation 4021634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4021634 // <generalisation>
	  b parent class_ref 1244674 // AccountException
      end

      attribute 2354434 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6064064890162661560L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10239362 "AccountExpiredException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountExpiredException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10239490 "AccountExpiredException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountExpiredException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1244930 "AccountLockedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that an account was locked.

<p> This exception may be thrown by a LoginModule if it
determines that authentication is being attempted on a
locked account.

@since 1.5
"
      classrelation 4021762 // <generalisation>
	relation 4021762 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4021762 // <generalisation>
	  b parent class_ref 1244674 // AccountException
      end

      attribute 2354562 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8280345554014066334L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10239618 "AccountLockedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountLockedException with no detail message.
A detail message is a String that describes this particular exception.
"
      end

      operation 10239746 "AccountLockedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountLockedException with the specified
detail message. A detail message is a String that describes
this particular exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1245058 "AccountNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that an account was not found.

<p> This exception may be thrown by a LoginModule if it is unable
to locate an account necessary to perform authentication.

@since 1.5
"
      classrelation 4021890 // <generalisation>
	relation 4021890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4021890 // <generalisation>
	  b parent class_ref 1244674 // AccountException
      end

      attribute 2354690 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1498349563916294614L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10239874 "AccountNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountNotFoundException with no detail message.
A detail message is a String that describes this particular exception.
"
      end

      operation 10240002 "AccountNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountNotFoundException with the specified
detail message. A detail message is a String that describes
this particular exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1245314 "CredentialException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generic credential exception.

@since 1.5
"
      classrelation 4023042 // <generalisation>
	relation 4023042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4023042 // <generalisation>
	  b parent class_ref 507906 // LoginException
      end

      attribute 2354818 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4772893876810601859L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10241154 "CredentialException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10241282 "CredentialException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialException with the specified detail message.
A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1245442 "CredentialExpiredException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a {@code Credential} has expired.

<p> This exception is thrown by LoginModules when they determine
that a {@code Credential} has expired.
For example, a {@code LoginModule} authenticating a user
in its {@code login} method may determine that the user's
password, although entered correctly, has expired.  In this case
the {@code LoginModule} throws this exception to notify
the application.  The application can then take the appropriate
steps to assist the user in updating the password.

"
      classrelation 4023170 // <generalisation>
	relation 4023170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4023170 // <generalisation>
	  b parent class_ref 1245314 // CredentialException
      end

      attribute 2354946 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5344739593859737937L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10241410 "CredentialExpiredException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialExpiredException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10241538 "CredentialExpiredException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialExpiredException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1245570 "CredentialNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a credential was not found.

<p> This exception may be thrown by a LoginModule if it is unable
to locate a credential necessary to perform authentication.

@since 1.5
"
      classrelation 4023298 // <generalisation>
	relation 4023298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4023298 // <generalisation>
	  b parent class_ref 1245314 // CredentialException
      end

      attribute 2355074 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7779934467214319475L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10241666 "CredentialNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialNotFoundException with no detail message.
A detail message is a String that describes this particular exception.
"
      end

      operation 10241794 "CredentialNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialNotFoundException with the specified
detail message. A detail message is a String that describes
this particular exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1245698 "FailedLoginException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that user authentication failed.

<p> This exception is thrown by LoginModules if authentication failed.
For example, a {@code LoginModule} throws this exception if
the user entered an incorrect password.

"
      classrelation 4023426 // <generalisation>
	relation 4023426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4023426 // <generalisation>
	  b parent class_ref 507906 // LoginException
      end

      attribute 2355202 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 802556922354616286L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10241922 "FailedLoginException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a FailedLoginException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10242050 "FailedLoginException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a FailedLoginException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end
  end

  deploymentview 147330 "login"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 333186 "Configuration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.AuthPermission;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.security.PrivilegedActionException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import java.util.Objects;
import sun.security.jca.GetInstance;
${definition}"
      associated_elems
	class_ref 509058 // Configuration
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906754 "LoginException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 507906 // LoginException
      end
      comment "Copyright (c) 1998, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906882 "AccountException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1244674 // AccountException
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907010 "AccountExpiredException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1244802 // AccountExpiredException
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907138 "AccountLockedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1244930 // AccountLockedException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907266 "AccountNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1245058 // AccountNotFoundException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907394 "AppConfigurationEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.Collections;
${definition}"
      associated_elems
	class_ref 509698 // AppConfigurationEntry
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907522 "ConfigurationSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 509954 // ConfigurationSpi
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907650 "CredentialException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1245314 // CredentialException
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907778 "CredentialExpiredException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1245442 // CredentialExpiredException
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 907906 "CredentialNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1245570 // CredentialNotFoundException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 908034 "FailedLoginException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1245698 // FailedLoginException
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 908162 "LoginContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import java.util.LinkedList;
import java.util.Map;
import java.util.HashMap;
import java.text.MessageFormat;
import javax.security.auth.Subject;
import javax.security.auth.AuthPermission;
import javax.security.auth.callback.*;
import java.security.AccessController;
import java.security.AccessControlContext;
import sun.security.util.PendingException;
import sun.security.util.ResourcesMgr;
${definition}"
      associated_elems
	class_ref 508418 // LoginContext
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
