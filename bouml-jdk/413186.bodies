class SimpleAttributeSet
!!!2418562.java!!!	SimpleAttributeSet(inout source : AttributeSet)
        addAttributes(source);
!!!2418690.java!!!	isEmpty() : boolean
        return table.isEmpty();
!!!2418818.java!!!	getAttributeCount() : int
        return table.size();
!!!2418946.java!!!	isDefined(inout attrName : Object) : boolean
        return table.containsKey(attrName);
!!!2419074.java!!!	isEqual(inout attr : AttributeSet) : boolean
        return ((getAttributeCount() == attr.getAttributeCount()) &&
                containsAttributes(attr));
!!!2419202.java!!!	copyAttributes() : AttributeSet
        return (AttributeSet) clone();
!!!2419330.java!!!	getAttributeNames() : Enumeration
        return Collections.enumeration(table.keySet());
!!!2419458.java!!!	getAttribute(inout name : Object) : Object
        Object value = table.get(name);
        if (value == null) {
            AttributeSet parent = getResolveParent();
            if (parent != null) {
                value = parent.getAttribute(name);
            }
        }
        return value;
!!!2419586.java!!!	containsAttribute(inout name : Object, inout value : Object) : boolean
        return value.equals(getAttribute(name));
!!!2419714.java!!!	containsAttributes(inout attributes : AttributeSet) : boolean
        boolean result = true;

        Enumeration names = attributes.getAttributeNames();
        while (result && names.hasMoreElements()) {
            Object name = names.nextElement();
            result = attributes.getAttribute(name).equals(getAttribute(name));
        }

        return result;
!!!2419842.java!!!	addAttribute(inout name : Object, inout value : Object) : void
        table.put(name, value);
!!!2419970.java!!!	addAttributes(inout attributes : AttributeSet) : void
        Enumeration names = attributes.getAttributeNames();
        while (names.hasMoreElements()) {
            Object name = names.nextElement();
            addAttribute(name, attributes.getAttribute(name));
        }
!!!2420098.java!!!	removeAttribute(inout name : Object) : void
        table.remove(name);
!!!2420226.java!!!	removeAttributes(inout names : Enumeration) : void
        while (names.hasMoreElements())
            removeAttribute(names.nextElement());
!!!2420354.java!!!	removeAttributes(inout attributes : AttributeSet) : void
        if (attributes == this) {
            table.clear();
        }
        else {
            Enumeration names = attributes.getAttributeNames();
            while (names.hasMoreElements()) {
                Object name = names.nextElement();
                Object value = attributes.getAttribute(name);
                if (value.equals(getAttribute(name)))
                    removeAttribute(name);
            }
        }
!!!2420482.java!!!	getResolveParent() : AttributeSet
        return (AttributeSet) table.get(StyleConstants.ResolveAttribute);
!!!2420610.java!!!	setResolveParent(inout parent : AttributeSet) : void
        addAttribute(StyleConstants.ResolveAttribute, parent);
!!!2420738.java!!!	clone() : Object
        SimpleAttributeSet attr;
        try {
            attr = (SimpleAttributeSet) super.clone();
            attr.table = (LinkedHashMap) table.clone();
        } catch (CloneNotSupportedException cnse) {
            attr = null;
        }
        return attr;
!!!2420866.java!!!	hashCode() : int
        return table.hashCode();
!!!2420994.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj instanceof AttributeSet) {
            AttributeSet attrs = (AttributeSet) obj;
            return isEqual(attrs);
        }
        return false;
!!!2421122.java!!!	toString() : String
        String s = "";
        Enumeration names = getAttributeNames();
        while (names.hasMoreElements()) {
            Object key = names.nextElement();
            Object value = getAttribute(key);
            if (value instanceof AttributeSet) {
                // don't go recursive
                s = s + key + "=**AttributeSet** ";
            } else {
                s = s + key + "=" + value + " ";
            }
        }
        return s;
!!!2421250.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        StyleContext.writeAttributeSet(s, this);
!!!2421378.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();
        table = new LinkedHashMap<>(3);
        StyleContext.readAttributeSet(s, this);
