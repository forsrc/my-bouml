format 222
"threadpool" // jdk1.8::com::sun::corba::se::impl::orbutil::threadpool
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/corba/se/impl/orbutil/threadpool/"
  java_package "com.sun.corba.se.impl.orbutil.threadpool"
  classview 140930 "threadpool"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 255874 "ThreadPoolImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 365826 // <realization>
	relation 365826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 365826 // <realization>
	  b parent class_ref 256002 // ThreadPool
      end

      classrelation 365954 // threadCounter (<unidirectional association>)
	relation 365954 --->
	  a role_name "threadCounter" init_value " new AtomicInteger(0)" class_relation private
	    comment " serial counter useful for debugging
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 365954 // threadCounter (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      classrelation 366082 // wrapper (<unidirectional association>)
	relation 366082 --->
	  a role_name "wrapper" init_value "
        ORBUtilSystemException.get(CORBALogDomains.RPC_TRANSPORT)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366082 // wrapper (<unidirectional association>)
	  b parent class_ref 150658 // ORBUtilSystemException
      end

      classrelation 366210 // workQueue (<unidirectional association>)
	relation 366210 --->
	  a role_name "workQueue" private
	    comment " Any time currentThreadCount and/or availableWorkerThreads is updated
 or accessed this ThreadPool's WorkQueue must be locked. And, it is
 expected that this ThreadPool's WorkQueue is the only object that
 updates and accesses these values directly and indirectly though a
 call to a method in this ThreadPool. If any call to update or access
 those values must synchronized on this ThreadPool's WorkQueue.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366210 // workQueue (<unidirectional association>)
	  b parent class_ref 256130 // WorkQueue
      end

      attribute 309378 "availableWorkerThreads"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stores the number of available worker threads
"
      end

      attribute 309506 "currentThreadCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stores the number of threads in the threadpool currently
"
      end

      attribute 309634 "minWorkerThreads"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Minimum number of worker threads created at instantiation of the threadpool
"
      end

      attribute 309762 "maxWorkerThreads"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maximum number of worker threads in the threadpool
"
      end

      attribute 309890 "inactivityTimeout"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Inactivity timeout value for worker threads to exit and stop running
"
      end

      attribute 310018 "boundedThreadPool"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates if the threadpool is bounded or unbounded
"
      end

      classrelation 366338 // processedCount (<unidirectional association>)
	relation 366338 --->
	  a role_name "processedCount" init_value " new AtomicLong(1)" private
	    comment " Running count of the work items processed
 Set the value to 1 so that divide by zero is avoided in
 averageWorkCompletionTime()
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366338 // processedCount (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      classrelation 366466 // totalTimeTaken (<unidirectional association>)
	relation 366466 --->
	  a role_name "totalTimeTaken" init_value " new AtomicLong(0)" private
	    comment " Running aggregate of the time taken in millis to execute work items
 processed by the threads in the threadpool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366466 // totalTimeTaken (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      classrelation 366594 // name (<unidirectional association>)
	relation 366594 --->
	  a role_name "name" private
	    comment " Name of the ThreadPool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366594 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 366722 // threadpoolMonitoredObject (<unidirectional association>)
	relation 366722 --->
	  a role_name "threadpoolMonitoredObject" private
	    comment " MonitoredObject for ThreadPool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366722 // threadpoolMonitoredObject (<unidirectional association>)
	  b parent class_ref 218882 // MonitoredObject
      end

      classrelation 366850 // threadGroup (<unidirectional association>)
	relation 366850 --->
	  a role_name "threadGroup" private
	    comment " ThreadGroup in which threads should be created
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366850 // threadGroup (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      classrelation 366978 // workersLock (<unidirectional association>)
	relation 366978 --->
	  a role_name "workersLock" init_value " new Object()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 366978 // workersLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      class 256514 "WorkerThread"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 367234 // <generalisation>
	  relation 367234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 367234 // <generalisation>
	    b parent class_ref 128642 // Thread
	end

	classrelation 367362 // <realization>
	  relation 367362 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 367362 // <realization>
	    b parent class_ref 146562 // Closeable
	end

	classrelation 367490 // currentWork (<unidirectional association>)
	  relation 367490 --->
	    a role_name "currentWork" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 367490 // currentWork (<unidirectional association>)
	    b parent class_ref 210690 // Work
	end

	attribute 310146 "threadId"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " unique id for the thread"
	end

	attribute 310274 "closeCalled"
	  volatile private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 367618 // threadPoolName (<unidirectional association>)
	  relation 367618 --->
	    a role_name "threadPoolName" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 367618 // threadPoolName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 367746 // workerThreadName (<unidirectional association>)
	  relation 367746 --->
	    a role_name "workerThreadName" init_value " new StringBuffer()" private
	      comment " name seen by Thread.getName()
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 367746 // workerThreadName (<unidirectional association>)
	    b parent class_ref 166018 // StringBuffer
	end

	operation 1295746 "WorkerThread"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "tg" type class_ref 128898 // ThreadGroup
	    param inout name "threadPoolName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1295874 "close"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1296002 "resetClassLoader"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1296130 "performWork"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1296258 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1296386 "composeWorkerThreadName"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param inout name "poolName" type class_ref 128130 // String
	    param inout name "workerName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 367106 // workers (<unidirectional association>)
	relation 367106 --->
	  a role_name "workers" init_value " new ArrayList<>()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WorkerThread> ${name}${value};
"
	    classrelation_ref 367106 // workers (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 1292418 "ThreadPoolImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "tg" type class_ref 128898 // ThreadGroup
	  param inout name "threadpoolName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is used to create an unbounded threadpool
"
      end

      operation 1292546 "ThreadPoolImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "threadpoolName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is used to create an unbounded threadpool
in the ThreadGroup of the current thread
"
      end

      operation 1292674 "ThreadPoolImpl"
	public explicit_return_type ""
	nparams 4
	  param in name "minSize" explicit_type "int"
	  param in name "maxSize" explicit_type "int"
	  param in name "timeout" explicit_type "long"
	  param inout name "threadpoolName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is used to create bounded threadpool
"
      end

      operation 1292802 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note that this method should not return until AFTER all threads have died."
      end

      operation 1292930 "initializeMonitoring"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup monitoring for this threadpool"
      end

      operation 1293058 "getMonitoredObject"
	package return_type class_ref 218882 // MonitoredObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package private method to get the monitored object for this
 class"
      end

      operation 1293186 "getAnyWorkQueue"
	public return_type class_ref 256130 // WorkQueue
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1293314 "getWorkQueue"
	public return_type class_ref 256130 // WorkQueue
	nparams 1
	  param in name "queueId" explicit_type "int"
	nexceptions 1
	  exception class_ref 256258 // NoSuchWorkQueueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1293442 "notifyForAvailableWork"
	package explicit_return_type "void"
	nparams 1
	  param inout name "aWorkQueue" type class_ref 256130 // WorkQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To be called from the workqueue when work is added to the
workQueue. This method would create new threads if required
or notify waiting threads on the queue for available work
"
      end

      operation 1293570 "createWorkerThreadHelper"
	private return_type class_ref 128642 // Thread
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1293698 "createWorkerThread"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To be called from the workqueue to create worker threads when none
available.
"
      end

      operation 1293826 "minimumNumberOfThreads"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1293954 "maximumNumberOfThreads"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294082 "idleTimeoutForThreads"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294210 "currentNumberOfThreads"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294338 "decrementCurrentNumberOfThreads"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294466 "incrementCurrentNumberOfThreads"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294594 "numberOfAvailableThreads"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294722 "numberOfBusyThreads"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294850 "averageWorkCompletionTime"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294978 "currentProcessedCount"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1295106 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1295234 "numberOfWorkQueues"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will return the number of WorkQueues serviced by the threadpool.
"
      end

      operation 1295362 "getUniqueThreadId"
	class_operation private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1295490 "decrementNumberOfAvailableThreads"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will decrement the number of available threads
in the threadpool which are waiting for work. Called from
WorkQueueImpl.requestWork()
"
      end

      operation 1295618 "incrementNumberOfAvailableThreads"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will increment the number of available threads
in the threadpool which are waiting for work. Called from
WorkQueueImpl.requestWork()
"
      end
    end

    class 256642 "ThreadPoolManagerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 368002 // <realization>
	relation 368002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 368002 // <realization>
	  b parent class_ref 246402 // ThreadPoolManager
      end

      classrelation 368130 // threadPool (<unidirectional association>)
	relation 368130 --->
	  a role_name "threadPool" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 368130 // threadPool (<unidirectional association>)
	  b parent class_ref 256002 // ThreadPool
      end

      classrelation 368258 // threadGroup (<unidirectional association>)
	relation 368258 --->
	  a role_name "threadGroup" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 368258 // threadGroup (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      classrelation 368386 // wrapper (<unidirectional association>)
	relation 368386 --->
	  a role_name "wrapper" init_value "
        ORBUtilSystemException.get(CORBALogDomains.RPC_TRANSPORT)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 368386 // wrapper (<unidirectional association>)
	  b parent class_ref 150658 // ORBUtilSystemException
      end

      operation 1297666 "ThreadPoolManagerImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 368514 // tgCount (<unidirectional association>)
	relation 368514 --->
	  a role_name "tgCount" init_value " new AtomicInteger()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 368514 // tgCount (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      operation 1297794 "getThreadGroup"
	private return_type class_ref 128898 // ThreadGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1297922 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1298050 "getThreadPool"
	public return_type class_ref 256002 // ThreadPool
	nparams 1
	  param inout name "threadpoolId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 256770 // NoSuchThreadPoolException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will return an instance of the threadpool given a threadpoolId,
that can be used by any component in the app. server.

@throws NoSuchThreadPoolException thrown when invalid threadpoolId is passed
as a parameter
"
      end

      operation 1298178 "getThreadPool"
	public return_type class_ref 256002 // ThreadPool
	nparams 1
	  param in name "numericIdForThreadpool" explicit_type "int"
	nexceptions 1
	  exception class_ref 256770 // NoSuchThreadPoolException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will return an instance of the threadpool given a numeric threadpoolId.
This method will be used by the ORB to support the functionality of
dedicated threadpool for EJB beans

@throws NoSuchThreadPoolException thrown when invalidnumericIdForThreadpool is passed
as a parameter
"
      end

      operation 1298306 "getThreadPoolNumericId"
	public explicit_return_type "int"
	nparams 1
	  param inout name "threadpoolId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to return the numeric id of the threadpool, given a String
threadpoolId. This is used by the POA interceptors to add the numeric threadpool
Id, as a tagged component in the IOR. This is used to provide the functionality of
dedicated threadpool for EJB beans
"
      end

      operation 1298434 "getThreadPoolStringId"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "numericIdForThreadpool" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a String Id for a numericId of a threadpool managed by the threadpool
manager
"
      end

      operation 1298562 "getDefaultThreadPool"
	public return_type class_ref 256002 // ThreadPool
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first instance of ThreadPool in the ThreadPoolManager
"
      end

      operation 1298690 "getThreadPoolChooser"
	public return_type class_ref 256898 // ThreadPoolChooser
	nparams 1
	  param inout name "componentId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance of ThreadPoolChooser based on the componentId that was
passed as argument
"
      end

      operation 1298818 "getThreadPoolChooser"
	public return_type class_ref 256898 // ThreadPoolChooser
	nparams 1
	  param in name "componentIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance of ThreadPoolChooser based on the componentIndex that was
passed as argument. This is added for improved performance so that the caller
does not have to pay the cost of computing hashcode for the componentId
"
      end

      operation 1298946 "setThreadPoolChooser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "componentId" type class_ref 128130 // String
	  param inout name "aThreadPoolChooser" type class_ref 256898 // ThreadPoolChooser
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a ThreadPoolChooser for a particular componentId in the ThreadPoolManager. This
would enable any component to add a ThreadPoolChooser for their specific use
"
      end

      operation 1299074 "getThreadPoolChooserNumericId"
	public explicit_return_type "int"
	nparams 1
	  param inout name "componentId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the numeric index associated with the componentId specified for a
ThreadPoolChooser. This method would help the component call the more
efficient implementation i.e. getThreadPoolChooser(int componentIndex)
"
      end
    end

    class 257026 "TimeoutException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 368642 // <generalisation>
	relation 368642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 368642 // <generalisation>
	  b parent class_ref 132226 // Exception
      end
    end

    class 257154 "WorkQueueImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 368770 // <realization>
	relation 368770 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 368770 // <realization>
	  b parent class_ref 256130 // WorkQueue
      end

      classrelation 368898 // workerThreadPool (<unidirectional association>)
	relation 368898 --->
	  a role_name "workerThreadPool" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 368898 // workerThreadPool (<unidirectional association>)
	  b parent class_ref 256002 // ThreadPool
      end

      classrelation 369026 // theWorkQueue (<unidirectional association>)
	relation 369026 --->
	  a role_name "theWorkQueue" init_value " new LinkedList()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 369026 // theWorkQueue (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      attribute 310402 "workItemsAdded"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 310530 "workItemsDequeued"
	private explicit_type "long"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initialized to 1 to avoid divide by zero in averageTimeInQueue()
"
      end

      attribute 310658 "totalTimeInQueue"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 369154 // name (<unidirectional association>)
	relation 369154 --->
	  a role_name "name" private
	    comment " Name of the work queue
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 369154 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 369282 // workqueueMonitoredObject (<unidirectional association>)
	relation 369282 --->
	  a role_name "workqueueMonitoredObject" private
	    comment " MonitoredObject for work queue
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 369282 // workqueueMonitoredObject (<unidirectional association>)
	  b parent class_ref 218882 // MonitoredObject
      end

      operation 1300098 "WorkQueueImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1300226 "WorkQueueImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "workerThreadPool" type class_ref 256002 // ThreadPool
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1300354 "WorkQueueImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "workerThreadPool" type class_ref 256002 // ThreadPool
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1300482 "initializeMonitoring"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup monitoring for this workqueue"
      end

      operation 1300610 "getMonitoredObject"
	package return_type class_ref 218882 // MonitoredObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package private method to get the monitored object for this
 class"
      end

      operation 1300738 "addWork"
	public explicit_return_type "void"
	nparams 1
	  param inout name "work" type class_ref 210690 // Work
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1300866 "requestWork"
	package return_type class_ref 210690 // Work
	nparams 1
	  param in name "waitTime" explicit_type "long"
	nexceptions 2
	  exception class_ref 257026 // TimeoutException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1300994 "setThreadPool"
	public explicit_return_type "void"
	nparams 1
	  param inout name "workerThreadPool" type class_ref 256002 // ThreadPool
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1301122 "getThreadPool"
	public return_type class_ref 256002 // ThreadPool
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1301250 "totalWorkItemsAdded"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of Work items added to the Queue.
This method is unsynchronized and only gives a snapshot of the
state when it is called
"
      end

      operation 1301378 "workItemsInQueue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of Work items in the Queue to be processed
This method is unsynchronized and only gives a snapshot of the
state when it is called
"
      end

      operation 1301506 "averageTimeInQueue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1301634 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 136066 "threadpool"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 199042 "ThreadPoolImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Closeable;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.List;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import com.sun.corba.se.spi.orbutil.threadpool.NoSuchWorkQueueException;
import com.sun.corba.se.spi.orbutil.threadpool.ThreadPool;
import com.sun.corba.se.spi.orbutil.threadpool.Work;
import com.sun.corba.se.spi.orbutil.threadpool.WorkQueue;
import com.sun.corba.se.impl.orbutil.ORBConstants;
import com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl;
import com.sun.corba.se.spi.monitoring.MonitoringConstants;
import com.sun.corba.se.spi.monitoring.MonitoredObject;
import com.sun.corba.se.spi.monitoring.MonitoringFactories;
import com.sun.corba.se.spi.orb.ORB;
import com.sun.corba.se.spi.monitoring.LongMonitoredAttributeBase;
import com.sun.corba.se.impl.logging.ORBUtilSystemException;
import com.sun.corba.se.impl.orbutil.ORBConstants;
import com.sun.corba.se.spi.logging.CORBALogDomains;
${definition}"
      associated_elems
	class_ref 255874 // ThreadPoolImpl
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 199298 "ThreadPoolManagerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.PrivilegedAction;
import java.security.AccessController;
import java.util.concurrent.atomic.AtomicInteger;
import com.sun.corba.se.spi.orb.ORB;
import com.sun.corba.se.spi.orbutil.threadpool.NoSuchThreadPoolException;
import com.sun.corba.se.spi.orbutil.threadpool.ThreadPool;
import com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolManager;
import com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser;
import com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl;
import com.sun.corba.se.impl.orbutil.ORBConstants;
import com.sun.corba.se.impl.logging.ORBUtilSystemException;
import com.sun.corba.se.impl.orbutil.ORBConstants;
import com.sun.corba.se.spi.logging.CORBALogDomains;
${definition}"
      associated_elems
	class_ref 256642 // ThreadPoolManagerImpl
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 199426 "TimeoutException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 257026 // TimeoutException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 199682 "WorkQueueImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.LinkedList;
import com.sun.corba.se.spi.orbutil.threadpool.ThreadPool;
import com.sun.corba.se.spi.orbutil.threadpool.Work;
import com.sun.corba.se.spi.orbutil.threadpool.WorkQueue;
import com.sun.corba.se.impl.orbutil.ORBConstants;
import com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl;
import com.sun.corba.se.spi.monitoring.MonitoringConstants;
import com.sun.corba.se.spi.monitoring.MonitoringFactories;
import com.sun.corba.se.spi.monitoring.MonitoredObject;
import com.sun.corba.se.spi.monitoring.LongMonitoredAttributeBase;
${definition}"
      associated_elems
	class_ref 257154 // WorkQueueImpl
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
