format 222
"kerberos" // jdk1.8::javax::security::auth::kerberos
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/security/auth/kerberos/"
  java_package "javax.security.auth.kerberos"
  classview 171650 "kerberos"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 833922 "KeyTab"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class encapsulates a keytab file.
<p>
A Kerberos JAAS login module that obtains long term secret keys from a
keytab file should use this class. The login module will store
an instance of this class in the private credential set of a
{@link javax.security.auth.Subject Subject} during the commit phase of the
authentication process.
<p>
If a {@code KeyTab} object is obtained from {@link #getUnboundInstance()}
or {@link #getUnboundInstance(java.io.File)}, it is unbound and thus can be
used by any service principal. Otherwise, if it's obtained from
{@link #getInstance(KerberosPrincipal)} or
{@link #getInstance(KerberosPrincipal, java.io.File)}, it is bound to the
specific service principal and can only be used by it.
<p>
Please note the constructors {@link #getInstance()} and
{@link #getInstance(java.io.File)} were created when there was no support
for unbound keytabs. These methods should not be used anymore. An object
created with either of these methods are considered to be bound to an
unknown principal, which means, its {@link #isBound()} returns true and
{@link #getPrincipal()} returns null.
<p>
It might be necessary for the application to be granted a
{@link javax.security.auth.PrivateCredentialPermission
PrivateCredentialPermission} if it needs to access the KeyTab
instance from a Subject. This permission is not needed when the
application depends on the default JGSS Kerberos mechanism to access the
KeyTab. In that case, however, the application will need an appropriate
{@link javax.security.auth.kerberos.ServicePermission ServicePermission}.
<p>
The keytab file format is described at
<a href=\"http://www.ioplex.com/utilities/keytab.txt\">
http://www.ioplex.com/utilities/keytab.txt</a>.
<p>
@since 1.7
"
      classrelation 4020226 // file (<unidirectional association>)
	relation 4020226 --->
	  a role_name "file" const_relation private
	    comment "
Impl notes:

This class is only a name, a permanent link to the keytab source
(can be missing). Itself has no content. In order to read content,
take a snapshot and read from it.

The snapshot is of type sun.security.krb5.internal.ktab.KeyTab, which
contains the content of the keytab file when the snapshot is taken.
Itself has no refresh function and mostly an immutable class (except
for the create/add/save methods only used by the ktab command).

 Source, null if using the default one. Note that the default name
 is maintained in snapshot, this field is never \"resolved\".
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4020226 // file (<unidirectional association>)
	  b parent class_ref 131970 // File
      end

      classrelation 4020354 // princ (<unidirectional association>)
	relation 4020354 --->
	  a role_name "princ" const_relation private
	    comment " Bound user: normally from the \"principal\" value in a JAAS krb5
 login conf. Will be null if it's \"*\".
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4020354 // princ (<unidirectional association>)
	  b parent class_ref 834050 // KerberosPrincipal
      end

      attribute 2353154 "bound"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 184194 "initialization"
	
	cpp "" ""
	java "  static {
        KerberosSecrets.setJavaxSecurityAuthKerberosAccess(
                new JavaxSecurityAuthKerberosAccessImpl());
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10234370 "KeyTab"
	private explicit_return_type ""
	nparams 3
	  param inout name "princ" type class_ref 834050 // KerberosPrincipal
	  param inout name "file" type class_ref 131970 // File
	  param inout name "bound" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10234498 "getInstance"
	class_operation public return_type class_ref 833922 // KeyTab
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code KeyTab} instance from a {@code File} object
that is bound to an unknown service principal.
<p>
The result of this method is never null. This method only associates
the returned {@code KeyTab} object with the file and does not read it.
<p>
Developers should call {@link #getInstance(KerberosPrincipal,File)}
when the bound service principal is known.
@param file the keytab {@code File} object, must not be null
@return the keytab instance
@throws NullPointerException if the {@code file} argument is null
"
      end

      operation 10234626 "getUnboundInstance"
	class_operation public return_type class_ref 833922 // KeyTab
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unbound {@code KeyTab} instance from a {@code File}
object.
<p>
The result of this method is never null. This method only associates
the returned {@code KeyTab} object with the file and does not read it.
@param file the keytab {@code File} object, must not be null
@return the keytab instance
@throws NullPointerException if the file argument is null
@since 1.8
"
      end

      operation 10234754 "getInstance"
	class_operation public return_type class_ref 833922 // KeyTab
	nparams 2
	  param inout name "princ" type class_ref 834050 // KerberosPrincipal
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code KeyTab} instance from a {@code File} object
that is bound to the specified service principal.
<p>
The result of this method is never null. This method only associates
the returned {@code KeyTab} object with the file and does not read it.
@param princ the bound service principal, must not be null
@param file the keytab {@code File} object, must not be null
@return the keytab instance
@throws NullPointerException if either of the arguments is null
@since 1.8
"
      end

      operation 10234882 "getInstance"
	class_operation public return_type class_ref 833922 // KeyTab
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code KeyTab} instance that is bound
to an unknown service principal.
<p>
The result of this method is never null. This method only associates
the returned {@code KeyTab} object with the default keytab file and
does not read it.
<p>
Developers should call {@link #getInstance(KerberosPrincipal)}
when the bound service principal is known.
@return the default keytab instance.
"
      end

      operation 10235010 "getUnboundInstance"
	class_operation public return_type class_ref 833922 // KeyTab
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default unbound {@code KeyTab} instance.
<p>
The result of this method is never null. This method only associates
the returned {@code KeyTab} object with the default keytab file and
does not read it.
@return the default keytab instance
@since 1.8
"
      end

      operation 10235138 "getInstance"
	class_operation public return_type class_ref 833922 // KeyTab
	nparams 1
	  param inout name "princ" type class_ref 834050 // KerberosPrincipal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code KeyTab} instance that is bound
to the specified service principal.
<p>
The result of this method is never null. This method only associates
the returned {@code KeyTab} object with the default keytab file and
does not read it.
@param princ the bound service principal, must not be null
@return the default keytab instance
@throws NullPointerException if {@code princ} is null
@since 1.8
"
      end

      operation 10235266 "takeSnapshot"
	package explicit_return_type "sun.security.krb5.internal.ktab.KeyTab"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Takes a snapshot of the keytab content. This method is called by
 JavaxSecurityAuthKerberosAccessImpl so no more private"
      end

      operation 10235394 "getKeys"
	public return_type class_ref 834306 // KerberosKey
	nparams 1
	  param inout name "principal" type class_ref 834050 // KerberosPrincipal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns fresh keys for the given Kerberos principal.
<p>
Implementation of this method should make sure the returned keys match
the latest content of the keytab file. The result is a newly created
copy that can be modified by the caller without modifying the keytab
object. The caller should {@link KerberosKey#destroy() destroy} the
result keys after they are used.
<p>
Please note that the keytab file can be created after the
{@code KeyTab} object is instantiated and its content may change over
time. Therefore, an application should call this method only when it
needs to use the keys. Any previous result from an earlier invocation
could potentially be expired.
<p>
If there is any error (say, I/O error or format error)
during the reading process of the KeyTab file, a saved result should be
returned. If there is no saved result (say, this is the first time this
method is called, or, all previous read attempts failed), an empty array
should be returned. This can make sure the result is not drastically
changed during the (probably slow) update of the keytab file.
<p>
Each time this method is called and the reading of the file succeeds
with no exception (say, I/O error or file format error),
the result should be saved for {@code principal}. The implementation can
also save keys for other principals having keys in the same keytab object
if convenient.
<p>
Any unsupported key read from the keytab is ignored and not included
in the result.
<p>
If this keytab is bound to a specific principal, calling this method on
another principal will return an empty array.

@param principal the Kerberos principal, must not be null.
@return the keys (never null, may be empty)
@throws NullPointerException if the {@code principal}
argument is null
@throws SecurityException if a security manager exists and the read
access to the keytab file is not permitted
"
      end

      operation 10235522 "getEncryptionKeys"
	package explicit_return_type "EncryptionKey"
	nparams 1
	  param inout name "principal" explicit_type "PrincipalName"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10235650 "exists"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the keytab file exists. Implementation of this method
should make sure that the result matches the latest status of the
keytab file.
<p>
The caller can use the result to determine if it should fallback to
another mechanism to read the keys.
@return true if the keytab file exists; false otherwise.
@throws SecurityException if a security manager exists and the read
access to the keytab file is not permitted
"
      end

      operation 10235778 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10235906 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this KeyTab.

@return a hashCode() for the {@code KeyTab}
"
      end

      operation 10236034 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this KeyTab for equality.
Returns true if the given object is also a
{@code KeyTab} and the two
{@code KeyTab} instances are equivalent.

@param other the Object to compare to
@return true if the specified object is equal to this KeyTab
"
      end

      operation 10236162 "getPrincipal"
	public return_type class_ref 834050 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service principal this {@code KeyTab} object
is bound to. Returns {@code null} if it's not bound.
<p>
Please note the deprecated constructors create a KeyTab object bound for
some unknown principal. In this case, this method also returns null.
User can call {@link #isBound()} to verify this case.
@return the service principal
@since 1.8
"
      end

      operation 10236290 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if the keytab is bound to a principal
@return if the keytab is bound to a principal
@since 1.8
"
      end
    end

    class 834050 "KerberosPrincipal"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class encapsulates a Kerberos principal.

@author Mayank Upadhyay
@since 1.4
"
      classrelation 4017922 // <realization>
	relation 4017922 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4017922 // <realization>
	  b parent class_ref 510594 // Principal
      end

      classrelation 4018050 // <realization>
	relation 4018050 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4018050 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2350082 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7374788026156829911L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2350210 "KRB_NT_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value "   0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "name types

unknown name type.

"
      end

      attribute 2350338 "KRB_NT_PRINCIPAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "user principal name type.

"
      end

      attribute 2350466 "KRB_NT_SRV_INST"
	class_attribute const_attribute public explicit_type "int"
	init_value "  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "service and other unique instance (krbtgt) name type.

"
      end

      attribute 2350594 "KRB_NT_SRV_HST"
	class_attribute const_attribute public explicit_type "int"
	init_value "   3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "service with host name as instance (telnet, rcommands) name type.

"
      end

      attribute 2350722 "KRB_NT_SRV_XHST"
	class_attribute const_attribute public explicit_type "int"
	init_value "  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "service with host as remaining components name type.

"
      end

      attribute 2350850 "KRB_NT_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "unique ID name type.

"
      end

      classrelation 4018178 // fullName (<unidirectional association>)
	relation 4018178 --->
	  a role_name "fullName" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4018178 // fullName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4018306 // realm (<unidirectional association>)
	relation 4018306 --->
	  a role_name "realm" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4018306 // realm (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2350978 "nameType"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10227586 "KerberosPrincipal"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosPrincipal from the provided string input. The
name type for this  principal defaults to
{@link #KRB_NT_PRINCIPAL KRB_NT_PRINCIPAL}
This string is assumed to contain a name in the format
that is specified in Section 2.1.1. (Kerberos Principal Name Form) of
<a href=http://www.ietf.org/rfc/rfc1964.txt> RFC 1964 </a>
(for example, <i>duke@FOO.COM</i>, where <i>duke</i>
represents a principal, and <i>FOO.COM</i> represents a realm).

<p>If the input name does not contain a realm, the default realm
is used. The default realm can be specified either in a Kerberos
configuration file or via the java.security.krb5.realm
system property. For more information,
<a href=\"../../../../../technotes/guides/security/jgss/tutorials/index.html\">
Kerberos Requirements </a>

@param name the principal name
@throws IllegalArgumentException if name is improperly
formatted, if name is null, or if name does not contain
the realm to use and the default realm is not specified
in either a Kerberos configuration file or via the
java.security.krb5.realm system property.
"
      end

      operation 10227714 "KerberosPrincipal"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "nameType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosPrincipal from the provided string and
name type input.  The string is assumed to contain a name in the
format that is specified in Section 2.1 (Mandatory Name Forms) of
<a href=http://www.ietf.org/rfc/rfc1964.txt>RFC 1964</a>.
Valid name types are specified in Section 6.2 (Principal Names) of
<a href=http://www.ietf.org/rfc/rfc4120.txt>RFC 4120</a>.
The input name must be consistent with the provided name type.
(for example, <i>duke@FOO.COM</i>, is a valid input string for the
name type, KRB_NT_PRINCIPAL where <i>duke</i>
represents a principal, and <i>FOO.COM</i> represents a realm).

<p> If the input name does not contain a realm, the default realm
is used. The default realm can be specified either in a Kerberos
configuration file or via the java.security.krb5.realm
system property. For more information, see
<a href=\"../../../../../technotes/guides/security/jgss/tutorials/index.html\">
Kerberos Requirements</a>.

@param name the principal name
@param nameType the name type of the principal
@throws IllegalArgumentException if name is improperly
formatted, if name is null, if the nameType is not supported,
or if name does not contain the realm to use and the default
realm is not specified in either a Kerberos configuration
file or via the java.security.krb5.realm system property.
"
      end

      operation 10227842 "getRealm"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the realm component of this Kerberos principal.

@return the realm component of this Kerberos principal.
"
      end

      operation 10227970 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this principal. The hash code is defined to
be the result of the following  calculation:
<pre>{@code
 hashCode = getName().hashCode();
}</pre>

@return a hashCode() for the {@code KerberosPrincipal}
"
      end

      operation 10228098 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this Principal for equality.
Returns true if the given object is also a
{@code KerberosPrincipal} and the two
{@code KerberosPrincipal} instances are equivalent.
More formally two {@code KerberosPrincipal} instances are equal
if the values returned by {@code getName()} are equal.

@param other the Object to compare to
@return true if the Object passed in represents the same principal
as this one, false otherwise.
"
      end

      operation 10228226 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the KerberosPrincipal object to a stream

@serialData this {@code KerberosPrincipal} is serialized
         by writing out the PrincipalName and the
         realm in their DER-encoded form as specified in Section 5.2.2 of
         <a href=http://www.ietf.org/rfc/rfc4120.txt> RFC4120</a>.
"
      end

      operation 10228354 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)
"
      end

      operation 10228482 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The returned string corresponds to the single-string
representation of a Kerberos Principal name as specified in
Section 2.1 of <a href=http://www.ietf.org/rfc/rfc1964.txt>RFC 1964</a>.

@return the principal name.
"
      end

      operation 10228610 "getNameType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name type of the KerberosPrincipal. Valid name types
are specified in Section 6.2 of
<a href=http://www.ietf.org/rfc/rfc4120.txt> RFC4120</a>.

@return the name type.
"
      end

      operation 10228738 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inherits javadocs from Object"
      end
    end

    class 834178 "KerberosTicket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class encapsulates a Kerberos ticket and associated
information as viewed from the client's point of view. It captures all
information that the Key Distribution Center (KDC) sends to the client
in the reply message KDC-REP defined in the Kerberos Protocol
Specification (<a href=http://www.ietf.org/rfc/rfc4120.txt>RFC 4120</a>).
<p>
All Kerberos JAAS login modules that authenticate a user to a KDC should
use this class. Where available, the login module might even read this
information from a ticket cache in the operating system instead of
directly communicating with the KDC. During the commit phase of the JAAS
authentication process, the JAAS login module should instantiate this
class and store the instance in the private credential set of a
{@link javax.security.auth.Subject Subject}.<p>

It might be necessary for the application to be granted a
{@link javax.security.auth.PrivateCredentialPermission
PrivateCredentialPermission} if it needs to access a KerberosTicket
instance from a Subject. This permission is not needed when the
application depends on the default JGSS Kerberos mechanism to access the
KerberosTicket. In that case, however, the application will need an
appropriate
{@link javax.security.auth.kerberos.ServicePermission ServicePermission}.
<p>
Note that this class is applicable to both ticket granting tickets and
other regular service tickets. A ticket granting ticket is just a
special case of a more generalized service ticket.

@see javax.security.auth.Subject
@see javax.security.auth.PrivateCredentialPermission
@see javax.security.auth.login.LoginContext
@see org.ietf.jgss.GSSCredential
@see org.ietf.jgss.GSSManager

@author Mayank Upadhyay
@since 1.4
"
      classrelation 4018434 // <realization>
	relation 4018434 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4018434 // <realization>
	  b parent class_ref 1019266 // Destroyable
      end

      classrelation 4018562 // <realization>
	relation 4018562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4018562 // <realization>
	  b parent class_ref 1242626 // Refreshable
      end

      classrelation 4018690 // <realization>
	relation 4018690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4018690 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2351106 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7395334370157380539L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2351234 "FORWARDABLE_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XXX Make these flag indices public
"
      end

      attribute 2351362 "FORWARDED_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2351490 "PROXIABLE_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2351618 "PROXY_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2351746 "POSTDATED_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2351874 "RENEWABLE_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2352002 "INITIAL_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2352130 "NUM_FLAGS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2352258 "asn1Encoding"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "
ASN.1 DER Encoding of the Ticket as defined in the
Kerberos Protocol Specification RFC4120.

@serial

"
      end

      classrelation 4018818 // sessionKey (<unidirectional association>)
	relation 4018818 --->
	  a role_name "sessionKey" private
	    comment "
{@code KeyImpl} is serialized by writing out the ASN1 Encoded bytes
of the encryption key. The ASN1 encoding is defined in RFC4120 and as
follows:
<pre>
EncryptionKey   ::= SEQUENCE {
         keytype    [0] Int32 -- actually encryption type --,
         keyvalue   [1] OCTET STRING
}
</pre>

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4018818 // sessionKey (<unidirectional association>)
	  b parent class_ref 1244290 // KeyImpl
      end

      attribute 2352386 "flags"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "
Ticket Flags as defined in the Kerberos Protocol Specification RFC4120.

@serial

"
      end

      classrelation 4018946 // authTime (<unidirectional association>)
	relation 4018946 --->
	  a role_name "authTime" private
	    comment "

Time of initial authentication

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4018946 // authTime (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      classrelation 4019074 // startTime (<unidirectional association>)
	relation 4019074 --->
	  a role_name "startTime" private
	    comment "

Time after which the ticket is valid.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4019074 // startTime (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      classrelation 4019202 // endTime (<unidirectional association>)
	relation 4019202 --->
	  a role_name "endTime" private
	    comment "

Time after which the ticket will not be honored. (its expiration time).

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4019202 // endTime (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      classrelation 4019330 // renewTill (<unidirectional association>)
	relation 4019330 --->
	  a role_name "renewTill" private
	    comment "

For renewable Tickets it indicates the maximum endtime that may be
included in a renewal. It can be thought of as the absolute expiration
time for the ticket, including all renewals. This field may be null
for tickets that are not renewable.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4019330 // renewTill (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      classrelation 4019458 // client (<unidirectional association>)
	relation 4019458 --->
	  a role_name "client" private
	    comment "

Client that owns the service ticket

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4019458 // client (<unidirectional association>)
	  b parent class_ref 834050 // KerberosPrincipal
      end

      classrelation 4019586 // server (<unidirectional association>)
	relation 4019586 --->
	  a role_name "server" private
	    comment "

The service for which the ticket was issued.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4019586 // server (<unidirectional association>)
	  b parent class_ref 834050 // KerberosPrincipal
      end

      classrelation 4019714 // clientAddresses (<unidirectional association>)
	relation 4019714 --->
	  a role_name "clientAddresses" multiplicity "[]" private
	    comment "

The addresses from where the ticket may be used by the client.
This field may be null when the ticket is usable from any address.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4019714 // clientAddresses (<unidirectional association>)
	  b parent class_ref 513154 // InetAddress
      end

      attribute 2352514 "destroyed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10228866 "KerberosTicket"
	public explicit_return_type ""
	nparams 11
	  param inout name "asn1Encoding" explicit_type "byte"
	multiplicity "[]"
	  param inout name "client" type class_ref 834050 // KerberosPrincipal
	  param inout name "server" type class_ref 834050 // KerberosPrincipal
	  param inout name "sessionKey" explicit_type "byte"
	multiplicity "[]"
	  param in name "keyType" explicit_type "int"
	  param inout name "flags" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "authTime" type class_ref 521474 // Date
	  param inout name "startTime" type class_ref 521474 // Date
	  param inout name "endTime" type class_ref 521474 // Date
	  param inout name "renewTill" type class_ref 521474 // Date
	  param inout name "clientAddresses" type class_ref 513154 // InetAddress
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10}[] ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosTicket using credentials information that a
client either receives from a KDC or reads from a cache.

@param asn1Encoding the ASN.1 encoding of the ticket as defined by
the Kerberos protocol specification.
@param client the client that owns this service
ticket
@param server the service that this ticket is for
@param sessionKey the raw bytes for the session key that must be
used to encrypt the authenticator that will be sent to the server
@param keyType the key type for the session key as defined by the
Kerberos protocol specification.
@param flags the ticket flags. Each element in this array indicates
the value for the corresponding bit in the ASN.1 BitString that
represents the ticket flags. If the number of elements in this array
is less than the number of flags used by the Kerberos protocol,
then the missing flags will be filled in with false.
@param authTime the time of initial authentication for the client
@param startTime the time after which the ticket will be valid. This
may be null in which case the value of authTime is treated as the
startTime.
@param endTime the time after which the ticket will no longer be
valid
@param renewTill an absolute expiration time for the ticket,
including all renewal that might be possible. This field may be null
for tickets that are not renewable.
@param clientAddresses the addresses from where the ticket may be
used by the client. This field may be null when the ticket is usable
from any address.
"
      end

      operation 10228994 "init"
	private explicit_return_type "void"
	nparams 11
	  param inout name "asn1Encoding" explicit_type "byte"
	multiplicity "[]"
	  param inout name "client" type class_ref 834050 // KerberosPrincipal
	  param inout name "server" type class_ref 834050 // KerberosPrincipal
	  param inout name "sessionKey" explicit_type "byte"
	multiplicity "[]"
	  param in name "keyType" explicit_type "int"
	  param inout name "flags" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "authTime" type class_ref 521474 // Date
	  param inout name "startTime" type class_ref 521474 // Date
	  param inout name "endTime" type class_ref 521474 // Date
	  param inout name "renewTill" type class_ref 521474 // Date
	  param inout name "clientAddresses" type class_ref 513154 // InetAddress
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10}[] ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10229122 "init"
	private explicit_return_type "void"
	nparams 10
	  param inout name "asn1Encoding" explicit_type "byte"
	multiplicity "[]"
	  param inout name "client" type class_ref 834050 // KerberosPrincipal
	  param inout name "server" type class_ref 834050 // KerberosPrincipal
	  param inout name "sessionKey" type class_ref 1244290 // KeyImpl
	  param inout name "flags" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "authTime" type class_ref 521474 // Date
	  param inout name "startTime" type class_ref 521474 // Date
	  param inout name "endTime" type class_ref 521474 // Date
	  param inout name "renewTill" type class_ref 521474 // Date
	  param inout name "clientAddresses" type class_ref 513154 // InetAddress
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9}[] ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10229250 "getClient"
	public return_type class_ref 834050 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the client principal associated with this ticket.

@return the client principal.
"
      end

      operation 10229378 "getServer"
	public return_type class_ref 834050 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service principal associated with this ticket.

@return the service principal.
"
      end

      operation 10229506 "getSessionKey"
	public explicit_return_type "SecretKey"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the session key associated with this ticket.

@return the session key.
"
      end

      operation 10229634 "getSessionKeyType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key type of the session key associated with this
ticket as defined by the Kerberos Protocol Specification.

@return the key type of the session key associated with this
ticket.

@see #getSessionKey()
"
      end

      operation 10229762 "isForwardable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket is forwardable.

@return true if this ticket is forwardable, false if not.
"
      end

      operation 10229890 "isForwarded"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket had been forwarded or was issued based on
authentication involving a forwarded ticket-granting ticket.

@return true if this ticket had been forwarded or was issued based on
authentication involving a forwarded ticket-granting ticket,
false otherwise.
"
      end

      operation 10230018 "isProxiable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket is proxiable.

@return true if this ticket is proxiable, false if not.
"
      end

      operation 10230146 "isProxy"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines is this ticket is a proxy-ticket.

@return true if this ticket is a proxy-ticket, false if not.
"
      end

      operation 10230274 "isPostdated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines is this ticket is post-dated.

@return true if this ticket is post-dated, false if not.
"
      end

      operation 10230402 "isRenewable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines is this ticket is renewable. If so, the {@link #refresh()
refresh} method can be called, assuming the validity period for
renewing is not already over.

@return true if this ticket is renewable, false if not.
"
      end

      operation 10230530 "isInitial"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket was issued using the Kerberos AS-Exchange
protocol, and not issued based on some ticket-granting ticket.

@return true if this ticket was issued using the Kerberos AS-Exchange
protocol, false if not.
"
      end

      operation 10230658 "getFlags"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flags associated with this ticket. Each element in the
returned array indicates the value for the corresponding bit in the
ASN.1 BitString that represents the ticket flags.

@return the flags associated with this ticket.
"
      end

      operation 10230786 "getAuthTime"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time that the client was authenticated.

@return the time that the client was authenticated
        or null if not set.
"
      end

      operation 10230914 "getStartTime"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start time for this ticket's validity period.

@return the start time for this ticket's validity period
        or null if not set.
"
      end

      operation 10231042 "getEndTime"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the expiration time for this ticket's validity period.

@return the expiration time for this ticket's validity period.
"
      end

      operation 10231170 "getRenewTill"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the latest expiration time for this ticket, including all
renewals. This will return a null value for non-renewable tickets.

@return the latest expiration time for this ticket.
"
      end

      operation 10231298 "getClientAddresses"
	public return_type class_ref 513154 // InetAddress
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of addresses from where the ticket can be used.

@return ths list of addresses or null, if the field was not
provided.
"
      end

      operation 10231426 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an ASN.1 encoding of the entire ticket.

@return an ASN.1 encoding of the entire ticket.
"
      end

      operation 10231554 "isCurrent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determines if this ticket is still current.  "
      end

      operation 10231682 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1242754 // RefreshFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extends the validity period of this ticket. The ticket will contain
a new session key if the refresh operation succeeds. The refresh
operation will fail if the ticket is not renewable or the latest
allowable renew time has passed. Any other error returned by the
KDC will also cause this method to fail.

Note: This method is not synchronized with the the accessor
methods of this object. Hence callers need to be aware of multiple
threads that might access this and try to renew it at the same
time.

@throws RefreshFailedException if the ticket is not renewable, or
the latest allowable renew time has passed, or the KDC returns some
error.

@see #isRenewable()
@see #getRenewTill()
"
      end

      operation 10231810 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1019394 // DestroyFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys the ticket and destroys any sensitive information stored in
it.
"
      end

      operation 10231938 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket has been destroyed.
"
      end

      operation 10232066 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10232194 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this KerberosTicket.

@return a hashCode() for the {@code KerberosTicket}
@since 1.6
"
      end

      operation 10232322 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this KerberosTicket for equality.
Returns true if the given object is also a
{@code KerberosTicket} and the two
{@code KerberosTicket} instances are equivalent.

@param other the Object to compare to
@return true if the specified object is equal to this KerberosTicket,
false otherwise. NOTE: Returns false if either of the KerberosTicket
objects has been destroyed.
@since 1.6
"
      end

      operation 10232450 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 834306 "KerberosKey"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class encapsulates a long term secret key for a Kerberos
principal.<p>

All Kerberos JAAS login modules that obtain a principal's password and
generate the secret key from it should use this class.
Sometimes, such as when authenticating a server in
the absence of user-to-user authentication, the login module will store
an instance of this class in the private credential set of a
{@link javax.security.auth.Subject Subject} during the commit phase of the
authentication process.<p>

A Kerberos service using a keytab to read secret keys should use
the {@link KeyTab} class, where latest keys can be read when needed.<p>

It might be necessary for the application to be granted a
{@link javax.security.auth.PrivateCredentialPermission
PrivateCredentialPermission} if it needs to access the KerberosKey
instance from a Subject. This permission is not needed when the
application depends on the default JGSS Kerberos mechanism to access the
KerberosKey. In that case, however, the application will need an
appropriate
{@link javax.security.auth.kerberos.ServicePermission ServicePermission}.

@author Mayank Upadhyay
@since 1.4
"
      classrelation 4017538 // <realization>
	relation 4017538 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4017538 // <realization>
	  b parent class_ref 1019266 // Destroyable
      end

      attribute 2349698 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4625402278148246993L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4017666 // principal (<unidirectional association>)
	relation 4017666 --->
	  a role_name "principal" private
	    comment "
The principal that this secret key belongs to.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4017666 // principal (<unidirectional association>)
	  b parent class_ref 834050 // KerberosPrincipal
      end

      attribute 2349826 "versionNum"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "the version number of this secret key

@serial

"
      end

      classrelation 4017794 // key (<unidirectional association>)
	relation 4017794 --->
	  a role_name "key" private
	    comment "
{@code KeyImpl} is serialized by writing out the ASN1 Encoded bytes
of the encryption key.
The ASN1 encoding is defined in RFC4120 and as  follows:
<pre>
EncryptionKey   ::= SEQUENCE {
          keytype   [0] Int32 -- actually encryption type --,
          keyvalue  [1] OCTET STRING
}
</pre>

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4017794 // key (<unidirectional association>)
	  b parent class_ref 1244290 // KeyImpl
      end

      attribute 2349954 "destroyed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10225922 "KerberosKey"
	public explicit_return_type ""
	nparams 4
	  param inout name "principal" type class_ref 834050 // KerberosPrincipal
	  param inout name "keyBytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "keyType" explicit_type "int"
	  param in name "versionNum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosKey from the given bytes when the key type and
key version number are known. This can be used when reading the secret
key information from a Kerberos \"keytab\".

@param principal the principal that this secret key belongs to
@param keyBytes the raw bytes for the secret key
@param keyType the key type for the secret key as defined by the
Kerberos protocol specification.
@param versionNum the version number of this secret key
"
      end

      operation 10226050 "KerberosKey"
	public explicit_return_type ""
	nparams 3
	  param inout name "principal" type class_ref 834050 // KerberosPrincipal
	  param inout name "password" explicit_type "char"
	multiplicity "[]"
	  param inout name "algorithm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosKey from a principal's password.

@param principal the principal that this password belongs to
@param password the password that should be used to compute the key
@param algorithm the name for the algorithm that this key will be
used for. This parameter may be null in which case the default
algorithm \"DES\" will be assumed.
@throws IllegalArgumentException if the name of the
algorithm passed is unsupported.
"
      end

      operation 10226178 "getPrincipal"
	public return_type class_ref 834050 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal that this key belongs to.

@return the principal this key belongs to.
"
      end

      operation 10226306 "getVersionNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key version number.

@return the key version number.
"
      end

      operation 10226434 "getKeyType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key type for this long-term key.

@return the key type.
"
      end

      operation 10226562 "getAlgorithm"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Methods from java.security.Key


Returns the standard algorithm name for this key. For
example, \"DES\" would indicate that this key is a DES key.
See Appendix A in the <a href=
\"../../../../../technotes/guides/security/crypto/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference
</a>
for information about standard algorithm names.

@return the name of the algorithm associated with this key.
"
      end

      operation 10226690 "getFormat"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format for this secret key.

@return the String \"RAW\"
"
      end

      operation 10226818 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key material of this secret key.

@return the key material
"
      end

      operation 10226946 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1019394 // DestroyFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys this key. A call to any of its other methods after this
will cause an  IllegalStateException to be thrown.

@throws DestroyFailedException if some error occurs while destorying
this key.
"
      end

      operation 10227074 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determines if this key has been destroyed."
      end

      operation 10227202 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10227330 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this KerberosKey.

@return a hashCode() for the {@code KerberosKey}
@since 1.6
"
      end

      operation 10227458 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this KerberosKey for equality.
Returns true if the given object is also a
{@code KerberosKey} and the two
{@code KerberosKey} instances are equivalent.

@param other the Object to compare to
@return true if the specified object is equal to this KerberosKey,
false otherwise. NOTE: Returns false if either of the KerberosKey
objects has been destroyed.
@since 1.6
"
      end
    end

    class 1243650 "DelegationPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to restrict the usage of the Kerberos
delegation model, ie: forwardable and proxiable tickets.
<p>
The target name of this {@code Permission} specifies a pair of
kerberos service principals. The first is the subordinate service principal
being entrusted to use the TGT. The second service principal designates
the target service the subordinate service principal is to
interact with on behalf of the initiating KerberosPrincipal. This
latter service principal is specified to restrict the use of a
proxiable ticket.
<p>
For example, to specify the \"host\" service use of a forwardable TGT the
target permission is specified as follows:

<pre>
 DelegationPermission(\"\\\"host/foo.example.com@EXAMPLE.COM\\\" \\\"krbtgt/EXAMPLE.COM@EXAMPLE.COM\\\"\");
</pre>
<p>
To give the \"backup\" service a proxiable nfs service ticket the target permission
might be specified:

<pre>
 DelegationPermission(\"\\\"backup/bar.example.com@EXAMPLE.COM\\\" \\\"nfs/home.EXAMPLE.COM@EXAMPLE.COM\\\"\");
</pre>

@since 1.4
"
      classrelation 4016258 // <generalisation>
	relation 4016258 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4016258 // <generalisation>
	  b parent class_ref 257410 // BasicPermission
      end

      classrelation 4016386 // <realization>
	relation 4016386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4016386 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2349442 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 883133252142523922L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4016514 // subordinate (<unidirectional association>)
	relation 4016514 --->
	  a role_name "subordinate" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4016514 // subordinate (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4016642 // service (<unidirectional association>)
	relation 4016642 --->
	  a role_name "service" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4016642 // service (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10223874 "DelegationPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "principals" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new {@code DelegationPermission}
with the specified subordinate and target principals.

<p>

@param principals the name of the subordinate and target principals

@throws NullPointerException if {@code principals} is {@code null}.
@throws IllegalArgumentException if {@code principals} is empty.
"
      end

      operation 10224002 "DelegationPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "principals" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new {@code DelegationPermission}
with the specified subordinate and target principals.
<p>

@param principals the name of the subordinate and target principals
<p>
@param actions should be null.

@throws NullPointerException if {@code principals} is {@code null}.
@throws IllegalArgumentException if {@code principals} is empty.
"
      end

      operation 10224130 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the DelegationPermission object.
"
      end

      operation 10224258 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this Kerberos delegation permission object \"implies\" the
specified permission.
<P>
If none of the above are true, {@code implies} returns false.
@param p the permission to check against.

@return true if the specified permission is implied by this object,
false if not.
"
      end

      operation 10224386 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two DelegationPermission objects for equality.
<P>
@param obj the object to test for equality with this object.

@return true if <i>obj</i> is a DelegationPermission, and
 has the same subordinate and service principal as this.
 DelegationPermission object.
"
      end

      operation 10224514 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object.
"
      end

      operation 10224642 "newPermissionCollection"
	public return_type class_ref 257794 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a PermissionCollection object for storing
DelegationPermission objects.
<br>
DelegationPermission objects must be stored in a manner that
allows them to be inserted into the collection in any order, but
that also enables the PermissionCollection implies method to
be implemented in an efficient (and consistent) manner.

@return a new PermissionCollection object suitable for storing
DelegationPermissions.
"
      end

      operation 10224770 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the DelegationPermission
to a stream. The actions are serialized, and the superclass
takes care of the name.
"
      end

      operation 10224898 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the
DelegationPermission from a stream.
"
      end
    end

    class 1243778 "KrbDelegationPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "public static void main(String args[]) throws Exception {
DelegationPermission this_ =
new DelegationPermission(args[0]);
DelegationPermission that_ =
new DelegationPermission(args[1]);
System.out.println(\"-----\\n\");
System.out.println(\"this.implies(that) = \" + this_.implies(that_));
System.out.println(\"-----\\n\");
System.out.println(\"this = \"+this_);
System.out.println(\"-----\\n\");
System.out.println(\"that = \"+that_);
System.out.println(\"-----\\n\");

KrbDelegationPermissionCollection nps =
new KrbDelegationPermissionCollection();
nps.add(this_);
nps.add(new DelegationPermission(\"\\\"host/foo.example.com@EXAMPLE.COM\\\" \\\"CN=Gary Ellison/OU=JSN/O=SUNW/L=Palo Alto/ST=CA/C=US\\\"\"));
try {
nps.add(new DelegationPermission(\"host/foo.example.com@EXAMPLE.COM \\\"CN=Gary Ellison/OU=JSN/O=SUNW/L=Palo Alto/ST=CA/C=US\\\"\"));
} catch (Exception e) {
System.err.println(e);
}

System.out.println(\"nps.implies(that) = \" + nps.implies(that_));
System.out.println(\"-----\\n\");

Enumeration e = nps.elements();

while (e.hasMoreElements()) {
DelegationPermission x =
(DelegationPermission) e.nextElement();
System.out.println(\"nps.e = \" + x);
}
}
"
      classrelation 4016770 // <generalisation>
	relation 4016770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4016770 // <generalisation>
	  b parent class_ref 257794 // PermissionCollection
      end

      classrelation 4016898 // <realization>
	relation 4016898 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4016898 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4017026 // perms (<unidirectional association>)
	relation 4017026 --->
	  a role_name "perms" private
	    comment " Not serialized; see serialization section at end of class.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Permission> ${name}${value};
"
	    classrelation_ref 4017026 // perms (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 10225026 "KrbDelegationPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10225154 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this collection of permissions implies the permissions
expressed in \"permission\".

@param permission the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in
the collection, false if not.
"
      end

      operation 10225282 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the DelegationPermissions. The key for
the hash is the name.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      DelegationPermission

@exception SecurityException - if this PermissionCollection object
                               has been marked readonly
"
      end

      operation 10225410 "elements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the DelegationPermission objects
in the container.

@return an enumeration of all the DelegationPermission objects.
"
      end

      attribute 2349570 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3383936936589966948L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4017154 // serialPersistentFields (<unidirectional association>)
	relation 4017154 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"permissions\", Vector.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
    private Vector permissions;

@serialField permissions java.util.Vector
    A list of DelegationPermission objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4017154 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 10225538 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData \"permissions\" field (a Vector containing the DelegationPermissions).


Writes the contents of the perms field out as a Vector for
serialization compatibility with earlier releases.
"
      end

      operation 10225666 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Reads in a Vector of DelegationPermissions and saves them in the perms field.
"
      end
    end

    class 1243906 "JavaxSecurityAuthKerberosAccessImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 10225794 "keyTabTakeSnapshot"
	public explicit_return_type "sun.security.krb5.internal.ktab.KeyTab"
	nparams 1
	  param inout name "ktab" type class_ref 833922 // KeyTab
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1244290 "KeyImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class encapsulates a Kerberos encryption key. It is not associated
with a principal and may represent an ephemeral session key.

@author Mayank Upadhyay
@since 1.4

@serial include
"
      classrelation 4019970 // <realization>
	relation 4019970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4019970 // <realization>
	  b parent class_ref 1019266 // Destroyable
      end

      classrelation 4020098 // <realization>
	relation 4020098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4020098 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2352642 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7889313790214321193L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2352770 "keyBytes"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2352898 "keyType"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2353026 "destroyed"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10232578 "KeyImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "keyBytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "keyType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyImpl from the given bytes.

@param keyBytes the raw bytes for the secret key
@param keyType the key type for the secret key as defined by the
Kerberos protocol specification.
"
      end

      operation 10232706 "KeyImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "principal" type class_ref 834050 // KerberosPrincipal
	  param inout name "password" explicit_type "char"
	multiplicity "[]"
	  param inout name "algorithm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyImpl from a password.

@param principal the principal from which to derive the salt
@param password the password that should be used to compute the
key.
@param algorithm the name for the algorithm that this key wil be
used for. This parameter may be null in which case \"DES\" will be
assumed.
"
      end

      operation 10232834 "getKeyType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keyType for this key as defined in the Kerberos Spec.
"
      end

      operation 10232962 "getAlgorithm"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Methods from java.security.Key
"
      end

      operation 10233090 "getAlgorithmName"
	private return_type class_ref 128130 // String
	nparams 1
	  param in name "eType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10233218 "getFormat"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10233346 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10233474 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1019394 // DestroyFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10233602 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10233730 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData this {@code KeyImpl} is serialized by
writing out the ASN1 Encoded bytes of the encryption key.
The ASN1 encoding is defined in RFC4120 and as  follows:
EncryptionKey   ::= SEQUENCE {
         keytype    [0] Int32 -- actually encryption type --,
         keyvalue   [1] OCTET STRING
}
"
      end

      operation 10233858 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10233986 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10234114 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10234242 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1244418 "ServicePermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to protect Kerberos services and the
credentials necessary to access those services. There is a one to
one mapping of a service principal and the credentials necessary
to access the service. Therefore granting access to a service
principal implicitly grants access to the credential necessary to
establish a security context with the service principal. This
applies regardless of whether the credentials are in a cache
or acquired via an exchange with the KDC. The credential can
be either a ticket granting ticket, a service ticket or a secret
key from a key table.
<p>
A ServicePermission contains a service principal name and
a list of actions which specify the context the credential can be
used within.
<p>
The service principal name is the canonical name of the
{@code KerberosPrincipal} supplying the service, that is
the KerberosPrincipal represents a Kerberos service
principal. This name is treated in a case sensitive manner.
An asterisk may appear by itself, to signify any service principal.
<p>
Granting this permission implies that the caller can use a cached
credential (TGT, service ticket or secret key) within the context
designated by the action. In the case of the TGT, granting this
permission also implies that the TGT can be obtained by an
Authentication Service exchange.
<p>
The possible actions are:

<pre>
   initiate -              allow the caller to use the credential to
                           initiate a security context with a service
                           principal.

   accept -                allow the caller to use the credential to
                           accept security context as a particular
                           principal.
</pre>

For example, to specify the permission to access to the TGT to
initiate a security context the permission is constructed as follows:

<pre>
    ServicePermission(\"krbtgt/EXAMPLE.COM@EXAMPLE.COM\", \"initiate\");
</pre>
<p>
To obtain a service ticket to initiate a context with the \"host\"
service the permission is constructed as follows:
<pre>
    ServicePermission(\"host/foo.example.com@EXAMPLE.COM\", \"initiate\");
</pre>
<p>
For a Kerberized server the action is \"accept\". For example, the permission
necessary to access and use the secret key of the  Kerberized \"host\"
service (telnet and the likes)  would be constructed as follows:

<pre>
    ServicePermission(\"host/foo.example.com@EXAMPLE.COM\", \"accept\");
</pre>

@since 1.4
"
      classrelation 4020482 // <generalisation>
	relation 4020482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4020482 // <generalisation>
	  b parent class_ref 257538 // Permission
      end

      classrelation 4020610 // <realization>
	relation 4020610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4020610 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2353282 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1227585031618624935L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2353410 "INITIATE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Initiate a security context to the specified service

"
      end

      attribute 2353538 "ACCEPT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Accept a security context

"
      end

      attribute 2353666 "ALL"
	class_attribute const_attribute private explicit_type "int"
	init_value " INITIATE|ACCEPT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "All actions

"
      end

      attribute 2353794 "NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "No actions.

"
      end

      attribute 2353922 "mask"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the actions mask
"
      end

      classrelation 4020738 // actions (<unidirectional association>)
	relation 4020738 --->
	  a role_name "actions" private
	    comment "
the actions string.

@serial

 Left null as long as possible, then"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4020738 // actions (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10236418 "ServicePermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "servicePrincipal" type class_ref 128130 // String
	  param inout name "action" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " created and re-used in the getAction function.

Create a new {@code ServicePermission}
with the specified {@code servicePrincipal}
and {@code action}.

@param servicePrincipal the name of the service principal.
An asterisk may appear by itself, to signify any service principal.
<p>
@param action the action string
"
      end

      operation 10236546 "init"
	private explicit_return_type "void"
	nparams 2
	  param inout name "servicePrincipal" type class_ref 128130 // String
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the ServicePermission object.
"
      end

      operation 10236674 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this Kerberos service permission object \"implies\" the
specified permission.
<P>
If none of the above are true, {@code implies} returns false.
@param p the permission to check against.

@return true if the specified permission is implied by this object,
false if not.
"
      end

      operation 10236802 "impliesIgnoreMask"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 1244418 // ServicePermission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10236930 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two ServicePermission objects for equality.
<P>
@param obj the object to test for equality with this object.

@return true if <i>obj</i> is a ServicePermission, and has the
 same service principal, and actions as this
ServicePermission object.
"
      end

      operation 10237058 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object.
"
      end

      operation 10237186 "getActions"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions in the
specified mask.
Always returns present actions in the following order:
initiate, accept.

@param mask a specific integer action mask to translate into a string
@return the canonical string representation of the actions
"
      end

      operation 10237314 "getActions"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical string representation of the actions.
Always returns present actions in the following order:
initiate, accept.
"
      end

      operation 10237442 "newPermissionCollection"
	public return_type class_ref 257794 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a PermissionCollection object for storing
ServicePermission objects.
<br>
ServicePermission objects must be stored in a manner that
allows them to be inserted into the collection in any order, but
that also enables the PermissionCollection implies method to
be implemented in an efficient (and consistent) manner.

@return a new PermissionCollection object suitable for storing
ServicePermissions.
"
      end

      operation 10237570 "getMask"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current action mask.

@return the actions mask.
"
      end

      operation 10237698 "getMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "action" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert an action string to an integer actions mask.

Note: if action is \"-\", action will be NONE, which means any
action implies it.

@param action the action string.
@return the action mask
"
      end

      operation 10237826 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the ServicePermission
to a stream. The actions are serialized, and the superclass
takes care of the name.
"
      end

      operation 10237954 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the
ServicePermission from a stream.
"
      end
    end

    class 1244546 "KrbServicePermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "public static void main(String args[]) throws Exception {
ServicePermission this_ =
new ServicePermission(args[0], \"accept\");
ServicePermission that_ =
new ServicePermission(args[1], \"accept,initiate\");
System.out.println(\"-----\\n\");
System.out.println(\"this.implies(that) = \" + this_.implies(that_));
System.out.println(\"-----\\n\");
System.out.println(\"this = \"+this_);
System.out.println(\"-----\\n\");
System.out.println(\"that = \"+that_);
System.out.println(\"-----\\n\");

KrbServicePermissionCollection nps =
new KrbServicePermissionCollection();
nps.add(this_);
nps.add(new ServicePermission(\"nfs/example.com@EXAMPLE.COM\",
\"accept\"));
nps.add(new ServicePermission(\"host/example.com@EXAMPLE.COM\",
\"initiate\"));
System.out.println(\"nps.implies(that) = \" + nps.implies(that_));
System.out.println(\"-----\\n\");

Enumeration e = nps.elements();

while (e.hasMoreElements()) {
ServicePermission x =
(ServicePermission) e.nextElement();
System.out.println(\"nps.e = \" + x);
}

}
"
      classrelation 4020866 // <generalisation>
	relation 4020866 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4020866 // <generalisation>
	  b parent class_ref 257794 // PermissionCollection
      end

      classrelation 4020994 // <realization>
	relation 4020994 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4020994 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4021122 // perms (<unidirectional association>)
	relation 4021122 --->
	  a role_name "perms" private
	    comment " Not serialized; see serialization section at end of class
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Permission> ${name}${value};
"
	    classrelation_ref 4021122 // perms (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 10238082 "KrbServicePermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10238210 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this collection of permissions implies the permissions
expressed in \"permission\".

@param permission the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in
the collection, false if not.
"
      end

      operation 10238338 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the ServicePermissions. The key for
the hash is the name.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      ServicePermission

@exception SecurityException - if this PermissionCollection object
                               has been marked readonly
"
      end

      operation 10238466 "elements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the ServicePermission objects
in the container.

@return an enumeration of all the ServicePermission objects.
"
      end

      attribute 2354050 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4118834211490102011L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4021250 // serialPersistentFields (<unidirectional association>)
	relation 4021250 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"permissions\", Vector.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
 private Vector permissions;

@serialField permissions java.util.Vector
    A list of ServicePermission objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4021250 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 10238594 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData \"permissions\" field (a Vector containing the ServicePermissions).


Writes the contents of the perms field out as a Vector for
serialization compatibility with earlier releases.
"
      end

      operation 10238722 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Reads in a Vector of ServicePermissions and saves them in the perms field.
"
      end
    end
  end

  deploymentview 174850 "kerberos"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 905730 "DelegationPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.Permission;
import java.security.BasicPermission;
import java.security.PermissionCollection;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1243650 // DelegationPermission
	class_ref 1243778 // KrbDelegationPermissionCollection
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 905858 "JavaxSecurityAuthKerberosAccessImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.security.krb5.JavaxSecurityAuthKerberosAccess;
import sun.security.krb5.EncryptionKey;
import sun.security.krb5.PrincipalName;
${definition}"
      associated_elems
	class_ref 1243906 // JavaxSecurityAuthKerberosAccessImpl
      end
      comment "Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 905986 "KerberosKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
import javax.crypto.SecretKey;
import javax.security.auth.Destroyable;
import javax.security.auth.DestroyFailedException;
${definition}"
      associated_elems
	class_ref 834306 // KerberosKey
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906114 "KerberosPrincipal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import sun.security.krb5.KrbException;
import sun.security.krb5.PrincipalName;
import sun.security.krb5.Realm;
import sun.security.util.*;
${definition}"
      associated_elems
	class_ref 834050 // KerberosPrincipal
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906242 "KerberosTicket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.Date;
import java.util.Arrays;
import java.net.InetAddress;
import javax.crypto.SecretKey;
import javax.security.auth.Refreshable;
import javax.security.auth.Destroyable;
import javax.security.auth.RefreshFailedException;
import javax.security.auth.DestroyFailedException;
import sun.misc.HexDumpEncoder;
import sun.security.krb5.EncryptionKey;
import sun.security.krb5.Asn1Exception;
import sun.security.util.*;
${definition}"
      associated_elems
	class_ref 834178 // KerberosTicket
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906370 "KeyImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.Arrays;
import javax.crypto.SecretKey;
import javax.security.auth.Destroyable;
import javax.security.auth.DestroyFailedException;
import sun.misc.HexDumpEncoder;
import sun.security.krb5.Asn1Exception;
import sun.security.krb5.PrincipalName;
import sun.security.krb5.EncryptionKey;
import sun.security.krb5.EncryptedData;
import sun.security.krb5.KrbException;
import sun.security.krb5.KrbCryptoException;
import sun.security.util.DerValue;
${definition}"
      associated_elems
	class_ref 1244290 // KeyImpl
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906498 "KeyTab"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.security.AccessControlException;
import java.util.Objects;
import sun.security.krb5.EncryptionKey;
import sun.security.krb5.KerberosSecrets;
import sun.security.krb5.PrincipalName;
import sun.security.krb5.RealmException;
${definition}"
      associated_elems
	class_ref 833922 // KeyTab
      end
      comment "Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 906626 "ServicePermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.Permission;
import java.security.PermissionCollection;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1244418 // ServicePermission
	class_ref 1244546 // KrbServicePermissionCollection
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
