class AccessibleHTML
!!!11714946.java!!!	AccessibleHTML(inout pane : JEditorPane)
        editor = pane;
        propChangeListener = new PropertyChangeHandler();
        setDocument(editor.getDocument());

        docListener = new DocumentHandler();
!!!11715074.java!!!	setDocument(inout document : Document) : void
        if (model != null) {
            model.removeDocumentListener(docListener);
        }
        if (editor != null) {
            editor.removePropertyChangeListener(propChangeListener);
        }
        this.model = document;
        if (model != null) {
            if (rootElementInfo != null) {
                rootElementInfo.invalidate(false);
            }
            buildInfo();
            model.addDocumentListener(docListener);
        }
        else {
            rootElementInfo = null;
        }
        if (editor != null) {
            editor.addPropertyChangeListener(propChangeListener);
        }
!!!11715202.java!!!	getDocument() : Document
        return model;
!!!11715330.java!!!	getTextComponent() : JEditorPane
        return editor;
!!!11715458.java!!!	getRootInfo() : AccessibleHTML::ElementInfo
        return rootElementInfo;
!!!11715586.java!!!	getRootView() : View
        return getTextComponent().getUI().getRootView(getTextComponent());
!!!11715714.java!!!	getRootEditorRect() : Rectangle
        Rectangle alloc = getTextComponent().getBounds();
        if ((alloc.width > 0) && (alloc.height > 0)) {
            alloc.x = alloc.y = 0;
            Insets insets = editor.getInsets();
            alloc.x += insets.left;
            alloc.y += insets.top;
            alloc.width -= insets.left + insets.right;
            alloc.height -= insets.top + insets.bottom;
            return alloc;
        }
        return null;
!!!11715842.java!!!	lock() : Object
        Document document = getDocument();

        if (document instanceof AbstractDocument) {
            ((AbstractDocument)document).readLock();
            return document;
        }
        return null;
!!!11715970.java!!!	unlock(inout key : Object) : void
        if (key != null) {
            ((AbstractDocument)key).readUnlock();
        }
!!!11716098.java!!!	buildInfo() : void
        Object lock = lock();

        try {
            Document doc = getDocument();
            Element root = doc.getDefaultRootElement();

            rootElementInfo = new ElementInfo(root);
            rootElementInfo.validate();
        } finally {
            unlock(lock);
        }
!!!11716226.java!!!	createElementInfo(inout e : Element, inout parent : AccessibleHTML::ElementInfo) : AccessibleHTML::ElementInfo
        AttributeSet attrs = e.getAttributes();

        if (attrs != null) {
            Object name = attrs.getAttribute(StyleConstants.NameAttribute);

            if (name == HTML.Tag.IMG) {
                return new IconElementInfo(e, parent);
            }
            else if (name == HTML.Tag.CONTENT || name == HTML.Tag.CAPTION) {
                return new TextElementInfo(e, parent);
            }
            else if (name == HTML.Tag.TABLE) {
                return new TableElementInfo(e, parent);
            }
        }
        return null;
!!!11716354.java!!!	getAccessibleContext() : AccessibleContext
        if (rootHTMLAccessibleContext == null) {
            rootHTMLAccessibleContext =
                new RootHTMLAccessibleContext(rootElementInfo);
        }
        return rootHTMLAccessibleContext;
