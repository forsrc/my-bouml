class LengthValue
!!!11758082.java!!!	LengthValue()
            this(false);
!!!11758210.java!!!	LengthValue(inout mayBeNegative : boolean)
            this.mayBeNegative = mayBeNegative;
!!!11758338.java!!!	getValue() : float
            return getValue(false);
!!!11758466.java!!!	getValue(inout isW3CLengthUnits : boolean) : float
            return getValue(0, isW3CLengthUnits);
!!!11758594.java!!!	getValue(in currentValue : float) : float
            return getValue(currentValue, false);
!!!11758722.java!!!	getValue(in currentValue : float, inout isW3CLengthUnits : boolean) : float
            if (percentage) {
                return span * currentValue;
            }
            return LengthUnit.getValue(span, units, isW3CLengthUnits);
!!!11758850.java!!!	isPercentage() : boolean
            return percentage;
!!!11758978.java!!!	parseCssValue(inout value : String) : Object
            LengthValue lv;
            try {
                // Assume pixels
                float absolute = Float.valueOf(value).floatValue();
                lv = new LengthValue();
                lv.span = absolute;
            } catch (NumberFormatException nfe) {
                // Not pixels, use LengthUnit
                LengthUnit lu = new LengthUnit(value,
                                               LengthUnit.UNINITALIZED_LENGTH,
                                               0);

                // PENDING: currently, we only support absolute values and
                // percentages.
                switch (lu.type) {
                case 0:
                    // Absolute
                    lv = new LengthValue();
                    lv.span =
                        (mayBeNegative) ? lu.value : Math.max(0, lu.value);
                    lv.units = lu.units;
                    break;
                case 1:
                    // %
                    lv = new LengthValue();
                    lv.span = Math.max(0, Math.min(1, lu.value));
                    lv.percentage = true;
                    break;
                default:
                    return null;
                }
            }
            lv.svalue = value;
            return lv;
!!!11759106.java!!!	parseHtmlValue(inout value : String) : Object
            if (value.equals(HTML.NULL_ATTRIBUTE_VALUE)) {
                value = "1";
            }
            return parseCssValue(value);
!!!11759234.java!!!	fromStyleConstants(inout key : StyleConstants, inout value : Object) : Object
            LengthValue v = new LengthValue();
            v.svalue = value.toString();
            v.span = ((Float)value).floatValue();
            return v;
!!!11759362.java!!!	toStyleConstants(inout key : StyleConstants, inout v : View) : Object
            return new Float(getValue(false));
