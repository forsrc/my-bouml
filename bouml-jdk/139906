format 222
"logging" // jdk1.8::com::sun::corba::se::spi::logging
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/corba/se/spi/logging/"
  java_package "com.sun.corba.se.spi.logging"
  classview 137218 "logging"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 215170 "LogWrapperBase"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 272514 // logger (<unidirectional association>)
	relation 272514 --->
	  a role_name "logger" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 272514 // logger (<unidirectional association>)
	  b parent class_ref 215298 // Logger
      end

      classrelation 272642 // loggerName (<unidirectional association>)
	relation 272642 --->
	  a role_name "loggerName" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 272642 // loggerName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 736130 "LogWrapperBase"
	protected explicit_return_type ""
	nparams 1
	  param inout name "logger" type class_ref 215298 // Logger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 736258 "doLog"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "level" type class_ref 215426 // Level
	  param inout name "key" type class_ref 128130 // String
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "wrapperClass" type class_ref 130818 // Class
	  param inout name "thr" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 736386 "inferCaller"
	private explicit_return_type "void"
	nparams 2
	  param inout name "wrapperClass" type class_ref 130818 // Class
	  param inout name "lrec" type class_ref 215554 // LogRecord
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 736514 "doLog"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "level" type class_ref 215426 // Level
	  param inout name "key" type class_ref 128130 // String
	  param inout name "wrapperClass" type class_ref 130818 // Class
	  param inout name "thr" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 215682 "LogWrapperFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 1615362 "create"
	public return_type class_ref 215170 // LogWrapperBase
	nparams 1
	  param inout name "logger" type class_ref 215298 // Logger
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 302978 "CORBALogDomains"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Defines constants for all of the logging domains used in the ORB.
Note that this is the suffix to the log domain.  The full domain is given by
<code>javax.enterprise.resource.corba.{ORBId}.{Log domain}</code>
where {ORBId} is the ORB ID of the ORB instance doing the logging.
<P>
The ORB implementation packages are mapped into these domains as follows:
<ul>
<li>activation: orbd.*
<li>corba: rpc.presentation (CORBA API, typecode/any), oa.invocation (DII)
<li>core: service context code in rpc.protocol (will eventually move to its own package)
<li>dynamicany: rpc.presentation
<li>encoding: rpc.encoding
<li>iiop: rmiiop.delegate (ShutdownUtilDelegate needs to move somewhere)
<li>interceptors: rpc.protocol
<li>io: rpc.encoding
<li>ior: oa.ior
<li>javax: rmiiiop.delegate
<li>logging: logging does not have a domain
<li>naming: naming
<li>oa: oa
<li>orb: orb.lifecycle
<li>orbutil: util
<li>protocol: rpc.protocol
<li>resolver: orb.resolver
<li>transport: rpc.transport
<li>txpoa: this will be removed in the future.
<li>util: util
</ul>
"
      operation 1615234 "CORBALogDomains"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 496770 // TOP_LEVEL_DOMAIN (<unidirectional association>)
	relation 496770 --->
	  a role_name "TOP_LEVEL_DOMAIN" init_value " \"javax.enterprise.resource.corba\"" class_relation const_relation public
	    comment " Top level log domain for CORBA
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 496770 // TOP_LEVEL_DOMAIN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 496898 // RPC (<unidirectional association>)
	relation 496898 --->
	  a role_name "RPC" init_value " \"rpc\" " class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 496898 // RPC (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497026 // RPC_PRESENTATION (<unidirectional association>)
	relation 497026 --->
	  a role_name "RPC_PRESENTATION" init_value " \"rpc.presentation\" " class_relation const_relation public
	    comment " Log domain for code directly implementing the CORBA API and
the typecode/any machinery.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497026 // RPC_PRESENTATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497154 // RPC_ENCODING (<unidirectional association>)
	relation 497154 --->
	  a role_name "RPC_ENCODING" init_value " \"rpc.encoding\" " class_relation const_relation public
	    comment " Log domain for any sort of wire encoding used in marshalling

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497154 // RPC_ENCODING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497282 // RPC_PROTOCOL (<unidirectional association>)
	relation 497282 --->
	  a role_name "RPC_PROTOCOL" init_value " \"rpc.protocol\" " class_relation const_relation public
	    comment " Log domain for the code used to handle any kind of invocation
protocol.  This includes client and server delegates, client and
server request dispatchers, service contexts, portable interceptors,
and the GIOP protocol (but not CDR representation of data).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497282 // RPC_PROTOCOL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497410 // RPC_TRANSPORT (<unidirectional association>)
	relation 497410 --->
	  a role_name "RPC_TRANSPORT" init_value " \"rpc.transport\" " class_relation const_relation public
	    comment " Log domain for low-level transport details, which are
independent of encoding and presentation details.  This
includes selectors, acceptors, connections, connection management,
and any other transport management functions.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497410 // RPC_TRANSPORT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497538 // NAMING (<unidirectional association>)
	relation 497538 --->
	  a role_name "NAMING" init_value " \"naming\" " class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497538 // NAMING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497666 // NAMING_LIFECYCLE (<unidirectional association>)
	relation 497666 --->
	  a role_name "NAMING_LIFECYCLE" init_value " \"naming.lifecycle\" " class_relation const_relation public
	    comment " Log domain for naming context creation and destruction.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497666 // NAMING_LIFECYCLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497794 // NAMING_READ (<unidirectional association>)
	relation 497794 --->
	  a role_name "NAMING_READ" init_value " \"naming.read\" " class_relation const_relation public
	    comment " Log domain for name service lookup.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497794 // NAMING_READ (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 497922 // NAMING_UPDATE (<unidirectional association>)
	relation 497922 --->
	  a role_name "NAMING_UPDATE" init_value " \"naming.update\" " class_relation const_relation public
	    comment " Log domain for name service bind, rebind, destroy, and other state
change operations.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497922 // NAMING_UPDATE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498050 // ORBD (<unidirectional association>)
	relation 498050 --->
	  a role_name "ORBD" init_value " \"orbd\" " class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498050 // ORBD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498178 // ORBD_LOCATOR (<unidirectional association>)
	relation 498178 --->
	  a role_name "ORBD_LOCATOR" init_value " \"orbd.locator\" " class_relation const_relation public
	    comment " Log domain for the ORBD locator function, which forwards
client requests to their current server incarnation.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498178 // ORBD_LOCATOR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498306 // ORBD_ACTIVATOR (<unidirectional association>)
	relation 498306 --->
	  a role_name "ORBD_ACTIVATOR" init_value " \"orbd.activator\" " class_relation const_relation public
	    comment " Log domain for the ORBD activator function, which starts
server instances on demand.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498306 // ORBD_ACTIVATOR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498434 // ORBD_REPOSITORY (<unidirectional association>)
	relation 498434 --->
	  a role_name "ORBD_REPOSITORY" init_value " \"orbd.repository\" " class_relation const_relation public
	    comment " Log domain for the Implementation Repository.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498434 // ORBD_REPOSITORY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498562 // ORBD_SERVERTOOL (<unidirectional association>)
	relation 498562 --->
	  a role_name "ORBD_SERVERTOOL" init_value " \"orbd.servertool\" " class_relation const_relation public
	    comment " Log domain for the servertool utilitiy used to update the
implementation repository.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498562 // ORBD_SERVERTOOL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498690 // ORB (<unidirectional association>)
	relation 498690 --->
	  a role_name "ORB" init_value " \"orb\" " class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498690 // ORB (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498818 // ORB_LIFECYCLE (<unidirectional association>)
	relation 498818 --->
	  a role_name "ORB_LIFECYCLE" init_value " \"orb.lifecycle\" " class_relation const_relation public
	    comment " Log domain for ORB initialization, configuration, startup,
and shutdown.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498818 // ORB_LIFECYCLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 498946 // ORB_RESOLVER (<unidirectional association>)
	relation 498946 --->
	  a role_name "ORB_RESOLVER" init_value " \"orb.resolver\" " class_relation const_relation public
	    comment " Log domain for ORB client side name resolution and supporting
functions such as INS.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 498946 // ORB_RESOLVER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499074 // OA (<unidirectional association>)
	relation 499074 --->
	  a role_name "OA" init_value " \"oa\" " class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499074 // OA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499202 // OA_LIFECYCLE (<unidirectional association>)
	relation 499202 --->
	  a role_name "OA_LIFECYCLE" init_value " \"oa.lifecycle\" " class_relation const_relation public
	    comment " Log domain for creation, destruction, and state change of
Object Adapters and related classes (e.g. POAManager).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499202 // OA_LIFECYCLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499330 // OA_IOR (<unidirectional association>)
	relation 499330 --->
	  a role_name "OA_IOR" init_value " \"oa.ior\" " class_relation const_relation public
	    comment " Log domain for all IOR related code.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499330 // OA_IOR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499458 // OA_INVOCATION (<unidirectional association>)
	relation 499458 --->
	  a role_name "OA_INVOCATION" init_value " \"oa.invocation\" " class_relation const_relation public
	    comment " Log domain for object adapter request dispatch.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499458 // OA_INVOCATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499586 // RMIIIOP (<unidirectional association>)
	relation 499586 --->
	  a role_name "RMIIIOP" init_value " \"rmiiiop\" " class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499586 // RMIIIOP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499714 // RMIIIOP_DELEGATE (<unidirectional association>)
	relation 499714 --->
	  a role_name "RMIIIOP_DELEGATE" init_value " \"rmiiiop.delegate\" " class_relation const_relation public
	    comment " Log domain for the RMI-IIOP implementation in the Stub, Util, and
PortableRemoteObject delegates.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499714 // RMIIIOP_DELEGATE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 499842 // UTIL (<unidirectional association>)
	relation 499842 --->
	  a role_name "UTIL" init_value " \"util\" " class_relation const_relation public
	    comment " Log domain for utility classes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499842 // UTIL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end
  end

  deploymentview 132738 "logging"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 173954 "LogWrapperBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.LogRecord;
${definition}"
      associated_elems
	class_ref 215170 // LogWrapperBase
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 248322 "CORBALogDomains"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 302978 // CORBALogDomains
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 248450 "LogWrapperFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.logging.Logger;
import com.sun.corba.se.spi.logging.LogWrapperBase;
${definition}"
      associated_elems
	class_ref 215682 // LogWrapperFactory
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
