format 222
"tools" // jdk1.8::com::sun::org::apache::xml::internal::resolver::tools
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/resolver/tools/"
  java_package "com.sun.org.apache.xml.internal.resolver.tools"
  classview 165890 "tools"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 750466 "CatalogResolver"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A SAX EntityResolver/JAXP URIResolver that uses catalogs.

<p>This class implements both a SAX EntityResolver and a JAXP URIResolver.
</p>

<p>This resolver understands OASIS TR9401 catalogs, XCatalogs, and the
current working draft of the OASIS Entity Resolution Technical
Committee specification.</p>

@see Catalog
@see org.xml.sax.EntityResolver
@see javax.xml.transform.URIResolver

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0
"
      classrelation 2406018 // <realization>
	relation 2406018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2406018 // <realization>
	  b parent class_ref 619138 // EntityResolver
      end

      classrelation 2406146 // <realization>
	relation 2406146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2406146 // <realization>
	  b parent class_ref 642946 // URIResolver
      end

      attribute 1177474 "namespaceAware"
	public explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Make the parser Namespace aware? 
"
      end

      attribute 1177602 "validating"
	public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Make the parser validating? 
"
      end

      classrelation 2406274 // catalog (<unidirectional association>)
	relation 2406274 --->
	  a role_name "catalog" init_value " null" private
	    comment " The underlying catalog 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2406274 // catalog (<unidirectional association>)
	  b parent class_ref 737154 // Catalog
      end

      classrelation 2406402 // catalogManager (<unidirectional association>)
	relation 2406402 --->
	  a role_name "catalogManager" init_value " CatalogManager.getStaticManager()" private
	    comment " The catalog manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2406402 // catalogManager (<unidirectional association>)
	  b parent class_ref 737026 // CatalogManager
      end

      operation 5281538 "CatalogResolver"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor "
      end

      operation 5281666 "CatalogResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "privateCatalog" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor "
      end

      operation 5281794 "CatalogResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor "
      end

      operation 5281922 "initializeCatalogs"
	private explicit_return_type "void"
	nparams 1
	  param inout name "privateCatalog" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize catalog "
      end

      operation 5282050 "getCatalog"
	public return_type class_ref 737154 // Catalog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the underlying catalog "
      end

      operation 5282178 "getResolvedEntity"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the guts of the <code>resolveEntity</code> method
for the SAX interface.

<p>Presented with an optional public identifier and a system
identifier, this function attempts to locate a mapping in the
catalogs.</p>

<p>If such a mapping is found, it is returned.  If no mapping is
found, null is returned.</p>

@param publicId  The public identifier for the entity in question.
This may be null.

@param systemId  The system identifier for the entity in question.
XML requires a system identifier on all external entities, so this
value is always specified.

@return The resolved identifier (a URI reference).
"
      end

      operation 5282306 "resolveEntity"
	public return_type class_ref 606594 // InputSource
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the <code>resolveEntity</code> method
for the SAX interface.

<p>Presented with an optional public identifier and a system
identifier, this function attempts to locate a mapping in the
catalogs.</p>

<p>If such a mapping is found, the resolver attempts to open
the mapped value as an InputSource and return it. Exceptions are
ignored and null is returned if the mapped value cannot be opened
as an input source.</p>

<p>If no mapping is found (or an error occurs attempting to open
the mapped value as an input source), null is returned and the system
will use the specified system identifier as if no entityResolver
was specified.</p>

@param publicId  The public identifier for the entity in question.
This may be null.

@param systemId  The system identifier for the entity in question.
XML requires a system identifier on all external entities, so this
value is always specified.

@return An InputSource for the mapped identifier, or null.
"
      end

      operation 5282434 "resolve"
	public return_type class_ref 627202 // Source
	nparams 2
	  param inout name "href" type class_ref 128130 // String
	  param inout name "base" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " JAXP URIResolver API "
      end

      operation 5282562 "setEntityResolver"
	private explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 750594 // SAXSource
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish an entityResolver for newly resolved URIs.</p>

<p>This is called from the URIResolver to set an EntityResolver
on the SAX parser to be used for new XML documents that are
encountered as a result of the document() function, xsl:import,
or xsl:include.  This is done because the XSLT processor calls
out to the SAXParserFactory itself to create a new SAXParser to
parse the new document.  The new parser does not automatically
inherit the EntityResolver of the original (although arguably
it should).  See below:</p>

<tt>\"If an application wants to set the ErrorHandler or
EntityResolver for an XMLReader used during a transformation,
it should use a URIResolver to return the SAXSource which
provides (with getXMLReader) a reference to the XMLReader\"</tt>

<p>...quoted from page 118 of the Java API for XML
Processing 1.1 specification</p>

"
      end

      operation 5282690 "makeAbsolute"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attempt to construct an absolute URI "
      end
    end

    class 750722 "ResolvingParser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A SAX Parser that performs catalog-based entity resolution.

<p>This class implements a SAX Parser that performs entity resolution
using the CatalogResolver. The actual, underlying parser is obtained
from a SAXParserFactory.</p>
</p>

@deprecated This interface has been replaced by the
            {@link com.sun.org.apache.xml.internal.resolver.tools.ResolvingXMLReader} for SAX2.
@see CatalogResolver
@see org.xml.sax.Parser

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0
"
      classrelation 2406530 // <realization>
	relation 2406530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2406530 // <realization>
	  b parent class_ref 721410 // Parser
      end

      classrelation 2406658 // <realization>
	relation 2406658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2406658 // <realization>
	  b parent class_ref 617986 // DTDHandler
      end

      classrelation 2406786 // <realization>
	relation 2406786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2406786 // <realization>
	  b parent class_ref 722178 // DocumentHandler
      end

      classrelation 2406914 // <realization>
	relation 2406914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2406914 // <realization>
	  b parent class_ref 619138 // EntityResolver
      end

      attribute 1177730 "namespaceAware"
	class_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Make the parser Namespace aware? 
"
      end

      attribute 1177858 "validating"
	class_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Make the parser validating? 
"
      end

      attribute 1177986 "suppressExplanation"
	class_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Suppress explanatory message?

@see #parse(InputSource)

"
      end

      classrelation 2407042 // saxParser (<unidirectional association>)
	relation 2407042 --->
	  a role_name "saxParser" init_value " null" private
	    comment " The underlying parser. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407042 // saxParser (<unidirectional association>)
	  b parent class_ref 621826 // SAXParser
      end

      classrelation 2407170 // parser (<unidirectional association>)
	relation 2407170 --->
	  a role_name "parser" init_value " null" private
	    comment " The underlying reader. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407170 // parser (<unidirectional association>)
	  b parent class_ref 721410 // Parser
      end

      classrelation 2407298 // documentHandler (<unidirectional association>)
	relation 2407298 --->
	  a role_name "documentHandler" init_value " null" private
	    comment " The underlying DocumentHandler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407298 // documentHandler (<unidirectional association>)
	  b parent class_ref 722178 // DocumentHandler
      end

      classrelation 2407426 // dtdHandler (<unidirectional association>)
	relation 2407426 --->
	  a role_name "dtdHandler" init_value " null" private
	    comment " The underlying DTDHandler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407426 // dtdHandler (<unidirectional association>)
	  b parent class_ref 617986 // DTDHandler
      end

      classrelation 2407554 // catalogManager (<unidirectional association>)
	relation 2407554 --->
	  a role_name "catalogManager" init_value " CatalogManager.getStaticManager()" private
	    comment " The manager for the underlying resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407554 // catalogManager (<unidirectional association>)
	  b parent class_ref 737026 // CatalogManager
      end

      classrelation 2407682 // catalogResolver (<unidirectional association>)
	relation 2407682 --->
	  a role_name "catalogResolver" init_value " null" private
	    comment " The underlying catalog resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407682 // catalogResolver (<unidirectional association>)
	  b parent class_ref 750466 // CatalogResolver
      end

      classrelation 2407810 // piCatalogResolver (<unidirectional association>)
	relation 2407810 --->
	  a role_name "piCatalogResolver" init_value " null" private
	    comment " A separate resolver for oasis-xml-pi catalogs. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407810 // piCatalogResolver (<unidirectional association>)
	  b parent class_ref 750466 // CatalogResolver
      end

      attribute 1178114 "allowXMLCatalogPI"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Are we in the prolog? Is an oasis-xml-catalog PI valid now? 
"
      end

      attribute 1178242 "oasisXMLCatalogPI"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Has an oasis-xml-catalog PI been seen? 
"
      end

      classrelation 2407938 // baseURL (<unidirectional association>)
	relation 2407938 --->
	  a role_name "baseURL" init_value " null" private
	    comment " The base URI of the input document, if known. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2407938 // baseURL (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      operation 5282818 "ResolvingParser"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor. "
      end

      operation 5282946 "ResolvingParser"
	public explicit_return_type ""
	nparams 1
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor. "
      end

      operation 5283074 "initParser"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize the parser. "
      end

      operation 5283202 "getCatalog"
	public return_type class_ref 737154 // Catalog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the Catalog being used. "
      end

      operation 5283330 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 606594 // InputSource
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SAX Parser API.

<p>Note that the JAXP 1.1ea2 parser crashes with an InternalError if
it encounters a system identifier that appears to be a relative URI
that begins with a slash. For example, the declaration:</p>

<pre>
&lt;!DOCTYPE book SYSTEM \"/path/to/dtd/on/my/system/docbookx.dtd\">
</pre>

<p>would cause such an error. As a convenience, this method catches
that error and prints an explanation. (Unfortunately, it's not possible
to identify the particular system identifier that causes the problem.)
</p>

<p>The underlying error is forwarded after printing the explanatory
message. The message is only every printed once and if
<code>suppressExplanation</code> is set to <code>false</code> before
parsing, it will never be printed.</p>
"
      end

      operation 5283458 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX Parser API.

@see #parse(InputSource)
"
      end

      operation 5283586 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 722178 // DocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX Parser API. "
      end

      operation 5283714 "setDTDHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 617986 // DTDHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX Parser API. "
      end

      operation 5283842 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 619138 // EntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SAX Parser API.

<p>The purpose of this class is to implement an entity resolver.
Attempting to set a different one is pointless (and ignored).</p>
"
      end

      operation 5283970 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 618114 // ErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX Parser API. "
      end

      operation 5284098 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX Parser API. "
      end

      operation 5284226 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5284354 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5284482 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5284610 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5284738 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "pidata" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5284866 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5284994 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5285122 "startElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "atts" type class_ref 636930 // AttributeList
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DocumentHandler API. "
      end

      operation 5285250 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DTDHandler API. "
      end

      operation 5285378 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "notationName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DTDHandler API. "
      end

      operation 5285506 "resolveEntity"
	public return_type class_ref 606594 // InputSource
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the <code>resolveEntity</code> method
for the SAX interface, using an underlying CatalogResolver
to do the real work.
"
      end

      operation 5285634 "setupParse"
	private explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup for parsing. "
      end

      operation 5285762 "explain"
	private explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Provide one possible explanation for an InternalError. "
      end
    end

    class 750850 "ResolvingXMLFilter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A SAX XMLFilter that performs catalog-based entity resolution.

<p>This class implements a SAX XMLFilter that performs entity resolution
using the CatalogResolver. The actual, underlying parser is obtained
from a SAXParserFactory.</p>
</p>

@see CatalogResolver
@see org.xml.sax.XMLFilter

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0
"
      classrelation 2408066 // <generalisation>
	relation 2408066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2408066 // <generalisation>
	  b parent class_ref 646018 // XMLFilterImpl
      end

      attribute 1178370 "suppressExplanation"
	class_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Suppress explanatory message?

@see #parse(InputSource)

"
      end

      classrelation 2408194 // catalogManager (<unidirectional association>)
	relation 2408194 --->
	  a role_name "catalogManager" init_value " CatalogManager.getStaticManager()" package
	    comment " The manager for the underlying resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2408194 // catalogManager (<unidirectional association>)
	  b parent class_ref 737026 // CatalogManager
      end

      classrelation 2408322 // catalogResolver (<unidirectional association>)
	relation 2408322 --->
	  a role_name "catalogResolver" init_value " null" private
	    comment " The underlying catalog resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2408322 // catalogResolver (<unidirectional association>)
	  b parent class_ref 750466 // CatalogResolver
      end

      classrelation 2408450 // piCatalogResolver (<unidirectional association>)
	relation 2408450 --->
	  a role_name "piCatalogResolver" init_value " null" private
	    comment " A separate resolver for oasis-xml-pi catalogs. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2408450 // piCatalogResolver (<unidirectional association>)
	  b parent class_ref 750466 // CatalogResolver
      end

      attribute 1178498 "allowXMLCatalogPI"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Are we in the prolog? Is an oasis-xml-catalog PI valid now? 
"
      end

      attribute 1178626 "oasisXMLCatalogPI"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Has an oasis-xml-catalog PI been seen? 
"
      end

      classrelation 2408578 // baseURL (<unidirectional association>)
	relation 2408578 --->
	  a role_name "baseURL" init_value " null" private
	    comment " The base URI of the input document, if known. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2408578 // baseURL (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      operation 5285890 "ResolvingXMLFilter"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct an empty XML Filter with no parent. "
      end

      operation 5286018 "ResolvingXMLFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 606466 // XMLReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct an XML filter with the specified parent. "
      end

      operation 5286146 "ResolvingXMLFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct an XML filter with the specified parent. "
      end

      operation 5286274 "ResolvingXMLFilter"
	public explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 606466 // XMLReader
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct an XML filter with the specified parent. "
      end

      operation 5286402 "getCatalog"
	public return_type class_ref 737154 // Catalog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide accessto the underlying Catalog.
"
      end

      operation 5286530 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 606594 // InputSource
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SAX XMLReader API.

<p>Note that the JAXP 1.1ea2 parser crashes with an InternalError if
it encounters a system identifier that appears to be a relative URI
that begins with a slash. For example, the declaration:</p>

<pre>
&lt;!DOCTYPE book SYSTEM \"/path/to/dtd/on/my/system/docbookx.dtd\">
</pre>

<p>would cause such an error. As a convenience, this method catches
that error and prints an explanation. (Unfortunately, it's not possible
to identify the particular system identifier that causes the problem.)
</p>

<p>The underlying error is forwarded after printing the explanatory
message. The message is only every printed once and if
<code>suppressExplanation</code> is set to <code>false</code> before
parsing, it will never be printed.</p>
"
      end

      operation 5286658 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX XMLReader API.

@see #parse(InputSource)
"
      end

      operation 5286786 "resolveEntity"
	public return_type class_ref 606594 // InputSource
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the <code>resolveEntity</code> method
for the SAX interface, using an underlying CatalogResolver
to do the real work.
"
      end

      operation 5286914 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DTDHandler API.

<p>Captured here only to detect the end of the prolog so that
we can ignore subsequent oasis-xml-catalog PIs. Otherwise
the events are just passed through.</p>
"
      end

      operation 5287042 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "notationName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX DTDHandler API.

<p>Captured here only to detect the end of the prolog so that
we can ignore subsequent oasis-xml-catalog PIs. Otherwise
the events are just passed through.</p>
"
      end

      operation 5287170 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX ContentHandler API.

<p>Captured here only to detect the end of the prolog so that
we can ignore subsequent oasis-xml-catalog PIs. Otherwise
the events are just passed through.</p>
"
      end

      operation 5287298 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "pidata" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SAX ContentHandler API.

<p>Detect and use the oasis-xml-catalog PI if it occurs.</p>
"
      end

      operation 5287426 "setupBaseURI"
	private explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Save the base URI of the document being parsed. "
      end

      operation 5287554 "explain"
	private explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Provide one possible explanation for an InternalError. "
      end
    end

    class 750978 "ResolvingXMLReader"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A SAX XMLReader that performs catalog-based entity resolution.

<p>This class implements a SAX XMLReader that performs entity resolution
using the CatalogResolver. The actual, underlying parser is obtained
from a SAXParserFactory.</p>
</p>

@see CatalogResolver
@see org.xml.sax.XMLReader

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0
"
      classrelation 2408706 // <generalisation>
	relation 2408706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2408706 // <generalisation>
	  b parent class_ref 750850 // ResolvingXMLFilter
      end

      attribute 1178754 "namespaceAware"
	class_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Make the parser Namespace aware? 
"
      end

      attribute 1178882 "validating"
	class_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Make the parser validating? 
"
      end

      operation 5287682 "ResolvingXMLReader"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new reader from the JAXP factory.

<p>In order to do its job, a ResolvingXMLReader must in fact be
a filter. So the only difference between this code and the filter
code is that the constructor builds a new reader.</p>
"
      end

      operation 5287810 "ResolvingXMLReader"
	public explicit_return_type ""
	nparams 1
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new reader from the JAXP factory.

<p>In order to do its job, a ResolvingXMLReader must in fact be
a filter. So the only difference between this code and the filter
code is that the constructor builds a new reader.</p>
"
      end
    end
  end

  deploymentview 159490 "tools"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 529538 "CatalogResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.MalformedURLException;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.InputSource;
import org.xml.sax.EntityResolver;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.Source;
import javax.xml.transform.URIResolver;
import javax.xml.transform.TransformerException;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParserFactory;
import com.sun.org.apache.xml.internal.resolver.Catalog;
import com.sun.org.apache.xml.internal.resolver.CatalogManager;
import com.sun.org.apache.xml.internal.resolver.helpers.FileURL;
${definition}"
      associated_elems
	class_ref 750466 // CatalogResolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 CatalogResolver.java - A SAX EntityResolver/JAXP URI Resolver

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 529666 "ResolvingParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.MalformedURLException;
import java.util.Locale;
import org.xml.sax.Parser;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.ErrorHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.AttributeList;
import org.xml.sax.EntityResolver;
import org.xml.sax.SAXException;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.parsers.SAXParser;
import com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;
import com.sun.org.apache.xml.internal.resolver.Catalog;
import com.sun.org.apache.xml.internal.resolver.CatalogManager;
import com.sun.org.apache.xml.internal.resolver.helpers.FileURL;
${definition}"
      associated_elems
	class_ref 750722 // ResolvingParser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 ResolvingParser.java - An interface for reading catalog files

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 529794 "ResolvingXMLFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.Attributes;
import org.xml.sax.helpers.XMLFilterImpl;
import com.sun.org.apache.xml.internal.resolver.Catalog;
import com.sun.org.apache.xml.internal.resolver.CatalogManager;
import com.sun.org.apache.xml.internal.resolver.helpers.FileURL;
${definition}"
      associated_elems
	class_ref 750850 // ResolvingXMLFilter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 ResolvingXMLFilter.java - An XMLFilter that performs catalog resolution

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 529922 "ResolvingXMLReader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.*;
import javax.xml.parsers.*;
import com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;
import com.sun.org.apache.xml.internal.resolver.*;
${definition}"
      associated_elems
	class_ref 750978 // ResolvingXMLReader
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 ResolvingXMLReader.java - An XMLReader that performs catalog resolution

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
