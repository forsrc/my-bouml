format 222
"security" // jdk1.8::com::sun::org::apache::xml::internal::security
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/security/"
  java_package "com.sun.org.apache.xml.internal.security"
  classview 166018 "security"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 751106 "Init"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class does the configuration of the library. This includes creating
the mapping of Canonicalization and Transform algorithms. Initialization is
done by calling {@link Init#init} which should be done in any static block
of the files of this library. We ensure that this call is only executed once.
"
      classrelation 2408834 // CONF_NS (<unidirectional association>)
	relation 2408834 --->
	  a role_name "CONF_NS" init_value " \"http://www.xmlsecurity.org/NS/#configuration\"" class_relation const_relation public
	    comment " The namespace for CONF file *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2408834 // CONF_NS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2408962 // log (<unidirectional association>)
	relation 2408962 --->
	  a role_name "log" init_value "
        java.util.logging.Logger.getLogger(Init.class.getName())" class_relation private
	    comment " {@link org.apache.commons.logging} logging facility 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2408962 // log (<unidirectional association>)
	  b parent class_ref 215298 // Logger
      end

      attribute 1179010 "alreadyInitialized"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Field alreadyInitialized 
"
      end

      operation 5287938 "isInitialized"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method isInitialized
@return true if the library is already initialized.
"
      end

      operation 5288066 "init"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method init

"
      end

      operation 5288194 "dynamicInit"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dynamically initialise the library by registering the default algorithms/implementations
"
      end

      operation 5288322 "fileInit"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "is" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialise the library from a configuration file
"
      end
    end
  end

  deploymentview 159618 "security"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 530050 "Init"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.ArrayList;
import java.util.List;
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import com.sun.org.apache.xml.internal.security.algorithms.JCEMapper;
import com.sun.org.apache.xml.internal.security.algorithms.SignatureAlgorithm;
import com.sun.org.apache.xml.internal.security.c14n.Canonicalizer;
import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;
import com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolver;
import com.sun.org.apache.xml.internal.security.transforms.Transform;
import com.sun.org.apache.xml.internal.security.utils.ElementProxy;
import com.sun.org.apache.xml.internal.security.utils.I18n;
import com.sun.org.apache.xml.internal.security.utils.XMLUtils;
import com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolver;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 751106 // Init
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end
  end

  package_ref 172802 // algorithms

  package_ref 172930 // utils

  package_ref 173058 // exceptions

  package_ref 173186 // signature

  package_ref 173570 // c14n

  package_ref 173954 // encryption

  package_ref 174082 // keys

  package_ref 174210 // transforms
end
