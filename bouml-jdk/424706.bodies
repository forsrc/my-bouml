class BasicMenuBarUI
!!!2509314.java!!!	createUI(inout x : JComponent) : ComponentUI
        return new BasicMenuBarUI();
!!!2509442.java!!!	loadActionMap(inout map : LazyActionMap) : void
        map.put(new Actions(Actions.TAKE_FOCUS));
!!!2509570.java!!!	installUI(inout c : JComponent) : void
        menuBar = (JMenuBar) c;

        installDefaults();
        installListeners();
        installKeyboardActions();

!!!2509698.java!!!	installDefaults() : void
        if (menuBar.getLayout() == null ||
            menuBar.getLayout() instanceof UIResource) {
            menuBar.setLayout(new DefaultMenuLayout(menuBar,BoxLayout.LINE_AXIS));
        }

        LookAndFeel.installProperty(menuBar, "opaque", Boolean.TRUE);
        LookAndFeel.installBorder(menuBar,"MenuBar.border");
        LookAndFeel.installColorsAndFont(menuBar,
                                              "MenuBar.background",
                                              "MenuBar.foreground",
                                              "MenuBar.font");
!!!2509826.java!!!	installListeners() : void
        containerListener = createContainerListener();
        changeListener = createChangeListener();

        for (int i = 0; i < menuBar.getMenuCount(); i++) {
            JMenu menu = menuBar.getMenu(i);
            if (menu!=null)
                menu.getModel().addChangeListener(changeListener);
        }
        menuBar.addContainerListener(containerListener);
!!!2509954.java!!!	installKeyboardActions() : void
        InputMap inputMap = getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);

        SwingUtilities.replaceUIInputMap(menuBar,
                           JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);

        LazyActionMap.installLazyActionMap(menuBar, BasicMenuBarUI.class,
                                           "MenuBar.actionMap");
!!!2510082.java!!!	getInputMap(in condition : int) : InputMap
        if (condition == JComponent.WHEN_IN_FOCUSED_WINDOW) {
            Object[] bindings = (Object[])DefaultLookup.get
                                (menuBar, this, "MenuBar.windowBindings");
            if (bindings != null) {
                return LookAndFeel.makeComponentInputMap(menuBar, bindings);
            }
        }
        return null;
!!!2510210.java!!!	uninstallUI(inout c : JComponent) : void
        uninstallDefaults();
        uninstallListeners();
        uninstallKeyboardActions();

        menuBar = null;
!!!2510338.java!!!	uninstallDefaults() : void
        if (menuBar!=null) {
            LookAndFeel.uninstallBorder(menuBar);
        }
!!!2510466.java!!!	uninstallListeners() : void
        menuBar.removeContainerListener(containerListener);

        for (int i = 0; i < menuBar.getMenuCount(); i++) {
            JMenu menu = menuBar.getMenu(i);
            if (menu !=null)
                menu.getModel().removeChangeListener(changeListener);
        }

        containerListener = null;
        changeListener = null;
        handler = null;
!!!2510594.java!!!	uninstallKeyboardActions() : void
        SwingUtilities.replaceUIInputMap(menuBar, JComponent.
                                       WHEN_IN_FOCUSED_WINDOW, null);
        SwingUtilities.replaceUIActionMap(menuBar, null);
!!!2510722.java!!!	createContainerListener() : ContainerListener
        return getHandler();
!!!2510850.java!!!	createChangeListener() : ChangeListener
        return getHandler();
!!!2510978.java!!!	getHandler() : BasicMenuBarUI::Handler
        if (handler == null) {
            handler = new Handler();
        }
        return handler;
!!!2511106.java!!!	getMinimumSize(inout c : JComponent) : Dimension
        return null;
!!!2511234.java!!!	getMaximumSize(inout c : JComponent) : Dimension
        return null;
