class BackRef
!!!9467394.java!!!	BackRef(in groupCount : int)
            super();
            groupIndex = groupCount + groupCount;
!!!9467522.java!!!	match(inout matcher : Matcher, in i : int, inout seq : CharSequence) : boolean
            int j = matcher.groups[groupIndex];
            int k = matcher.groups[groupIndex+1];

            int groupSize = k - j;
            // If the referenced group didn't match, neither can this
            if (j < 0)
                return false;

            // If there isn't enough input left no match
            if (i + groupSize > matcher.to) {
                matcher.hitEnd = true;
                return false;
            }
            // Check each new char to make sure it matches what the group
            // referenced matched last time around
            for (int index=0; index<groupSize; index++)
                if (seq.charAt(i+index) != seq.charAt(j+index))
                    return false;

            return next.match(matcher, i+groupSize, seq);
!!!9467650.java!!!	study(inout info : Pattern::TreeInfo) : boolean
            info.maxValid = false;
            return next.study(info);
