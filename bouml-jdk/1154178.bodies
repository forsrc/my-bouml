class Node
!!!9544194.java!!!	getChildCount() : int
        return 0;
!!!9544322.java!!!	getChild(in i : int) : Node
        throw new IndexOutOfBoundsException();
!!!9544450.java!!!	truncate(in from : long, in to : long, inout generator : IntFunction) : Node
        if (from == 0 && to == count())
            return this;
        Spliterator<T> spliterator = spliterator();
        long size = to - from;
        Node.Builder<T> nodeBuilder = Nodes.builder(size, generator);
        nodeBuilder.begin(size);
        for (int i = 0; i < from && spliterator.tryAdvance(e -> { }); i++) { }
        for (int i = 0; (i < size) && spliterator.tryAdvance(nodeBuilder); i++) { }
        nodeBuilder.end();
        return nodeBuilder.build();
!!!9544834.java!!!	getShape() : StreamShape
        return StreamShape.REFERENCE;
