format 222
"sasl" // jdk1.8::javax::security::sasl
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/security/sasl/"
  java_package "javax.security.sasl"
  classview 178690 "sasl"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1246978 "AuthenticationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown by a SASL mechanism implementation
to indicate that the SASL
exchange has failed due to reasons related to authentication, such as
an invalid identity, passphrase, or key.
<p>
Note that the lack of an AuthenticationException does not mean that
the failure was not due to an authentication error.  A SASL mechanism
implementation might throw the more general SaslException instead of
AuthenticationException if it is unable to determine the nature
of the failure, or if does not want to disclose the nature of
the failure, for example, due to security reasons.

@since 1.5

@author Rosanna Lee
@author Rob Weltman
"
      classrelation 4028802 // <generalisation>
	relation 4028802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4028802 // <generalisation>
	  b parent class_ref 1247106 // SaslException
      end

      operation 10251778 "AuthenticationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AuthenticationException}.
The root exception and the detailed message are null.
"
      end

      operation 10251906 "AuthenticationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detail" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AuthenticationException}
with a detailed message.
The root exception is null.
@param detail A possibly null string containing details of the exception.

@see java.lang.Throwable#getMessage
"
      end

      operation 10252034 "AuthenticationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detail" type class_ref 128130 // String
	  param inout name "ex" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AuthenticationException} with a detailed message
and a root exception.

@param detail A possibly null string containing details of the exception.
@param ex A possibly null root exception that caused this exception.

@see java.lang.Throwable#getMessage
@see #getCause
"
      end

      attribute 2356994 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3579708765071815007L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Use serialVersionUID from JSR 28 RI for interoperability 
"
      end
    end

    class 1247106 "SaslException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an error that has occurred when using SASL.

@since 1.5

@author Rosanna Lee
@author Rob Weltman
"
      classrelation 4028546 // <generalisation>
	relation 4028546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4028546 // <generalisation>
	  b parent class_ref 146818 // IOException
      end

      classrelation 4028674 // _exception (<unidirectional association>)
	relation 4028674 --->
	  a role_name "_exception" private
	    comment "
The possibly null root cause exception.
@serial

 Required for serialization interoperability with JSR 28
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4028674 // _exception (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 10251010 "SaslException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SaslException}.
The root exception and the detailed message are null.
"
      end

      operation 10251138 "SaslException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detail" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SaslException} with a detailed message.
The root exception is null.
@param detail A possibly null string containing details of the exception.

@see java.lang.Throwable#getMessage
"
      end

      operation 10251266 "SaslException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detail" type class_ref 128130 // String
	  param inout name "ex" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SaslException} with a detailed message
and a root exception.
For example, a SaslException might result from a problem with
the callback handler, which might throw a NoSuchCallbackException if
it does not support the requested callback, or throw an IOException
if it had problems obtaining data for the callback. The
SaslException's root exception would be then be the exception thrown
by the callback handler.

@param detail A possibly null string containing details of the exception.
@param ex A possibly null root exception that caused this exception.

@see java.lang.Throwable#getMessage
@see #getCause
"
      end

      operation 10251394 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override Throwable.getCause() to ensure deserialized object from
JSR 28 would return same value for getCause() (i.e., _exception).
"
      end

      operation 10251522 "initCause"
	public return_type class_ref 129922 // Throwable
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override Throwable.initCause() to match getCause() by updating
_exception as well.
"
      end

      operation 10251650 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this exception.
The string representation contains
this exception's class name, its detailed message, and if
it has a root exception, the string representation of the root
exception. This string representation
is meant for debugging and not meant to be interpreted
programmatically.
@return The non-null string representation of this exception.
@see java.lang.Throwable#getMessage

 Override Throwable.toString() to conform to JSR 28"
      end

      attribute 2356866 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4579784287983423626L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Use serialVersionUID from JSR 28 RI for interoperability 
"
      end
    end

    class 1247234 "AuthorizeCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This callback is used by {@code SaslServer} to determine whether
one entity (identified by an authenticated authentication id)
can act on
behalf of another entity (identified by an authorization id).

@since 1.5

@author Rosanna Lee
@author Rob Weltman
"
      classrelation 4028930 // <realization>
	relation 4028930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4028930 // <realization>
	  b parent class_ref 508674 // Callback
      end

      classrelation 4029058 // <realization>
	relation 4029058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4029058 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4029186 // authenticationID (<unidirectional association>)
	relation 4029186 --->
	  a role_name "authenticationID" private
	    comment "
The (authenticated) authentication id to check.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4029186 // authenticationID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4029314 // authorizationID (<unidirectional association>)
	relation 4029314 --->
	  a role_name "authorizationID" private
	    comment "
The authorization id to check.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4029314 // authorizationID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4029442 // authorizedID (<unidirectional association>)
	relation 4029442 --->
	  a role_name "authorizedID" private
	    comment "
The id of the authorized entity. If null, the id of
the authorized entity is authorizationID.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4029442 // authorizedID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2357122 "authorized"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag indicating whether the authentication id is allowed to
act on behalf of the authorization id.
@serial

"
      end

      operation 10252162 "AuthorizeCallback"
	public explicit_return_type ""
	nparams 2
	  param inout name "authnID" type class_ref 128130 // String
	  param inout name "authzID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of {@code AuthorizeCallback}.

@param authnID   The (authenticated) authentication id.
@param authzID   The authorization id.
"
      end

      operation 10252290 "getAuthenticationID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the authentication id to check.
@return The authentication id to check.
"
      end

      operation 10252418 "getAuthorizationID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the authorization id to check.
@return The authentication id to check.
"
      end

      operation 10252546 "isAuthorized"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the authentication id is allowed to
act on behalf of the authorization id.

@return {@code true} if authorization is allowed; {@code false} otherwise
@see #setAuthorized(boolean)
@see #getAuthorizedID()
"
      end

      operation 10252674 "setAuthorized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ok" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the authorization is allowed.
@param ok {@code true} if authorization is allowed; {@code false} otherwise
@see #isAuthorized
@see #setAuthorizedID(java.lang.String)
"
      end

      operation 10252802 "getAuthorizedID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the id of the authorized user.
@return The id of the authorized user. {@code null} means the
authorization failed.
@see #setAuthorized(boolean)
@see #setAuthorizedID(java.lang.String)
"
      end

      operation 10252930 "setAuthorizedID"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the id of the authorized entity. Called by handler only when the id
is different from getAuthorizationID(). For example, the id
might need to be canonicalized for the environment in which it
will be used.
@param id The id of the authorized user.
@see #setAuthorized(boolean)
@see #getAuthorizedID
"
      end

      attribute 2357250 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2353344186490470805L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1247362 "RealmCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This callback is used by {@code SaslClient} and {@code SaslServer}
to retrieve realm information.

@since 1.5

@author Rosanna Lee
@author Rob Weltman
"
      classrelation 4029570 // <generalisation>
	relation 4029570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4029570 // <generalisation>
	  b parent class_ref 1243522 // TextInputCallback
      end

      operation 10253058 "RealmCallback"
	public explicit_return_type ""
	nparams 1
	  param inout name "prompt" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RealmCallback} with a prompt.

@param prompt The non-null prompt to use to request the realm information.
@throws IllegalArgumentException If {@code prompt} is null or
the empty string.
"
      end

      operation 10253186 "RealmCallback"
	public explicit_return_type ""
	nparams 2
	  param inout name "prompt" type class_ref 128130 // String
	  param inout name "defaultRealmInfo" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RealmCallback} with a prompt and default
realm information.

@param prompt The non-null prompt to use to request the realm information.
@param defaultRealmInfo The non-null default realm information to use.
@throws IllegalArgumentException If {@code prompt} is null or
the empty string,
or if {@code defaultRealm} is empty or null.
"
      end

      attribute 2357378 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4342673378785456908L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1247490 "RealmChoiceCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This callback is used by {@code SaslClient} and {@code SaslServer}
to obtain a realm given a list of realm choices.

@since 1.5

@author Rosanna Lee
@author Rob Weltman
"
      classrelation 4029698 // <generalisation>
	relation 4029698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4029698 // <generalisation>
	  b parent class_ref 1243266 // ChoiceCallback
      end

      operation 10253314 "RealmChoiceCallback"
	public explicit_return_type ""
	nparams 4
	  param inout name "prompt" type class_ref 128130 // String
	  param inout name "choices" type class_ref 128130 // String
	multiplicity "[]"
	  param in name "defaultChoice" explicit_type "int"
	  param inout name "multiple" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RealmChoiceCallback} with a prompt, a list of
choices and a default choice.

@param prompt the non-null prompt to use to request the realm.
@param choices the non-null list of realms to choose from.
@param defaultChoice the choice to be used as the default choice
when the list of choices is displayed. It is an index into
the {@code choices} array.
@param multiple true if multiple choices allowed; false otherwise
@throws IllegalArgumentException If {@code prompt} is null or the empty string,
if {@code choices} has a length of 0, if any element from
{@code choices} is null or empty, or if {@code defaultChoice}
does not fall within the array boundary of {@code choices}
"
      end

      attribute 2357506 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8588141348846281332L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1247618 "Sasl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A static class for creating SASL clients and servers.
<p>
This class defines the policy of how to locate, load, and instantiate
SASL clients and servers.
<p>
For example, an application or library gets a SASL client by doing
something like:
<blockquote><pre>
SaslClient sc = Sasl.createSaslClient(mechanisms,
    authorizationId, protocol, serverName, props, callbackHandler);
</pre></blockquote>
It can then proceed to use the instance to create an authentication connection.
<p>
Similarly, a server gets a SASL server by using code that looks as follows:
<blockquote><pre>
SaslServer ss = Sasl.createSaslServer(mechanism,
    protocol, serverName, props, callbackHandler);
</pre></blockquote>

@since 1.5

@author Rosanna Lee
@author Rob Weltman
"
      operation 10253442 "Sasl"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cannot create one of these"
      end

      classrelation 4029826 // QOP (<unidirectional association>)
	relation 4029826 --->
	  a role_name "QOP" init_value " \"javax.security.sasl.qop\"" class_relation const_relation public
	    comment "
The name of a property that specifies the quality-of-protection to use.
The property contains a comma-separated, ordered list
of quality-of-protection values that the
client or server is willing to support.  A qop value is one of
<ul>
<li>{@code \"auth\"} - authentication only</li>
<li>{@code \"auth-int\"} - authentication plus integrity protection</li>
<li>{@code \"auth-conf\"} - authentication plus integrity and confidentiality
protection</li>
</ul>

The order of the list specifies the preference order of the client or
server. If this property is absent, the default qop is {@code \"auth\"}.
The value of this constant is {@code \"javax.security.sasl.qop\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4029826 // QOP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4029954 // STRENGTH (<unidirectional association>)
	relation 4029954 --->
	  a role_name "STRENGTH" init_value " \"javax.security.sasl.strength\"" class_relation const_relation public
	    comment "
The name of a property that specifies the cipher strength to use.
The property contains a comma-separated, ordered list
of cipher strength values that
the client or server is willing to support. A strength value is one of
<ul>
<li>{@code \"low\"}</li>
<li>{@code \"medium\"}</li>
<li>{@code \"high\"}</li>
</ul>
The order of the list specifies the preference order of the client or
server.  An implementation should allow configuration of the meaning
of these values.  An application may use the Java Cryptography
Extension (JCE) with JCE-aware mechanisms to control the selection of
cipher suites that match the strength values.
<BR>
If this property is absent, the default strength is
{@code \"high,medium,low\"}.
The value of this constant is {@code \"javax.security.sasl.strength\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4029954 // STRENGTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030082 // SERVER_AUTH (<unidirectional association>)
	relation 4030082 --->
	  a role_name "SERVER_AUTH" init_value "
    \"javax.security.sasl.server.authentication\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether the
server must authenticate to the client. The property contains
{@code \"true\"} if the server must
authenticate the to client; {@code \"false\"} otherwise.
The default is {@code \"false\"}.
<br>The value of this constant is
{@code \"javax.security.sasl.server.authentication\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030082 // SERVER_AUTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030210 // BOUND_SERVER_NAME (<unidirectional association>)
	relation 4030210 --->
	  a role_name "BOUND_SERVER_NAME" init_value "
    \"javax.security.sasl.bound.server.name\"" class_relation const_relation public
	    comment "
The name of a property that specifies the bound server name for
an unbound server. A server is created as an unbound server by setting
the {@code serverName} argument in {@link #createSaslServer} as null.
The property contains the bound host name after the authentication
exchange has completed. It is only available on the server side.
<br>The value of this constant is
{@code \"javax.security.sasl.bound.server.name\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030210 // BOUND_SERVER_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030338 // MAX_BUFFER (<unidirectional association>)
	relation 4030338 --->
	  a role_name "MAX_BUFFER" init_value " \"javax.security.sasl.maxbuffer\"" class_relation const_relation public
	    comment "
The name of a property that specifies the maximum size of the receive
buffer in bytes of {@code SaslClient}/{@code SaslServer}.
The property contains the string representation of an integer.
<br>If this property is absent, the default size
is defined by the mechanism.
<br>The value of this constant is {@code \"javax.security.sasl.maxbuffer\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030338 // MAX_BUFFER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030466 // RAW_SEND_SIZE (<unidirectional association>)
	relation 4030466 --->
	  a role_name "RAW_SEND_SIZE" init_value " \"javax.security.sasl.rawsendsize\"" class_relation const_relation public
	    comment "
The name of a property that specifies the maximum size of the raw send
buffer in bytes of {@code SaslClient}/{@code SaslServer}.
The property contains the string representation of an integer.
The value of this property is negotiated between the client and server
during the authentication exchange.
<br>The value of this constant is {@code \"javax.security.sasl.rawsendsize\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030466 // RAW_SEND_SIZE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030594 // REUSE (<unidirectional association>)
	relation 4030594 --->
	  a role_name "REUSE" init_value " \"javax.security.sasl.reuse\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether to reuse previously
authenticated session information. The property contains \"true\" if the
mechanism implementation may attempt to reuse previously authenticated
session information; it contains \"false\" if the implementation must
not reuse previously authenticated session information.  A setting of
\"true\" serves only as a hint: it does not necessarily entail actual
reuse because reuse might not be possible due to a number of reasons,
including, but not limited to, lack of mechanism support for reuse,
expiration of reusable information, and the peer's refusal to support
reuse.

The property's default value is \"false\".  The value of this constant
is \"javax.security.sasl.reuse\".

Note that all other parameters and properties required to create a
SASL client/server instance must be provided regardless of whether
this property has been supplied. That is, you cannot supply any less
information in anticipation of reuse.

Mechanism implementations that support reuse might allow customization
of its implementation, for factors such as cache size, timeouts, and
criteria for reusability. Such customizations are
implementation-dependent.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030594 // REUSE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030722 // POLICY_NOPLAINTEXT (<unidirectional association>)
	relation 4030722 --->
	  a role_name "POLICY_NOPLAINTEXT" init_value "
    \"javax.security.sasl.policy.noplaintext\"" class_relation const_relation public
	    comment "
The name of a property that specifies
whether mechanisms susceptible to simple plain passive attacks (e.g.,
\"PLAIN\") are not permitted. The property
contains {@code \"true\"} if such mechanisms are not permitted;
{@code \"false\"} if such mechanisms are permitted.
The default is {@code \"false\"}.
<br>The value of this constant is
{@code \"javax.security.sasl.policy.noplaintext\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030722 // POLICY_NOPLAINTEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030850 // POLICY_NOACTIVE (<unidirectional association>)
	relation 4030850 --->
	  a role_name "POLICY_NOACTIVE" init_value "
    \"javax.security.sasl.policy.noactive\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether
mechanisms susceptible to active (non-dictionary) attacks
are not permitted.
The property contains {@code \"true\"}
if mechanisms susceptible to active attacks
are not permitted; {@code \"false\"} if such mechanisms are permitted.
The default is {@code \"false\"}.
<br>The value of this constant is
{@code \"javax.security.sasl.policy.noactive\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030850 // POLICY_NOACTIVE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4030978 // POLICY_NODICTIONARY (<unidirectional association>)
	relation 4030978 --->
	  a role_name "POLICY_NODICTIONARY" init_value "
    \"javax.security.sasl.policy.nodictionary\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether
mechanisms susceptible to passive dictionary attacks are not permitted.
The property contains {@code \"true\"}
if mechanisms susceptible to dictionary attacks are not permitted;
{@code \"false\"} if such mechanisms are permitted.
The default is {@code \"false\"}.
<br>
The value of this constant is
{@code \"javax.security.sasl.policy.nodictionary\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4030978 // POLICY_NODICTIONARY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4031106 // POLICY_NOANONYMOUS (<unidirectional association>)
	relation 4031106 --->
	  a role_name "POLICY_NOANONYMOUS" init_value "
    \"javax.security.sasl.policy.noanonymous\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether mechanisms that accept
anonymous login are not permitted. The property contains {@code \"true\"}
if mechanisms that accept anonymous login are not permitted;
{@code \"false\"}
if such mechanisms are permitted. The default is {@code \"false\"}.
<br>
The value of this constant is
{@code \"javax.security.sasl.policy.noanonymous\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4031106 // POLICY_NOANONYMOUS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4031234 // POLICY_FORWARD_SECRECY (<unidirectional association>)
	relation 4031234 --->
	  a role_name "POLICY_FORWARD_SECRECY" init_value "
    \"javax.security.sasl.policy.forward\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether mechanisms that implement
forward secrecy between sessions are required. Forward secrecy
means that breaking into one session will not automatically
provide information for breaking into future sessions.
The property
contains {@code \"true\"} if mechanisms that implement forward secrecy
between sessions are required; {@code \"false\"} if such mechanisms
are not required. The default is {@code \"false\"}.
<br>
The value of this constant is
{@code \"javax.security.sasl.policy.forward\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4031234 // POLICY_FORWARD_SECRECY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4031362 // POLICY_PASS_CREDENTIALS (<unidirectional association>)
	relation 4031362 --->
	  a role_name "POLICY_PASS_CREDENTIALS" init_value "
    \"javax.security.sasl.policy.credentials\"" class_relation const_relation public
	    comment "
The name of a property that specifies whether
mechanisms that pass client credentials are required. The property
contains {@code \"true\"} if mechanisms that pass
client credentials are required; {@code \"false\"}
if such mechanisms are not required. The default is {@code \"false\"}.
<br>
The value of this constant is
{@code \"javax.security.sasl.policy.credentials\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4031362 // POLICY_PASS_CREDENTIALS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4031490 // CREDENTIALS (<unidirectional association>)
	relation 4031490 --->
	  a role_name "CREDENTIALS" init_value " \"javax.security.sasl.credentials\"" class_relation const_relation public
	    comment "
The name of a property that specifies the credentials to use.
The property contains a mechanism-specific Java credential object.
Mechanism implementations may examine the value of this property
to determine whether it is a class that they support.
The property may be used to supply credentials to a mechanism that
supports delegated authentication.
<br>
The value of this constant is
{@code \"javax.security.sasl.credentials\"}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4031490 // CREDENTIALS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10253570 "createSaslClient"
	class_operation public return_type class_ref 1247746 // SaslClient
	nparams 6
	  param inout name "mechanisms" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "authorizationId" type class_ref 128130 // String
	  param inout name "protocol" type class_ref 128130 // String
	  param inout name "serverName" type class_ref 128130 // String
	  param inout name "props" type class_ref 130178 // Map
	  param inout name "cbh" type class_ref 507778 // CallbackHandler
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String,?> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code SaslClient} using the parameters supplied.

This method uses the
<a href=\"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html#Provider\">JCA Security Provider Framework</a>, described in the
\"Java Cryptography Architecture API Specification &amp; Reference\", for
locating and selecting a {@code SaslClient} implementation.

First, it
obtains an ordered list of {@code SaslClientFactory} instances from
the registered security providers for the \"SaslClientFactory\" service
and the specified SASL mechanism(s). It then invokes
{@code createSaslClient()} on each factory instance on the list
until one produces a non-null {@code SaslClient} instance. It returns
the non-null {@code SaslClient} instance, or null if the search fails
to produce a non-null {@code SaslClient} instance.
<p>
A security provider for SaslClientFactory registers with the
JCA Security Provider Framework keys of the form <br>
{@code SaslClientFactory.}<em>{@code mechanism_name}</em>
<br>
and values that are class names of implementations of
{@code javax.security.sasl.SaslClientFactory}.

For example, a provider that contains a factory class,
{@code com.wiz.sasl.digest.ClientFactory}, that supports the
\"DIGEST-MD5\" mechanism would register the following entry with the JCA:
{@code SaslClientFactory.DIGEST-MD5 com.wiz.sasl.digest.ClientFactory}
<p>
See the
\"Java Cryptography Architecture API Specification &amp; Reference\"
for information about how to install and configure security service
 providers.

@param mechanisms The non-null list of mechanism names to try. Each is the
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param authorizationId The possibly null protocol-dependent
identification to be used for authorization.
If null or empty, the server derives an authorization
ID from the client's authentication credentials.
When the SASL authentication completes successfully,
the specified entity is granted access.

@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").

@param serverName The non-null fully-qualified host name of the server
to authenticate to.

@param props The possibly null set of properties used to
select the SASL mechanism and to configure the authentication
exchange of the selected mechanism.
For example, if {@code props} contains the
{@code Sasl.POLICY_NOPLAINTEXT} property with the value
{@code \"true\"}, then the selected
SASL mechanism must not be susceptible to simple plain passive attacks.
In addition to the standard properties declared in this class,
other, possibly mechanism-specific, properties can be included.
Properties not relevant to the selected mechanism are ignored,
including any map entries with non-String keys.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a {@code NameCallback}.
The password is requested by using a {@code PasswordCallback}.
The realm is requested by using a {@code RealmChoiceCallback} if there is a list
of realms to choose from, and by using a {@code RealmCallback} if
the realm must be entered.

@return A possibly null {@code SaslClient} created using the parameters
supplied. If null, cannot find a {@code SaslClientFactory}
that will produce one.
@exception SaslException If cannot create a {@code SaslClient} because
of an error.
"
      end

      operation 10253698 "loadFactory"
	class_operation private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "p" type class_ref 509570 // Provider
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10253826 "createSaslServer"
	class_operation public return_type class_ref 1247874 // SaslServer
	nparams 5
	  param inout name "mechanism" type class_ref 128130 // String
	  param inout name "protocol" type class_ref 128130 // String
	  param inout name "serverName" type class_ref 128130 // String
	  param inout name "props" type class_ref 130178 // Map
	  param inout name "cbh" type class_ref 507778 // CallbackHandler
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String,?> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code SaslServer} for the specified mechanism.

This method uses the
<a href=\"{@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html#Provider\">JCA Security Provider Framework</a>,
described in the
\"Java Cryptography Architecture API Specification &amp; Reference\", for
locating and selecting a {@code SaslServer} implementation.

First, it
obtains an ordered list of {@code SaslServerFactory} instances from
the registered security providers for the \"SaslServerFactory\" service
and the specified mechanism. It then invokes
{@code createSaslServer()} on each factory instance on the list
until one produces a non-null {@code SaslServer} instance. It returns
the non-null {@code SaslServer} instance, or null if the search fails
to produce a non-null {@code SaslServer} instance.
<p>
A security provider for SaslServerFactory registers with the
JCA Security Provider Framework keys of the form <br>
{@code SaslServerFactory.}<em>{@code mechanism_name}</em>
<br>
and values that are class names of implementations of
{@code javax.security.sasl.SaslServerFactory}.

For example, a provider that contains a factory class,
{@code com.wiz.sasl.digest.ServerFactory}, that supports the
\"DIGEST-MD5\" mechanism would register the following entry with the JCA:
{@code SaslServerFactory.DIGEST-MD5  com.wiz.sasl.digest.ServerFactory}
<p>
See the
\"Java Cryptography Architecture API Specification &amp; Reference\"
for information about how to install and configure security
service providers.

@param mechanism The non-null mechanism name. It must be an
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").
@param serverName The fully qualified host name of the server, or null
if the server is not bound to any specific host name. If the mechanism
does not allow an unbound server, a {@code SaslException} will
be thrown.
@param props The possibly null set of properties used to
select the SASL mechanism and to configure the authentication
exchange of the selected mechanism.
For example, if {@code props} contains the
{@code Sasl.POLICY_NOPLAINTEXT} property with the value
{@code \"true\"}, then the selected
SASL mechanism must not be susceptible to simple plain passive attacks.
In addition to the standard properties declared in this class,
other, possibly mechanism-specific, properties can be included.
Properties not relevant to the selected mechanism are ignored,
including any map entries with non-String keys.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a {@code NameCallback}.
The password is requested by using a {@code PasswordCallback}.
The realm is requested by using a {@code RealmChoiceCallback} if there is a list
of realms to choose from, and by using a {@code RealmCallback} if
the realm must be entered.

@return A possibly null {@code SaslServer} created using the parameters
supplied. If null, cannot find a {@code SaslServerFactory}
that will produce one.
@exception SaslException If cannot create a {@code SaslServer} because
of an error.
"
      end

      operation 10253954 "getSaslClientFactories"
	class_operation public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SaslClientFactory> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of known factories for producing {@code SaslClient}.
This method uses the same algorithm for locating factories as
{@code createSaslClient()}.
@return A non-null enumeration of known factories for producing
{@code SaslClient}.
@see #createSaslClient
"
      end

      operation 10254082 "getSaslServerFactories"
	class_operation public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SaslServerFactory> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of known factories for producing {@code SaslServer}.
This method uses the same algorithm for locating factories as
{@code createSaslServer()}.
@return A non-null enumeration of known factories for producing
{@code SaslServer}.
@see #createSaslServer
"
      end

      operation 10254210 "getFactories"
	class_operation private return_type class_ref 192258 // Set
	nparams 1
	  param inout name "serviceName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1247746 "SaslClient"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Performs SASL authentication as a client.
<p>
A protocol library such as one for LDAP gets an instance of this
class in order to perform authentication defined by a specific SASL
mechanism. Invoking methods on the {@code SaslClient} instance
process challenges and create responses according to the SASL
mechanism implemented by the {@code SaslClient}.
As the authentication proceeds, the instance
encapsulates the state of a SASL client's authentication exchange.
<p>
Here's an example of how an LDAP library might use a {@code SaslClient}.
It first gets an instance of a {@code SaslClient}:
<blockquote><pre>{@code
SaslClient sc = Sasl.createSaslClient(mechanisms,
    authorizationId, protocol, serverName, props, callbackHandler);
}</pre></blockquote>
It can then proceed to use the client for authentication.
For example, an LDAP library might use the client as follows:
<blockquote><pre>{@code
// Get initial response and send to server
byte[] response = (sc.hasInitialResponse() ? sc.evaluateChallenge(new byte[0]) :
    null);
LdapResult res = ldap.sendBindRequest(dn, sc.getName(), response);
while (!sc.isComplete() &&
    (res.status == SASL_BIND_IN_PROGRESS || res.status == SUCCESS)) {
    response = sc.evaluateChallenge(res.getBytes());
    if (res.status == SUCCESS) {
        // we're done; don't expect to send another BIND
        if (response != null) {
            throw new SaslException(
                \"Protocol error: attempting to send response after completion\");
        }
        break;
    }
    res = ldap.sendBindRequest(dn, sc.getName(), response);
}
if (sc.isComplete() && res.status == SUCCESS) {
   String qop = (String) sc.getNegotiatedProperty(Sasl.QOP);
   if (qop != null
       && (qop.equalsIgnoreCase(\"auth-int\")
           || qop.equalsIgnoreCase(\"auth-conf\"))) {

     // Use SaslClient.wrap() and SaslClient.unwrap() for future
     // communication with server
     ldap.in = new SecureInputStream(sc, ldap.in);
     ldap.out = new SecureOutputStream(sc, ldap.out);
   }
}
}</pre></blockquote>

If the mechanism has an initial response, the library invokes
{@code evaluateChallenge()} with an empty
challenge and to get initial response.
Protocols such as IMAP4, which do not include an initial response with
their first authentication command to the server, initiates the
authentication without first calling {@code hasInitialResponse()}
or {@code evaluateChallenge()}.
When the server responds to the command, it sends an initial challenge.
For a SASL mechanism in which the client sends data first, the server should
have issued a challenge with no data. This will then result in a call
(on the client) to {@code evaluateChallenge()} with an empty challenge.

@since 1.5

@see Sasl
@see SaslClientFactory

@author Rosanna Lee
@author Rob Weltman
"
      operation 10254338 "getMechanismName"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IANA-registered mechanism name of this SASL client.
(e.g. \"CRAM-MD5\", \"GSSAPI\").
@return A non-null string representing the IANA-registered mechanism name.
"
      end

      operation 10254466 "hasInitialResponse"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this mechanism has an optional initial response.
If true, caller should call {@code evaluateChallenge()} with an
empty array to get the initial response.

@return true if this mechanism has an initial response.
"
      end

      operation 10254594 "evaluateChallenge"
	abstract public explicit_return_type "byte"
	nparams 1
	  param inout name "challenge" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the challenge data and generates a response.
If a challenge is received from the server during the authentication
process, this method is called to prepare an appropriate next
response to submit to the server.

@param challenge The non-null challenge sent from the server.
The challenge array may have zero length.

@return The possibly null response to send to the server.
It is null if the challenge accompanied a \"SUCCESS\" status and the challenge
only contains data for the client to update its state and no response
needs to be sent to the server. The response is a zero-length byte
array if the client is to send a response with no data.
@exception SaslException If an error occurred while processing
the challenge or generating a response.
"
      end

      operation 10254722 "isComplete"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the authentication exchange has completed.
This method may be called at any time, but typically, it
will not be called until the caller has received indication
from the server
(in a protocol-specific manner) that the exchange has completed.

@return true if the authentication exchange has completed; false otherwise.
"
      end

      operation 10254850 "unwrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param inout name "incoming" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unwraps a byte array received from the server.
This method can be called only after the authentication exchange has
completed (i.e., when {@code isComplete()} returns true) and only if
the authentication exchange has negotiated integrity and/or privacy
as the quality of protection; otherwise, an
{@code IllegalStateException} is thrown.
<p>
{@code incoming} is the contents of the SASL buffer as defined in RFC 2222
without the leading four octet field that represents the length.
{@code offset} and {@code len} specify the portion of {@code incoming}
to use.

@param incoming A non-null byte array containing the encoded bytes
               from the server.
@param offset The starting position at {@code incoming} of the bytes to use.
@param len The number of bytes from {@code incoming} to use.
@return A non-null byte array containing the decoded bytes.
@exception SaslException if {@code incoming} cannot be successfully
unwrapped.
@exception IllegalStateException if the authentication exchange has
not completed, or  if the negotiated quality of protection
has neither integrity nor privacy.
"
      end

      operation 10254978 "wrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param inout name "outgoing" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array to be sent to the server.
This method can be called only after the authentication exchange has
completed (i.e., when {@code isComplete()} returns true) and only if
the authentication exchange has negotiated integrity and/or privacy
as the quality of protection; otherwise, an
{@code IllegalStateException} is thrown.
<p>
The result of this method will make up the contents of the SASL buffer
as defined in RFC 2222 without the leading four octet field that
represents the length.
{@code offset} and {@code len} specify the portion of {@code outgoing}
to use.

@param outgoing A non-null byte array containing the bytes to encode.
@param offset The starting position at {@code outgoing} of the bytes to use.
@param len The number of bytes from {@code outgoing} to use.
@return A non-null byte array containing the encoded bytes.
@exception SaslException if {@code outgoing} cannot be successfully
wrapped.
@exception IllegalStateException if the authentication exchange has
not completed, or if the negotiated quality of protection
has neither integrity nor privacy.
"
      end

      operation 10255106 "getNegotiatedProperty"
	abstract public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the negotiated property.
This method can be called only after the authentication exchange has
completed (i.e., when {@code isComplete()} returns true); otherwise, an
{@code IllegalStateException} is thrown.

@param propName The non-null property name.
@return The value of the negotiated property. If null, the property was
not negotiated or is not applicable to this mechanism.
@exception IllegalStateException if this authentication exchange
has not completed
"
      end

      operation 10255234 "dispose"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of any system resources or security-sensitive information
the SaslClient might be using. Invoking this method invalidates
the SaslClient instance. This method is idempotent.
@throws SaslException If a problem was encountered while disposing
the resources.
"
      end
    end

    class 1247874 "SaslServer"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Performs SASL authentication as a server.
<p>
A server such an LDAP server gets an instance of this
class in order to perform authentication defined by a specific SASL
mechanism. Invoking methods on the {@code SaslServer} instance
generates challenges according to the SASL
mechanism implemented by the {@code SaslServer}.
As the authentication proceeds, the instance
encapsulates the state of a SASL server's authentication exchange.
<p>
Here's an example of how an LDAP server might use a {@code SaslServer}.
It first gets an instance of a {@code SaslServer} for the SASL mechanism
requested by the client:
<blockquote><pre>
SaslServer ss = Sasl.createSaslServer(mechanism,
    \"ldap\", myFQDN, props, callbackHandler);
</pre></blockquote>
It can then proceed to use the server for authentication.
For example, suppose the LDAP server received an LDAP BIND request
containing the name of the SASL mechanism and an (optional) initial
response. It then might use the server as follows:
<blockquote><pre>{@code
while (!ss.isComplete()) {
    try {
        byte[] challenge = ss.evaluateResponse(response);
        if (ss.isComplete()) {
            status = ldap.sendBindResponse(mechanism, challenge, SUCCESS);
        } else {
            status = ldap.sendBindResponse(mechanism, challenge,
SASL_BIND_IN_PROGRESS);
            response = ldap.readBindRequest();
        }
    } catch (SaslException e) {
         status = ldap.sendErrorResponse(e);
         break;
    }
}
if (ss.isComplete() && status == SUCCESS) {
   String qop = (String) sc.getNegotiatedProperty(Sasl.QOP);
   if (qop != null
       && (qop.equalsIgnoreCase(\"auth-int\")
           || qop.equalsIgnoreCase(\"auth-conf\"))) {

     // Use SaslServer.wrap() and SaslServer.unwrap() for future
     // communication with client
     ldap.in = new SecureInputStream(ss, ldap.in);
     ldap.out = new SecureOutputStream(ss, ldap.out);
   }
}
}</pre></blockquote>

@since 1.5

@see Sasl
@see SaslServerFactory

@author Rosanna Lee
@author Rob Weltman
"
      operation 10255618 "getMechanismName"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IANA-registered mechanism name of this SASL server.
(e.g. \"CRAM-MD5\", \"GSSAPI\").
@return A non-null string representing the IANA-registered mechanism name.
"
      end

      operation 10255746 "evaluateResponse"
	abstract public explicit_return_type "byte"
	nparams 1
	  param inout name "response" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the response data and generates a challenge.

If a response is received from the client during the authentication
process, this method is called to prepare an appropriate next
challenge to submit to the client. The challenge is null if the
authentication has succeeded and no more challenge data is to be sent
to the client. It is non-null if the authentication must be continued
by sending a challenge to the client, or if the authentication has
succeeded but challenge data needs to be processed by the client.
{@code isComplete()} should be called
after each call to {@code evaluateResponse()},to determine if any further
response is needed from the client.

@param response The non-null (but possibly empty) response sent
by the client.

@return The possibly null challenge to send to the client.
It is null if the authentication has succeeded and there is
no more challenge data to be sent to the client.
@exception SaslException If an error occurred while processing
the response or generating a challenge.
"
      end

      operation 10255874 "isComplete"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the authentication exchange has completed.
This method is typically called after each invocation of
{@code evaluateResponse()} to determine whether the
authentication has completed successfully or should be continued.
@return true if the authentication exchange has completed; false otherwise.
"
      end

      operation 10256002 "getAuthorizationID"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports the authorization ID in effect for the client of this
session.
This method can only be called if isComplete() returns true.
@return The authorization ID of the client.
@exception IllegalStateException if this authentication session has not completed
"
      end

      operation 10256130 "unwrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param inout name "incoming" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unwraps a byte array received from the client.
This method can be called only after the authentication exchange has
completed (i.e., when {@code isComplete()} returns true) and only if
the authentication exchange has negotiated integrity and/or privacy
as the quality of protection; otherwise,
an {@code IllegalStateException} is thrown.
<p>
{@code incoming} is the contents of the SASL buffer as defined in RFC 2222
without the leading four octet field that represents the length.
{@code offset} and {@code len} specify the portion of {@code incoming}
to use.

@param incoming A non-null byte array containing the encoded bytes
               from the client.
@param offset The starting position at {@code incoming} of the bytes to use.
@param len The number of bytes from {@code incoming} to use.
@return A non-null byte array containing the decoded bytes.
@exception SaslException if {@code incoming} cannot be successfully
unwrapped.
@exception IllegalStateException if the authentication exchange has
not completed, or if the negotiated quality of protection
has neither integrity nor privacy
"
      end

      operation 10256258 "wrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param inout name "outgoing" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array to be sent to the client.
This method can be called only after the authentication exchange has
completed (i.e., when {@code isComplete()} returns true) and only if
the authentication exchange has negotiated integrity and/or privacy
as the quality of protection; otherwise, a {@code SaslException} is thrown.
<p>
The result of this method
will make up the contents of the SASL buffer as defined in RFC 2222
without the leading four octet field that represents the length.
{@code offset} and {@code len} specify the portion of {@code outgoing}
to use.

@param outgoing A non-null byte array containing the bytes to encode.
@param offset The starting position at {@code outgoing} of the bytes to use.
@param len The number of bytes from {@code outgoing} to use.
@return A non-null byte array containing the encoded bytes.
@exception SaslException if {@code outgoing} cannot be successfully
wrapped.
@exception IllegalStateException if the authentication exchange has
not completed, or if the negotiated quality of protection has
neither integrity nor privacy.
"
      end

      operation 10256386 "getNegotiatedProperty"
	abstract public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the negotiated property.
This method can be called only after the authentication exchange has
completed (i.e., when {@code isComplete()} returns true); otherwise, an
{@code IllegalStateException} is thrown.

@param propName the property
@return The value of the negotiated property. If null, the property was
not negotiated or is not applicable to this mechanism.
@exception IllegalStateException if this authentication exchange has not completed
"
      end

      operation 10256514 "dispose"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of any system resources or security-sensitive information
the SaslServer might be using. Invoking this method invalidates
the SaslServer instance. This method is idempotent.
@throws SaslException If a problem was encountered while disposing
the resources.
"
      end
    end

    class 1248002 "SaslClientFactory"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for creating instances of {@code SaslClient}.
A class that implements this interface
must be thread-safe and handle multiple simultaneous
requests. It must also have a public constructor that accepts no
argument.
<p>
This interface is not normally accessed directly by a client, which will use the
{@code Sasl} static methods
instead. However, a particular environment may provide and install a
new or different {@code SaslClientFactory}.

@since 1.5

@see SaslClient
@see Sasl

@author Rosanna Lee
@author Rob Weltman
"
      operation 10255362 "createSaslClient"
	abstract public return_type class_ref 1247746 // SaslClient
	nparams 6
	  param inout name "mechanisms" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "authorizationId" type class_ref 128130 // String
	  param inout name "protocol" type class_ref 128130 // String
	  param inout name "serverName" type class_ref 128130 // String
	  param inout name "props" type class_ref 130178 // Map
	  param inout name "cbh" type class_ref 507778 // CallbackHandler
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String,?> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a SaslClient using the parameters supplied.

@param mechanisms The non-null list of mechanism names to try. Each is the
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param authorizationId The possibly null protocol-dependent
identification to be used for authorization.
If null or empty, the server derives an authorization
ID from the client's authentication credentials.
When the SASL authentication completes successfully,
the specified entity is granted access.
@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").
@param serverName The non-null fully qualified host name
of the server to authenticate to.
@param props The possibly null set of properties used to select the SASL
mechanism and to configure the authentication exchange of the selected
mechanism. See the {@code Sasl} class for a list of standard properties.
Other, possibly mechanism-specific, properties can be included.
Properties not relevant to the selected mechanism are ignored,
including any map entries with non-String keys.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a {@code NameCallback}.
The password is requested by using a {@code PasswordCallback}.
The realm is requested by using a {@code RealmChoiceCallback} if there is a list
of realms to choose from, and by using a {@code RealmCallback} if
the realm must be entered.

@return A possibly null {@code SaslClient} created using the parameters
supplied. If null, this factory cannot produce a {@code SaslClient}
using the parameters supplied.
@exception SaslException If cannot create a {@code SaslClient} because
of an error.
"
      end

      operation 10255490 "getMechanismNames"
	abstract public return_type class_ref 128130 // String
	nparams 1
	  param inout name "props" type class_ref 130178 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of names of mechanisms that match the specified
mechanism selection policies.
@param props The possibly null set of properties used to specify the
security policy of the SASL mechanisms. For example, if {@code props}
contains the {@code Sasl.POLICY_NOPLAINTEXT} property with the value
{@code \"true\"}, then the factory must not return any SASL mechanisms
that are susceptible to simple plain passive attacks.
See the {@code Sasl} class for a complete list of policy properties.
Non-policy related properties, if present in {@code props}, are ignored,
including any map entries with non-String keys.
@return A non-null array containing a IANA-registered SASL mechanism names.
"
      end
    end

    class 1248130 "SaslServerFactory"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for creating instances of {@code SaslServer}.
A class that implements this interface
must be thread-safe and handle multiple simultaneous
requests. It must also have a public constructor that accepts no
argument.
<p>
This interface is not normally accessed directly by a server, which will use the
{@code Sasl} static methods
instead. However, a particular environment may provide and install a
new or different {@code SaslServerFactory}.

@since 1.5

@see SaslServer
@see Sasl

@author Rosanna Lee
@author Rob Weltman
"
      operation 10256642 "createSaslServer"
	abstract public return_type class_ref 1247874 // SaslServer
	nparams 5
	  param inout name "mechanism" type class_ref 128130 // String
	  param inout name "protocol" type class_ref 128130 // String
	  param inout name "serverName" type class_ref 128130 // String
	  param inout name "props" type class_ref 130178 // Map
	  param inout name "cbh" type class_ref 507778 // CallbackHandler
	nexceptions 1
	  exception class_ref 1247106 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String,?> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code SaslServer} using the parameters supplied.
It returns null
if no {@code SaslServer} can be created using the parameters supplied.
Throws {@code SaslException} if it cannot create a {@code SaslServer}
because of an error.

@param mechanism The non-null
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").
@param serverName The fully qualified host name of the server to
authenticate to, or null if the server is not bound to any specific host
name. If the mechanism does not allow an unbound server, a
{@code SaslException} will be thrown.
@param props The possibly null set of properties used to select the SASL
mechanism and to configure the authentication exchange of the selected
mechanism. See the {@code Sasl} class for a list of standard properties.
Other, possibly mechanism-specific, properties can be included.
Properties not relevant to the selected mechanism are ignored,
including any map entries with non-String keys.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a {@code NameCallback}.
The password is requested by using a {@code PasswordCallback}.
The realm is requested by using a {@code RealmChoiceCallback} if there is a list
of realms to choose from, and by using a {@code RealmCallback} if
the realm must be entered.

@return A possibly null {@code SaslServer} created using the parameters
supplied. If null, this factory cannot produce a {@code SaslServer}
using the parameters supplied.
@exception SaslException If cannot create a {@code SaslServer} because
of an error.
"
      end

      operation 10256770 "getMechanismNames"
	abstract public return_type class_ref 128130 // String
	nparams 1
	  param inout name "props" type class_ref 130178 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of names of mechanisms that match the specified
mechanism selection policies.
@param props The possibly null set of properties used to specify the
security policy of the SASL mechanisms. For example, if {@code props}
contains the {@code Sasl.POLICY_NOPLAINTEXT} property with the value
{@code \"true\"}, then the factory must not return any SASL mechanisms
that are susceptible to simple plain passive attacks.
See the {@code Sasl} class for a complete list of policy properties.
Non-policy related properties, if present in {@code props}, are ignored,
including any map entries with non-String keys.
@return A non-null array containing a IANA-registered SASL mechanism names.
"
      end
    end
  end

  deploymentview 175234 "sasl"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 909442 "SaslException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1247106 // SaslException
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 909570 "AuthenticationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1246978 // AuthenticationException
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 909698 "AuthorizeCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.Callback;
${definition}"
      associated_elems
	class_ref 1247234 // AuthorizeCallback
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 909826 "RealmCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.TextInputCallback;
${definition}"
      associated_elems
	class_ref 1247362 // RealmCallback
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 909954 "RealmChoiceCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.ChoiceCallback;
${definition}"
      associated_elems
	class_ref 1247490 // RealmChoiceCallback
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 910082 "Sasl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.CallbackHandler;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.security.Provider;
import java.security.Security;
${definition}"
      associated_elems
	class_ref 1247618 // Sasl
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 910210 "SaslClient"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1247746 // SaslClient
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 910338 "SaslClientFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import javax.security.auth.callback.CallbackHandler;
${definition}"
      associated_elems
	class_ref 1248002 // SaslClientFactory
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 910466 "SaslServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1247874 // SaslServer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 910594 "SaslServerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import javax.security.auth.callback.CallbackHandler;
${definition}"
      associated_elems
	class_ref 1248130 // SaslServerFactory
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
