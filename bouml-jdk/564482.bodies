class LDC
!!!3562242.java!!!	LDC(in index : int)
    super(com.sun.org.apache.bcel.internal.Constants.LDC_W, index);
    setSize();
!!!3562370.java!!!	setSize() : void
    if(index <= com.sun.org.apache.bcel.internal.Constants.MAX_BYTE) { // Fits in one byte?
      opcode = com.sun.org.apache.bcel.internal.Constants.LDC;
      length = 2;
    } else {
      opcode = com.sun.org.apache.bcel.internal.Constants.LDC_W;
      length = 3;
    }
!!!3562498.java!!!	dump(inout out : DataOutputStream) : void
    out.writeByte(opcode);

    if(length == 2)
      out.writeByte(index);
    else // Applies for LDC_W
      out.writeShort(index);
!!!3562626.java!!!	setIndex(in index : int) : void
    super.setIndex(index);
    setSize();
!!!3562754.java!!!	initFromFile(inout bytes : ByteSequence, inout wide : boolean) : void
    length = 2;
    index  = bytes.readUnsignedByte();
!!!3562882.java!!!	getValue(inout cpg : ConstantPoolGen) : Object
    com.sun.org.apache.bcel.internal.classfile.Constant c = cpg.getConstantPool().getConstant(index);

    switch(c.getTag()) {
      case com.sun.org.apache.bcel.internal.Constants.CONSTANT_String:
        int i = ((com.sun.org.apache.bcel.internal.classfile.ConstantString)c).getStringIndex();
        c = cpg.getConstantPool().getConstant(i);
        return ((com.sun.org.apache.bcel.internal.classfile.ConstantUtf8)c).getBytes();

    case com.sun.org.apache.bcel.internal.Constants.CONSTANT_Float:
        return new Float(((com.sun.org.apache.bcel.internal.classfile.ConstantFloat)c).getBytes());

    case com.sun.org.apache.bcel.internal.Constants.CONSTANT_Integer:
        return new Integer(((com.sun.org.apache.bcel.internal.classfile.ConstantInteger)c).getBytes());

    default: // Never reached
      throw new RuntimeException("Unknown or invalid constant type at " + index);
      }
!!!3563010.java!!!	getType(inout cpg : ConstantPoolGen) : Type
    switch(cpg.getConstantPool().getConstant(index).getTag()) {
    case com.sun.org.apache.bcel.internal.Constants.CONSTANT_String:  return Type.STRING;
    case com.sun.org.apache.bcel.internal.Constants.CONSTANT_Float:   return Type.FLOAT;
    case com.sun.org.apache.bcel.internal.Constants.CONSTANT_Integer: return Type.INT;
    default: // Never reached
      throw new RuntimeException("Unknown or invalid constant type at " + index);
    }
!!!3563138.java!!!	getExceptions() : Class
    return com.sun.org.apache.bcel.internal.ExceptionConstants.EXCS_STRING_RESOLUTION;
!!!3563266.java!!!	accept(inout v : Visitor) : void
    v.visitStackProducer(this);
    v.visitPushInstruction(this);
    v.visitExceptionThrower(this);
    v.visitTypedInstruction(this);
    v.visitCPInstruction(this);
    v.visitLDC(this);
