class ComboBoxPainter
!!!11216514.java!!!	ComboBoxPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11216642.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_DISABLED: paintBackgroundDisabled(g); break;
            case BACKGROUND_DISABLED_PRESSED: paintBackgroundDisabledAndPressed(g); break;
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;
            case BACKGROUND_FOCUSED: paintBackgroundFocused(g); break;
            case BACKGROUND_MOUSEOVER_FOCUSED: paintBackgroundMouseOverAndFocused(g); break;
            case BACKGROUND_MOUSEOVER: paintBackgroundMouseOver(g); break;
            case BACKGROUND_PRESSED_FOCUSED: paintBackgroundPressedAndFocused(g); break;
            case BACKGROUND_PRESSED: paintBackgroundPressed(g); break;
            case BACKGROUND_ENABLED_SELECTED: paintBackgroundEnabledAndSelected(g); break;
            case BACKGROUND_DISABLED_EDITABLE: paintBackgroundDisabledAndEditable(g); break;
            case BACKGROUND_ENABLED_EDITABLE: paintBackgroundEnabledAndEditable(g); break;
            case BACKGROUND_FOCUSED_EDITABLE: paintBackgroundFocusedAndEditable(g); break;
            case BACKGROUND_MOUSEOVER_EDITABLE: paintBackgroundMouseOverAndEditable(g); break;
            case BACKGROUND_PRESSED_EDITABLE: paintBackgroundPressedAndEditable(g); break;

        }
!!!11216770.java!!!	getExtendedCacheKeys(inout c : JComponent) : Object
        Object[] extendedCacheKeys = null;
        switch(state) {
            case BACKGROUND_ENABLED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color17, -0.63174605f, 0.43921566f, 0),
                     getComponentColor(c, "background", color18, -0.6054113f, 0.35686272f, 0),
                     getComponentColor(c, "background", color6, -0.5953556f, 0.32549018f, 0),
                     getComponentColor(c, "background", color19, -0.5998577f, 0.4352941f, 0),
                     getComponentColor(c, "background", color22, -0.6197143f, 0.43137252f, 0),
                     getComponentColor(c, "background", color23, -0.4800539f, 0.28235292f, 0),
                     getComponentColor(c, "background", color24, -0.43866998f, 0.24705881f, 0),
                     getComponentColor(c, "background", color25, -0.4625541f, 0.35686272f, 0)};
                break;
            case BACKGROUND_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color17, -0.63174605f, 0.43921566f, 0),
                     getComponentColor(c, "background", color18, -0.6054113f, 0.35686272f, 0),
                     getComponentColor(c, "background", color6, -0.5953556f, 0.32549018f, 0),
                     getComponentColor(c, "background", color19, -0.5998577f, 0.4352941f, 0),
                     getComponentColor(c, "background", color22, -0.6197143f, 0.43137252f, 0),
                     getComponentColor(c, "background", color23, -0.4800539f, 0.28235292f, 0),
                     getComponentColor(c, "background", color24, -0.43866998f, 0.24705881f, 0),
                     getComponentColor(c, "background", color25, -0.4625541f, 0.35686272f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color29, -0.6317773f, 0.4470588f, 0),
                     getComponentColor(c, "background", color30, -0.6113241f, 0.41568625f, 0),
                     getComponentColor(c, "background", color31, -0.5985242f, 0.39999998f, 0),
                     getComponentColor(c, "background", color32, -0.6357143f, 0.45098037f, 0),
                     getComponentColor(c, "background", color35, -0.6198413f, 0.43921566f, 0),
                     getComponentColor(c, "background", color36, -0.50527954f, 0.35294116f, 0),
                     getComponentColor(c, "background", color37, -0.4555341f, 0.3215686f, 0),
                     getComponentColor(c, "background", color25, -0.4625541f, 0.35686272f, 0),
                     getComponentColor(c, "background", color38, -0.4757143f, 0.43137252f, 0)};
                break;
            case BACKGROUND_MOUSEOVER:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color29, -0.6317773f, 0.4470588f, 0),
                     getComponentColor(c, "background", color30, -0.6113241f, 0.41568625f, 0),
                     getComponentColor(c, "background", color31, -0.5985242f, 0.39999998f, 0),
                     getComponentColor(c, "background", color32, -0.6357143f, 0.45098037f, 0),
                     getComponentColor(c, "background", color35, -0.6198413f, 0.43921566f, 0),
                     getComponentColor(c, "background", color36, -0.50527954f, 0.35294116f, 0),
                     getComponentColor(c, "background", color37, -0.4555341f, 0.3215686f, 0),
                     getComponentColor(c, "background", color25, -0.4625541f, 0.35686272f, 0),
                     getComponentColor(c, "background", color38, -0.4757143f, 0.43137252f, 0)};
                break;
            case BACKGROUND_PRESSED_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color41, -0.5847884f, 0.2980392f, 0),
                     getComponentColor(c, "background", color42, -0.53623784f, 0.19999999f, 0),
                     getComponentColor(c, "background", color43, -0.52701867f, 0.17254901f, 0),
                     getComponentColor(c, "background", color44, -0.5456242f, 0.3215686f, 0),
                     getComponentColor(c, "background", color47, -0.38050595f, 0.20392156f, 0),
                     getComponentColor(c, "background", color48, -0.12922078f, 0.054901958f, 0),
                     getComponentColor(c, "background", color49, -0.00895375f, 0.007843137f, 0),
                     getComponentColor(c, "background", color50, -0.1436508f, 0.19215685f, 0)};
                break;
            case BACKGROUND_PRESSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color41, -0.5847884f, 0.2980392f, 0),
                     getComponentColor(c, "background", color42, -0.53623784f, 0.19999999f, 0),
                     getComponentColor(c, "background", color43, -0.52701867f, 0.17254901f, 0),
                     getComponentColor(c, "background", color44, -0.5456242f, 0.3215686f, 0),
                     getComponentColor(c, "background", color47, -0.38050595f, 0.20392156f, 0),
                     getComponentColor(c, "background", color48, -0.12922078f, 0.054901958f, 0),
                     getComponentColor(c, "background", color49, -0.00895375f, 0.007843137f, 0),
                     getComponentColor(c, "background", color50, -0.1436508f, 0.19215685f, 0)};
                break;
            case BACKGROUND_ENABLED_SELECTED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color41, -0.5847884f, 0.2980392f, 0),
                     getComponentColor(c, "background", color42, -0.53623784f, 0.19999999f, 0),
                     getComponentColor(c, "background", color43, -0.52701867f, 0.17254901f, 0),
                     getComponentColor(c, "background", color44, -0.5456242f, 0.3215686f, 0),
                     getComponentColor(c, "background", color47, -0.38050595f, 0.20392156f, 0),
                     getComponentColor(c, "background", color48, -0.12922078f, 0.054901958f, 0),
                     getComponentColor(c, "background", color49, -0.00895375f, 0.007843137f, 0),
                     getComponentColor(c, "background", color50, -0.1436508f, 0.19215685f, 0)};
                break;
        }
        return extendedCacheKeys;
!!!11216898.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11217026.java!!!	paintBackgroundDisabled(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color1);
        g.fill(path);
        path = decodePath2();
        g.setPaint(decodeGradient1(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient2(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient3(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient4(path));
        g.fill(path);

!!!11217154.java!!!	paintBackgroundDisabledAndPressed(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color1);
        g.fill(path);
        path = decodePath2();
        g.setPaint(decodeGradient1(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient2(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient3(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient4(path));
        g.fill(path);

!!!11217282.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color14);
        g.fill(path);
        path = decodePath2();
        g.setPaint(decodeGradient5(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient7(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11217410.java!!!	paintBackgroundFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color26);
        g.fill(roundRect);
        path = decodePath2();
        g.setPaint(decodeGradient5(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient7(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11217538.java!!!	paintBackgroundMouseOverAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color26);
        g.fill(roundRect);
        path = decodePath2();
        g.setPaint(decodeGradient9(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient10(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11217666.java!!!	paintBackgroundMouseOver(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color14);
        g.fill(path);
        path = decodePath2();
        g.setPaint(decodeGradient9(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient10(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11217794.java!!!	paintBackgroundPressedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color26);
        g.fill(roundRect);
        path = decodePath2();
        g.setPaint(decodeGradient11(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient12(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11217922.java!!!	paintBackgroundPressed(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color51);
        g.fill(path);
        path = decodePath2();
        g.setPaint(decodeGradient11(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient12(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11218050.java!!!	paintBackgroundEnabledAndSelected(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color52);
        g.fill(path);
        path = decodePath2();
        g.setPaint(decodeGradient11(path));
        g.fill(path);
        path = decodePath3();
        g.setPaint(decodeGradient6(path));
        g.fill(path);
        path = decodePath4();
        g.setPaint(decodeGradient12(path));
        g.fill(path);
        path = decodePath5();
        g.setPaint(decodeGradient8(path));
        g.fill(path);

!!!11218178.java!!!	paintBackgroundDisabledAndEditable(inout g : Graphics2D) : void
        rect = decodeRect1();
        g.setPaint(color53);
        g.fill(rect);

!!!11218306.java!!!	paintBackgroundEnabledAndEditable(inout g : Graphics2D) : void
        rect = decodeRect1();
        g.setPaint(color53);
        g.fill(rect);

!!!11218434.java!!!	paintBackgroundFocusedAndEditable(inout g : Graphics2D) : void
        path = decodePath6();
        g.setPaint(color26);
        g.fill(path);

!!!11218562.java!!!	paintBackgroundMouseOverAndEditable(inout g : Graphics2D) : void
        rect = decodeRect2();
        g.setPaint(color53);
        g.fill(rect);

!!!11218690.java!!!	paintBackgroundPressedAndEditable(inout g : Graphics2D) : void
        rect = decodeRect2();
        g.setPaint(color53);
        g.fill(rect);

!!!11218818.java!!!	decodePath1() : Path2D
        path.reset();
        path.moveTo(decodeX(0.22222222f), decodeY(2.0f));
        path.lineTo(decodeX(0.22222222f), decodeY(2.25f));
        path.curveTo(decodeAnchorX(0.2222222238779068f, 0.0f), decodeAnchorY(2.25f, 3.0f), decodeAnchorX(0.7777777910232544f, -3.0f), decodeAnchorY(2.875f, 0.0f), decodeX(0.7777778f), decodeY(2.875f));
        path.lineTo(decodeX(2.631579f), decodeY(2.875f));
        path.curveTo(decodeAnchorX(2.6315789222717285f, 3.0f), decodeAnchorY(2.875f, 0.0f), decodeAnchorX(2.8947367668151855f, 0.0f), decodeAnchorY(2.25f, 3.0f), decodeX(2.8947368f), decodeY(2.25f));
        path.lineTo(decodeX(2.8947368f), decodeY(2.0f));
        path.lineTo(decodeX(0.22222222f), decodeY(2.0f));
        path.closePath();
        return path;
!!!11218946.java!!!	decodePath2() : Path2D
        path.reset();
        path.moveTo(decodeX(0.22222222f), decodeY(0.875f));
        path.lineTo(decodeX(0.22222222f), decodeY(2.125f));
        path.curveTo(decodeAnchorX(0.2222222238779068f, 0.0f), decodeAnchorY(2.125f, 3.0f), decodeAnchorX(0.7777777910232544f, -3.0f), decodeAnchorY(2.75f, 0.0f), decodeX(0.7777778f), decodeY(2.75f));
        path.lineTo(decodeX(2.0f), decodeY(2.75f));
        path.lineTo(decodeX(2.0f), decodeY(0.25f));
        path.lineTo(decodeX(0.7777778f), decodeY(0.25f));
        path.curveTo(decodeAnchorX(0.7777777910232544f, -3.0f), decodeAnchorY(0.25f, 0.0f), decodeAnchorX(0.2222222238779068f, 0.0f), decodeAnchorY(0.875f, -3.0f), decodeX(0.22222222f), decodeY(0.875f));
        path.closePath();
        return path;
!!!11219074.java!!!	decodePath3() : Path2D
        path.reset();
        path.moveTo(decodeX(0.8888889f), decodeY(0.375f));
        path.lineTo(decodeX(2.0f), decodeY(0.375f));
        path.lineTo(decodeX(2.0f), decodeY(2.625f));
        path.lineTo(decodeX(0.8888889f), decodeY(2.625f));
        path.curveTo(decodeAnchorX(0.8888888955116272f, -4.0f), decodeAnchorY(2.625f, 0.0f), decodeAnchorX(0.3333333432674408f, 0.0f), decodeAnchorY(2.0f, 4.0f), decodeX(0.33333334f), decodeY(2.0f));
        path.lineTo(decodeX(0.33333334f), decodeY(0.875f));
        path.curveTo(decodeAnchorX(0.3333333432674408f, 0.0f), decodeAnchorY(0.875f, -3.0f), decodeAnchorX(0.8888888955116272f, -4.0f), decodeAnchorY(0.375f, 0.0f), decodeX(0.8888889f), decodeY(0.375f));
        path.closePath();
        return path;
!!!11219202.java!!!	decodePath4() : Path2D
        path.reset();
        path.moveTo(decodeX(2.0f), decodeY(0.25f));
        path.lineTo(decodeX(2.631579f), decodeY(0.25f));
        path.curveTo(decodeAnchorX(2.6315789222717285f, 3.0f), decodeAnchorY(0.25f, 0.0f), decodeAnchorX(2.8947367668151855f, 0.0f), decodeAnchorY(0.875f, -3.0f), decodeX(2.8947368f), decodeY(0.875f));
        path.lineTo(decodeX(2.8947368f), decodeY(2.125f));
        path.curveTo(decodeAnchorX(2.8947367668151855f, 0.0f), decodeAnchorY(2.125f, 3.0f), decodeAnchorX(2.6315789222717285f, 3.0f), decodeAnchorY(2.75f, 0.0f), decodeX(2.631579f), decodeY(2.75f));
        path.lineTo(decodeX(2.0f), decodeY(2.75f));
        path.lineTo(decodeX(2.0f), decodeY(0.25f));
        path.closePath();
        return path;
!!!11219330.java!!!	decodePath5() : Path2D
        path.reset();
        path.moveTo(decodeX(2.0131578f), decodeY(0.375f));
        path.lineTo(decodeX(2.5789473f), decodeY(0.375f));
        path.curveTo(decodeAnchorX(2.5789473056793213f, 4.0f), decodeAnchorY(0.375f, 0.0f), decodeAnchorX(2.8421053886413574f, 0.0f), decodeAnchorY(1.0f, -4.0f), decodeX(2.8421054f), decodeY(1.0f));
        path.lineTo(decodeX(2.8421054f), decodeY(2.0f));
        path.curveTo(decodeAnchorX(2.8421053886413574f, 0.0f), decodeAnchorY(2.0f, 4.0f), decodeAnchorX(2.5789473056793213f, 4.0f), decodeAnchorY(2.625f, 0.0f), decodeX(2.5789473f), decodeY(2.625f));
        path.lineTo(decodeX(2.0131578f), decodeY(2.625f));
        path.lineTo(decodeX(2.0131578f), decodeY(0.375f));
        path.closePath();
        return path;
!!!11219458.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.06666667f), //x
                               decodeY(0.075f), //y
                               decodeX(2.9684212f) - decodeX(0.06666667f), //width
                               decodeY(2.925f) - decodeY(0.075f), //height
                               13.0f, 13.0f); //rounding
        return roundRect;
!!!11219586.java!!!	decodeRect1() : Rectangle2D
            rect.setRect(decodeX(1.4385965f), //x
                         decodeY(1.4444444f), //y
                         decodeX(1.4385965f) - decodeX(1.4385965f), //width
                         decodeY(1.4444444f) - decodeY(1.4444444f)); //height
        return rect;
!!!11219714.java!!!	decodePath6() : Path2D
        path.reset();
        path.moveTo(decodeX(0.120000005f), decodeY(0.120000005f));
        path.lineTo(decodeX(1.9954545f), decodeY(0.120000005f));
        path.curveTo(decodeAnchorX(1.9954545497894287f, 3.0f), decodeAnchorY(0.12000000476837158f, 0.0f), decodeAnchorX(2.8799986839294434f, 0.0f), decodeAnchorY(1.0941176414489746f, -2.9999999999999996f), decodeX(2.8799987f), decodeY(1.0941176f));
        path.lineTo(decodeX(2.8799987f), decodeY(1.964706f));
        path.curveTo(decodeAnchorX(2.8799986839294434f, 0.0f), decodeAnchorY(1.9647059440612793f, 3.0f), decodeAnchorX(1.9954545497894287f, 3.0f), decodeAnchorY(2.879999876022339f, 0.0f), decodeX(1.9954545f), decodeY(2.8799999f));
        path.lineTo(decodeX(0.120000005f), decodeY(2.8799999f));
        path.lineTo(decodeX(0.120000005f), decodeY(0.120000005f));
        path.closePath();
        return path;
!!!11219842.java!!!	decodeRect2() : Rectangle2D
            rect.setRect(decodeX(1.4385965f), //x
                         decodeY(1.5f), //y
                         decodeX(1.4385965f) - decodeX(1.4385965f), //width
                         decodeY(1.5f) - decodeY(1.5f)); //height
        return rect;
!!!11219970.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color2,
                            decodeColor(color2,color3,0.5f),
                            color3});
!!!11220098.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.2002841f,0.4005682f,0.5326705f,0.66477275f,0.8323864f,1.0f },
                new Color[] { color4,
                            decodeColor(color4,color5,0.5f),
                            color5,
                            decodeColor(color5,color6,0.5f),
                            color6,
                            decodeColor(color6,color7,0.5f),
                            color7});
!!!11220226.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color8,
                            decodeColor(color8,color9,0.5f),
                            color9});
!!!11220354.java!!!	decodeGradient4(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.171875f,0.34375f,0.4815341f,0.6193182f,0.8096591f,1.0f },
                new Color[] { color10,
                            decodeColor(color10,color11,0.5f),
                            color11,
                            decodeColor(color11,color12,0.5f),
                            color12,
                            decodeColor(color12,color13,0.5f),
                            color13});
!!!11220482.java!!!	decodeGradient5(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color15,
                            decodeColor(color15,color16,0.5f),
                            color16});
!!!11220610.java!!!	decodeGradient6(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.2002841f,0.4005682f,0.5326705f,0.66477275f,0.8323864f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3]});
!!!11220738.java!!!	decodeGradient7(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color20,
                            decodeColor(color20,color21,0.5f),
                            color21});
!!!11220866.java!!!	decodeGradient8(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.171875f,0.34375f,0.4815341f,0.6193182f,0.8096591f,1.0f },
                new Color[] { (Color)componentColors[4],
                            decodeColor((Color)componentColors[4],(Color)componentColors[5],0.5f),
                            (Color)componentColors[5],
                            decodeColor((Color)componentColors[5],(Color)componentColors[6],0.5f),
                            (Color)componentColors[6],
                            decodeColor((Color)componentColors[6],(Color)componentColors[7],0.5f),
                            (Color)componentColors[7]});
!!!11220994.java!!!	decodeGradient9(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color27,
                            decodeColor(color27,color28,0.5f),
                            color28});
!!!11221122.java!!!	decodeGradient10(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color33,
                            decodeColor(color33,color34,0.5f),
                            color34});
!!!11221250.java!!!	decodeGradient11(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color39,
                            decodeColor(color39,color40,0.5f),
                            color40});
!!!11221378.java!!!	decodeGradient12(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color45,
                            decodeColor(color45,color46,0.5f),
                            color46});
