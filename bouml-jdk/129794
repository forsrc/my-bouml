format 222
"util" // jdk1.8::java::util
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/util/"
  java_package "java.util"
  classview 128642 "util"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 130178 "Map"
      visibility public stereotype "interface"
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object that maps keys to values.  A map cannot contain duplicate keys;
each key can map to at most one value.

<p>This interface takes the place of the <tt>Dictionary</tt> class, which
was a totally abstract class rather than an interface.

<p>The <tt>Map</tt> interface provides three <i>collection views</i>, which
allow a map's contents to be viewed as a set of keys, collection of values,
or set of key-value mappings.  The <i>order</i> of a map is defined as
the order in which the iterators on the map's collection views return their
elements.  Some map implementations, like the <tt>TreeMap</tt> class, make
specific guarantees as to their order; others, like the <tt>HashMap</tt>
class, do not.

<p>Note: great care must be exercised if mutable objects are used as map
keys.  The behavior of a map is not specified if the value of an object is
changed in a manner that affects <tt>equals</tt> comparisons while the
object is a key in the map.  A special case of this prohibition is that it
is not permissible for a map to contain itself as a key.  While it is
permissible for a map to contain itself as a value, extreme caution is
advised: the <tt>equals</tt> and <tt>hashCode</tt> methods are no longer
well defined on such a map.

<p>All general-purpose map implementation classes should provide two
\"standard\" constructors: a void (no arguments) constructor which creates an
empty map, and a constructor with a single argument of type <tt>Map</tt>,
which creates a new map with the same key-value mappings as its argument.
In effect, the latter constructor allows the user to copy any map,
producing an equivalent map of the desired class.  There is no way to
enforce this recommendation (as interfaces cannot contain constructors) but
all of the general-purpose map implementations in the JDK comply.

<p>The \"destructive\" methods contained in this interface, that is, the
methods that modify the map on which they operate, are specified to throw
<tt>UnsupportedOperationException</tt> if this map does not support the
operation.  If this is the case, these methods may, but are not required
to, throw an <tt>UnsupportedOperationException</tt> if the invocation would
have no effect on the map.  For example, invoking the {@link #putAll(Map)}
method on an unmodifiable map may, but is not required to, throw the
exception if the map whose mappings are to be \"superimposed\" is empty.

<p>Some map implementations have restrictions on the keys and values they
may contain.  For example, some implementations prohibit null keys and
values, and some have restrictions on the types of their keys.  Attempting
to insert an ineligible key or value throws an unchecked exception,
typically <tt>NullPointerException</tt> or <tt>ClassCastException</tt>.
Attempting to query the presence of an ineligible key or value may throw an
exception, or it may simply return false; some implementations will exhibit
the former behavior and some will exhibit the latter.  More generally,
attempting an operation on an ineligible key or value whose completion
would not result in the insertion of an ineligible element into the map may
throw an exception or it may succeed, at the option of the implementation.
Such exceptions are marked as \"optional\" in the specification for this
interface.

<p>Many methods in Collections Framework interfaces are defined
in terms of the {@link Object#equals(Object) equals} method.  For
example, the specification for the {@link #containsKey(Object)
containsKey(Object key)} method says: \"returns <tt>true</tt> if and
only if this map contains a mapping for a key <tt>k</tt> such that
<tt>(key==null ? k==null : key.equals(k))</tt>.\" This specification should
<i>not</i> be construed to imply that invoking <tt>Map.containsKey</tt>
with a non-null argument <tt>key</tt> will cause <tt>key.equals(k)</tt> to
be invoked for any key <tt>k</tt>.  Implementations are free to
implement optimizations whereby the <tt>equals</tt> invocation is avoided,
for example, by first comparing the hash codes of the two keys.  (The
{@link Object#hashCode()} specification guarantees that two objects with
unequal hash codes cannot be equal.)  More generally, implementations of
the various Collections Framework interfaces are free to take advantage of
the specified behavior of underlying {@link Object} methods wherever the
implementor deems it appropriate.

<p>Some map operations which perform recursive traversal of the map may fail
with an exception for self-referential instances where the map directly or
indirectly contains itself. This includes the {@code clone()},
{@code equals()}, {@code hashCode()} and {@code toString()} methods.
Implementations may optionally handle the self-referential scenario, however
most current implementations do not do so.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author  Josh Bloch
@see HashMap
@see TreeMap
@see Hashtable
@see SortedMap
@see Collection
@see Set
@since 1.2
"
      operation 586370 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns the number of key-value mappings in this map.  If the
map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
<tt>Integer.MAX_VALUE</tt>.

@return the number of key-value mappings in this map
"
      end

      operation 586498 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains no key-value mappings.

@return <tt>true</tt> if this map contains no key-value mappings
"
      end

      operation 586626 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains a mapping for the specified
key.  More formally, returns <tt>true</tt> if and only if
this map contains a mapping for a key <tt>k</tt> such that
<tt>(key==null ? k==null : key.equals(k))</tt>.  (There can be
at most one such mapping.)

@param key key whose presence in this map is to be tested
@return <tt>true</tt> if this map contains a mapping for the specified
        key
@throws ClassCastException if the key is of an inappropriate type for
        this map
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key is null and this map
        does not permit null keys
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 586754 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map maps one or more keys to the
specified value.  More formally, returns <tt>true</tt> if and only if
this map contains at least one mapping to a value <tt>v</tt> such that
<tt>(value==null ? v==null : value.equals(v))</tt>.  This operation
will probably require time linear in the map size for most
implementations of the <tt>Map</tt> interface.

@param value value whose presence in this map is to be tested
@return <tt>true</tt> if this map maps one or more keys to the
        specified value
@throws ClassCastException if the value is of an inappropriate type for
        this map
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified value is null and this
        map does not permit null values
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 586882 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code (key==null ? k==null :
key.equals(k))}, then this method returns {@code v}; otherwise
it returns {@code null}.  (There can be at most one such mapping.)

<p>If this map permits null values, then a return value of
{@code null} does not <i>necessarily</i> indicate that the map
contains no mapping for the key; it's also possible that the map
explicitly maps the key to {@code null}.  The {@link #containsKey
containsKey} operation may be used to distinguish these two cases.

@param key the key whose associated value is to be returned
@return the value to which the specified key is mapped, or
        {@code null} if this map contains no mapping for the key
@throws ClassCastException if the key is of an inappropriate type for
        this map
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key is null and this map
        does not permit null keys
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 587010 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Associates the specified value with the specified key in this map
(optional operation).  If the map previously contained a mapping for
the key, the old value is replaced by the specified value.  (A map
<tt>m</tt> is said to contain a mapping for a key <tt>k</tt> if and only
if {@link #containsKey(Object) m.containsKey(k)} would return
<tt>true</tt>.)

@param key key with which the specified value is to be associated
@param value value to be associated with the specified key
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
        (A <tt>null</tt> return can also indicate that the map
        previously associated <tt>null</tt> with <tt>key</tt>,
        if the implementation supports <tt>null</tt> values.)
@throws UnsupportedOperationException if the <tt>put</tt> operation
        is not supported by this map
@throws ClassCastException if the class of the specified key or value
        prevents it from being stored in this map
@throws NullPointerException if the specified key or value is null
        and this map does not permit null keys or values
@throws IllegalArgumentException if some property of the specified key
        or value prevents it from being stored in this map
"
      end

      operation 587138 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping for a key from this map if it is present
(optional operation).   More formally, if this map contains a mapping
from key <tt>k</tt> to value <tt>v</tt> such that
<code>(key==null ?  k==null : key.equals(k))</code>, that mapping
is removed.  (The map can contain at most one such mapping.)

<p>Returns the value to which this map previously associated the key,
or <tt>null</tt> if the map contained no mapping for the key.

<p>If this map permits null values, then a return value of
<tt>null</tt> does not <i>necessarily</i> indicate that the map
contained no mapping for the key; it's also possible that the map
explicitly mapped the key to <tt>null</tt>.

<p>The map will not contain a mapping for the specified key once the
call returns.

@param key key whose mapping is to be removed from the map
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
@throws UnsupportedOperationException if the <tt>remove</tt> operation
        is not supported by this map
@throws ClassCastException if the key is of an inappropriate type for
        this map
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key is null and this
        map does not permit null keys
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 587266 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Copies all of the mappings from the specified map to this map
(optional operation).  The effect of this call is equivalent to that
of calling {@link #put(Object,Object) put(k, v)} on this map once
for each mapping from key <tt>k</tt> to value <tt>v</tt> in the
specified map.  The behavior of this operation is undefined if the
specified map is modified while the operation is in progress.

@param m mappings to be stored in this map
@throws UnsupportedOperationException if the <tt>putAll</tt> operation
        is not supported by this map
@throws ClassCastException if the class of a key or value in the
        specified map prevents it from being stored in this map
@throws NullPointerException if the specified map is null, or if
        this map does not permit null keys or values, and the
        specified map contains null keys or values
@throws IllegalArgumentException if some property of a key or value in
        the specified map prevents it from being stored in this map
"
      end

      operation 587394 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the mappings from this map (optional operation).
The map will be empty after this call returns.

@throws UnsupportedOperationException if the <tt>clear</tt> operation
        is not supported by this map
"
      end

      operation 587522 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Views

Returns a {@link Set} view of the keys contained in this map.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own <tt>remove</tt> operation), the results of
the iteration are undefined.  The set supports element removal,
which removes the corresponding mapping from the map, via the
<tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
<tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
operations.

@return a set view of the keys contained in this map
"
      end

      operation 587650 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.
The collection is backed by the map, so changes to the map are
reflected in the collection, and vice-versa.  If the map is
modified while an iteration over the collection is in progress
(except through the iterator's own <tt>remove</tt> operation),
the results of the iteration are undefined.  The collection
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Collection.remove</tt>, <tt>removeAll</tt>,
<tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
support the <tt>add</tt> or <tt>addAll</tt> operations.

@return a collection view of the values contained in this map
"
      end

      class 192386 "Entry"
	visibility public stereotype "interface"
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 587906 "getKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the key corresponding to this entry.

@return the key corresponding to this entry
@throws IllegalStateException implementations may, but are not
        required to, throw this exception if the entry has been
        removed from the backing map.
"
	end

	operation 588034 "getValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value corresponding to this entry.  If the mapping
has been removed from the backing map (by the iterator's
<tt>remove</tt> operation), the results of this call are undefined.

@return the value corresponding to this entry
@throws IllegalStateException implementations may, but are not
        required to, throw this exception if the entry has been
        removed from the backing map.
"
	end

	operation 588162 "setValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "value" explicit_type "V"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replaces the value corresponding to this entry with the specified
value (optional operation).  (Writes through to the map.)  The
behavior of this call is undefined if the mapping has already been
removed from the map (by the iterator's <tt>remove</tt> operation).

@param value new value to be stored in this entry
@return old value corresponding to the entry
@throws UnsupportedOperationException if the <tt>put</tt> operation
        is not supported by the backing map
@throws ClassCastException if the class of the specified value
        prevents it from being stored in the backing map
@throws NullPointerException if the backing map does not permit
        null values, and the specified value is null
@throws IllegalArgumentException if some property of this value
        prevents it from being stored in the backing map
@throws IllegalStateException implementations may, but are not
        required to, throw this exception if the entry has been
        removed from the backing map.
"
	end

	operation 588290 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares the specified object with this entry for equality.
Returns <tt>true</tt> if the given object is also a map entry and
the two entries represent the same mapping.  More formally, two
entries <tt>e1</tt> and <tt>e2</tt> represent the same mapping
if<pre>
    (e1.getKey()==null ?
     e2.getKey()==null : e1.getKey().equals(e2.getKey()))  &amp;&amp;
    (e1.getValue()==null ?
     e2.getValue()==null : e1.getValue().equals(e2.getValue()))
</pre>
This ensures that the <tt>equals</tt> method works properly across
different implementations of the <tt>Map.Entry</tt> interface.

@param o object to be compared for equality with this map entry
@return <tt>true</tt> if the specified object is equal to this map
        entry
"
	end

	operation 588418 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the hash code value for this map entry.  The hash code
of a map entry <tt>e</tt> is defined to be: <pre>
    (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
    (e.getValue()==null ? 0 : e.getValue().hashCode())
</pre>
This ensures that <tt>e1.equals(e2)</tt> implies that
<tt>e1.hashCode()==e2.hashCode()</tt> for any two Entries
<tt>e1</tt> and <tt>e2</tt>, as required by the general
contract of <tt>Object.hashCode</tt>.

@return the hash code value for this map entry
@see Object#hashCode()
@see Object#equals(Object)
@see #equals(Object)
"
	end

	operation 588546 "comparingByKey"
	  class_operation cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K extends Comparable<? super K>, V> ${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a comparator that compares {@link Map.Entry} in natural order on key.

<p>The returned comparator is serializable and throws {@link
NullPointerException} when comparing an entry with a null key.

@param  <K> the {@link Comparable} type of then map keys
@param  <V> the type of the map values
@return a comparator that compares {@link Map.Entry} in natural order on key.
@see Comparable
@since 1.8
"
	end

	operation 588674 "comparingByValue"
	  class_operation cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V extends Comparable<? super V>> ${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a comparator that compares {@link Map.Entry} in natural order on value.

<p>The returned comparator is serializable and throws {@link
NullPointerException} when comparing an entry with null values.

@param <K> the type of the map keys
@param <V> the {@link Comparable} type of the map values
@return a comparator that compares {@link Map.Entry} in natural order on value.
@see Comparable
@since 1.8
"
	end

	operation 588802 "comparingByKey"
	  class_operation cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 1
	    param inout name "cmp" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<Map.Entry<K, V>> ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a comparator that compares {@link Map.Entry} by key using the given
{@link Comparator}.

<p>The returned comparator is serializable if the specified comparator
is also serializable.

@param  <K> the type of the map keys
@param  <V> the type of the map values
@param  cmp the key {@link Comparator}
@return a comparator that compares {@link Map.Entry} by the key.
@since 1.8
"
	end

	operation 588930 "comparingByValue"
	  class_operation cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 1
	    param inout name "cmp" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<Map.Entry<K, V>> ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a comparator that compares {@link Map.Entry} by value using the given
{@link Comparator}.

<p>The returned comparator is serializable if the specified comparator
is also serializable.

@param  <K> the type of the map keys
@param  <V> the type of the map values
@param  cmp the value {@link Comparator}
@return a comparator that compares {@link Map.Entry} by the value.
@since 1.8
"
	end
      end

      operation 587778 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own <tt>remove</tt> operation, or through the
<tt>setValue</tt> operation on a map entry returned by the
iterator) the results of the iteration are undefined.  The set
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
<tt>clear</tt> operations.  It does not support the
<tt>add</tt> or <tt>addAll</tt> operations.

@return a set view of the mappings contained in this map
"
      end

      operation 589058 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this map for equality.  Returns
<tt>true</tt> if the given object is also a map and the two maps
represent the same mappings.  More formally, two maps <tt>m1</tt> and
<tt>m2</tt> represent the same mappings if
<tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the
<tt>equals</tt> method works properly across different implementations
of the <tt>Map</tt> interface.

@param o object to be compared for equality with this map
@return <tt>true</tt> if the specified object is equal to this map
"
      end

      operation 589186 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this map.  The hash code of a map is
defined to be the sum of the hash codes of each entry in the map's
<tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two maps
<tt>m1</tt> and <tt>m2</tt>, as required by the general contract of
{@link Object#hashCode}.

@return the hash code value for this map
@see Map.Entry#hashCode()
@see Object#equals(Object)
@see #equals(Object)
"
      end

      operation 589314 "getOrDefault"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "defaultValue" explicit_type "V"
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Defaultable methods

Returns the value to which the specified key is mapped, or
{@code defaultValue} if this map contains no mapping for the key.

@implSpec
The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param key the key whose associated value is to be returned
@param defaultValue the default mapping of the key
@return the value to which the specified key is mapped, or
{@code defaultValue} if this map contains no mapping for the key
@throws ClassCastException if the key is of an inappropriate type for
this map
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key is null and this map
does not permit null keys
(<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 589442 "forEach"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 192514 // BiConsumer
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the given action for each entry in this map until all entries
have been processed or the action throws an exception.   Unless
otherwise specified by the implementing class, actions are performed in
the order of entry set iteration (if an iteration order is specified.)
Exceptions thrown by the action are relayed to the caller.

@implSpec
The default implementation is equivalent to, for this {@code map}:
<pre> {@code
for (Map.Entry<K, V> entry : map.entrySet())
    action.accept(entry.getKey(), entry.getValue());
}</pre>

The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param action The action to be performed for each entry
@throws NullPointerException if the specified action is null
@throws ConcurrentModificationException if an entry is found to be
removed during iteration
@since 1.8
"
      end

      operation 589570 "replaceAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "function" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces each entry's value with the result of invoking the given
function on that entry until all entries have been processed or the
function throws an exception.  Exceptions thrown by the function are
relayed to the caller.

@implSpec
<p>The default implementation is equivalent to, for this {@code map}:
<pre> {@code
for (Map.Entry<K, V> entry : map.entrySet())
    entry.setValue(function.apply(entry.getKey(), entry.getValue()));
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param function the function to apply to each entry
@throws UnsupportedOperationException if the {@code set} operation
is not supported by this map's entry set iterator.
@throws ClassCastException if the class of a replacement value
prevents it from being stored in this map
@throws NullPointerException if the specified function is null, or the
specified replacement value is null, and this map does not permit null
values
@throws ClassCastException if a replacement value is of an inappropriate
        type for this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if function or a replacement value is null,
        and this map does not permit null keys or values
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws IllegalArgumentException if some property of a replacement value
        prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ConcurrentModificationException if an entry is found to be
removed during iteration
@since 1.8
"
      end

      operation 589698 "putIfAbsent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the specified key is not already associated with a value (or is mapped
to {@code null}) associates it with the given value and returns
{@code null}, else returns the current value.

@implSpec
The default implementation is equivalent to, for this {@code
map}:

<pre> {@code
V v = map.get(key);
if (v == null)
    v = map.put(key, value);

return v;
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param key key with which the specified value is to be associated
@param value value to be associated with the specified key
@return the previous value associated with the specified key, or
        {@code null} if there was no mapping for the key.
        (A {@code null} return can also indicate that the map
        previously associated {@code null} with the key,
        if the implementation supports null values.)
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the key or value is of an inappropriate
        type for this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key or value is null,
        and this map does not permit null keys or values
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws IllegalArgumentException if some property of the specified key
        or value prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 589826 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the entry for the specified key only if it is currently
mapped to the specified value.

@implSpec
The default implementation is equivalent to, for this {@code map}:

<pre> {@code
if (map.containsKey(key) && Objects.equals(map.get(key), value)) {
    map.remove(key);
    return true;
} else
    return false;
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param key key with which the specified value is associated
@param value value expected to be associated with the specified key
@return {@code true} if the value was removed
@throws UnsupportedOperationException if the {@code remove} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the key or value is of an inappropriate
        type for this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key or value is null,
        and this map does not permit null keys or values
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 589954 "replace"
	cpp_inline public explicit_return_type "boolean"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "oldValue" explicit_type "V"
	  param inout name "newValue" explicit_type "V"
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the entry for the specified key only if currently
mapped to the specified value.

@implSpec
The default implementation is equivalent to, for this {@code map}:

<pre> {@code
if (map.containsKey(key) && Objects.equals(map.get(key), value)) {
    map.put(key, newValue);
    return true;
} else
    return false;
}</pre>

The default implementation does not throw NullPointerException
for maps that do not support null values if oldValue is null unless
newValue is also null.

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param key key with which the specified value is associated
@param oldValue value expected to be associated with the specified key
@param newValue value to be associated with the specified key
@return {@code true} if the value was replaced
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the class of a specified key or value
        prevents it from being stored in this map
@throws NullPointerException if a specified key or newValue is null,
        and this map does not permit null keys or values
@throws NullPointerException if oldValue is null and this map does not
        permit null values
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws IllegalArgumentException if some property of a specified key
        or value prevents it from being stored in this map
@since 1.8
"
      end

      operation 590082 "replace"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the entry for the specified key only if it is
currently mapped to some value.

@implSpec
The default implementation is equivalent to, for this {@code map}:

<pre> {@code
if (map.containsKey(key)) {
    return map.put(key, value);
} else
    return null;
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties.

@param key key with which the specified value is associated
@param value value to be associated with the specified key
@return the previous value associated with the specified key, or
        {@code null} if there was no mapping for the key.
        (A {@code null} return can also indicate that the map
        previously associated {@code null} with the key,
        if the implementation supports null values.)
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the class of the specified key or value
        prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key or value is null,
        and this map does not permit null keys or values
@throws IllegalArgumentException if some property of the specified key
        or value prevents it from being stored in this map
@since 1.8
"
      end

      operation 590210 "computeIfAbsent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "mappingFunction" type class_ref 192770 // Function
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the specified key is not already associated with a value (or is mapped
to {@code null}), attempts to compute its value using the given mapping
function and enters it into this map unless {@code null}.

<p>If the function returns {@code null} no mapping is recorded. If
the function itself throws an (unchecked) exception, the
exception is rethrown, and no mapping is recorded.  The most
common usage is to construct a new object serving as an initial
mapped value or memoized result, as in:

<pre> {@code
map.computeIfAbsent(key, k -> new Value(f(k)));
}</pre>

<p>Or to implement a multi-value map, {@code Map<K,Collection<V>>},
supporting multiple values per key:

<pre> {@code
map.computeIfAbsent(key, k -> new HashSet<V>()).add(v);
}</pre>


@implSpec
The default implementation is equivalent to the following steps for this
{@code map}, then returning the current value or {@code null} if now
absent:

<pre> {@code
if (map.get(key) == null) {
    V newValue = mappingFunction.apply(key);
    if (newValue != null)
        map.put(key, newValue);
}
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties. In particular, all implementations of
subinterface {@link java.util.concurrent.ConcurrentMap} must document
whether the function is applied once atomically only if the value is not
present.

@param key key with which the specified value is to be associated
@param mappingFunction the function to compute a value
@return the current (existing or computed) value associated with
        the specified key, or null if the computed value is null
@throws NullPointerException if the specified key is null and
        this map does not support null keys, or the mappingFunction
        is null
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the class of the specified key or value
        prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 590338 "computeIfPresent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value for the specified key is present and non-null, attempts to
compute a new mapping given the key and its current mapped value.

<p>If the function returns {@code null}, the mapping is removed.  If the
function itself throws an (unchecked) exception, the exception is
rethrown, and the current mapping is left unchanged.

@implSpec
The default implementation is equivalent to performing the following
steps for this {@code map}, then returning the current value or
{@code null} if now absent:

<pre> {@code
if (map.get(key) != null) {
    V oldValue = map.get(key);
    V newValue = remappingFunction.apply(key, oldValue);
    if (newValue != null)
        map.put(key, newValue);
    else
        map.remove(key);
}
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties. In particular, all implementations of
subinterface {@link java.util.concurrent.ConcurrentMap} must document
whether the function is applied once atomically only if the value is not
present.

@param key key with which the specified value is to be associated
@param remappingFunction the function to compute a value
@return the new value associated with the specified key, or null if none
@throws NullPointerException if the specified key is null and
        this map does not support null keys, or the
        remappingFunction is null
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the class of the specified key or value
        prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 590466 "compute"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to compute a mapping for the specified key and its current
mapped value (or {@code null} if there is no current mapping). For
example, to either create or append a {@code String} msg to a value
mapping:

<pre> {@code
map.compute(key, (k, v) -> (v == null) ? msg : v.concat(msg))}</pre>
(Method {@link #merge merge()} is often simpler to use for such purposes.)

<p>If the function returns {@code null}, the mapping is removed (or
remains absent if initially absent).  If the function itself throws an
(unchecked) exception, the exception is rethrown, and the current mapping
is left unchanged.

@implSpec
The default implementation is equivalent to performing the following
steps for this {@code map}, then returning the current value or
{@code null} if absent:

<pre> {@code
V oldValue = map.get(key);
V newValue = remappingFunction.apply(key, oldValue);
if (oldValue != null ) {
   if (newValue != null)
      map.put(key, newValue);
   else
      map.remove(key);
} else {
   if (newValue != null)
      map.put(key, newValue);
   else
      return null;
}
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties. In particular, all implementations of
subinterface {@link java.util.concurrent.ConcurrentMap} must document
whether the function is applied once atomically only if the value is not
present.

@param key key with which the specified value is to be associated
@param remappingFunction the function to compute a value
@return the new value associated with the specified key, or null if none
@throws NullPointerException if the specified key is null and
        this map does not support null keys, or the
        remappingFunction is null
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the class of the specified key or value
        prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 590594 "merge"
	cpp_inline public explicit_return_type "V"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the specified key is not already associated with a value or is
associated with null, associates it with the given non-null value.
Otherwise, replaces the associated value with the results of the given
remapping function, or removes if the result is {@code null}. This
method may be of use when combining multiple mapped values for a key.
For example, to either create or append a {@code String msg} to a
value mapping:

<pre> {@code
map.merge(key, msg, String::concat)
}</pre>

<p>If the function returns {@code null} the mapping is removed.  If the
function itself throws an (unchecked) exception, the exception is
rethrown, and the current mapping is left unchanged.

@implSpec
The default implementation is equivalent to performing the following
steps for this {@code map}, then returning the current value or
{@code null} if absent:

<pre> {@code
V oldValue = map.get(key);
V newValue = (oldValue == null) ? value :
             remappingFunction.apply(oldValue, value);
if (newValue == null)
    map.remove(key);
else
    map.put(key, newValue);
}</pre>

<p>The default implementation makes no guarantees about synchronization
or atomicity properties of this method. Any implementation providing
atomicity guarantees must override this method and document its
concurrency properties. In particular, all implementations of
subinterface {@link java.util.concurrent.ConcurrentMap} must document
whether the function is applied once atomically only if the value is not
present.

@param key key with which the resulting value is to be associated
@param value the non-null value to be merged with the existing value
       associated with the key or, if no existing value or a null value
       is associated with the key, to be associated with the key
@param remappingFunction the function to recompute a value if present
@return the new value associated with the specified key, or null if no
        value is associated with the key
@throws UnsupportedOperationException if the {@code put} operation
        is not supported by this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if the class of the specified key or value
        prevents it from being stored in this map
        (<a href=\"{@docRoot}/java/util/Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified key is null and this map
        does not support null keys or the value or remappingFunction is
        null
@since 1.8
"
      end
    end

    class 132866 "HashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 192130 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 192130 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hash table based implementation of the <tt>Map</tt> interface.  This
implementation provides all of the optional map operations, and permits
<tt>null</tt> values and the <tt>null</tt> key.  (The <tt>HashMap</tt>
class is roughly equivalent to <tt>Hashtable</tt>, except that it is
unsynchronized and permits nulls.)  This class makes no guarantees as to
the order of the map; in particular, it does not guarantee that the order
will remain constant over time.

<p>This implementation provides constant-time performance for the basic
operations (<tt>get</tt> and <tt>put</tt>), assuming the hash function
disperses the elements properly among the buckets.  Iteration over
collection views requires time proportional to the \"capacity\" of the
<tt>HashMap</tt> instance (the number of buckets) plus its size (the number
of key-value mappings).  Thus, it's very important not to set the initial
capacity too high (or the load factor too low) if iteration performance is
important.

<p>An instance of <tt>HashMap</tt> has two parameters that affect its
performance: <i>initial capacity</i> and <i>load factor</i>.  The
<i>capacity</i> is the number of buckets in the hash table, and the initial
capacity is simply the capacity at the time the hash table is created.  The
<i>load factor</i> is a measure of how full the hash table is allowed to
get before its capacity is automatically increased.  When the number of
entries in the hash table exceeds the product of the load factor and the
current capacity, the hash table is <i>rehashed</i> (that is, internal data
structures are rebuilt) so that the hash table has approximately twice the
number of buckets.

<p>As a general rule, the default load factor (.75) offers a good
tradeoff between time and space costs.  Higher values decrease the
space overhead but increase the lookup cost (reflected in most of
the operations of the <tt>HashMap</tt> class, including
<tt>get</tt> and <tt>put</tt>).  The expected number of entries in
the map and its load factor should be taken into account when
setting its initial capacity, so as to minimize the number of
rehash operations.  If the initial capacity is greater than the
maximum number of entries divided by the load factor, no rehash
operations will ever occur.

<p>If many mappings are to be stored in a <tt>HashMap</tt>
instance, creating it with a sufficiently large capacity will allow
the mappings to be stored more efficiently than letting it perform
automatic rehashing as needed to grow the table.  Note that using
many keys with the same {@code hashCode()} is a sure way to slow
down performance of any hash table. To ameliorate impact, when keys
are {@link Comparable}, this class may use comparison order among
keys to help break ties.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a hash map concurrently, and at least one of
the threads modifies the map structurally, it <i>must</i> be
synchronized externally.  (A structural modification is any operation
that adds or deletes one or more mappings; merely changing the value
associated with a key that an instance already contains is not a
structural modification.)  This is typically accomplished by
synchronizing on some object that naturally encapsulates the map.

If no such object exists, the map should be \"wrapped\" using the
{@link Collections#synchronizedMap Collections.synchronizedMap}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the map:<pre>
  Map m = Collections.synchronizedMap(new HashMap(...));</pre>

<p>The iterators returned by all of this class's \"collection view methods\"
are <i>fail-fast</i>: if the map is structurally modified at any time after
the iterator is created, in any way except through the iterator's own
<tt>remove</tt> method, the iterator will throw a
{@link ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the
future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author  Doug Lea
@author  Josh Bloch
@author  Arthur van Hoff
@author  Neal Gafter
@see     Object#hashCode()
@see     Collection
@see     Map
@see     TreeMap
@see     Hashtable
@since   1.2
"
      classrelation 668674 // <realization>
	relation 668674 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 668674 // <realization>
	  b parent class_ref 192130 // AbstractMap
      end

      classrelation 668802 // <realization>
	relation 668802 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 668802 // <realization>
	  b parent class_ref 130178 // Map
      end

      classrelation 668930 // <realization>
	relation 668930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 668930 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 669058 // <realization>
	relation 669058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 669058 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 490498 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 362498820763181265L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 490626 "DEFAULT_INITIAL_CAPACITY"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1 << 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Implementation notes.

This map usually acts as a binned (bucketed) hash table, but
when bins get too large, they are transformed into bins of
TreeNodes, each structured similarly to those in
java.util.TreeMap. Most methods try to use normal bins, but
relay to TreeNode methods when applicable (simply by checking
instanceof a node).  Bins of TreeNodes may be traversed and
used like any others, but additionally support faster lookup
when overpopulated. However, since the vast majority of bins in
normal use are not overpopulated, checking for existence of
tree bins may be delayed in the course of table methods.

Tree bins (i.e., bins whose elements are all TreeNodes) are
ordered primarily by hashCode, but in the case of ties, if two
elements are of the same \"class C implements Comparable<C>\",
type then their compareTo method is used for ordering. (We
conservatively check generic types via reflection to validate
this -- see method comparableClassFor).  The added complexity
of tree bins is worthwhile in providing worst-case O(log n)
operations when keys either have distinct hashes or are
orderable, Thus, performance degrades gracefully under
accidental or malicious usages in which hashCode() methods
return values that are poorly distributed, as well as those in
which many keys share a hashCode, so long as they are also
Comparable. (If neither of these apply, we may waste about a
factor of two in time and space compared to taking no
precautions. But the only known cases stem from poor user
programming practices that are already so slow that this makes
little difference.)

Because TreeNodes are about twice the size of regular nodes, we
use them only when bins contain enough nodes to warrant use
(see TREEIFY_THRESHOLD). And when they become too small (due to
removal or resizing) they are converted back to plain bins.  In
usages with well-distributed user hashCodes, tree bins are
rarely used.  Ideally, under random hashCodes, the frequency of
nodes in bins follows a Poisson distribution
(http://en.wikipedia.org/wiki/Poisson_distribution) with a
parameter of about 0.5 on average for the default resizing
threshold of 0.75, although with a large variance because of
resizing granularity. Ignoring variance, the expected
occurrences of list size k are (exp(-0.5) * pow(0.5, k) /
factorial(k)). The first values are:

0:    0.60653066
1:    0.30326533
2:    0.07581633
3:    0.01263606
4:    0.00157952
5:    0.00015795
6:    0.00001316
7:    0.00000094
8:    0.00000006
more: less than 1 in ten million

The root of a tree bin is normally its first node.  However,
sometimes (currently only upon Iterator.remove), the root might
be elsewhere, but can be recovered following parent links
(method TreeNode.root()).

All applicable internal methods accept a hash code as an
argument (as normally supplied from a public method), allowing
them to call each other without recomputing user hashCodes.
Most internal methods also accept a \"tab\" argument, that is
normally the current table, but may be a new or old one when
resizing or converting.

When bin lists are treeified, split, or untreeified, we keep
them in the same relative access/traversal order (i.e., field
Node.next) to better preserve locality, and to slightly
simplify handling of splits and traversals that invoke
iterator.remove. When using comparators on insertion, to keep a
total ordering (or as close as is required here) across
rebalancings, we compare classes and identityHashCodes as
tie-breakers.

The use and transitions among plain vs tree modes is
complicated by the existence of subclass LinkedHashMap. See
below for hook methods defined to be invoked upon insertion,
removal and access that allow LinkedHashMap internals to
otherwise remain independent of these mechanics. (This also
requires that a map instance be passed to some utility methods
that may create new nodes.)

The concurrent-programming-like SSA-based coding style helps
avoid aliasing errors amid all of the twisty pointer operations.


The default initial capacity - MUST be a power of two.

 aka 16"
      end

      attribute 490754 "MAXIMUM_CAPACITY"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1 << 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum capacity, used if a higher value is implicitly specified
by either of the constructors with arguments.
MUST be a power of two <= 1<<30.

"
      end

      attribute 490882 "DEFAULT_LOAD_FACTOR"
	class_attribute const_attribute package explicit_type "float"
	init_value " 0.75f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The load factor used when none specified in constructor.

"
      end

      attribute 491010 "TREEIFY_THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The bin count threshold for using a tree rather than list for a
bin.  Bins are converted to trees when adding an element to a
bin with at least this many nodes. The value must be greater
than 2 and should be at least 8 to mesh with assumptions in
tree removal about conversion back to plain bins upon
shrinkage.

"
      end

      attribute 491138 "UNTREEIFY_THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The bin count threshold for untreeifying a (split) bin during a
resize operation. Should be less than TREEIFY_THRESHOLD, and at
most 6 to mesh with shrinkage detection under removal.

"
      end

      attribute 491266 "MIN_TREEIFY_CAPACITY"
	class_attribute const_attribute package explicit_type "int"
	init_value " 64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The smallest table capacity for which bins may be treeified.
(Otherwise the table is resized if too many nodes in a bin.)
Should be at least 4 * TREEIFY_THRESHOLD to avoid conflicts
between resizing and treeification thresholds.

"
      end

      class 375170 "Node"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 669186 // <realization>
	  relation 669186 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 669186 // <realization>
	    b parent class_ref 192386 // Entry
	end

	attribute 491394 "hash"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 491522 "key"
	  const_attribute package explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 491650 "value"
	  package explicit_type "V"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 669314 // next (<unidirectional association>)
	  relation 669314 --->
	    a role_name "next" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 669314 // next (<unidirectional association>)
	    b parent class_ref 375170 // Node
	end

	operation 2130946 "Node"
	  cpp_inline package explicit_return_type ""
	  nparams 4
	    param in name "hash" explicit_type "int"
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param inout name "next" type class_ref 375170 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K,V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2131074 "getKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2131202 "getValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2131330 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2131458 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2131586 "setValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "newValue" explicit_type "V"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2131714 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2131842 "hash"
	class_operation cpp_inline package explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------- Static utilities -------------- 

Computes key.hashCode() and spreads (XORs) higher bits of hash
to lower.  Because the table uses power-of-two masking, sets of
hashes that vary only in bits above the current mask will
always collide. (Among known examples are sets of Float keys
holding consecutive whole numbers in small tables.)  So we
apply a transform that spreads the impact of higher bits
downward. There is a tradeoff between speed, utility, and
quality of bit-spreading. Because many common sets of hashes
are already reasonably distributed (so don't benefit from
spreading), and because we use trees to handle large sets of
collisions in bins, we just XOR some shifted bits in the
cheapest possible way to reduce systematic lossage, as well as
to incorporate impact of the highest bits that would otherwise
never be used in index calculations because of table bounds.
"
      end

      operation 2131970 "comparableClassFor"
	class_operation cpp_inline package return_type class_ref 130818 // Class
	nparams 1
	  param inout name "x" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns x's Class if it is of the form \"class C implements
Comparable<C>\", else null.
"
      end

      operation 2132098 "compareComparables"
	class_operation cpp_inline package explicit_return_type "int"
	nparams 3
	  param inout name "kc" type class_ref 130818 // Class
	  param inout name "k" type class_ref 129538 // Object
	  param inout name "x" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\",\"unchecked\"})
"
	
	
	
	comment "Returns k.compareTo(x) if x matches kc (k's screened comparable
class), else 0.
"
      end

      operation 2132226 "tableSizeFor"
	class_operation cpp_inline package explicit_return_type "int"
	nparams 1
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a power of two size for the given target capacity.
"
      end

      classrelation 669442 // table (<unidirectional association>)
	relation 669442 --->
	  a role_name "table" multiplicity "[]" package
	    comment " ---------------- Fields -------------- 

The table, initialized on first use, and resized as
necessary. When allocated, length is always a power of two.
(We also tolerate length zero in some operations to allow
bootstrapping mechanics that are currently not needed.)

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V>${multiplicity} ${name}${value};
"
	    classrelation_ref 669442 // table (<unidirectional association>)
	  b parent class_ref 375170 // Node
      end

      classrelation 669570 // entrySet (<unidirectional association>)
	relation 669570 --->
	  a role_name "entrySet" package
	    comment "
Holds cached entrySet(). Note that AbstractMap fields are used
for keySet() and values().

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	    classrelation_ref 669570 // entrySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      attribute 491778 "size"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of key-value mappings contained in this map.

"
      end

      attribute 491906 "modCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of times this HashMap has been structurally modified
Structural modifications are those that change the number of mappings in
the HashMap or otherwise modify its internal structure (e.g.,
rehash).  This field is used to make iterators on Collection-views of
the HashMap fail-fast.  (See ConcurrentModificationException).

"
      end

      attribute 492034 "threshold"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The next size value at which to resize (capacity * load factor).

@serial

 (The javadoc description is true upon serialization.
 Additionally, if the table array has not been allocated, this
 field holds the initial array capacity, or zero signifying
 DEFAULT_INITIAL_CAPACITY.)
"
      end

      attribute 492162 "loadFactor"
	const_attribute package explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The load factor for the hash table.

@serial

"
      end

      operation 2132354 "HashMap"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------- Public operations -------------- 

Constructs an empty <tt>HashMap</tt> with the specified initial
capacity and load factor.

@param  initialCapacity the initial capacity
@param  loadFactor      the load factor
@throws IllegalArgumentException if the initial capacity is negative
        or the load factor is nonpositive
"
      end

      operation 2132482 "HashMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <tt>HashMap</tt> with the specified initial
capacity and the default load factor (0.75).

@param  initialCapacity the initial capacity.
@throws IllegalArgumentException if the initial capacity is negative.
"
      end

      operation 2132610 "HashMap"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <tt>HashMap</tt> with the default initial capacity
(16) and the default load factor (0.75).
"
      end

      operation 2132738 "HashMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <tt>HashMap</tt> with the same mappings as the
specified <tt>Map</tt>.  The <tt>HashMap</tt> is created with
default load factor (0.75) and an initial capacity sufficient to
hold the mappings in the specified <tt>Map</tt>.

@param   m the map whose mappings are to be placed in this map
@throws  NullPointerException if the specified map is null
"
      end

      operation 2132866 "putMapEntries"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "m" type class_ref 130178 // Map
	  param inout name "evict" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements Map.putAll and Map constructor

@param m the map
@param evict false when initially constructing this map, else
true (relayed to method afterNodeInsertion).
"
      end

      operation 2132994 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key-value mappings in this map.

@return the number of key-value mappings in this map
"
      end

      operation 2133122 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains no key-value mappings.

@return <tt>true</tt> if this map contains no key-value mappings
"
      end

      operation 2133250 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code (key==null ? k==null :
key.equals(k))}, then this method returns {@code v}; otherwise
it returns {@code null}.  (There can be at most one such mapping.)

<p>A return value of {@code null} does not <i>necessarily</i>
indicate that the map contains no mapping for the key; it's also
possible that the map explicitly maps the key to {@code null}.
The {@link #containsKey containsKey} operation may be used to
distinguish these two cases.

@see #put(Object, Object)
"
      end

      operation 2133378 "getNode"
	cpp_inline package return_type class_ref 375170 // Node
	nparams 2
	  param in name "hash" explicit_type "int"
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements Map.get and related methods

@param hash hash for key
@param key the key
@return the node, or null if none
"
      end

      operation 2133506 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains a mapping for the
specified key.

@param   key   The key whose presence in this map is to be tested
@return <tt>true</tt> if this map contains a mapping for the specified
key.
"
      end

      operation 2133634 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified key in this map.
If the map previously contained a mapping for the key, the old
value is replaced.

@param key key with which the specified value is to be associated
@param value value to be associated with the specified key
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
        (A <tt>null</tt> return can also indicate that the map
        previously associated <tt>null</tt> with <tt>key</tt>.)
"
      end

      operation 2133762 "putVal"
	cpp_inline package explicit_return_type "V"
	nparams 5
	  param in name "hash" explicit_type "int"
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param inout name "onlyIfAbsent" explicit_type "boolean"
	  param inout name "evict" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements Map.put and related methods

@param hash hash for key
@param key the key
@param value the value to put
@param onlyIfAbsent if true, don't change existing value
@param evict if false, the table is in creation mode.
@return previous value, or null if none
"
      end

      operation 2133890 "resize"
	cpp_inline package return_type class_ref 375170 // Node
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes or doubles table size.  If null, allocates in
accord with initial capacity target held in field threshold.
Otherwise, because we are using power-of-two expansion, the
elements from each bin must either stay at same index, or move
with a power of two offset in the new table.

@return the table
"
      end

      operation 2134018 "treeifyBin"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "tab" type class_ref 375170 // Node
	multiplicity "[]"
	  param in name "hash" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V>[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all linked nodes in bin at index for given hash unless
table is too small, in which case resizes instead.
"
      end

      operation 2134146 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified map to this map.
These mappings will replace any mappings that this map had for
any of the keys currently in the specified map.

@param m mappings to be stored in this map
@throws NullPointerException if the specified map is null
"
      end

      operation 2134274 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping for the specified key from this map if present.

@param  key key whose mapping is to be removed from the map
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
        (A <tt>null</tt> return can also indicate that the map
        previously associated <tt>null</tt> with <tt>key</tt>.)
"
      end

      operation 2134402 "removeNode"
	cpp_inline package return_type class_ref 375170 // Node
	nparams 5
	  param in name "hash" explicit_type "int"
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "matchValue" explicit_type "boolean"
	  param inout name "movable" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements Map.remove and related methods

@param hash hash for key
@param key the key
@param value the value to match if matchValue, else ignored
@param matchValue if true only remove if value is equal
@param movable if false do not move other nodes while removing
@return the node, or null if none
"
      end

      operation 2134530 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the mappings from this map.
The map will be empty after this call returns.
"
      end

      operation 2134658 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map maps one or more keys to the
specified value.

@param value value whose presence in this map is to be tested
@return <tt>true</tt> if this map maps one or more keys to the
        specified value
"
      end

      operation 2134786 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the keys contained in this map.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own <tt>remove</tt> operation), the results of
the iteration are undefined.  The set supports element removal,
which removes the corresponding mapping from the map, via the
<tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
<tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
operations.

@return a set view of the keys contained in this map
"
      end

      class 375298 "KeySet"
	visibility package 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 669698 // <realization>
	  relation 669698 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 669698 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 2134914 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135042 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135170 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135298 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135426 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135554 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135682 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2135810 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.
The collection is backed by the map, so changes to the map are
reflected in the collection, and vice-versa.  If the map is
modified while an iteration over the collection is in progress
(except through the iterator's own <tt>remove</tt> operation),
the results of the iteration are undefined.  The collection
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Collection.remove</tt>, <tt>removeAll</tt>,
<tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
support the <tt>add</tt> or <tt>addAll</tt> operations.

@return a view of the values contained in this map
"
      end

      class 375426 "Values"
	visibility package 
	nactuals 1
	actual class class_ref 184066 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 669826 // <realization>
	  relation 669826 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 669826 // <realization>
	    b parent class_ref 184066 // AbstractCollection
	end

	operation 2135938 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136066 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136194 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136322 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136450 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136578 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2136706 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own <tt>remove</tt> operation, or through the
<tt>setValue</tt> operation on a map entry returned by the
iterator) the results of the iteration are undefined.  The set
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
<tt>clear</tt> operations.  It does not support the
<tt>add</tt> or <tt>addAll</tt> operations.

@return a set view of the mappings contained in this map
"
      end

      class 375554 "EntrySet"
	visibility package 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 669954 // <realization>
	  relation 669954 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 669954 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 2136834 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136962 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2137090 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2137218 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2137346 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2137474 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2137602 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Map.Entry<K,V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2137730 "getOrDefault"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "defaultValue" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Overrides of JDK8 Map extension methods"
      end

      operation 2137858 "putIfAbsent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2137986 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2138114 "replace"
	cpp_inline public explicit_return_type "boolean"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "oldValue" explicit_type "V"
	  param inout name "newValue" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2138242 "replace"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2138370 "computeIfAbsent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "mappingFunction" type class_ref 192770 // Function
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2138498 "computeIfPresent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2138626 "compute"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2138754 "merge"
	cpp_inline public explicit_return_type "V"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2138882 "forEach"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 192514 // BiConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2139010 "replaceAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "function" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2139138 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	
	
	
	comment " ------------------------------------------------------------ 
 Cloning and serialization

Returns a shallow copy of this <tt>HashMap</tt> instance: the keys and
values themselves are not cloned.

@return a shallow copy of this map
"
      end

      operation 2139266 "loadFactor"
	cpp_inline package explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These methods are also used when serializing HashSets"
      end

      operation 2139394 "capacity"
	cpp_inline package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2139522 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the <tt>HashMap</tt> instance to a stream (i.e.,
serialize it).

@serialData The <i>capacity</i> of the HashMap (the length of the
            bucket array) is emitted (int), followed by the
            <i>size</i> (an int, the number of key-value
            mappings), followed by the key (Object) and value (Object)
            for each key-value mapping.  The key-value mappings are
            emitted in no particular order.
"
      end

      operation 2139650 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the {@code HashMap} instance from a stream (i.e.,
deserialize it).
"
      end

      class 375682 "HashIterator"
	abstract visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 670082 // next (<unidirectional association>)
	  relation 670082 --->
	    a role_name "next" package
	      comment " next entry to return"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 670082 // next (<unidirectional association>)
	    b parent class_ref 375170 // Node
	end

	classrelation 670210 // current (<unidirectional association>)
	  relation 670210 --->
	    a role_name "current" package
	      comment " current entry"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 670210 // current (<unidirectional association>)
	    b parent class_ref 375170 // Node
	end

	attribute 492290 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " for fast-fail"
	end

	attribute 492418 "index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current slot"
	end

	operation 2139778 "HashIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2139906 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2140034 "nextNode"
	  cpp_inline package return_type class_ref 375170 // Node
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2140162 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 375810 "KeyIterator"
	visibility package 
	nactuals 3
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 670338 // <generalisation>
	  relation 670338 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 670338 // <generalisation>
	    b parent class_ref 375682 // HashIterator
	end

	classrelation 670466 // <realization>
	  relation 670466 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 670466 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	operation 2140290 "next"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 375938 "ValueIterator"
	visibility package 
	nactuals 3
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 670594 // <generalisation>
	  relation 670594 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 670594 // <generalisation>
	    b parent class_ref 375682 // HashIterator
	end

	classrelation 670722 // <realization>
	  relation 670722 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 670722 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	operation 2140418 "next"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 376066 "EntryIterator"
	visibility package 
	nactuals 3
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 670850 // <generalisation>
	  relation 670850 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 670850 // <generalisation>
	    b parent class_ref 375682 // HashIterator
	end

	classrelation 670978 // <realization>
	  relation 670978 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 670978 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	operation 2140546 "next"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 376194 "HashMapSpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 671106 // map (<unidirectional association>)
	  relation 671106 --->
	    a role_name "map" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 671106 // map (<unidirectional association>)
	    b parent class_ref 132866 // HashMap
	end

	classrelation 671234 // current (<unidirectional association>)
	  relation 671234 --->
	    a role_name "current" package
	      comment " current node"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 671234 // current (<unidirectional association>)
	    b parent class_ref 375170 // Node
	end

	attribute 492546 "index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 492674 "fence"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " one past last index"
	end

	attribute 492802 "est"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 492930 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " for comodification checks"
	end

	operation 2140674 "HashMapSpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "m" type class_ref 132866 // HashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2140802 "getFence"
	  cpp_inline package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2140930 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 376322 "KeySpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 5
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 376194 // HashMapSpliterator
	  rank 0 explicit_value ""
	actual class class_ref 376194 // HashMapSpliterator
	  rank 1 explicit_value ""
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 671362 // <realization>
	  relation 671362 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 671362 // <realization>
	    b parent class_ref 376194 // HashMapSpliterator
	end

	classrelation 672002 // <realization>
	  relation 672002 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 672002 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 2144386 "KeySpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "m" type class_ref 132866 // HashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2144514 "trySplit"
	  cpp_inline public return_type class_ref 376322 // KeySpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2144642 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2144770 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2144898 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 377474 "ValueSpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 5
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 376194 // HashMapSpliterator
	  rank 0 explicit_value ""
	actual class class_ref 376194 // HashMapSpliterator
	  rank 1 explicit_value ""
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 672130 // <realization>
	  relation 672130 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 672130 // <realization>
	    b parent class_ref 376194 // HashMapSpliterator
	end

	classrelation 672258 // <realization>
	  relation 672258 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 672258 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 2145026 "ValueSpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "m" type class_ref 132866 // HashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2145154 "trySplit"
	  cpp_inline public return_type class_ref 377474 // ValueSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2145282 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2145410 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2145538 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 377602 "EntrySpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 5
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 376194 // HashMapSpliterator
	  rank 0 explicit_value ""
	actual class class_ref 376194 // HashMapSpliterator
	  rank 1 explicit_value ""
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 672386 // <realization>
	  relation 672386 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 672386 // <realization>
	    b parent class_ref 376194 // HashMapSpliterator
	end

	classrelation 672514 // <realization>
	  relation 672514 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 672514 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 2145666 "EntrySpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "m" type class_ref 132866 // HashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2145794 "trySplit"
	  cpp_inline public return_type class_ref 377602 // EntrySpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2145922 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Map.Entry<K,V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2146050 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Map.Entry<K,V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2146178 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2146306 "newNode"
	cpp_inline package return_type class_ref 375170 // Node
	nparams 4
	  param in name "hash" explicit_type "int"
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param inout name "next" type class_ref 375170 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K,V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------ 
 LinkedHashMap support

The following package-protected methods are designed to be
overridden by LinkedHashMap, but not by any other subclass.
Nearly all other internal methods are also package-protected
but are declared final, so can be used by LinkedHashMap, view
classes, and HashSet.

 Create a regular (non-tree) node"
      end

      operation 2146434 "replacementNode"
	cpp_inline package return_type class_ref 375170 // Node
	nparams 2
	  param inout name "p" type class_ref 375170 // Node
	  param inout name "next" type class_ref 375170 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For conversion from TreeNodes to plain nodes"
      end

      class 377730 "TreeNode"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 377858 // LinkedHashMap
	  rank 0 explicit_value ""
	actual class class_ref 377858 // LinkedHashMap
	  rank 1 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 672898 // <realization>
	  relation 672898 -_-|>
	    a public
	      java "${type}<K,V>"
	      classrelation_ref 672898 // <realization>
	    b parent class_ref 377986 // Entry
	end

	classrelation 673026 // parent (<unidirectional association>)
	  relation 673026 --->
	    a role_name "parent" package
	      comment " red-black tree links"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 673026 // parent (<unidirectional association>)
	    b parent class_ref 377730 // TreeNode
	end

	classrelation 673154 // left (<unidirectional association>)
	  relation 673154 --->
	    a role_name "left" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 673154 // left (<unidirectional association>)
	    b parent class_ref 377730 // TreeNode
	end

	classrelation 673282 // right (<unidirectional association>)
	  relation 673282 --->
	    a role_name "right" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 673282 // right (<unidirectional association>)
	    b parent class_ref 377730 // TreeNode
	end

	classrelation 673410 // prev (<unidirectional association>)
	  relation 673410 --->
	    a role_name "prev" package
	      comment " needed to unlink next upon deletion"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 673410 // prev (<unidirectional association>)
	    b parent class_ref 377730 // TreeNode
	end

	attribute 494082 "red"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 2147458 "TreeNode"
	  cpp_inline package explicit_return_type ""
	  nparams 4
	    param in name "hash" explicit_type "int"
	    param inout name "key" explicit_type "K"
	    param inout name "val" explicit_type "V"
	    param inout name "next" type class_ref 375170 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K,V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2147586 "root"
	  cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns root of tree containing this node.
"
	end

	operation 2147714 "moveRootToFront"
	  class_operation cpp_inline package explicit_return_type "void"
	  nparams 2
	    param inout name "tab" type class_ref 375170 // Node
	  multiplicity "[]"
	    param inout name "root" type class_ref 377730 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type} ${name}${(}${t0}<K,V>[] ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Ensures that the given root is the first node of its bin.
"
	end

	operation 2147842 "find"
	  cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 3
	    param in name "h" explicit_type "int"
	    param inout name "k" type class_ref 129538 // Object
	    param inout name "kc" type class_ref 130818 // Class
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Finds the node starting at root p with the given hash and key.
The kc argument caches comparableClassFor(key) upon first use
comparing keys.
"
	end

	operation 2147970 "getTreeNode"
	  cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 2
	    param in name "h" explicit_type "int"
	    param inout name "k" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calls find for root node.
"
	end

	operation 2148098 "tieBreakOrder"
	  class_operation cpp_inline package explicit_return_type "int"
	  nparams 2
	    param inout name "a" type class_ref 129538 // Object
	    param inout name "b" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Tie-breaking utility for ordering insertions when equal
hashCodes and non-comparable. We don't require a total
order, just a consistent insertion rule to maintain
equivalence across rebalancings. Tie-breaking further than
necessary simplifies testing a bit.
"
	end

	operation 2148226 "treeify"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "tab" type class_ref 375170 // Node
	  multiplicity "[]"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V>[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Forms tree of the nodes linked from this node.
@return root of tree
"
	end

	operation 2148354 "untreeify"
	  cpp_inline package return_type class_ref 375170 // Node
	  nparams 1
	    param inout name "map" type class_ref 132866 // HashMap
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a list of non-TreeNodes replacing those linked from
this node.
"
	end

	operation 2148482 "putTreeVal"
	  cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 5
	    param inout name "map" type class_ref 132866 // HashMap
	    param inout name "tab" type class_ref 375170 // Node
	  multiplicity "[]"
	    param in name "h" explicit_type "int"
	    param inout name "k" explicit_type "K"
	    param inout name "v" explicit_type "V"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V>[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Tree version of putVal.
"
	end

	operation 2148610 "removeTreeNode"
	  cpp_inline package explicit_return_type "void"
	  nparams 3
	    param inout name "map" type class_ref 132866 // HashMap
	    param inout name "tab" type class_ref 375170 // Node
	  multiplicity "[]"
	    param inout name "movable" explicit_type "boolean"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V>[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the given node, that must be present before this call.
This is messier than typical red-black deletion code because we
cannot swap the contents of an interior node with a leaf
successor that is pinned by \"next\" pointers that are accessible
independently during traversal. So instead we swap the tree
linkages. If the current tree appears to have too few nodes,
the bin is converted back to a plain bin. (The test triggers
somewhere between 2 and 6 nodes, depending on tree structure).
"
	end

	operation 2148738 "split"
	  cpp_inline package explicit_return_type "void"
	  nparams 4
	    param inout name "map" type class_ref 132866 // HashMap
	    param inout name "tab" type class_ref 375170 // Node
	  multiplicity "[]"
	    param in name "index" explicit_type "int"
	    param in name "bit" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V>[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Splits nodes in a tree bin into lower and upper tree bins,
or untreeifies if now too small. Called only from resize;
see above discussion about split bits and indices.

@param map the map
@param tab the table for recording bin heads
@param index the index of the table being split
@param bit the bit of hash to split on
"
	end

	operation 2148866 "rotateLeft"
	  class_operation cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 2
	    param inout name "root" type class_ref 377730 // TreeNode
	    param inout name "p" type class_ref 377730 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ------------------------------------------------------------ 
 Red-black tree methods, all adapted from CLR"
	end

	operation 2148994 "rotateRight"
	  class_operation cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 2
	    param inout name "root" type class_ref 377730 // TreeNode
	    param inout name "p" type class_ref 377730 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2149122 "balanceInsertion"
	  class_operation cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 2
	    param inout name "root" type class_ref 377730 // TreeNode
	    param inout name "x" type class_ref 377730 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2149250 "balanceDeletion"
	  class_operation cpp_inline package return_type class_ref 377730 // TreeNode
	  nparams 2
	    param inout name "root" type class_ref 377730 // TreeNode
	    param inout name "x" type class_ref 377730 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2149378 "checkInvariants"
	  class_operation cpp_inline package explicit_return_type "boolean"
	  nparams 1
	    param inout name "t" type class_ref 377730 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type} ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recursive invariant check
"
	end
      end

      operation 2146562 "newTreeNode"
	cpp_inline package return_type class_ref 377730 // TreeNode
	nparams 4
	  param in name "hash" explicit_type "int"
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param inout name "next" type class_ref 375170 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K,V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create a tree bin node"
      end

      operation 2146690 "replacementTreeNode"
	cpp_inline package return_type class_ref 377730 // TreeNode
	nparams 2
	  param inout name "p" type class_ref 375170 // Node
	  param inout name "next" type class_ref 375170 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For treeifyBin"
      end

      operation 2146818 "reinitialize"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset to initial default state.  Called by clone and readObject.
"
      end

      operation 2146946 "afterNodeAccess"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 375170 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callbacks to allow LinkedHashMap post-actions"
      end

      operation 2147074 "afterNodeInsertion"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "evict" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2147202 "afterNodeRemoval"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 375170 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2147330 "internalWriteEntries"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called only from writeObject, to ensure compatible ordering."
      end
    end

    class 132994 "Iterator"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An iterator over a collection.  {@code Iterator} takes the place of
{@link Enumeration} in the Java Collections Framework.  Iterators
differ from enumerations in two ways:

<ul>
     <li> Iterators allow the caller to remove elements from the
          underlying collection during the iteration with well-defined
          semantics.
     <li> Method names have been improved.
</ul>

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements returned by this iterator

@author  Josh Bloch
@see Collection
@see ListIterator
@see Iterable
@since 1.2
"
      operation 326658 "hasNext"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the iteration has more elements.
(In other words, returns {@code true} if {@link #next} would
return an element rather than throwing an exception.)

@return {@code true} if the iteration has more elements
"
      end

      operation 326786 "next"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next element in the iteration.

@return the next element in the iteration
@throws NoSuchElementException if the iteration has no more elements
"
      end

      operation 326914 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from the underlying collection the last element returned
by this iterator (optional operation).  This method can be called
only once per call to {@link #next}.  The behavior of an iterator
is unspecified if the underlying collection is modified while the
iteration is in progress in any way other than by calling this
method.

@implSpec
The default implementation throws an instance of
{@link UnsupportedOperationException} and performs no other action.

@throws UnsupportedOperationException if the {@code remove}
        operation is not supported by this iterator

@throws IllegalStateException if the {@code next} method has not
        yet been called, or the {@code remove} method has already
        been called after the last call to the {@code next}
        method
"
      end

      operation 327042 "forEachRemaining"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 163458 // Consumer
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the given action for each remaining element until all elements
have been processed or the action throws an exception.  Actions are
performed in the order of iteration, if that order is specified.
Exceptions thrown by the action are relayed to the caller.

@implSpec
<p>The default implementation behaves as if:
<pre>{@code
    while (hasNext())
        action.accept(next());
}</pre>

@param action The action to be performed for each element
@throws NullPointerException if the specified action is null
@since 1.8
"
      end
    end

    class 137090 "Hashtable"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 275970 // Dictionary
        rank 0 explicit_value ""
      actual class class_ref 275970 // Dictionary
        rank 1 explicit_value ""
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a hash table, which maps keys to values. Any
non-<code>null</code> object can be used as a key or as a value. <p>

To successfully store and retrieve objects from a hashtable, the
objects used as keys must implement the <code>hashCode</code>
method and the <code>equals</code> method. <p>

An instance of <code>Hashtable</code> has two parameters that affect its
performance: <i>initial capacity</i> and <i>load factor</i>.  The
<i>capacity</i> is the number of <i>buckets</i> in the hash table, and the
<i>initial capacity</i> is simply the capacity at the time the hash table
is created.  Note that the hash table is <i>open</i>: in the case of a \"hash
collision\", a single bucket stores multiple entries, which must be searched
sequentially.  The <i>load factor</i> is a measure of how full the hash
table is allowed to get before its capacity is automatically increased.
The initial capacity and load factor parameters are merely hints to
the implementation.  The exact details as to when and whether the rehash
method is invoked are implementation-dependent.<p>

Generally, the default load factor (.75) offers a good tradeoff between
time and space costs.  Higher values decrease the space overhead but
increase the time cost to look up an entry (which is reflected in most
<tt>Hashtable</tt> operations, including <tt>get</tt> and <tt>put</tt>).<p>

The initial capacity controls a tradeoff between wasted space and the
need for <code>rehash</code> operations, which are time-consuming.
No <code>rehash</code> operations will <i>ever</i> occur if the initial
capacity is greater than the maximum number of entries the
<tt>Hashtable</tt> will contain divided by its load factor.  However,
setting the initial capacity too high can waste space.<p>

If many entries are to be made into a <code>Hashtable</code>,
creating it with a sufficiently large capacity may allow the
entries to be inserted more efficiently than letting it perform
automatic rehashing as needed to grow the table. <p>

This example creates a hashtable of numbers. It uses the names of
the numbers as keys:
<pre>   {@code
  Hashtable<String, Integer> numbers
    = new Hashtable<String, Integer>();
  numbers.put(\"one\", 1);
  numbers.put(\"two\", 2);
  numbers.put(\"three\", 3);}</pre>

<p>To retrieve a number, use the following code:
<pre>   {@code
  Integer n = numbers.get(\"two\");
  if (n != null) {
    System.out.println(\"two = \" + n);
  }}</pre>

<p>The iterators returned by the <tt>iterator</tt> method of the collections
returned by all of this class's \"collection view methods\" are
<em>fail-fast</em>: if the Hashtable is structurally modified at any time
after the iterator is created, in any way except through the iterator's own
<tt>remove</tt> method, the iterator will throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the future.
The Enumerations returned by Hashtable's keys and elements methods are
<em>not</em> fail-fast.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>As of the Java 2 platform v1.2, this class was retrofitted to
implement the {@link Map} interface, making it a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">

Java Collections Framework</a>.  Unlike the new collection
implementations, {@code Hashtable} is synchronized.  If a
thread-safe implementation is not needed, it is recommended to use
{@link HashMap} in place of {@code Hashtable}.  If a thread-safe
highly-concurrent implementation is desired, then it is recommended
to use {@link java.util.concurrent.ConcurrentHashMap} in place of
{@code Hashtable}.

@author  Arthur van Hoff
@author  Josh Bloch
@author  Neal Gafter
@see     Object#equals(java.lang.Object)
@see     Object#hashCode()
@see     Hashtable#rehash()
@see     Collection
@see     Map
@see     HashMap
@see     TreeMap
@since JDK1.0
"
      classrelation 434306 // <realization>
	relation 434306 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 434306 // <realization>
	  b parent class_ref 275970 // Dictionary
      end

      classrelation 434434 // <realization>
	relation 434434 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 434434 // <realization>
	  b parent class_ref 130178 // Map
      end

      classrelation 434562 // <realization>
	relation 434562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 434562 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 434690 // <realization>
	relation 434690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 434690 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 434818 // table (<unidirectional association>)
	relation 434818 --->
	  a role_name "table" multiplicity "[]" private
	    comment "
The hash table data.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?,?>${multiplicity} ${name}${value};
"
	    classrelation_ref 434818 // table (<unidirectional association>)
	  b parent class_ref 192386 // Entry
      end

      attribute 334082 "count"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The total number of entries in the hash table.

"
      end

      attribute 334210 "threshold"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The table is rehashed when its size exceeds this threshold.  (The
value of this field is (int)(capacity * loadFactor).)

@serial

"
      end

      attribute 334338 "loadFactor"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The load factor for the hashtable.

@serial

"
      end

      attribute 334466 "modCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of times this Hashtable has been structurally modified
Structural modifications are those that change the number of entries in
the Hashtable or otherwise modify its internal structure (e.g.,
rehash).  This field is used to make iterators on Collection-views of
the Hashtable fail-fast.  (See ConcurrentModificationException).

"
      end

      attribute 334594 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1421746759512286392L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      operation 1466754 "Hashtable"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty hashtable with the specified initial
capacity and the specified load factor.

@param      initialCapacity   the initial capacity of the hashtable.
@param      loadFactor        the load factor of the hashtable.
@exception  IllegalArgumentException  if the initial capacity is less
            than zero, or if the load factor is nonpositive.
"
      end

      operation 1466882 "Hashtable"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty hashtable with the specified initial capacity
and default load factor (0.75).

@param     initialCapacity   the initial capacity of the hashtable.
@exception IllegalArgumentException if the initial capacity is less
             than zero.
"
      end

      operation 1467010 "Hashtable"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty hashtable with a default initial capacity (11)
and load factor (0.75).
"
      end

      operation 1467138 "Hashtable"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "t" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new hashtable with the same mappings as the given
Map.  The hashtable is created with an initial capacity sufficient to
hold the mappings in the given Map and a default load factor (0.75).

@param t the map whose mappings are to be placed in this map.
@throws NullPointerException if the specified map is null.
@since   1.2
"
      end

      operation 1467266 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of keys in this hashtable.

@return  the number of keys in this hashtable.
"
      end

      operation 1467394 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this hashtable maps no keys to values.

@return  <code>true</code> if this hashtable maps no keys to values;
         <code>false</code> otherwise.
"
      end

      operation 1467522 "keys"
	cpp_inline public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the keys in this hashtable.

@return  an enumeration of the keys in this hashtable.
@see     Enumeration
@see     #elements()
@see     #keySet()
@see     Map
"
      end

      operation 1467650 "elements"
	cpp_inline public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the values in this hashtable.
Use the Enumeration methods on the returned object to fetch the elements
sequentially.

@return  an enumeration of the values in this hashtable.
@see     java.util.Enumeration
@see     #keys()
@see     #values()
@see     Map
"
      end

      operation 1467778 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if some key maps into the specified value in this hashtable.
This operation is more expensive than the {@link #containsKey
containsKey} method.

<p>Note that this method is identical in functionality to
{@link #containsValue containsValue}, (which is part of the
{@link Map} interface in the collections framework).

@param      value   a value to search for
@return     <code>true</code> if and only if some key maps to the
            <code>value</code> argument in this hashtable as
            determined by the <tt>equals</tt> method;
            <code>false</code> otherwise.
@exception  NullPointerException  if the value is <code>null</code>
"
      end

      operation 1467906 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this hashtable maps one or more keys to this value.

<p>Note that this method is identical in functionality to {@link
#contains contains} (which predates the {@link Map} interface).

@param value value whose presence in this hashtable is to be tested
@return <tt>true</tt> if this map maps one or more keys to the
        specified value
@throws NullPointerException  if the value is <code>null</code>
@since 1.2
"
      end

      operation 1468034 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the specified object is a key in this hashtable.

@param   key   possible key
@return  <code>true</code> if and only if the specified object
         is a key in this hashtable, as determined by the
         <tt>equals</tt> method; <code>false</code> otherwise.
@throws  NullPointerException  if the key is <code>null</code>
@see     #contains(Object)
"
      end

      operation 1468162 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code (key.equals(k))},
then this method returns {@code v}; otherwise it returns
{@code null}.  (There can be at most one such mapping.)

@param key the key whose associated value is to be returned
@return the value to which the specified key is mapped, or
        {@code null} if this map contains no mapping for the key
@throws NullPointerException if the specified key is null
@see     #put(Object, Object)
"
      end

      attribute 334722 "MAX_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE - 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size of array to allocate.
Some VMs reserve some header words in an array.
Attempts to allocate larger arrays may result in
OutOfMemoryError: Requested array size exceeds VM limit

"
      end

      operation 1468290 "rehash"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Increases the capacity of and internally reorganizes this
hashtable, in order to accommodate and access its entries more
efficiently.  This method is called automatically when the
number of keys in the hashtable exceeds this hashtable's capacity
and load factor.
"
      end

      operation 1468418 "addEntry"
	cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "hash" explicit_type "int"
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1468546 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps the specified <code>key</code> to the specified
<code>value</code> in this hashtable. Neither the key nor the
value can be <code>null</code>. <p>

The value can be retrieved by calling the <code>get</code> method
with a key that is equal to the original key.

@param      key     the hashtable key
@param      value   the value
@return     the previous value of the specified key in this hashtable,
            or <code>null</code> if it did not have one
@exception  NullPointerException  if the key or value is
              <code>null</code>
@see     Object#equals(Object)
@see     #get(Object)
"
      end

      operation 1468674 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the key (and its corresponding value) from this
hashtable. This method does nothing if the key is not in the hashtable.

@param   key   the key that needs to be removed
@return  the value to which the key had been mapped in this hashtable,
         or <code>null</code> if the key did not have a mapping
@throws  NullPointerException  if the key is <code>null</code>
"
      end

      operation 1468802 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 130178 // Map
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified map to this hashtable.
These mappings will replace any mappings that this hashtable had for any
of the keys currently in the specified map.

@param t mappings to be stored in this map
@throws NullPointerException if the specified map is null
@since 1.2
"
      end

      operation 1468930 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears this hashtable so that it contains no keys.
"
      end

      operation 1469058 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a shallow copy of this hashtable. All the structure of the
hashtable itself is copied, but the keys and values are not cloned.
This is a relatively expensive operation.

@return  a clone of the hashtable
"
      end

      operation 1469186 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <tt>Hashtable</tt> object
in the form of a set of entries, enclosed in braces and separated
by the ASCII characters \"<tt>,&nbsp;</tt>\" (comma and space). Each
entry is rendered as the key, an equals sign <tt>=</tt>, and the
associated element, where the <tt>toString</tt> method is used to
convert the key and element to strings.

@return  a string representation of this hashtable
"
      end

      operation 1469314 "getEnumeration"
	cpp_inline private return_type class_ref 185986 // Enumeration
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1469442 "getIterator"
	cpp_inline private return_type class_ref 132994 // Iterator
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 434946 // keySet (<unidirectional association>)
	relation 434946 --->
	  a role_name "keySet" volatile private
	    comment " Views

Each of these fields are initialized to contain an instance of the
appropriate view the first time this view is requested.  The views are
stateless, so there's no reason to create more than one of each.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 434946 // keySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 435074 // entrySet (<unidirectional association>)
	relation 435074 --->
	  a role_name "entrySet" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	    classrelation_ref 435074 // entrySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 435202 // values (<unidirectional association>)
	relation 435202 --->
	  a role_name "values" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	    classrelation_ref 435202 // values (<unidirectional association>)
	  b parent class_ref 184194 // Collection
      end

      operation 1469570 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the keys contained in this map.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own <tt>remove</tt> operation), the results of
the iteration are undefined.  The set supports element removal,
which removes the corresponding mapping from the map, via the
<tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
<tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>
operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>
operations.

@since 1.2
"
      end

      class 277378 "KeySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 435330 // <realization>
	  relation 435330 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 435330 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 1469698 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1469826 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1469954 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1470082 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1470210 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1470338 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own <tt>remove</tt> operation, or through the
<tt>setValue</tt> operation on a map entry returned by the
iterator) the results of the iteration are undefined.  The set
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and
<tt>clear</tt> operations.  It does not support the
<tt>add</tt> or <tt>addAll</tt> operations.

@since 1.2
"
      end

      class 277506 "EntrySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 435458 // <realization>
	  relation 435458 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 435458 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 1470466 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1470594 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1470722 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1470850 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1470978 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1471106 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1471234 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.
The collection is backed by the map, so changes to the map are
reflected in the collection, and vice-versa.  If the map is
modified while an iteration over the collection is in progress
(except through the iterator's own <tt>remove</tt> operation),
the results of the iteration are undefined.  The collection
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Collection.remove</tt>, <tt>removeAll</tt>,
<tt>retainAll</tt> and <tt>clear</tt> operations.  It does not
support the <tt>add</tt> or <tt>addAll</tt> operations.

@since 1.2
"
      end

      class 277634 "ValueCollection"
	visibility private 
	nactuals 1
	actual class class_ref 184066 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 435586 // <realization>
	  relation 435586 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 435586 // <realization>
	    b parent class_ref 184066 // AbstractCollection
	end

	operation 1471362 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1471490 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1471618 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1471746 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1471874 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified Object with this Map for equality,
as per the definition in the Map interface.

@param  o object to be compared for equality with this hashtable
@return true if the specified Object is equal to this Map
@see Map#equals(Object)
@since 1.2
"
      end

      operation 1472002 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this Map as per the definition in the
Map interface.

@see Map#hashCode()
@since 1.2
"
      end

      operation 1472130 "getOrDefault"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "defaultValue" explicit_type "V"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1472258 "forEach"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 192514 // BiConsumer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	
	
	
      end

      operation 1472386 "replaceAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "function" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	
	
	
      end

      operation 1472514 "putIfAbsent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1472642 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1472770 "replace"
	cpp_inline public explicit_return_type "boolean"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "oldValue" explicit_type "V"
	  param inout name "newValue" explicit_type "V"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1472898 "replace"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1473026 "computeIfAbsent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "mappingFunction" type class_ref 192770 // Function
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1473154 "computeIfPresent"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1473282 "compute"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1473410 "merge"
	cpp_inline public explicit_return_type "V"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param inout name "remappingFunction" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1473538 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the Hashtable to a stream (i.e., serialize it).

@serialData The <i>capacity</i> of the Hashtable (the length of the
            bucket array) is emitted (int), followed by the
            <i>size</i> of the Hashtable (the number of key-value
            mappings), followed by the key (Object) and value (Object)
            for each key-value mapping represented by the Hashtable
            The key-value mappings are emitted in no particular order.
"
      end

      operation 1473666 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the Hashtable from a stream (i.e., deserialize it).
"
      end

      operation 1473794 "reconstitutionPut"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param inout name "tab" type class_ref 192386 // Entry
	multiplicity "[]"
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	nexceptions 1
	  exception class_ref 171778 // StreamCorruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?>[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The put method used by readObject. This is provided because put
is overridable and should not be called in readObject since the
subclass will not yet be initialized.

<p>This differs from the regular put method in several ways. No
checking for rehashing is necessary since the number of elements
initially in the table is known. The modCount is not incremented and
there's no synchronization because we are creating a new instance.
Also, no return value is needed.
"
      end
    end

    class 141442 "Vector"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 183938 // AbstractList
        rank 0 explicit_value ""
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Vector} class implements a growable array of
objects. Like an array, it contains components that can be
accessed using an integer index. However, the size of a
{@code Vector} can grow or shrink as needed to accommodate
adding and removing items after the {@code Vector} has been created.

<p>Each vector tries to optimize storage management by maintaining a
{@code capacity} and a {@code capacityIncrement}. The
{@code capacity} is always at least as large as the vector
size; it is usually larger because as components are added to the
vector, the vector's storage increases in chunks the size of
{@code capacityIncrement}. An application can increase the
capacity of a vector before inserting a large number of
components; this reduces the amount of incremental reallocation.

<p><a name=\"fail-fast\">
The iterators returned by this class's {@link #iterator() iterator} and
{@link #listIterator(int) listIterator} methods are <em>fail-fast</em></a>:
if the vector is structurally modified at any time after the iterator is
created, in any way except through the iterator's own
{@link ListIterator#remove() remove} or
{@link ListIterator#add(Object) add} methods, the iterator will throw a
{@link ConcurrentModificationException}.  Thus, in the face of
concurrent modification, the iterator fails quickly and cleanly, rather
than risking arbitrary, non-deterministic behavior at an undetermined
time in the future.  The {@link Enumeration Enumerations} returned by
the {@link #elements() elements} method are <em>not</em> fail-fast.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:  <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>As of the Java 2 platform v1.2, this class was retrofitted to
implement the {@link List} interface, making it a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.  Unlike the new collection
implementations, {@code Vector} is synchronized.  If a thread-safe
implementation is not needed, it is recommended to use {@link
ArrayList} in place of {@code Vector}.

@author  Lee Boynton
@author  Jonathan Payne
@see Collection
@see LinkedList
@since   JDK1.0
"
      classrelation 212610 // <realization>
	relation 212610 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 212610 // <realization>
	  b parent class_ref 183938 // AbstractList
      end

      classrelation 212738 // <realization>
	relation 212738 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 212738 // <realization>
	  b parent class_ref 175362 // List
      end

      classrelation 212866 // <realization>
	relation 212866 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 212866 // <realization>
	  b parent class_ref 185730 // RandomAccess
      end

      classrelation 212994 // <realization>
	relation 212994 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 212994 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 213122 // <realization>
	relation 213122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 213122 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 213250 // elementData (<unidirectional association>)
	relation 213250 --->
	  a role_name "elementData" multiplicity "[]" protected
	    comment "
The array buffer into which the components of the vector are
stored. The capacity of the vector is the length of this array buffer,
and is at least large enough to contain all the vector's elements.

<p>Any array elements following the last element in the Vector are null.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 213250 // elementData (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 178306 "elementCount"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of valid components in this {@code Vector} object.
Components {@code elementData[0]} through
{@code elementData[elementCount-1]} are the actual items.

@serial

"
      end

      attribute 178434 "capacityIncrement"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount by which the capacity of the vector is automatically
incremented when its size becomes greater than its capacity.  If
the capacity increment is less than or equal to zero, the capacity
of the vector is doubled each time it needs to grow.

@serial

"
      end

      attribute 178562 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2767605614048989439L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      operation 529026 "Vector"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "capacityIncrement" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty vector with the specified initial capacity and
capacity increment.

@param   initialCapacity     the initial capacity of the vector
@param   capacityIncrement   the amount by which the capacity is
                             increased when the vector overflows
@throws IllegalArgumentException if the specified initial capacity
        is negative
"
      end

      operation 529154 "Vector"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty vector with the specified initial capacity and
with its capacity increment equal to zero.

@param   initialCapacity   the initial capacity of the vector
@throws IllegalArgumentException if the specified initial capacity
        is negative
"
      end

      operation 529282 "Vector"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty vector so that its internal data array
has size {@code 10} and its standard capacity increment is
zero.
"
      end

      operation 529410 "Vector"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a vector containing the elements of the specified
collection, in the order they are returned by the collection's
iterator.

@param c the collection whose elements are to be placed into this
      vector
@throws NullPointerException if the specified collection is null
@since   1.2
"
      end

      operation 529538 "copyInto"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anArray" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the components of this vector into the specified array.
The item at index {@code k} in this vector is copied into
component {@code k} of {@code anArray}.

@param  anArray the array into which the components get copied
@throws NullPointerException if the given array is null
@throws IndexOutOfBoundsException if the specified array is not
        large enough to hold all the components of this vector
@throws ArrayStoreException if a component of this vector is not of
        a runtime type that can be stored in the specified array
@see #toArray(Object[])
"
      end

      operation 529666 "trimToSize"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Trims the capacity of this vector to be the vector's current
size. If the capacity of this vector is larger than its current
size, then the capacity is changed to equal the size by replacing
its internal data array, kept in the field {@code elementData},
with a smaller one. An application can use this operation to
minimize the storage of a vector.
"
      end

      operation 529794 "ensureCapacity"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity of this vector, if necessary, to ensure
that it can hold at least the number of components specified by
the minimum capacity argument.

<p>If the current capacity of this vector is less than
{@code minCapacity}, then its capacity is increased by replacing its
internal data array, kept in the field {@code elementData}, with a
larger one.  The size of the new data array will be the old size plus
{@code capacityIncrement}, unless the value of
{@code capacityIncrement} is less than or equal to zero, in which case
the new capacity will be twice the old capacity; but if this new size
is still smaller than {@code minCapacity}, then the new capacity will
be {@code minCapacity}.

@param minCapacity the desired minimum capacity
"
      end

      operation 529922 "ensureCapacityHelper"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This implements the unsynchronized semantics of ensureCapacity.
Synchronized methods in this class can internally call this
method for ensuring capacity without incurring the cost of an
extra synchronization.

@see #ensureCapacity(int)
"
      end

      attribute 178690 "MAX_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE - 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size of array to allocate.
Some VMs reserve some header words in an array.
Attempts to allocate larger arrays may result in
OutOfMemoryError: Requested array size exceeds VM limit

"
      end

      operation 530050 "grow"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 530178 "hugeCapacity"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 530306 "setSize"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "newSize" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this vector. If the new size is greater than the
current size, new {@code null} items are added to the end of
the vector. If the new size is less than the current size, all
components at index {@code newSize} and greater are discarded.

@param  newSize   the new size of this vector
@throws ArrayIndexOutOfBoundsException if the new size is negative
"
      end

      operation 530434 "capacity"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current capacity of this vector.

@return  the current capacity (the length of its internal
         data array, kept in the field {@code elementData}
         of this vector)
"
      end

      operation 530562 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of components in this vector.

@return  the number of components in this vector
"
      end

      operation 530690 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this vector has no components.

@return  {@code true} if and only if this vector has
         no components, that is, its size is zero;
         {@code false} otherwise.
"
      end

      operation 530818 "elements"
	cpp_inline public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the components of this vector. The
returned {@code Enumeration} object will generate all items in
this vector. The first item generated is the item at index {@code 0},
then the item at index {@code 1}, and so on.

@return  an enumeration of the components of this vector
@see     Iterator
"
      end

      operation 530946 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this vector contains the specified element.
More formally, returns {@code true} if and only if this vector
contains at least one element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this vector is to be tested
@return {@code true} if this vector contains the specified element
"
      end

      operation 531074 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first occurrence of the specified element
in this vector, or -1 if this vector does not contain the element.
More formally, returns the lowest index {@code i} such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.

@param o element to search for
@return the index of the first occurrence of the specified element in
        this vector, or -1 if this vector does not contain the element
"
      end

      operation 531202 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "o" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first occurrence of the specified element in
this vector, searching forwards from {@code index}, or returns -1 if
the element is not found.
More formally, returns the lowest index {@code i} such that
<tt>(i&nbsp;&gt;=&nbsp;index&nbsp;&amp;&amp;&nbsp;(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))))</tt>,
or -1 if there is no such index.

@param o element to search for
@param index index to start searching from
@return the index of the first occurrence of the element in
        this vector at position {@code index} or later in the vector;
        {@code -1} if the element is not found.
@throws IndexOutOfBoundsException if the specified index is negative
@see     Object#equals(Object)
"
      end

      operation 531330 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last occurrence of the specified element
in this vector, or -1 if this vector does not contain the element.
More formally, returns the highest index {@code i} such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.

@param o element to search for
@return the index of the last occurrence of the specified element in
        this vector, or -1 if this vector does not contain the element
"
      end

      operation 531458 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "o" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last occurrence of the specified element in
this vector, searching backwards from {@code index}, or returns -1 if
the element is not found.
More formally, returns the highest index {@code i} such that
<tt>(i&nbsp;&lt;=&nbsp;index&nbsp;&amp;&amp;&nbsp;(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))))</tt>,
or -1 if there is no such index.

@param o element to search for
@param index index to start searching backwards from
@return the index of the last occurrence of the element at position
        less than or equal to {@code index} in this vector;
        -1 if the element is not found.
@throws IndexOutOfBoundsException if the specified index is greater
        than or equal to the current size of this vector
"
      end

      operation 531586 "elementAt"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at the specified index.

<p>This method is identical in functionality to the {@link #get(int)}
method (which is part of the {@link List} interface).

@param      index   an index into this vector
@return     the component at the specified index
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index >= size()})
"
      end

      operation 531714 "firstElement"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first component (the item at index {@code 0}) of
this vector.

@return     the first component of this vector
@throws NoSuchElementException if this vector has no components
"
      end

      operation 531842 "lastElement"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last component of the vector.

@return  the last component of the vector, i.e., the component at index
         <code>size()&nbsp;-&nbsp;1</code>.
@throws NoSuchElementException if this vector is empty
"
      end

      operation 531970 "setElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "obj" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified {@code index} of this
vector to be the specified object. The previous component at that
position is discarded.

<p>The index must be a value greater than or equal to {@code 0}
and less than the current size of the vector.

<p>This method is identical in functionality to the
{@link #set(int, Object) set(int, E)}
method (which is part of the {@link List} interface). Note that the
{@code set} method reverses the order of the parameters, to more closely
match array usage.  Note also that the {@code set} method returns the
old value that was stored at the specified position.

@param      obj     what the component is to be set to
@param      index   the specified index
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index >= size()})
"
      end

      operation 532098 "removeElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
{@code index} is shifted downward to have an index one
smaller than the value it had previously. The size of this vector
is decreased by {@code 1}.

<p>The index must be a value greater than or equal to {@code 0}
and less than the current size of the vector.

<p>This method is identical in functionality to the {@link #remove(int)}
method (which is part of the {@link List} interface).  Note that the
{@code remove} method returns the old value that was stored at the
specified position.

@param      index   the index of the object to remove
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index >= size()})
"
      end

      operation 532226 "insertElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "obj" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified object as a component in this vector at the
specified {@code index}. Each component in this vector with
an index greater or equal to the specified {@code index} is
shifted upward to have an index one greater than the value it had
previously.

<p>The index must be a value greater than or equal to {@code 0}
and less than or equal to the current size of the vector. (If the
index is equal to the current size of the vector, the new element
is appended to the Vector.)

<p>This method is identical in functionality to the
{@link #add(int, Object) add(int, E)}
method (which is part of the {@link List} interface).  Note that the
{@code add} method reverses the order of the parameters, to more closely
match array usage.

@param      obj     the component to insert
@param      index   where to insert the new component
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index > size()})
"
      end

      operation 532354 "addElement"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "obj" explicit_type "E"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the end of this vector,
increasing its size by one. The capacity of this vector is
increased if its size becomes greater than its capacity.

<p>This method is identical in functionality to the
{@link #add(Object) add(E)}
method (which is part of the {@link List} interface).

@param   obj   the component to be added
"
      end

      operation 532482 "removeElement"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first (lowest-indexed) occurrence of the argument
from this vector. If the object is found in this vector, each
component in the vector with an index greater or equal to the
object's index is shifted downward to have an index one smaller
than the value it had previously.

<p>This method is identical in functionality to the
{@link #remove(Object)} method (which is part of the
{@link List} interface).

@param   obj   the component to be removed
@return  {@code true} if the argument was a component of this
         vector; {@code false} otherwise.
"
      end

      operation 532610 "removeAllElements"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all components from this vector and sets its size to zero.

<p>This method is identical in functionality to the {@link #clear}
method (which is part of the {@link List} interface).
"
      end

      operation 532738 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this vector. The copy will contain a
reference to a clone of the internal data array, not a reference
to the original internal data array of this {@code Vector} object.

@return  a clone of this vector
"
      end

      operation 532866 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this Vector
in the correct order.

@since 1.2
"
      end

      operation 532994 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all of the elements in this Vector in the
correct order; the runtime type of the returned array is that of the
specified array.  If the Vector fits in the specified array, it is
returned therein.  Otherwise, a new array is allocated with the runtime
type of the specified array and the size of this Vector.

<p>If the Vector fits in the specified array with room to spare
(i.e., the array has more elements than the Vector),
the element in the array immediately following the end of the
Vector is set to null.  (This is useful in determining the length
of the Vector <em>only</em> if the caller knows that the Vector
does not contain any null elements.)

@param a the array into which the elements of the Vector are to
         be stored, if it is big enough; otherwise, a new array of the
         same runtime type is allocated for this purpose.
@return an array containing the elements of the Vector
@throws ArrayStoreException if the runtime type of a is not a supertype
of the runtime type of every element in this Vector
@throws NullPointerException if the given array is null
@since 1.2
"
      end

      operation 533122 "elementData"
	cpp_inline package explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Positional Access Operations"
      end

      operation 533250 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element at the specified position in this Vector.

@param index index of the element to return
@return object at the specified index
@throws ArrayIndexOutOfBoundsException if the index is out of range
           ({@code index < 0 || index >= size()})
@since 1.2
"
      end

      operation 533378 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified position in this Vector with the
specified element.

@param index index of the element to replace
@param element element to be stored at the specified position
@return the element previously at the specified position
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index >= size()})
@since 1.2
"
      end

      operation 533506 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified element to the end of this Vector.

@param e element to be appended to this Vector
@return {@code true} (as specified by {@link Collection#add})
@since 1.2
"
      end

      operation 533634 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element in this Vector
If the Vector does not contain the element, it is unchanged.  More
formally, removes the element with the lowest index i such that
{@code (o==null ? get(i)==null : o.equals(get(i)))} (if such
an element exists).

@param o element to be removed from this Vector, if present
@return true if the Vector contained the specified element
@since 1.2
"
      end

      operation 533762 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the specified position in this Vector.
Shifts the element currently at that position (if any) and any
subsequent elements to the right (adds one to their indices).

@param index index at which the specified element is to be inserted
@param element element to be inserted
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index > size()})
@since 1.2
"
      end

      operation 533890 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in this Vector.
Shifts any subsequent elements to the left (subtracts one from their
indices).  Returns the element that was removed from the Vector.

@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index >= size()})
@param index the index of the element to be removed
@return element that was removed
@since 1.2
"
      end

      operation 534018 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this Vector.  The Vector will
be empty after this call returns (unless it throws an exception).

@since 1.2
"
      end

      operation 534146 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Returns true if this Vector contains all of the elements in the
specified Collection.

@param   c a collection whose elements will be tested for containment
         in this Vector
@return true if this Vector contains all of the elements in the
        specified collection
@throws NullPointerException if the specified collection is null
"
      end

      operation 534274 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends all of the elements in the specified Collection to the end of
this Vector, in the order that they are returned by the specified
Collection's Iterator.  The behavior of this operation is undefined if
the specified Collection is modified while the operation is in progress.
(This implies that the behavior of this call is undefined if the
specified Collection is this Vector, and this Vector is nonempty.)

@param c elements to be inserted into this Vector
@return {@code true} if this Vector changed as a result of the call
@throws NullPointerException if the specified collection is null
@since 1.2
"
      end

      operation 534402 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this Vector all of its elements that are contained in the
specified Collection.

@param c a collection of elements to be removed from the Vector
@return true if this Vector changed as a result of the call
@throws ClassCastException if the types of one or more elements
        in this vector are incompatible with the specified
        collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this vector contains one or more null
        elements and the specified collection does not support null
        elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@since 1.2
"
      end

      operation 534530 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this Vector that are contained in the
specified Collection.  In other words, removes from this Vector all
of its elements that are not contained in the specified Collection.

@param c a collection of elements to be retained in this Vector
         (all other elements are removed)
@return true if this Vector changed as a result of the call
@throws ClassCastException if the types of one or more elements
        in this vector are incompatible with the specified
        collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this vector contains one or more null
        elements and the specified collection does not support null
        elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@since 1.2
"
      end

      operation 534658 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements in the specified Collection into this
Vector at the specified position.  Shifts the element currently at
that position (if any) and any subsequent elements to the right
(increases their indices).  The new elements will appear in the Vector
in the order that they are returned by the specified Collection's
iterator.

@param index index at which to insert the first element from the
             specified collection
@param c elements to be inserted into this Vector
@return {@code true} if this Vector changed as a result of the call
@throws ArrayIndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index > size()})
@throws NullPointerException if the specified collection is null
@since 1.2
"
      end

      operation 534786 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this Vector for equality.  Returns
true if and only if the specified Object is also a List, both Lists
have the same size, and all corresponding pairs of elements in the two
Lists are <em>equal</em>.  (Two elements {@code e1} and
{@code e2} are <em>equal</em> if {@code (e1==null ? e2==null :
e1.equals(e2))}.)  In other words, two Lists are defined to be
equal if they contain the same elements in the same order.

@param o the Object to be compared for equality with this Vector
@return true if the specified Object is equal to this Vector
"
      end

      operation 534914 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this Vector.
"
      end

      operation 535042 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this Vector, containing
the String representation of each element.
"
      end

      operation 535170 "subList"
	cpp_inline public return_type class_ref 175362 // List
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this List between fromIndex,
inclusive, and toIndex, exclusive.  (If fromIndex and toIndex are
equal, the returned List is empty.)  The returned List is backed by this
List, so changes in the returned List are reflected in this List, and
vice-versa.  The returned List supports all of the optional List
operations supported by this List.

<p>This method eliminates the need for explicit range operations (of
the sort that commonly exist for arrays).  Any operation that expects
a List can be used as a range operation by operating on a subList view
instead of a whole List.  For example, the following idiom
removes a range of elements from a List:
<pre>
     list.subList(from, to).clear();
</pre>
Similar idioms may be constructed for indexOf and lastIndexOf,
and all of the algorithms in the Collections class can be applied to
a subList.

<p>The semantics of the List returned by this method become undefined if
the backing list (i.e., this List) is <i>structurally modified</i> in
any way other than via the returned List.  (Structural modifications are
those that change the size of the List, or otherwise perturb it in such
a fashion that iterations in progress may yield incorrect results.)

@param fromIndex low endpoint (inclusive) of the subList
@param toIndex high endpoint (exclusive) of the subList
@return a view of the specified range within this List
@throws IndexOutOfBoundsException if an endpoint index value is out of range
        {@code (fromIndex < 0 || toIndex > size)}
@throws IllegalArgumentException if the endpoint indices are out of order
        {@code (fromIndex > toIndex)}
"
      end

      operation 535298 "removeRange"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this list all of the elements whose index is between
{@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
Shifts any succeeding elements to the left (reduces their index).
This call shortens the list by {@code (toIndex - fromIndex)} elements.
(If {@code toIndex==fromIndex}, this operation has no effect.)
"
      end

      operation 535426 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the {@code Vector} instance to a stream (that
is, serialize it).
This method performs synchronization to ensure the consistency
of the serialized data.
"
      end

      operation 535554 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator over the elements in this list (in proper
sequence), starting at the specified position in the list.
The specified index indicates the first element that would be
returned by an initial call to {@link ListIterator#next next}.
An initial call to {@link ListIterator#previous previous} would
return the element with the specified index minus one.

<p>The returned list iterator is <a href=\"#fail-fast\"><i>fail-fast</i></a>.

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 535682 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator over the elements in this list (in proper
sequence).

<p>The returned list iterator is <a href=\"#fail-fast\"><i>fail-fast</i></a>.

@see #listIterator(int)
"
      end

      operation 535810 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this list in proper sequence.

<p>The returned iterator is <a href=\"#fail-fast\"><i>fail-fast</i></a>.

@return an iterator over the elements in this list in proper sequence
"
      end
    end

    class 163074 "LinkedList"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 3
      actual class class_ref 1064322 // AbstractSequentialList
        rank 0 explicit_value ""
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      actual class class_ref 1064450 // Deque
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Doubly-linked list implementation of the {@code List} and {@code Deque}
interfaces.  Implements all optional list operations, and permits all
elements (including {@code null}).

<p>All of the operations perform as could be expected for a doubly-linked
list.  Operations that index into the list will traverse the list from
the beginning or the end, whichever is closer to the specified index.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a linked list concurrently, and at least
one of the threads modifies the list structurally, it <i>must</i> be
synchronized externally.  (A structural modification is any operation
that adds or deletes one or more elements; merely setting the value of
an element is not a structural modification.)  This is typically
accomplished by synchronizing on some object that naturally
encapsulates the list.

If no such object exists, the list should be \"wrapped\" using the
{@link Collections#synchronizedList Collections.synchronizedList}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the list:<pre>
  List list = Collections.synchronizedList(new LinkedList(...));</pre>

<p>The iterators returned by this class's {@code iterator} and
{@code listIterator} methods are <i>fail-fast</i>: if the list is
structurally modified at any time after the iterator is created, in
any way except through the Iterator's own {@code remove} or
{@code add} methods, the iterator will throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than
risking arbitrary, non-deterministic behavior at an undetermined
time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:   <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@see     List
@see     ArrayList
@since 1.2
@param <E> the type of elements held in this collection
"
      classrelation 3526402 // <realization>
	relation 3526402 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3526402 // <realization>
	  b parent class_ref 1064322 // AbstractSequentialList
      end

      classrelation 3526530 // <realization>
	relation 3526530 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3526530 // <realization>
	  b parent class_ref 175362 // List
      end

      classrelation 3526658 // <realization>
	relation 3526658 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3526658 // <realization>
	  b parent class_ref 1064450 // Deque
      end

      classrelation 3526786 // <realization>
	relation 3526786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3526786 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3526914 // <realization>
	relation 3526914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3526914 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2061186 "size"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1086722 "Node"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 3527042 // first (<unidirectional association>)
	relation 3527042 --->
	  a role_name "first" package
	    comment "
Pointer to first node.
Invariant: (first == null && last == null) ||
           (first.prev == null && first.item != null)

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 3527042 // first (<unidirectional association>)
	  b parent class_ref 1086722 // Node
      end

      classrelation 3527170 // last (<unidirectional association>)
	relation 3527170 --->
	  a role_name "last" package
	    comment "
Pointer to last node.
Invariant: (first == null && last == null) ||
           (last.next == null && last.item != null)

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 3527170 // last (<unidirectional association>)
	  b parent class_ref 1086722 // Node
      end

      operation 8838530 "LinkedList"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty list.
"
      end

      operation 8838658 "LinkedList"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a list containing the elements of the specified
collection, in the order they are returned by the collection's
iterator.

@param  c the collection whose elements are to be placed into this list
@throws NullPointerException if the specified collection is null
"
      end

      operation 8838786 "linkFirst"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Links e as first element.
"
      end

      operation 8838914 "linkLast"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Links e as last element.
"
      end

      operation 8839042 "linkBefore"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "e" explicit_type "E"
	  param inout name "succ" type class_ref 1086722 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts element e before non-null Node succ.
"
      end

      operation 8839170 "unlinkFirst"
	cpp_inline private explicit_return_type "E"
	nparams 1
	  param inout name "f" type class_ref 1086722 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unlinks non-null first node f.
"
      end

      operation 8839298 "unlinkLast"
	cpp_inline private explicit_return_type "E"
	nparams 1
	  param inout name "l" type class_ref 1086722 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unlinks non-null last node l.
"
      end

      operation 8839426 "unlink"
	cpp_inline package explicit_return_type "E"
	nparams 1
	  param inout name "x" type class_ref 1086722 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unlinks non-null node x.
"
      end

      operation 8839554 "getFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first element in this list.

@return the first element in this list
@throws NoSuchElementException if this list is empty
"
      end

      operation 8839682 "getLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last element in this list.

@return the last element in this list
@throws NoSuchElementException if this list is empty
"
      end

      operation 8839810 "removeFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes and returns the first element from this list.

@return the first element from this list
@throws NoSuchElementException if this list is empty
"
      end

      operation 8839938 "removeLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes and returns the last element from this list.

@return the last element from this list
@throws NoSuchElementException if this list is empty
"
      end

      operation 8840066 "addFirst"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the beginning of this list.

@param e the element to add
"
      end

      operation 8840194 "addLast"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified element to the end of this list.

<p>This method is equivalent to {@link #add}.

@param e the element to add
"
      end

      operation 8840322 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this list contains the specified element.
More formally, returns {@code true} if and only if this list contains
at least one element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this list is to be tested
@return {@code true} if this list contains the specified element
"
      end

      operation 8840450 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this list.

@return the number of elements in this list
"
      end

      operation 8840578 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified element to the end of this list.

<p>This method is equivalent to {@link #addLast}.

@param e element to be appended to this list
@return {@code true} (as specified by {@link Collection#add})
"
      end

      operation 8840706 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element from this list,
if it is present.  If this list does not contain the element, it is
unchanged.  More formally, removes the element with the lowest index
{@code i} such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
(if such an element exists).  Returns {@code true} if this list
contained the specified element (or equivalently, if this list
changed as a result of the call).

@param o element to be removed from this list, if present
@return {@code true} if this list contained the specified element
"
      end

      operation 8840834 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends all of the elements in the specified collection to the end of
this list, in the order that they are returned by the specified
collection's iterator.  The behavior of this operation is undefined if
the specified collection is modified while the operation is in
progress.  (Note that this will occur if the specified collection is
this list, and it's nonempty.)

@param c collection containing elements to be added to this list
@return {@code true} if this list changed as a result of the call
@throws NullPointerException if the specified collection is null
"
      end

      operation 8840962 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements in the specified collection into this
list, starting at the specified position.  Shifts the element
currently at that position (if any) and any subsequent elements to
the right (increases their indices).  The new elements will appear
in the list in the order that they are returned by the
specified collection's iterator.

@param index index at which to insert the first element
             from the specified collection
@param c collection containing elements to be added to this list
@return {@code true} if this list changed as a result of the call
@throws IndexOutOfBoundsException {@inheritDoc}
@throws NullPointerException if the specified collection is null
"
      end

      operation 8841090 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this list.
The list will be empty after this call returns.
"
      end

      operation 8841218 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Positional Access Operations

Returns the element at the specified position in this list.

@param index index of the element to return
@return the element at the specified position in this list
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8841346 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified position in this list with the
specified element.

@param index index of the element to replace
@param element element to be stored at the specified position
@return the element previously at the specified position
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8841474 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the specified position in this list.
Shifts the element currently at that position (if any) and any
subsequent elements to the right (adds one to their indices).

@param index index at which the specified element is to be inserted
@param element element to be inserted
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8841602 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in this list.  Shifts any
subsequent elements to the left (subtracts one from their indices).
Returns the element that was removed from the list.

@param index the index of the element to be removed
@return the element previously at the specified position
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8841730 "isElementIndex"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the argument is the index of an existing element.
"
      end

      operation 8841858 "isPositionIndex"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the argument is the index of a valid position for an
iterator or an add operation.
"
      end

      operation 8841986 "outOfBoundsMsg"
	cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IndexOutOfBoundsException detail message.
Of the many possible refactorings of the error handling code,
this \"outlining\" performs best with both server and client VMs.
"
      end

      operation 8842114 "checkElementIndex"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8842242 "checkPositionIndex"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8842370 "node"
	cpp_inline package return_type class_ref 1086722 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the (non-null) Node at the specified element index.
"
      end

      operation 8842498 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Search Operations

Returns the index of the first occurrence of the specified element
in this list, or -1 if this list does not contain the element.
More formally, returns the lowest index {@code i} such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.

@param o element to search for
@return the index of the first occurrence of the specified element in
        this list, or -1 if this list does not contain the element
"
      end

      operation 8842626 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last occurrence of the specified element
in this list, or -1 if this list does not contain the element.
More formally, returns the highest index {@code i} such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.

@param o element to search for
@return the index of the last occurrence of the specified element in
        this list, or -1 if this list does not contain the element
"
      end

      operation 8842754 "peek"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Queue operations.

Retrieves, but does not remove, the head (first element) of this list.

@return the head of this list, or {@code null} if this list is empty
@since 1.5
"
      end

      operation 8842882 "element"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head (first element) of this list.

@return the head of this list
@throws NoSuchElementException if this list is empty
@since 1.5
"
      end

      operation 8843010 "poll"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head (first element) of this list.

@return the head of this list, or {@code null} if this list is empty
@since 1.5
"
      end

      operation 8843138 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head (first element) of this list.

@return the head of this list
@throws NoSuchElementException if this list is empty
@since 1.5
"
      end

      operation 8843266 "offer"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified element as the tail (last element) of this list.

@param e the element to add
@return {@code true} (as specified by {@link Queue#offer})
@since 1.5
"
      end

      operation 8843394 "offerFirst"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deque operations

Inserts the specified element at the front of this list.

@param e the element to insert
@return {@code true} (as specified by {@link Deque#offerFirst})
@since 1.6
"
      end

      operation 8843522 "offerLast"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this list.

@param e the element to insert
@return {@code true} (as specified by {@link Deque#offerLast})
@since 1.6
"
      end

      operation 8843650 "peekFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the first element of this list,
or returns {@code null} if this list is empty.

@return the first element of this list, or {@code null}
        if this list is empty
@since 1.6
"
      end

      operation 8843778 "peekLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the last element of this list,
or returns {@code null} if this list is empty.

@return the last element of this list, or {@code null}
        if this list is empty
@since 1.6
"
      end

      operation 8843906 "pollFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first element of this list,
or returns {@code null} if this list is empty.

@return the first element of this list, or {@code null} if
    this list is empty
@since 1.6
"
      end

      operation 8844034 "pollLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last element of this list,
or returns {@code null} if this list is empty.

@return the last element of this list, or {@code null} if
    this list is empty
@since 1.6
"
      end

      operation 8844162 "push"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes an element onto the stack represented by this list.  In other
words, inserts the element at the front of this list.

<p>This method is equivalent to {@link #addFirst}.

@param e the element to push
@since 1.6
"
      end

      operation 8844290 "pop"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops an element from the stack represented by this list.  In other
words, removes and returns the first element of this list.

<p>This method is equivalent to {@link #removeFirst()}.

@return the element at the front of this list (which is the top
        of the stack represented by this list)
@throws NoSuchElementException if this list is empty
@since 1.6
"
      end

      operation 8844418 "removeFirstOccurrence"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element in this
list (when traversing the list from head to tail).  If the list
does not contain the element, it is unchanged.

@param o element to be removed from this list, if present
@return {@code true} if the list contained the specified element
@since 1.6
"
      end

      operation 8844546 "removeLastOccurrence"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last occurrence of the specified element in this
list (when traversing the list from head to tail).  If the list
does not contain the element, it is unchanged.

@param o element to be removed from this list, if present
@return {@code true} if the list contained the specified element
@since 1.6
"
      end

      operation 8844674 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list-iterator of the elements in this list (in proper
sequence), starting at the specified position in the list.
Obeys the general contract of {@code List.listIterator(int)}.<p>

The list-iterator is <i>fail-fast</i>: if the list is structurally
modified at any time after the Iterator is created, in any way except
through the list-iterator's own {@code remove} or {@code add}
methods, the list-iterator will throw a
{@code ConcurrentModificationException}.  Thus, in the face of
concurrent modification, the iterator fails quickly and cleanly, rather
than risking arbitrary, non-deterministic behavior at an undetermined
time in the future.

@param index index of the first element to be returned from the
             list-iterator (by a call to {@code next})
@return a ListIterator of the elements in this list (in proper
        sequence), starting at the specified position in the list
@throws IndexOutOfBoundsException {@inheritDoc}
@see List#listIterator(int)
"
      end
    end

    class 163842 "NoSuchElementException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by various accessor methods to indicate that the element being requested
does not exist.

@author  unascribed
@see     java.util.Enumeration#nextElement()
@see     java.util.Iterator#next()
@since   JDK1.0
"
      classrelation 3524994 // <generalisation>
	relation 3524994 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3524994 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 2056066 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6769829250639411880L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8827650 "NoSuchElementException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchElementException</code> with <tt>null</tt>
as its error message string.
"
      end

      operation 8827778 "NoSuchElementException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchElementException</code>, saving a reference
to the error message string <tt>s</tt> for later retrieval by the
<tt>getMessage</tt> method.

@param   s   the detail message.
"
      end
    end

    class 175362 "List"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184194 // Collection
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An ordered collection (also known as a <i>sequence</i>).  The user of this
interface has precise control over where in the list each element is
inserted.  The user can access elements by their integer index (position in
the list), and search for elements in the list.<p>

Unlike sets, lists typically allow duplicate elements.  More formally,
lists typically allow pairs of elements <tt>e1</tt> and <tt>e2</tt>
such that <tt>e1.equals(e2)</tt>, and they typically allow multiple
null elements if they allow null elements at all.  It is not inconceivable
that someone might wish to implement a list that prohibits duplicates, by
throwing runtime exceptions when the user attempts to insert them, but we
expect this usage to be rare.<p>

The <tt>List</tt> interface places additional stipulations, beyond those
specified in the <tt>Collection</tt> interface, on the contracts of the
<tt>iterator</tt>, <tt>add</tt>, <tt>remove</tt>, <tt>equals</tt>, and
<tt>hashCode</tt> methods.  Declarations for other inherited methods are
also included here for convenience.<p>

The <tt>List</tt> interface provides four methods for positional (indexed)
access to list elements.  Lists (like Java arrays) are zero based.  Note
that these operations may execute in time proportional to the index value
for some implementations (the <tt>LinkedList</tt> class, for
example). Thus, iterating over the elements in a list is typically
preferable to indexing through it if the caller does not know the
implementation.<p>

The <tt>List</tt> interface provides a special iterator, called a
<tt>ListIterator</tt>, that allows element insertion and replacement, and
bidirectional access in addition to the normal operations that the
<tt>Iterator</tt> interface provides.  A method is provided to obtain a
list iterator that starts at a specified position in the list.<p>

The <tt>List</tt> interface provides two methods to search for a specified
object.  From a performance standpoint, these methods should be used with
caution.  In many implementations they will perform costly linear
searches.<p>

The <tt>List</tt> interface provides two methods to efficiently insert and
remove multiple elements at an arbitrary point in the list.<p>

Note: While it is permissible for lists to contain themselves as elements,
extreme caution is advised: the <tt>equals</tt> and <tt>hashCode</tt>
methods are no longer well defined on such a list.

<p>Some list implementations have restrictions on the elements that
they may contain.  For example, some implementations prohibit null elements,
and some have restrictions on the types of their elements.  Attempting to
add an ineligible element throws an unchecked exception, typically
<tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
to query the presence of an ineligible element may throw an exception,
or it may simply return false; some implementations will exhibit the former
behavior and some will exhibit the latter.  More generally, attempting an
operation on an ineligible element whose completion would not result in
the insertion of an ineligible element into the list may throw an
exception or it may succeed, at the option of the implementation.
Such exceptions are marked as \"optional\" in the specification for this
interface.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements in this list

@author  Josh Bloch
@author  Neal Gafter
@see Collection
@see Set
@see ArrayList
@see LinkedList
@see Vector
@see Arrays#asList(Object[])
@see Collections#nCopies(int, Object)
@see Collections#EMPTY_LIST
@see AbstractList
@see AbstractSequentialList
@since 1.2
"
      classrelation 211330 // <realization>
	relation 211330 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 211330 // <realization>
	  b parent class_ref 184194 // Collection
      end

      operation 518146 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns the number of elements in this list.  If this list contains
more than <tt>Integer.MAX_VALUE</tt> elements, returns
<tt>Integer.MAX_VALUE</tt>.

@return the number of elements in this list
"
      end

      operation 518274 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this list contains no elements.

@return <tt>true</tt> if this list contains no elements
"
      end

      operation 518402 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this list contains the specified element.
More formally, returns <tt>true</tt> if and only if this list contains
at least one element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this list is to be tested
@return <tt>true</tt> if this list contains the specified element
@throws ClassCastException if the type of the specified element
        is incompatible with this list
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        list does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 518530 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this list in proper sequence.

@return an iterator over the elements in this list in proper sequence
"
      end

      operation 518658 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this list in proper
sequence (from first to last element).

<p>The returned array will be \"safe\" in that no references to it are
maintained by this list.  (In other words, this method must
allocate a new array even if this list is backed by an array).
The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all of the elements in this list in proper
        sequence
@see Arrays#asList(Object[])
"
      end

      operation 518786 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this list in
proper sequence (from first to last element); the runtime type of
the returned array is that of the specified array.  If the list fits
in the specified array, it is returned therein.  Otherwise, a new
array is allocated with the runtime type of the specified array and
the size of this list.

<p>If the list fits in the specified array with room to spare (i.e.,
the array has more elements than the list), the element in the array
immediately following the end of the list is set to <tt>null</tt>.
(This is useful in determining the length of the list <i>only</i> if
the caller knows that the list does not contain any null elements.)

<p>Like the {@link #toArray()} method, this method acts as bridge between
array-based and collection-based APIs.  Further, this method allows
precise control over the runtime type of the output array, and may,
under certain circumstances, be used to save allocation costs.

<p>Suppose <tt>x</tt> is a list known to contain only strings.
The following code can be used to dump the list into a newly
allocated array of <tt>String</tt>:

<pre>{@code
    String[] y = x.toArray(new String[0]);
}</pre>

Note that <tt>toArray(new Object[0])</tt> is identical in function to
<tt>toArray()</tt>.

@param a the array into which the elements of this list are to
         be stored, if it is big enough; otherwise, a new array of the
         same runtime type is allocated for this purpose.
@return an array containing the elements of this list
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in
        this list
@throws NullPointerException if the specified array is null
"
      end

      operation 518914 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Appends the specified element to the end of this list (optional
operation).

<p>Lists that support this operation may place limitations on what
elements may be added to this list.  In particular, some
lists will refuse to add null elements, and others will impose
restrictions on the type of elements that may be added.  List
classes should clearly specify in their documentation any restrictions
on what elements may be added.

@param e element to be appended to this list
@return <tt>true</tt> (as specified by {@link Collection#add})
@throws UnsupportedOperationException if the <tt>add</tt> operation
        is not supported by this list
@throws ClassCastException if the class of the specified element
        prevents it from being added to this list
@throws NullPointerException if the specified element is null and this
        list does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this list
"
      end

      operation 519042 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element from this list,
if it is present (optional operation).  If this list does not contain
the element, it is unchanged.  More formally, removes the element with
the lowest index <tt>i</tt> such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
(if such an element exists).  Returns <tt>true</tt> if this list
contained the specified element (or equivalently, if this list changed
as a result of the call).

@param o element to be removed from this list, if present
@return <tt>true</tt> if this list contained the specified element
@throws ClassCastException if the type of the specified element
        is incompatible with this list
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        list does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws UnsupportedOperationException if the <tt>remove</tt> operation
        is not supported by this list
"
      end

      operation 519170 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Modification Operations

Returns <tt>true</tt> if this list contains all of the elements of the
specified collection.

@param  c collection to be checked for containment in this list
@return <tt>true</tt> if this list contains all of the elements of the
        specified collection
@throws ClassCastException if the types of one or more elements
        in the specified collection are incompatible with this
        list
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified collection contains one
        or more null elements and this list does not permit null
        elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #contains(Object)
"
      end

      operation 519298 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends all of the elements in the specified collection to the end of
this list, in the order that they are returned by the specified
collection's iterator (optional operation).  The behavior of this
operation is undefined if the specified collection is modified while
the operation is in progress.  (Note that this will occur if the
specified collection is this list, and it's nonempty.)

@param c collection containing elements to be added to this list
@return <tt>true</tt> if this list changed as a result of the call
@throws UnsupportedOperationException if the <tt>addAll</tt> operation
        is not supported by this list
@throws ClassCastException if the class of an element of the specified
        collection prevents it from being added to this list
@throws NullPointerException if the specified collection contains one
        or more null elements and this list does not permit null
        elements, or if the specified collection is null
@throws IllegalArgumentException if some property of an element of the
        specified collection prevents it from being added to this list
@see #add(Object)
"
      end

      operation 519426 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements in the specified collection into this
list at the specified position (optional operation).  Shifts the
element currently at that position (if any) and any subsequent
elements to the right (increases their indices).  The new elements
will appear in this list in the order that they are returned by the
specified collection's iterator.  The behavior of this operation is
undefined if the specified collection is modified while the
operation is in progress.  (Note that this will occur if the specified
collection is this list, and it's nonempty.)

@param index index at which to insert the first element from the
             specified collection
@param c collection containing elements to be added to this list
@return <tt>true</tt> if this list changed as a result of the call
@throws UnsupportedOperationException if the <tt>addAll</tt> operation
        is not supported by this list
@throws ClassCastException if the class of an element of the specified
        collection prevents it from being added to this list
@throws NullPointerException if the specified collection contains one
        or more null elements and this list does not permit null
        elements, or if the specified collection is null
@throws IllegalArgumentException if some property of an element of the
        specified collection prevents it from being added to this list
@throws IndexOutOfBoundsException if the index is out of range
        (<tt>index &lt; 0 || index &gt; size()</tt>)
"
      end

      operation 519554 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this list all of its elements that are contained in the
specified collection (optional operation).

@param c collection containing elements to be removed from this list
@return <tt>true</tt> if this list changed as a result of the call
@throws UnsupportedOperationException if the <tt>removeAll</tt> operation
        is not supported by this list
@throws ClassCastException if the class of an element of this list
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this list contains a null element and the
        specified collection does not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
@see #contains(Object)
"
      end

      operation 519682 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this list that are contained in the
specified collection (optional operation).  In other words, removes
from this list all of its elements that are not contained in the
specified collection.

@param c collection containing elements to be retained in this list
@return <tt>true</tt> if this list changed as a result of the call
@throws UnsupportedOperationException if the <tt>retainAll</tt> operation
        is not supported by this list
@throws ClassCastException if the class of an element of this list
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this list contains a null element and the
        specified collection does not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
@see #contains(Object)
"
      end

      operation 519810 "replaceAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "operator" type class_ref 184834 // UnaryOperator
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces each element of this list with the result of applying the
operator to that element.  Errors or runtime exceptions thrown by
the operator are relayed to the caller.

@implSpec
The default implementation is equivalent to, for this {@code list}:
<pre>{@code
    final ListIterator<E> li = list.listIterator();
    while (li.hasNext()) {
        li.set(operator.apply(li.next()));
    }
}</pre>

If the list's list-iterator does not support the {@code set} operation
then an {@code UnsupportedOperationException} will be thrown when
replacing the first element.

@param operator the operator to apply to each element
@throws UnsupportedOperationException if this list is unmodifiable.
        Implementations may throw this exception if an element
        cannot be replaced or if, in general, modification is not
        supported
@throws NullPointerException if the specified operator is null or
        if the operator result is a null value and this list does
        not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>)
@since 1.8
"
      end

      operation 519938 "sort"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Sorts this list according to the order induced by the specified
{@link Comparator}.

<p>All elements in this list must be <i>mutually comparable</i> using the
specified comparator (that is, {@code c.compare(e1, e2)} must not throw
a {@code ClassCastException} for any elements {@code e1} and {@code e2}
in the list).

<p>If the specified comparator is {@code null} then all elements in this
list must implement the {@link Comparable} interface and the elements'
{@linkplain Comparable natural ordering} should be used.

<p>This list must be modifiable, but need not be resizable.

@implSpec
The default implementation obtains an array containing all elements in
this list, sorts the array, and iterates over this list resetting each
element from the corresponding position in the array. (This avoids the
n<sup>2</sup> log(n) performance that would result from attempting
to sort a linked list in place.)

@implNote
This implementation is a stable, adaptive, iterative mergesort that
requires far fewer than n lg(n) comparisons when the input array is
partially sorted, while offering the performance of a traditional
mergesort when the input array is randomly ordered.  If the input array
is nearly sorted, the implementation requires approximately n
comparisons.  Temporary storage requirements vary from a small constant
for nearly sorted input arrays to n/2 object references for randomly
ordered input arrays.

<p>The implementation takes equal advantage of ascending and
descending order in its input array, and can take advantage of
ascending and descending order in different parts of the same
input array.  It is well-suited to merging two or more sorted arrays:
simply concatenate the arrays and sort the resulting array.

<p>The implementation was adapted from Tim Peters's list sort for Python
(<a href=\"http://svn.python.org/projects/python/trunk/Objects/listsort.txt\">
TimSort</a>).  It uses techniques from Peter McIlroy's \"Optimistic
Sorting and Information Theoretic Complexity\", in Proceedings of the
Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
January 1993.

@param c the {@code Comparator} used to compare list elements.
         A {@code null} value indicates that the elements'
         {@linkplain Comparable natural ordering} should be used
@throws ClassCastException if the list contains elements that are not
        <i>mutually comparable</i> using the specified comparator
@throws UnsupportedOperationException if the list's list-iterator does
        not support the {@code set} operation
@throws IllegalArgumentException
        (<a href=\"Collection.html#optional-restrictions\">optional</a>)
        if the comparator is found to violate the {@link Comparator}
        contract
@since 1.8
"
      end

      operation 520066 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this list (optional operation).
The list will be empty after this call returns.

@throws UnsupportedOperationException if the <tt>clear</tt> operation
        is not supported by this list
"
      end

      operation 520194 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this list for equality.  Returns
<tt>true</tt> if and only if the specified object is also a list, both
lists have the same size, and all corresponding pairs of elements in
the two lists are <i>equal</i>.  (Two elements <tt>e1</tt> and
<tt>e2</tt> are <i>equal</i> if <tt>(e1==null ? e2==null :
e1.equals(e2))</tt>.)  In other words, two lists are defined to be
equal if they contain the same elements in the same order.  This
definition ensures that the equals method works properly across
different implementations of the <tt>List</tt> interface.

@param o the object to be compared for equality with this list
@return <tt>true</tt> if the specified object is equal to this list
"
      end

      operation 520322 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this list.  The hash code of a list
is defined to be the result of the following calculation:
<pre>{@code
    int hashCode = 1;
    for (E e : list)
        hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());
}</pre>
This ensures that <tt>list1.equals(list2)</tt> implies that
<tt>list1.hashCode()==list2.hashCode()</tt> for any two lists,
<tt>list1</tt> and <tt>list2</tt>, as required by the general
contract of {@link Object#hashCode}.

@return the hash code value for this list
@see Object#equals(Object)
@see #equals(Object)
"
      end

      operation 520450 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Positional Access Operations

Returns the element at the specified position in this list.

@param index index of the element to return
@return the element at the specified position in this list
@throws IndexOutOfBoundsException if the index is out of range
        (<tt>index &lt; 0 || index &gt;= size()</tt>)
"
      end

      operation 520578 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified position in this list with the
specified element (optional operation).

@param index index of the element to replace
@param element element to be stored at the specified position
@return the element previously at the specified position
@throws UnsupportedOperationException if the <tt>set</tt> operation
        is not supported by this list
@throws ClassCastException if the class of the specified element
        prevents it from being added to this list
@throws NullPointerException if the specified element is null and
        this list does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this list
@throws IndexOutOfBoundsException if the index is out of range
        (<tt>index &lt; 0 || index &gt;= size()</tt>)
"
      end

      operation 520706 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the specified position in this list
(optional operation).  Shifts the element currently at that position
(if any) and any subsequent elements to the right (adds one to their
indices).

@param index index at which the specified element is to be inserted
@param element element to be inserted
@throws UnsupportedOperationException if the <tt>add</tt> operation
        is not supported by this list
@throws ClassCastException if the class of the specified element
        prevents it from being added to this list
@throws NullPointerException if the specified element is null and
        this list does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this list
@throws IndexOutOfBoundsException if the index is out of range
        (<tt>index &lt; 0 || index &gt; size()</tt>)
"
      end

      operation 520834 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in this list (optional
operation).  Shifts any subsequent elements to the left (subtracts one
from their indices).  Returns the element that was removed from the
list.

@param index the index of the element to be removed
@return the element previously at the specified position
@throws UnsupportedOperationException if the <tt>remove</tt> operation
        is not supported by this list
@throws IndexOutOfBoundsException if the index is out of range
        (<tt>index &lt; 0 || index &gt;= size()</tt>)
"
      end

      operation 520962 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Search Operations

Returns the index of the first occurrence of the specified element
in this list, or -1 if this list does not contain the element.
More formally, returns the lowest index <tt>i</tt> such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.

@param o element to search for
@return the index of the first occurrence of the specified element in
        this list, or -1 if this list does not contain the element
@throws ClassCastException if the type of the specified element
        is incompatible with this list
        (<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        list does not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 521090 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last occurrence of the specified element
in this list, or -1 if this list does not contain the element.
More formally, returns the highest index <tt>i</tt> such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.

@param o element to search for
@return the index of the last occurrence of the specified element in
        this list, or -1 if this list does not contain the element
@throws ClassCastException if the type of the specified element
        is incompatible with this list
        (<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        list does not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 521218 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " List Iterators

Returns a list iterator over the elements in this list (in proper
sequence).

@return a list iterator over the elements in this list (in proper
        sequence)
"
      end

      operation 521346 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator over the elements in this list (in proper
sequence), starting at the specified position in the list.
The specified index indicates the first element that would be
returned by an initial call to {@link ListIterator#next next}.
An initial call to {@link ListIterator#previous previous} would
return the element with the specified index minus one.

@param index index of the first element to be returned from the
       list iterator (by a call to {@link ListIterator#next next})
@return a list iterator over the elements in this list (in proper
        sequence), starting at the specified position in the list
@throws IndexOutOfBoundsException if the index is out of range
        ({@code index < 0 || index > size()})
"
      end

      operation 521474 "subList"
	cpp_inline public return_type class_ref 175362 // List
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " View

Returns a view of the portion of this list between the specified
<tt>fromIndex</tt>, inclusive, and <tt>toIndex</tt>, exclusive.  (If
<tt>fromIndex</tt> and <tt>toIndex</tt> are equal, the returned list is
empty.)  The returned list is backed by this list, so non-structural
changes in the returned list are reflected in this list, and vice-versa.
The returned list supports all of the optional list operations supported
by this list.<p>

This method eliminates the need for explicit range operations (of
the sort that commonly exist for arrays).  Any operation that expects
a list can be used as a range operation by passing a subList view
instead of a whole list.  For example, the following idiom
removes a range of elements from a list:
<pre>{@code
     list.subList(from, to).clear();
}</pre>
Similar idioms may be constructed for <tt>indexOf</tt> and
<tt>lastIndexOf</tt>, and all of the algorithms in the
<tt>Collections</tt> class can be applied to a subList.<p>

The semantics of the list returned by this method become undefined if
the backing list (i.e., this list) is <i>structurally modified</i> in
any way other than via the returned list.  (Structural modifications are
those that change the size of this list, or otherwise perturb it in such
a fashion that iterations in progress may yield incorrect results.)

@param fromIndex low endpoint (inclusive) of the subList
@param toIndex high endpoint (exclusive) of the subList
@return a view of the specified range within this list
@throws IndexOutOfBoundsException for an illegal endpoint index value
        (<tt>fromIndex &lt; 0 || toIndex &gt; size ||
        fromIndex &gt; toIndex</tt>)
"
      end

      operation 521602 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates a {@link Spliterator} over the elements in this list.

<p>The {@code Spliterator} reports {@link Spliterator#SIZED} and
{@link Spliterator#ORDERED}.  Implementations should document the
reporting of additional characteristic values.

@implSpec
The default implementation creates a
<em><a href=\"Spliterator.html#binding\">late-binding</a></em> spliterator
from the list's {@code Iterator}.  The spliterator inherits the
<em>fail-fast</em> properties of the list's iterator.

@implNote
The created {@code Spliterator} additionally reports
{@link Spliterator#SUBSIZED}.

@return a {@code Spliterator} over the elements in this list
@since 1.8
"
      end
    end

    class 183810 "Stack"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 141442 // Vector
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Stack</code> class represents a last-in-first-out
(LIFO) stack of objects. It extends class <tt>Vector</tt> with five
operations that allow a vector to be treated as a stack. The usual
<tt>push</tt> and <tt>pop</tt> operations are provided, as well as a
method to <tt>peek</tt> at the top item on the stack, a method to test
for whether the stack is <tt>empty</tt>, and a method to <tt>search</tt>
the stack for an item and discover how far it is from the top.
<p>
When a stack is first created, it contains no items.

<p>A more complete and consistent set of LIFO stack operations is
provided by the {@link Deque} interface and its implementations, which
should be used in preference to this class.  For example:
<pre>   {@code
  Deque<Integer> stack = new ArrayDeque<Integer>();}</pre>

@author  Jonathan Payne
@since   JDK1.0
"
      classrelation 213378 // <realization>
	relation 213378 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 213378 // <realization>
	  b parent class_ref 141442 // Vector
      end

      operation 535938 "Stack"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty Stack.
"
      end

      operation 536066 "push"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "item" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes an item onto the top of this stack. This has exactly
the same effect as:
<blockquote><pre>
addElement(item)</pre></blockquote>

@param   item   the item to be pushed onto this stack.
@return  the <code>item</code> argument.
@see     java.util.Vector#addElement
"
      end

      operation 536194 "pop"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns that
object as the value of this function.

@return  The object at the top of this stack (the last item
         of the <tt>Vector</tt> object).
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 536322 "peek"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.

@return  the object at the top of this stack (the last item
         of the <tt>Vector</tt> object).
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 536450 "empty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this stack is empty.

@return  <code>true</code> if and only if this stack contains
         no items; <code>false</code> otherwise.
"
      end

      operation 536578 "search"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the 1-based position where an object is on this stack.
If the object <tt>o</tt> occurs as an item in this stack, this
method returns the distance from the top of the stack of the
occurrence nearest the top of the stack; the topmost item on the
stack is considered to be at distance <tt>1</tt>. The <tt>equals</tt>
method is used to compare <tt>o</tt> to the
items in this stack.

@param   o   the desired object.
@return  the 1-based position from the top of the stack where
         the object is located; the return value <code>-1</code>
         indicates that the object is not on the stack.
"
      end

      attribute 178818 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1224463164541339165L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end
    end

    class 183938 "AbstractList"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 184066 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a skeletal implementation of the {@link List}
interface to minimize the effort required to implement this interface
backed by a \"random access\" data store (such as an array).  For sequential
access data (such as a linked list), {@link AbstractSequentialList} should
be used in preference to this class.

<p>To implement an unmodifiable list, the programmer needs only to extend
this class and provide implementations for the {@link #get(int)} and
{@link List#size() size()} methods.

<p>To implement a modifiable list, the programmer must additionally
override the {@link #set(int, Object) set(int, E)} method (which otherwise
throws an {@code UnsupportedOperationException}).  If the list is
variable-size the programmer must additionally override the
{@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.

<p>The programmer should generally provide a void (no argument) and collection
constructor, as per the recommendation in the {@link Collection} interface
specification.

<p>Unlike the other abstract collection implementations, the programmer does
<i>not</i> have to provide an iterator implementation; the iterator and
list iterator are implemented by this class, on top of the \"random access\"
methods:
{@link #get(int)},
{@link #set(int, Object) set(int, E)},
{@link #add(int, Object) add(int, E)} and
{@link #remove(int)}.

<p>The documentation for each non-abstract method in this class describes its
implementation in detail.  Each of these methods may be overridden if the
collection being implemented admits a more efficient implementation.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@author  Neal Gafter
@since 1.2
"
      classrelation 211202 // <realization>
	relation 211202 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 211202 // <realization>
	  b parent class_ref 184066 // AbstractCollection
      end

      classrelation 211458 // <realization>
	relation 211458 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 211458 // <realization>
	  b parent class_ref 175362 // List
      end

      operation 521730 "AbstractList"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 521858 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified element to the end of this list (optional
operation).

<p>Lists that support this operation may place limitations on what
elements may be added to this list.  In particular, some
lists will refuse to add null elements, and others will impose
restrictions on the type of elements that may be added.  List
classes should clearly specify in their documentation any restrictions
on what elements may be added.

<p>This implementation calls {@code add(size(), e)}.

<p>Note that this implementation throws an
{@code UnsupportedOperationException} unless
{@link #add(int, Object) add(int, E)} is overridden.

@param e element to be appended to this list
@return {@code true} (as specified by {@link Collection#add})
@throws UnsupportedOperationException if the {@code add} operation
        is not supported by this list
@throws ClassCastException if the class of the specified element
        prevents it from being added to this list
@throws NullPointerException if the specified element is null and this
        list does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this list
"
      end

      operation 521986 "get"
	abstract cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 522114 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation always throws an
{@code UnsupportedOperationException}.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 522242 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation always throws an
{@code UnsupportedOperationException}.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 522370 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation always throws an
{@code UnsupportedOperationException}.

@throws UnsupportedOperationException {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 522498 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Search Operations

{@inheritDoc}

<p>This implementation first gets a list iterator (with
{@code listIterator()}).  Then, it iterates over the list until the
specified element is found or the end of the list is reached.

@throws ClassCastException   {@inheritDoc}
@throws NullPointerException {@inheritDoc}
"
      end

      operation 522626 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation first gets a list iterator that points to the end
of the list (with {@code listIterator(size())}).  Then, it iterates
backwards over the list until the specified element is found, or the
beginning of the list is reached.

@throws ClassCastException   {@inheritDoc}
@throws NullPointerException {@inheritDoc}
"
      end

      operation 522754 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Removes all of the elements from this list (optional operation).
The list will be empty after this call returns.

<p>This implementation calls {@code removeRange(0, size())}.

<p>Note that this implementation throws an
{@code UnsupportedOperationException} unless {@code remove(int
index)} or {@code removeRange(int fromIndex, int toIndex)} is
overridden.

@throws UnsupportedOperationException if the {@code clear} operation
        is not supported by this list
"
      end

      operation 522882 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation gets an iterator over the specified collection
and iterates over it, inserting the elements obtained from the
iterator into this list at the appropriate position, one at a time,
using {@code add(int, E)}.
Many implementations will override this method for efficiency.

<p>Note that this implementation throws an
{@code UnsupportedOperationException} unless
{@link #add(int, Object) add(int, E)} is overridden.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 523010 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterators

Returns an iterator over the elements in this list in proper sequence.

<p>This implementation returns a straightforward implementation of the
iterator interface, relying on the backing list's {@code size()},
{@code get(int)}, and {@code remove(int)} methods.

<p>Note that the iterator returned by this method will throw an
{@link UnsupportedOperationException} in response to its
{@code remove} method unless the list's {@code remove(int)} method is
overridden.

<p>This implementation can be made to throw runtime exceptions in the
face of concurrent modification, as described in the specification
for the (protected) {@link #modCount} field.

@return an iterator over the elements in this list in proper sequence
"
      end

      operation 523138 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns {@code listIterator(0)}.

@see #listIterator(int)
"
      end

      operation 523266 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns a straightforward implementation of the
{@code ListIterator} interface that extends the implementation of the
{@code Iterator} interface returned by the {@code iterator()} method.
The {@code ListIterator} implementation relies on the backing list's
{@code get(int)}, {@code set(int, E)}, {@code add(int, E)}
and {@code remove(int)} methods.

<p>Note that the list iterator returned by this implementation will
throw an {@link UnsupportedOperationException} in response to its
{@code remove}, {@code set} and {@code add} methods unless the
list's {@code remove(int)}, {@code set(int, E)}, and
{@code add(int, E)} methods are overridden.

<p>This implementation can be made to throw runtime exceptions in the
face of concurrent modification, as described in the specification for
the (protected) {@link #modCount} field.

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      class 185218 "Itr"
	visibility private 
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 211586 // <realization>
	  relation 211586 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 211586 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 177538 "cursor"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Index of element to be returned by subsequent call to next.

"
	end

	attribute 177666 "lastRet"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Index of element returned by most recent call to next or
previous.  Reset to -1 if this element is deleted by a call
to remove.

"
	end

	attribute 177794 "expectedModCount"
	  package explicit_type "int"
	  init_value " modCount"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The modCount value that the iterator believes that the backing
List should have.  If this expectation is violated, the iterator
has detected concurrent modification.

"
	end

	operation 523394 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 523522 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 523650 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 523778 "checkForComodification"
	  cpp_inline package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 185346 "ListItr"
	visibility private 
	nactuals 2
	actual class class_ref 183938 // AbstractList
	  rank 0 explicit_value ""
	actual class class_ref 185090 // ListIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 211714 // <generalisation>
	  relation 211714 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 211714 // <generalisation>
	    b parent class_ref 185218 // Itr
	end

	classrelation 211970 // <realization>
	  relation 211970 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 211970 // <realization>
	    b parent class_ref 185090 // ListIterator
	end

	operation 525058 "ListItr"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 525186 "hasPrevious"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 525314 "previous"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 525442 "nextIndex"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 525570 "previousIndex"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 525698 "set"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 525826 "add"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 525954 "subList"
	cpp_inline public return_type class_ref 175362 // List
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns a list that subclasses
{@code AbstractList}.  The subclass stores, in private fields, the
offset of the subList within the backing list, the size of the subList
(which can change over its lifetime), and the expected
{@code modCount} value of the backing list.  There are two variants
of the subclass, one of which implements {@code RandomAccess}.
If this list implements {@code RandomAccess} the returned list will
be an instance of the subclass that implements {@code RandomAccess}.

<p>The subclass's {@code set(int, E)}, {@code get(int)},
{@code add(int, E)}, {@code remove(int)}, {@code addAll(int,
Collection)} and {@code removeRange(int, int)} methods all
delegate to the corresponding methods on the backing abstract list,
after bounds-checking the index and adjusting for the offset.  The
{@code addAll(Collection c)} method merely returns {@code addAll(size,
c)}.

<p>The {@code listIterator(int)} method returns a \"wrapper object\"
over a list iterator on the backing list, which is created with the
corresponding method on the backing list.  The {@code iterator} method
merely returns {@code listIterator()}, and the {@code size} method
merely returns the subclass's {@code size} field.

<p>All methods first check to see if the actual {@code modCount} of
the backing list is equal to its expected value, and throw a
{@code ConcurrentModificationException} if it is not.

@throws IndexOutOfBoundsException if an endpoint index value is out of range
        {@code (fromIndex < 0 || toIndex > size)}
@throws IllegalArgumentException if the endpoint indices are out of order
        {@code (fromIndex > toIndex)}
"
      end

      operation 526082 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this list for equality.  Returns
{@code true} if and only if the specified object is also a list, both
lists have the same size, and all corresponding pairs of elements in
the two lists are <i>equal</i>.  (Two elements {@code e1} and
{@code e2} are <i>equal</i> if {@code (e1==null ? e2==null :
e1.equals(e2))}.)  In other words, two lists are defined to be
equal if they contain the same elements in the same order.<p>

This implementation first checks if the specified object is this
list. If so, it returns {@code true}; if not, it checks if the
specified object is a list. If not, it returns {@code false}; if so,
it iterates over both lists, comparing corresponding pairs of elements.
If any comparison returns {@code false}, this method returns
{@code false}.  If either iterator runs out of elements before the
other it returns {@code false} (as the lists are of unequal length);
otherwise it returns {@code true} when the iterations complete.

@param o the object to be compared for equality with this list
@return {@code true} if the specified object is equal to this list
"
      end

      operation 526210 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this list.

<p>This implementation uses exactly the code that is used to define the
list hash function in the documentation for the {@link List#hashCode}
method.

@return the hash code value for this list
"
      end

      operation 526338 "removeRange"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this list all of the elements whose index is between
{@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
Shifts any succeeding elements to the left (reduces their index).
This call shortens the list by {@code (toIndex - fromIndex)} elements.
(If {@code toIndex==fromIndex}, this operation has no effect.)

<p>This method is called by the {@code clear} operation on this list
and its subLists.  Overriding this method to take advantage of
the internals of the list implementation can <i>substantially</i>
improve the performance of the {@code clear} operation on this list
and its subLists.

<p>This implementation gets a list iterator positioned before
{@code fromIndex}, and repeatedly calls {@code ListIterator.next}
followed by {@code ListIterator.remove} until the entire range has
been removed.  <b>Note: if {@code ListIterator.remove} requires linear
time, this implementation requires quadratic time.</b>

@param fromIndex index of first element to be removed
@param toIndex index after last element to be removed
"
      end

      attribute 177922 "modCount"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of times this list has been <i>structurally modified</i>.
Structural modifications are those that change the size of the
list, or otherwise perturb it in such a fashion that iterations in
progress may yield incorrect results.

<p>This field is used by the iterator and list iterator implementation
returned by the {@code iterator} and {@code listIterator} methods.
If the value of this field changes unexpectedly, the iterator (or list
iterator) will throw a {@code ConcurrentModificationException} in
response to the {@code next}, {@code remove}, {@code previous},
{@code set} or {@code add} operations.  This provides
<i>fail-fast</i> behavior, rather than non-deterministic behavior in
the face of concurrent modification during iteration.

<p><b>Use of this field by subclasses is optional.</b> If a subclass
wishes to provide fail-fast iterators (and list iterators), then it
merely has to increment this field in its {@code add(int, E)} and
{@code remove(int)} methods (and any other methods that it overrides
that result in structural modifications to the list).  A single call to
{@code add(int, E)} or {@code remove(int)} must add no more than
one to this field, or the iterators (and list iterators) will throw
bogus {@code ConcurrentModificationExceptions}.  If an implementation
does not wish to provide fail-fast iterators, this field may be
ignored.

"
      end

      operation 526466 "rangeCheckForAdd"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 526594 "outOfBoundsMsg"
	cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 184066 "AbstractCollection"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184194 // Collection
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a skeletal implementation of the <tt>Collection</tt>
interface, to minimize the effort required to implement this interface. <p>

To implement an unmodifiable collection, the programmer needs only to
extend this class and provide implementations for the <tt>iterator</tt> and
<tt>size</tt> methods.  (The iterator returned by the <tt>iterator</tt>
method must implement <tt>hasNext</tt> and <tt>next</tt>.)<p>

To implement a modifiable collection, the programmer must additionally
override this class's <tt>add</tt> method (which otherwise throws an
<tt>UnsupportedOperationException</tt>), and the iterator returned by the
<tt>iterator</tt> method must additionally implement its <tt>remove</tt>
method.<p>

The programmer should generally provide a void (no argument) and
<tt>Collection</tt> constructor, as per the recommendation in the
<tt>Collection</tt> interface specification.<p>

The documentation for each non-abstract method in this class describes its
implementation in detail.  Each of these methods may be overridden if
the collection being implemented admits a more efficient implementation.<p>

This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@author  Neal Gafter
@see Collection
@since 1.2
"
      classrelation 211074 // <realization>
	relation 211074 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 211074 // <realization>
	  b parent class_ref 184194 // Collection
      end

      operation 515970 "AbstractCollection"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 516098 "iterator"
	abstract cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns an iterator over the elements contained in this collection.

@return an iterator over the elements contained in this collection
"
      end

      operation 516226 "size"
	abstract cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516354 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns <tt>size() == 0</tt>.
"
      end

      operation 516482 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates over the elements in the collection,
checking each element in turn for equality with the specified element.

@throws ClassCastException   {@inheritDoc}
@throws NullPointerException {@inheritDoc}
"
      end

      operation 516610 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns an array containing all the elements
returned by this collection's iterator, in the same order, stored in
consecutive elements of the array, starting with index {@code 0}.
The length of the returned array is equal to the number of elements
returned by the iterator, even if the size of this collection changes
during iteration, as might happen if the collection permits
concurrent modification during iteration.  The {@code size} method is
called only as an optimization hint; the correct result is returned
even if the iterator returns a different number of elements.

<p>This method is equivalent to:

 <pre> {@code
List<E> list = new ArrayList<E>(size());
for (E e : this)
    list.add(e);
return list.toArray();
}</pre>
"
      end

      operation 516738 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns an array containing all the elements
returned by this collection's iterator in the same order, stored in
consecutive elements of the array, starting with index {@code 0}.
If the number of elements returned by the iterator is too large to
fit into the specified array, then the elements are returned in a
newly allocated array with length equal to the number of elements
returned by the iterator, even if the size of this collection
changes during iteration, as might happen if the collection permits
concurrent modification during iteration.  The {@code size} method is
called only as an optimization hint; the correct result is returned
even if the iterator returns a different number of elements.

<p>This method is equivalent to:

 <pre> {@code
List<E> list = new ArrayList<E>(size());
for (E e : this)
    list.add(e);
return list.toArray(a);
}</pre>

@throws ArrayStoreException  {@inheritDoc}
@throws NullPointerException {@inheritDoc}
"
      end

      attribute 177410 "MAX_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE - 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size of array to allocate.
Some VMs reserve some header words in an array.
Attempts to allocate larger arrays may result in
OutOfMemoryError: Requested array size exceeds VM limit

"
      end

      operation 516866 "finishToArray"
	class_operation cpp_inline private explicit_return_type "T"
	nparams 2
	  param inout name "r" explicit_type "T"
	multiplicity "[]"
	  param inout name "it" type class_ref 132994 // Iterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Reallocates the array being used within toArray when the iterator
returned more elements than expected, and finishes filling it from
the iterator.

@param r the array, replete with previously stored elements
@param it the in-progress iterator over this collection
@return array containing the elements in the given array, plus any
        further elements returned by the iterator, trimmed to size
"
      end

      operation 516994 "hugeCapacity"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517122 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

{@inheritDoc}

<p>This implementation always throws an
<tt>UnsupportedOperationException</tt>.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IllegalStateException         {@inheritDoc}
"
      end

      operation 517250 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates over the collection looking for the
specified element.  If it finds the element, it removes the element
from the collection using the iterator's remove method.

<p>Note that this implementation throws an
<tt>UnsupportedOperationException</tt> if the iterator returned by this
collection's iterator method does not implement the <tt>remove</tt>
method and this collection contains the specified object.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
"
      end

      operation 517378 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

{@inheritDoc}

<p>This implementation iterates over the specified collection,
checking each element returned by the iterator in turn to see
if it's contained in this collection.  If all elements are so
contained <tt>true</tt> is returned, otherwise <tt>false</tt>.

@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@see #contains(Object)
"
      end

      operation 517506 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates over the specified collection, and adds
each object returned by the iterator to this collection, in turn.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> unless <tt>add</tt> is
overridden (assuming the specified collection is non-empty).

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IllegalStateException         {@inheritDoc}

@see #add(Object)
"
      end

      operation 517634 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates over this collection, checking each
element returned by the iterator in turn to see if it's contained
in the specified collection.  If it's so contained, it's removed from
this collection with the iterator's <tt>remove</tt> method.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the iterator returned by the
<tt>iterator</tt> method does not implement the <tt>remove</tt> method
and this collection contains one or more elements in common with the
specified collection.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}

@see #remove(Object)
@see #contains(Object)
"
      end

      operation 517762 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates over this collection, checking each
element returned by the iterator in turn to see if it's contained
in the specified collection.  If it's not so contained, it's removed
from this collection with the iterator's <tt>remove</tt> method.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the iterator returned by the
<tt>iterator</tt> method does not implement the <tt>remove</tt> method
and this collection contains one or more elements not present in the
specified collection.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}

@see #remove(Object)
@see #contains(Object)
"
      end

      operation 517890 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates over this collection, removing each
element using the <tt>Iterator.remove</tt> operation.  Most
implementations will probably choose to override this method for
efficiency.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the iterator returned by this
collection's <tt>iterator</tt> method does not implement the
<tt>remove</tt> method and this collection is non-empty.

@throws UnsupportedOperationException {@inheritDoc}
"
      end

      operation 518018 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  String conversion

Returns a string representation of this collection.  The string
representation consists of a list of the collection's elements in the
order they are returned by its iterator, enclosed in square brackets
(<tt>\"[]\"</tt>).  Adjacent elements are separated by the characters
<tt>\", \"</tt> (comma and space).  Elements are converted to strings as
by {@link String#valueOf(Object)}.

@return a string representation of this collection
"
      end
    end

    class 184194 "Collection"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184322 // Iterable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The root interface in the <i>collection hierarchy</i>.  A collection
represents a group of objects, known as its <i>elements</i>.  Some
collections allow duplicate elements and others do not.  Some are ordered
and others unordered.  The JDK does not provide any <i>direct</i>
implementations of this interface: it provides implementations of more
specific subinterfaces like <tt>Set</tt> and <tt>List</tt>.  This interface
is typically used to pass collections around and manipulate them where
maximum generality is desired.

<p><i>Bags</i> or <i>multisets</i> (unordered collections that may contain
duplicate elements) should implement this interface directly.

<p>All general-purpose <tt>Collection</tt> implementation classes (which
typically implement <tt>Collection</tt> indirectly through one of its
subinterfaces) should provide two \"standard\" constructors: a void (no
arguments) constructor, which creates an empty collection, and a
constructor with a single argument of type <tt>Collection</tt>, which
creates a new collection with the same elements as its argument.  In
effect, the latter constructor allows the user to copy any collection,
producing an equivalent collection of the desired implementation type.
There is no way to enforce this convention (as interfaces cannot contain
constructors) but all of the general-purpose <tt>Collection</tt>
implementations in the Java platform libraries comply.

<p>The \"destructive\" methods contained in this interface, that is, the
methods that modify the collection on which they operate, are specified to
throw <tt>UnsupportedOperationException</tt> if this collection does not
support the operation.  If this is the case, these methods may, but are not
required to, throw an <tt>UnsupportedOperationException</tt> if the
invocation would have no effect on the collection.  For example, invoking
the {@link #addAll(Collection)} method on an unmodifiable collection may,
but is not required to, throw the exception if the collection to be added
is empty.

<p><a name=\"optional-restrictions\">
Some collection implementations have restrictions on the elements that
they may contain.</a>  For example, some implementations prohibit null elements,
and some have restrictions on the types of their elements.  Attempting to
add an ineligible element throws an unchecked exception, typically
<tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
to query the presence of an ineligible element may throw an exception,
or it may simply return false; some implementations will exhibit the former
behavior and some will exhibit the latter.  More generally, attempting an
operation on an ineligible element whose completion would not result in
the insertion of an ineligible element into the collection may throw an
exception or it may succeed, at the option of the implementation.
Such exceptions are marked as \"optional\" in the specification for this
interface.

<p>It is up to each collection to determine its own synchronization
policy.  In the absence of a stronger guarantee by the
implementation, undefined behavior may result from the invocation
of any method on a collection that is being mutated by another
thread; this includes direct invocations, passing the collection to
a method that might perform invocations, and using an existing
iterator to examine the collection.

<p>Many methods in Collections Framework interfaces are defined in
terms of the {@link Object#equals(Object) equals} method.  For example,
the specification for the {@link #contains(Object) contains(Object o)}
method says: \"returns <tt>true</tt> if and only if this collection
contains at least one element <tt>e</tt> such that
<tt>(o==null ? e==null : o.equals(e))</tt>.\"  This specification should
<i>not</i> be construed to imply that invoking <tt>Collection.contains</tt>
with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be
invoked for any element <tt>e</tt>.  Implementations are free to implement
optimizations whereby the <tt>equals</tt> invocation is avoided, for
example, by first comparing the hash codes of the two elements.  (The
{@link Object#hashCode()} specification guarantees that two objects with
unequal hash codes cannot be equal.)  More generally, implementations of
the various Collections Framework interfaces are free to take advantage of
the specified behavior of underlying {@link Object} methods wherever the
implementor deems it appropriate.

<p>Some collection operations which perform recursive traversal of the
collection may fail with an exception for self-referential instances where
the collection directly or indirectly contains itself. This includes the
{@code clone()}, {@code equals()}, {@code hashCode()} and {@code toString()}
methods. Implementations may optionally handle the self-referential scenario,
however most current implementations do not do so.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@implSpec
The default method implementations (inherited or otherwise) do not apply any
synchronization protocol.  If a {@code Collection} implementation has a
specific synchronization protocol, then it must override default
implementations to apply that protocol.

@param <E> the type of elements in this collection

@author  Josh Bloch
@author  Neal Gafter
@see     Set
@see     List
@see     Map
@see     SortedSet
@see     SortedMap
@see     HashSet
@see     TreeSet
@see     ArrayList
@see     LinkedList
@see     Vector
@see     Collections
@see     Arrays
@see     AbstractCollection
@since 1.2
"
      classrelation 210946 // <realization>
	relation 210946 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 210946 // <realization>
	  b parent class_ref 184322 // Iterable
      end

      operation 513538 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns the number of elements in this collection.  If this collection
contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
<tt>Integer.MAX_VALUE</tt>.

@return the number of elements in this collection
"
      end

      operation 513666 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this collection contains no elements.

@return <tt>true</tt> if this collection contains no elements
"
      end

      operation 513794 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this collection contains the specified element.
More formally, returns <tt>true</tt> if and only if this collection
contains at least one element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this collection is to be tested
@return <tt>true</tt> if this collection contains the specified
        element
@throws ClassCastException if the type of the specified element
        is incompatible with this collection
        (<a href=\"#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        collection does not permit null elements
        (<a href=\"#optional-restrictions\">optional</a>)
"
      end

      operation 513922 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this collection.  There are no
guarantees concerning the order in which the elements are returned
(unless this collection is an instance of some class that provides a
guarantee).

@return an <tt>Iterator</tt> over the elements in this collection
"
      end

      operation 514050 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this collection.
If this collection makes any guarantees as to what order its elements
are returned by its iterator, this method must return the elements in
the same order.

<p>The returned array will be \"safe\" in that no references to it are
maintained by this collection.  (In other words, this method must
allocate a new array even if this collection is backed by an array).
The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all of the elements in this collection
"
      end

      operation 514178 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this collection;
the runtime type of the returned array is that of the specified array.
If the collection fits in the specified array, it is returned therein.
Otherwise, a new array is allocated with the runtime type of the
specified array and the size of this collection.

<p>If this collection fits in the specified array with room to spare
(i.e., the array has more elements than this collection), the element
in the array immediately following the end of the collection is set to
<tt>null</tt>.  (This is useful in determining the length of this
collection <i>only</i> if the caller knows that this collection does
not contain any <tt>null</tt> elements.)

<p>If this collection makes any guarantees as to what order its elements
are returned by its iterator, this method must return the elements in
the same order.

<p>Like the {@link #toArray()} method, this method acts as bridge between
array-based and collection-based APIs.  Further, this method allows
precise control over the runtime type of the output array, and may,
under certain circumstances, be used to save allocation costs.

<p>Suppose <tt>x</tt> is a collection known to contain only strings.
The following code can be used to dump the collection into a newly
allocated array of <tt>String</tt>:

<pre>
    String[] y = x.toArray(new String[0]);</pre>

Note that <tt>toArray(new Object[0])</tt> is identical in function to
<tt>toArray()</tt>.

@param <T> the runtime type of the array to contain the collection
@param a the array into which the elements of this collection are to be
       stored, if it is big enough; otherwise, a new array of the same
       runtime type is allocated for this purpose.
@return an array containing all of the elements in this collection
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in
        this collection
@throws NullPointerException if the specified array is null
"
      end

      operation 514306 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Ensures that this collection contains the specified element (optional
operation).  Returns <tt>true</tt> if this collection changed as a
result of the call.  (Returns <tt>false</tt> if this collection does
not permit duplicates and already contains the specified element.)<p>

Collections that support this operation may place limitations on what
elements may be added to this collection.  In particular, some
collections will refuse to add <tt>null</tt> elements, and others will
impose restrictions on the type of elements that may be added.
Collection classes should clearly specify in their documentation any
restrictions on what elements may be added.<p>

If a collection refuses to add a particular element for any reason
other than that it already contains the element, it <i>must</i> throw
an exception (rather than returning <tt>false</tt>).  This preserves
the invariant that a collection always contains the specified element
after this call returns.

@param e element whose presence in this collection is to be ensured
@return <tt>true</tt> if this collection changed as a result of the
        call
@throws UnsupportedOperationException if the <tt>add</tt> operation
        is not supported by this collection
@throws ClassCastException if the class of the specified element
        prevents it from being added to this collection
@throws NullPointerException if the specified element is null and this
        collection does not permit null elements
@throws IllegalArgumentException if some property of the element
        prevents it from being added to this collection
@throws IllegalStateException if the element cannot be added at this
        time due to insertion restrictions
"
      end

      operation 514434 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a single instance of the specified element from this
collection, if it is present (optional operation).  More formally,
removes an element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
this collection contains one or more such elements.  Returns
<tt>true</tt> if this collection contained the specified element (or
equivalently, if this collection changed as a result of the call).

@param o element to be removed from this collection, if present
@return <tt>true</tt> if an element was removed as a result of this call
@throws ClassCastException if the type of the specified element
        is incompatible with this collection
        (<a href=\"#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        collection does not permit null elements
        (<a href=\"#optional-restrictions\">optional</a>)
@throws UnsupportedOperationException if the <tt>remove</tt> operation
        is not supported by this collection
"
      end

      operation 514562 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Returns <tt>true</tt> if this collection contains all of the elements
in the specified collection.

@param  c collection to be checked for containment in this collection
@return <tt>true</tt> if this collection contains all of the elements
        in the specified collection
@throws ClassCastException if the types of one or more elements
        in the specified collection are incompatible with this
        collection
        (<a href=\"#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified collection contains one
        or more null elements and this collection does not permit null
        elements
        (<a href=\"#optional-restrictions\">optional</a>),
        or if the specified collection is null.
@see    #contains(Object)
"
      end

      operation 514690 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this collection
(optional operation).  The behavior of this operation is undefined if
the specified collection is modified while the operation is in progress.
(This implies that the behavior of this call is undefined if the
specified collection is this collection, and this collection is
nonempty.)

@param c collection containing elements to be added to this collection
@return <tt>true</tt> if this collection changed as a result of the call
@throws UnsupportedOperationException if the <tt>addAll</tt> operation
        is not supported by this collection
@throws ClassCastException if the class of an element of the specified
        collection prevents it from being added to this collection
@throws NullPointerException if the specified collection contains a
        null element and this collection does not permit null elements,
        or if the specified collection is null
@throws IllegalArgumentException if some property of an element of the
        specified collection prevents it from being added to this
        collection
@throws IllegalStateException if not all the elements can be added at
        this time due to insertion restrictions
@see #add(Object)
"
      end

      operation 514818 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of this collection's elements that are also contained in the
specified collection (optional operation).  After this call returns,
this collection will contain no elements in common with the specified
collection.

@param c collection containing elements to be removed from this collection
@return <tt>true</tt> if this collection changed as a result of the
        call
@throws UnsupportedOperationException if the <tt>removeAll</tt> method
        is not supported by this collection
@throws ClassCastException if the types of one or more elements
        in this collection are incompatible with the specified
        collection
        (<a href=\"#optional-restrictions\">optional</a>)
@throws NullPointerException if this collection contains one or more
        null elements and the specified collection does not support
        null elements
        (<a href=\"#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
@see #contains(Object)
"
      end

      operation 514946 "removeIf"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "filter" type class_ref 184578 // Predicate
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements of this collection that satisfy the given
predicate.  Errors or runtime exceptions thrown during iteration or by
the predicate are relayed to the caller.

@implSpec
The default implementation traverses all elements of the collection using
its {@link #iterator}.  Each matching element is removed using
{@link Iterator#remove()}.  If the collection's iterator does not
support removal then an {@code UnsupportedOperationException} will be
thrown on the first matching element.

@param filter a predicate which returns {@code true} for elements to be
       removed
@return {@code true} if any elements were removed
@throws NullPointerException if the specified filter is null
@throws UnsupportedOperationException if elements cannot be removed
        from this collection.  Implementations may throw this exception if a
        matching element cannot be removed or if, in general, removal is not
        supported.
@since 1.8
"
      end

      operation 515074 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this collection that are contained in the
specified collection (optional operation).  In other words, removes from
this collection all of its elements that are not contained in the
specified collection.

@param c collection containing elements to be retained in this collection
@return <tt>true</tt> if this collection changed as a result of the call
@throws UnsupportedOperationException if the <tt>retainAll</tt> operation
        is not supported by this collection
@throws ClassCastException if the types of one or more elements
        in this collection are incompatible with the specified
        collection
        (<a href=\"#optional-restrictions\">optional</a>)
@throws NullPointerException if this collection contains one or more
        null elements and the specified collection does not permit null
        elements
        (<a href=\"#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
@see #contains(Object)
"
      end

      operation 515202 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this collection (optional operation).
The collection will be empty after this method returns.

@throws UnsupportedOperationException if the <tt>clear</tt> operation
        is not supported by this collection
"
      end

      operation 515330 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this collection for equality. <p>

While the <tt>Collection</tt> interface adds no stipulations to the
general contract for the <tt>Object.equals</tt>, programmers who
implement the <tt>Collection</tt> interface \"directly\" (in other words,
create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt>
or a <tt>List</tt>) must exercise care if they choose to override the
<tt>Object.equals</tt>.  It is not necessary to do so, and the simplest
course of action is to rely on <tt>Object</tt>'s implementation, but
the implementor may wish to implement a \"value comparison\" in place of
the default \"reference comparison.\"  (The <tt>List</tt> and
<tt>Set</tt> interfaces mandate such value comparisons.)<p>

The general contract for the <tt>Object.equals</tt> method states that
equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and
only if <tt>b.equals(a)</tt>).  The contracts for <tt>List.equals</tt>
and <tt>Set.equals</tt> state that lists are only equal to other lists,
and sets to other sets.  Thus, a custom <tt>equals</tt> method for a
collection class that implements neither the <tt>List</tt> nor
<tt>Set</tt> interface must return <tt>false</tt> when this collection
is compared to any list or set.  (By the same logic, it is not possible
to write a class that correctly implements both the <tt>Set</tt> and
<tt>List</tt> interfaces.)

@param o object to be compared for equality with this collection
@return <tt>true</tt> if the specified object is equal to this
collection

@see Object#equals(Object)
@see Set#equals(Object)
@see List#equals(Object)
"
      end

      operation 515458 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this collection.  While the
<tt>Collection</tt> interface adds no stipulations to the general
contract for the <tt>Object.hashCode</tt> method, programmers should
take note that any class that overrides the <tt>Object.equals</tt>
method must also override the <tt>Object.hashCode</tt> method in order
to satisfy the general contract for the <tt>Object.hashCode</tt> method.
In particular, <tt>c1.equals(c2)</tt> implies that
<tt>c1.hashCode()==c2.hashCode()</tt>.

@return the hash code value for this collection

@see Object#hashCode()
@see Object#equals(Object)
"
      end

      operation 515586 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates a {@link Spliterator} over the elements in this collection.

Implementations should document characteristic values reported by the
spliterator.  Such characteristic values are not required to be reported
if the spliterator reports {@link Spliterator#SIZED} and this collection
contains no elements.

<p>The default implementation should be overridden by subclasses that
can return a more efficient spliterator.  In order to
preserve expected laziness behavior for the {@link #stream()} and
{@link #parallelStream()}} methods, spliterators should either have the
characteristic of {@code IMMUTABLE} or {@code CONCURRENT}, or be
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>.
If none of these is practical, the overriding class should describe the
spliterator's documented policy of binding and structural interference,
and should override the {@link #stream()} and {@link #parallelStream()}
methods to create streams using a {@code Supplier} of the spliterator,
as in:
<pre>{@code
    Stream<E> s = StreamSupport.stream(() -> spliterator(), spliteratorCharacteristics)
}</pre>
<p>These requirements ensure that streams produced by the
{@link #stream()} and {@link #parallelStream()} methods will reflect the
contents of the collection as of initiation of the terminal stream
operation.

@implSpec
The default implementation creates a
<em><a href=\"Spliterator.html#binding\">late-binding</a></em> spliterator
from the collections's {@code Iterator}.  The spliterator inherits the
<em>fail-fast</em> properties of the collection's iterator.
<p>
The created {@code Spliterator} reports {@link Spliterator#SIZED}.

@implNote
The created {@code Spliterator} additionally reports
{@link Spliterator#SUBSIZED}.

<p>If a spliterator covers no elements then the reporting of additional
characteristic values, beyond that of {@code SIZED} and {@code SUBSIZED},
does not aid clients to control, specialize or simplify computation.
However, this does enable shared use of an immutable and empty
spliterator instance (see {@link Spliterators#emptySpliterator()}) for
empty collections, and enables clients to determine if such a spliterator
covers no elements.

@return a {@code Spliterator} over the elements in this collection
@since 1.8
"
      end

      operation 515714 "stream"
	cpp_inline public return_type class_ref 184706 // Stream
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@code Stream} with this collection as its source.

<p>This method should be overridden when the {@link #spliterator()}
method cannot return a spliterator that is {@code IMMUTABLE},
{@code CONCURRENT}, or <em>late-binding</em>. (See {@link #spliterator()}
for details.)

@implSpec
The default implementation creates a sequential {@code Stream} from the
collection's {@code Spliterator}.

@return a sequential {@code Stream} over the elements in this collection
@since 1.8
"
      end

      operation 515842 "parallelStream"
	cpp_inline public return_type class_ref 184706 // Stream
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a possibly parallel {@code Stream} with this collection as its
source.  It is allowable for this method to return a sequential stream.

<p>This method should be overridden when the {@link #spliterator()}
method cannot return a spliterator that is {@code IMMUTABLE},
{@code CONCURRENT}, or <em>late-binding</em>. (See {@link #spliterator()}
for details.)

@implSpec
The default implementation creates a parallel {@code Stream} from the
collection's {@code Spliterator}.

@return a possibly parallel {@code Stream} over the elements in this
collection
@since 1.8
"
      end
    end

    class 184450 "Spliterator"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object for traversing and partitioning elements of a source.  The source
of elements covered by a Spliterator could be, for example, an array, a
{@link Collection}, an IO channel, or a generator function.

<p>A Spliterator may traverse elements individually ({@link
#tryAdvance tryAdvance()}) or sequentially in bulk
({@link #forEachRemaining forEachRemaining()}).

<p>A Spliterator may also partition off some of its elements (using
{@link #trySplit}) as another Spliterator, to be used in
possibly-parallel operations.  Operations using a Spliterator that
cannot split, or does so in a highly imbalanced or inefficient
manner, are unlikely to benefit from parallelism.  Traversal
and splitting exhaust elements; each Spliterator is useful for only a single
bulk computation.

<p>A Spliterator also reports a set of {@link #characteristics()} of its
structure, source, and elements from among {@link #ORDERED},
{@link #DISTINCT}, {@link #SORTED}, {@link #SIZED}, {@link #NONNULL},
{@link #IMMUTABLE}, {@link #CONCURRENT}, and {@link #SUBSIZED}. These may
be employed by Spliterator clients to control, specialize or simplify
computation.  For example, a Spliterator for a {@link Collection} would
report {@code SIZED}, a Spliterator for a {@link Set} would report
{@code DISTINCT}, and a Spliterator for a {@link SortedSet} would also
report {@code SORTED}.  Characteristics are reported as a simple unioned bit
set.

Some characteristics additionally constrain method behavior; for example if
{@code ORDERED}, traversal methods must conform to their documented ordering.
New characteristics may be defined in the future, so implementors should not
assign meanings to unlisted values.

<p><a name=\"binding\">A Spliterator that does not report {@code IMMUTABLE} or
{@code CONCURRENT} is expected to have a documented policy concerning:
when the spliterator <em>binds</em> to the element source; and detection of
structural interference of the element source detected after binding.</a>  A
<em>late-binding</em> Spliterator binds to the source of elements at the
point of first traversal, first split, or first query for estimated size,
rather than at the time the Spliterator is created.  A Spliterator that is
not <em>late-binding</em> binds to the source of elements at the point of
construction or first invocation of any method.  Modifications made to the
source prior to binding are reflected when the Spliterator is traversed.
After binding a Spliterator should, on a best-effort basis, throw
{@link ConcurrentModificationException} if structural interference is
detected.  Spliterators that do this are called <em>fail-fast</em>.  The
bulk traversal method ({@link #forEachRemaining forEachRemaining()}) of a
Spliterator may optimize traversal and check for structural interference
after all elements have been traversed, rather than checking per-element and
failing immediately.

<p>Spliterators can provide an estimate of the number of remaining elements
via the {@link #estimateSize} method.  Ideally, as reflected in characteristic
{@link #SIZED}, this value corresponds exactly to the number of elements
that would be encountered in a successful traversal.  However, even when not
exactly known, an estimated value value may still be useful to operations
being performed on the source, such as helping to determine whether it is
preferable to split further or traverse the remaining elements sequentially.

<p>Despite their obvious utility in parallel algorithms, spliterators are not
expected to be thread-safe; instead, implementations of parallel algorithms
using spliterators should ensure that the spliterator is only used by one
thread at a time.  This is generally easy to attain via <em>serial
thread-confinement</em>, which often is a natural consequence of typical
parallel algorithms that work by recursive decomposition.  A thread calling
{@link #trySplit()} may hand over the returned Spliterator to another thread,
which in turn may traverse or further split that Spliterator.  The behaviour
of splitting and traversal is undefined if two or more threads operate
concurrently on the same spliterator.  If the original thread hands a
spliterator off to another thread for processing, it is best if that handoff
occurs before any elements are consumed with {@link #tryAdvance(Consumer)
tryAdvance()}, as certain guarantees (such as the accuracy of
{@link #estimateSize()} for {@code SIZED} spliterators) are only valid before
traversal has begun.

<p>Primitive subtype specializations of {@code Spliterator} are provided for
{@link OfInt int}, {@link OfLong long}, and {@link OfDouble double} values.
The subtype default implementations of
{@link Spliterator#tryAdvance(java.util.function.Consumer)}
and {@link Spliterator#forEachRemaining(java.util.function.Consumer)} box
primitive values to instances of their corresponding wrapper class.  Such
boxing may undermine any performance advantages gained by using the primitive
specializations.  To avoid boxing, the corresponding primitive-based methods
should be used.  For example,
{@link Spliterator.OfInt#tryAdvance(java.util.function.IntConsumer)}
and {@link Spliterator.OfInt#forEachRemaining(java.util.function.IntConsumer)}
should be used in preference to
{@link Spliterator.OfInt#tryAdvance(java.util.function.Consumer)} and
{@link Spliterator.OfInt#forEachRemaining(java.util.function.Consumer)}.
Traversal of primitive values using boxing-based methods
{@link #tryAdvance tryAdvance()} and
{@link #forEachRemaining(java.util.function.Consumer) forEachRemaining()}
does not affect the order in which the values, transformed to boxed values,
are encountered.

@apiNote
<p>Spliterators, like {@code Iterator}s, are for traversing the elements of
a source.  The {@code Spliterator} API was designed to support efficient
parallel traversal in addition to sequential traversal, by supporting
decomposition as well as single-element iteration.  In addition, the
protocol for accessing elements via a Spliterator is designed to impose
smaller per-element overhead than {@code Iterator}, and to avoid the inherent
race involved in having separate methods for {@code hasNext()} and
{@code next()}.

<p>For mutable sources, arbitrary and non-deterministic behavior may occur if
the source is structurally interfered with (elements added, replaced, or
removed) between the time that the Spliterator binds to its data source and
the end of traversal.  For example, such interference will produce arbitrary,
non-deterministic results when using the {@code java.util.stream} framework.

<p>Structural interference of a source can be managed in the following ways
(in approximate order of decreasing desirability):
<ul>
<li>The source cannot be structurally interfered with.
<br>For example, an instance of
{@link java.util.concurrent.CopyOnWriteArrayList} is an immutable source.
A Spliterator created from the source reports a characteristic of
{@code IMMUTABLE}.</li>
<li>The source manages concurrent modifications.
<br>For example, a key set of a {@link java.util.concurrent.ConcurrentHashMap}
is a concurrent source.  A Spliterator created from the source reports a
characteristic of {@code CONCURRENT}.</li>
<li>The mutable source provides a late-binding and fail-fast Spliterator.
<br>Late binding narrows the window during which interference can affect
the calculation; fail-fast detects, on a best-effort basis, that structural
interference has occurred after traversal has commenced and throws
{@link ConcurrentModificationException}.  For example, {@link ArrayList},
and many other non-concurrent {@code Collection} classes in the JDK, provide
a late-binding, fail-fast spliterator.</li>
<li>The mutable source provides a non-late-binding but fail-fast Spliterator.
<br>The source increases the likelihood of throwing
{@code ConcurrentModificationException} since the window of potential
interference is larger.</li>
<li>The mutable source provides a late-binding and non-fail-fast Spliterator.
<br>The source risks arbitrary, non-deterministic behavior after traversal
has commenced since interference is not detected.
</li>
<li>The mutable source provides a non-late-binding and non-fail-fast
Spliterator.
<br>The source increases the risk of arbitrary, non-deterministic behavior
since non-detected interference may occur after construction.
</li>
</ul>

<p><b>Example.</b> Here is a class (not a very useful one, except
for illustration) that maintains an array in which the actual data
are held in even locations, and unrelated tag data are held in odd
locations. Its Spliterator ignores the tags.

<pre> {@code
class TaggedArray<T> {
  private final Object[] elements; // immutable after construction
  TaggedArray(T[] data, Object[] tags) {
    int size = data.length;
    if (tags.length != size) throw new IllegalArgumentException();
    this.elements = new Object[2 * size];
    for (int i = 0, j = 0; i < size; ++i) {
      elements[j++] = data[i];
      elements[j++] = tags[i];
    }
  }

  public Spliterator<T> spliterator() {
    return new TaggedArraySpliterator<>(elements, 0, elements.length);
  }

  static class TaggedArraySpliterator<T> implements Spliterator<T> {
    private final Object[] array;
    private int origin; // current index, advanced on split or traversal
    private final int fence; // one past the greatest index

    TaggedArraySpliterator(Object[] array, int origin, int fence) {
      this.array = array; this.origin = origin; this.fence = fence;
    }

    public void forEachRemaining(Consumer<? super T> action) {
      for (; origin < fence; origin += 2)
        action.accept((T) array[origin]);
    }

    public boolean tryAdvance(Consumer<? super T> action) {
      if (origin < fence) {
        action.accept((T) array[origin]);
        origin += 2;
        return true;
      }
      else // cannot advance
        return false;
    }

    public Spliterator<T> trySplit() {
      int lo = origin; // divide range in half
      int mid = ((lo + fence) >>> 1) & ~1; // force midpoint to be even
      if (lo < mid) { // split out left half
        origin = mid; // reset this Spliterator's origin
        return new TaggedArraySpliterator<>(array, lo, mid);
      }
      else       // too small to split
        return null;
    }

    public long estimateSize() {
      return (long)((fence - origin) / 2);
    }

    public int characteristics() {
      return ORDERED | SIZED | IMMUTABLE | SUBSIZED;
    }
  }
}}</pre>

<p>As an example how a parallel computation framework, such as the
{@code java.util.stream} package, would use Spliterator in a parallel
computation, here is one way to implement an associated parallel forEach,
that illustrates the primary usage idiom of splitting off subtasks until
the estimated amount of work is small enough to perform
sequentially. Here we assume that the order of processing across
subtasks doesn't matter; different (forked) tasks may further split
and process elements concurrently in undetermined order.  This
example uses a {@link java.util.concurrent.CountedCompleter};
similar usages apply to other parallel task constructions.

<pre>{@code
static <T> void parEach(TaggedArray<T> a, Consumer<T> action) {
  Spliterator<T> s = a.spliterator();
  long targetBatchSize = s.estimateSize() / (ForkJoinPool.getCommonPoolParallelism() * 8);
  new ParEach(null, s, action, targetBatchSize).invoke();
}

static class ParEach<T> extends CountedCompleter<Void> {
  final Spliterator<T> spliterator;
  final Consumer<T> action;
  final long targetBatchSize;

  ParEach(ParEach<T> parent, Spliterator<T> spliterator,
          Consumer<T> action, long targetBatchSize) {
    super(parent);
    this.spliterator = spliterator; this.action = action;
    this.targetBatchSize = targetBatchSize;
  }

  public void compute() {
    Spliterator<T> sub;
    while (spliterator.estimateSize() > targetBatchSize &&
           (sub = spliterator.trySplit()) != null) {
      addToPendingCount(1);
      new ParEach<>(this, sub, action, targetBatchSize).fork();
    }
    spliterator.forEachRemaining(action);
    propagateCompletion();
  }
}}</pre>

@implNote
If the boolean system property {@code org.openjdk.java.util.stream.tripwire}
is set to {@code true} then diagnostic warnings are reported if boxing of
primitive values occur when operating on primitive subtype specializations.

@param <T> the type of elements returned by this Spliterator

@see Collection
@since 1.8
"
      operation 2141058 "tryAdvance"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" type class_ref 163458 // Consumer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a remaining element exists, performs the given action on it,
returning {@code true}; else returns {@code false}.  If this
Spliterator is {@link #ORDERED} the action is performed on the
next element in encounter order.  Exceptions thrown by the
action are relayed to the caller.

@param action The action
@return {@code false} if no remaining elements existed
upon entry to this method, else {@code true}.
@throws NullPointerException if the specified action is null
"
      end

      operation 2141186 "forEachRemaining"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 163458 // Consumer
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the given action for each remaining element, sequentially in
the current thread, until all elements have been processed or the action
throws an exception.  If this Spliterator is {@link #ORDERED}, actions
are performed in encounter order.  Exceptions thrown by the action
are relayed to the caller.

@implSpec
The default implementation repeatedly invokes {@link #tryAdvance} until
it returns {@code false}.  It should be overridden whenever possible.

@param action The action
@throws NullPointerException if the specified action is null
"
      end

      operation 2141314 "trySplit"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this spliterator can be partitioned, returns a Spliterator
covering elements, that will, upon return from this method, not
be covered by this Spliterator.

<p>If this Spliterator is {@link #ORDERED}, the returned Spliterator
must cover a strict prefix of the elements.

<p>Unless this Spliterator covers an infinite number of elements,
repeated calls to {@code trySplit()} must eventually return {@code null}.
Upon non-null return:
<ul>
<li>the value reported for {@code estimateSize()} before splitting,
must, after splitting, be greater than or equal to {@code estimateSize()}
for this and the returned Spliterator; and</li>
<li>if this Spliterator is {@code SUBSIZED}, then {@code estimateSize()}
for this spliterator before splitting must be equal to the sum of
{@code estimateSize()} for this and the returned Spliterator after
splitting.</li>
</ul>

<p>This method may return {@code null} for any reason,
including emptiness, inability to split after traversal has
commenced, data structure constraints, and efficiency
considerations.

@apiNote
An ideal {@code trySplit} method efficiently (without
traversal) divides its elements exactly in half, allowing
balanced parallel computation.  Many departures from this ideal
remain highly effective; for example, only approximately
splitting an approximately balanced tree, or for a tree in
which leaf nodes may contain either one or two elements,
failing to further split these nodes.  However, large
deviations in balance and/or overly inefficient {@code
trySplit} mechanics typically result in poor parallel
performance.

@return a {@code Spliterator} covering some portion of the
elements, or {@code null} if this spliterator cannot be split
"
      end

      operation 2141442 "estimateSize"
	cpp_inline public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an estimate of the number of elements that would be
encountered by a {@link #forEachRemaining} traversal, or returns {@link
Long#MAX_VALUE} if infinite, unknown, or too expensive to compute.

<p>If this Spliterator is {@link #SIZED} and has not yet been partially
traversed or split, or this Spliterator is {@link #SUBSIZED} and has
not yet been partially traversed, this estimate must be an accurate
count of elements that would be encountered by a complete traversal.
Otherwise, this estimate may be arbitrarily inaccurate, but must decrease
as specified across invocations of {@link #trySplit}.

@apiNote
Even an inexact estimate is often useful and inexpensive to compute.
For example, a sub-spliterator of an approximately balanced binary tree
may return a value that estimates the number of elements to be half of
that of its parent; if the root Spliterator does not maintain an
accurate count, it could estimate size to be the power of two
corresponding to its maximum depth.

@return the estimated size, or {@code Long.MAX_VALUE} if infinite,
        unknown, or too expensive to compute.
"
      end

      operation 2141570 "getExactSizeIfKnown"
	cpp_inline public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that returns {@link #estimateSize()} if this
Spliterator is {@link #SIZED}, else {@code -1}.
@implSpec
The default implementation returns the result of {@code estimateSize()}
if the Spliterator reports a characteristic of {@code SIZED}, and
{@code -1} otherwise.

@return the exact size, if known, else {@code -1}.
"
      end

      operation 2141698 "characteristics"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of characteristics of this Spliterator and its
elements. The result is represented as ORed values from {@link
#ORDERED}, {@link #DISTINCT}, {@link #SORTED}, {@link #SIZED},
{@link #NONNULL}, {@link #IMMUTABLE}, {@link #CONCURRENT},
{@link #SUBSIZED}.  Repeated calls to {@code characteristics()} on
a given spliterator, prior to or in-between calls to {@code trySplit},
should always return the same result.

<p>If a Spliterator reports an inconsistent set of
characteristics (either those returned from a single invocation
or across multiple invocations), no guarantees can be made
about any computation using this Spliterator.

@apiNote The characteristics of a given spliterator before splitting
may differ from the characteristics after splitting.  For specific
examples see the characteristic values {@link #SIZED}, {@link #SUBSIZED}
and {@link #CONCURRENT}.

@return a representation of characteristics
"
      end

      operation 2141826 "hasCharacteristics"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this Spliterator's {@link
#characteristics} contain all of the given characteristics.

@implSpec
The default implementation returns true if the corresponding bits
of the given characteristics are set.

@param characteristics the characteristics to check for
@return {@code true} if all the specified characteristics are present,
else {@code false}
"
      end

      operation 2141954 "getComparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this Spliterator's source is {@link #SORTED} by a {@link Comparator},
returns that {@code Comparator}. If the source is {@code SORTED} in
{@linkplain Comparable natural order}, returns {@code null}.  Otherwise,
if the source is not {@code SORTED}, throws {@link IllegalStateException}.

@implSpec
The default implementation always throws {@link IllegalStateException}.

@return a Comparator, or {@code null} if the elements are sorted in the
natural order.
@throws IllegalStateException if the spliterator does not report
        a characteristic of {@code SORTED}.
"
      end

      attribute 493058 "ORDERED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that an encounter order is defined for
elements. If so, this Spliterator guarantees that method
{@link #trySplit} splits a strict prefix of elements, that method
{@link #tryAdvance} steps by one element in prefix order, and that
{@link #forEachRemaining} performs actions in encounter order.

<p>A {@link Collection} has an encounter order if the corresponding
{@link Collection#iterator} documents an order. If so, the encounter
order is the same as the documented order. Otherwise, a collection does
not have an encounter order.

@apiNote Encounter order is guaranteed to be ascending index order for
any {@link List}. But no order is guaranteed for hash-based collections
such as {@link HashSet}. Clients of a Spliterator that reports
{@code ORDERED} are expected to preserve ordering constraints in
non-commutative parallel computations.

"
      end

      attribute 493186 "DISTINCT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that, for each pair of
encountered elements {@code x, y}, {@code !x.equals(y)}. This
applies for example, to a Spliterator based on a {@link Set}.

"
      end

      attribute 493314 "SORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that encounter order follows a defined
sort order. If so, method {@link #getComparator()} returns the associated
Comparator, or {@code null} if all elements are {@link Comparable} and
are sorted by their natural ordering.

<p>A Spliterator that reports {@code SORTED} must also report
{@code ORDERED}.

@apiNote The spliterators for {@code Collection} classes in the JDK that
implement {@link NavigableSet} or {@link SortedSet} report {@code SORTED}.

"
      end

      attribute 493442 "SIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that the value returned from
{@code estimateSize()} prior to traversal or splitting represents a
finite size that, in the absence of structural source modification,
represents an exact count of the number of elements that would be
encountered by a complete traversal.

@apiNote Most Spliterators for Collections, that cover all elements of a
{@code Collection} report this characteristic. Sub-spliterators, such as
those for {@link HashSet}, that cover a sub-set of elements and
approximate their reported size do not.

"
      end

      attribute 493570 "NONNULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that the source guarantees that
encountered elements will not be {@code null}. (This applies,
for example, to most concurrent collections, queues, and maps.)

"
      end

      attribute 493698 "IMMUTABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that the element source cannot be
structurally modified; that is, elements cannot be added, replaced, or
removed, so such changes cannot occur during traversal. A Spliterator
that does not report {@code IMMUTABLE} or {@code CONCURRENT} is expected
to have a documented policy (for example throwing
{@link ConcurrentModificationException}) concerning structural
interference detected during traversal.

"
      end

      attribute 493826 "CONCURRENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that the element source may be safely
concurrently modified (allowing additions, replacements, and/or removals)
by multiple threads without external synchronization. If so, the
Spliterator is expected to have a documented policy concerning the impact
of modifications during traversal.

<p>A top-level Spliterator should not report both {@code CONCURRENT} and
{@code SIZED}, since the finite size, if known, may change if the source
is concurrently modified during traversal. Such a Spliterator is
inconsistent and no guarantees can be made about any computation using
that Spliterator. Sub-spliterators may report {@code SIZED} if the
sub-split size is known and additions or removals to the source are not
reflected when traversing.

@apiNote Most concurrent collections maintain a consistency policy
guaranteeing accuracy with respect to elements present at the point of
Spliterator construction, but possibly not reflecting subsequent
additions or removals.

"
      end

      attribute 493954 "SUBSIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00004000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Characteristic value signifying that all Spliterators resulting from
{@code trySplit()} will be both {@link #SIZED} and {@link #SUBSIZED}.
(This means that all child Spliterators, whether direct or indirect, will
be {@code SIZED}.)

<p>A Spliterator that does not report {@code SIZED} as required by
{@code SUBSIZED} is inconsistent and no guarantees can be made about any
computation using that Spliterator.

@apiNote Some spliterators, such as the top-level spliterator for an
approximately balanced binary tree, will report {@code SIZED} but not
{@code SUBSIZED}, since it is common to know the size of the entire tree
but not the exact sizes of subtrees.

"
      end

      class 376450 "OfPrimitive"
	visibility public stereotype "interface"
	nformals 3
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "T_CONS" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "T_SPLITR" type "" explicit_default_value ""
	  explicit_extends "Spliterator.OfPrimitive<T, T_CONS, T_SPLITR>"
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 671490 // <realization>
	  relation 671490 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 671490 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 2142082 "trySplit"
	  cpp_inline public explicit_return_type "T_SPLITR"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2142210 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" explicit_type "T_CONS"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"overloads\")
"
	  
	  
	  
	  comment "If a remaining element exists, performs the given action on it,
returning {@code true}; else returns {@code false}.  If this
Spliterator is {@link #ORDERED} the action is performed on the
next element in encounter order.  Exceptions thrown by the
action are relayed to the caller.

@param action The action
@return {@code false} if no remaining elements existed
upon entry to this method, else {@code true}.
@throws NullPointerException if the specified action is null
"
	end

	operation 2142338 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" explicit_type "T_CONS"
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"overloads\")
"
	  
	  
	  
	  comment "Performs the given action for each remaining element, sequentially in
the current thread, until all elements have been processed or the
action throws an exception.  If this Spliterator is {@link #ORDERED},
actions are performed in encounter order.  Exceptions thrown by the
action are relayed to the caller.

@implSpec
The default implementation repeatedly invokes {@link #tryAdvance}
until it returns {@code false}.  It should be overridden whenever
possible.

@param action The action
@throws NullPointerException if the specified action is null
"
	end
      end

      class 376578 "OfInt"
	visibility public stereotype "interface"
	nactuals 4
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 0 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 1 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 2 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 671618 // <realization>
	  relation 671618 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 671618 // <realization>
	    b parent class_ref 376450 // OfPrimitive
	end

	operation 2142466 "trySplit"
	  cpp_inline public return_type class_ref 376578 // OfInt
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2142594 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2142722 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2142850 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Integer> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code IntConsumer} then it is cast
to {@code IntConsumer} and passed to
{@link #tryAdvance(java.util.function.IntConsumer)}; otherwise
the action is adapted to an instance of {@code IntConsumer}, by
boxing the argument of {@code IntConsumer}, and then passed to
{@link #tryAdvance(java.util.function.IntConsumer)}.
"
	end

	operation 2142978 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Integer> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code IntConsumer} then it is cast
to {@code IntConsumer} and passed to
{@link #forEachRemaining(java.util.function.IntConsumer)}; otherwise
the action is adapted to an instance of {@code IntConsumer}, by
boxing the argument of {@code IntConsumer}, and then passed to
{@link #forEachRemaining(java.util.function.IntConsumer)}.
"
	end
      end

      class 376834 "OfLong"
	visibility public stereotype "interface"
	nactuals 4
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 0 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 1 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 2 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 671746 // <realization>
	  relation 671746 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 671746 // <realization>
	    b parent class_ref 376450 // OfPrimitive
	end

	operation 2143106 "trySplit"
	  cpp_inline public return_type class_ref 376834 // OfLong
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2143234 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2143362 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2143490 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Long> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code LongConsumer} then it is cast
to {@code LongConsumer} and passed to
{@link #tryAdvance(java.util.function.LongConsumer)}; otherwise
the action is adapted to an instance of {@code LongConsumer}, by
boxing the argument of {@code LongConsumer}, and then passed to
{@link #tryAdvance(java.util.function.LongConsumer)}.
"
	end

	operation 2143618 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Long> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code LongConsumer} then it is cast
to {@code LongConsumer} and passed to
{@link #forEachRemaining(java.util.function.LongConsumer)}; otherwise
the action is adapted to an instance of {@code LongConsumer}, by
boxing the argument of {@code LongConsumer}, and then passed to
{@link #forEachRemaining(java.util.function.LongConsumer)}.
"
	end
      end

      class 377090 "OfDouble"
	visibility public stereotype "interface"
	nactuals 4
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 0 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 1 explicit_value ""
	actual class class_ref 376450 // OfPrimitive
	  rank 2 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 671874 // <realization>
	  relation 671874 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 671874 // <realization>
	    b parent class_ref 376450 // OfPrimitive
	end

	operation 2143746 "trySplit"
	  cpp_inline public return_type class_ref 377090 // OfDouble
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2143874 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2144002 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2144130 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Double> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code DoubleConsumer} then it is
cast to {@code DoubleConsumer} and passed to
{@link #tryAdvance(java.util.function.DoubleConsumer)}; otherwise
the action is adapted to an instance of {@code DoubleConsumer}, by
boxing the argument of {@code DoubleConsumer}, and then passed to
{@link #tryAdvance(java.util.function.DoubleConsumer)}.
"
	end

	operation 2144258 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Double> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code DoubleConsumer} then it is
cast to {@code DoubleConsumer} and passed to
{@link #forEachRemaining(java.util.function.DoubleConsumer)};
otherwise the action is adapted to an instance of
{@code DoubleConsumer}, by boxing the argument of
{@code DoubleConsumer}, and then passed to
{@link #forEachRemaining(java.util.function.DoubleConsumer)}.
"
	end
      end
    end

    class 184962 "Comparator"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@FunctionalInterface
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A comparison function, which imposes a <i>total ordering</i> on some
collection of objects.  Comparators can be passed to a sort method (such
as {@link Collections#sort(List,Comparator) Collections.sort} or {@link
Arrays#sort(Object[],Comparator) Arrays.sort}) to allow precise control
over the sort order.  Comparators can also be used to control the order of
certain data structures (such as {@link SortedSet sorted sets} or {@link
SortedMap sorted maps}), or to provide an ordering for collections of
objects that don't have a {@link Comparable natural ordering}.<p>

The ordering imposed by a comparator <tt>c</tt> on a set of elements
<tt>S</tt> is said to be <i>consistent with equals</i> if and only if
<tt>c.compare(e1, e2)==0</tt> has the same boolean value as
<tt>e1.equals(e2)</tt> for every <tt>e1</tt> and <tt>e2</tt> in
<tt>S</tt>.<p>

Caution should be exercised when using a comparator capable of imposing an
ordering inconsistent with equals to order a sorted set (or sorted map).
Suppose a sorted set (or sorted map) with an explicit comparator <tt>c</tt>
is used with elements (or keys) drawn from a set <tt>S</tt>.  If the
ordering imposed by <tt>c</tt> on <tt>S</tt> is inconsistent with equals,
the sorted set (or sorted map) will behave \"strangely.\"  In particular the
sorted set (or sorted map) will violate the general contract for set (or
map), which is defined in terms of <tt>equals</tt>.<p>

For example, suppose one adds two elements {@code a} and {@code b} such that
{@code (a.equals(b) && c.compare(a, b) != 0)}
to an empty {@code TreeSet} with comparator {@code c}.
The second {@code add} operation will return
true (and the size of the tree set will increase) because {@code a} and
{@code b} are not equivalent from the tree set's perspective, even though
this is contrary to the specification of the
{@link Set#add Set.add} method.<p>

Note: It is generally a good idea for comparators to also implement
<tt>java.io.Serializable</tt>, as they may be used as ordering methods in
serializable data structures (like {@link TreeSet}, {@link TreeMap}).  In
order for the data structure to serialize successfully, the comparator (if
provided) must implement <tt>Serializable</tt>.<p>

For the mathematically inclined, the <i>relation</i> that defines the
<i>imposed ordering</i> that a given comparator <tt>c</tt> imposes on a
given set of objects <tt>S</tt> is:<pre>
      {(x, y) such that c.compare(x, y) &lt;= 0}.
</pre> The <i>quotient</i> for this total order is:<pre>
      {(x, y) such that c.compare(x, y) == 0}.
</pre>

It follows immediately from the contract for <tt>compare</tt> that the
quotient is an <i>equivalence relation</i> on <tt>S</tt>, and that the
imposed ordering is a <i>total order</i> on <tt>S</tt>.  When we say that
the ordering imposed by <tt>c</tt> on <tt>S</tt> is <i>consistent with
equals</i>, we mean that the quotient for the ordering is the equivalence
relation defined by the objects' {@link Object#equals(Object)
equals(Object)} method(s):<pre>
    {(x, y) such that x.equals(y)}. </pre>

<p>Unlike {@code Comparable}, a comparator may optionally permit
comparison of null arguments, while maintaining the requirements for
an equivalence relation.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <T> the type of objects that may be compared by this comparator

@author  Josh Bloch
@author  Neal Gafter
@see Comparable
@see java.io.Serializable
@since 1.2
"
      operation 605826 "compare"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "o1" explicit_type "T"
	  param inout name "o2" explicit_type "T"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares its two arguments for order.  Returns a negative integer,
zero, or a positive integer as the first argument is less than, equal
to, or greater than the second.<p>

In the foregoing description, the notation
<tt>sgn(</tt><i>expression</i><tt>)</tt> designates the mathematical
<i>signum</i> function, which is defined to return one of <tt>-1</tt>,
<tt>0</tt>, or <tt>1</tt> according to whether the value of
<i>expression</i> is negative, zero or positive.<p>

The implementor must ensure that <tt>sgn(compare(x, y)) ==
-sgn(compare(y, x))</tt> for all <tt>x</tt> and <tt>y</tt>.  (This
implies that <tt>compare(x, y)</tt> must throw an exception if and only
if <tt>compare(y, x)</tt> throws an exception.)<p>

The implementor must also ensure that the relation is transitive:
<tt>((compare(x, y)&gt;0) &amp;&amp; (compare(y, z)&gt;0))</tt> implies
<tt>compare(x, z)&gt;0</tt>.<p>

Finally, the implementor must ensure that <tt>compare(x, y)==0</tt>
implies that <tt>sgn(compare(x, z))==sgn(compare(y, z))</tt> for all
<tt>z</tt>.<p>

It is generally the case, but <i>not</i> strictly required that
<tt>(compare(x, y)==0) == (x.equals(y))</tt>.  Generally speaking,
any comparator that violates this condition should clearly indicate
this fact.  The recommended language is \"Note: this comparator
imposes orderings that are inconsistent with equals.\"

@param o1 the first object to be compared.
@param o2 the second object to be compared.
@return a negative integer, zero, or a positive integer as the
        first argument is less than, equal to, or greater than the
        second.
@throws NullPointerException if an argument is null and this
        comparator does not permit null arguments
@throws ClassCastException if the arguments' types prevent them from
        being compared by this comparator.
"
      end

      operation 605954 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether some other object is &quot;equal to&quot; this
comparator.  This method must obey the general contract of
{@link Object#equals(Object)}.  Additionally, this method can return
<tt>true</tt> <i>only</i> if the specified object is also a comparator
and it imposes the same ordering as this comparator.  Thus,
<code>comp1.equals(comp2)</code> implies that <tt>sgn(comp1.compare(o1,
o2))==sgn(comp2.compare(o1, o2))</tt> for every object reference
<tt>o1</tt> and <tt>o2</tt>.<p>

Note that it is <i>always</i> safe <i>not</i> to override
<tt>Object.equals(Object)</tt>.  However, overriding this method may,
in some cases, improve performance by allowing programs to determine
that two distinct comparators impose the same order.

@param   obj   the reference object with which to compare.
@return  <code>true</code> only if the specified object is also
         a comparator and it imposes the same ordering as this
         comparator.
@see Object#equals(Object)
@see Object#hashCode()
"
      end

      operation 606082 "reversed"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a comparator that imposes the reverse ordering of this
comparator.

@return a comparator that imposes the reverse ordering of this
        comparator.
@since 1.8
"
      end

      operation 606210 "thenComparing"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "other" type class_ref 184962 // Comparator
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a lexicographic-order comparator with another comparator.
If this {@code Comparator} considers two elements equal, i.e.
{@code compare(a, b) == 0}, {@code other} is used to determine the order.

<p>The returned comparator is serializable if the specified comparator
is also serializable.

@apiNote
For example, to sort a collection of {@code String} based on the length
and then case-insensitive natural ordering, the comparator can be
composed using following code,

<pre>{@code
    Comparator<String> cmp = Comparator.comparingInt(String::length)
            .thenComparing(String.CASE_INSENSITIVE_ORDER);
}</pre>

@param  other the other comparator to be used when this comparator
        compares two objects that are equal.
@return a lexicographic-order comparator composed of this and then the
        other comparator
@throws NullPointerException if the argument is null.
@since 1.8
"
      end

      operation 606338 "thenComparing"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 2
	  param inout name "keyExtractor" type class_ref 192770 // Function
	  param inout name "keyComparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U> ${type}<T> ${name}${(}${t0}<? super T, ? extends U> ${p0}, ${t1}<? super U> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a lexicographic-order comparator with a function that
extracts a key to be compared with the given {@code Comparator}.

@implSpec This default implementation behaves as if {@code
          thenComparing(comparing(keyExtractor, cmp))}.

@param  <U>  the type of the sort key
@param  keyExtractor the function used to extract the sort key
@param  keyComparator the {@code Comparator} used to compare the sort key
@return a lexicographic-order comparator composed of this comparator
        and then comparing on the key extracted by the keyExtractor function
@throws NullPointerException if either argument is null.
@see #comparing(Function, Comparator)
@see #thenComparing(Comparator)
@since 1.8
"
      end

      operation 606466 "thenComparing"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 192770 // Function
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U extends Comparable<? super U>> ${type}<T> ${name}${(}${t0}<? super T, ? extends U> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a lexicographic-order comparator with a function that
extracts a {@code Comparable} sort key.

@implSpec This default implementation behaves as if {@code
          thenComparing(comparing(keyExtractor))}.

@param  <U>  the type of the {@link Comparable} sort key
@param  keyExtractor the function used to extract the {@link
        Comparable} sort key
@return a lexicographic-order comparator composed of this and then the
        {@link Comparable} sort key.
@throws NullPointerException if the argument is null.
@see #comparing(Function)
@see #thenComparing(Comparator)
@since 1.8
"
      end

      operation 606594 "thenComparingInt"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 193922 // ToIntFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a lexicographic-order comparator with a function that
extracts a {@code int} sort key.

@implSpec This default implementation behaves as if {@code
          thenComparing(comparingInt(keyExtractor))}.

@param  keyExtractor the function used to extract the integer sort key
@return a lexicographic-order comparator composed of this and then the
        {@code int} sort key
@throws NullPointerException if the argument is null.
@see #comparingInt(ToIntFunction)
@see #thenComparing(Comparator)
@since 1.8
"
      end

      operation 606722 "thenComparingLong"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 194050 // ToLongFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a lexicographic-order comparator with a function that
extracts a {@code long} sort key.

@implSpec This default implementation behaves as if {@code
          thenComparing(comparingLong(keyExtractor))}.

@param  keyExtractor the function used to extract the long sort key
@return a lexicographic-order comparator composed of this and then the
        {@code long} sort key
@throws NullPointerException if the argument is null.
@see #comparingLong(ToLongFunction)
@see #thenComparing(Comparator)
@since 1.8
"
      end

      operation 606850 "thenComparingDouble"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 194178 // ToDoubleFunction
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a lexicographic-order comparator with a function that
extracts a {@code double} sort key.

@implSpec This default implementation behaves as if {@code
          thenComparing(comparingDouble(keyExtractor))}.

@param  keyExtractor the function used to extract the double sort key
@return a lexicographic-order comparator composed of this and then the
        {@code double} sort key
@throws NullPointerException if the argument is null.
@see #comparingDouble(ToDoubleFunction)
@see #thenComparing(Comparator)
@since 1.8
"
      end

      operation 606978 "reverseOrder"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a comparator that imposes the reverse of the <em>natural
ordering</em>.

<p>The returned comparator is serializable and throws {@link
NullPointerException} when comparing {@code null}.

@param  <T> the {@link Comparable} type of element to be compared
@return a comparator that imposes the reverse of the <i>natural
        ordering</i> on {@code Comparable} objects.
@see Comparable
@since 1.8
"
      end

      operation 607106 "naturalOrder"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a comparator that compares {@link Comparable} objects in natural
order.

<p>The returned comparator is serializable and throws {@link
NullPointerException} when comparing {@code null}.

@param  <T> the {@link Comparable} type of element to be compared
@return a comparator that imposes the <i>natural ordering</i> on {@code
        Comparable} objects.
@see Comparable
@since 1.8
"
      end

      operation 607234 "nullsFirst"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a null-friendly comparator that considers {@code null} to be
less than non-null. When both are {@code null}, they are considered
equal. If both are non-null, the specified {@code Comparator} is used
to determine the order. If the specified comparator is {@code null},
then the returned comparator considers all non-null values to be equal.

<p>The returned comparator is serializable if the specified comparator
is serializable.

@param  <T> the type of the elements to be compared
@param  comparator a {@code Comparator} for comparing non-null values
@return a comparator that considers {@code null} to be less than
        non-null, and compares non-null objects with the supplied
        {@code Comparator}.
@since 1.8
"
      end

      operation 607362 "nullsLast"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a null-friendly comparator that considers {@code null} to be
greater than non-null. When both are {@code null}, they are considered
equal. If both are non-null, the specified {@code Comparator} is used
to determine the order. If the specified comparator is {@code null},
then the returned comparator considers all non-null values to be equal.

<p>The returned comparator is serializable if the specified comparator
is serializable.

@param  <T> the type of the elements to be compared
@param  comparator a {@code Comparator} for comparing non-null values
@return a comparator that considers {@code null} to be greater than
        non-null, and compares non-null objects with the supplied
        {@code Comparator}.
@since 1.8
"
      end

      operation 607490 "comparing"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 2
	  param inout name "keyExtractor" type class_ref 192770 // Function
	  param inout name "keyComparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T, U> ${type}<T> ${name}${(}${t0}<? super T, ? extends U> ${p0}, ${t1}<? super U> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a function that extracts a sort key from a type {@code T}, and
returns a {@code Comparator<T>} that compares by that sort key using
the specified {@link Comparator}.

<p>The returned comparator is serializable if the specified function
and comparator are both serializable.

@apiNote
For example, to obtain a {@code Comparator} that compares {@code
Person} objects by their last name ignoring case differences,

<pre>{@code
    Comparator<Person> cmp = Comparator.comparing(
            Person::getLastName,
            String.CASE_INSENSITIVE_ORDER);
}</pre>

@param  <T> the type of element to be compared
@param  <U> the type of the sort key
@param  keyExtractor the function used to extract the sort key
@param  keyComparator the {@code Comparator} used to compare the sort key
@return a comparator that compares by an extracted key using the
        specified {@code Comparator}
@throws NullPointerException if either argument is null
@since 1.8
"
      end

      operation 607618 "comparing"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 192770 // Function
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T, U extends Comparable<? super U>> ${type}<T> ${name}${(}${t0}<? super T, ? extends U> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a function that extracts a {@link java.lang.Comparable
Comparable} sort key from a type {@code T}, and returns a {@code
Comparator<T>} that compares by that sort key.

<p>The returned comparator is serializable if the specified function
is also serializable.

@apiNote
For example, to obtain a {@code Comparator} that compares {@code
Person} objects by their last name,

<pre>{@code
    Comparator<Person> byLastName = Comparator.comparing(Person::getLastName);
}</pre>

@param  <T> the type of element to be compared
@param  <U> the type of the {@code Comparable} sort key
@param  keyExtractor the function used to extract the {@link
        Comparable} sort key
@return a comparator that compares by an extracted key
@throws NullPointerException if the argument is null
@since 1.8
"
      end

      operation 607746 "comparingInt"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 193922 // ToIntFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a function that extracts an {@code int} sort key from a type
{@code T}, and returns a {@code Comparator<T>} that compares by that
sort key.

<p>The returned comparator is serializable if the specified function
is also serializable.

@param  <T> the type of element to be compared
@param  keyExtractor the function used to extract the integer sort key
@return a comparator that compares by an extracted key
@see #comparing(Function)
@throws NullPointerException if the argument is null
@since 1.8
"
      end

      operation 607874 "comparingLong"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 194050 // ToLongFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a function that extracts a {@code long} sort key from a type
{@code T}, and returns a {@code Comparator<T>} that compares by that
sort key.

<p>The returned comparator is serializable if the specified function is
also serializable.

@param  <T> the type of element to be compared
@param  keyExtractor the function used to extract the long sort key
@return a comparator that compares by an extracted key
@see #comparing(Function)
@throws NullPointerException if the argument is null
@since 1.8
"
      end

      operation 608002 "comparingDouble"
	class_operation cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "keyExtractor" type class_ref 194178 // ToDoubleFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a function that extracts a {@code double} sort key from a type
{@code T}, and returns a {@code Comparator<T>} that compares by that
sort key.

<p>The returned comparator is serializable if the specified function
is also serializable.

@param  <T> the type of element to be compared
@param  keyExtractor the function used to extract the double sort key
@return a comparator that compares by an extracted key
@see #comparing(Function)
@throws NullPointerException if the argument is null
@since 1.8
"
      end
    end

    class 185090 "ListIterator"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 132994 // Iterator
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An iterator for lists that allows the programmer
to traverse the list in either direction, modify
the list during iteration, and obtain the iterator's
current position in the list. A {@code ListIterator}
has no current element; its <I>cursor position</I> always
lies between the element that would be returned by a call
to {@code previous()} and the element that would be
returned by a call to {@code next()}.
An iterator for a list of length {@code n} has {@code n+1} possible
cursor positions, as illustrated by the carets ({@code ^}) below:
<PRE>
                     Element(0)   Element(1)   Element(2)   ... Element(n-1)
cursor positions:  ^            ^            ^            ^                  ^
</PRE>
Note that the {@link #remove} and {@link #set(Object)} methods are
<i>not</i> defined in terms of the cursor position;  they are defined to
operate on the last element returned by a call to {@link #next} or
{@link #previous()}.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@see Collection
@see List
@see Iterator
@see Enumeration
@see List#listIterator()
@since   1.2
"
      classrelation 211842 // <realization>
	relation 211842 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 211842 // <realization>
	  b parent class_ref 132994 // Iterator
      end

      operation 523906 "hasNext"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns {@code true} if this list iterator has more elements when
traversing the list in the forward direction. (In other words,
returns {@code true} if {@link #next} would return an element rather
than throwing an exception.)

@return {@code true} if the list iterator has more elements when
        traversing the list in the forward direction
"
      end

      operation 524034 "next"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next element in the list and advances the cursor position.
This method may be called repeatedly to iterate through the list,
or intermixed with calls to {@link #previous} to go back and forth.
(Note that alternating calls to {@code next} and {@code previous}
will return the same element repeatedly.)

@return the next element in the list
@throws NoSuchElementException if the iteration has no next element
"
      end

      operation 524162 "hasPrevious"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this list iterator has more elements when
traversing the list in the reverse direction.  (In other words,
returns {@code true} if {@link #previous} would return an element
rather than throwing an exception.)

@return {@code true} if the list iterator has more elements when
        traversing the list in the reverse direction
"
      end

      operation 524290 "previous"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous element in the list and moves the cursor
position backwards.  This method may be called repeatedly to
iterate through the list backwards, or intermixed with calls to
{@link #next} to go back and forth.  (Note that alternating calls
to {@code next} and {@code previous} will return the same
element repeatedly.)

@return the previous element in the list
@throws NoSuchElementException if the iteration has no previous
        element
"
      end

      operation 524418 "nextIndex"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the element that would be returned by a
subsequent call to {@link #next}. (Returns list size if the list
iterator is at the end of the list.)

@return the index of the element that would be returned by a
        subsequent call to {@code next}, or list size if the list
        iterator is at the end of the list
"
      end

      operation 524546 "previousIndex"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the element that would be returned by a
subsequent call to {@link #previous}. (Returns -1 if the list
iterator is at the beginning of the list.)

@return the index of the element that would be returned by a
        subsequent call to {@code previous}, or -1 if the list
        iterator is at the beginning of the list
"
      end

      operation 524674 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Removes from the list the last element that was returned by {@link
#next} or {@link #previous} (optional operation).  This call can
only be made once per call to {@code next} or {@code previous}.
It can be made only if {@link #add} has not been
called after the last call to {@code next} or {@code previous}.

@throws UnsupportedOperationException if the {@code remove}
        operation is not supported by this list iterator
@throws IllegalStateException if neither {@code next} nor
        {@code previous} have been called, or {@code remove} or
        {@code add} have been called after the last call to
        {@code next} or {@code previous}
"
      end

      operation 524802 "set"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the last element returned by {@link #next} or
{@link #previous} with the specified element (optional operation).
This call can be made only if neither {@link #remove} nor {@link
#add} have been called after the last call to {@code next} or
{@code previous}.

@param e the element with which to replace the last element returned by
         {@code next} or {@code previous}
@throws UnsupportedOperationException if the {@code set} operation
        is not supported by this list iterator
@throws ClassCastException if the class of the specified element
        prevents it from being added to this list
@throws IllegalArgumentException if some aspect of the specified
        element prevents it from being added to this list
@throws IllegalStateException if neither {@code next} nor
        {@code previous} have been called, or {@code remove} or
        {@code add} have been called after the last call to
        {@code next} or {@code previous}
"
      end

      operation 524930 "add"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into the list (optional operation).
The element is inserted immediately before the element that
would be returned by {@link #next}, if any, and after the element
that would be returned by {@link #previous}, if any.  (If the
list contains no elements, the new element becomes the sole element
on the list.)  The new element is inserted before the implicit
cursor: a subsequent call to {@code next} would be unaffected, and a
subsequent call to {@code previous} would return the new element.
(This call increases by one the value that would be returned by a
call to {@code nextIndex} or {@code previousIndex}.)

@param e the element to insert
@throws UnsupportedOperationException if the {@code add} method is
        not supported by this list iterator
@throws ClassCastException if the class of the specified element
        prevents it from being added to this list
@throws IllegalArgumentException if some aspect of this element
        prevents it from being added to this list
"
      end
    end

    class 185474 "SubList"
      visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 183938 // AbstractList
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 212098 // <realization>
	relation 212098 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 212098 // <realization>
	  b parent class_ref 183938 // AbstractList
      end

      classrelation 212226 // l (<unidirectional association>)
	relation 212226 --->
	  a role_name "l" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 212226 // l (<unidirectional association>)
	  b parent class_ref 183938 // AbstractList
      end

      attribute 178050 "offset"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 178178 "size"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 526722 "SubList"
	cpp_inline package explicit_return_type ""
	nparams 3
	  param inout name "list" type class_ref 183938 // AbstractList
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 526850 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 526978 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527106 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527234 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527362 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527490 "removeRange"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527618 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527746 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 527874 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528002 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528130 "subList"
	cpp_inline public return_type class_ref 175362 // List
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528258 "rangeCheck"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528386 "rangeCheckForAdd"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528514 "outOfBoundsMsg"
	cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528642 "checkForComodification"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 185602 "RandomAccessSubList"
      visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 185474 // SubList
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 212354 // <realization>
	relation 212354 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 212354 // <realization>
	  b parent class_ref 185474 // SubList
      end

      classrelation 212482 // <realization>
	relation 212482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 212482 // <realization>
	  b parent class_ref 185730 // RandomAccess
      end

      operation 528770 "RandomAccessSubList"
	cpp_inline package explicit_return_type ""
	nparams 3
	  param inout name "list" type class_ref 183938 // AbstractList
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 528898 "subList"
	cpp_inline public return_type class_ref 175362 // List
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 185730 "RandomAccess"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Marker interface used by <tt>List</tt> implementations to indicate that
they support fast (generally constant time) random access.  The primary
purpose of this interface is to allow generic algorithms to alter their
behavior to provide good performance when applied to either random or
sequential access lists.

<p>The best algorithms for manipulating random access lists (such as
<tt>ArrayList</tt>) can produce quadratic behavior when applied to
sequential access lists (such as <tt>LinkedList</tt>).  Generic list
algorithms are encouraged to check whether the given list is an
<tt>instanceof</tt> this interface before applying an algorithm that would
provide poor performance if it were applied to a sequential access list,
and to alter their behavior if necessary to guarantee acceptable
performance.

<p>It is recognized that the distinction between random and sequential
access is often fuzzy.  For example, some <tt>List</tt> implementations
provide asymptotically linear access times if they get huge, but constant
access times in practice.  Such a <tt>List</tt> implementation
should generally implement this interface.  As a rule of thumb, a
<tt>List</tt> implementation should implement this interface if,
for typical instances of the class, this loop:
<pre>
    for (int i=0, n=list.size(); i &lt; n; i++)
        list.get(i);
</pre>
runs faster than this loop:
<pre>
    for (Iterator i=list.iterator(); i.hasNext(); )
        i.next();
</pre>

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@since 1.4
"
    end

    class 185986 "Enumeration"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object that implements the Enumeration interface generates a
series of elements, one at a time. Successive calls to the
<code>nextElement</code> method return successive elements of the
series.
<p>
For example, to print all elements of a <tt>Vector&lt;E&gt;</tt> <i>v</i>:
<pre>
  for (Enumeration&lt;E&gt; e = v.elements(); e.hasMoreElements();)
      System.out.println(e.nextElement());</pre>
<p>
Methods are provided to enumerate through the elements of a
vector, the keys of a hashtable, and the values in a hashtable.
Enumerations are also used to specify the input streams to a
<code>SequenceInputStream</code>.
<p>
NOTE: The functionality of this interface is duplicated by the Iterator
interface.  In addition, Iterator adds an optional remove operation, and
has shorter method names.  New implementations should consider using
Iterator in preference to Enumeration.

@see     java.util.Iterator
@see     java.io.SequenceInputStream
@see     java.util.Enumeration#nextElement()
@see     java.util.Hashtable
@see     java.util.Hashtable#elements()
@see     java.util.Hashtable#keys()
@see     java.util.Vector
@see     java.util.Vector#elements()

@author  Lee Boynton
@since   JDK1.0
"
      operation 1456642 "hasMoreElements"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this enumeration contains more elements.

@return  <code>true</code> if and only if this enumeration object
          contains at least one more element to provide;
         <code>false</code> otherwise.
"
      end

      operation 1456770 "nextElement"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next element of this enumeration if this enumeration
object has at least one more element to provide.

@return     the next element of this enumeration.
@exception  NoSuchElementException  if no more elements exist.
"
      end
    end

    class 186498 "ArrayList"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 183938 // AbstractList
        rank 0 explicit_value ""
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Resizable-array implementation of the <tt>List</tt> interface.  Implements
all optional list operations, and permits all elements, including
<tt>null</tt>.  In addition to implementing the <tt>List</tt> interface,
this class provides methods to manipulate the size of the array that is
used internally to store the list.  (This class is roughly equivalent to
<tt>Vector</tt>, except that it is unsynchronized.)

<p>The <tt>size</tt>, <tt>isEmpty</tt>, <tt>get</tt>, <tt>set</tt>,
<tt>iterator</tt>, and <tt>listIterator</tt> operations run in constant
time.  The <tt>add</tt> operation runs in <i>amortized constant time</i>,
that is, adding n elements requires O(n) time.  All of the other operations
run in linear time (roughly speaking).  The constant factor is low compared
to that for the <tt>LinkedList</tt> implementation.

<p>Each <tt>ArrayList</tt> instance has a <i>capacity</i>.  The capacity is
the size of the array used to store the elements in the list.  It is always
at least as large as the list size.  As elements are added to an ArrayList,
its capacity grows automatically.  The details of the growth policy are not
specified beyond the fact that adding an element has constant amortized
time cost.

<p>An application can increase the capacity of an <tt>ArrayList</tt> instance
before adding a large number of elements using the <tt>ensureCapacity</tt>
operation.  This may reduce the amount of incremental reallocation.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access an <tt>ArrayList</tt> instance concurrently,
and at least one of the threads modifies the list structurally, it
<i>must</i> be synchronized externally.  (A structural modification is
any operation that adds or deletes one or more elements, or explicitly
resizes the backing array; merely setting the value of an element is not
a structural modification.)  This is typically accomplished by
synchronizing on some object that naturally encapsulates the list.

If no such object exists, the list should be \"wrapped\" using the
{@link Collections#synchronizedList Collections.synchronizedList}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the list:<pre>
  List list = Collections.synchronizedList(new ArrayList(...));</pre>

<p><a name=\"fail-fast\">
The iterators returned by this class's {@link #iterator() iterator} and
{@link #listIterator(int) listIterator} methods are <em>fail-fast</em>:</a>
if the list is structurally modified at any time after the iterator is
created, in any way except through the iterator's own
{@link ListIterator#remove() remove} or
{@link ListIterator#add(Object) add} methods, the iterator will throw a
{@link ConcurrentModificationException}.  Thus, in the face of
concurrent modification, the iterator fails quickly and cleanly, rather
than risking arbitrary, non-deterministic behavior at an undetermined
time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:  <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@author  Neal Gafter
@see     Collection
@see     List
@see     LinkedList
@see     Vector
@since   1.2
"
      classrelation 3476994 // <realization>
	relation 3476994 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3476994 // <realization>
	  b parent class_ref 183938 // AbstractList
      end

      classrelation 3477122 // <realization>
	relation 3477122 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3477122 // <realization>
	  b parent class_ref 175362 // List
      end

      classrelation 3477250 // <realization>
	relation 3477250 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3477250 // <realization>
	  b parent class_ref 185730 // RandomAccess
      end

      classrelation 3477378 // <realization>
	relation 3477378 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3477378 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3477506 // <realization>
	relation 3477506 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3477506 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1980674 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8683452581122892189L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1980802 "DEFAULT_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default initial capacity.

"
      end

      classrelation 3477634 // EMPTY_ELEMENTDATA (<unidirectional association>)
	relation 3477634 --->
	  a role_name "EMPTY_ELEMENTDATA" multiplicity "[]" init_value " {}" class_relation const_relation private
	    comment "
Shared empty array instance used for empty instances.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3477634 // EMPTY_ELEMENTDATA (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3477762 // DEFAULTCAPACITY_EMPTY_ELEMENTDATA (<unidirectional association>)
	relation 3477762 --->
	  a role_name "DEFAULTCAPACITY_EMPTY_ELEMENTDATA" multiplicity "[]" init_value " {}" class_relation const_relation private
	    comment "
Shared empty array instance used for default sized empty instances. We
distinguish this from EMPTY_ELEMENTDATA to know how much to inflate when
first element is added.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3477762 // DEFAULTCAPACITY_EMPTY_ELEMENTDATA (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3477890 // elementData (<unidirectional association>)
	relation 3477890 --->
	  a role_name "elementData" multiplicity "[]" package
	    comment "
The array buffer into which the elements of the ArrayList are stored.
The capacity of the ArrayList is the length of this array buffer. Any
empty ArrayList with elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA
will be expanded to DEFAULT_CAPACITY when the first element is added.

 non-private to simplify nested class access"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3477890 // elementData (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1980930 "size"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The size of the ArrayList (the number of elements it contains).

@serial

"
      end

      operation 8597250 "ArrayList"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty list with the specified initial capacity.

@param  initialCapacity  the initial capacity of the list
@throws IllegalArgumentException if the specified initial capacity
        is negative
"
      end

      operation 8597378 "ArrayList"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty list with an initial capacity of ten.
"
      end

      operation 8597506 "ArrayList"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a list containing the elements of the specified
collection, in the order they are returned by the collection's
iterator.

@param c the collection whose elements are to be placed into this list
@throws NullPointerException if the specified collection is null
"
      end

      operation 8597634 "trimToSize"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Trims the capacity of this <tt>ArrayList</tt> instance to be the
list's current size.  An application can use this operation to minimize
the storage of an <tt>ArrayList</tt> instance.
"
      end

      operation 8597762 "ensureCapacity"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity of this <tt>ArrayList</tt> instance, if
necessary, to ensure that it can hold at least the number of elements
specified by the minimum capacity argument.

@param   minCapacity   the desired minimum capacity
"
      end

      operation 8597890 "ensureCapacityInternal"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8598018 "ensureExplicitCapacity"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1981058 "MAX_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE - 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size of array to allocate.
Some VMs reserve some header words in an array.
Attempts to allocate larger arrays may result in
OutOfMemoryError: Requested array size exceeds VM limit

"
      end

      operation 8598146 "grow"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity to ensure that it can hold at least the
number of elements specified by the minimum capacity argument.

@param minCapacity the desired minimum capacity
"
      end

      operation 8598274 "hugeCapacity"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8598402 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this list.

@return the number of elements in this list
"
      end

      operation 8598530 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this list contains no elements.

@return <tt>true</tt> if this list contains no elements
"
      end

      operation 8598658 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this list contains the specified element.
More formally, returns <tt>true</tt> if and only if this list contains
at least one element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this list is to be tested
@return <tt>true</tt> if this list contains the specified element
"
      end

      operation 8598786 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first occurrence of the specified element
in this list, or -1 if this list does not contain the element.
More formally, returns the lowest index <tt>i</tt> such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.
"
      end

      operation 8598914 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last occurrence of the specified element
in this list, or -1 if this list does not contain the element.
More formally, returns the highest index <tt>i</tt> such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,
or -1 if there is no such index.
"
      end

      operation 8599042 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shallow copy of this <tt>ArrayList</tt> instance.  (The
elements themselves are not copied.)

@return a clone of this <tt>ArrayList</tt> instance
"
      end

      operation 8599170 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this list
in proper sequence (from first to last element).

<p>The returned array will be \"safe\" in that no references to it are
maintained by this list.  (In other words, this method must allocate
a new array).  The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all of the elements in this list in
        proper sequence
"
      end

      operation 8599298 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all of the elements in this list in proper
sequence (from first to last element); the runtime type of the returned
array is that of the specified array.  If the list fits in the
specified array, it is returned therein.  Otherwise, a new array is
allocated with the runtime type of the specified array and the size of
this list.

<p>If the list fits in the specified array with room to spare
(i.e., the array has more elements than the list), the element in
the array immediately following the end of the collection is set to
<tt>null</tt>.  (This is useful in determining the length of the
list <i>only</i> if the caller knows that the list does not contain
any null elements.)

@param a the array into which the elements of the list are to
         be stored, if it is big enough; otherwise, a new array of the
         same runtime type is allocated for this purpose.
@return an array containing the elements of the list
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in
        this list
@throws NullPointerException if the specified array is null
"
      end

      operation 8599426 "elementData"
	cpp_inline package explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Positional Access Operations"
      end

      operation 8599554 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element at the specified position in this list.

@param  index index of the element to return
@return the element at the specified position in this list
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8599682 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified position in this list with
the specified element.

@param index index of the element to replace
@param element element to be stored at the specified position
@return the element previously at the specified position
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8599810 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified element to the end of this list.

@param e element to be appended to this list
@return <tt>true</tt> (as specified by {@link Collection#add})
"
      end

      operation 8599938 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the specified position in this
list. Shifts the element currently at that position (if any) and
any subsequent elements to the right (adds one to their indices).

@param index index at which the specified element is to be inserted
@param element element to be inserted
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8600066 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in this list.
Shifts any subsequent elements to the left (subtracts one from their
indices).

@param index the index of the element to be removed
@return the element that was removed from the list
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8600194 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element from this list,
if it is present.  If the list does not contain the element, it is
unchanged.  More formally, removes the element with the lowest index
<tt>i</tt> such that
<tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>
(if such an element exists).  Returns <tt>true</tt> if this list
contained the specified element (or equivalently, if this list
changed as a result of the call).

@param o element to be removed from this list, if present
@return <tt>true</tt> if this list contained the specified element
"
      end

      operation 8600322 "fastRemove"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private remove method that skips bounds checking and does not
return the value removed.
"
      end

      operation 8600450 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this list.  The list will
be empty after this call returns.
"
      end

      operation 8600578 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends all of the elements in the specified collection to the end of
this list, in the order that they are returned by the
specified collection's Iterator.  The behavior of this operation is
undefined if the specified collection is modified while the operation
is in progress.  (This implies that the behavior of this call is
undefined if the specified collection is this list, and this
list is nonempty.)

@param c collection containing elements to be added to this list
@return <tt>true</tt> if this list changed as a result of the call
@throws NullPointerException if the specified collection is null
"
      end

      operation 8600706 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements in the specified collection into this
list, starting at the specified position.  Shifts the element
currently at that position (if any) and any subsequent elements to
the right (increases their indices).  The new elements will appear
in the list in the order that they are returned by the
specified collection's iterator.

@param index index at which to insert the first element from the
             specified collection
@param c collection containing elements to be added to this list
@return <tt>true</tt> if this list changed as a result of the call
@throws IndexOutOfBoundsException {@inheritDoc}
@throws NullPointerException if the specified collection is null
"
      end

      operation 8600834 "removeRange"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this list all of the elements whose index is between
{@code fromIndex}, inclusive, and {@code toIndex}, exclusive.
Shifts any succeeding elements to the left (reduces their index).
This call shortens the list by {@code (toIndex - fromIndex)} elements.
(If {@code toIndex==fromIndex}, this operation has no effect.)

@throws IndexOutOfBoundsException if {@code fromIndex} or
        {@code toIndex} is out of range
        ({@code fromIndex < 0 ||
         fromIndex >= size() ||
         toIndex > size() ||
         toIndex < fromIndex})
"
      end

      operation 8600962 "rangeCheck"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the given index is in range.  If not, throws an appropriate
runtime exception.  This method does *not* check if the index is
negative: It is always used immediately prior to an array access,
which throws an ArrayIndexOutOfBoundsException if index is negative.
"
      end

      operation 8601090 "rangeCheckForAdd"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A version of rangeCheck used by add and addAll.
"
      end

      operation 8601218 "outOfBoundsMsg"
	cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IndexOutOfBoundsException detail message.
Of the many possible refactorings of the error handling code,
this \"outlining\" performs best with both server and client VMs.
"
      end

      operation 8601346 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this list all of its elements that are contained in the
specified collection.

@param c collection containing elements to be removed from this list
@return {@code true} if this list changed as a result of the call
@throws ClassCastException if the class of an element of this list
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this list contains a null element and the
        specified collection does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see Collection#contains(Object)
"
      end

      operation 8601474 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this list that are contained in the
specified collection.  In other words, removes from this list all
of its elements that are not contained in the specified collection.

@param c collection containing elements to be retained in this list
@return {@code true} if this list changed as a result of the call
@throws ClassCastException if the class of an element of this list
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this list contains a null element and the
        specified collection does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see Collection#contains(Object)
"
      end

      operation 8601602 "batchRemove"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param inout name "complement" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8601730 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the <tt>ArrayList</tt> instance to a stream (that
is, serialize it).

@serialData The length of the array backing the <tt>ArrayList</tt>
            instance is emitted (int), followed by all of its elements
            (each an <tt>Object</tt>) in the proper order.
"
      end

      operation 8601858 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the <tt>ArrayList</tt> instance from a stream (that is,
deserialize it).
"
      end

      operation 8601986 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator over the elements in this list (in proper
sequence), starting at the specified position in the list.
The specified index indicates the first element that would be
returned by an initial call to {@link ListIterator#next next}.
An initial call to {@link ListIterator#previous previous} would
return the element with the specified index minus one.

<p>The returned list iterator is <a href=\"#fail-fast\"><i>fail-fast</i></a>.

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8602114 "listIterator"
	cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator over the elements in this list (in proper
sequence).

<p>The returned list iterator is <a href=\"#fail-fast\"><i>fail-fast</i></a>.

@see #listIterator(int)
"
      end

      operation 8602242 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this list in proper sequence.

<p>The returned iterator is <a href=\"#fail-fast\"><i>fail-fast</i></a>.

@return an iterator over the elements in this list in proper sequence
"
      end
    end

    class 192002 "WeakHashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 192130 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 192130 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hash table based implementation of the <tt>Map</tt> interface, with
<em>weak keys</em>.
An entry in a <tt>WeakHashMap</tt> will automatically be removed when
its key is no longer in ordinary use.  More precisely, the presence of a
mapping for a given key will not prevent the key from being discarded by the
garbage collector, that is, made finalizable, finalized, and then reclaimed.
When a key has been discarded its entry is effectively removed from the map,
so this class behaves somewhat differently from other <tt>Map</tt>
implementations.

<p> Both null values and the null key are supported. This class has
performance characteristics similar to those of the <tt>HashMap</tt>
class, and has the same efficiency parameters of <em>initial capacity</em>
and <em>load factor</em>.

<p> Like most collection classes, this class is not synchronized.
A synchronized <tt>WeakHashMap</tt> may be constructed using the
{@link Collections#synchronizedMap Collections.synchronizedMap}
method.

<p> This class is intended primarily for use with key objects whose
<tt>equals</tt> methods test for object identity using the
<tt>==</tt> operator.  Once such a key is discarded it can never be
recreated, so it is impossible to do a lookup of that key in a
<tt>WeakHashMap</tt> at some later time and be surprised that its entry
has been removed.  This class will work perfectly well with key objects
whose <tt>equals</tt> methods are not based upon object identity, such
as <tt>String</tt> instances.  With such recreatable key objects,
however, the automatic removal of <tt>WeakHashMap</tt> entries whose
keys have been discarded may prove to be confusing.

<p> The behavior of the <tt>WeakHashMap</tt> class depends in part upon
the actions of the garbage collector, so several familiar (though not
required) <tt>Map</tt> invariants do not hold for this class.  Because
the garbage collector may discard keys at any time, a
<tt>WeakHashMap</tt> may behave as though an unknown thread is silently
removing entries.  In particular, even if you synchronize on a
<tt>WeakHashMap</tt> instance and invoke none of its mutator methods, it
is possible for the <tt>size</tt> method to return smaller values over
time, for the <tt>isEmpty</tt> method to return <tt>false</tt> and
then <tt>true</tt>, for the <tt>containsKey</tt> method to return
<tt>true</tt> and later <tt>false</tt> for a given key, for the
<tt>get</tt> method to return a value for a given key but later return
<tt>null</tt>, for the <tt>put</tt> method to return
<tt>null</tt> and the <tt>remove</tt> method to return
<tt>false</tt> for a key that previously appeared to be in the map, and
for successive examinations of the key set, the value collection, and
the entry set to yield successively smaller numbers of elements.

<p> Each key object in a <tt>WeakHashMap</tt> is stored indirectly as
the referent of a weak reference.  Therefore a key will automatically be
removed only after the weak references to it, both inside and outside of the
map, have been cleared by the garbage collector.

<p> <strong>Implementation note:</strong> The value objects in a
<tt>WeakHashMap</tt> are held by ordinary strong references.  Thus care
should be taken to ensure that value objects do not strongly refer to their
own keys, either directly or indirectly, since that will prevent the keys
from being discarded.  Note that a value object may refer indirectly to its
key via the <tt>WeakHashMap</tt> itself; that is, a value object may
strongly refer to some other key object whose associated value object, in
turn, strongly refers to the key of the first value object.  If the values
in the map do not rely on the map holding strong references to them, one way
to deal with this is to wrap values themselves within
<tt>WeakReferences</tt> before
inserting, as in: <tt>m.put(key, new WeakReference(value))</tt>,
and then unwrapping upon each <tt>get</tt>.

<p>The iterators returned by the <tt>iterator</tt> method of the collections
returned by all of this class's \"collection view methods\" are
<i>fail-fast</i>: if the map is structurally modified at any time after the
iterator is created, in any way except through the iterator's own
<tt>remove</tt> method, the iterator will throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:  <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author      Doug Lea
@author      Josh Bloch
@author      Mark Reinhold
@since       1.2
@see         java.util.HashMap
@see         java.lang.ref.WeakReference
"
      classrelation 228610 // <realization>
	relation 228610 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 228610 // <realization>
	  b parent class_ref 192130 // AbstractMap
      end

      classrelation 228738 // <realization>
	relation 228738 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 228738 // <realization>
	  b parent class_ref 130178 // Map
      end

      attribute 185730 "DEFAULT_INITIAL_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default initial capacity -- MUST be a power of two.

"
      end

      attribute 185858 "MAXIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum capacity, used if a higher value is implicitly specified
by either of the constructors with arguments.
MUST be a power of two <= 1<<30.

"
      end

      attribute 185986 "DEFAULT_LOAD_FACTOR"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.75f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The load factor used when none specified in constructor.

"
      end

      classrelation 228866 // table (<unidirectional association>)
	relation 228866 --->
	  a role_name "table" multiplicity "[]" package
	    comment "
The table, resized as necessary. Length MUST Always be a power of two.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V>${multiplicity} ${name}${value};
"
	    classrelation_ref 228866 // table (<unidirectional association>)
	  b parent class_ref 192386 // Entry
      end

      attribute 186114 "size"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of key-value mappings contained in this weak hash map.

"
      end

      attribute 186242 "threshold"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The next size value at which to resize (capacity * load factor).

"
      end

      attribute 186370 "loadFactor"
	const_attribute private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The load factor for the hash table.

"
      end

      classrelation 228994 // queue (<unidirectional association>)
	relation 228994 --->
	  a role_name "queue" init_value " new ReferenceQueue<>()" const_relation private
	    comment "
Reference queue for cleared WeakEntries

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 228994 // queue (<unidirectional association>)
	  b parent class_ref 130946 // ReferenceQueue
      end

      attribute 186498 "modCount"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of times this WeakHashMap has been structurally modified.
Structural modifications are those that change the number of
mappings in the map or otherwise modify its internal structure
(e.g., rehash).  This field is used to make iterators on
Collection-views of the map fail-fast.

@see ConcurrentModificationException

"
      end

      operation 595074 "newTable"
	cpp_inline private return_type class_ref 192386 // Entry
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V>[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 595202 "WeakHashMap"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty <tt>WeakHashMap</tt> with the given initial
capacity and the given load factor.

@param  initialCapacity The initial capacity of the <tt>WeakHashMap</tt>
@param  loadFactor      The load factor of the <tt>WeakHashMap</tt>
@throws IllegalArgumentException if the initial capacity is negative,
        or if the load factor is nonpositive.
"
      end

      operation 595330 "WeakHashMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty <tt>WeakHashMap</tt> with the given initial
capacity and the default load factor (0.75).

@param  initialCapacity The initial capacity of the <tt>WeakHashMap</tt>
@throws IllegalArgumentException if the initial capacity is negative
"
      end

      operation 595458 "WeakHashMap"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty <tt>WeakHashMap</tt> with the default initial
capacity (16) and load factor (0.75).
"
      end

      operation 595586 "WeakHashMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <tt>WeakHashMap</tt> with the same mappings as the
specified map.  The <tt>WeakHashMap</tt> is created with the default
load factor (0.75) and an initial capacity sufficient to hold the
mappings in the specified map.

@param   m the map whose mappings are to be placed in this map
@throws  NullPointerException if the specified map is null
@since   1.3
"
      end

      classrelation 229122 // NULL_KEY (<unidirectional association>)
	relation 229122 --->
	  a role_name "NULL_KEY" init_value " new Object()" class_relation const_relation private
	    comment " internal utilities

Value representing null keys inside tables.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229122 // NULL_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 595714 "maskNull"
	class_operation cpp_inline private return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use NULL_KEY for key if it is null.
"
      end

      operation 595842 "unmaskNull"
	class_operation cpp_inline package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns internal representation of null key back to caller as null.
"
      end

      operation 595970 "eq"
	class_operation cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "x" type class_ref 129538 // Object
	  param inout name "y" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks for equality of non-null reference x and possibly-null y.  By
default uses Object.equals.
"
      end

      operation 596098 "hash"
	cpp_inline package explicit_return_type "int"
	nparams 1
	  param inout name "k" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve object hash code and applies a supplemental hash function to the
result hash, which defends against poor quality hash functions.  This is
critical because HashMap uses power-of-two length hash tables, that
otherwise encounter collisions for hashCodes that do not differ
in lower bits.
"
      end

      operation 596226 "indexFor"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param in name "h" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns index for hash code h.
"
      end

      operation 596354 "expungeStaleEntries"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Expunges stale entries from the table.
"
      end

      operation 596482 "getTable"
	cpp_inline private return_type class_ref 192386 // Entry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the table after first expunging stale entries.
"
      end

      operation 596610 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key-value mappings in this map.
This result is a snapshot, and may not reflect unprocessed
entries that will be removed before next attempted access
because they are no longer referenced.
"
      end

      operation 596738 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains no key-value mappings.
This result is a snapshot, and may not reflect unprocessed
entries that will be removed before next attempted access
because they are no longer referenced.
"
      end

      operation 596866 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code (key==null ? k==null :
key.equals(k))}, then this method returns {@code v}; otherwise
it returns {@code null}.  (There can be at most one such mapping.)

<p>A return value of {@code null} does not <i>necessarily</i>
indicate that the map contains no mapping for the key; it's also
possible that the map explicitly maps the key to {@code null}.
The {@link #containsKey containsKey} operation may be used to
distinguish these two cases.

@see #put(Object, Object)
"
      end

      operation 596994 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains a mapping for the
specified key.

@param  key   The key whose presence in this map is to be tested
@return <tt>true</tt> if there is a mapping for <tt>key</tt>;
        <tt>false</tt> otherwise
"
      end

      operation 597122 "getEntry"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the entry associated with the specified key in this map.
Returns null if the map contains no mapping for this key.
"
      end

      operation 597250 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified key in this map.
If the map previously contained a mapping for this key, the old
value is replaced.

@param key key with which the specified value is to be associated.
@param value value to be associated with the specified key.
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
        (A <tt>null</tt> return can also indicate that the map
        previously associated <tt>null</tt> with <tt>key</tt>.)
"
      end

      operation 597378 "resize"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rehashes the contents of this map into a new array with a
larger capacity.  This method is called automatically when the
number of keys in this map reaches its threshold.

If current capacity is MAXIMUM_CAPACITY, this method does not
resize the map, but sets threshold to Integer.MAX_VALUE.
This has the effect of preventing future calls.

@param newCapacity the new capacity, MUST be a power of two;
       must be greater than current capacity unless current
       capacity is MAXIMUM_CAPACITY (in which case value
       is irrelevant).
"
      end

      operation 597506 "transfer"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "src" type class_ref 192386 // Entry
	multiplicity "[]"
	  param inout name "dest" type class_ref 192386 // Entry
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K,V>[] ${p0}, ${t1}<K,V>[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Transfers all entries from src to dest tables "
      end

      operation 597634 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified map to this map.
These mappings will replace any mappings that this map had for any
of the keys currently in the specified map.

@param m mappings to be stored in this map.
@throws  NullPointerException if the specified map is null.
"
      end

      operation 597762 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping for a key from this weak hash map if it is present.
More formally, if this map contains a mapping from key <tt>k</tt> to
value <tt>v</tt> such that <code>(key==null ?  k==null :
key.equals(k))</code>, that mapping is removed.  (The map can contain
at most one such mapping.)

<p>Returns the value to which this map previously associated the key,
or <tt>null</tt> if the map contained no mapping for the key.  A
return value of <tt>null</tt> does not <i>necessarily</i> indicate
that the map contained no mapping for the key; it's also possible
that the map explicitly mapped the key to <tt>null</tt>.

<p>The map will not contain a mapping for the specified key once the
call returns.

@param key key whose mapping is to be removed from the map
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>
"
      end

      operation 597890 "removeMapping"
	cpp_inline package explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Special version of remove needed by Entry set "
      end

      operation 598018 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the mappings from this map.
The map will be empty after this call returns.
"
      end

      operation 598146 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map maps one or more keys to the
specified value.

@param value value whose presence in this map is to be tested
@return <tt>true</tt> if this map maps one or more keys to the
        specified value
"
      end

      operation 598274 "containsNullValue"
	cpp_inline private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special-case code for containsValue with null argument
"
      end
    end

    class 192130 "AbstractMap"
      abstract visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a skeletal implementation of the <tt>Map</tt>
interface, to minimize the effort required to implement this interface.

<p>To implement an unmodifiable map, the programmer needs only to extend this
class and provide an implementation for the <tt>entrySet</tt> method, which
returns a set-view of the map's mappings.  Typically, the returned set
will, in turn, be implemented atop <tt>AbstractSet</tt>.  This set should
not support the <tt>add</tt> or <tt>remove</tt> methods, and its iterator
should not support the <tt>remove</tt> method.

<p>To implement a modifiable map, the programmer must additionally override
this class's <tt>put</tt> method (which otherwise throws an
<tt>UnsupportedOperationException</tt>), and the iterator returned by
<tt>entrySet().iterator()</tt> must additionally implement its
<tt>remove</tt> method.

<p>The programmer should generally provide a void (no argument) and map
constructor, as per the recommendation in the <tt>Map</tt> interface
specification.

<p>The documentation for each non-abstract method in this class describes its
implementation in detail.  Each of these methods may be overridden if the
map being implemented admits a more efficient implementation.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author  Josh Bloch
@author  Neal Gafter
@see Map
@see Collection
@since 1.2
"
      classrelation 227714 // <realization>
	relation 227714 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 227714 // <realization>
	  b parent class_ref 130178 // Map
      end

      operation 590722 "AbstractMap"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 590850 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

{@inheritDoc}

@implSpec
This implementation returns <tt>entrySet().size()</tt>.
"
      end

      operation 590978 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation returns <tt>size() == 0</tt>.
"
      end

      operation 591106 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation iterates over <tt>entrySet()</tt> searching
for an entry with the specified value.  If such an entry is found,
<tt>true</tt> is returned.  If the iteration terminates without
finding such an entry, <tt>false</tt> is returned.  Note that this
implementation requires linear time in the size of the map.

@throws ClassCastException   {@inheritDoc}
@throws NullPointerException {@inheritDoc}
"
      end

      operation 591234 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation iterates over <tt>entrySet()</tt> searching
for an entry with the specified key.  If such an entry is found,
<tt>true</tt> is returned.  If the iteration terminates without
finding such an entry, <tt>false</tt> is returned.  Note that this
implementation requires linear time in the size of the map; many
implementations will override this method.

@throws ClassCastException   {@inheritDoc}
@throws NullPointerException {@inheritDoc}
"
      end

      operation 591362 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation iterates over <tt>entrySet()</tt> searching
for an entry with the specified key.  If such an entry is found,
the entry's value is returned.  If the iteration terminates without
finding such an entry, <tt>null</tt> is returned.  Note that this
implementation requires linear time in the size of the map; many
implementations will override this method.

@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
"
      end

      operation 591490 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

{@inheritDoc}

@implSpec
This implementation always throws an
<tt>UnsupportedOperationException</tt>.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
"
      end

      operation 591618 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation iterates over <tt>entrySet()</tt> searching for an
entry with the specified key.  If such an entry is found, its value is
obtained with its <tt>getValue</tt> operation, the entry is removed
from the collection (and the backing map) with the iterator's
<tt>remove</tt> operation, and the saved value is returned.  If the
iteration terminates without finding such an entry, <tt>null</tt> is
returned.  Note that this implementation requires linear time in the
size of the map; many implementations will override this method.

<p>Note that this implementation throws an
<tt>UnsupportedOperationException</tt> if the <tt>entrySet</tt>
iterator does not support the <tt>remove</tt> method and this map
contains a mapping for the specified key.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
"
      end

      operation 591746 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

{@inheritDoc}

@implSpec
This implementation iterates over the specified map's
<tt>entrySet()</tt> collection, and calls this map's <tt>put</tt>
operation once for each entry returned by the iteration.

<p>Note that this implementation throws an
<tt>UnsupportedOperationException</tt> if this map does not support
the <tt>put</tt> operation and the specified map is nonempty.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
"
      end

      operation 591874 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation calls <tt>entrySet().clear()</tt>.

<p>Note that this implementation throws an
<tt>UnsupportedOperationException</tt> if the <tt>entrySet</tt>
does not support the <tt>clear</tt> operation.

@throws UnsupportedOperationException {@inheritDoc}
"
      end

      classrelation 227842 // keySet (<unidirectional association>)
	relation 227842 --->
	  a role_name "keySet" package
	    comment " Views

Each of these fields are initialized to contain an instance of the
appropriate view the first time this view is requested.  The views are
stateless, so there's no reason to create more than one of each.

<p>Since there is no synchronization performed while accessing these fields,
it is expected that java.util.Map view classes using these fields have
no non-final fields (or any fields at all except for outer-this). Adhering
to this rule would make the races on these fields benign.

<p>It is also imperative that implementations read the field only once,
as in:

<pre> {@code
public Set<K> keySet() {
  Set<K> ks = keySet;  // single racy read
  if (ks == null) {
    ks = new KeySet();
    keySet = ks;
  }
  return ks;
}
}</pre>

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 227842 // keySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 227970 // values (<unidirectional association>)
	relation 227970 --->
	  a role_name "values" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	    classrelation_ref 227970 // values (<unidirectional association>)
	  b parent class_ref 184194 // Collection
      end

      operation 592002 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation returns a set that subclasses {@link AbstractSet}.
The subclass's iterator method returns a \"wrapper object\" over this
map's <tt>entrySet()</tt> iterator.  The <tt>size</tt> method
delegates to this map's <tt>size</tt> method and the
<tt>contains</tt> method delegates to this map's
<tt>containsKey</tt> method.

<p>The set is created the first time this method is called,
and returned in response to all subsequent calls.  No synchronization
is performed, so there is a slight chance that multiple calls to this
method will not all return the same set.
"
      end

      operation 592130 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@implSpec
This implementation returns a collection that subclasses {@link
AbstractCollection}.  The subclass's iterator method returns a
\"wrapper object\" over this map's <tt>entrySet()</tt> iterator.
The <tt>size</tt> method delegates to this map's <tt>size</tt>
method and the <tt>contains</tt> method delegates to this map's
<tt>containsValue</tt> method.

<p>The collection is created the first time this method is called, and
returned in response to all subsequent calls.  No synchronization is
performed, so there is a slight chance that multiple calls to this
method will not all return the same collection.
"
      end

      operation 592258 "entrySet"
	abstract cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 592386 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this map for equality.  Returns
<tt>true</tt> if the given object is also a map and the two maps
represent the same mappings.  More formally, two maps <tt>m1</tt> and
<tt>m2</tt> represent the same mappings if
<tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the
<tt>equals</tt> method works properly across different implementations
of the <tt>Map</tt> interface.

@implSpec
This implementation first checks if the specified object is this map;
if so it returns <tt>true</tt>.  Then, it checks if the specified
object is a map whose size is identical to the size of this map; if
not, it returns <tt>false</tt>.  If so, it iterates over this map's
<tt>entrySet</tt> collection, and checks that the specified map
contains each mapping that this map contains.  If the specified map
fails to contain such a mapping, <tt>false</tt> is returned.  If the
iteration completes, <tt>true</tt> is returned.

@param o object to be compared for equality with this map
@return <tt>true</tt> if the specified object is equal to this map
"
      end

      operation 592514 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this map.  The hash code of a map is
defined to be the sum of the hash codes of each entry in the map's
<tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two maps
<tt>m1</tt> and <tt>m2</tt>, as required by the general contract of
{@link Object#hashCode}.

@implSpec
This implementation iterates over <tt>entrySet()</tt>, calling
{@link Map.Entry#hashCode hashCode()} on each element (entry) in the
set, and adding up the results.

@return the hash code value for this map
@see Map.Entry#hashCode()
@see Object#equals(Object)
@see Set#equals(Object)
"
      end

      operation 592642 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this map.  The string representation
consists of a list of key-value mappings in the order returned by the
map's <tt>entrySet</tt> view's iterator, enclosed in braces
(<tt>\"{}\"</tt>).  Adjacent mappings are separated by the characters
<tt>\", \"</tt> (comma and space).  Each key-value mapping is rendered as
the key followed by an equals sign (<tt>\"=\"</tt>) followed by the
associated value.  Keys and values are converted to strings as by
{@link String#valueOf(Object)}.

@return a string representation of this map
"
      end

      operation 592770 "clone"
	cpp_inline protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shallow copy of this <tt>AbstractMap</tt> instance: the keys
and values themselves are not cloned.

@return a shallow copy of this map
"
      end

      operation 592898 "eq"
	class_operation cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "o1" type class_ref 129538 // Object
	  param inout name "o2" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for SimpleEntry and SimpleImmutableEntry.
Test for equality, checking for nulls.

NB: Do not replace with Object.equals until JDK-8015417 is resolved.
"
      end

      class 192898 "SimpleEntry"
	visibility public 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 228098 // <realization>
	  relation 228098 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 228098 // <realization>
	    b parent class_ref 192386 // Entry
	end

	classrelation 228226 // <realization>
	  relation 228226 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 228226 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 184962 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8499721149061103585L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 185090 "key"
	  const_attribute private explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 185218 "value"
	  private explicit_type "V"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 593026 "SimpleEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an entry representing a mapping from the specified
key to the specified value.

@param key the key represented by this entry
@param value the value represented by this entry
"
	end

	operation 593154 "SimpleEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param inout name "entry" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an entry representing the same mapping as the
specified entry.

@param entry the entry to copy
"
	end

	operation 593282 "getKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the key corresponding to this entry.

@return the key corresponding to this entry
"
	end

	operation 593410 "getValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value corresponding to this entry.

@return the value corresponding to this entry
"
	end

	operation 593538 "setValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replaces the value corresponding to this entry with the specified
value.

@param value new value to be stored in this entry
@return the old value corresponding to the entry
"
	end

	operation 593666 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares the specified object with this entry for equality.
Returns {@code true} if the given object is also a map entry and
the two entries represent the same mapping.  More formally, two
entries {@code e1} and {@code e2} represent the same mapping
if<pre>
  (e1.getKey()==null ?
   e2.getKey()==null :
   e1.getKey().equals(e2.getKey()))
  &amp;&amp;
  (e1.getValue()==null ?
   e2.getValue()==null :
   e1.getValue().equals(e2.getValue()))</pre>
This ensures that the {@code equals} method works properly across
different implementations of the {@code Map.Entry} interface.

@param o object to be compared for equality with this map entry
@return {@code true} if the specified object is equal to this map
        entry
@see    #hashCode
"
	end

	operation 593794 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the hash code value for this map entry.  The hash code
of a map entry {@code e} is defined to be: <pre>
  (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
  (e.getValue()==null ? 0 : e.getValue().hashCode())</pre>
This ensures that {@code e1.equals(e2)} implies that
{@code e1.hashCode()==e2.hashCode()} for any two Entries
{@code e1} and {@code e2}, as required by the general
contract of {@link Object#hashCode}.

@return the hash code value for this map entry
@see    #equals
"
	end

	operation 593922 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a String representation of this map entry.  This
implementation returns the string representation of this
entry's key followed by the equals character (\"<tt>=</tt>\")
followed by the string representation of this entry's value.

@return a String representation of this map entry
"
	end
      end

      class 193026 "SimpleImmutableEntry"
	visibility public 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 228354 // <realization>
	  relation 228354 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 228354 // <realization>
	    b parent class_ref 192386 // Entry
	end

	classrelation 228482 // <realization>
	  relation 228482 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 228482 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 185346 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7138329143949025153L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 185474 "key"
	  const_attribute private explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 185602 "value"
	  const_attribute private explicit_type "V"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 594050 "SimpleImmutableEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an entry representing a mapping from the specified
key to the specified value.

@param key the key represented by this entry
@param value the value represented by this entry
"
	end

	operation 594178 "SimpleImmutableEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param inout name "entry" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an entry representing the same mapping as the
specified entry.

@param entry the entry to copy
"
	end

	operation 594306 "getKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the key corresponding to this entry.

@return the key corresponding to this entry
"
	end

	operation 594434 "getValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value corresponding to this entry.

@return the value corresponding to this entry
"
	end

	operation 594562 "setValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replaces the value corresponding to this entry with the specified
value (optional operation).  This implementation simply throws
<tt>UnsupportedOperationException</tt>, as this class implements
an <i>immutable</i> map entry.

@param value new value to be stored in this entry
@return (Does not return)
@throws UnsupportedOperationException always
"
	end

	operation 594690 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares the specified object with this entry for equality.
Returns {@code true} if the given object is also a map entry and
the two entries represent the same mapping.  More formally, two
entries {@code e1} and {@code e2} represent the same mapping
if<pre>
  (e1.getKey()==null ?
   e2.getKey()==null :
   e1.getKey().equals(e2.getKey()))
  &amp;&amp;
  (e1.getValue()==null ?
   e2.getValue()==null :
   e1.getValue().equals(e2.getValue()))</pre>
This ensures that the {@code equals} method works properly across
different implementations of the {@code Map.Entry} interface.

@param o object to be compared for equality with this map entry
@return {@code true} if the specified object is equal to this map
        entry
@see    #hashCode
"
	end

	operation 594818 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the hash code value for this map entry.  The hash code
of a map entry {@code e} is defined to be: <pre>
  (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
  (e.getValue()==null ? 0 : e.getValue().hashCode())</pre>
This ensures that {@code e1.equals(e2)} implies that
{@code e1.hashCode()==e2.hashCode()} for any two Entries
{@code e1} and {@code e2}, as required by the general
contract of {@link Object#hashCode}.

@return the hash code value for this map entry
@see    #equals
"
	end

	operation 594946 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a String representation of this map entry.  This
implementation returns the string representation of this
entry's key followed by the equals character (\"<tt>=</tt>\")
followed by the string representation of this entry's value.

@return a String representation of this map entry
"
	end
      end
    end

    class 192258 "Set"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184194 // Collection
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A collection that contains no duplicate elements.  More formally, sets
contain no pair of elements <code>e1</code> and <code>e2</code> such that
<code>e1.equals(e2)</code>, and at most one null element.  As implied by
its name, this interface models the mathematical <i>set</i> abstraction.

<p>The <tt>Set</tt> interface places additional stipulations, beyond those
inherited from the <tt>Collection</tt> interface, on the contracts of all
constructors and on the contracts of the <tt>add</tt>, <tt>equals</tt> and
<tt>hashCode</tt> methods.  Declarations for other inherited methods are
also included here for convenience.  (The specifications accompanying these
declarations have been tailored to the <tt>Set</tt> interface, but they do
not contain any additional stipulations.)

<p>The additional stipulation on constructors is, not surprisingly,
that all constructors must create a set that contains no duplicate elements
(as defined above).

<p>Note: Great care must be exercised if mutable objects are used as set
elements.  The behavior of a set is not specified if the value of an object
is changed in a manner that affects <tt>equals</tt> comparisons while the
object is an element in the set.  A special case of this prohibition is
that it is not permissible for a set to contain itself as an element.

<p>Some set implementations have restrictions on the elements that
they may contain.  For example, some implementations prohibit null elements,
and some have restrictions on the types of their elements.  Attempting to
add an ineligible element throws an unchecked exception, typically
<tt>NullPointerException</tt> or <tt>ClassCastException</tt>.  Attempting
to query the presence of an ineligible element may throw an exception,
or it may simply return false; some implementations will exhibit the former
behavior and some will exhibit the latter.  More generally, attempting an
operation on an ineligible element whose completion would not result in
the insertion of an ineligible element into the set may throw an
exception or it may succeed, at the option of the implementation.
Such exceptions are marked as \"optional\" in the specification for this
interface.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements maintained by this set

@author  Josh Bloch
@author  Neal Gafter
@see Collection
@see List
@see SortedSet
@see HashSet
@see TreeSet
@see AbstractSet
@see Collections#singleton(java.lang.Object)
@see Collections#EMPTY_SET
@since 1.2
"
      classrelation 364802 // <realization>
	relation 364802 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 364802 // <realization>
	  b parent class_ref 184194 // Collection
      end

      operation 1285634 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns the number of elements in this set (its cardinality).  If this
set contains more than <tt>Integer.MAX_VALUE</tt> elements, returns
<tt>Integer.MAX_VALUE</tt>.

@return the number of elements in this set (its cardinality)
"
      end

      operation 1285762 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains no elements.

@return <tt>true</tt> if this set contains no elements
"
      end

      operation 1285890 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains the specified element.
More formally, returns <tt>true</tt> if and only if this set
contains an element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this set is to be tested
@return <tt>true</tt> if this set contains the specified element
@throws ClassCastException if the type of the specified element
        is incompatible with this set
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        set does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 1286018 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set.  The elements are
returned in no particular order (unless this set is an instance of some
class that provides a guarantee).

@return an iterator over the elements in this set
"
      end

      operation 1286146 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this set.
If this set makes any guarantees as to what order its elements
are returned by its iterator, this method must return the
elements in the same order.

<p>The returned array will be \"safe\" in that no references to it
are maintained by this set.  (In other words, this method must
allocate a new array even if this set is backed by an array).
The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all the elements in this set
"
      end

      operation 1286274 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this set; the
runtime type of the returned array is that of the specified array.
If the set fits in the specified array, it is returned therein.
Otherwise, a new array is allocated with the runtime type of the
specified array and the size of this set.

<p>If this set fits in the specified array with room to spare
(i.e., the array has more elements than this set), the element in
the array immediately following the end of the set is set to
<tt>null</tt>.  (This is useful in determining the length of this
set <i>only</i> if the caller knows that this set does not contain
any null elements.)

<p>If this set makes any guarantees as to what order its elements
are returned by its iterator, this method must return the elements
in the same order.

<p>Like the {@link #toArray()} method, this method acts as bridge between
array-based and collection-based APIs.  Further, this method allows
precise control over the runtime type of the output array, and may,
under certain circumstances, be used to save allocation costs.

<p>Suppose <tt>x</tt> is a set known to contain only strings.
The following code can be used to dump the set into a newly allocated
array of <tt>String</tt>:

<pre>
    String[] y = x.toArray(new String[0]);</pre>

Note that <tt>toArray(new Object[0])</tt> is identical in function to
<tt>toArray()</tt>.

@param a the array into which the elements of this set are to be
       stored, if it is big enough; otherwise, a new array of the same
       runtime type is allocated for this purpose.
@return an array containing all the elements in this set
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in this
        set
@throws NullPointerException if the specified array is null
"
      end

      operation 1286402 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Adds the specified element to this set if it is not already present
(optional operation).  More formally, adds the specified element
<tt>e</tt> to this set if the set contains no element <tt>e2</tt>
such that
<tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>.
If this set already contains the element, the call leaves the set
unchanged and returns <tt>false</tt>.  In combination with the
restriction on constructors, this ensures that sets never contain
duplicate elements.

<p>The stipulation above does not imply that sets must accept all
elements; sets may refuse to add any particular element, including
<tt>null</tt>, and throw an exception, as described in the
specification for {@link Collection#add Collection.add}.
Individual set implementations should clearly document any
restrictions on the elements that they may contain.

@param e element to be added to this set
@return <tt>true</tt> if this set did not already contain the specified
        element
@throws UnsupportedOperationException if the <tt>add</tt> operation
        is not supported by this set
@throws ClassCastException if the class of the specified element
        prevents it from being added to this set
@throws NullPointerException if the specified element is null and this
        set does not permit null elements
@throws IllegalArgumentException if some property of the specified element
        prevents it from being added to this set
"
      end

      operation 1286530 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified element from this set if it is present
(optional operation).  More formally, removes an element <tt>e</tt>
such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>, if
this set contains such an element.  Returns <tt>true</tt> if this set
contained the element (or equivalently, if this set changed as a
result of the call).  (This set will not contain the element once the
call returns.)

@param o object to be removed from this set, if present
@return <tt>true</tt> if this set contained the specified element
@throws ClassCastException if the type of the specified element
        is incompatible with this set
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        set does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws UnsupportedOperationException if the <tt>remove</tt> operation
        is not supported by this set
"
      end

      operation 1286658 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Returns <tt>true</tt> if this set contains all of the elements of the
specified collection.  If the specified collection is also a set, this
method returns <tt>true</tt> if it is a <i>subset</i> of this set.

@param  c collection to be checked for containment in this set
@return <tt>true</tt> if this set contains all of the elements of the
        specified collection
@throws ClassCastException if the types of one or more elements
        in the specified collection are incompatible with this
        set
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified collection contains one
        or more null elements and this set does not permit null
        elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see    #contains(Object)
"
      end

      operation 1286786 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this set if
they're not already present (optional operation).  If the specified
collection is also a set, the <tt>addAll</tt> operation effectively
modifies this set so that its value is the <i>union</i> of the two
sets.  The behavior of this operation is undefined if the specified
collection is modified while the operation is in progress.

@param  c collection containing elements to be added to this set
@return <tt>true</tt> if this set changed as a result of the call

@throws UnsupportedOperationException if the <tt>addAll</tt> operation
        is not supported by this set
@throws ClassCastException if the class of an element of the
        specified collection prevents it from being added to this set
@throws NullPointerException if the specified collection contains one
        or more null elements and this set does not permit null
        elements, or if the specified collection is null
@throws IllegalArgumentException if some property of an element of the
        specified collection prevents it from being added to this set
@see #add(Object)
"
      end

      operation 1286914 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this set that are contained in the
specified collection (optional operation).  In other words, removes
from this set all of its elements that are not contained in the
specified collection.  If the specified collection is also a set, this
operation effectively modifies this set so that its value is the
<i>intersection</i> of the two sets.

@param  c collection containing elements to be retained in this set
@return <tt>true</tt> if this set changed as a result of the call
@throws UnsupportedOperationException if the <tt>retainAll</tt> operation
        is not supported by this set
@throws ClassCastException if the class of an element of this set
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this set contains a null element and the
        specified collection does not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
"
      end

      operation 1287042 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this set all of its elements that are contained in the
specified collection (optional operation).  If the specified
collection is also a set, this operation effectively modifies this
set so that its value is the <i>asymmetric set difference</i> of
the two sets.

@param  c collection containing elements to be removed from this set
@return <tt>true</tt> if this set changed as a result of the call
@throws UnsupportedOperationException if the <tt>removeAll</tt> operation
        is not supported by this set
@throws ClassCastException if the class of an element of this set
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this set contains a null element and the
        specified collection does not permit null elements
        (<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
@see #contains(Object)
"
      end

      operation 1287170 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this set (optional operation).
The set will be empty after this call returns.

@throws UnsupportedOperationException if the <tt>clear</tt> method
        is not supported by this set
"
      end

      operation 1287298 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this set for equality.  Returns
<tt>true</tt> if the specified object is also a set, the two sets
have the same size, and every member of the specified set is
contained in this set (or equivalently, every member of this set is
contained in the specified set).  This definition ensures that the
equals method works properly across different implementations of the
set interface.

@param o object to be compared for equality with this set
@return <tt>true</tt> if the specified object is equal to this set
"
      end

      operation 1287426 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this set.  The hash code of a set is
defined to be the sum of the hash codes of the elements in the set,
where the hash code of a <tt>null</tt> element is defined to be zero.
This ensures that <tt>s1.equals(s2)</tt> implies that
<tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt>
and <tt>s2</tt>, as required by the general contract of
{@link Object#hashCode}.

@return the hash code value for this set
@see Object#equals(Object)
@see Set#equals(Object)
"
      end

      operation 1287554 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates a {@code Spliterator} over the elements in this set.

<p>The {@code Spliterator} reports {@link Spliterator#DISTINCT}.
Implementations should document the reporting of additional
characteristic values.

@implSpec
The default implementation creates a
<em><a href=\"Spliterator.html#binding\">late-binding</a></em> spliterator
from the set's {@code Iterator}.  The spliterator inherits the
<em>fail-fast</em> properties of the set's iterator.
<p>
The created {@code Spliterator} additionally reports
{@link Spliterator#SIZED}.

@implNote
The created {@code Spliterator} additionally reports
{@link Spliterator#SUBSIZED}.

@return a {@code Spliterator} over the elements in this set
@since 1.8
"
      end
    end

    class 238082 "BitSet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a vector of bits that grows as needed. Each
component of the bit set has a {@code boolean} value. The
bits of a {@code BitSet} are indexed by nonnegative integers.
Individual indexed bits can be examined, set, or cleared. One
{@code BitSet} may be used to modify the contents of another
{@code BitSet} through logical AND, logical inclusive OR, and
logical exclusive OR operations.

<p>By default, all bits in the set initially have the value
{@code false}.

<p>Every bit set has a current size, which is the number of bits
of space currently in use by the bit set. Note that the size is
related to the implementation of a bit set, so it may change with
implementation. The length of a bit set relates to logical length
of a bit set and is defined independently of implementation.

<p>Unless otherwise noted, passing a null parameter to any of the
methods in a {@code BitSet} will result in a
{@code NullPointerException}.

<p>A {@code BitSet} is not safe for multithreaded use without
external synchronization.

@author  Arthur van Hoff
@author  Michael McCloskey
@author  Martin Buchholz
@since   JDK1.0
"
      classrelation 3487490 // <realization>
	relation 3487490 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3487490 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3487618 // <realization>
	relation 3487618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3487618 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2009858 "ADDRESS_BITS_PER_WORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "BitSets are packed into arrays of \"words.\"  Currently a word is
a long, which consists of 64 bits, requiring 6 address bits.
The choice of word size is determined purely by performance concerns.

"
      end

      attribute 2009986 "BITS_PER_WORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << ADDRESS_BITS_PER_WORD"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2010114 "BIT_INDEX_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " BITS_PER_WORD - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2010242 "WORD_MASK"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0xffffffffffffffffL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to shift left or right for a partial word mask 
"
      end

      classrelation 3487746 // serialPersistentFields (<unidirectional association>)
	relation 3487746 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"bits\", long[].class),
    }" class_relation const_relation private
	    comment "
@serialField bits long[]

The bits in this BitSet.  The ith bit is stored in bits[i/64] at
bit position i % 64 (where bit position 0 refers to the least
significant bit and 63 refers to the most significant bit).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3487746 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      attribute 2010370 "words"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The internal field corresponding to the serialField \"bits\".

"
      end

      attribute 2010498 "wordsInUse"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of words in the logical size of this BitSet.

"
      end

      attribute 2010626 "sizeIsSticky"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether the size of \"words\" is user-specified.  If so, we assume
the user knows what he's doing and try harder to preserve it.

"
      end

      attribute 2010754 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7997698588986878753L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      operation 8651266 "wordIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "bitIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a bit index, return word index containing it.
"
      end

      operation 8651394 "checkInvariants"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Every public method must preserve these invariants.
"
      end

      operation 8651522 "recalculateWordsInUse"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the field wordsInUse to the logical size in words of the bit set.
WARNING:This method assumes that the number of words actually in use is
less than or equal to the current value of wordsInUse!
"
      end

      operation 8651650 "BitSet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new bit set. All bits are initially {@code false}.
"
      end

      operation 8651778 "BitSet"
	public explicit_return_type ""
	nparams 1
	  param in name "nbits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a bit set whose initial size is large enough to explicitly
represent bits with indices in the range {@code 0} through
{@code nbits-1}. All bits are initially {@code false}.

@param  nbits the initial size of the bit set
@throws NegativeArraySizeException if the specified initial size
        is negative
"
      end

      operation 8651906 "initWords"
	private explicit_return_type "void"
	nparams 1
	  param in name "nbits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8652034 "BitSet"
	private explicit_return_type ""
	nparams 1
	  param inout name "words" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a bit set using words as the internal representation.
The last word (if there is one) must be non-zero.
"
      end

      operation 8652162 "valueOf"
	class_operation public return_type class_ref 238082 // BitSet
	nparams 1
	  param inout name "longs" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new bit set containing all the bits in the given long array.

<p>More precisely,
<br>{@code BitSet.valueOf(longs).get(n) == ((longs[n/64] & (1L<<(n%64))) != 0)}
<br>for all {@code n < 64 * longs.length}.

<p>This method is equivalent to
{@code BitSet.valueOf(LongBuffer.wrap(longs))}.

@param longs a long array containing a little-endian representation
       of a sequence of bits to be used as the initial bits of the
       new bit set
@return a {@code BitSet} containing all the bits in the long array
@since 1.7
"
      end

      operation 8652290 "valueOf"
	class_operation public return_type class_ref 238082 // BitSet
	nparams 1
	  param inout name "lb" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new bit set containing all the bits in the given long
buffer between its position and limit.

<p>More precisely,
<br>{@code BitSet.valueOf(lb).get(n) == ((lb.get(lb.position()+n/64) & (1L<<(n%64))) != 0)}
<br>for all {@code n < 64 * lb.remaining()}.

<p>The long buffer is not modified by this method, and no
reference to the buffer is retained by the bit set.

@param lb a long buffer containing a little-endian representation
       of a sequence of bits between its position and limit, to be
       used as the initial bits of the new bit set
@return a {@code BitSet} containing all the bits in the buffer in the
        specified range
@since 1.7
"
      end

      operation 8652418 "valueOf"
	class_operation public return_type class_ref 238082 // BitSet
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new bit set containing all the bits in the given byte array.

<p>More precisely,
<br>{@code BitSet.valueOf(bytes).get(n) == ((bytes[n/8] & (1<<(n%8))) != 0)}
<br>for all {@code n <  8 * bytes.length}.

<p>This method is equivalent to
{@code BitSet.valueOf(ByteBuffer.wrap(bytes))}.

@param bytes a byte array containing a little-endian
       representation of a sequence of bits to be used as the
       initial bits of the new bit set
@return a {@code BitSet} containing all the bits in the byte array
@since 1.7
"
      end

      operation 8652546 "valueOf"
	class_operation public return_type class_ref 238082 // BitSet
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new bit set containing all the bits in the given byte
buffer between its position and limit.

<p>More precisely,
<br>{@code BitSet.valueOf(bb).get(n) == ((bb.get(bb.position()+n/8) & (1<<(n%8))) != 0)}
<br>for all {@code n < 8 * bb.remaining()}.

<p>The byte buffer is not modified by this method, and no
reference to the buffer is retained by the bit set.

@param bb a byte buffer containing a little-endian representation
       of a sequence of bits between its position and limit, to be
       used as the initial bits of the new bit set
@return a {@code BitSet} containing all the bits in the buffer in the
        specified range
@since 1.7
"
      end

      operation 8652674 "toByteArray"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new byte array containing all the bits in this bit set.

<p>More precisely, if
<br>{@code byte[] bytes = s.toByteArray();}
<br>then {@code bytes.length == (s.length()+7)/8} and
<br>{@code s.get(n) == ((bytes[n/8] & (1<<(n%8))) != 0)}
<br>for all {@code n < 8 * bytes.length}.

@return a byte array containing a little-endian representation
        of all the bits in this bit set
@since 1.7
"
      end

      operation 8652802 "toLongArray"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new long array containing all the bits in this bit set.

<p>More precisely, if
<br>{@code long[] longs = s.toLongArray();}
<br>then {@code longs.length == (s.length()+63)/64} and
<br>{@code s.get(n) == ((longs[n/64] & (1L<<(n%64))) != 0)}
<br>for all {@code n < 64 * longs.length}.

@return a long array containing a little-endian representation
        of all the bits in this bit set
@since 1.7
"
      end

      operation 8652930 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "wordsRequired" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the BitSet can hold enough words.
@param wordsRequired the minimum acceptable number of words.
"
      end

      operation 8653058 "expandTo"
	private explicit_return_type "void"
	nparams 1
	  param in name "wordIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the BitSet can accommodate a given wordIndex,
temporarily violating the invariants.  The caller must
restore the invariants before returning to the user,
possibly using recalculateWordsInUse().
@param wordIndex the index to be accommodated.
"
      end

      operation 8653186 "checkRange"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that fromIndex ... toIndex is a valid range of bit indices.
"
      end

      operation 8653314 "flip"
	public explicit_return_type "void"
	nparams 1
	  param in name "bitIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit at the specified index to the complement of its
current value.

@param  bitIndex the index of the bit to flip
@throws IndexOutOfBoundsException if the specified index is negative
@since  1.4
"
      end

      operation 8653442 "flip"
	public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets each bit from the specified {@code fromIndex} (inclusive) to the
specified {@code toIndex} (exclusive) to the complement of its current
value.

@param  fromIndex index of the first bit to flip
@param  toIndex index after the last bit to flip
@throws IndexOutOfBoundsException if {@code fromIndex} is negative,
        or {@code toIndex} is negative, or {@code fromIndex} is
        larger than {@code toIndex}
@since  1.4
"
      end

      operation 8653570 "set"
	public explicit_return_type "void"
	nparams 1
	  param in name "bitIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit at the specified index to {@code true}.

@param  bitIndex a bit index
@throws IndexOutOfBoundsException if the specified index is negative
@since  JDK1.0
"
      end

      operation 8653698 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "bitIndex" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit at the specified index to the specified value.

@param  bitIndex a bit index
@param  value a boolean value to set
@throws IndexOutOfBoundsException if the specified index is negative
@since  1.4
"
      end

      operation 8653826 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bits from the specified {@code fromIndex} (inclusive) to the
specified {@code toIndex} (exclusive) to {@code true}.

@param  fromIndex index of the first bit to be set
@param  toIndex index after the last bit to be set
@throws IndexOutOfBoundsException if {@code fromIndex} is negative,
        or {@code toIndex} is negative, or {@code fromIndex} is
        larger than {@code toIndex}
@since  1.4
"
      end

      operation 8653954 "set"
	public explicit_return_type "void"
	nparams 3
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bits from the specified {@code fromIndex} (inclusive) to the
specified {@code toIndex} (exclusive) to the specified value.

@param  fromIndex index of the first bit to be set
@param  toIndex index after the last bit to be set
@param  value value to set the selected bits to
@throws IndexOutOfBoundsException if {@code fromIndex} is negative,
        or {@code toIndex} is negative, or {@code fromIndex} is
        larger than {@code toIndex}
@since  1.4
"
      end

      operation 8654082 "clear"
	public explicit_return_type "void"
	nparams 1
	  param in name "bitIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit specified by the index to {@code false}.

@param  bitIndex the index of the bit to be cleared
@throws IndexOutOfBoundsException if the specified index is negative
@since  JDK1.0
"
      end

      operation 8654210 "clear"
	public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bits from the specified {@code fromIndex} (inclusive) to the
specified {@code toIndex} (exclusive) to {@code false}.

@param  fromIndex index of the first bit to be cleared
@param  toIndex index after the last bit to be cleared
@throws IndexOutOfBoundsException if {@code fromIndex} is negative,
        or {@code toIndex} is negative, or {@code fromIndex} is
        larger than {@code toIndex}
@since  1.4
"
      end

      operation 8654338 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all of the bits in this BitSet to {@code false}.

@since 1.4
"
      end

      operation 8654466 "get"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "bitIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the bit with the specified index. The value
is {@code true} if the bit with the index {@code bitIndex}
is currently set in this {@code BitSet}; otherwise, the result
is {@code false}.

@param  bitIndex   the bit index
@return the value of the bit with the specified index
@throws IndexOutOfBoundsException if the specified index is negative
"
      end

      operation 8654594 "get"
	public return_type class_ref 238082 // BitSet
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code BitSet} composed of bits from this {@code BitSet}
from {@code fromIndex} (inclusive) to {@code toIndex} (exclusive).

@param  fromIndex index of the first bit to include
@param  toIndex index after the last bit to include
@return a new {@code BitSet} from a range of this {@code BitSet}
@throws IndexOutOfBoundsException if {@code fromIndex} is negative,
        or {@code toIndex} is negative, or {@code fromIndex} is
        larger than {@code toIndex}
@since  1.4
"
      end

      operation 8654722 "nextSetBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first bit that is set to {@code true}
that occurs on or after the specified starting index. If no such
bit exists then {@code -1} is returned.

<p>To iterate over the {@code true} bits in a {@code BitSet},
use the following loop:

 <pre> {@code
for (int i = bs.nextSetBit(0); i >= 0; i = bs.nextSetBit(i+1)) {
    // operate on index i here
    if (i == Integer.MAX_VALUE) {
        break; // or (i+1) would overflow
    }
}}</pre>

@param  fromIndex the index to start checking from (inclusive)
@return the index of the next set bit, or {@code -1} if there
        is no such bit
@throws IndexOutOfBoundsException if the specified index is negative
@since  1.4
"
      end

      operation 8654850 "nextClearBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first bit that is set to {@code false}
that occurs on or after the specified starting index.

@param  fromIndex the index to start checking from (inclusive)
@return the index of the next clear bit
@throws IndexOutOfBoundsException if the specified index is negative
@since  1.4
"
      end

      operation 8654978 "previousSetBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the nearest bit that is set to {@code true}
that occurs on or before the specified starting index.
If no such bit exists, or if {@code -1} is given as the
starting index, then {@code -1} is returned.

<p>To iterate over the {@code true} bits in a {@code BitSet},
use the following loop:

 <pre> {@code
for (int i = bs.length(); (i = bs.previousSetBit(i-1)) >= 0; ) {
    // operate on index i here
}}</pre>

@param  fromIndex the index to start checking from (inclusive)
@return the index of the previous set bit, or {@code -1} if there
        is no such bit
@throws IndexOutOfBoundsException if the specified index is less
        than {@code -1}
@since  1.7
"
      end

      operation 8655106 "previousClearBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the nearest bit that is set to {@code false}
that occurs on or before the specified starting index.
If no such bit exists, or if {@code -1} is given as the
starting index, then {@code -1} is returned.

@param  fromIndex the index to start checking from (inclusive)
@return the index of the previous clear bit, or {@code -1} if there
        is no such bit
@throws IndexOutOfBoundsException if the specified index is less
        than {@code -1}
@since  1.7
"
      end

      operation 8655234 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"logical size\" of this {@code BitSet}: the index of
the highest set bit in the {@code BitSet} plus one. Returns zero
if the {@code BitSet} contains no set bits.

@return the logical size of this {@code BitSet}
@since  1.2
"
      end

      operation 8655362 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this {@code BitSet} contains no bits that are set
to {@code true}.

@return boolean indicating whether this {@code BitSet} is empty
@since  1.4
"
      end

      operation 8655490 "intersects"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "set" type class_ref 238082 // BitSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified {@code BitSet} has any bits set to
{@code true} that are also set to {@code true} in this {@code BitSet}.

@param  set {@code BitSet} to intersect with
@return boolean indicating whether this {@code BitSet} intersects
        the specified {@code BitSet}
@since  1.4
"
      end

      operation 8655618 "cardinality"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bits set to {@code true} in this {@code BitSet}.

@return the number of bits set to {@code true} in this {@code BitSet}
@since  1.4
"
      end

      operation 8655746 "and"
	public explicit_return_type "void"
	nparams 1
	  param inout name "set" type class_ref 238082 // BitSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a logical <b>AND</b> of this target bit set with the
argument bit set. This bit set is modified so that each bit in it
has the value {@code true} if and only if it both initially
had the value {@code true} and the corresponding bit in the
bit set argument also had the value {@code true}.

@param set a bit set
"
      end

      operation 8655874 "or"
	public explicit_return_type "void"
	nparams 1
	  param inout name "set" type class_ref 238082 // BitSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a logical <b>OR</b> of this bit set with the bit set
argument. This bit set is modified so that a bit in it has the
value {@code true} if and only if it either already had the
value {@code true} or the corresponding bit in the bit set
argument has the value {@code true}.

@param set a bit set
"
      end

      operation 8656002 "xor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "set" type class_ref 238082 // BitSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a logical <b>XOR</b> of this bit set with the bit set
argument. This bit set is modified so that a bit in it has the
value {@code true} if and only if one of the following
statements holds:
<ul>
<li>The bit initially has the value {@code true}, and the
    corresponding bit in the argument has the value {@code false}.
<li>The bit initially has the value {@code false}, and the
    corresponding bit in the argument has the value {@code true}.
</ul>

@param  set a bit set
"
      end

      operation 8656130 "andNot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "set" type class_ref 238082 // BitSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears all of the bits in this {@code BitSet} whose corresponding
bit is set in the specified {@code BitSet}.

@param  set the {@code BitSet} with which to mask this
        {@code BitSet}
@since  1.2
"
      end

      operation 8656258 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this bit set. The hash code depends
only on which bits are set within this {@code BitSet}.

<p>The hash code is defined to be the result of the following
calculation:
 <pre> {@code
public int hashCode() {
    long h = 1234;
    long[] words = toLongArray();
    for (int i = words.length; --i >= 0; )
        h ^= words[i] * (i + 1);
    return (int)((h >> 32) ^ h);
}}</pre>
Note that the hash code changes if the set of bits is altered.

@return the hash code value for this bit set
"
      end

      operation 8656386 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bits of space actually in use by this
{@code BitSet} to represent bit values.
The maximum element in the set is the size - 1st element.

@return the number of bits currently in this bit set
"
      end

      operation 8656514 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is {@code true} if and only if the argument is
not {@code null} and is a {@code Bitset} object that has
exactly the same set of bits set to {@code true} as this bit
set. That is, for every nonnegative {@code int} index {@code k},
<pre>((BitSet)obj).get(k) == this.get(k)</pre>
must be true. The current sizes of the two bit sets are not compared.

@param  obj the object to compare with
@return {@code true} if the objects are the same;
        {@code false} otherwise
@see    #size()
"
      end

      operation 8656642 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cloning this {@code BitSet} produces a new {@code BitSet}
that is equal to it.
The clone of the bit set is another bit set that has exactly the
same bits set to {@code true} as this bit set.

@return a clone of this bit set
@see    #size()
"
      end

      operation 8656770 "trimToSize"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to reduce internal storage used for the bits in this bit set.
Calling this method may, but is not required to, affect the value
returned by a subsequent call to the {@link #size()} method.
"
      end

      operation 8656898 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the {@code BitSet} instance to a stream (i.e.,
serialize it).
"
      end

      operation 8657026 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the {@code BitSet} instance from a stream (i.e.,
deserialize it).
"
      end

      operation 8657154 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this bit set. For every index
for which this {@code BitSet} contains a bit in the set
state, the decimal representation of that index is included in
the result. Such indices are listed in order from lowest to
highest, separated by \",&nbsp;\" (a comma and a space) and
surrounded by braces, resulting in the usual mathematical
notation for a set of integers.

<p>Example:
<pre>
BitSet drPepper = new BitSet();</pre>
Now {@code drPepper.toString()} returns \"{@code {}}\".
<pre>
drPepper.set(2);</pre>
Now {@code drPepper.toString()} returns \"{@code {2}}\".
<pre>
drPepper.set(4);
drPepper.set(10);</pre>
Now {@code drPepper.toString()} returns \"{@code {2, 4, 10}}\".

@return a string representation of this bit set
"
      end

      operation 8657282 "stream"
	public return_type class_ref 429570 // IntStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream of indices for which this {@code BitSet}
contains a bit in the set state. The indices are returned
in order, from lowest to highest. The size of the stream
is the number of bits in the set state, equal to the value
returned by the {@link #cardinality()} method.

<p>The bit set must remain constant during the execution of the
terminal stream operation.  Otherwise, the result of the terminal
stream operation is undefined.

@return a stream of integers representing set indices
@since 1.8
"
      end
    end

    class 240130 "Properties"
      visibility public 
      nactuals 2
      actual class class_ref 137090 // Hashtable
        rank 0 explicit_value ""
      actual class class_ref 137090 // Hashtable
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Properties} class represents a persistent set of
properties. The {@code Properties} can be saved to a stream
or loaded from a stream. Each key and its corresponding value in
the property list is a string.
<p>
A property list can contain another property list as its
\"defaults\"; this second property list is searched if
the property key is not found in the original property list.
<p>
Because {@code Properties} inherits from {@code Hashtable}, the
{@code put} and {@code putAll} methods can be applied to a
{@code Properties} object.  Their use is strongly discouraged as they
allow the caller to insert entries whose keys or values are not
{@code Strings}.  The {@code setProperty} method should be used
instead.  If the {@code store} or {@code save} method is called
on a \"compromised\" {@code Properties} object that contains a
non-{@code String} key or value, the call will fail. Similarly,
the call to the {@code propertyNames} or {@code list} method
will fail if it is called on a \"compromised\" {@code Properties}
object that contains a non-{@code String} key.

<p>
The {@link #load(java.io.Reader) load(Reader)} <tt>/</tt>
{@link #store(java.io.Writer, java.lang.String) store(Writer, String)}
methods load and store properties from and to a character based stream
in a simple line-oriented format specified below.

The {@link #load(java.io.InputStream) load(InputStream)} <tt>/</tt>
{@link #store(java.io.OutputStream, java.lang.String) store(OutputStream, String)}
methods work the same way as the load(Reader)/store(Writer, String) pair, except
the input/output stream is encoded in ISO 8859-1 character encoding.
Characters that cannot be directly represented in this encoding can be written using
Unicode escapes as defined in section 3.3 of
<cite>The Java&trade; Language Specification</cite>;
only a single 'u' character is allowed in an escape
sequence. The native2ascii tool can be used to convert property files to and
from other character encodings.

<p> The {@link #loadFromXML(InputStream)} and {@link
#storeToXML(OutputStream, String, String)} methods load and store properties
in a simple XML format.  By default the UTF-8 character encoding is used,
however a specific encoding may be specified if required. Implementations
are required to support UTF-8 and UTF-16 and may support other encodings.
An XML properties document has the following DOCTYPE declaration:

<pre>
&lt;!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\"&gt;
</pre>
Note that the system URI (http://java.sun.com/dtd/properties.dtd) is
<i>not</i> accessed when exporting or importing properties; it merely
serves as a string to uniquely identify the DTD, which is:
<pre>
   &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;

   &lt;!-- DTD for properties --&gt;

   &lt;!ELEMENT properties ( comment?, entry* ) &gt;

   &lt;!ATTLIST properties version CDATA #FIXED \"1.0\"&gt;

   &lt;!ELEMENT comment (#PCDATA) &gt;

   &lt;!ELEMENT entry (#PCDATA) &gt;

   &lt;!ATTLIST entry key CDATA #REQUIRED&gt;
</pre>

<p>This class is thread-safe: multiple threads can share a single
<tt>Properties</tt> object without the need for external synchronization.

@see <a href=\"../../../technotes/tools/solaris/native2ascii.html\">native2ascii tool for Solaris</a>
@see <a href=\"../../../technotes/tools/windows/native2ascii.html\">native2ascii tool for Windows</a>

@author  Arthur van Hoff
@author  Michael McCloskey
@author  Xueming Shen
@since   JDK1.0
"
      classrelation 3338370 // <realization>
	relation 3338370 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3338370 // <realization>
	  b parent class_ref 137090 // Hashtable
      end

      attribute 1841794 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4112578634029874840L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "use serialVersionUID from JDK 1.1.X for interoperability

"
      end

      classrelation 3338498 // defaults (<unidirectional association>)
	relation 3338498 --->
	  a role_name "defaults" protected
	    comment "
A property list that contains default values for any keys not
found in this property list.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3338498 // defaults (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      operation 7923458 "Properties"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty property list with no default values.
"
      end

      operation 7923586 "Properties"
	public explicit_return_type ""
	nparams 1
	  param inout name "defaults" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty property list with the specified defaults.

@param   defaults   the defaults.
"
      end

      operation 7923714 "setProperty"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the <tt>Hashtable</tt> method {@code put}. Provided for
parallelism with the <tt>getProperty</tt> method. Enforces use of
strings for property keys and values. The value returned is the
result of the <tt>Hashtable</tt> call to {@code put}.

@param key the key to be placed into this property list.
@param value the value corresponding to <tt>key</tt>.
@return     the previous value of the specified key in this property
            list, or {@code null} if it did not have one.
@see #getProperty
@since    1.2
"
      end

      operation 7923842 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 407298 // Reader
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a property list (key and element pairs) from the input
character stream in a simple line-oriented format.
<p>
Properties are processed in terms of lines. There are two
kinds of line, <i>natural lines</i> and <i>logical lines</i>.
A natural line is defined as a line of
characters that is terminated either by a set of line terminator
characters ({@code \\n} or {@code \\r} or {@code \\r\\n})
or by the end of the stream. A natural line may be either a blank line,
a comment line, or hold all or some of a key-element pair. A logical
line holds all the data of a key-element pair, which may be spread
out across several adjacent natural lines by escaping
the line terminator sequence with a backslash character
{@code \\}.  Note that a comment line cannot be extended
in this manner; every natural line that is a comment must have
its own comment indicator, as described below. Lines are read from
input until the end of the stream is reached.

<p>
A natural line that contains only white space characters is
considered blank and is ignored.  A comment line has an ASCII
{@code '#'} or {@code '!'} as its first non-white
space character; comment lines are also ignored and do not
encode key-element information.  In addition to line
terminators, this format considers the characters space
({@code ' '}, {@code '\\u005Cu0020'}), tab
({@code '\\t'}, {@code '\\u005Cu0009'}), and form feed
({@code '\\f'}, {@code '\\u005Cu000C'}) to be white
space.

<p>
If a logical line is spread across several natural lines, the
backslash escaping the line terminator sequence, the line
terminator sequence, and any white space at the start of the
following line have no affect on the key or element values.
The remainder of the discussion of key and element parsing
(when loading) will assume all the characters constituting
the key and element appear on a single natural line after
line continuation characters have been removed.  Note that
it is <i>not</i> sufficient to only examine the character
preceding a line terminator sequence to decide if the line
terminator is escaped; there must be an odd number of
contiguous backslashes for the line terminator to be escaped.
Since the input is processed from left to right, a
non-zero even number of 2<i>n</i> contiguous backslashes
before a line terminator (or elsewhere) encodes <i>n</i>
backslashes after escape processing.

<p>
The key contains all of the characters in the line starting
with the first non-white space character and up to, but not
including, the first unescaped {@code '='},
{@code ':'}, or white space character other than a line
terminator. All of these key termination characters may be
included in the key by escaping them with a preceding backslash
character; for example,<p>

{@code \\:\\=}<p>

would be the two-character key {@code \":=\"}.  Line
terminator characters can be included using {@code \\r} and
{@code \\n} escape sequences.  Any white space after the
key is skipped; if the first non-white space character after
the key is {@code '='} or {@code ':'}, then it is
ignored and any white space characters after it are also
skipped.  All remaining characters on the line become part of
the associated element string; if there are no remaining
characters, the element is the empty string
{@code \"\"}.  Once the raw character sequences
constituting the key and element are identified, escape
processing is performed as described above.

<p>
As an example, each of the following three lines specifies the key
{@code \"Truth\"} and the associated element value
{@code \"Beauty\"}:
<pre>
Truth = Beauty
 Truth:Beauty
Truth                    :Beauty
</pre>
As another example, the following three lines specify a single
property:
<pre>
fruits                           apple, banana, pear, \\
                                 cantaloupe, watermelon, \\
                                 kiwi, mango
</pre>
The key is {@code \"fruits\"} and the associated element is:
<pre>\"apple, banana, pear, cantaloupe, watermelon, kiwi, mango\"</pre>
Note that a space appears before each {@code \\} so that a space
will appear after each comma in the final result; the {@code \\},
line terminator, and leading white space on the continuation line are
merely discarded and are <i>not</i> replaced by one or more other
characters.
<p>
As a third example, the line:
<pre>cheeses
</pre>
specifies that the key is {@code \"cheeses\"} and the associated
element is the empty string {@code \"\"}.
<p>
<a name=\"unicodeescapes\"></a>
Characters in keys and elements can be represented in escape
sequences similar to those used for character and string literals
(see sections 3.3 and 3.10.6 of
<cite>The Java&trade; Language Specification</cite>).

The differences from the character escape sequences and Unicode
escapes used for characters and strings are:

<ul>
<li> Octal escapes are not recognized.

<li> The character sequence {@code \\b} does <i>not</i>
represent a backspace character.

<li> The method does not treat a backslash character,
{@code \\}, before a non-valid escape character as an
error; the backslash is silently dropped.  For example, in a
Java string the sequence {@code \"\\z\"} would cause a
compile time error.  In contrast, this method silently drops
the backslash.  Therefore, this method treats the two character
sequence {@code \"\\b\"} as equivalent to the single
character {@code 'b'}.

<li> Escapes are not necessary for single and double quotes;
however, by the rule above, single and double quote characters
preceded by a backslash still yield single and double quote
characters, respectively.

<li> Only a single 'u' character is allowed in a Unicode escape
sequence.

</ul>
<p>
The specified stream remains open after this method returns.

@param   reader   the input character stream.
@throws  IOException  if an error occurred when reading from the
         input stream.
@throws  IllegalArgumentException if a malformed Unicode escape
         appears in the input.
@since   1.6
"
      end

      operation 7923970 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inStream" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a property list (key and element pairs) from the input
byte stream. The input stream is in a simple line-oriented
format as specified in
{@link #load(java.io.Reader) load(Reader)} and is assumed to use
the ISO 8859-1 character encoding; that is each byte is one Latin1
character. Characters not in Latin1, and certain special characters,
are represented in keys and elements using Unicode escapes as defined in
section 3.3 of
<cite>The Java&trade; Language Specification</cite>.
<p>
The specified stream remains open after this method returns.

@param      inStream   the input stream.
@exception  IOException  if an error occurred when reading from the
            input stream.
@throws     IllegalArgumentException if the input stream contains a
            malformed Unicode escape sequence.
@since 1.2
"
      end

      operation 7924098 "load0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "lr" type class_ref 1014530 // LineReader
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1014530 "LineReader"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 7924226 "LineReader"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "inStream" type class_ref 146434 // InputStream
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7924354 "LineReader"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "reader" type class_ref 407298 // Reader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 1841922 "inByteBuf"
	  package explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1842050 "inCharBuf"
	  package explicit_type "char"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1842178 "lineBuf"
	  package explicit_type "char"
	  multiplicity "[]"
	  init_value " new char[1024]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1842306 "inLimit"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1842434 "inOff"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3338626 // inStream (<unidirectional association>)
	  relation 3338626 --->
	    a role_name "inStream" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3338626 // inStream (<unidirectional association>)
	    b parent class_ref 146434 // InputStream
	end

	classrelation 3338754 // reader (<unidirectional association>)
	  relation 3338754 --->
	    a role_name "reader" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3338754 // reader (<unidirectional association>)
	    b parent class_ref 407298 // Reader
	end

	operation 7924482 "readLine"
	  package explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7924610 "loadConvert"
	private return_type class_ref 128130 // String
	nparams 4
	  param inout name "in" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "convtBuf" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts encoded &#92;uxxxx to unicode chars
and changes special saved chars to their original forms
"
      end

      operation 7924738 "saveConvert"
	private return_type class_ref 128130 // String
	nparams 3
	  param inout name "theString" type class_ref 128130 // String
	  param inout name "escapeSpace" explicit_type "boolean"
	  param inout name "escapeUnicode" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts unicodes to encoded &#92;uxxxx and escapes
special characters with a preceding slash
"
      end

      operation 7924866 "writeComments"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "bw" type class_ref 921858 // BufferedWriter
	  param inout name "comments" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7924994 "save"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "comments" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Calls the {@code store(OutputStream out, String comments)} method
and suppresses IOExceptions that were thrown.

@deprecated This method does not throw an IOException if an I/O error
occurs while saving the property list.  The preferred way to save a
properties list is via the {@code store(OutputStream out,
String comments)} method or the
{@code storeToXML(OutputStream os, String comment)} method.

@param   out      an output stream.
@param   comments   a description of the property list.
@exception  ClassCastException  if this {@code Properties} object
            contains any keys or values that are not
            {@code Strings}.
"
      end

      operation 7925122 "store"
	public explicit_return_type "void"
	nparams 2
	  param inout name "writer" type class_ref 428034 // Writer
	  param inout name "comments" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this property list (key and element pairs) in this
{@code Properties} table to the output character stream in a
format suitable for using the {@link #load(java.io.Reader) load(Reader)}
method.
<p>
Properties from the defaults table of this {@code Properties}
table (if any) are <i>not</i> written out by this method.
<p>
If the comments argument is not null, then an ASCII {@code #}
character, the comments string, and a line separator are first written
to the output stream. Thus, the {@code comments} can serve as an
identifying comment. Any one of a line feed ('\\n'), a carriage
return ('\\r'), or a carriage return followed immediately by a line feed
in comments is replaced by a line separator generated by the {@code Writer}
and if the next character in comments is not character {@code #} or
character {@code !} then an ASCII {@code #} is written out
after that line separator.
<p>
Next, a comment line is always written, consisting of an ASCII
{@code #} character, the current date and time (as if produced
by the {@code toString} method of {@code Date} for the
current time), and a line separator as generated by the {@code Writer}.
<p>
Then every entry in this {@code Properties} table is
written out, one per line. For each entry the key string is
written, then an ASCII {@code =}, then the associated
element string. For the key, all space characters are
written with a preceding {@code \\} character.  For the
element, leading space characters, but not embedded or trailing
space characters, are written with a preceding {@code \\}
character. The key and element characters {@code #},
{@code !}, {@code =}, and {@code :} are written
with a preceding backslash to ensure that they are properly loaded.
<p>
After the entries have been written, the output stream is flushed.
The output stream remains open after this method returns.
<p>

@param   writer      an output character stream writer.
@param   comments   a description of the property list.
@exception  IOException if writing this property list to the specified
            output stream throws an <tt>IOException</tt>.
@exception  ClassCastException  if this {@code Properties} object
            contains any keys or values that are not {@code Strings}.
@exception  NullPointerException  if {@code writer} is null.
@since 1.6
"
      end

      operation 7925250 "store"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "comments" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this property list (key and element pairs) in this
{@code Properties} table to the output stream in a format suitable
for loading into a {@code Properties} table using the
{@link #load(InputStream) load(InputStream)} method.
<p>
Properties from the defaults table of this {@code Properties}
table (if any) are <i>not</i> written out by this method.
<p>
This method outputs the comments, properties keys and values in
the same format as specified in
{@link #store(java.io.Writer, java.lang.String) store(Writer)},
with the following differences:
<ul>
<li>The stream is written using the ISO 8859-1 character encoding.

<li>Characters not in Latin-1 in the comments are written as
{@code \\u005Cu}<i>xxxx</i> for their appropriate unicode
hexadecimal value <i>xxxx</i>.

<li>Characters less than {@code \\u005Cu0020} and characters greater
than {@code \\u005Cu007E} in property keys or values are written
as {@code \\u005Cu}<i>xxxx</i> for the appropriate hexadecimal
value <i>xxxx</i>.
</ul>
<p>
After the entries have been written, the output stream is flushed.
The output stream remains open after this method returns.
<p>
@param   out      an output stream.
@param   comments   a description of the property list.
@exception  IOException if writing this property list to the specified
            output stream throws an <tt>IOException</tt>.
@exception  ClassCastException  if this {@code Properties} object
            contains any keys or values that are not {@code Strings}.
@exception  NullPointerException  if {@code out} is null.
@since 1.2
"
      end

      operation 7925378 "store0"
	private explicit_return_type "void"
	nparams 3
	  param inout name "bw" type class_ref 921858 // BufferedWriter
	  param inout name "comments" type class_ref 128130 // String
	  param inout name "escUnicode" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7925506 "loadFromXML"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 1014658 // InvalidPropertiesFormatException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads all of the properties represented by the XML document on the
specified input stream into this properties table.

<p>The XML document must have the following DOCTYPE declaration:
<pre>
&lt;!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\"&gt;
</pre>
Furthermore, the document must satisfy the properties DTD described
above.

<p> An implementation is required to read XML documents that use the
\"{@code UTF-8}\" or \"{@code UTF-16}\" encoding. An implementation may
support additional encodings.

<p>The specified stream is closed after this method returns.

@param in the input stream from which to read the XML document.
@throws IOException if reading from the specified input stream
        results in an <tt>IOException</tt>.
@throws java.io.UnsupportedEncodingException if the document's encoding
        declaration can be read and it specifies an encoding that is not
        supported
@throws InvalidPropertiesFormatException Data on input stream does not
        constitute a valid XML document with the mandated document type.
@throws NullPointerException if {@code in} is null.
@see    #storeToXML(OutputStream, String, String)
@see    <a href=\"http://www.w3.org/TR/REC-xml/#charencoding\">Character
        Encoding in Entities</a>
@since 1.5
"
      end

      operation 7925634 "storeToXML"
	public explicit_return_type "void"
	nparams 2
	  param inout name "os" type class_ref 151298 // OutputStream
	  param inout name "comment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emits an XML document representing all of the properties contained
in this table.

<p> An invocation of this method of the form <tt>props.storeToXML(os,
comment)</tt> behaves in exactly the same way as the invocation
<tt>props.storeToXML(os, comment, \"UTF-8\");</tt>.

@param os the output stream on which to emit the XML document.
@param comment a description of the property list, or {@code null}
       if no comment is desired.
@throws IOException if writing to the specified output stream
        results in an <tt>IOException</tt>.
@throws NullPointerException if {@code os} is null.
@throws ClassCastException  if this {@code Properties} object
        contains any keys or values that are not
        {@code Strings}.
@see    #loadFromXML(InputStream)
@since 1.5
"
      end

      operation 7925762 "storeToXML"
	public explicit_return_type "void"
	nparams 3
	  param inout name "os" type class_ref 151298 // OutputStream
	  param inout name "comment" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emits an XML document representing all of the properties contained
in this table, using the specified encoding.

<p>The XML document will have the following DOCTYPE declaration:
<pre>
&lt;!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\"&gt;
</pre>

<p>If the specified comment is {@code null} then no comment
will be stored in the document.

<p> An implementation is required to support writing of XML documents
that use the \"{@code UTF-8}\" or \"{@code UTF-16}\" encoding. An
implementation may support additional encodings.

<p>The specified stream remains open after this method returns.

@param os        the output stream on which to emit the XML document.
@param comment   a description of the property list, or {@code null}
                 if no comment is desired.
@param  encoding the name of a supported
                 <a href=\"../lang/package-summary.html#charenc\">
                 character encoding</a>

@throws IOException if writing to the specified output stream
        results in an <tt>IOException</tt>.
@throws java.io.UnsupportedEncodingException if the encoding is not
        supported by the implementation.
@throws NullPointerException if {@code os} is {@code null},
        or if {@code encoding} is {@code null}.
@throws ClassCastException  if this {@code Properties} object
        contains any keys or values that are not
        {@code Strings}.
@see    #loadFromXML(InputStream)
@see    <a href=\"http://www.w3.org/TR/REC-xml/#charencoding\">Character
        Encoding in Entities</a>
@since 1.5
"
      end

      operation 7925890 "getProperty"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the property with the specified key in this property list.
If the key is not found in this property list, the default property list,
and its defaults, recursively, are then checked. The method returns
{@code null} if the property is not found.

@param   key   the property key.
@return  the value in this property list with the specified key value.
@see     #setProperty
@see     #defaults
"
      end

      operation 7926018 "getProperty"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "defaultValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the property with the specified key in this property list.
If the key is not found in this property list, the default property list,
and its defaults, recursively, are then checked. The method returns the
default value argument if the property is not found.

@param   key            the hashtable key.
@param   defaultValue   a default value.

@return  the value in this property list with the specified key value.
@see     #setProperty
@see     #defaults
"
      end

      operation 7926146 "propertyNames"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the keys in this property list,
including distinct keys in the default property list if a key
of the same name has not already been found from the main
properties list.

@return  an enumeration of all the keys in this property list, including
         the keys in the default property list.
@throws  ClassCastException if any key in this property list
         is not a string.
@see     java.util.Enumeration
@see     java.util.Properties#defaults
@see     #stringPropertyNames
"
      end

      operation 7926274 "stringPropertyNames"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of keys in this property list where
the key and its corresponding value are strings,
including distinct keys in the default property list if a key
of the same name has not already been found from the main
properties list.  Properties whose key or value is not
of type <tt>String</tt> are omitted.
<p>
The returned set is not backed by the <tt>Properties</tt> object.
Changes to this <tt>Properties</tt> are not reflected in the set,
or vice versa.

@return  a set of keys in this property list where
         the key and its corresponding value are strings,
         including the keys in the default property list.
@see     java.util.Properties#defaults
@since   1.6
"
      end

      operation 7926402 "list"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this property list out to the specified output stream.
This method is useful for debugging.

@param   out   an output stream.
@throws  ClassCastException if any key in this property list
         is not a string.
"
      end

      operation 7926530 "list"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this property list out to the specified output stream.
This method is useful for debugging.

@param   out   an output stream.
@throws  ClassCastException if any key in this property list
         is not a string.
@since   JDK1.1


Rather than use an anonymous inner class to share common code, this
method is duplicated in order to ensure that a non-1.1 compiler can
compile this file.
"
      end

      operation 7926658 "enumerate"
	private explicit_return_type "void"
	nparams 1
	  param inout name "h" type class_ref 137090 // Hashtable
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enumerates all key/value pairs in the specified hashtable.
@param h the hashtable
@throws ClassCastException if any of the property keys
        is not of String type.
"
      end

      operation 7926786 "enumerateStringProperties"
	private explicit_return_type "void"
	nparams 1
	  param inout name "h" type class_ref 137090 // Hashtable
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enumerates all key/value pairs in the specified hashtable
and omits the property if the key or value is not a string.
@param h the hashtable
"
      end

      operation 7926914 "toHex"
	class_operation private explicit_return_type "char"
	nparams 1
	  param in name "nibble" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a nibble to a hex character
@param   nibble  the nibble to convert.
"
      end

      attribute 1842562 "hexDigit"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A table of hex digits 
"
      end

      class 1014786 "XmlSupport"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 7927042 "loadProviderFromProperty"
	  class_operation private explicit_return_type "XmlPropertiesProvider"
	  nparams 1
	    param inout name "cl" type class_ref 129026 // ClassLoader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7927170 "loadProviderAsService"
	  class_operation private explicit_return_type "XmlPropertiesProvider"
	  nparams 1
	    param inout name "cl" type class_ref 129026 // ClassLoader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7927298 "loadProvider"
	  class_operation private explicit_return_type "XmlPropertiesProvider"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 1842690 "PROVIDER"
	  class_attribute const_attribute private explicit_type "XmlPropertiesProvider"
	  init_value " loadProvider()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7927426 "load"
	  class_operation package explicit_return_type "void"
	  nparams 2
	    param inout name "props" type class_ref 240130 // Properties
	    param inout name "in" type class_ref 146434 // InputStream
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 1014658 // InvalidPropertiesFormatException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7927554 "save"
	  class_operation package explicit_return_type "void"
	  nparams 4
	    param inout name "props" type class_ref 240130 // Properties
	    param inout name "os" type class_ref 151298 // OutputStream
	    param inout name "comment" type class_ref 128130 // String
	    param inout name "encoding" type class_ref 128130 // String
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 249858 "ResourceBundle"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
Resource bundles contain locale-specific objects.  When your program needs a
locale-specific resource, a <code>String</code> for example, your program can
load it from the resource bundle that is appropriate for the current user's
locale. In this way, you can write program code that is largely independent
of the user's locale isolating most, if not all, of the locale-specific
information in resource bundles.

<p>
This allows you to write programs that can:
<UL>
<LI> be easily localized, or translated, into different languages
<LI> handle multiple locales at once
<LI> be easily modified later to support even more locales
</UL>

<P>
Resource bundles belong to families whose members share a common base
name, but whose names also have additional components that identify
their locales. For example, the base name of a family of resource
bundles might be \"MyResources\". The family should have a default
resource bundle which simply has the same name as its family -
\"MyResources\" - and will be used as the bundle of last resort if a
specific locale is not supported. The family can then provide as
many locale-specific members as needed, for example a German one
named \"MyResources_de\".

<P>
Each resource bundle in a family contains the same items, but the items have
been translated for the locale represented by that resource bundle.
For example, both \"MyResources\" and \"MyResources_de\" may have a
<code>String</code> that's used on a button for canceling operations.
In \"MyResources\" the <code>String</code> may contain \"Cancel\" and in
\"MyResources_de\" it may contain \"Abbrechen\".

<P>
If there are different resources for different countries, you
can make specializations: for example, \"MyResources_de_CH\" contains objects for
the German language (de) in Switzerland (CH). If you want to only
modify some of the resources
in the specialization, you can do so.

<P>
When your program needs a locale-specific object, it loads
the <code>ResourceBundle</code> class using the
{@link #getBundle(java.lang.String, java.util.Locale) getBundle}
method:
<blockquote>
<pre>
ResourceBundle myResources =
     ResourceBundle.getBundle(\"MyResources\", currentLocale);
</pre>
</blockquote>

<P>
Resource bundles contain key/value pairs. The keys uniquely
identify a locale-specific object in the bundle. Here's an
example of a <code>ListResourceBundle</code> that contains
two key/value pairs:
<blockquote>
<pre>
public class MyResources extends ListResourceBundle {
    protected Object[][] getContents() {
        return new Object[][] {
            // LOCALIZE THE SECOND STRING OF EACH ARRAY (e.g., \"OK\")
            {\"OkKey\", \"OK\"},
            {\"CancelKey\", \"Cancel\"},
            // END OF MATERIAL TO LOCALIZE
       };
    }
}
</pre>
</blockquote>
Keys are always <code>String</code>s.
In this example, the keys are \"OkKey\" and \"CancelKey\".
In the above example, the values
are also <code>String</code>s--\"OK\" and \"Cancel\"--but
they don't have to be. The values can be any type of object.

<P>
You retrieve an object from resource bundle using the appropriate
getter method. Because \"OkKey\" and \"CancelKey\"
are both strings, you would use <code>getString</code> to retrieve them:
<blockquote>
<pre>
button1 = new Button(myResources.getString(\"OkKey\"));
button2 = new Button(myResources.getString(\"CancelKey\"));
</pre>
</blockquote>
The getter methods all require the key as an argument and return
the object if found. If the object is not found, the getter method
throws a <code>MissingResourceException</code>.

<P>
Besides <code>getString</code>, <code>ResourceBundle</code> also provides
a method for getting string arrays, <code>getStringArray</code>,
as well as a generic <code>getObject</code> method for any other
type of object. When using <code>getObject</code>, you'll
have to cast the result to the appropriate type. For example:
<blockquote>
<pre>
int[] myIntegers = (int[]) myResources.getObject(\"intList\");
</pre>
</blockquote>

<P>
The Java Platform provides two subclasses of <code>ResourceBundle</code>,
<code>ListResourceBundle</code> and <code>PropertyResourceBundle</code>,
that provide a fairly simple way to create resources.
As you saw briefly in a previous example, <code>ListResourceBundle</code>
manages its resource as a list of key/value pairs.
<code>PropertyResourceBundle</code> uses a properties file to manage
its resources.

<p>
If <code>ListResourceBundle</code> or <code>PropertyResourceBundle</code>
do not suit your needs, you can write your own <code>ResourceBundle</code>
subclass.  Your subclasses must override two methods: <code>handleGetObject</code>
and <code>getKeys()</code>.

<p>
The implementation of a {@code ResourceBundle} subclass must be thread-safe
if it's simultaneously used by multiple threads. The default implementations
of the non-abstract methods in this class, and the methods in the direct
known concrete subclasses {@code ListResourceBundle} and
{@code PropertyResourceBundle} are thread-safe.

<h3>ResourceBundle.Control</h3>

The {@link ResourceBundle.Control} class provides information necessary
to perform the bundle loading process by the <code>getBundle</code>
factory methods that take a <code>ResourceBundle.Control</code>
instance. You can implement your own subclass in order to enable
non-standard resource bundle formats, change the search strategy, or
define caching parameters. Refer to the descriptions of the class and the
{@link #getBundle(String, Locale, ClassLoader, Control) getBundle}
factory method for details.

<p><a name=\"modify_default_behavior\">For the {@code getBundle} factory</a>
methods that take no {@link Control} instance, their <a
href=\"#default_behavior\"> default behavior</a> of resource bundle loading
can be modified with <em>installed</em> {@link
ResourceBundleControlProvider} implementations. Any installed providers are
detected at the {@code ResourceBundle} class loading time. If any of the
providers provides a {@link Control} for the given base name, that {@link
Control} will be used instead of the default {@link Control}. If there is
more than one service provider installed for supporting the same base name,
the first one returned from {@link ServiceLoader} will be used.

<h3>Cache Management</h3>

Resource bundle instances created by the <code>getBundle</code> factory
methods are cached by default, and the factory methods return the same
resource bundle instance multiple times if it has been
cached. <code>getBundle</code> clients may clear the cache, manage the
lifetime of cached resource bundle instances using time-to-live values,
or specify not to cache resource bundle instances. Refer to the
descriptions of the {@linkplain #getBundle(String, Locale, ClassLoader,
Control) <code>getBundle</code> factory method}, {@link
#clearCache(ClassLoader) clearCache}, {@link
Control#getTimeToLive(String, Locale)
ResourceBundle.Control.getTimeToLive}, and {@link
Control#needsReload(String, Locale, String, ClassLoader, ResourceBundle,
long) ResourceBundle.Control.needsReload} for details.

<h3>Example</h3>

The following is a very simple example of a <code>ResourceBundle</code>
subclass, <code>MyResources</code>, that manages two resources (for a larger number of
resources you would probably use a <code>Map</code>).
Notice that you don't need to supply a value if
a \"parent-level\" <code>ResourceBundle</code> handles the same
key with the same value (as for the okKey below).
<blockquote>
<pre>
// default (English language, United States)
public class MyResources extends ResourceBundle {
    public Object handleGetObject(String key) {
        if (key.equals(\"okKey\")) return \"Ok\";
        if (key.equals(\"cancelKey\")) return \"Cancel\";
        return null;
    }

    public Enumeration&lt;String&gt; getKeys() {
        return Collections.enumeration(keySet());
    }

    // Overrides handleKeySet() so that the getKeys() implementation
    // can rely on the keySet() value.
    protected Set&lt;String&gt; handleKeySet() {
        return new HashSet&lt;String&gt;(Arrays.asList(\"okKey\", \"cancelKey\"));
    }
}

// German language
public class MyResources_de extends MyResources {
    public Object handleGetObject(String key) {
        // don't need okKey, since parent level handles it.
        if (key.equals(\"cancelKey\")) return \"Abbrechen\";
        return null;
    }

    protected Set&lt;String&gt; handleKeySet() {
        return new HashSet&lt;String&gt;(Arrays.asList(\"cancelKey\"));
    }
}
</pre>
</blockquote>
You do not have to restrict yourself to using a single family of
<code>ResourceBundle</code>s. For example, you could have a set of bundles for
exception messages, <code>ExceptionResources</code>
(<code>ExceptionResources_fr</code>, <code>ExceptionResources_de</code>, ...),
and one for widgets, <code>WidgetResource</code> (<code>WidgetResources_fr</code>,
<code>WidgetResources_de</code>, ...); breaking up the resources however you like.

@see ListResourceBundle
@see PropertyResourceBundle
@see MissingResourceException
@since JDK1.1
"
      attribute 369538 "INITIAL_CACHE_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " initial size of the bundle cache 
"
      end

      classrelation 536706 // NONEXISTENT_BUNDLE (<unidirectional association>)
	relation 536706 --->
	  a role_name "NONEXISTENT_BUNDLE" init_value " new ResourceBundle() {
            public Enumeration<String> getKeys() { return null; }
            protected Object handleGetObject(String key) { return null; }
            public String toString() { return \"NONEXISTENT_BUNDLE\"; }
        }" class_relation const_relation private
	    comment " constant indicating that no resource bundle exists 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 536706 // NONEXISTENT_BUNDLE (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      class 318850 "CacheKey"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 541186 // <realization>
	  relation 541186 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 541186 // <realization>
	    b parent class_ref 185858 // Cloneable
	end

	classrelation 541314 // name (<unidirectional association>)
	  relation 541314 --->
	    a role_name "name" private
	      comment " These three are the actual keys for lookup in Map.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541314 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 541442 // locale (<unidirectional association>)
	  relation 541442 --->
	    a role_name "locale" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541442 // locale (<unidirectional association>)
	    b parent class_ref 312962 // Locale
	end

	classrelation 541570 // loaderRef (<unidirectional association>)
	  relation 541570 --->
	    a role_name "loaderRef" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541570 // loaderRef (<unidirectional association>)
	    b parent class_ref 320642 // LoaderReference
	end

	classrelation 541698 // format (<unidirectional association>)
	  relation 541698 --->
	    a role_name "format" private
	      comment " bundle format which is necessary for calling
 Control.needsReload().
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541698 // format (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 370562 "loadTime"
	  volatile private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " These time values are in CacheKey so that NONEXISTENT_BUNDLE
 doesn't need to be cloned for caching.
 The time when the bundle has been loaded
"
	end

	attribute 370690 "expirationTime"
	  volatile private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " The time when the bundle expires in the cache, or either
 Control.TTL_DONT_CACHE or Control.TTL_NO_EXPIRATION_CONTROL.
"
	end

	classrelation 541826 // cause (<unidirectional association>)
	  relation 541826 --->
	    a role_name "cause" private
	      comment " Placeholder for an error report by a Throwable
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541826 // cause (<unidirectional association>)
	    b parent class_ref 129922 // Throwable
	end

	attribute 370818 "hashCodeCache"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Hash code value cache to avoid recalculating the hash code
 of this instance.
"
	end

	operation 1731202 "CacheKey"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	    param inout name "loader" type class_ref 129026 // ClassLoader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1731330 "getName"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1731458 "setName"
	  package return_type class_ref 318850 // CacheKey
	  nparams 1
	    param inout name "baseName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1731586 "getLocale"
	  package return_type class_ref 312962 // Locale
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1731714 "setLocale"
	  package return_type class_ref 318850 // CacheKey
	  nparams 1
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1731842 "getLoader"
	  package return_type class_ref 129026 // ClassLoader
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1731970 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "other" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732098 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732226 "calculateHashCode"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732354 "clone"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732482 "getFormat"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732610 "setFormat"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "format" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732738 "setCause"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "cause" type class_ref 129922 // Throwable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732866 "getCause"
	  private return_type class_ref 129922 // Throwable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1732994 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 536834 // cacheList (<unidirectional association>)
	relation 536834 --->
	  a role_name "cacheList" init_value " new ConcurrentHashMap<>(INITIAL_CACHE_SIZE)" class_relation const_relation private
	    comment "
The cache is a map from cache keys (with bundle base name, locale, and
class loader) to either a resource bundle or NONEXISTENT_BUNDLE wrapped by a
BundleReference.

The cache is a ConcurrentMap, allowing the cache to be searched
concurrently by multiple threads.  This will also allow the cache keys
to be reclaimed along with the ClassLoaders they reference.

This variable would be better named \"cache\", but we keep the old
name for compatibility with some workarounds for bug 4212439.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CacheKey, BundleReference> ${name}${value};
"
	    classrelation_ref 536834 // cacheList (<unidirectional association>)
	  b parent class_ref 130690 // ConcurrentMap
      end

      classrelation 536962 // referenceQueue (<unidirectional association>)
	relation 536962 --->
	  a role_name "referenceQueue" init_value " new ReferenceQueue<>()" class_relation const_relation private
	    comment "
Queue for reference objects referring to class loaders or bundles.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 536962 // referenceQueue (<unidirectional association>)
	  b parent class_ref 130946 // ReferenceQueue
      end

      operation 1719426 "getBaseBundleName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base name of this bundle, if known, or {@code null} if unknown.

If not null, then this is the value of the {@code baseName} parameter
that was passed to the {@code ResourceBundle.getBundle(...)} method
when the resource bundle was loaded.

@return The base name of the resource bundle, as provided to and expected
by the {@code ResourceBundle.getBundle(...)} methods.

@see #getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)

@since 1.8
"
      end

      classrelation 537090 // parent (<unidirectional association>)
	relation 537090 --->
	  a role_name "parent" init_value " null" protected
	    comment "
The parent bundle of this bundle.
The parent bundle is searched by {@link #getObject getObject}
when this bundle does not contain a particular resource.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 537090 // parent (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 537218 // locale (<unidirectional association>)
	relation 537218 --->
	  a role_name "locale" init_value " null" private
	    comment "
The locale for this bundle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 537218 // locale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 537346 // name (<unidirectional association>)
	relation 537346 --->
	  a role_name "name" private
	    comment "
The base bundle name for this bundle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 537346 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 369666 "expired"
	volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The flag indicating this bundle has expired in the cache.

"
      end

      classrelation 537474 // cacheKey (<unidirectional association>)
	relation 537474 --->
	  a role_name "cacheKey" volatile private
	    comment "
The back link to the cache key. null if this bundle isn't in
the cache (yet) or has expired.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 537474 // cacheKey (<unidirectional association>)
	  b parent class_ref 318850 // CacheKey
      end

      classrelation 537602 // keySet (<unidirectional association>)
	relation 537602 --->
	  a role_name "keySet" volatile private
	    comment "
A Set of the keys contained only in this ResourceBundle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 537602 // keySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 537730 // providers (<unidirectional association>)
	relation 537730 --->
	  a role_name "providers" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ResourceBundleControlProvider> ${name}${value};
"
	    classrelation_ref 537730 // providers (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      extra_member 134274 "initialization"
	
	cpp "" ""
	java "  static {
        List<ResourceBundleControlProvider> list = null;
        ServiceLoader<ResourceBundleControlProvider> serviceLoaders
                = ServiceLoader.loadInstalled(ResourceBundleControlProvider.class);
        for (ResourceBundleControlProvider provider : serviceLoaders) {
            if (list == null) {
                list = new ArrayList<>();
            }
            list.add(provider);
        }
        providers = list;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 1719554 "ResourceBundle"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 1719682 "getString"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a string for the given key from this resource bundle or one of its parents.
Calling this method is equivalent to calling
<blockquote>
<code>(String) {@link #getObject(java.lang.String) getObject}(key)</code>.
</blockquote>

@param key the key for the desired string
@exception NullPointerException if <code>key</code> is <code>null</code>
@exception MissingResourceException if no object for the given key can be found
@exception ClassCastException if the object found for the given key is not a string
@return the string for the given key
"
      end

      operation 1719810 "getStringArray"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a string array for the given key from this resource bundle or one of its parents.
Calling this method is equivalent to calling
<blockquote>
<code>(String[]) {@link #getObject(java.lang.String) getObject}(key)</code>.
</blockquote>

@param key the key for the desired string array
@exception NullPointerException if <code>key</code> is <code>null</code>
@exception MissingResourceException if no object for the given key can be found
@exception ClassCastException if the object found for the given key is not a string array
@return the string array for the given key
"
      end

      operation 1719938 "getObject"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an object for the given key from this resource bundle or one of its parents.
This method first tries to obtain the object from this resource bundle using
{@link #handleGetObject(java.lang.String) handleGetObject}.
If not successful, and the parent resource bundle is not null,
it calls the parent's <code>getObject</code> method.
If still not successful, it throws a MissingResourceException.

@param key the key for the desired object
@exception NullPointerException if <code>key</code> is <code>null</code>
@exception MissingResourceException if no object for the given key can be found
@return the object for the given key
"
      end

      operation 1720066 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the locale of this resource bundle. This method can be used after a
call to getBundle() to determine whether the resource bundle returned really
corresponds to the requested locale or is a fallback.

@return the locale of this resource bundle
"
      end

      operation 1720194 "getLoader"
	class_operation private return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "caller" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Automatic determination of the ClassLoader to be used to load
resources on behalf of the client.
"
      end

      class 319106 "RBClassLoader"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 540802 // <generalisation>
	  relation 540802 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 540802 // <generalisation>
	    b parent class_ref 129026 // ClassLoader
	end

	classrelation 540930 // INSTANCE (<unidirectional association>)
	  relation 540930 --->
	    a role_name "INSTANCE" init_value " AccessController.doPrivileged(
                    new PrivilegedAction<RBClassLoader>() {
                        public RBClassLoader run() {
                            return new RBClassLoader();
                        }
                    })" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 540930 // INSTANCE (<unidirectional association>)
	    b parent class_ref 319106 // RBClassLoader
	end

	classrelation 541058 // loader (<unidirectional association>)
	  relation 541058 --->
	    a role_name "loader" init_value " ClassLoader.getSystemClassLoader()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541058 // loader (<unidirectional association>)
	    b parent class_ref 129026 // ClassLoader
	end

	operation 1730562 "RBClassLoader"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1730690 "loadClass"
	  public return_type class_ref 130818 // Class
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  nexceptions 1
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1730818 "getResource"
	  public return_type class_ref 243458 // URL
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1730946 "getResourceAsStream"
	  public return_type class_ref 146434 // InputStream
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1731074 "setParent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent bundle of this bundle.
The parent bundle is searched by {@link #getObject getObject}
when this bundle does not contain a particular resource.

@param parent this bundle's parent bundle.
"
      end

      class 320642 "LoaderReference"
	visibility private 
	nactuals 1
	actual class class_ref 131330 // WeakReference
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 541954 // <realization>
	  relation 541954 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 541954 // <realization>
	    b parent class_ref 131330 // WeakReference
	end

	classrelation 542082 // <realization>
	  relation 542082 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 542082 // <realization>
	    b parent class_ref 320770 // CacheKeyReference
	end

	classrelation 542210 // cacheKey (<unidirectional association>)
	  relation 542210 --->
	    a role_name "cacheKey" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 542210 // cacheKey (<unidirectional association>)
	    b parent class_ref 318850 // CacheKey
	end

	operation 1733250 "LoaderReference"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "referent" type class_ref 129026 // ClassLoader
	    param inout name "q" type class_ref 130946 // ReferenceQueue
	    param inout name "key" type class_ref 318850 // CacheKey
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<Object> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1733378 "getCacheKey"
	  public return_type class_ref 318850 // CacheKey
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 320770 "CacheKeyReference"
	visibility private stereotype "interface"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 1733122 "getCacheKey"
	  public return_type class_ref 318850 // CacheKey
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 320898 "BundleReference"
	visibility private 
	nactuals 1
	actual class class_ref 321026 // SoftReference
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 542466 // <realization>
	  relation 542466 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 542466 // <realization>
	    b parent class_ref 321026 // SoftReference
	end

	classrelation 542594 // <realization>
	  relation 542594 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 542594 // <realization>
	    b parent class_ref 320770 // CacheKeyReference
	end

	classrelation 542722 // cacheKey (<unidirectional association>)
	  relation 542722 --->
	    a role_name "cacheKey" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 542722 // cacheKey (<unidirectional association>)
	    b parent class_ref 318850 // CacheKey
	end

	operation 1733890 "BundleReference"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "referent" type class_ref 249858 // ResourceBundle
	    param inout name "q" type class_ref 130946 // ReferenceQueue
	    param inout name "key" type class_ref 318850 // CacheKey
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<Object> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1734018 "getCacheKey"
	  public return_type class_ref 318850 // CacheKey
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1734146 "getBundle"
	class_operation public return_type class_ref 249858 // ResourceBundle
	nparams 1
	  param inout name "baseName" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Gets a resource bundle using the specified base name, the default locale,
and the caller's class loader. Calling this method is equivalent to calling
<blockquote>
<code>getBundle(baseName, Locale.getDefault(), this.getClass().getClassLoader())</code>,
</blockquote>
except that <code>getClassLoader()</code> is run with the security
privileges of <code>ResourceBundle</code>.
See {@link #getBundle(String, Locale, ClassLoader) getBundle}
for a complete description of the search and instantiation strategy.

@param baseName the base name of the resource bundle, a fully qualified class name
@exception java.lang.NullPointerException
    if <code>baseName</code> is <code>null</code>
@exception MissingResourceException
    if no resource bundle for the specified base name can be found
@return a resource bundle for the given base name and the default locale
"
      end

      operation 1734274 "getBundle"
	class_operation public return_type class_ref 249858 // ResourceBundle
	nparams 2
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a resource bundle using the specified base name, the
default locale and the specified control. Calling this method
is equivalent to calling
<pre>
getBundle(baseName, Locale.getDefault(),
          this.getClass().getClassLoader(), control),
</pre>
except that <code>getClassLoader()</code> is run with the security
privileges of <code>ResourceBundle</code>.  See {@link
#getBundle(String, Locale, ClassLoader, Control) getBundle} for the
complete description of the resource bundle loading process with a
<code>ResourceBundle.Control</code>.

@param baseName
       the base name of the resource bundle, a fully qualified class
       name
@param control
       the control which gives information for the resource bundle
       loading process
@return a resource bundle for the given base name and the default
       locale
@exception NullPointerException
       if <code>baseName</code> or <code>control</code> is
       <code>null</code>
@exception MissingResourceException
       if no resource bundle for the specified base name can be found
@exception IllegalArgumentException
       if the given <code>control</code> doesn't perform properly
       (e.g., <code>control.getCandidateLocales</code> returns null.)
       Note that validation of <code>control</code> is performed as
       needed.
@since 1.6
"
      end

      class 321154 "Control"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 542850 // FORMAT_DEFAULT (<unidirectional association>)
	  relation 542850 --->
	    a role_name "FORMAT_DEFAULT" init_value " Collections.unmodifiableList(Arrays.asList(\"java.class\",
                                                         \"java.properties\"))" class_relation const_relation public
	      comment "
The default format <code>List</code>, which contains the strings
<code>\"java.class\"</code> and <code>\"java.properties\"</code>, in
this order. This <code>List</code> is {@linkplain
Collections#unmodifiableList(List) unmodifiable}.

@see #getFormats(String)

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 542850 // FORMAT_DEFAULT (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 542978 // FORMAT_CLASS (<unidirectional association>)
	  relation 542978 --->
	    a role_name "FORMAT_CLASS" init_value " Collections.unmodifiableList(Arrays.asList(\"java.class\"))" class_relation const_relation public
	      comment "
The class-only format <code>List</code> containing
<code>\"java.class\"</code>. This <code>List</code> is {@linkplain
Collections#unmodifiableList(List) unmodifiable}.

@see #getFormats(String)

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 542978 // FORMAT_CLASS (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 543106 // FORMAT_PROPERTIES (<unidirectional association>)
	  relation 543106 --->
	    a role_name "FORMAT_PROPERTIES" init_value " Collections.unmodifiableList(Arrays.asList(\"java.properties\"))" class_relation const_relation public
	      comment "
The properties-only format <code>List</code> containing
<code>\"java.properties\"</code>. This <code>List</code> is
{@linkplain Collections#unmodifiableList(List) unmodifiable}.

@see #getFormats(String)

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 543106 // FORMAT_PROPERTIES (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	attribute 371202 "TTL_DONT_CACHE"
	  class_attribute const_attribute public explicit_type "long"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The time-to-live constant for not caching loaded resource bundle
instances.

@see #getTimeToLive(String, Locale)

"
	end

	attribute 371330 "TTL_NO_EXPIRATION_CONTROL"
	  class_attribute const_attribute public explicit_type "long"
	  init_value " -2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The time-to-live constant for disabling the expiration control
for loaded resource bundle instances in the cache.

@see #getTimeToLive(String, Locale)

"
	end

	classrelation 543234 // INSTANCE (<unidirectional association>)
	  relation 543234 --->
	    a role_name "INSTANCE" init_value " new Control()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 543234 // INSTANCE (<unidirectional association>)
	    b parent class_ref 321154 // Control
	end

	operation 1737218 "Control"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sole constructor. (For invocation by subclass constructors,
typically implicit.)
"
	end

	operation 1737346 "getControl"
	  class_operation public return_type class_ref 321154 // Control
	  nparams 1
	    param inout name "formats" type class_ref 175362 // List
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a <code>ResourceBundle.Control</code> in which the {@link
#getFormats(String) getFormats} method returns the specified
<code>formats</code>. The <code>formats</code> must be equal to
one of {@link Control#FORMAT_PROPERTIES}, {@link
Control#FORMAT_CLASS} or {@link
Control#FORMAT_DEFAULT}. <code>ResourceBundle.Control</code>
instances returned by this method are singletons and thread-safe.

<p>Specifying {@link Control#FORMAT_DEFAULT} is equivalent to
instantiating the <code>ResourceBundle.Control</code> class,
except that this method returns a singleton.

@param formats
       the formats to be returned by the
       <code>ResourceBundle.Control.getFormats</code> method
@return a <code>ResourceBundle.Control</code> supporting the
       specified <code>formats</code>
@exception NullPointerException
       if <code>formats</code> is <code>null</code>
@exception IllegalArgumentException
       if <code>formats</code> is unknown
"
	end

	operation 1737474 "getNoFallbackControl"
	  class_operation public return_type class_ref 321154 // Control
	  nparams 1
	    param inout name "formats" type class_ref 175362 // List
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a <code>ResourceBundle.Control</code> in which the {@link
#getFormats(String) getFormats} method returns the specified
<code>formats</code> and the {@link
Control#getFallbackLocale(String, Locale) getFallbackLocale}
method returns <code>null</code>. The <code>formats</code> must
be equal to one of {@link Control#FORMAT_PROPERTIES}, {@link
Control#FORMAT_CLASS} or {@link Control#FORMAT_DEFAULT}.
<code>ResourceBundle.Control</code> instances returned by this
method are singletons and thread-safe.

@param formats
       the formats to be returned by the
       <code>ResourceBundle.Control.getFormats</code> method
@return a <code>ResourceBundle.Control</code> supporting the
       specified <code>formats</code> with no fallback
       <code>Locale</code> support
@exception NullPointerException
       if <code>formats</code> is <code>null</code>
@exception IllegalArgumentException
       if <code>formats</code> is unknown
"
	end

	operation 1737602 "getFormats"
	  public return_type class_ref 175362 // List
	  nparams 1
	    param inout name "baseName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a <code>List</code> of <code>String</code>s containing
formats to be used to load resource bundles for the given
<code>baseName</code>. The <code>ResourceBundle.getBundle</code>
factory method tries to load resource bundles with formats in the
order specified by the list. The list returned by this method
must have at least one <code>String</code>. The predefined
formats are <code>\"java.class\"</code> for class-based resource
bundles and <code>\"java.properties\"</code> for {@linkplain
PropertyResourceBundle properties-based} ones. Strings starting
with <code>\"java.\"</code> are reserved for future extensions and
must not be used by application-defined formats.

<p>It is not a requirement to return an immutable (unmodifiable)
<code>List</code>.  However, the returned <code>List</code> must
not be mutated after it has been returned by
<code>getFormats</code>.

<p>The default implementation returns {@link #FORMAT_DEFAULT} so
that the <code>ResourceBundle.getBundle</code> factory method
looks up first class-based resource bundles, then
properties-based ones.

@param baseName
       the base name of the resource bundle, a fully qualified class
       name
@return a <code>List</code> of <code>String</code>s containing
       formats for loading resource bundles.
@exception NullPointerException
       if <code>baseName</code> is null
@see #FORMAT_DEFAULT
@see #FORMAT_CLASS
@see #FORMAT_PROPERTIES
"
	end

	operation 1737730 "getCandidateLocales"
	  public return_type class_ref 175362 // List
	  nparams 2
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Locale> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a <code>List</code> of <code>Locale</code>s as candidate
locales for <code>baseName</code> and <code>locale</code>. This
method is called by the <code>ResourceBundle.getBundle</code>
factory method each time the factory method tries finding a
resource bundle for a target <code>Locale</code>.

<p>The sequence of the candidate locales also corresponds to the
runtime resource lookup path (also known as the <I>parent
chain</I>), if the corresponding resource bundles for the
candidate locales exist and their parents are not defined by
loaded resource bundles themselves.  The last element of the list
must be a {@linkplain Locale#ROOT root locale} if it is desired to
have the base bundle as the terminal of the parent chain.

<p>If the given locale is equal to <code>Locale.ROOT</code> (the
root locale), a <code>List</code> containing only the root
<code>Locale</code> must be returned. In this case, the
<code>ResourceBundle.getBundle</code> factory method loads only
the base bundle as the resulting resource bundle.

<p>It is not a requirement to return an immutable (unmodifiable)
<code>List</code>. However, the returned <code>List</code> must not
be mutated after it has been returned by
<code>getCandidateLocales</code>.

<p>The default implementation returns a <code>List</code> containing
<code>Locale</code>s using the rules described below.  In the
description below, <em>L</em>, <em>S</em>, <em>C</em> and <em>V</em>
respectively represent non-empty language, script, country, and
variant.  For example, [<em>L</em>, <em>C</em>] represents a
<code>Locale</code> that has non-empty values only for language and
country.  The form <em>L</em>(\"xx\") represents the (non-empty)
language value is \"xx\".  For all cases, <code>Locale</code>s whose
final component values are empty strings are omitted.

<ol><li>For an input <code>Locale</code> with an empty script value,
append candidate <code>Locale</code>s by omitting the final component
one by one as below:

<ul>
<li> [<em>L</em>, <em>C</em>, <em>V</em>] </li>
<li> [<em>L</em>, <em>C</em>] </li>
<li> [<em>L</em>] </li>
<li> <code>Locale.ROOT</code> </li>
</ul></li>

<li>For an input <code>Locale</code> with a non-empty script value,
append candidate <code>Locale</code>s by omitting the final component
up to language, then append candidates generated from the
<code>Locale</code> with country and variant restored:

<ul>
<li> [<em>L</em>, <em>S</em>, <em>C</em>, <em>V</em>]</li>
<li> [<em>L</em>, <em>S</em>, <em>C</em>]</li>
<li> [<em>L</em>, <em>S</em>]</li>
<li> [<em>L</em>, <em>C</em>, <em>V</em>]</li>
<li> [<em>L</em>, <em>C</em>]</li>
<li> [<em>L</em>]</li>
<li> <code>Locale.ROOT</code></li>
</ul></li>

<li>For an input <code>Locale</code> with a variant value consisting
of multiple subtags separated by underscore, generate candidate
<code>Locale</code>s by omitting the variant subtags one by one, then
insert them after every occurrence of <code> Locale</code>s with the
full variant value in the original list.  For example, if the
the variant consists of two subtags <em>V1</em> and <em>V2</em>:

<ul>
<li> [<em>L</em>, <em>S</em>, <em>C</em>, <em>V1</em>, <em>V2</em>]</li>
<li> [<em>L</em>, <em>S</em>, <em>C</em>, <em>V1</em>]</li>
<li> [<em>L</em>, <em>S</em>, <em>C</em>]</li>
<li> [<em>L</em>, <em>S</em>]</li>
<li> [<em>L</em>, <em>C</em>, <em>V1</em>, <em>V2</em>]</li>
<li> [<em>L</em>, <em>C</em>, <em>V1</em>]</li>
<li> [<em>L</em>, <em>C</em>]</li>
<li> [<em>L</em>]</li>
<li> <code>Locale.ROOT</code></li>
</ul></li>

<li>Special cases for Chinese.  When an input <code>Locale</code> has the
language \"zh\" (Chinese) and an empty script value, either \"Hans\" (Simplified) or
\"Hant\" (Traditional) might be supplied, depending on the country.
When the country is \"CN\" (China) or \"SG\" (Singapore), \"Hans\" is supplied.
When the country is \"HK\" (Hong Kong SAR China), \"MO\" (Macau SAR China),
or \"TW\" (Taiwan), \"Hant\" is supplied.  For all other countries or when the country
is empty, no script is supplied.  For example, for <code>Locale(\"zh\", \"CN\")
</code>, the candidate list will be:
<ul>
<li> [<em>L</em>(\"zh\"), <em>S</em>(\"Hans\"), <em>C</em>(\"CN\")]</li>
<li> [<em>L</em>(\"zh\"), <em>S</em>(\"Hans\")]</li>
<li> [<em>L</em>(\"zh\"), <em>C</em>(\"CN\")]</li>
<li> [<em>L</em>(\"zh\")]</li>
<li> <code>Locale.ROOT</code></li>
</ul>

For <code>Locale(\"zh\", \"TW\")</code>, the candidate list will be:
<ul>
<li> [<em>L</em>(\"zh\"), <em>S</em>(\"Hant\"), <em>C</em>(\"TW\")]</li>
<li> [<em>L</em>(\"zh\"), <em>S</em>(\"Hant\")]</li>
<li> [<em>L</em>(\"zh\"), <em>C</em>(\"TW\")]</li>
<li> [<em>L</em>(\"zh\")]</li>
<li> <code>Locale.ROOT</code></li>
</ul></li>

<li>Special cases for Norwegian.  Both <code>Locale(\"no\", \"NO\",
\"NY\")</code> and <code>Locale(\"nn\", \"NO\")</code> represent Norwegian
Nynorsk.  When a locale's language is \"nn\", the standard candidate
list is generated up to [<em>L</em>(\"nn\")], and then the following
candidates are added:

<ul><li> [<em>L</em>(\"no\"), <em>C</em>(\"NO\"), <em>V</em>(\"NY\")]</li>
<li> [<em>L</em>(\"no\"), <em>C</em>(\"NO\")]</li>
<li> [<em>L</em>(\"no\")]</li>
<li> <code>Locale.ROOT</code></li>
</ul>

If the locale is exactly <code>Locale(\"no\", \"NO\", \"NY\")</code>, it is first
converted to <code>Locale(\"nn\", \"NO\")</code> and then the above procedure is
followed.

<p>Also, Java treats the language \"no\" as a synonym of Norwegian
Bokm&#xE5;l \"nb\".  Except for the single case <code>Locale(\"no\",
\"NO\", \"NY\")</code> (handled above), when an input <code>Locale</code>
has language \"no\" or \"nb\", candidate <code>Locale</code>s with
language code \"no\" and \"nb\" are interleaved, first using the
requested language, then using its synonym. For example,
<code>Locale(\"nb\", \"NO\", \"POSIX\")</code> generates the following
candidate list:

<ul>
<li> [<em>L</em>(\"nb\"), <em>C</em>(\"NO\"), <em>V</em>(\"POSIX\")]</li>
<li> [<em>L</em>(\"no\"), <em>C</em>(\"NO\"), <em>V</em>(\"POSIX\")]</li>
<li> [<em>L</em>(\"nb\"), <em>C</em>(\"NO\")]</li>
<li> [<em>L</em>(\"no\"), <em>C</em>(\"NO\")]</li>
<li> [<em>L</em>(\"nb\")]</li>
<li> [<em>L</em>(\"no\")]</li>
<li> <code>Locale.ROOT</code></li>
</ul>

<code>Locale(\"no\", \"NO\", \"POSIX\")</code> would generate the same list
except that locales with \"no\" would appear before the corresponding
locales with \"nb\".</li>
</ol>

<p>The default implementation uses an {@link ArrayList} that
overriding implementations may modify before returning it to the
caller. However, a subclass must not modify it after it has
been returned by <code>getCandidateLocales</code>.

<p>For example, if the given <code>baseName</code> is \"Messages\"
and the given <code>locale</code> is
<code>Locale(\"ja\",&nbsp;\"\",&nbsp;\"XX\")</code>, then a
<code>List</code> of <code>Locale</code>s:
<pre>
    Locale(\"ja\", \"\", \"XX\")
    Locale(\"ja\")
    Locale.ROOT
</pre>
is returned. And if the resource bundles for the \"ja\" and
\"\" <code>Locale</code>s are found, then the runtime resource
lookup path (parent chain) is:
<pre>{@code
    Messages_ja -> Messages
}</pre>

@param baseName
       the base name of the resource bundle, a fully
       qualified class name
@param locale
       the locale for which a resource bundle is desired
@return a <code>List</code> of candidate
       <code>Locale</code>s for the given <code>locale</code>
@exception NullPointerException
       if <code>baseName</code> or <code>locale</code> is
       <code>null</code>
"
	end

	class 321282 "CandidateListCache"
	  visibility private 
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  operation 1737858 "createObject"
	    protected return_type class_ref 175362 // List
	    nparams 1
	      param inout name "base" explicit_type "BaseLocale"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Locale> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1737986 "getDefaultList"
	    class_operation private return_type class_ref 175362 // List
	    nparams 4
	      param inout name "language" type class_ref 128130 // String
	      param inout name "script" type class_ref 128130 // String
	      param inout name "region" type class_ref 128130 // String
	      param inout name "variant" type class_ref 128130 // String
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Locale> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 543362 // CANDIDATES_CACHE (<unidirectional association>)
	  relation 543362 --->
	    a role_name "CANDIDATES_CACHE" init_value " new CandidateListCache()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 543362 // CANDIDATES_CACHE (<unidirectional association>)
	    b parent class_ref 321282 // CandidateListCache
	end

	operation 1738114 "getFallbackLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 2
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a <code>Locale</code> to be used as a fallback locale for
further resource bundle searches by the
<code>ResourceBundle.getBundle</code> factory method. This method
is called from the factory method every time when no resulting
resource bundle has been found for <code>baseName</code> and
<code>locale</code>, where locale is either the parameter for
<code>ResourceBundle.getBundle</code> or the previous fallback
locale returned by this method.

<p>The method returns <code>null</code> if no further fallback
search is desired.

<p>The default implementation returns the {@linkplain
Locale#getDefault() default <code>Locale</code>} if the given
<code>locale</code> isn't the default one.  Otherwise,
<code>null</code> is returned.

@param baseName
       the base name of the resource bundle, a fully
       qualified class name for which
       <code>ResourceBundle.getBundle</code> has been
       unable to find any resource bundles (except for the
       base bundle)
@param locale
       the <code>Locale</code> for which
       <code>ResourceBundle.getBundle</code> has been
       unable to find any resource bundles (except for the
       base bundle)
@return a <code>Locale</code> for the fallback search,
       or <code>null</code> if no further fallback search
       is desired.
@exception NullPointerException
       if <code>baseName</code> or <code>locale</code>
       is <code>null</code>
"
	end

	operation 1738242 "newBundle"
	  public return_type class_ref 249858 // ResourceBundle
	  nparams 5
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	    param inout name "format" type class_ref 128130 // String
	    param inout name "loader" type class_ref 129026 // ClassLoader
	    param inout name "reload" explicit_type "boolean"
	  nexceptions 3
	    exception class_ref 321538 // IllegalAccessException
	    exception class_ref 193282 // InstantiationException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Instantiates a resource bundle for the given bundle name of the
given format and locale, using the given class loader if
necessary. This method returns <code>null</code> if there is no
resource bundle available for the given parameters. If a resource
bundle can't be instantiated due to an unexpected error, the
error must be reported by throwing an <code>Error</code> or
<code>Exception</code> rather than simply returning
<code>null</code>.

<p>If the <code>reload</code> flag is <code>true</code>, it
indicates that this method is being called because the previously
loaded resource bundle has expired.

<p>The default implementation instantiates a
<code>ResourceBundle</code> as follows.

<ul>

<li>The bundle name is obtained by calling {@link
#toBundleName(String, Locale) toBundleName(baseName,
locale)}.</li>

<li>If <code>format</code> is <code>\"java.class\"</code>, the
{@link Class} specified by the bundle name is loaded by calling
{@link ClassLoader#loadClass(String)}. Then, a
<code>ResourceBundle</code> is instantiated by calling {@link
Class#newInstance()}.  Note that the <code>reload</code> flag is
ignored for loading class-based resource bundles in this default
implementation.</li>

<li>If <code>format</code> is <code>\"java.properties\"</code>,
{@link #toResourceName(String, String) toResourceName(bundlename,
\"properties\")} is called to get the resource name.
If <code>reload</code> is <code>true</code>, {@link
ClassLoader#getResource(String) load.getResource} is called
to get a {@link URL} for creating a {@link
URLConnection}. This <code>URLConnection</code> is used to
{@linkplain URLConnection#setUseCaches(boolean) disable the
caches} of the underlying resource loading layers,
and to {@linkplain URLConnection#getInputStream() get an
<code>InputStream</code>}.
Otherwise, {@link ClassLoader#getResourceAsStream(String)
loader.getResourceAsStream} is called to get an {@link
InputStream}. Then, a {@link
PropertyResourceBundle} is constructed with the
<code>InputStream</code>.</li>

<li>If <code>format</code> is neither <code>\"java.class\"</code>
nor <code>\"java.properties\"</code>, an
<code>IllegalArgumentException</code> is thrown.</li>

</ul>

@param baseName
       the base bundle name of the resource bundle, a fully
       qualified class name
@param locale
       the locale for which the resource bundle should be
       instantiated
@param format
       the resource bundle format to be loaded
@param loader
       the <code>ClassLoader</code> to use to load the bundle
@param reload
       the flag to indicate bundle reloading; <code>true</code>
       if reloading an expired resource bundle,
       <code>false</code> otherwise
@return the resource bundle instance,
       or <code>null</code> if none could be found.
@exception NullPointerException
       if <code>bundleName</code>, <code>locale</code>,
       <code>format</code>, or <code>loader</code> is
       <code>null</code>, or if <code>null</code> is returned by
       {@link #toBundleName(String, Locale) toBundleName}
@exception IllegalArgumentException
       if <code>format</code> is unknown, or if the resource
       found for the given parameters contains malformed data.
@exception ClassCastException
       if the loaded class cannot be cast to <code>ResourceBundle</code>
@exception IllegalAccessException
       if the class or its nullary constructor is not
       accessible.
@exception InstantiationException
       if the instantiation of a class fails for some other
       reason.
@exception ExceptionInInitializerError
       if the initialization provoked by this method fails.
@exception SecurityException
       If a security manager is present and creation of new
       instances is denied. See {@link Class#newInstance()}
       for details.
@exception IOException
       if an error occurred when reading resources using
       any I/O operations
"
	end

	operation 1738370 "getTimeToLive"
	  public explicit_return_type "long"
	  nparams 2
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the time-to-live (TTL) value for resource bundles that
are loaded under this
<code>ResourceBundle.Control</code>. Positive time-to-live values
specify the number of milliseconds a bundle can remain in the
cache without being validated against the source data from which
it was constructed. The value 0 indicates that a bundle must be
validated each time it is retrieved from the cache. {@link
#TTL_DONT_CACHE} specifies that loaded resource bundles are not
put in the cache. {@link #TTL_NO_EXPIRATION_CONTROL} specifies
that loaded resource bundles are put in the cache with no
expiration control.

<p>The expiration affects only the bundle loading process by the
<code>ResourceBundle.getBundle</code> factory method.  That is,
if the factory method finds a resource bundle in the cache that
has expired, the factory method calls the {@link
#needsReload(String, Locale, String, ClassLoader, ResourceBundle,
long) needsReload} method to determine whether the resource
bundle needs to be reloaded. If <code>needsReload</code> returns
<code>true</code>, the cached resource bundle instance is removed
from the cache. Otherwise, the instance stays in the cache,
updated with the new TTL value returned by this method.

<p>All cached resource bundles are subject to removal from the
cache due to memory constraints of the runtime environment.
Returning a large positive value doesn't mean to lock loaded
resource bundles in the cache.

<p>The default implementation returns {@link #TTL_NO_EXPIRATION_CONTROL}.

@param baseName
       the base name of the resource bundle for which the
       expiration value is specified.
@param locale
       the locale of the resource bundle for which the
       expiration value is specified.
@return the time (0 or a positive millisecond offset from the
       cached time) to get loaded bundles expired in the cache,
       {@link #TTL_NO_EXPIRATION_CONTROL} to disable the
       expiration control, or {@link #TTL_DONT_CACHE} to disable
       caching.
@exception NullPointerException
       if <code>baseName</code> or <code>locale</code> is
       <code>null</code>
"
	end

	operation 1738498 "needsReload"
	  public explicit_return_type "boolean"
	  nparams 6
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	    param inout name "format" type class_ref 128130 // String
	    param inout name "loader" type class_ref 129026 // ClassLoader
	    param inout name "bundle" type class_ref 249858 // ResourceBundle
	    param in name "loadTime" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the expired <code>bundle</code> in the cache needs
to be reloaded based on the loading time given by
<code>loadTime</code> or some other criteria. The method returns
<code>true</code> if reloading is required; <code>false</code>
otherwise. <code>loadTime</code> is a millisecond offset since
the <a href=\"Calendar.html#Epoch\"> <code>Calendar</code>
Epoch</a>.

The calling <code>ResourceBundle.getBundle</code> factory method
calls this method on the <code>ResourceBundle.Control</code>
instance used for its current invocation, not on the instance
used in the invocation that originally loaded the resource
bundle.

<p>The default implementation compares <code>loadTime</code> and
the last modified time of the source data of the resource
bundle. If it's determined that the source data has been modified
since <code>loadTime</code>, <code>true</code> is
returned. Otherwise, <code>false</code> is returned. This
implementation assumes that the given <code>format</code> is the
same string as its file suffix if it's not one of the default
formats, <code>\"java.class\"</code> or
<code>\"java.properties\"</code>.

@param baseName
       the base bundle name of the resource bundle, a
       fully qualified class name
@param locale
       the locale for which the resource bundle
       should be instantiated
@param format
       the resource bundle format to be loaded
@param loader
       the <code>ClassLoader</code> to use to load the bundle
@param bundle
       the resource bundle instance that has been expired
       in the cache
@param loadTime
       the time when <code>bundle</code> was loaded and put
       in the cache
@return <code>true</code> if the expired bundle needs to be
       reloaded; <code>false</code> otherwise.
@exception NullPointerException
       if <code>baseName</code>, <code>locale</code>,
       <code>format</code>, <code>loader</code>, or
       <code>bundle</code> is <code>null</code>
"
	end

	operation 1738626 "toBundleName"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Converts the given <code>baseName</code> and <code>locale</code>
to the bundle name. This method is called from the default
implementation of the {@link #newBundle(String, Locale, String,
ClassLoader, boolean) newBundle} and {@link #needsReload(String,
Locale, String, ClassLoader, ResourceBundle, long) needsReload}
methods.

<p>This implementation returns the following value:
<pre>
    baseName + \"_\" + language + \"_\" + script + \"_\" + country + \"_\" + variant
</pre>
where <code>language</code>, <code>script</code>, <code>country</code>,
and <code>variant</code> are the language, script, country, and variant
values of <code>locale</code>, respectively. Final component values that
are empty Strings are omitted along with the preceding '_'.  When the
script is empty, the script value is omitted along with the preceding '_'.
If all of the values are empty strings, then <code>baseName</code>
is returned.

<p>For example, if <code>baseName</code> is
<code>\"baseName\"</code> and <code>locale</code> is
<code>Locale(\"ja\",&nbsp;\"\",&nbsp;\"XX\")</code>, then
<code>\"baseName_ja_&thinsp;_XX\"</code> is returned. If the given
locale is <code>Locale(\"en\")</code>, then
<code>\"baseName_en\"</code> is returned.

<p>Overriding this method allows applications to use different
conventions in the organization and packaging of localized
resources.

@param baseName
       the base name of the resource bundle, a fully
       qualified class name
@param locale
       the locale for which a resource bundle should be
       loaded
@return the bundle name for the resource bundle
@exception NullPointerException
       if <code>baseName</code> or <code>locale</code>
       is <code>null</code>
"
	end

	operation 1738754 "toResourceName"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param inout name "bundleName" type class_ref 128130 // String
	    param inout name "suffix" type class_ref 128130 // String
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Converts the given <code>bundleName</code> to the form required
by the {@link ClassLoader#getResource ClassLoader.getResource}
method by replacing all occurrences of <code>'.'</code> in
<code>bundleName</code> with <code>'/'</code> and appending a
<code>'.'</code> and the given file <code>suffix</code>. For
example, if <code>bundleName</code> is
<code>\"foo.bar.MyResources_ja_JP\"</code> and <code>suffix</code>
is <code>\"properties\"</code>, then
<code>\"foo/bar/MyResources_ja_JP.properties\"</code> is returned.

@param bundleName
       the bundle name
@param suffix
       the file type suffix
@return the converted resource name
@exception NullPointerException
        if <code>bundleName</code> or <code>suffix</code>
        is <code>null</code>
"
	end

	operation 1738882 "toResourceName0"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param inout name "bundleName" type class_ref 128130 // String
	    param inout name "suffix" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1734402 "getBundle"
	class_operation public return_type class_ref 249858 // ResourceBundle
	nparams 2
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Gets a resource bundle using the specified base name and locale,
and the caller's class loader. Calling this method is equivalent to calling
<blockquote>
<code>getBundle(baseName, locale, this.getClass().getClassLoader())</code>,
</blockquote>
except that <code>getClassLoader()</code> is run with the security
privileges of <code>ResourceBundle</code>.
See {@link #getBundle(String, Locale, ClassLoader) getBundle}
for a complete description of the search and instantiation strategy.

@param baseName
       the base name of the resource bundle, a fully qualified class name
@param locale
       the locale for which a resource bundle is desired
@exception NullPointerException
       if <code>baseName</code> or <code>locale</code> is <code>null</code>
@exception MissingResourceException
       if no resource bundle for the specified base name can be found
@return a resource bundle for the given base name and locale
"
      end

      operation 1734530 "getBundle"
	class_operation public return_type class_ref 249858 // ResourceBundle
	nparams 3
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "targetLocale" type class_ref 312962 // Locale
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a resource bundle using the specified base name, target
locale and control, and the caller's class loader. Calling this
method is equivalent to calling
<pre>
getBundle(baseName, targetLocale, this.getClass().getClassLoader(),
          control),
</pre>
except that <code>getClassLoader()</code> is run with the security
privileges of <code>ResourceBundle</code>.  See {@link
#getBundle(String, Locale, ClassLoader, Control) getBundle} for the
complete description of the resource bundle loading process with a
<code>ResourceBundle.Control</code>.

@param baseName
       the base name of the resource bundle, a fully qualified
       class name
@param targetLocale
       the locale for which a resource bundle is desired
@param control
       the control which gives information for the resource
       bundle loading process
@return a resource bundle for the given base name and a
       <code>Locale</code> in <code>locales</code>
@exception NullPointerException
       if <code>baseName</code>, <code>locales</code> or
       <code>control</code> is <code>null</code>
@exception MissingResourceException
       if no resource bundle for the specified base name in any
       of the <code>locales</code> can be found.
@exception IllegalArgumentException
       if the given <code>control</code> doesn't perform properly
       (e.g., <code>control.getCandidateLocales</code> returns null.)
       Note that validation of <code>control</code> is performed as
       needed.
@since 1.6
"
      end

      operation 1734658 "getBundle"
	class_operation public return_type class_ref 249858 // ResourceBundle
	nparams 3
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a resource bundle using the specified base name, locale, and class
loader.

<p>This method behaves the same as calling
{@link #getBundle(String, Locale, ClassLoader, Control)} passing a
default instance of {@link Control} unless another {@link Control} is
provided with the {@link ResourceBundleControlProvider} SPI. Refer to the
description of <a href=\"#modify_default_behavior\">modifying the default
behavior</a>.

<p><a name=\"default_behavior\">The following describes the default
behavior</a>.

<p><code>getBundle</code> uses the base name, the specified locale, and
the default locale (obtained from {@link java.util.Locale#getDefault()
Locale.getDefault}) to generate a sequence of <a
name=\"candidates\"><em>candidate bundle names</em></a>.  If the specified
locale's language, script, country, and variant are all empty strings,
then the base name is the only candidate bundle name.  Otherwise, a list
of candidate locales is generated from the attribute values of the
specified locale (language, script, country and variant) and appended to
the base name.  Typically, this will look like the following:

<pre>
    baseName + \"_\" + language + \"_\" + script + \"_\" + country + \"_\" + variant
    baseName + \"_\" + language + \"_\" + script + \"_\" + country
    baseName + \"_\" + language + \"_\" + script
    baseName + \"_\" + language + \"_\" + country + \"_\" + variant
    baseName + \"_\" + language + \"_\" + country
    baseName + \"_\" + language
</pre>

<p>Candidate bundle names where the final component is an empty string
are omitted, along with the underscore.  For example, if country is an
empty string, the second and the fifth candidate bundle names above
would be omitted.  Also, if script is an empty string, the candidate names
including script are omitted.  For example, a locale with language \"de\"
and variant \"JAVA\" will produce candidate names with base name
\"MyResource\" below.

<pre>
    MyResource_de__JAVA
    MyResource_de
</pre>

In the case that the variant contains one or more underscores ('_'), a
sequence of bundle names generated by truncating the last underscore and
the part following it is inserted after a candidate bundle name with the
original variant.  For example, for a locale with language \"en\", script
\"Latn, country \"US\" and variant \"WINDOWS_VISTA\", and bundle base name
\"MyResource\", the list of candidate bundle names below is generated:

<pre>
MyResource_en_Latn_US_WINDOWS_VISTA
MyResource_en_Latn_US_WINDOWS
MyResource_en_Latn_US
MyResource_en_Latn
MyResource_en_US_WINDOWS_VISTA
MyResource_en_US_WINDOWS
MyResource_en_US
MyResource_en
</pre>

<blockquote><b>Note:</b> For some <code>Locale</code>s, the list of
candidate bundle names contains extra names, or the order of bundle names
is slightly modified.  See the description of the default implementation
of {@link Control#getCandidateLocales(String, Locale)
getCandidateLocales} for details.</blockquote>

<p><code>getBundle</code> then iterates over the candidate bundle names
to find the first one for which it can <em>instantiate</em> an actual
resource bundle. It uses the default controls' {@link Control#getFormats
getFormats} method, which generates two bundle names for each generated
name, the first a class name and the second a properties file name. For
each candidate bundle name, it attempts to create a resource bundle:

<ul><li>First, it attempts to load a class using the generated class name.
If such a class can be found and loaded using the specified class
loader, is assignment compatible with ResourceBundle, is accessible from
ResourceBundle, and can be instantiated, <code>getBundle</code> creates a
new instance of this class and uses it as the <em>result resource
bundle</em>.

<li>Otherwise, <code>getBundle</code> attempts to locate a property
resource file using the generated properties file name.  It generates a
path name from the candidate bundle name by replacing all \".\" characters
with \"/\" and appending the string \".properties\".  It attempts to find a
\"resource\" with this name using {@link
java.lang.ClassLoader#getResource(java.lang.String)
ClassLoader.getResource}.  (Note that a \"resource\" in the sense of
<code>getResource</code> has nothing to do with the contents of a
resource bundle, it is just a container of data, such as a file.)  If it
finds a \"resource\", it attempts to create a new {@link
PropertyResourceBundle} instance from its contents.  If successful, this
instance becomes the <em>result resource bundle</em>.  </ul>

<p>This continues until a result resource bundle is instantiated or the
list of candidate bundle names is exhausted.  If no matching resource
bundle is found, the default control's {@link Control#getFallbackLocale
getFallbackLocale} method is called, which returns the current default
locale.  A new sequence of candidate locale names is generated using this
locale and and searched again, as above.

<p>If still no result bundle is found, the base name alone is looked up. If
this still fails, a <code>MissingResourceException</code> is thrown.

<p><a name=\"parent_chain\"> Once a result resource bundle has been found,
its <em>parent chain</em> is instantiated</a>.  If the result bundle already
has a parent (perhaps because it was returned from a cache) the chain is
complete.

<p>Otherwise, <code>getBundle</code> examines the remainder of the
candidate locale list that was used during the pass that generated the
result resource bundle.  (As before, candidate bundle names where the
final component is an empty string are omitted.)  When it comes to the
end of the candidate list, it tries the plain bundle name.  With each of the
candidate bundle names it attempts to instantiate a resource bundle (first
looking for a class and then a properties file, as described above).

<p>Whenever it succeeds, it calls the previously instantiated resource
bundle's {@link #setParent(java.util.ResourceBundle) setParent} method
with the new resource bundle.  This continues until the list of names
is exhausted or the current bundle already has a non-null parent.

<p>Once the parent chain is complete, the bundle is returned.

<p><b>Note:</b> <code>getBundle</code> caches instantiated resource
bundles and might return the same resource bundle instance multiple times.

<p><b>Note:</b>The <code>baseName</code> argument should be a fully
qualified class name. However, for compatibility with earlier versions,
Sun's Java SE Runtime Environments do not verify this, and so it is
possible to access <code>PropertyResourceBundle</code>s by specifying a
path name (using \"/\") instead of a fully qualified class name (using
\".\").

<p><a name=\"default_behavior_example\">
<strong>Example:</strong></a>
<p>
The following class and property files are provided:
<pre>
    MyResources.class
    MyResources.properties
    MyResources_fr.properties
    MyResources_fr_CH.class
    MyResources_fr_CH.properties
    MyResources_en.properties
    MyResources_es_ES.class
</pre>

The contents of all files are valid (that is, public non-abstract
subclasses of <code>ResourceBundle</code> for the \".class\" files,
syntactically correct \".properties\" files).  The default locale is
<code>Locale(\"en\", \"GB\")</code>.

<p>Calling <code>getBundle</code> with the locale arguments below will
instantiate resource bundles as follows:

<table summary=\"getBundle() locale to resource bundle mapping\">
<tr><td>Locale(\"fr\", \"CH\")</td><td>MyResources_fr_CH.class, parent MyResources_fr.properties, parent MyResources.class</td></tr>
<tr><td>Locale(\"fr\", \"FR\")</td><td>MyResources_fr.properties, parent MyResources.class</td></tr>
<tr><td>Locale(\"de\", \"DE\")</td><td>MyResources_en.properties, parent MyResources.class</td></tr>
<tr><td>Locale(\"en\", \"US\")</td><td>MyResources_en.properties, parent MyResources.class</td></tr>
<tr><td>Locale(\"es\", \"ES\")</td><td>MyResources_es_ES.class, parent MyResources.class</td></tr>
</table>

<p>The file MyResources_fr_CH.properties is never used because it is
hidden by the MyResources_fr_CH.class. Likewise, MyResources.properties
is also hidden by MyResources.class.

@param baseName the base name of the resource bundle, a fully qualified class name
@param locale the locale for which a resource bundle is desired
@param loader the class loader from which to load the resource bundle
@return a resource bundle for the given base name and locale
@exception java.lang.NullPointerException
       if <code>baseName</code>, <code>locale</code>, or <code>loader</code> is <code>null</code>
@exception MissingResourceException
       if no resource bundle for the specified base name can be found
@since 1.2
"
      end

      operation 1734786 "getBundle"
	class_operation public return_type class_ref 249858 // ResourceBundle
	nparams 4
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "targetLocale" type class_ref 312962 // Locale
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a resource bundle using the specified base name, target
locale, class loader and control. Unlike the {@linkplain
#getBundle(String, Locale, ClassLoader) <code>getBundle</code>
factory methods with no <code>control</code> argument}, the given
<code>control</code> specifies how to locate and instantiate resource
bundles. Conceptually, the bundle loading process with the given
<code>control</code> is performed in the following steps.

<ol>
<li>This factory method looks up the resource bundle in the cache for
the specified <code>baseName</code>, <code>targetLocale</code> and
<code>loader</code>.  If the requested resource bundle instance is
found in the cache and the time-to-live periods of the instance and
all of its parent instances have not expired, the instance is returned
to the caller. Otherwise, this factory method proceeds with the
loading process below.</li>

<li>The {@link ResourceBundle.Control#getFormats(String)
control.getFormats} method is called to get resource bundle formats
to produce bundle or resource names. The strings
<code>\"java.class\"</code> and <code>\"java.properties\"</code>
designate class-based and {@linkplain PropertyResourceBundle
property}-based resource bundles, respectively. Other strings
starting with <code>\"java.\"</code> are reserved for future extensions
and must not be used for application-defined formats. Other strings
designate application-defined formats.</li>

<li>The {@link ResourceBundle.Control#getCandidateLocales(String,
Locale) control.getCandidateLocales} method is called with the target
locale to get a list of <em>candidate <code>Locale</code>s</em> for
which resource bundles are searched.</li>

<li>The {@link ResourceBundle.Control#newBundle(String, Locale,
String, ClassLoader, boolean) control.newBundle} method is called to
instantiate a <code>ResourceBundle</code> for the base bundle name, a
candidate locale, and a format. (Refer to the note on the cache
lookup below.) This step is iterated over all combinations of the
candidate locales and formats until the <code>newBundle</code> method
returns a <code>ResourceBundle</code> instance or the iteration has
used up all the combinations. For example, if the candidate locales
are <code>Locale(\"de\", \"DE\")</code>, <code>Locale(\"de\")</code> and
<code>Locale(\"\")</code> and the formats are <code>\"java.class\"</code>
and <code>\"java.properties\"</code>, then the following is the
sequence of locale-format combinations to be used to call
<code>control.newBundle</code>.

<table style=\"width: 50%; text-align: left; margin-left: 40px;\"
 border=\"0\" cellpadding=\"2\" cellspacing=\"2\" summary=\"locale-format combinations for newBundle\">
<tbody>
<tr>
<td
style=\"vertical-align: top; text-align: left; font-weight: bold; width: 50%;\"><code>Locale</code><br>
</td>
<td
style=\"vertical-align: top; text-align: left; font-weight: bold; width: 50%;\"><code>format</code><br>
</td>
</tr>
<tr>
<td style=\"vertical-align: top; width: 50%;\"><code>Locale(\"de\", \"DE\")</code><br>
</td>
<td style=\"vertical-align: top; width: 50%;\"><code>java.class</code><br>
</td>
</tr>
<tr>
<td style=\"vertical-align: top; width: 50%;\"><code>Locale(\"de\", \"DE\")</code></td>
<td style=\"vertical-align: top; width: 50%;\"><code>java.properties</code><br>
</td>
</tr>
<tr>
<td style=\"vertical-align: top; width: 50%;\"><code>Locale(\"de\")</code></td>
<td style=\"vertical-align: top; width: 50%;\"><code>java.class</code></td>
</tr>
<tr>
<td style=\"vertical-align: top; width: 50%;\"><code>Locale(\"de\")</code></td>
<td style=\"vertical-align: top; width: 50%;\"><code>java.properties</code></td>
</tr>
<tr>
<td style=\"vertical-align: top; width: 50%;\"><code>Locale(\"\")</code><br>
</td>
<td style=\"vertical-align: top; width: 50%;\"><code>java.class</code></td>
</tr>
<tr>
<td style=\"vertical-align: top; width: 50%;\"><code>Locale(\"\")</code></td>
<td style=\"vertical-align: top; width: 50%;\"><code>java.properties</code></td>
</tr>
</tbody>
</table>
</li>

<li>If the previous step has found no resource bundle, proceed to
Step 6. If a bundle has been found that is a base bundle (a bundle
for <code>Locale(\"\")</code>), and the candidate locale list only contained
<code>Locale(\"\")</code>, return the bundle to the caller. If a bundle
has been found that is a base bundle, but the candidate locale list
contained locales other than Locale(\"\"), put the bundle on hold and
proceed to Step 6. If a bundle has been found that is not a base
bundle, proceed to Step 7.</li>

<li>The {@link ResourceBundle.Control#getFallbackLocale(String,
Locale) control.getFallbackLocale} method is called to get a fallback
locale (alternative to the current target locale) to try further
finding a resource bundle. If the method returns a non-null locale,
it becomes the next target locale and the loading process starts over
from Step 3. Otherwise, if a base bundle was found and put on hold in
a previous Step 5, it is returned to the caller now. Otherwise, a
MissingResourceException is thrown.</li>

<li>At this point, we have found a resource bundle that's not the
base bundle. If this bundle set its parent during its instantiation,
it is returned to the caller. Otherwise, its <a
href=\"./ResourceBundle.html#parent_chain\">parent chain</a> is
instantiated based on the list of candidate locales from which it was
found. Finally, the bundle is returned to the caller.</li>
</ol>

<p>During the resource bundle loading process above, this factory
method looks up the cache before calling the {@link
Control#newBundle(String, Locale, String, ClassLoader, boolean)
control.newBundle} method.  If the time-to-live period of the
resource bundle found in the cache has expired, the factory method
calls the {@link ResourceBundle.Control#needsReload(String, Locale,
String, ClassLoader, ResourceBundle, long) control.needsReload}
method to determine whether the resource bundle needs to be reloaded.
If reloading is required, the factory method calls
<code>control.newBundle</code> to reload the resource bundle.  If
<code>control.newBundle</code> returns <code>null</code>, the factory
method puts a dummy resource bundle in the cache as a mark of
nonexistent resource bundles in order to avoid lookup overhead for
subsequent requests. Such dummy resource bundles are under the same
expiration control as specified by <code>control</code>.

<p>All resource bundles loaded are cached by default. Refer to
{@link Control#getTimeToLive(String,Locale)
control.getTimeToLive} for details.

<p>The following is an example of the bundle loading process with the
default <code>ResourceBundle.Control</code> implementation.

<p>Conditions:
<ul>
<li>Base bundle name: <code>foo.bar.Messages</code>
<li>Requested <code>Locale</code>: {@link Locale#ITALY}</li>
<li>Default <code>Locale</code>: {@link Locale#FRENCH}</li>
<li>Available resource bundles:
<code>foo/bar/Messages_fr.properties</code> and
<code>foo/bar/Messages.properties</code></li>
</ul>

<p>First, <code>getBundle</code> tries loading a resource bundle in
the following sequence.

<ul>
<li>class <code>foo.bar.Messages_it_IT</code>
<li>file <code>foo/bar/Messages_it_IT.properties</code>
<li>class <code>foo.bar.Messages_it</code></li>
<li>file <code>foo/bar/Messages_it.properties</code></li>
<li>class <code>foo.bar.Messages</code></li>
<li>file <code>foo/bar/Messages.properties</code></li>
</ul>

<p>At this point, <code>getBundle</code> finds
<code>foo/bar/Messages.properties</code>, which is put on hold
because it's the base bundle.  <code>getBundle</code> calls {@link
Control#getFallbackLocale(String, Locale)
control.getFallbackLocale(\"foo.bar.Messages\", Locale.ITALY)} which
returns <code>Locale.FRENCH</code>. Next, <code>getBundle</code>
tries loading a bundle in the following sequence.

<ul>
<li>class <code>foo.bar.Messages_fr</code></li>
<li>file <code>foo/bar/Messages_fr.properties</code></li>
<li>class <code>foo.bar.Messages</code></li>
<li>file <code>foo/bar/Messages.properties</code></li>
</ul>

<p><code>getBundle</code> finds
<code>foo/bar/Messages_fr.properties</code> and creates a
<code>ResourceBundle</code> instance. Then, <code>getBundle</code>
sets up its parent chain from the list of the candidate locales.  Only
<code>foo/bar/Messages.properties</code> is found in the list and
<code>getBundle</code> creates a <code>ResourceBundle</code> instance
that becomes the parent of the instance for
<code>foo/bar/Messages_fr.properties</code>.

@param baseName
       the base name of the resource bundle, a fully qualified
       class name
@param targetLocale
       the locale for which a resource bundle is desired
@param loader
       the class loader from which to load the resource bundle
@param control
       the control which gives information for the resource
       bundle loading process
@return a resource bundle for the given base name and locale
@exception NullPointerException
       if <code>baseName</code>, <code>targetLocale</code>,
       <code>loader</code>, or <code>control</code> is
       <code>null</code>
@exception MissingResourceException
       if no resource bundle for the specified base name can be found
@exception IllegalArgumentException
       if the given <code>control</code> doesn't perform properly
       (e.g., <code>control.getCandidateLocales</code> returns null.)
       Note that validation of <code>control</code> is performed as
       needed.
@since 1.6
"
      end

      operation 1734914 "getDefaultControl"
	class_operation private return_type class_ref 321154 // Control
	nparams 1
	  param inout name "baseName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1735042 "getBundleImpl"
	class_operation private return_type class_ref 249858 // ResourceBundle
	nparams 4
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1735170 "checkList"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "a" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the given <code>List</code> is not null, not empty,
not having null in its elements.
"
      end

      operation 1735298 "findBundle"
	class_operation private return_type class_ref 249858 // ResourceBundle
	nparams 6
	  param inout name "cacheKey" type class_ref 318850 // CacheKey
	  param inout name "candidateLocales" type class_ref 175362 // List
	  param inout name "formats" type class_ref 175362 // List
	  param in name "index" explicit_type "int"
	  param inout name "control" type class_ref 321154 // Control
	  param inout name "baseBundle" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Locale> ${p1}, ${t2}<String> ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1735426 "loadBundle"
	class_operation private return_type class_ref 249858 // ResourceBundle
	nparams 4
	  param inout name "cacheKey" type class_ref 318850 // CacheKey
	  param inout name "formats" type class_ref 175362 // List
	  param inout name "control" type class_ref 321154 // Control
	  param inout name "reload" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1735554 "isValidBundle"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "bundle" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1735682 "hasValidParentChain"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "bundle" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether any of resource bundles in the parent chain,
including the leaf, have expired.
"
      end

      operation 1735810 "throwMissingResourceException"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "baseName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throw a MissingResourceException with proper message
"
      end

      operation 1735938 "findBundleInCache"
	class_operation private return_type class_ref 249858 // ResourceBundle
	nparams 2
	  param inout name "cacheKey" type class_ref 318850 // CacheKey
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a bundle in the cache. Any expired bundles are marked as
`expired' and removed from the cache upon return.

@param cacheKey the key to look up the cache
@param control the Control to be used for the expiration control
@return the cached bundle, or null if the bundle is not found in the
cache or its parent has expired. <code>bundle.expire</code> is true
upon return if the bundle in the cache has expired.
"
      end

      operation 1736066 "putBundleInCache"
	class_operation private return_type class_ref 249858 // ResourceBundle
	nparams 3
	  param inout name "cacheKey" type class_ref 318850 // CacheKey
	  param inout name "bundle" type class_ref 249858 // ResourceBundle
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put a new bundle in the cache.

@param cacheKey the key for the resource bundle
@param bundle the resource bundle to be put in the cache
@return the ResourceBundle for the cacheKey; if someone has put
the bundle before this call, the one found in the cache is
returned.
"
      end

      operation 1736194 "setExpirationTime"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "cacheKey" type class_ref 318850 // CacheKey
	  param inout name "control" type class_ref 321154 // Control
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1736322 "clearCache"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Removes all resource bundles from the cache that have been loaded
using the caller's class loader.

@since 1.6
@see ResourceBundle.Control#getTimeToLive(String,Locale)
"
      end

      operation 1736450 "clearCache"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all resource bundles from the cache that have been loaded
using the given class loader.

@param loader the class loader
@exception NullPointerException if <code>loader</code> is null
@since 1.6
@see ResourceBundle.Control#getTimeToLive(String,Locale)
"
      end

      operation 1736578 "handleGetObject"
	abstract protected return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an object for the given key from this resource bundle.
Returns null if this resource bundle does not contain an
object for the given key.

@param key the key for the desired object
@exception NullPointerException if <code>key</code> is <code>null</code>
@return the object for the given key, or null
"
      end

      operation 1736706 "getKeys"
	abstract public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the keys.

@return an <code>Enumeration</code> of the keys contained in
        this <code>ResourceBundle</code> and its parent bundles.
"
      end

      operation 1736834 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the given <code>key</code> is contained in
this <code>ResourceBundle</code> or its parent bundles.

@param key
       the resource <code>key</code>
@return <code>true</code> if the given <code>key</code> is
       contained in this <code>ResourceBundle</code> or its
       parent bundles; <code>false</code> otherwise.
@exception NullPointerException
        if <code>key</code> is <code>null</code>
@since 1.6
"
      end

      operation 1736962 "keySet"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Set</code> of all keys contained in this
<code>ResourceBundle</code> and its parent bundles.

@return a <code>Set</code> of all keys contained in this
        <code>ResourceBundle</code> and its parent bundles.
@since 1.6
"
      end

      operation 1737090 "handleKeySet"
	protected return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Set</code> of the keys contained <em>only</em>
in this <code>ResourceBundle</code>.

<p>The default implementation returns a <code>Set</code> of the
keys returned by the {@link #getKeys() getKeys} method except
for the ones for which the {@link #handleGetObject(String)
handleGetObject} method returns <code>null</code>. Once the
<code>Set</code> has been created, the value is kept in this
<code>ResourceBundle</code> in order to avoid producing the
same <code>Set</code> in subsequent calls. Subclasses can
override this method for faster handling.

@return a <code>Set</code> of the keys contained only in this
       <code>ResourceBundle</code>
@since 1.6
"
      end

      class 321666 "SingleFormatControl"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 543618 // <generalisation>
	  relation 543618 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 543618 // <generalisation>
	    b parent class_ref 321154 // Control
	end

	classrelation 543746 // PROPERTIES_ONLY (<unidirectional association>)
	  relation 543746 --->
	    a role_name "PROPERTIES_ONLY" init_value " new SingleFormatControl(FORMAT_PROPERTIES)" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 543746 // PROPERTIES_ONLY (<unidirectional association>)
	    b parent class_ref 321154 // Control
	end

	classrelation 543874 // CLASS_ONLY (<unidirectional association>)
	  relation 543874 --->
	    a role_name "CLASS_ONLY" init_value " new SingleFormatControl(FORMAT_CLASS)" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 543874 // CLASS_ONLY (<unidirectional association>)
	    b parent class_ref 321154 // Control
	end

	classrelation 544002 // formats (<unidirectional association>)
	  relation 544002 --->
	    a role_name "formats" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 544002 // formats (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 1739010 "SingleFormatControl"
	  protected explicit_return_type ""
	  nparams 1
	    param inout name "formats" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1739138 "getFormats"
	  public return_type class_ref 175362 // List
	  nparams 1
	    param inout name "baseName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 321794 "NoFallbackControl"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 544130 // <generalisation>
	  relation 544130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 544130 // <generalisation>
	    b parent class_ref 321666 // SingleFormatControl
	end

	classrelation 544258 // NO_FALLBACK (<unidirectional association>)
	  relation 544258 --->
	    a role_name "NO_FALLBACK" init_value " new NoFallbackControl(FORMAT_DEFAULT)" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 544258 // NO_FALLBACK (<unidirectional association>)
	    b parent class_ref 321154 // Control
	end

	classrelation 544386 // PROPERTIES_ONLY_NO_FALLBACK (<unidirectional association>)
	  relation 544386 --->
	    a role_name "PROPERTIES_ONLY_NO_FALLBACK" init_value " new NoFallbackControl(FORMAT_PROPERTIES)" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 544386 // PROPERTIES_ONLY_NO_FALLBACK (<unidirectional association>)
	    b parent class_ref 321154 // Control
	end

	classrelation 544514 // CLASS_ONLY_NO_FALLBACK (<unidirectional association>)
	  relation 544514 --->
	    a role_name "CLASS_ONLY_NO_FALLBACK" init_value " new NoFallbackControl(FORMAT_CLASS)" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 544514 // CLASS_ONLY_NO_FALLBACK (<unidirectional association>)
	    b parent class_ref 321154 // Control
	end

	operation 1739266 "NoFallbackControl"
	  protected explicit_return_type ""
	  nparams 1
	    param inout name "formats" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1739394 "getFallbackLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 2
	    param inout name "baseName" type class_ref 128130 // String
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 255618 "AbstractSet"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 184066 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 192258 // Set
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a skeletal implementation of the <tt>Set</tt>
interface to minimize the effort required to implement this
interface. <p>

The process of implementing a set by extending this class is identical
to that of implementing a Collection by extending AbstractCollection,
except that all of the methods and constructors in subclasses of this
class must obey the additional constraints imposed by the <tt>Set</tt>
interface (for instance, the add method must not permit addition of
multiple instances of an object to a set).<p>

Note that this class does not override any of the implementations from
the <tt>AbstractCollection</tt> class.  It merely adds implementations
for <tt>equals</tt> and <tt>hashCode</tt>.<p>

This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements maintained by this set

@author  Josh Bloch
@author  Neal Gafter
@see Collection
@see AbstractCollection
@see Set
@since 1.2
"
      classrelation 365058 // <realization>
	relation 365058 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 365058 // <realization>
	  b parent class_ref 184066 // AbstractCollection
      end

      classrelation 365186 // <realization>
	relation 365186 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 365186 // <realization>
	  b parent class_ref 192258 // Set
      end

      operation 1287938 "AbstractSet"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 1288066 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this set for equality.  Returns
<tt>true</tt> if the given object is also a set, the two sets have
the same size, and every member of the given set is contained in
this set.  This ensures that the <tt>equals</tt> method works
properly across different implementations of the <tt>Set</tt>
interface.<p>

This implementation first checks if the specified object is this
set; if so it returns <tt>true</tt>.  Then, it checks if the
specified object is a set whose size is identical to the size of
this set; if not, it returns false.  If so, it returns
<tt>containsAll((Collection) o)</tt>.

@param o object to be compared for equality with this set
@return <tt>true</tt> if the specified object is equal to this set
"
      end

      operation 1288194 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this set.  The hash code of a set is
defined to be the sum of the hash codes of the elements in the set,
where the hash code of a <tt>null</tt> element is defined to be zero.
This ensures that <tt>s1.equals(s2)</tt> implies that
<tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt>
and <tt>s2</tt>, as required by the general contract of
{@link Object#hashCode}.

<p>This implementation iterates over the set, calling the
<tt>hashCode</tt> method on each element in the set, and adding up
the results.

@return the hash code value for this set
@see Object#equals(Object)
@see Set#equals(Object)
"
      end

      operation 1288322 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this set all of its elements that are contained in the
specified collection (optional operation).  If the specified
collection is also a set, this operation effectively modifies this
set so that its value is the <i>asymmetric set difference</i> of
the two sets.

<p>This implementation determines which is the smaller of this set
and the specified collection, by invoking the <tt>size</tt>
method on each.  If this set has fewer elements, then the
implementation iterates over this set, checking each element
returned by the iterator in turn to see if it is contained in
the specified collection.  If it is so contained, it is removed
from this set with the iterator's <tt>remove</tt> method.  If
the specified collection has fewer elements, then the
implementation iterates over the specified collection, removing
from this set each element returned by the iterator, using this
set's <tt>remove</tt> method.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the iterator returned by the
<tt>iterator</tt> method does not implement the <tt>remove</tt> method.

@param  c collection containing elements to be removed from this set
@return <tt>true</tt> if this set changed as a result of the call
@throws UnsupportedOperationException if the <tt>removeAll</tt> operation
        is not supported by this set
@throws ClassCastException if the class of an element of this set
        is incompatible with the specified collection
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if this set contains a null element and the
        specified collection does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>),
        or if the specified collection is null
@see #remove(Object)
@see #contains(Object)
"
      end
    end

    class 275970 "Dictionary"
      abstract visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Dictionary</code> class is the abstract parent of any
class, such as <code>Hashtable</code>, which maps keys to values.
Every key and every value is an object. In any one <tt>Dictionary</tt>
object, every key is associated with at most one value. Given a
<tt>Dictionary</tt> and a key, the associated element can be looked up.
Any non-<code>null</code> object can be used as a key and as a value.
<p>
As a rule, the <code>equals</code> method should be used by
implementations of this class to decide if two keys are the same.
<p>
<strong>NOTE: This class is obsolete.  New implementations should
implement the Map interface, rather than extending this class.</strong>

@author  unascribed
@see     java.util.Map
@see     java.lang.Object#equals(java.lang.Object)
@see     java.lang.Object#hashCode()
@see     java.util.Hashtable
@since   JDK1.0
"
      operation 1453698 "Dictionary"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 1453826 "size"
	abstract cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of entries (distinct keys) in this dictionary.

@return  the number of keys in this dictionary.
"
      end

      operation 1453954 "isEmpty"
	abstract cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this dictionary maps no keys to value. The general contract
for the <tt>isEmpty</tt> method is that the result is true if and only
if this dictionary contains no entries.

@return  <code>true</code> if this dictionary maps no keys to values;
         <code>false</code> otherwise.
"
      end

      operation 1454082 "keys"
	abstract cpp_inline public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the keys in this dictionary. The general
contract for the keys method is that an <tt>Enumeration</tt> object
is returned that will generate all the keys for which this dictionary
contains entries.

@return  an enumeration of the keys in this dictionary.
@see     java.util.Dictionary#elements()
@see     java.util.Enumeration
"
      end

      operation 1454210 "elements"
	abstract cpp_inline public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the values in this dictionary. The general
contract for the <tt>elements</tt> method is that an
<tt>Enumeration</tt> is returned that will generate all the elements
contained in entries in this dictionary.

@return  an enumeration of the values in this dictionary.
@see     java.util.Dictionary#keys()
@see     java.util.Enumeration
"
      end

      operation 1454338 "get"
	abstract cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the key is mapped in this dictionary.
The general contract for the <tt>isEmpty</tt> method is that if this
dictionary contains an entry for the specified key, the associated
value is returned; otherwise, <tt>null</tt> is returned.

@return  the value to which the key is mapped in this dictionary;
@param   key   a key in this dictionary.
         <code>null</code> if the key is not mapped to any value in
         this dictionary.
@exception NullPointerException if the <tt>key</tt> is <tt>null</tt>.
@see     java.util.Dictionary#put(java.lang.Object, java.lang.Object)
"
      end

      operation 1454466 "put"
	abstract cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps the specified <code>key</code> to the specified
<code>value</code> in this dictionary. Neither the key nor the
value can be <code>null</code>.
<p>
If this dictionary already contains an entry for the specified
<tt>key</tt>, the value already in this dictionary for that
<tt>key</tt> is returned, after modifying the entry to contain the
 new element. <p>If this dictionary does not already have an entry
 for the specified <tt>key</tt>, an entry is created for the
 specified <tt>key</tt> and <tt>value</tt>, and <tt>null</tt> is
 returned.
<p>
The <code>value</code> can be retrieved by calling the
<code>get</code> method with a <code>key</code> that is equal to
the original <code>key</code>.

@param      key     the hashtable key.
@param      value   the value.
@return     the previous value to which the <code>key</code> was mapped
            in this dictionary, or <code>null</code> if the key did not
            have a previous mapping.
@exception  NullPointerException  if the <code>key</code> or
              <code>value</code> is <code>null</code>.
@see        java.lang.Object#equals(java.lang.Object)
@see        java.util.Dictionary#get(java.lang.Object)
"
      end

      operation 1454594 "remove"
	abstract cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <code>key</code> (and its corresponding
<code>value</code>) from this dictionary. This method does nothing
if the <code>key</code> is not in this dictionary.

@param   key   the key that needs to be removed.
@return  the value to which the <code>key</code> had been mapped in this
         dictionary, or <code>null</code> if the key did not have a
         mapping.
@exception NullPointerException if <tt>key</tt> is <tt>null</tt>.
"
      end
    end

    class 312962 "Locale"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Locale</code> object represents a specific geographical, political,
or cultural region. An operation that requires a <code>Locale</code> to perform
its task is called <em>locale-sensitive</em> and uses the <code>Locale</code>
to tailor information for the user. For example, displaying a number
is a locale-sensitive operation&mdash; the number should be formatted
according to the customs and conventions of the user's native country,
region, or culture.

<p> The {@code Locale} class implements IETF BCP 47 which is composed of
<a href=\"http://tools.ietf.org/html/rfc4647\">RFC 4647 \"Matching of Language
Tags\"</a> and <a href=\"http://tools.ietf.org/html/rfc5646\">RFC 5646 \"Tags
for Identifying Languages\"</a> with support for the LDML (UTS#35, \"Unicode
Locale Data Markup Language\") BCP 47-compatible extensions for locale data
exchange.

<p> A <code>Locale</code> object logically consists of the fields
described below.

<dl>
  <dt><a name=\"def_language\"><b>language</b></a></dt>

  <dd>ISO 639 alpha-2 or alpha-3 language code, or registered
  language subtags up to 8 alpha letters (for future enhancements).
  When a language has both an alpha-2 code and an alpha-3 code, the
  alpha-2 code must be used.  You can find a full list of valid
  language codes in the IANA Language Subtag Registry (search for
  \"Type: language\").  The language field is case insensitive, but
  <code>Locale</code> always canonicalizes to lower case.</dd>

  <dd>Well-formed language values have the form
  <code>[a-zA-Z]{2,8}</code>.  Note that this is not the the full
  BCP47 language production, since it excludes extlang.  They are
  not needed since modern three-letter language codes replace
  them.</dd>

  <dd>Example: \"en\" (English), \"ja\" (Japanese), \"kok\" (Konkani)</dd>

  <dt><a name=\"def_script\"><b>script</b></a></dt>

  <dd>ISO 15924 alpha-4 script code.  You can find a full list of
  valid script codes in the IANA Language Subtag Registry (search
  for \"Type: script\").  The script field is case insensitive, but
  <code>Locale</code> always canonicalizes to title case (the first
  letter is upper case and the rest of the letters are lower
  case).</dd>

  <dd>Well-formed script values have the form
  <code>[a-zA-Z]{4}</code></dd>

  <dd>Example: \"Latn\" (Latin), \"Cyrl\" (Cyrillic)</dd>

  <dt><a name=\"def_region\"><b>country (region)</b></a></dt>

  <dd>ISO 3166 alpha-2 country code or UN M.49 numeric-3 area code.
  You can find a full list of valid country and region codes in the
  IANA Language Subtag Registry (search for \"Type: region\").  The
  country (region) field is case insensitive, but
  <code>Locale</code> always canonicalizes to upper case.</dd>

  <dd>Well-formed country/region values have
  the form <code>[a-zA-Z]{2} | [0-9]{3}</code></dd>

  <dd>Example: \"US\" (United States), \"FR\" (France), \"029\"
  (Caribbean)</dd>

  <dt><a name=\"def_variant\"><b>variant</b></a></dt>

  <dd>Any arbitrary value used to indicate a variation of a
  <code>Locale</code>.  Where there are two or more variant values
  each indicating its own semantics, these values should be ordered
  by importance, with most important first, separated by
  underscore('_').  The variant field is case sensitive.</dd>

  <dd>Note: IETF BCP 47 places syntactic restrictions on variant
  subtags.  Also BCP 47 subtags are strictly used to indicate
  additional variations that define a language or its dialects that
  are not covered by any combinations of language, script and
  region subtags.  You can find a full list of valid variant codes
  in the IANA Language Subtag Registry (search for \"Type: variant\").

  <p>However, the variant field in <code>Locale</code> has
  historically been used for any kind of variation, not just
  language variations.  For example, some supported variants
  available in Java SE Runtime Environments indicate alternative
  cultural behaviors such as calendar type or number script.  In
  BCP 47 this kind of information, which does not identify the
  language, is supported by extension subtags or private use
  subtags.</dd>

  <dd>Well-formed variant values have the form <code>SUBTAG
  (('_'|'-') SUBTAG)*</code> where <code>SUBTAG =
  [0-9][0-9a-zA-Z]{3} | [0-9a-zA-Z]{5,8}</code>. (Note: BCP 47 only
  uses hyphen ('-') as a delimiter, this is more lenient).</dd>

  <dd>Example: \"polyton\" (Polytonic Greek), \"POSIX\"</dd>

  <dt><a name=\"def_extensions\"><b>extensions</b></a></dt>

  <dd>A map from single character keys to string values, indicating
  extensions apart from language identification.  The extensions in
  <code>Locale</code> implement the semantics and syntax of BCP 47
  extension subtags and private use subtags. The extensions are
  case insensitive, but <code>Locale</code> canonicalizes all
  extension keys and values to lower case. Note that extensions
  cannot have empty values.</dd>

  <dd>Well-formed keys are single characters from the set
  <code>[0-9a-zA-Z]</code>.  Well-formed values have the form
  <code>SUBTAG ('-' SUBTAG)*</code> where for the key 'x'
  <code>SUBTAG = [0-9a-zA-Z]{1,8}</code> and for other keys
  <code>SUBTAG = [0-9a-zA-Z]{2,8}</code> (that is, 'x' allows
  single-character subtags).</dd>

  <dd>Example: key=\"u\"/value=\"ca-japanese\" (Japanese Calendar),
  key=\"x\"/value=\"java-1-7\"</dd>
</dl>

<b>Note:</b> Although BCP 47 requires field values to be registered
in the IANA Language Subtag Registry, the <code>Locale</code> class
does not provide any validation features.  The <code>Builder</code>
only checks if an individual field satisfies the syntactic
requirement (is well-formed), but does not validate the value
itself.  See {@link Builder} for details.

<h3><a name=\"def_locale_extension\">Unicode locale/language extension</a></h3>

<p>UTS#35, \"Unicode Locale Data Markup Language\" defines optional
attributes and keywords to override or refine the default behavior
associated with a locale.  A keyword is represented by a pair of
key and type.  For example, \"nu-thai\" indicates that Thai local
digits (value:\"thai\") should be used for formatting numbers
(key:\"nu\").

<p>The keywords are mapped to a BCP 47 extension value using the
extension key 'u' ({@link #UNICODE_LOCALE_EXTENSION}).  The above
example, \"nu-thai\", becomes the extension \"u-nu-thai\".code

<p>Thus, when a <code>Locale</code> object contains Unicode locale
attributes and keywords,
<code>getExtension(UNICODE_LOCALE_EXTENSION)</code> will return a
String representing this information, for example, \"nu-thai\".  The
<code>Locale</code> class also provides {@link
#getUnicodeLocaleAttributes}, {@link #getUnicodeLocaleKeys}, and
{@link #getUnicodeLocaleType} which allow you to access Unicode
locale attributes and key/type pairs directly.  When represented as
a string, the Unicode Locale Extension lists attributes
alphabetically, followed by key/type sequences with keys listed
alphabetically (the order of subtags comprising a key's type is
fixed when the type is defined)

<p>A well-formed locale key has the form
<code>[0-9a-zA-Z]{2}</code>.  A well-formed locale type has the
form <code>\"\" | [0-9a-zA-Z]{3,8} ('-' [0-9a-zA-Z]{3,8})*</code> (it
can be empty, or a series of subtags 3-8 alphanums in length).  A
well-formed locale attribute has the form
<code>[0-9a-zA-Z]{3,8}</code> (it is a single subtag with the same
form as a locale type subtag).

<p>The Unicode locale extension specifies optional behavior in
locale-sensitive services.  Although the LDML specification defines
various keys and values, actual locale-sensitive service
implementations in a Java Runtime Environment might not support any
particular Unicode locale attributes or key/type pairs.

<h4>Creating a Locale</h4>

<p>There are several different ways to create a <code>Locale</code>
object.

<h5>Builder</h5>

<p>Using {@link Builder} you can construct a <code>Locale</code> object
that conforms to BCP 47 syntax.

<h5>Constructors</h5>

<p>The <code>Locale</code> class provides three constructors:
<blockquote>
<pre>
    {@link #Locale(String language)}
    {@link #Locale(String language, String country)}
    {@link #Locale(String language, String country, String variant)}
</pre>
</blockquote>
These constructors allow you to create a <code>Locale</code> object
with language, country and variant, but you cannot specify
script or extensions.

<h5>Factory Methods</h5>

<p>The method {@link #forLanguageTag} creates a <code>Locale</code>
object for a well-formed BCP 47 language tag.

<h5>Locale Constants</h5>

<p>The <code>Locale</code> class provides a number of convenient constants
that you can use to create <code>Locale</code> objects for commonly used
locales. For example, the following creates a <code>Locale</code> object
for the United States:
<blockquote>
<pre>
    Locale.US
</pre>
</blockquote>

<h4><a name=\"LocaleMatching\">Locale Matching</a></h4>

<p>If an application or a system is internationalized and provides localized
resources for multiple locales, it sometimes needs to find one or more
locales (or language tags) which meet each user's specific preferences. Note
that a term \"language tag\" is used interchangeably with \"locale\" in this
locale matching documentation.

<p>In order to do matching a user's preferred locales to a set of language
tags, <a href=\"http://tools.ietf.org/html/rfc4647\">RFC 4647 Matching of
Language Tags</a> defines two mechanisms: filtering and lookup.
<em>Filtering</em> is used to get all matching locales, whereas
<em>lookup</em> is to choose the best matching locale.
Matching is done case-insensitively. These matching mechanisms are described
in the following sections.

<p>A user's preference is called a <em>Language Priority List</em> and is
expressed as a list of language ranges. There are syntactically two types of
language ranges: basic and extended. See
{@link Locale.LanguageRange Locale.LanguageRange} for details.

<h5>Filtering</h5>

<p>The filtering operation returns all matching language tags. It is defined
in RFC 4647 as follows:
\"In filtering, each language range represents the least specific language
tag (that is, the language tag with fewest number of subtags) that is an
acceptable match. All of the language tags in the matching set of tags will
have an equal or greater number of subtags than the language range. Every
non-wildcard subtag in the language range will appear in every one of the
matching language tags.\"

<p>There are two types of filtering: filtering for basic language ranges
(called \"basic filtering\") and filtering for extended language ranges
(called \"extended filtering\"). They may return different results by what
kind of language ranges are included in the given Language Priority List.
{@link Locale.FilteringMode} is a parameter to specify how filtering should
be done.

<h5>Lookup</h5>

<p>The lookup operation returns the best matching language tags. It is
defined in RFC 4647 as follows:
\"By contrast with filtering, each language range represents the most
specific tag that is an acceptable match.  The first matching tag found,
according to the user's priority, is considered the closest match and is the
item returned.\"

<p>For example, if a Language Priority List consists of two language ranges,
{@code \"zh-Hant-TW\"} and {@code \"en-US\"}, in prioritized order, lookup
method progressively searches the language tags below in order to find the
best matching language tag.
<blockquote>
<pre>
   1. zh-Hant-TW
   2. zh-Hant
   3. zh
   4. en-US
   5. en
</pre>
</blockquote>
If there is a language tag which matches completely to a language range
above, the language tag is returned.

<p>{@code \"*\"} is the special language range, and it is ignored in lookup.

<p>If multiple language tags match as a result of the subtag {@code '*'}
included in a language range, the first matching language tag returned by
an {@link Iterator} over a {@link Collection} of language tags is treated as
the best matching one.

<h4>Use of Locale</h4>

<p>Once you've created a <code>Locale</code> you can query it for information
about itself. Use <code>getCountry</code> to get the country (or region)
code and <code>getLanguage</code> to get the language code.
You can use <code>getDisplayCountry</code> to get the
name of the country suitable for displaying to the user. Similarly,
you can use <code>getDisplayLanguage</code> to get the name of
the language suitable for displaying to the user. Interestingly,
the <code>getDisplayXXX</code> methods are themselves locale-sensitive
and have two versions: one that uses the default
{@link Locale.Category#DISPLAY DISPLAY} locale and one
that uses the locale specified as an argument.

<p>The Java Platform provides a number of classes that perform locale-sensitive
operations. For example, the <code>NumberFormat</code> class formats
numbers, currency, and percentages in a locale-sensitive manner. Classes
such as <code>NumberFormat</code> have several convenience methods
for creating a default object of that type. For example, the
<code>NumberFormat</code> class provides these three convenience methods
for creating a default <code>NumberFormat</code> object:
<blockquote>
<pre>
    NumberFormat.getInstance()
    NumberFormat.getCurrencyInstance()
    NumberFormat.getPercentInstance()
</pre>
</blockquote>
Each of these methods has two variants; one with an explicit locale
and one without; the latter uses the default
{@link Locale.Category#FORMAT FORMAT} locale:
<blockquote>
<pre>
    NumberFormat.getInstance(myLocale)
    NumberFormat.getCurrencyInstance(myLocale)
    NumberFormat.getPercentInstance(myLocale)
</pre>
</blockquote>
A <code>Locale</code> is the mechanism for identifying the kind of object
(<code>NumberFormat</code>) that you would like to get. The locale is
<STRONG>just</STRONG> a mechanism for identifying objects,
<STRONG>not</STRONG> a container for the objects themselves.

<h4>Compatibility</h4>

<p>In order to maintain compatibility with existing usage, Locale's
constructors retain their behavior prior to the Java Runtime
Environment version 1.7.  The same is largely true for the
<code>toString</code> method. Thus Locale objects can continue to
be used as they were. In particular, clients who parse the output
of toString into language, country, and variant fields can continue
to do so (although this is strongly discouraged), although the
variant field will have additional information in it if script or
extensions are present.

<p>In addition, BCP 47 imposes syntax restrictions that are not
imposed by Locale's constructors. This means that conversions
between some Locales and BCP 47 language tags cannot be made without
losing information. Thus <code>toLanguageTag</code> cannot
represent the state of locales whose language, country, or variant
do not conform to BCP 47.

<p>Because of these issues, it is recommended that clients migrate
away from constructing non-conforming locales and use the
<code>forLanguageTag</code> and <code>Locale.Builder</code> APIs instead.
Clients desiring a string representation of the complete locale can
then always rely on <code>toLanguageTag</code> for this purpose.

<h5><a name=\"special_cases_constructor\">Special cases</a></h5>

<p>For compatibility reasons, two
non-conforming locales are treated as special cases.  These are
<b><tt>ja_JP_JP</tt></b> and <b><tt>th_TH_TH</tt></b>. These are ill-formed
in BCP 47 since the variants are too short. To ease migration to BCP 47,
these are treated specially during construction.  These two cases (and only
these) cause a constructor to generate an extension, all other values behave
exactly as they did prior to Java 7.

<p>Java has used <tt>ja_JP_JP</tt> to represent Japanese as used in
Japan together with the Japanese Imperial calendar. This is now
representable using a Unicode locale extension, by specifying the
Unicode locale key <tt>ca</tt> (for \"calendar\") and type
<tt>japanese</tt>. When the Locale constructor is called with the
arguments \"ja\", \"JP\", \"JP\", the extension \"u-ca-japanese\" is
automatically added.

<p>Java has used <tt>th_TH_TH</tt> to represent Thai as used in
Thailand together with Thai digits. This is also now representable using
a Unicode locale extension, by specifying the Unicode locale key
<tt>nu</tt> (for \"number\") and value <tt>thai</tt>. When the Locale
constructor is called with the arguments \"th\", \"TH\", \"TH\", the
extension \"u-nu-thai\" is automatically added.

<h5>Serialization</h5>

<p>During serialization, writeObject writes all fields to the output
stream, including extensions.

<p>During deserialization, readResolve adds extensions as described
in <a href=\"#special_cases_constructor\">Special Cases</a>, only
for the two cases th_TH_TH and ja_JP_JP.

<h5>Legacy language codes</h5>

<p>Locale's constructor has always converted three language codes to
their earlier, obsoleted forms: <tt>he</tt> maps to <tt>iw</tt>,
<tt>yi</tt> maps to <tt>ji</tt>, and <tt>id</tt> maps to
<tt>in</tt>.  This continues to be the case, in order to not break
backwards compatibility.

<p>The APIs added in 1.7 map between the old and new language codes,
maintaining the old codes internal to Locale (so that
<code>getLanguage</code> and <code>toString</code> reflect the old
code), but using the new codes in the BCP 47 language tag APIs (so
that <code>toLanguageTag</code> reflects the new one). This
preserves the equivalence between Locales no matter which code or
API is used to construct them. Java's default resource bundle
lookup mechanism also implements this mapping, so that resources
can be named using either convention, see {@link ResourceBundle.Control}.

<h5>Three-letter language/country(region) codes</h5>

<p>The Locale constructors have always specified that the language
and the country param be two characters in length, although in
practice they have accepted any length.  The specification has now
been relaxed to allow language codes of two to eight characters and
country (region) codes of two to three characters, and in
particular, three-letter language codes and three-digit region
codes as specified in the IANA Language Subtag Registry.  For
compatibility, the implementation still does not impose a length
constraint.

@see Builder
@see ResourceBundle
@see java.text.Format
@see java.text.NumberFormat
@see java.text.Collator
@author Mark Davis
@since 1.1
"
      classrelation 3527298 // <realization>
	relation 3527298 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3527298 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3527426 // <realization>
	relation 3527426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3527426 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      class 1086850 "Cache"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 8845826 "Cache"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8845954 "createObject"
	  protected return_type class_ref 312962 // Locale
	  nparams 1
	    param inout name "key" type class_ref 1086978 // LocaleKey
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3527554 // LOCALECACHE (<unidirectional association>)
	relation 3527554 --->
	  a role_name "LOCALECACHE" init_value " new Cache()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3527554 // LOCALECACHE (<unidirectional association>)
	  b parent class_ref 1086850 // Cache
      end

      classrelation 3527682 // ENGLISH (<unidirectional association>)
	relation 3527682 --->
	  a role_name "ENGLISH" init_value " createConstant(\"en\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3527682 // ENGLISH (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3527810 // FRENCH (<unidirectional association>)
	relation 3527810 --->
	  a role_name "FRENCH" init_value " createConstant(\"fr\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3527810 // FRENCH (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3527938 // GERMAN (<unidirectional association>)
	relation 3527938 --->
	  a role_name "GERMAN" init_value " createConstant(\"de\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3527938 // GERMAN (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528066 // ITALIAN (<unidirectional association>)
	relation 3528066 --->
	  a role_name "ITALIAN" init_value " createConstant(\"it\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528066 // ITALIAN (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528194 // JAPANESE (<unidirectional association>)
	relation 3528194 --->
	  a role_name "JAPANESE" init_value " createConstant(\"ja\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528194 // JAPANESE (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528322 // KOREAN (<unidirectional association>)
	relation 3528322 --->
	  a role_name "KOREAN" init_value " createConstant(\"ko\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528322 // KOREAN (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528450 // CHINESE (<unidirectional association>)
	relation 3528450 --->
	  a role_name "CHINESE" init_value " createConstant(\"zh\", \"\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528450 // CHINESE (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528578 // SIMPLIFIED_CHINESE (<unidirectional association>)
	relation 3528578 --->
	  a role_name "SIMPLIFIED_CHINESE" init_value " createConstant(\"zh\", \"CN\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528578 // SIMPLIFIED_CHINESE (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528706 // TRADITIONAL_CHINESE (<unidirectional association>)
	relation 3528706 --->
	  a role_name "TRADITIONAL_CHINESE" init_value " createConstant(\"zh\", \"TW\")" class_relation const_relation public
	    comment " Useful constant for language.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528706 // TRADITIONAL_CHINESE (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528834 // FRANCE (<unidirectional association>)
	relation 3528834 --->
	  a role_name "FRANCE" init_value " createConstant(\"fr\", \"FR\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528834 // FRANCE (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3528962 // GERMANY (<unidirectional association>)
	relation 3528962 --->
	  a role_name "GERMANY" init_value " createConstant(\"de\", \"DE\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3528962 // GERMANY (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529090 // ITALY (<unidirectional association>)
	relation 3529090 --->
	  a role_name "ITALY" init_value " createConstant(\"it\", \"IT\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529090 // ITALY (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529218 // JAPAN (<unidirectional association>)
	relation 3529218 --->
	  a role_name "JAPAN" init_value " createConstant(\"ja\", \"JP\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529218 // JAPAN (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529346 // KOREA (<unidirectional association>)
	relation 3529346 --->
	  a role_name "KOREA" init_value " createConstant(\"ko\", \"KR\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529346 // KOREA (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529474 // CHINA (<unidirectional association>)
	relation 3529474 --->
	  a role_name "CHINA" init_value " SIMPLIFIED_CHINESE" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529474 // CHINA (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529602 // PRC (<unidirectional association>)
	relation 3529602 --->
	  a role_name "PRC" init_value " SIMPLIFIED_CHINESE" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529602 // PRC (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529730 // TAIWAN (<unidirectional association>)
	relation 3529730 --->
	  a role_name "TAIWAN" init_value " TRADITIONAL_CHINESE" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529730 // TAIWAN (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529858 // UK (<unidirectional association>)
	relation 3529858 --->
	  a role_name "UK" init_value " createConstant(\"en\", \"GB\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529858 // UK (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3529986 // US (<unidirectional association>)
	relation 3529986 --->
	  a role_name "US" init_value " createConstant(\"en\", \"US\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3529986 // US (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3530114 // CANADA (<unidirectional association>)
	relation 3530114 --->
	  a role_name "CANADA" init_value " createConstant(\"en\", \"CA\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3530114 // CANADA (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3530242 // CANADA_FRENCH (<unidirectional association>)
	relation 3530242 --->
	  a role_name "CANADA_FRENCH" init_value " createConstant(\"fr\", \"CA\")" class_relation const_relation public
	    comment " Useful constant for country.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3530242 // CANADA_FRENCH (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3530370 // ROOT (<unidirectional association>)
	relation 3530370 --->
	  a role_name "ROOT" init_value " createConstant(\"\", \"\")" class_relation const_relation public
	    comment "
Useful constant for the root locale.  The root locale is the locale whose
language, country, and variant are empty (\"\") strings.  This is regarded
as the base locale of all locales, and is used as the language/country
neutral locale for the locale sensitive operations.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3530370 // ROOT (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      attribute 2061314 "PRIVATE_USE_EXTENSION"
	class_attribute const_attribute public explicit_type "char"
	init_value " 'x'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The key for the private use extension ('x').

@see #getExtension(char)
@see Builder#setExtension(char, String)
@since 1.7

"
      end

      attribute 2061442 "UNICODE_LOCALE_EXTENSION"
	class_attribute const_attribute public explicit_type "char"
	init_value " 'u'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The key for Unicode locale extension ('u').

@see #getExtension(char)
@see Builder#setExtension(char, String)
@since 1.7

"
      end

      attribute 2061570 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 9149081749638150636L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " serialization ID

"
      end

      attribute 2061698 "DISPLAY_LANGUAGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Display types for retrieving localized names from the name providers.

"
      end

      attribute 2061826 "DISPLAY_COUNTRY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2061954 "DISPLAY_VARIANT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2062082 "DISPLAY_SCRIPT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8844802 "Locale"
	private explicit_return_type ""
	nparams 2
	  param inout name "baseLocale" explicit_type "BaseLocale"
	  param inout name "extensions" explicit_type "LocaleExtensions"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private constructor used by getInstance method
"
      end

      operation 8844930 "Locale"
	public explicit_return_type ""
	nparams 3
	  param inout name "language" type class_ref 128130 // String
	  param inout name "country" type class_ref 128130 // String
	  param inout name "variant" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a locale from language, country and variant.
This constructor normalizes the language value to lowercase and
the country value to uppercase.
<p>
<b>Note:</b>
<ul>
<li>ISO 639 is not a stable standard; some of the language codes it defines
(specifically \"iw\", \"ji\", and \"in\") have changed.  This constructor accepts both the
old codes (\"iw\", \"ji\", and \"in\") and the new codes (\"he\", \"yi\", and \"id\"), but all other
API on Locale will return only the OLD codes.
<li>For backward compatibility reasons, this constructor does not make
any syntactic checks on the input.
<li>The two cases (\"ja\", \"JP\", \"JP\") and (\"th\", \"TH\", \"TH\") are handled specially,
see <a href=\"#special_cases_constructor\">Special Cases</a> for more information.
</ul>

@param language An ISO 639 alpha-2 or alpha-3 language code, or a language subtag
up to 8 characters in length.  See the <code>Locale</code> class description about
valid language values.
@param country An ISO 3166 alpha-2 country code or a UN M.49 numeric-3 area code.
See the <code>Locale</code> class description about valid country values.
@param variant Any arbitrary value used to indicate a variation of a <code>Locale</code>.
See the <code>Locale</code> class description for the details.
@exception NullPointerException thrown if any argument is null.
"
      end

      operation 8845058 "Locale"
	public explicit_return_type ""
	nparams 2
	  param inout name "language" type class_ref 128130 // String
	  param inout name "country" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a locale from language and country.
This constructor normalizes the language value to lowercase and
the country value to uppercase.
<p>
<b>Note:</b>
<ul>
<li>ISO 639 is not a stable standard; some of the language codes it defines
(specifically \"iw\", \"ji\", and \"in\") have changed.  This constructor accepts both the
old codes (\"iw\", \"ji\", and \"in\") and the new codes (\"he\", \"yi\", and \"id\"), but all other
API on Locale will return only the OLD codes.
<li>For backward compatibility reasons, this constructor does not make
any syntactic checks on the input.
</ul>

@param language An ISO 639 alpha-2 or alpha-3 language code, or a language subtag
up to 8 characters in length.  See the <code>Locale</code> class description about
valid language values.
@param country An ISO 3166 alpha-2 country code or a UN M.49 numeric-3 area code.
See the <code>Locale</code> class description about valid country values.
@exception NullPointerException thrown if either argument is null.
"
      end

      operation 8845186 "Locale"
	public explicit_return_type ""
	nparams 1
	  param inout name "language" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a locale from a language code.
This constructor normalizes the language value to lowercase.
<p>
<b>Note:</b>
<ul>
<li>ISO 639 is not a stable standard; some of the language codes it defines
(specifically \"iw\", \"ji\", and \"in\") have changed.  This constructor accepts both the
old codes (\"iw\", \"ji\", and \"in\") and the new codes (\"he\", \"yi\", and \"id\"), but all other
API on Locale will return only the OLD codes.
<li>For backward compatibility reasons, this constructor does not make
any syntactic checks on the input.
</ul>

@param language An ISO 639 alpha-2 or alpha-3 language code, or a language subtag
up to 8 characters in length.  See the <code>Locale</code> class description about
valid language values.
@exception NullPointerException thrown if argument is null.
@since 1.4
"
      end

      operation 8845314 "createConstant"
	class_operation private return_type class_ref 312962 // Locale
	nparams 2
	  param inout name "lang" type class_ref 128130 // String
	  param inout name "country" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method must be called only for creating the Locale.*
constants due to making shortcuts.
"
      end

      operation 8845442 "getInstance"
	class_operation package return_type class_ref 312962 // Locale
	nparams 3
	  param inout name "language" type class_ref 128130 // String
	  param inout name "country" type class_ref 128130 // String
	  param inout name "variant" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Locale</code> constructed from the given
<code>language</code>, <code>country</code> and
<code>variant</code>. If the same <code>Locale</code> instance
is available in the cache, then that instance is
returned. Otherwise, a new <code>Locale</code> instance is
created and cached.

@param language lowercase 2 to 8 language code.
@param country uppercase two-letter ISO-3166 code and numric-3 UN M.49 area code.
@param variant vendor and browser specific code. See class description.
@return the <code>Locale</code> instance requested
@exception NullPointerException if any argument is null.
"
      end

      operation 8845570 "getInstance"
	class_operation package return_type class_ref 312962 // Locale
	nparams 5
	  param inout name "language" type class_ref 128130 // String
	  param inout name "script" type class_ref 128130 // String
	  param inout name "country" type class_ref 128130 // String
	  param inout name "variant" type class_ref 128130 // String
	  param inout name "extensions" explicit_type "LocaleExtensions"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8845698 "getInstance"
	class_operation package return_type class_ref 312962 // Locale
	nparams 2
	  param inout name "baseloc" explicit_type "BaseLocale"
	  param inout name "extensions" explicit_type "LocaleExtensions"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1086978 "LocaleKey"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2062210 "base"
	  const_attribute private explicit_type "BaseLocale"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2062338 "exts"
	  const_attribute private explicit_type "LocaleExtensions"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2062466 "hash"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8846082 "LocaleKey"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "baseLocale" explicit_type "BaseLocale"
	    param inout name "extensions" explicit_type "LocaleExtensions"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8846210 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8846338 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8846466 "getDefault"
	class_operation public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current value of the default locale for this instance
of the Java Virtual Machine.
<p>
The Java Virtual Machine sets the default locale during startup
based on the host environment. It is used by many locale-sensitive
methods if no locale is explicitly specified.
It can be changed using the
{@link #setDefault(java.util.Locale) setDefault} method.

@return the default locale for this instance of the Java Virtual Machine
"
      end

      operation 8846594 "getDefault"
	class_operation public return_type class_ref 312962 // Locale
	nparams 1
	  param inout name "category" type class_ref 1087106 // Category
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current value of the default locale for the specified Category
for this instance of the Java Virtual Machine.
<p>
The Java Virtual Machine sets the default locale during startup based
on the host environment. It is used by many locale-sensitive methods
if no locale is explicitly specified. It can be changed using the
setDefault(Locale.Category, Locale) method.

@param category - the specified category to get the default locale
@throws NullPointerException - if category is null
@return the default locale for the specified Category for this instance
    of the Java Virtual Machine
@see #setDefault(Locale.Category, Locale)
@since 1.7
"
      end

      class 1087106 "Category"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2062978 "DISPLAY"
	  public type class_ref 1087106 // Category
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"user.language.display\",
                \"user.script.display\",
                \"user.country.display\",
                \"user.variant.display\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Category used to represent the default locale for
displaying user interfaces.
"
	end

	attribute 2063106 "FORMAT"
	  public type class_ref 1087106 // Category
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"user.language.format\",
               \"user.script.format\",
               \"user.country.format\",
               \"user.variant.format\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Category used to represent the default locale for
formatting dates, numbers, and/or currencies.
"
	end

	operation 8853250 "Category"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "languageKey" type class_ref 128130 // String
	    param inout name "scriptKey" type class_ref 128130 // String
	    param inout name "countryKey" type class_ref 128130 // String
	    param inout name "variantKey" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3531778 // languageKey (<unidirectional association>)
	  relation 3531778 --->
	    a role_name "languageKey" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3531778 // languageKey (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3531906 // scriptKey (<unidirectional association>)
	  relation 3531906 --->
	    a role_name "scriptKey" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3531906 // scriptKey (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3532034 // countryKey (<unidirectional association>)
	  relation 3532034 --->
	    a role_name "countryKey" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3532034 // countryKey (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3532162 // variantKey (<unidirectional association>)
	  relation 3532162 --->
	    a role_name "variantKey" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3532162 // variantKey (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      operation 8846722 "initDefault"
	class_operation private return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8846850 "initDefault"
	class_operation private return_type class_ref 312962 // Locale
	nparams 1
	  param inout name "category" type class_ref 1087106 // Category
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8846978 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default locale for this instance of the Java Virtual Machine.
This does not affect the host locale.
<p>
If there is a security manager, its <code>checkPermission</code>
method is called with a <code>PropertyPermission(\"user.language\", \"write\")</code>
permission before the default locale is changed.
<p>
The Java Virtual Machine sets the default locale during startup
based on the host environment. It is used by many locale-sensitive
methods if no locale is explicitly specified.
<p>
Since changing the default locale may affect many different areas
of functionality, this method should only be used if the caller
is prepared to reinitialize locale-sensitive code running
within the same Java Virtual Machine.
<p>
By setting the default locale with this method, all of the default
locales for each Category are also set to the specified default locale.

@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow the operation.
@throws NullPointerException if <code>newLocale</code> is null
@param newLocale the new default locale
@see SecurityManager#checkPermission
@see java.util.PropertyPermission
"
      end

      operation 8847106 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "category" type class_ref 1087106 // Category
	  param inout name "newLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default locale for the specified Category for this instance
of the Java Virtual Machine. This does not affect the host locale.
<p>
If there is a security manager, its checkPermission method is called
with a PropertyPermission(\"user.language\", \"write\") permission before
the default locale is changed.
<p>
The Java Virtual Machine sets the default locale during startup based
on the host environment. It is used by many locale-sensitive methods
if no locale is explicitly specified.
<p>
Since changing the default locale may affect many different areas of
functionality, this method should only be used if the caller is
prepared to reinitialize locale-sensitive code running within the
same Java Virtual Machine.
<p>

@param category - the specified category to set the default locale
@param newLocale - the new default locale
@throws SecurityException - if a security manager exists and its
    checkPermission method doesn't allow the operation.
@throws NullPointerException - if category and/or newLocale is null
@see SecurityManager#checkPermission(java.security.Permission)
@see PropertyPermission
@see #getDefault(Locale.Category)
@since 1.7
"
      end

      operation 8847234 "getAvailableLocales"
	class_operation public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all installed locales.
The returned array represents the union of locales supported
by the Java runtime environment and by installed
{@link java.util.spi.LocaleServiceProvider LocaleServiceProvider}
implementations.  It must contain at least a <code>Locale</code>
instance equal to {@link java.util.Locale#US Locale.US}.

@return An array of installed locales.
"
      end

      operation 8847362 "getISOCountries"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of all 2-letter country codes defined in ISO 3166.
Can be used to create Locales.
<p>
<b>Note:</b> The <code>Locale</code> class also supports other codes for
country (region), such as 3-letter numeric UN M.49 area codes.
Therefore, the list returned by this method does not contain ALL valid
codes that can be used to create Locales.

@return An array of ISO 3166 two-letter country codes.
"
      end

      operation 8847490 "getISOLanguages"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of all 2-letter language codes defined in ISO 639.
Can be used to create Locales.
<p>
<b>Note:</b>
<ul>
<li>ISO 639 is not a stable standard&mdash; some languages' codes have changed.
The list this function returns includes both the new and the old codes for the
languages whose codes have changed.
<li>The <code>Locale</code> class also supports language codes up to
8 characters in length.  Therefore, the list returned by this method does
not contain ALL valid codes that can be used to create Locales.
</ul>

@return Am array of ISO 639 two-letter language codes.
"
      end

      operation 8847618 "getISO2Table"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "table" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8847746 "getLanguage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the language code of this Locale.

<p><b>Note:</b> ISO 639 is not a stable standard&mdash; some languages' codes have changed.
Locale's constructor recognizes both the new and the old codes for the languages
whose codes have changed, but this function always returns the old code.  If you
want to check for a specific language whose code has changed, don't do
<pre>
if (locale.getLanguage().equals(\"he\")) // BAD!
   ...
</pre>
Instead, do
<pre>
if (locale.getLanguage().equals(new Locale(\"he\").getLanguage()))
   ...
</pre>
@return The language code, or the empty string if none is defined.
@see #getDisplayLanguage
"
      end

      operation 8847874 "getScript"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the script for this locale, which should
either be the empty string or an ISO 15924 4-letter script
code. The first letter is uppercase and the rest are
lowercase, for example, 'Latn', 'Cyrl'.

@return The script code, or the empty string if none is defined.
@see #getDisplayScript
@since 1.7
"
      end

      operation 8848002 "getCountry"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the country/region code for this locale, which should
either be the empty string, an uppercase ISO 3166 2-letter code,
or a UN M.49 3-digit code.

@return The country/region code, or the empty string if none is defined.
@see #getDisplayCountry
"
      end

      operation 8848130 "getVariant"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the variant code for this locale.

@return The variant code, or the empty string if none is defined.
@see #getDisplayVariant
"
      end

      operation 8848258 "hasExtensions"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code Locale} has any <a href=\"#def_extensions\">
extensions</a>.

@return {@code true} if this {@code Locale} has any extensions
@since 1.8
"
      end

      operation 8848386 "stripExtensions"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of this {@code Locale} with no <a href=\"#def_extensions\">
extensions</a>. If this {@code Locale} has no extensions, this {@code Locale}
is returned.

@return a copy of this {@code Locale} with no extensions, or {@code this}
        if {@code this} has no extensions
@since 1.8
"
      end

      operation 8848514 "getExtension"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "key" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extension (or private use) value associated with
the specified key, or null if there is no extension
associated with the key. To be well-formed, the key must be one
of <code>[0-9A-Za-z]</code>. Keys are case-insensitive, so
for example 'z' and 'Z' represent the same extension.

@param key the extension key
@return The extension, or null if this locale defines no
extension for the specified key.
@throws IllegalArgumentException if key is not well-formed
@see #PRIVATE_USE_EXTENSION
@see #UNICODE_LOCALE_EXTENSION
@since 1.7
"
      end

      operation 8848642 "getExtensionKeys"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Character> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of extension keys associated with this locale, or the
empty set if it has no extensions. The returned set is unmodifiable.
The keys will all be lower-case.

@return The set of extension keys, or the empty set if this locale has
no extensions.
@since 1.7
"
      end

      operation 8848770 "getUnicodeLocaleAttributes"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of unicode locale attributes associated with
this locale, or the empty set if it has no attributes. The
returned set is unmodifiable.

@return The set of attributes.
@since 1.7
"
      end

      operation 8848898 "getUnicodeLocaleType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Unicode locale type associated with the specified Unicode locale key
for this locale. Returns the empty string for keys that are defined with no type.
Returns null if the key is not defined. Keys are case-insensitive. The key must
be two alphanumeric characters ([0-9a-zA-Z]), or an IllegalArgumentException is
thrown.

@param key the Unicode locale key
@return The Unicode locale type associated with the key, or null if the
locale does not define the key.
@throws IllegalArgumentException if the key is not well-formed
@throws NullPointerException if <code>key</code> is null
@since 1.7
"
      end

      operation 8849026 "getUnicodeLocaleKeys"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of Unicode locale keys defined by this locale, or the empty set if
this locale has none.  The returned set is immutable.  Keys are all lower case.

@return The set of Unicode locale keys, or the empty set if this locale has
no Unicode locale keywords.
@since 1.7
"
      end

      operation 8849154 "getBaseLocale"
	package explicit_return_type "BaseLocale"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package locale method returning the Locale's BaseLocale,
used by ResourceBundle
@return base locale of this Locale
"
      end

      operation 8849282 "getLocaleExtensions"
	package explicit_return_type "LocaleExtensions"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private method returning the Locale's LocaleExtensions,
used by ResourceBundle.
@return locale exnteions of this Locale,
        or {@code null} if no extensions are defined
"
      end

      operation 8849410 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representation of this <code>Locale</code>
object, consisting of language, country, variant, script,
and extensions as below:
<blockquote>
language + \"_\" + country + \"_\" + (variant + \"_#\" | \"#\") + script + \"-\" + extensions
</blockquote>

Language is always lower case, country is always upper case, script is always title
case, and extensions are always lower case.  Extensions and private use subtags
will be in canonical order as explained in {@link #toLanguageTag}.

<p>When the locale has neither script nor extensions, the result is the same as in
Java 6 and prior.

<p>If both the language and country fields are missing, this function will return
the empty string, even if the variant, script, or extensions field is present (you
can't have a locale with just a variant, the variant must accompany a well-formed
language or country code).

<p>If script or extensions are present and variant is missing, no underscore is
added before the \"#\".

<p>This behavior is designed to support debugging and to be compatible with
previous uses of <code>toString</code> that expected language, country, and variant
fields only.  To represent a Locale as a String for interchange purposes, use
{@link #toLanguageTag}.

<p>Examples: <ul>
<li><tt>en</tt></li>
<li><tt>de_DE</tt></li>
<li><tt>_GB</tt></li>
<li><tt>en_US_WIN</tt></li>
<li><tt>de__POSIX</tt></li>
<li><tt>zh_CN_#Hans</tt></li>
<li><tt>zh_TW_#Hant-x-java</tt></li>
<li><tt>th_TH_TH_#u-nu-thai</tt></li></ul>

@return A string representation of the Locale, for debugging.
@see #getDisplayName
@see #toLanguageTag
"
      end

      operation 8849538 "toLanguageTag"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a well-formed IETF BCP 47 language tag representing
this locale.

<p>If this <code>Locale</code> has a language, country, or
variant that does not satisfy the IETF BCP 47 language tag
syntax requirements, this method handles these fields as
described below:

<p><b>Language:</b> If language is empty, or not <a
href=\"#def_language\" >well-formed</a> (for example \"a\" or
\"e2\"), it will be emitted as \"und\" (Undetermined).

<p><b>Country:</b> If country is not <a
href=\"#def_region\">well-formed</a> (for example \"12\" or \"USA\"),
it will be omitted.

<p><b>Variant:</b> If variant <b>is</b> <a
href=\"#def_variant\">well-formed</a>, each sub-segment
(delimited by '-' or '_') is emitted as a subtag.  Otherwise:
<ul>

<li>if all sub-segments match <code>[0-9a-zA-Z]{1,8}</code>
(for example \"WIN\" or \"Oracle_JDK_Standard_Edition\"), the first
ill-formed sub-segment and all following will be appended to
the private use subtag.  The first appended subtag will be
\"lvariant\", followed by the sub-segments in order, separated by
hyphen. For example, \"x-lvariant-WIN\",
\"Oracle-x-lvariant-JDK-Standard-Edition\".

<li>if any sub-segment does not match
<code>[0-9a-zA-Z]{1,8}</code>, the variant will be truncated
and the problematic sub-segment and all following sub-segments
will be omitted.  If the remainder is non-empty, it will be
emitted as a private use subtag as above (even if the remainder
turns out to be well-formed).  For example,
\"Solaris_isjustthecoolestthing\" is emitted as
\"x-lvariant-Solaris\", not as \"solaris\".</li></ul>

<p><b>Special Conversions:</b> Java supports some old locale
representations, including deprecated ISO language codes,
for compatibility. This method performs the following
conversions:
<ul>

<li>Deprecated ISO language codes \"iw\", \"ji\", and \"in\" are
converted to \"he\", \"yi\", and \"id\", respectively.

<li>A locale with language \"no\", country \"NO\", and variant
\"NY\", representing Norwegian Nynorsk (Norway), is converted
to a language tag \"nn-NO\".</li></ul>

<p><b>Note:</b> Although the language tag created by this
method is well-formed (satisfies the syntax requirements
defined by the IETF BCP 47 specification), it is not
necessarily a valid BCP 47 language tag.  For example,
<pre>
  new Locale(\"xx\", \"YY\").toLanguageTag();</pre>

will return \"xx-YY\", but the language subtag \"xx\" and the
region subtag \"YY\" are invalid because they are not registered
in the IANA Language Subtag Registry.

@return a BCP47 language tag representing the locale
@see #forLanguageTag(String)
@since 1.7
"
      end

      operation 8849666 "forLanguageTag"
	class_operation public return_type class_ref 312962 // Locale
	nparams 1
	  param inout name "languageTag" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a locale for the specified IETF BCP 47 language tag string.

<p>If the specified language tag contains any ill-formed subtags,
the first such subtag and all following subtags are ignored.  Compare
to {@link Locale.Builder#setLanguageTag} which throws an exception
in this case.

<p>The following <b>conversions</b> are performed:<ul>

<li>The language code \"und\" is mapped to language \"\".

<li>The language codes \"he\", \"yi\", and \"id\" are mapped to \"iw\",
\"ji\", and \"in\" respectively. (This is the same canonicalization
that's done in Locale's constructors.)

<li>The portion of a private use subtag prefixed by \"lvariant\",
if any, is removed and appended to the variant field in the
result locale (without case normalization).  If it is then
empty, the private use subtag is discarded:

<pre>
    Locale loc;
    loc = Locale.forLanguageTag(\"en-US-x-lvariant-POSIX\");
    loc.getVariant(); // returns \"POSIX\"
    loc.getExtension('x'); // returns null

    loc = Locale.forLanguageTag(\"de-POSIX-x-URP-lvariant-Abc-Def\");
    loc.getVariant(); // returns \"POSIX_Abc_Def\"
    loc.getExtension('x'); // returns \"urp\"
</pre>

<li>When the languageTag argument contains an extlang subtag,
the first such subtag is used as the language, and the primary
language subtag and other extlang subtags are ignored:

<pre>
    Locale.forLanguageTag(\"ar-aao\").getLanguage(); // returns \"aao\"
    Locale.forLanguageTag(\"en-abc-def-us\").toString(); // returns \"abc_US\"
</pre>

<li>Case is normalized except for variant tags, which are left
unchanged.  Language is normalized to lower case, script to
title case, country to upper case, and extensions to lower
case.

<li>If, after processing, the locale would exactly match either
ja_JP_JP or th_TH_TH with no extensions, the appropriate
extensions are added as though the constructor had been called:

<pre>
   Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\").toLanguageTag();
   // returns \"ja-JP-u-ca-japanese-x-lvariant-JP\"
   Locale.forLanguageTag(\"th-TH-x-lvariant-TH\").toLanguageTag();
   // returns \"th-TH-u-nu-thai-x-lvariant-TH\"
</pre></ul>

<p>This implements the 'Language-Tag' production of BCP47, and
so supports grandfathered (regular and irregular) as well as
private use language tags.  Stand alone private use tags are
represented as empty language and extension 'x-whatever',
and grandfathered tags are converted to their canonical replacements
where they exist.

<p>Grandfathered tags with canonical replacements are as follows:

<table summary=\"Grandfathered tags with canonical replacements\">
<tbody align=\"center\">
<tr><th>grandfathered tag</th><th>&nbsp;</th><th>modern replacement</th></tr>
<tr><td>art-lojban</td><td>&nbsp;</td><td>jbo</td></tr>
<tr><td>i-ami</td><td>&nbsp;</td><td>ami</td></tr>
<tr><td>i-bnn</td><td>&nbsp;</td><td>bnn</td></tr>
<tr><td>i-hak</td><td>&nbsp;</td><td>hak</td></tr>
<tr><td>i-klingon</td><td>&nbsp;</td><td>tlh</td></tr>
<tr><td>i-lux</td><td>&nbsp;</td><td>lb</td></tr>
<tr><td>i-navajo</td><td>&nbsp;</td><td>nv</td></tr>
<tr><td>i-pwn</td><td>&nbsp;</td><td>pwn</td></tr>
<tr><td>i-tao</td><td>&nbsp;</td><td>tao</td></tr>
<tr><td>i-tay</td><td>&nbsp;</td><td>tay</td></tr>
<tr><td>i-tsu</td><td>&nbsp;</td><td>tsu</td></tr>
<tr><td>no-bok</td><td>&nbsp;</td><td>nb</td></tr>
<tr><td>no-nyn</td><td>&nbsp;</td><td>nn</td></tr>
<tr><td>sgn-BE-FR</td><td>&nbsp;</td><td>sfb</td></tr>
<tr><td>sgn-BE-NL</td><td>&nbsp;</td><td>vgt</td></tr>
<tr><td>sgn-CH-DE</td><td>&nbsp;</td><td>sgg</td></tr>
<tr><td>zh-guoyu</td><td>&nbsp;</td><td>cmn</td></tr>
<tr><td>zh-hakka</td><td>&nbsp;</td><td>hak</td></tr>
<tr><td>zh-min-nan</td><td>&nbsp;</td><td>nan</td></tr>
<tr><td>zh-xiang</td><td>&nbsp;</td><td>hsn</td></tr>
</tbody>
</table>

<p>Grandfathered tags with no modern replacement will be
converted as follows:

<table summary=\"Grandfathered tags with no modern replacement\">
<tbody align=\"center\">
<tr><th>grandfathered tag</th><th>&nbsp;</th><th>converts to</th></tr>
<tr><td>cel-gaulish</td><td>&nbsp;</td><td>xtg-x-cel-gaulish</td></tr>
<tr><td>en-GB-oed</td><td>&nbsp;</td><td>en-GB-x-oed</td></tr>
<tr><td>i-default</td><td>&nbsp;</td><td>en-x-i-default</td></tr>
<tr><td>i-enochian</td><td>&nbsp;</td><td>und-x-i-enochian</td></tr>
<tr><td>i-mingo</td><td>&nbsp;</td><td>see-x-i-mingo</td></tr>
<tr><td>zh-min</td><td>&nbsp;</td><td>nan-x-zh-min</td></tr>
</tbody>
</table>

<p>For a list of all grandfathered tags, see the
IANA Language Subtag Registry (search for \"Type: grandfathered\").

<p><b>Note</b>: there is no guarantee that <code>toLanguageTag</code>
and <code>forLanguageTag</code> will round-trip.

@param languageTag the language tag
@return The locale that best represents the language tag.
@throws NullPointerException if <code>languageTag</code> is <code>null</code>
@see #toLanguageTag()
@see java.util.Locale.Builder#setLanguageTag(String)
@since 1.7
"
      end

      operation 8849794 "getISO3Language"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 660738 // MissingResourceException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a three-letter abbreviation of this locale's language.
If the language matches an ISO 639-1 two-letter code, the
corresponding ISO 639-2/T three-letter lowercase code is
returned.  The ISO 639-2 language codes can be found on-line,
see \"Codes for the Representation of Names of Languages Part 2:
Alpha-3 Code\".  If the locale specifies a three-letter
language, the language is returned as is.  If the locale does
not specify a language the empty string is returned.

@return A three-letter abbreviation of this locale's language.
@exception MissingResourceException Throws MissingResourceException if
three-letter language abbreviation is not available for this locale.
"
      end

      operation 8849922 "getISO3Country"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 660738 // MissingResourceException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a three-letter abbreviation for this locale's country.
If the country matches an ISO 3166-1 alpha-2 code, the
corresponding ISO 3166-1 alpha-3 uppercase code is returned.
If the locale doesn't specify a country, this will be the empty
string.

<p>The ISO 3166-1 codes can be found on-line.

@return A three-letter abbreviation of this locale's country.
@exception MissingResourceException Throws MissingResourceException if the
three-letter country abbreviation is not available for this locale.
"
      end

      operation 8850050 "getISO3Code"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "iso2Code" type class_ref 128130 // String
	  param inout name "table" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8850178 "getDisplayLanguage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's language that is appropriate for display to the
user.
If possible, the name returned will be localized for the default
{@link Locale.Category#DISPLAY DISPLAY} locale.
For example, if the locale is fr_FR and the default
{@link Locale.Category#DISPLAY DISPLAY} locale
is en_US, getDisplayLanguage() will return \"French\"; if the locale is en_US and
the default {@link Locale.Category#DISPLAY DISPLAY} locale is fr_FR,
getDisplayLanguage() will return \"anglais\".
If the name returned cannot be localized for the default
{@link Locale.Category#DISPLAY DISPLAY} locale,
(say, we don't have a Japanese name for Croatian),
this function falls back on the English name, and uses the ISO code as a last-resort
value.  If the locale doesn't specify a language, this function returns the empty string.

@return The name of the display language.
"
      end

      operation 8850306 "getDisplayLanguage"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "inLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's language that is appropriate for display to the
user.
If possible, the name returned will be localized according to inLocale.
For example, if the locale is fr_FR and inLocale
is en_US, getDisplayLanguage() will return \"French\"; if the locale is en_US and
inLocale is fr_FR, getDisplayLanguage() will return \"anglais\".
If the name returned cannot be localized according to inLocale,
(say, we don't have a Japanese name for Croatian),
this function falls back on the English name, and finally
on the ISO code as a last-resort value.  If the locale doesn't specify a language,
this function returns the empty string.

@param inLocale The locale for which to retrieve the display language.
@return The name of the display language appropriate to the given locale.
@exception NullPointerException if <code>inLocale</code> is <code>null</code>
"
      end

      operation 8850434 "getDisplayScript"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the the locale's script that is appropriate for display to
the user. If possible, the name will be localized for the default
{@link Locale.Category#DISPLAY DISPLAY} locale.  Returns
the empty string if this locale doesn't specify a script code.

@return the display name of the script code for the current default
    {@link Locale.Category#DISPLAY DISPLAY} locale
@since 1.7
"
      end

      operation 8850562 "getDisplayScript"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "inLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's script that is appropriate
for display to the user. If possible, the name will be
localized for the given locale. Returns the empty string if
this locale doesn't specify a script code.

@param inLocale The locale for which to retrieve the display script.
@return the display name of the script code for the current default
{@link Locale.Category#DISPLAY DISPLAY} locale
@throws NullPointerException if <code>inLocale</code> is <code>null</code>
@since 1.7
"
      end

      operation 8850690 "getDisplayCountry"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's country that is appropriate for display to the
user.
If possible, the name returned will be localized for the default
{@link Locale.Category#DISPLAY DISPLAY} locale.
For example, if the locale is fr_FR and the default
{@link Locale.Category#DISPLAY DISPLAY} locale
is en_US, getDisplayCountry() will return \"France\"; if the locale is en_US and
the default {@link Locale.Category#DISPLAY DISPLAY} locale is fr_FR,
getDisplayCountry() will return \"Etats-Unis\".
If the name returned cannot be localized for the default
{@link Locale.Category#DISPLAY DISPLAY} locale,
(say, we don't have a Japanese name for Croatia),
this function falls back on the English name, and uses the ISO code as a last-resort
value.  If the locale doesn't specify a country, this function returns the empty string.

@return The name of the country appropriate to the locale.
"
      end

      operation 8850818 "getDisplayCountry"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "inLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's country that is appropriate for display to the
user.
If possible, the name returned will be localized according to inLocale.
For example, if the locale is fr_FR and inLocale
is en_US, getDisplayCountry() will return \"France\"; if the locale is en_US and
inLocale is fr_FR, getDisplayCountry() will return \"Etats-Unis\".
If the name returned cannot be localized according to inLocale.
(say, we don't have a Japanese name for Croatia),
this function falls back on the English name, and finally
on the ISO code as a last-resort value.  If the locale doesn't specify a country,
this function returns the empty string.

@param inLocale The locale for which to retrieve the display country.
@return The name of the country appropriate to the given locale.
@exception NullPointerException if <code>inLocale</code> is <code>null</code>
"
      end

      operation 8850946 "getDisplayString"
	private return_type class_ref 128130 // String
	nparams 3
	  param inout name "code" type class_ref 128130 // String
	  param inout name "inLocale" type class_ref 312962 // Locale
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8851074 "getDisplayVariant"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's variant code that is appropriate for display to the
user.  If possible, the name will be localized for the default
{@link Locale.Category#DISPLAY DISPLAY} locale.  If the locale
doesn't specify a variant code, this function returns the empty string.

@return The name of the display variant code appropriate to the locale.
"
      end

      operation 8851202 "getDisplayVariant"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "inLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale's variant code that is appropriate for display to the
user.  If possible, the name will be localized for inLocale.  If the locale
doesn't specify a variant code, this function returns the empty string.

@param inLocale The locale for which to retrieve the display variant code.
@return The name of the display variant code appropriate to the given locale.
@exception NullPointerException if <code>inLocale</code> is <code>null</code>
"
      end

      operation 8851330 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale that is appropriate for display to the
user. This will be the values returned by getDisplayLanguage(),
getDisplayScript(), getDisplayCountry(), and getDisplayVariant() assembled
into a single string. The the non-empty values are used in order,
with the second and subsequent names in parentheses.  For example:
<blockquote>
language (script, country, variant)<br>
language (country)<br>
language (variant)<br>
script (country)<br>
country<br>
</blockquote>
depending on which fields are specified in the locale.  If the
language, script, country, and variant fields are all empty,
this function returns the empty string.

@return The name of the locale appropriate to display.
"
      end

      operation 8851458 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "inLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name for the locale that is appropriate for display
to the user.  This will be the values returned by
getDisplayLanguage(), getDisplayScript(),getDisplayCountry(),
and getDisplayVariant() assembled into a single string.
The non-empty values are used in order,
with the second and subsequent names in parentheses.  For example:
<blockquote>
language (script, country, variant)<br>
language (country)<br>
language (variant)<br>
script (country)<br>
country<br>
</blockquote>
depending on which fields are specified in the locale.  If the
language, script, country, and variant fields are all empty,
this function returns the empty string.

@param inLocale The locale for which to retrieve the display name.
@return The name of the locale appropriate to display.
@throws NullPointerException if <code>inLocale</code> is <code>null</code>
"
      end

      operation 8851586 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overrides Cloneable.
"
      end

      operation 8851714 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Override hashCode.
Since Locales are often used in hashtables, caches the value
for speed.
"
      end

      operation 8851842 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Overrides

Returns true if this Locale is equal to another object.  A Locale is
deemed equal to another Locale with identical language, script, country,
variant and extensions, and unequal to all other objects.

@return true if this Locale is equal to the specified object.
"
      end

      attribute 2062594 "baseLocale"
	private explicit_type "BaseLocale"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ================= privates =====================================
"
      end

      attribute 2062722 "localeExtensions"
	private explicit_type "LocaleExtensions"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2062850 "hashCodeValue"
	volatile private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Calculated hashcode

"
      end

      classrelation 3530626 // defaultLocale (<unidirectional association>)
	relation 3530626 --->
	  a role_name "defaultLocale" init_value " initDefault()" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3530626 // defaultLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3530754 // defaultDisplayLocale (<unidirectional association>)
	relation 3530754 --->
	  a role_name "defaultDisplayLocale" init_value " null" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3530754 // defaultDisplayLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3530882 // defaultFormatLocale (<unidirectional association>)
	relation 3530882 --->
	  a role_name "defaultFormatLocale" init_value " null" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3530882 // defaultFormatLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3531010 // languageTag (<unidirectional association>)
	relation 3531010 --->
	  a role_name "languageTag" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3531010 // languageTag (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8851970 "getDisplayVariantArray"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "inLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array of the display names of the variant.
@param bundle the ResourceBundle to use to get the display names
@return an array of display names, possible of zero length.
"
      end

      operation 8852098 "formatList"
	class_operation private return_type class_ref 128130 // String
	nparams 3
	  param inout name "stringList" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "listPattern" type class_ref 128130 // String
	  param inout name "listCompositionPattern" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format a list using given pattern strings.
If either of the patterns is null, then a the list is
formatted by concatenation with the delimiter ','.
@param stringList the list of strings to be formatted.
@param listPattern should create a MessageFormat taking 0-3 arguments
and formatting them into a list.
@param listCompositionPattern should take 2 arguments
and is used by composeList.
@return a string representing the list.
"
      end

      operation 8852226 "composeList"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "format" type class_ref 428290 // MessageFormat
	  param inout name "list" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a list of strings, return a list shortened to three elements.
Shorten it by applying the given format to the first two elements
recursively.
@param format a format which takes two arguments
@param list a list of strings
@return if the list is three elements or shorter, the same list;
otherwise, a new list of three elements.
"
      end

      operation 8852354 "isUnicodeExtensionKey"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Duplicate of sun.util.locale.UnicodeLocaleExtension.isKey in order to
 avoid its class loading."
      end

      classrelation 3531138 // serialPersistentFields (<unidirectional association>)
	relation 3531138 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"language\", String.class),
        new ObjectStreamField(\"country\", String.class),
        new ObjectStreamField(\"variant\", String.class),
        new ObjectStreamField(\"hashcode\", int.class),
        new ObjectStreamField(\"script\", String.class),
        new ObjectStreamField(\"extensions\", String.class),
    }" class_relation const_relation private
	    comment "
@serialField language    String
     language subtag in lower case. (See <a href=\"java/util/Locale.html#getLanguage()\">getLanguage()</a>)
@serialField country     String
     country subtag in upper case. (See <a href=\"java/util/Locale.html#getCountry()\">getCountry()</a>)
@serialField variant     String
     variant subtags separated by LOWLINE characters. (See <a href=\"java/util/Locale.html#getVariant()\">getVariant()</a>)
@serialField hashcode    int
     deprecated, for forward compatibility only
@serialField script      String
     script subtag in title case (See <a href=\"java/util/Locale.html#getScript()\">getScript()</a>)
@serialField extensions  String
     canonical representation of extensions, that is,
     BCP47 extensions in alphabetical order followed by
     BCP47 private use subtags, all in lower case letters
     separated by HYPHEN-MINUS characters.
     (See <a href=\"java/util/Locale.html#getExtensionKeys()\">getExtensionKeys()</a>,
     <a href=\"java/util/Locale.html#getExtension(char)\">getExtension(char)</a>)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3531138 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 8852482 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>Locale</code> to the specified <code>ObjectOutputStream</code>.
@param out the <code>ObjectOutputStream</code> to write
@throws IOException
@since 1.7
"
      end

      operation 8852610 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes this <code>Locale</code>.
@param in the <code>ObjectInputStream</code> to read
@throws IOException
@throws ClassNotFoundException
@throws IllformedLocaleException
@since 1.7
"
      end

      operation 8852738 "readResolve"
	private return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 261506 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached <code>Locale</code> instance equivalent to
the deserialized <code>Locale</code>. When serialized
language, country and variant fields read from the object data stream
are exactly \"ja\", \"JP\", \"JP\" or \"th\", \"TH\", \"TH\" and script/extensions
fields are empty, this method supplies <code>UNICODE_LOCALE_EXTENSION</code>
\"ca\"/\"japanese\" (calendar type is \"japanese\") or \"nu\"/\"thai\" (number script
type is \"thai\"). See <a href=\"Locale.html#special_cases_constructor\">Special Cases</a>
for more information.

@return an instance of <code>Locale</code> equivalent to
the deserialized <code>Locale</code>.
@throws java.io.ObjectStreamException
"
      end

      classrelation 3531266 // isoLanguages (<unidirectional association>)
	relation 3531266 --->
	  a role_name "isoLanguages" multiplicity "[]" init_value " null" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3531266 // isoLanguages (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3531394 // isoCountries (<unidirectional association>)
	relation 3531394 --->
	  a role_name "isoCountries" multiplicity "[]" init_value " null" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3531394 // isoCountries (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8852866 "convertOldISOCodes"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "language" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8852994 "getCompatibilityExtensions"
	class_operation private explicit_return_type "LocaleExtensions"
	nparams 4
	  param inout name "language" type class_ref 128130 // String
	  param inout name "script" type class_ref 128130 // String
	  param inout name "country" type class_ref 128130 // String
	  param inout name "variant" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1087234 "LocaleNameGetter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3531650 // INSTANCE (<unidirectional association>)
	  relation 3531650 --->
	    a role_name "INSTANCE" init_value " new LocaleNameGetter()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3531650 // INSTANCE (<unidirectional association>)
	    b parent class_ref 1087234 // LocaleNameGetter
	end

	operation 8853122 "getObject"
	  public return_type class_ref 128130 // String
	  nparams 4
	    param inout name "localeNameProvider" type class_ref 1087362 // LocaleNameProvider
	    param inout name "locale" type class_ref 312962 // Locale
	    param inout name "key" type class_ref 128130 // String
	    param inout name "" explicit_type "Object...params"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1087490 "Builder"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2063234 "localeBuilder"
	  const_attribute private explicit_type "InternalLocaleBuilder"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8853378 "Builder"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an empty Builder. The default value of all
fields, extensions, and private use information is the
empty string.
"
	end

	operation 8853506 "setLocale"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the <code>Builder</code> to match the provided
<code>locale</code>.  Existing state is discarded.

<p>All fields of the locale must be well-formed, see {@link Locale}.

<p>Locales with any ill-formed fields cause
<code>IllformedLocaleException</code> to be thrown, except for the
following three cases which are accepted for compatibility
reasons:<ul>
<li>Locale(\"ja\", \"JP\", \"JP\") is treated as \"ja-JP-u-ca-japanese\"
<li>Locale(\"th\", \"TH\", \"TH\") is treated as \"th-TH-u-nu-thai\"
<li>Locale(\"no\", \"NO\", \"NY\") is treated as \"nn-NO\"</ul>

@param locale the locale
@return This builder.
@throws IllformedLocaleException if <code>locale</code> has
any ill-formed fields.
@throws NullPointerException if <code>locale</code> is null.
"
	end

	operation 8853634 "setLanguageTag"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "languageTag" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the Builder to match the provided IETF BCP 47
language tag.  Discards the existing state.  Null and the
empty string cause the builder to be reset, like {@link
#clear}.  Grandfathered tags (see {@link
Locale#forLanguageTag}) are converted to their canonical
form before being processed.  Otherwise, the language tag
must be well-formed (see {@link Locale}) or an exception is
thrown (unlike <code>Locale.forLanguageTag</code>, which
just discards ill-formed and following portions of the
tag).

@param languageTag the language tag
@return This builder.
@throws IllformedLocaleException if <code>languageTag</code> is ill-formed
@see Locale#forLanguageTag(String)
"
	end

	operation 8853762 "setLanguage"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "language" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the language.  If <code>language</code> is the empty string or
null, the language in this <code>Builder</code> is removed.  Otherwise,
the language must be <a href=\"./Locale.html#def_language\">well-formed</a>
or an exception is thrown.

<p>The typical language value is a two or three-letter language
code as defined in ISO639.

@param language the language
@return This builder.
@throws IllformedLocaleException if <code>language</code> is ill-formed
"
	end

	operation 8853890 "setScript"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "script" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the script. If <code>script</code> is null or the empty string,
the script in this <code>Builder</code> is removed.
Otherwise, the script must be <a href=\"./Locale.html#def_script\">well-formed</a> or an
exception is thrown.

<p>The typical script value is a four-letter script code as defined by ISO 15924.

@param script the script
@return This builder.
@throws IllformedLocaleException if <code>script</code> is ill-formed
"
	end

	operation 8854018 "setRegion"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "region" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the region.  If region is null or the empty string, the region
in this <code>Builder</code> is removed.  Otherwise,
the region must be <a href=\"./Locale.html#def_region\">well-formed</a> or an
exception is thrown.

<p>The typical region value is a two-letter ISO 3166 code or a
three-digit UN M.49 area code.

<p>The country value in the <code>Locale</code> created by the
<code>Builder</code> is always normalized to upper case.

@param region the region
@return This builder.
@throws IllformedLocaleException if <code>region</code> is ill-formed
"
	end

	operation 8854146 "setVariant"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "variant" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the variant.  If variant is null or the empty string, the
variant in this <code>Builder</code> is removed.  Otherwise, it
must consist of one or more <a href=\"./Locale.html#def_variant\">well-formed</a>
subtags, or an exception is thrown.

<p><b>Note:</b> This method checks if <code>variant</code>
satisfies the IETF BCP 47 variant subtag's syntax requirements,
and normalizes the value to lowercase letters.  However,
the <code>Locale</code> class does not impose any syntactic
restriction on variant, and the variant value in
<code>Locale</code> is case sensitive.  To set such a variant,
use a Locale constructor.

@param variant the variant
@return This builder.
@throws IllformedLocaleException if <code>variant</code> is ill-formed
"
	end

	operation 8854274 "setExtension"
	  public return_type class_ref 1087490 // Builder
	  nparams 2
	    param in name "key" explicit_type "char"
	    param inout name "value" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the extension for the given key. If the value is null or the
empty string, the extension is removed.  Otherwise, the extension
must be <a href=\"./Locale.html#def_extensions\">well-formed</a> or an exception
is thrown.

<p><b>Note:</b> The key {@link Locale#UNICODE_LOCALE_EXTENSION
UNICODE_LOCALE_EXTENSION} ('u') is used for the Unicode locale extension.
Setting a value for this key replaces any existing Unicode locale key/type
pairs with those defined in the extension.

<p><b>Note:</b> The key {@link Locale#PRIVATE_USE_EXTENSION
PRIVATE_USE_EXTENSION} ('x') is used for the private use code. To be
well-formed, the value for this key needs only to have subtags of one to
eight alphanumeric characters, not two to eight as in the general case.

@param key the extension key
@param value the extension value
@return This builder.
@throws IllformedLocaleException if <code>key</code> is illegal
or <code>value</code> is ill-formed
@see #setUnicodeLocaleKeyword(String, String)
"
	end

	operation 8854402 "setUnicodeLocaleKeyword"
	  public return_type class_ref 1087490 // Builder
	  nparams 2
	    param inout name "key" type class_ref 128130 // String
	    param inout name "type" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the Unicode locale keyword type for the given key.  If the type
is null, the Unicode keyword is removed.  Otherwise, the key must be
non-null and both key and type must be <a
href=\"./Locale.html#def_locale_extension\">well-formed</a> or an exception
is thrown.

<p>Keys and types are converted to lower case.

<p><b>Note</b>:Setting the 'u' extension via {@link #setExtension}
replaces all Unicode locale keywords with those defined in the
extension.

@param key the Unicode locale key
@param type the Unicode locale type
@return This builder.
@throws IllformedLocaleException if <code>key</code> or <code>type</code>
is ill-formed
@throws NullPointerException if <code>key</code> is null
@see #setExtension(char, String)
"
	end

	operation 8854530 "addUnicodeLocaleAttribute"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "attribute" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a unicode locale attribute, if not already present, otherwise
has no effect.  The attribute must not be null and must be <a
href=\"./Locale.html#def_locale_extension\">well-formed</a> or an exception
is thrown.

@param attribute the attribute
@return This builder.
@throws NullPointerException if <code>attribute</code> is null
@throws IllformedLocaleException if <code>attribute</code> is ill-formed
@see #setExtension(char, String)
"
	end

	operation 8854658 "removeUnicodeLocaleAttribute"
	  public return_type class_ref 1087490 // Builder
	  nparams 1
	    param inout name "attribute" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes a unicode locale attribute, if present, otherwise has no
effect.  The attribute must not be null and must be <a
href=\"./Locale.html#def_locale_extension\">well-formed</a> or an exception
is thrown.

<p>Attribute comparision for removal is case-insensitive.

@param attribute the attribute
@return This builder.
@throws NullPointerException if <code>attribute</code> is null
@throws IllformedLocaleException if <code>attribute</code> is ill-formed
@see #setExtension(char, String)
"
	end

	operation 8854786 "clear"
	  public return_type class_ref 1087490 // Builder
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the builder to its initial, empty state.

@return This builder.
"
	end

	operation 8854914 "clearExtensions"
	  public return_type class_ref 1087490 // Builder
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the extensions to their initial, empty state.
Language, script, region and variant are unchanged.

@return This builder.
@see #setExtension(char, String)
"
	end

	operation 8855042 "build"
	  public return_type class_ref 312962 // Locale
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an instance of <code>Locale</code> created from the fields set
on this builder.

<p>This applies the conversions listed in {@link Locale#forLanguageTag}
when constructing a Locale. (Grandfathered tags are handled in
{@link #setLanguageTag}.)

@return A Locale.
"
	end
      end

      class 1087618 "FilteringMode"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2063362 "AUTOSELECT_FILTERING"
	  public type class_ref 1087618 // FilteringMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Specifies automatic filtering mode based on the given Language
Priority List consisting of language ranges. If all of the ranges
are basic, basic filtering is selected. Otherwise, extended
filtering is selected.

"
	end

	attribute 2063490 "EXTENDED_FILTERING"
	  public type class_ref 1087618 // FilteringMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Specifies extended filtering.

"
	end

	attribute 2063618 "IGNORE_EXTENDED_RANGES"
	  public type class_ref 1087618 // FilteringMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Specifies basic filtering: Note that any extended language ranges
included in the given Language Priority List are ignored.

"
	end

	attribute 2063746 "MAP_EXTENDED_RANGES"
	  public type class_ref 1087618 // FilteringMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Specifies basic filtering: If any extended language ranges are
included in the given Language Priority List, they are mapped to the
basic language range. Specifically, a language range starting with a
subtag {@code \"*\"} is treated as a language range {@code \"*\"}. For
example, {@code \"*-US\"} is treated as {@code \"*\"}. If {@code \"*\"} is
not the first subtag, {@code \"*\"} and extra {@code \"-\"} are removed.
For example, {@code \"ja-*-JP\"} is mapped to {@code \"ja-JP\"}.

"
	end

	attribute 2063874 "REJECT_EXTENDED_RANGES"
	  public type class_ref 1087618 // FilteringMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Specifies basic filtering: If any extended language ranges are
included in the given Language Priority List, the list is rejected
and the filtering method throws {@link IllegalArgumentException}.
"
	end
      end

      class 1087746 "LanguageRange"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2064002 "MAX_WEIGHT"
	  class_attribute const_attribute public explicit_type "double"
	  init_value " 1.0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A constant holding the maximum value of weight, 1.0, which indicates
that the language range is a good fit for the user.

"
	end

	attribute 2064130 "MIN_WEIGHT"
	  class_attribute const_attribute public explicit_type "double"
	  init_value " 0.0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A constant holding the minimum value of weight, 0.0, which indicates
that the language range is not a good fit for the user.

"
	end

	classrelation 3532290 // range (<unidirectional association>)
	  relation 3532290 --->
	    a role_name "range" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3532290 // range (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 2064258 "weight"
	  const_attribute private explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2064386 "hash"
	  volatile private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8855170 "LanguageRange"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "range" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a {@code LanguageRange} using the given {@code range}.
Note that no validation is done against the IANA Language Subtag
Registry at time of construction.

<p>This is equivalent to {@code LanguageRange(range, MAX_WEIGHT)}.

@param range a language range
@throws NullPointerException if the given {@code range} is
    {@code null}
"
	end

	operation 8855298 "LanguageRange"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "range" type class_ref 128130 // String
	    param in name "weight" explicit_type "double"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a {@code LanguageRange} using the given {@code range} and
{@code weight}. Note that no validation is done against the IANA
Language Subtag Registry at time of construction.

@param range  a language range
@param weight a weight value between {@code MIN_WEIGHT} and
    {@code MAX_WEIGHT}
@throws NullPointerException if the given {@code range} is
    {@code null}
@throws IllegalArgumentException if the given {@code weight} is less
    than {@code MIN_WEIGHT} or greater than {@code MAX_WEIGHT}
"
	end

	operation 8855426 "isSubtagIllFormed"
	  class_operation private explicit_return_type "boolean"
	  nparams 2
	    param inout name "subtag" type class_ref 128130 // String
	    param inout name "isFirstSubtag" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8855554 "getRange"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the language range of this {@code LanguageRange}.

@return the language range.
"
	end

	operation 8855682 "getWeight"
	  public explicit_return_type "double"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the weight of this {@code LanguageRange}.

@return the weight value.
"
	end

	operation 8855810 "parse"
	  class_operation public return_type class_ref 175362 // List
	  nparams 1
	    param inout name "ranges" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<LanguageRange> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parses the given {@code ranges} to generate a Language Priority List.

<p>This method performs a syntactic check for each language range in
the given {@code ranges} but doesn't do validation using the IANA
Language Subtag Registry.

<p>The {@code ranges} to be given can take one of the following
forms:

<pre>
  \"Accept-Language: ja,en;q=0.4\"  (weighted list with Accept-Language prefix)
  \"ja,en;q=0.4\"                   (weighted list)
  \"ja,en\"                         (prioritized list)
</pre>

In a weighted list, each language range is given a weight value.
The weight value is identical to the \"quality value\" in
<a href=\"http://tools.ietf.org/html/rfc2616\">RFC 2616</a>, and it
expresses how much the user prefers  the language. A weight value is
specified after a corresponding language range followed by
{@code \";q=\"}, and the default weight value is {@code MAX_WEIGHT}
when it is omitted.

<p>Unlike a weighted list, language ranges in a prioritized list
are sorted in the descending order based on its priority. The first
language range has the highest priority and meets the user's
preference most.

<p>In either case, language ranges are sorted in descending order in
the Language Priority List based on priority or weight. If a
language range appears in the given {@code ranges} more than once,
only the first one is included on the Language Priority List.

<p>The returned list consists of language ranges from the given
{@code ranges} and their equivalents found in the IANA Language
Subtag Registry. For example, if the given {@code ranges} is
{@code \"Accept-Language: iw,en-us;q=0.7,en;q=0.3\"}, the elements in
the list to be returned are:

<pre>
 <b>Range</b>                                   <b>Weight</b>
   \"iw\" (older tag for Hebrew)             1.0
   \"he\" (new preferred code for Hebrew)    1.0
   \"en-us\" (English, United States)        0.7
   \"en\" (English)                          0.3
</pre>

Two language ranges, {@code \"iw\"} and {@code \"he\"}, have the same
highest priority in the list. By adding {@code \"he\"} to the user's
Language Priority List, locale-matching method can find Hebrew as a
matching locale (or language tag) even if the application or system
offers only {@code \"he\"} as a supported locale (or language tag).

@param ranges a list of comma-separated language ranges or a list of
    language ranges in the form of the \"Accept-Language\" header
    defined in <a href=\"http://tools.ietf.org/html/rfc2616\">RFC
    2616</a>
@return a Language Priority List consisting of language ranges
    included in the given {@code ranges} and their equivalent
    language ranges if available. The list is modifiable.
@throws NullPointerException if {@code ranges} is null
@throws IllegalArgumentException if a language range or a weight
    found in the given {@code ranges} is ill-formed
"
	end

	operation 8855938 "parse"
	  class_operation public return_type class_ref 175362 // List
	  nparams 2
	    param inout name "ranges" type class_ref 128130 // String
	    param inout name "map" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<LanguageRange> ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parses the given {@code ranges} to generate a Language Priority
List, and then customizes the list using the given {@code map}.
This method is equivalent to
{@code mapEquivalents(parse(ranges), map)}.

@param ranges a list of comma-separated language ranges or a list
    of language ranges in the form of the \"Accept-Language\" header
    defined in <a href=\"http://tools.ietf.org/html/rfc2616\">RFC
    2616</a>
@param map a map containing information to customize language ranges
@return a Language Priority List with customization. The list is
    modifiable.
@throws NullPointerException if {@code ranges} is null
@throws IllegalArgumentException if a language range or a weight
    found in the given {@code ranges} is ill-formed
@see #parse(String)
@see #mapEquivalents
"
	end

	operation 8856066 "mapEquivalents"
	  class_operation public return_type class_ref 175362 // List
	  nparams 2
	    param inout name "priorityList" type class_ref 175362 // List
	    param inout name "map" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<LanguageRange> ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Generates a new customized Language Priority List using the given
{@code priorityList} and {@code map}. If the given {@code map} is
empty, this method returns a copy of the given {@code priorityList}.

<p>In the map, a key represents a language range whereas a value is
a list of equivalents of it. {@code '*'} cannot be used in the map.
Each equivalent language range has the same weight value as its
original language range.

<pre>
 An example of map:
   <b>Key</b>                            <b>Value</b>
     \"zh\" (Chinese)                 \"zh\",
                                    \"zh-Hans\"(Simplified Chinese)
     \"zh-HK\" (Chinese, Hong Kong)   \"zh-HK\"
     \"zh-TW\" (Chinese, Taiwan)      \"zh-TW\"
</pre>

The customization is performed after modification using the IANA
Language Subtag Registry.

<p>For example, if a user's Language Priority List consists of five
language ranges ({@code \"zh\"}, {@code \"zh-CN\"}, {@code \"en\"},
{@code \"zh-TW\"}, and {@code \"zh-HK\"}), the newly generated Language
Priority List which is customized using the above map example will
consists of {@code \"zh\"}, {@code \"zh-Hans\"}, {@code \"zh-CN\"},
{@code \"zh-Hans-CN\"}, {@code \"en\"}, {@code \"zh-TW\"}, and
{@code \"zh-HK\"}.

<p>{@code \"zh-HK\"} and {@code \"zh-TW\"} aren't converted to
{@code \"zh-Hans-HK\"} nor {@code \"zh-Hans-TW\"} even if they are
included in the Language Priority List. In this example, mapping
is used to clearly distinguish Simplified Chinese and Traditional
Chinese.

<p>If the {@code \"zh\"}-to-{@code \"zh\"} mapping isn't included in the
map, a simple replacement will be performed and the customized list
won't include {@code \"zh\"} and {@code \"zh-CN\"}.

@param priorityList user's Language Priority List
@param map a map containing information to customize language ranges
@return a new Language Priority List with customization. The list is
    modifiable.
@throws NullPointerException if {@code priorityList} is {@code null}
@see #parse(String, Map)
"
	end

	operation 8856194 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns a hash code value for the object.

@return  a hash code value for this object.
"
	end

	operation 8856322 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Compares this object to the specified object. The result is true if
and only if the argument is not {@code null} and is a
{@code LanguageRange} object that contains the same {@code range}
and {@code weight} values as this object.

@param obj the object to compare with
@return  {@code true} if this object's {@code range} and
    {@code weight} are the same as the {@code obj}'s; {@code false}
    otherwise.
"
	end
      end

      operation 8856450 "filter"
	class_operation public return_type class_ref 175362 // List
	nparams 3
	  param inout name "priorityList" type class_ref 175362 // List
	  param inout name "locales" type class_ref 184194 // Collection
	  param inout name "mode" type class_ref 1087618 // FilteringMode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Locale> ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<Locale> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of matching {@code Locale} instances using the filtering
mechanism defined in RFC 4647.

@param priorityList user's Language Priority List in which each language
    tag is sorted in descending order based on priority or weight
@param locales {@code Locale} instances used for matching
@param mode filtering mode
@return a list of {@code Locale} instances for matching language tags
    sorted in descending order based on priority or weight, or an empty
    list if nothing matches. The list is modifiable.
@throws NullPointerException if {@code priorityList} or {@code locales}
    is {@code null}
@throws IllegalArgumentException if one or more extended language ranges
    are included in the given list when
    {@link FilteringMode#REJECT_EXTENDED_RANGES} is specified

@since 1.8
"
      end

      operation 8856578 "filter"
	class_operation public return_type class_ref 175362 // List
	nparams 2
	  param inout name "priorityList" type class_ref 175362 // List
	  param inout name "locales" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Locale> ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<Locale> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of matching {@code Locale} instances using the filtering
mechanism defined in RFC 4647. This is equivalent to
{@link #filter(List, Collection, FilteringMode)} when {@code mode} is
{@link FilteringMode#AUTOSELECT_FILTERING}.

@param priorityList user's Language Priority List in which each language
    tag is sorted in descending order based on priority or weight
@param locales {@code Locale} instances used for matching
@return a list of {@code Locale} instances for matching language tags
    sorted in descending order based on priority or weight, or an empty
    list if nothing matches. The list is modifiable.
@throws NullPointerException if {@code priorityList} or {@code locales}
    is {@code null}

@since 1.8
"
      end

      operation 8856706 "filterTags"
	class_operation public return_type class_ref 175362 // List
	nparams 3
	  param inout name "priorityList" type class_ref 175362 // List
	  param inout name "tags" type class_ref 184194 // Collection
	  param inout name "mode" type class_ref 1087618 // FilteringMode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<String> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of matching languages tags using the basic filtering
mechanism defined in RFC 4647.

@param priorityList user's Language Priority List in which each language
    tag is sorted in descending order based on priority or weight
@param tags language tags
@param mode filtering mode
@return a list of matching language tags sorted in descending order
    based on priority or weight, or an empty list if nothing matches.
    The list is modifiable.
@throws NullPointerException if {@code priorityList} or {@code tags} is
    {@code null}
@throws IllegalArgumentException if one or more extended language ranges
    are included in the given list when
    {@link FilteringMode#REJECT_EXTENDED_RANGES} is specified

@since 1.8
"
      end

      operation 8856834 "filterTags"
	class_operation public return_type class_ref 175362 // List
	nparams 2
	  param inout name "priorityList" type class_ref 175362 // List
	  param inout name "tags" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of matching languages tags using the basic filtering
mechanism defined in RFC 4647. This is equivalent to
{@link #filterTags(List, Collection, FilteringMode)} when {@code mode}
is {@link FilteringMode#AUTOSELECT_FILTERING}.

@param priorityList user's Language Priority List in which each language
    tag is sorted in descending order based on priority or weight
@param tags language tags
@return a list of matching language tags sorted in descending order
    based on priority or weight, or an empty list if nothing matches.
    The list is modifiable.
@throws NullPointerException if {@code priorityList} or {@code tags} is
    {@code null}

@since 1.8
"
      end

      operation 8856962 "lookup"
	class_operation public return_type class_ref 312962 // Locale
	nparams 2
	  param inout name "priorityList" type class_ref 175362 // List
	  param inout name "locales" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<Locale> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Locale} instance for the best-matching language
tag using the lookup mechanism defined in RFC 4647.

@param priorityList user's Language Priority List in which each language
    tag is sorted in descending order based on priority or weight
@param locales {@code Locale} instances used for matching
@return the best matching <code>Locale</code> instance chosen based on
    priority or weight, or {@code null} if nothing matches.
@throws NullPointerException if {@code priorityList} or {@code tags} is
    {@code null}

@since 1.8
"
      end

      operation 8857090 "lookupTag"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "priorityList" type class_ref 175362 // List
	  param inout name "tags" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<LanguageRange> ${p0}, ${t1}<String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the best-matching language tag using the lookup mechanism
defined in RFC 4647.

@param priorityList user's Language Priority List in which each language
    tag is sorted in descending order based on priority or weight
@param tags language tangs used for matching
@return the best matching language tag chosen based on priority or
    weight, or {@code null} if nothing matches.
@throws NullPointerException if {@code priorityList} or {@code tags} is
    {@code null}

@since 1.8
"
      end
    end

    class 314882 "EventListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A tagging interface that all event listener interfaces must extend.
@since JDK1.1
"
    end

    class 318722 "ListResourceBundle"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>ListResourceBundle</code> is an abstract subclass of
<code>ResourceBundle</code> that manages resources for a locale
in a convenient and easy to use list. See <code>ResourceBundle</code> for
more information about resource bundles in general.

<P>
Subclasses must override <code>getContents</code> and provide an array,
where each item in the array is a pair of objects.
The first element of each pair is the key, which must be a
<code>String</code>, and the second element is the value associated with
that key.

<p>
The following <a name=\"sample\">example</a> shows two members of a resource
bundle family with the base name \"MyResources\".
\"MyResources\" is the default member of the bundle family, and
\"MyResources_fr\" is the French member.
These members are based on <code>ListResourceBundle</code>
(a related <a href=\"PropertyResourceBundle.html#sample\">example</a> shows
how you can add a bundle to this family that's based on a properties file).
The keys in this example are of the form \"s1\" etc. The actual
keys are entirely up to your choice, so long as they are the same as
the keys you use in your program to retrieve the objects from the bundle.
Keys are case-sensitive.
<blockquote>
<pre>

public class MyResources extends ListResourceBundle {
    protected Object[][] getContents() {
        return new Object[][] {
        // LOCALIZE THIS
            {\"s1\", \"The disk \\\"{1}\\\" contains {0}.\"},  // MessageFormat pattern
            {\"s2\", \"1\"},                               // location of {0} in pattern
            {\"s3\", \"My Disk\"},                         // sample disk name
            {\"s4\", \"no files\"},                        // first ChoiceFormat choice
            {\"s5\", \"one file\"},                        // second ChoiceFormat choice
            {\"s6\", \"{0,number} files\"},                // third ChoiceFormat choice
            {\"s7\", \"3 Mar 96\"},                        // sample date
            {\"s8\", new Dimension(1,5)}                 // real object, not just string
        // END OF MATERIAL TO LOCALIZE
        };
    }
}

public class MyResources_fr extends ListResourceBundle {
    protected Object[][] getContents() {
        return new Object[][] {
        // LOCALIZE THIS
            {\"s1\", \"Le disque \\\"{1}\\\" {0}.\"},          // MessageFormat pattern
            {\"s2\", \"1\"},                               // location of {0} in pattern
            {\"s3\", \"Mon disque\"},                      // sample disk name
            {\"s4\", \"ne contient pas de fichiers\"},     // first ChoiceFormat choice
            {\"s5\", \"contient un fichier\"},             // second ChoiceFormat choice
            {\"s6\", \"contient {0,number} fichiers\"},    // third ChoiceFormat choice
            {\"s7\", \"3 mars 1996\"},                     // sample date
            {\"s8\", new Dimension(1,3)}                 // real object, not just string
        // END OF MATERIAL TO LOCALIZE
        };
    }
}
</pre>
</blockquote>

<p>
The implementation of a {@code ListResourceBundle} subclass must be thread-safe
if it's simultaneously used by multiple threads. The default implementations
of the methods in this class are thread-safe.

@see ResourceBundle
@see PropertyResourceBundle
@since JDK1.1
"
      classrelation 544642 // <generalisation>
	relation 544642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 544642 // <generalisation>
	  b parent class_ref 249858 // ResourceBundle
      end

      operation 1739522 "ListResourceBundle"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 1739650 "handleGetObject"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implements java.util.ResourceBundle.handleGetObject; inherits javadoc specification."
      end

      operation 1739778 "getKeys"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Enumeration</code> of the keys contained in
this <code>ResourceBundle</code> and its parent bundles.

@return an <code>Enumeration</code> of the keys contained in
        this <code>ResourceBundle</code> and its parent bundles.
@see #keySet()
"
      end

      operation 1739906 "handleKeySet"
	protected return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Set</code> of the keys contained
<em>only</em> in this <code>ResourceBundle</code>.

@return a <code>Set</code> of the keys contained only in this
        <code>ResourceBundle</code>
@since 1.6
@see #keySet()
"
      end

      operation 1740034 "getContents"
	abstract protected return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array in which each item is a pair of objects in an
<code>Object</code> array. The first element of each pair is
the key, which must be a <code>String</code>, and the second
element is the value associated with that key.  See the class
description for details.

@return an array of an <code>Object</code> array representing a
key-value pair.
"
      end

      operation 1740162 "loadLookup"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ==================privates====================

We lazily load the lookup hashtable.  This function does the
loading.
"
      end

      classrelation 544770 // lookup (<unidirectional association>)
	relation 544770 --->
	  a role_name "lookup" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Object> ${name}${value};
"
	    classrelation_ref 544770 // lookup (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end
    end

    class 353922 "TooManyListenersException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
The <code> TooManyListenersException </code> Exception is used as part of
the Java Event model to annotate and implement a unicast special case of
a multicast Event Source.
</p>
<p>
The presence of a \"throws TooManyListenersException\" clause on any given
concrete implementation of the normally multicast \"void addXyzEventListener\"
event listener registration pattern is used to annotate that interface as
implementing a unicast Listener special case, that is, that one and only
one Listener may be registered on the particular event listener source
concurrently.
</p>

@see java.util.EventObject
@see java.util.EventListener

@author Laurence P. G. Cable
@since  JDK1.1
"
      classrelation 3552130 // <generalisation>
	relation 3552130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3552130 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2088578 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5074640544770687831L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8938114 "TooManyListenersException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a TooManyListenersException with no detail message.
A detail message is a String that describes this particular exception.
"
      end

      operation 8938242 "TooManyListenersException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a TooManyListenersException with the specified detail message.
A detail message is a String that describes this particular exception.
@param s the detail message
"
      end
    end

    class 377858 "LinkedHashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 132866 // HashMap
        rank 0 explicit_value ""
      actual class class_ref 132866 // HashMap
        rank 1 explicit_value ""
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Hash table and linked list implementation of the <tt>Map</tt> interface,
with predictable iteration order.  This implementation differs from
<tt>HashMap</tt> in that it maintains a doubly-linked list running through
all of its entries.  This linked list defines the iteration ordering,
which is normally the order in which keys were inserted into the map
(<i>insertion-order</i>).  Note that insertion order is not affected
if a key is <i>re-inserted</i> into the map.  (A key <tt>k</tt> is
reinserted into a map <tt>m</tt> if <tt>m.put(k, v)</tt> is invoked when
<tt>m.containsKey(k)</tt> would return <tt>true</tt> immediately prior to
the invocation.)

<p>This implementation spares its clients from the unspecified, generally
chaotic ordering provided by {@link HashMap} (and {@link Hashtable}),
without incurring the increased cost associated with {@link TreeMap}.  It
can be used to produce a copy of a map that has the same order as the
original, regardless of the original map's implementation:
<pre>
    void foo(Map m) {
        Map copy = new LinkedHashMap(m);
        ...
    }
</pre>
This technique is particularly useful if a module takes a map on input,
copies it, and later returns results whose order is determined by that of
the copy.  (Clients generally appreciate having things returned in the same
order they were presented.)

<p>A special {@link #LinkedHashMap(int,float,boolean) constructor} is
provided to create a linked hash map whose order of iteration is the order
in which its entries were last accessed, from least-recently accessed to
most-recently (<i>access-order</i>).  This kind of map is well-suited to
building LRU caches.  Invoking the {@code put}, {@code putIfAbsent},
{@code get}, {@code getOrDefault}, {@code compute}, {@code computeIfAbsent},
{@code computeIfPresent}, or {@code merge} methods results
in an access to the corresponding entry (assuming it exists after the
invocation completes). The {@code replace} methods only result in an access
of the entry if the value is replaced.  The {@code putAll} method generates one
entry access for each mapping in the specified map, in the order that
key-value mappings are provided by the specified map's entry set iterator.
<i>No other methods generate entry accesses.</i>  In particular, operations
on collection-views do <i>not</i> affect the order of iteration of the
backing map.

<p>The {@link #removeEldestEntry(Map.Entry)} method may be overridden to
impose a policy for removing stale mappings automatically when new mappings
are added to the map.

<p>This class provides all of the optional <tt>Map</tt> operations, and
permits null elements.  Like <tt>HashMap</tt>, it provides constant-time
performance for the basic operations (<tt>add</tt>, <tt>contains</tt> and
<tt>remove</tt>), assuming the hash function disperses elements
properly among the buckets.  Performance is likely to be just slightly
below that of <tt>HashMap</tt>, due to the added expense of maintaining the
linked list, with one exception: Iteration over the collection-views
of a <tt>LinkedHashMap</tt> requires time proportional to the <i>size</i>
of the map, regardless of its capacity.  Iteration over a <tt>HashMap</tt>
is likely to be more expensive, requiring time proportional to its
<i>capacity</i>.

<p>A linked hash map has two parameters that affect its performance:
<i>initial capacity</i> and <i>load factor</i>.  They are defined precisely
as for <tt>HashMap</tt>.  Note, however, that the penalty for choosing an
excessively high value for initial capacity is less severe for this class
than for <tt>HashMap</tt>, as iteration times for this class are unaffected
by capacity.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a linked hash map concurrently, and at least
one of the threads modifies the map structurally, it <em>must</em> be
synchronized externally.  This is typically accomplished by
synchronizing on some object that naturally encapsulates the map.

If no such object exists, the map should be \"wrapped\" using the
{@link Collections#synchronizedMap Collections.synchronizedMap}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the map:<pre>
  Map m = Collections.synchronizedMap(new LinkedHashMap(...));</pre>

A structural modification is any operation that adds or deletes one or more
mappings or, in the case of access-ordered linked hash maps, affects
iteration order.  In insertion-ordered linked hash maps, merely changing
the value associated with a key that is already contained in the map is not
a structural modification.  <strong>In access-ordered linked hash maps,
merely querying the map with <tt>get</tt> is a structural modification.
</strong>)

<p>The iterators returned by the <tt>iterator</tt> method of the collections
returned by all of this class's collection view methods are
<em>fail-fast</em>: if the map is structurally modified at any time after
the iterator is created, in any way except through the iterator's own
<tt>remove</tt> method, the iterator will throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:   <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>The spliterators returned by the spliterator method of the collections
returned by all of this class's collection view methods are
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>,
<em>fail-fast</em>, and additionally report {@link Spliterator#ORDERED}.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@implNote
The spliterators returned by the spliterator method of the collections
returned by all of this class's collection view methods are created from
the iterators of the corresponding collections.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author  Josh Bloch
@see     Object#hashCode()
@see     Collection
@see     Map
@see     HashMap
@see     TreeMap
@see     Hashtable
@since   1.4
"
      class 377986 "Entry"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 672642 // <realization>
	relation 672642 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 672642 // <realization>
	  b parent class_ref 132866 // HashMap
      end

      classrelation 672770 // <realization>
	relation 672770 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 672770 // <realization>
	  b parent class_ref 130178 // Map
      end
    end

    class 380418 "StringTokenizer"
      visibility public 
      nactuals 1
      actual class class_ref 185986 // Enumeration
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The string tokenizer class allows an application to break a
string into tokens. The tokenization method is much simpler than
the one used by the <code>StreamTokenizer</code> class. The
<code>StringTokenizer</code> methods do not distinguish among
identifiers, numbers, and quoted strings, nor do they recognize
and skip comments.
<p>
The set of delimiters (the characters that separate tokens) may
be specified either at creation time or on a per-token basis.
<p>
An instance of <code>StringTokenizer</code> behaves in one of two
ways, depending on whether it was created with the
<code>returnDelims</code> flag having the value <code>true</code>
or <code>false</code>:
<ul>
<li>If the flag is <code>false</code>, delimiter characters serve to
    separate tokens. A token is a maximal sequence of consecutive
    characters that are not delimiters.
<li>If the flag is <code>true</code>, delimiter characters are themselves
    considered to be tokens. A token is thus either one delimiter
    character, or a maximal sequence of consecutive characters that are
    not delimiters.
</ul><p>
A <tt>StringTokenizer</tt> object internally maintains a current
position within the string to be tokenized. Some operations advance this
current position past the characters processed.<p>
A token is returned by taking a substring of the string that was used to
create the <tt>StringTokenizer</tt> object.
<p>
The following is one example of the use of the tokenizer. The code:
<blockquote><pre>
    StringTokenizer st = new StringTokenizer(\"this is a test\");
    while (st.hasMoreTokens()) {
        System.out.println(st.nextToken());
    }
</pre></blockquote>
<p>
prints the following output:
<blockquote><pre>
    this
    is
    a
    test
</pre></blockquote>

<p>
<tt>StringTokenizer</tt> is a legacy class that is retained for
compatibility reasons although its use is discouraged in new code. It is
recommended that anyone seeking this functionality use the <tt>split</tt>
method of <tt>String</tt> or the java.util.regex package instead.
<p>
The following example illustrates how the <tt>String.split</tt>
method can be used to break up a string into its basic tokens:
<blockquote><pre>
    String[] result = \"this is a test\".split(\"\\\\s\");
    for (int x=0; x&lt;result.length; x++)
        System.out.println(result[x]);
</pre></blockquote>
<p>
prints the following output:
<blockquote><pre>
    this
    is
    a
    test
</pre></blockquote>

@author  unascribed
@see     java.io.StreamTokenizer
@since   JDK1.0
"
      classrelation 678786 // <realization>
	relation 678786 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 678786 // <realization>
	  b parent class_ref 185986 // Enumeration
      end

      attribute 497410 "currentPosition"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 497538 "newPosition"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 497666 "maxPosition"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 678914 // str (<unidirectional association>)
	relation 678914 --->
	  a role_name "str" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 678914 // str (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 679042 // delimiters (<unidirectional association>)
	relation 679042 --->
	  a role_name "delimiters" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 679042 // delimiters (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 497794 "retDelims"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 497922 "delimsChanged"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 498050 "maxDelimCodePoint"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "maxDelimCodePoint stores the value of the delimiter character with the
highest value. It is used to optimize the detection of delimiter
characters.

It is unlikely to provide any optimization benefit in the
hasSurrogates case because most string characters will be
smaller than the limit, but we keep it so that the two code
paths remain similar.

"
      end

      attribute 498178 "hasSurrogates"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If delimiters include any surrogates (including surrogate
pairs), hasSurrogates is true and the tokenizer uses the
different code path. This is because String.indexOf(int)
doesn't handle unpaired surrogates as a single character.

"
      end

      attribute 498306 "delimiterCodePoints"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When hasSurrogates is true, delimiters are converted to code
points and isDelimiter(int) is used to determine if the given
codepoint is a delimiter.

"
      end

      operation 2164098 "setMaxDelimCodePoint"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set maxDelimCodePoint to the highest char in the delimiter set.
"
      end

      operation 2164226 "StringTokenizer"
	public explicit_return_type ""
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param inout name "delim" type class_ref 128130 // String
	  param inout name "returnDelims" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string tokenizer for the specified string. All
characters in the <code>delim</code> argument are the delimiters
for separating tokens.
<p>
If the <code>returnDelims</code> flag is <code>true</code>, then
the delimiter characters are also returned as tokens. Each
delimiter is returned as a string of length one. If the flag is
<code>false</code>, the delimiter characters are skipped and only
serve as separators between tokens.
<p>
Note that if <tt>delim</tt> is <tt>null</tt>, this constructor does
not throw an exception. However, trying to invoke other methods on the
resulting <tt>StringTokenizer</tt> may result in a
<tt>NullPointerException</tt>.

@param   str            a string to be parsed.
@param   delim          the delimiters.
@param   returnDelims   flag indicating whether to return the delimiters
                        as tokens.
@exception NullPointerException if str is <CODE>null</CODE>
"
      end

      operation 2164354 "StringTokenizer"
	public explicit_return_type ""
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param inout name "delim" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string tokenizer for the specified string. The
characters in the <code>delim</code> argument are the delimiters
for separating tokens. Delimiter characters themselves will not
be treated as tokens.
<p>
Note that if <tt>delim</tt> is <tt>null</tt>, this constructor does
not throw an exception. However, trying to invoke other methods on the
resulting <tt>StringTokenizer</tt> may result in a
<tt>NullPointerException</tt>.

@param   str     a string to be parsed.
@param   delim   the delimiters.
@exception NullPointerException if str is <CODE>null</CODE>
"
      end

      operation 2164482 "StringTokenizer"
	public explicit_return_type ""
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string tokenizer for the specified string. The
tokenizer uses the default delimiter set, which is
<code>\"&nbsp;&#92;t&#92;n&#92;r&#92;f\"</code>: the space character,
the tab character, the newline character, the carriage-return character,
and the form-feed character. Delimiter characters themselves will
not be treated as tokens.

@param   str   a string to be parsed.
@exception NullPointerException if str is <CODE>null</CODE>
"
      end

      operation 2164610 "skipDelimiters"
	private explicit_return_type "int"
	nparams 1
	  param in name "startPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips delimiters starting from the specified position. If retDelims
is false, returns the index of the first non-delimiter character at or
after startPos. If retDelims is true, startPos is returned.
"
      end

      operation 2164738 "scanToken"
	private explicit_return_type "int"
	nparams 1
	  param in name "startPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips ahead from startPos and returns the index of the next delimiter
character encountered, or maxPosition if no such delimiter is found.
"
      end

      operation 2164866 "isDelimiter"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2164994 "hasMoreTokens"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if there are more tokens available from this tokenizer's string.
If this method returns <tt>true</tt>, then a subsequent call to
<tt>nextToken</tt> with no argument will successfully return a token.

@return  <code>true</code> if and only if there is at least one token
         in the string after the current position; <code>false</code>
         otherwise.
"
      end

      operation 2165122 "nextToken"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token from this string tokenizer.

@return     the next token from this string tokenizer.
@exception  NoSuchElementException  if there are no more tokens in this
              tokenizer's string.
"
      end

      operation 2165250 "nextToken"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "delim" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token in this string tokenizer's string. First,
the set of characters considered to be delimiters by this
<tt>StringTokenizer</tt> object is changed to be the characters in
the string <tt>delim</tt>. Then the next token in the string
after the current position is returned. The current position is
advanced beyond the recognized token.  The new delimiter set
remains the default after this call.

@param      delim   the new delimiters.
@return     the next token, after switching to the new delimiter set.
@exception  NoSuchElementException  if there are no more tokens in this
              tokenizer's string.
@exception NullPointerException if delim is <CODE>null</CODE>
"
      end

      operation 2165378 "hasMoreElements"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the same value as the <code>hasMoreTokens</code>
method. It exists so that this class can implement the
<code>Enumeration</code> interface.

@return  <code>true</code> if there are more tokens;
         <code>false</code> otherwise.
@see     java.util.Enumeration
@see     java.util.StringTokenizer#hasMoreTokens()
"
      end

      operation 2165506 "nextElement"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the same value as the <code>nextToken</code> method,
except that its declared return value is <code>Object</code> rather than
<code>String</code>. It exists so that this class can implement the
<code>Enumeration</code> interface.

@return     the next token in the string.
@exception  NoSuchElementException  if there are no more tokens in this
              tokenizer's string.
@see        java.util.Enumeration
@see        java.util.StringTokenizer#nextToken()
"
      end

      operation 2165634 "countTokens"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the number of times that this tokenizer's
<code>nextToken</code> method can be called before it generates an
exception. The current position is not advanced.

@return  the number of tokens remaining in the string using the current
         delimiter set.
@see     java.util.StringTokenizer#nextToken()
"
      end
    end

    class 388482 "HashSet"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 255618 // AbstractSet
        rank 0 explicit_value ""
      actual class class_ref 192258 // Set
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements the <tt>Set</tt> interface, backed by a hash table
(actually a <tt>HashMap</tt> instance).  It makes no guarantees as to the
iteration order of the set; in particular, it does not guarantee that the
order will remain constant over time.  This class permits the <tt>null</tt>
element.

<p>This class offers constant time performance for the basic operations
(<tt>add</tt>, <tt>remove</tt>, <tt>contains</tt> and <tt>size</tt>),
assuming the hash function disperses the elements properly among the
buckets.  Iterating over this set requires time proportional to the sum of
the <tt>HashSet</tt> instance's size (the number of elements) plus the
\"capacity\" of the backing <tt>HashMap</tt> instance (the number of
buckets).  Thus, it's very important not to set the initial capacity too
high (or the load factor too low) if iteration performance is important.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a hash set concurrently, and at least one of
the threads modifies the set, it <i>must</i> be synchronized externally.
This is typically accomplished by synchronizing on some object that
naturally encapsulates the set.

If no such object exists, the set should be \"wrapped\" using the
{@link Collections#synchronizedSet Collections.synchronizedSet}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the set:<pre>
  Set s = Collections.synchronizedSet(new HashSet(...));</pre>

<p>The iterators returned by this class's <tt>iterator</tt> method are
<i>fail-fast</i>: if the set is modified at any time after the iterator is
created, in any way except through the iterator's own <tt>remove</tt>
method, the Iterator throws a {@link ConcurrentModificationException}.
Thus, in the face of concurrent modification, the iterator fails quickly
and cleanly, rather than risking arbitrary, non-deterministic behavior at
an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements maintained by this set

@author  Josh Bloch
@author  Neal Gafter
@see     Collection
@see     Set
@see     TreeSet
@see     HashMap
@since   1.2
"
      classrelation 3520130 // <realization>
	relation 3520130 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3520130 // <realization>
	  b parent class_ref 255618 // AbstractSet
      end

      classrelation 3520258 // <realization>
	relation 3520258 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3520258 // <realization>
	  b parent class_ref 192258 // Set
      end

      classrelation 3520386 // <realization>
	relation 3520386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3520386 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3520514 // <realization>
	relation 3520514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3520514 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2052610 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5024744406713321676L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3520642 // map (<unidirectional association>)
	relation 3520642 --->
	  a role_name "map" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E,Object> ${name}${value};
"
	    classrelation_ref 3520642 // map (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 3520770 // PRESENT (<unidirectional association>)
	relation 3520770 --->
	  a role_name "PRESENT" init_value " new Object()" class_relation const_relation private
	    comment " Dummy value to associate with an Object in the backing Map
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3520770 // PRESENT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 8811138 "HashSet"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty set; the backing <tt>HashMap</tt> instance has
default initial capacity (16) and load factor (0.75).
"
      end

      operation 8811266 "HashSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new set containing the elements in the specified
collection.  The <tt>HashMap</tt> is created with default load factor
(0.75) and an initial capacity sufficient to contain the elements in
the specified collection.

@param c the collection whose elements are to be placed into this set
@throws NullPointerException if the specified collection is null
"
      end

      operation 8811394 "HashSet"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty set; the backing <tt>HashMap</tt> instance has
the specified initial capacity and the specified load factor.

@param      initialCapacity   the initial capacity of the hash map
@param      loadFactor        the load factor of the hash map
@throws     IllegalArgumentException if the initial capacity is less
            than zero, or if the load factor is nonpositive
"
      end

      operation 8811522 "HashSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty set; the backing <tt>HashMap</tt> instance has
the specified initial capacity and default load factor (0.75).

@param      initialCapacity   the initial capacity of the hash table
@throws     IllegalArgumentException if the initial capacity is less
            than zero
"
      end

      operation 8811650 "HashSet"
	cpp_inline package explicit_return_type ""
	nparams 3
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	  param inout name "dummy" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty linked hash set.  (This package private
constructor is only used by LinkedHashSet.) The backing
HashMap instance is a LinkedHashMap with the specified initial
capacity and the specified load factor.

@param      initialCapacity   the initial capacity of the hash map
@param      loadFactor        the load factor of the hash map
@param      dummy             ignored (distinguishes this
            constructor from other int, float constructor.)
@throws     IllegalArgumentException if the initial capacity is less
            than zero, or if the load factor is nonpositive
"
      end

      operation 8811778 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set.  The elements
are returned in no particular order.

@return an Iterator over the elements in this set
@see ConcurrentModificationException
"
      end

      operation 8811906 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this set (its cardinality).

@return the number of elements in this set (its cardinality)
"
      end

      operation 8812034 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains no elements.

@return <tt>true</tt> if this set contains no elements
"
      end

      operation 8812162 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains the specified element.
More formally, returns <tt>true</tt> if and only if this set
contains an element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this set is to be tested
@return <tt>true</tt> if this set contains the specified element
"
      end

      operation 8812290 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified element to this set if it is not already present.
More formally, adds the specified element <tt>e</tt> to this set if
this set contains no element <tt>e2</tt> such that
<tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>.
If this set already contains the element, the call leaves the set
unchanged and returns <tt>false</tt>.

@param e element to be added to this set
@return <tt>true</tt> if this set did not already contain the specified
element
"
      end

      operation 8812418 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified element from this set if it is present.
More formally, removes an element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>,
if this set contains such an element.  Returns <tt>true</tt> if
this set contained the element (or equivalently, if this set
changed as a result of the call).  (This set will not contain the
element once the call returns.)

@param o object to be removed from this set, if present
@return <tt>true</tt> if the set contained the specified element
"
      end

      operation 8812546 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this set.
The set will be empty after this call returns.
"
      end

      operation 8812674 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a shallow copy of this <tt>HashSet</tt> instance: the elements
themselves are not cloned.

@return a shallow copy of this set
"
      end

      operation 8812802 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of this <tt>HashSet</tt> instance to a stream (that is,
serialize it).

@serialData The capacity of the backing <tt>HashMap</tt> instance
            (int), and its load factor (float) are emitted, followed by
            the size of the set (the number of elements it contains)
            (int), followed by all of its elements (each an Object) in
            no particular order.
"
      end

      operation 8812930 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the <tt>HashSet</tt> instance from a stream (that is,
deserialize it).
"
      end

      operation 8813058 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <em><a href=\"Spliterator.html#binding\">late-binding</a></em>
and <em>fail-fast</em> {@link Spliterator} over the elements in this
set.

<p>The {@code Spliterator} reports {@link Spliterator#SIZED} and
{@link Spliterator#DISTINCT}.  Overriding implementations should document
the reporting of additional characteristic values.

@return a {@code Spliterator} over the elements in this set
@since 1.8
"
      end
    end

    class 458498 "EnumMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends "Enum<K>"
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 192130 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 192130 // AbstractMap
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A specialized {@link Map} implementation for use with enum type keys.  All
of the keys in an enum map must come from a single enum type that is
specified, explicitly or implicitly, when the map is created.  Enum maps
are represented internally as arrays.  This representation is extremely
compact and efficient.

<p>Enum maps are maintained in the <i>natural order</i> of their keys
(the order in which the enum constants are declared).  This is reflected
in the iterators returned by the collections views ({@link #keySet()},
{@link #entrySet()}, and {@link #values()}).

<p>Iterators returned by the collection views are <i>weakly consistent</i>:
they will never throw {@link ConcurrentModificationException} and they may
or may not show the effects of any modifications to the map that occur while
the iteration is in progress.

<p>Null keys are not permitted.  Attempts to insert a null key will
throw {@link NullPointerException}.  Attempts to test for the
presence of a null key or to remove one will, however, function properly.
Null values are permitted.

<P>Like most collection implementations <tt>EnumMap</tt> is not
synchronized. If multiple threads access an enum map concurrently, and at
least one of the threads modifies the map, it should be synchronized
externally.  This is typically accomplished by synchronizing on some
object that naturally encapsulates the enum map.  If no such object exists,
the map should be \"wrapped\" using the {@link Collections#synchronizedMap}
method.  This is best done at creation time, to prevent accidental
unsynchronized access:

<pre>
    Map&lt;EnumKey, V&gt; m
        = Collections.synchronizedMap(new EnumMap&lt;EnumKey, V&gt;(...));
</pre>

<p>Implementation note: All basic operations execute in constant time.
They are likely (though not guaranteed) to be faster than their
{@link HashMap} counterparts.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author Josh Bloch
@see EnumSet
@since 1.5
"
      classrelation 3513346 // <realization>
	relation 3513346 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3513346 // <realization>
	  b parent class_ref 192130 // AbstractMap
      end

      classrelation 3513474 // <realization>
	relation 3513474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3513474 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3513602 // <realization>
	relation 3513602 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3513602 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3513730 // keyType (<unidirectional association>)
	relation 3513730 --->
	  a role_name "keyType" const_relation private
	    comment "
The <tt>Class</tt> object for the enum type of all the keys of this map.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 3513730 // keyType (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      attribute 2038402 "keyUniverse"
	private explicit_type "K"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "All of the values comprising K.  (Cached for performance.)

"
      end

      classrelation 3513858 // vals (<unidirectional association>)
	relation 3513858 --->
	  a role_name "vals" multiplicity "[]" private
	    comment "
Array representation of this map.  The ith element is the value
to which universe[i] is currently mapped, or null if it isn't
mapped to anything, or NULL if it's mapped to null.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3513858 // vals (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2038530 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of mappings in this map.

"
      end

      classrelation 3513986 // NULL (<unidirectional association>)
	relation 3513986 --->
	  a role_name "NULL" init_value " new Object() {
        public int hashCode() {
            return 0;
        }

        public String toString() {
            return \"java.util.EnumMap.NULL\";
        }
    }" class_relation const_relation private
	    comment "
Distinguished non-null value for representing null values.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3513986 // NULL (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 8776834 "maskNull"
	cpp_inline private return_type class_ref 129538 // Object
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8776962 "unmaskNull"
	cpp_inline private explicit_return_type "V"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      classrelation 3514114 // ZERO_LENGTH_ENUM_ARRAY (<unidirectional association>)
	relation 3514114 --->
	  a role_name "ZERO_LENGTH_ENUM_ARRAY" multiplicity "[]" init_value " new Enum<?>[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	    classrelation_ref 3514114 // ZERO_LENGTH_ENUM_ARRAY (<unidirectional association>)
	  b parent class_ref 172034 // Enum
      end

      operation 8777090 "EnumMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "keyType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty enum map with the specified key type.

@param keyType the class object of the key type for this enum map
@throws NullPointerException if <tt>keyType</tt> is null
"
      end

      operation 8777218 "EnumMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 458498 // EnumMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum map with the same key type as the specified enum
map, initially containing the same mappings (if any).

@param m the enum map from which to initialize this enum map
@throws NullPointerException if <tt>m</tt> is null
"
      end

      operation 8777346 "EnumMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum map initialized from the specified map.  If the
specified map is an <tt>EnumMap</tt> instance, this constructor behaves
identically to {@link #EnumMap(EnumMap)}.  Otherwise, the specified map
must contain at least one mapping (in order to determine the new
enum map's key type).

@param m the map from which to initialize this enum map
@throws IllegalArgumentException if <tt>m</tt> is not an
    <tt>EnumMap</tt> instance and contains no mappings
@throws NullPointerException if <tt>m</tt> is null
"
      end

      operation 8777474 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns the number of key-value mappings in this map.

@return the number of key-value mappings in this map
"
      end

      operation 8777602 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map maps one or more keys to the
specified value.

@param value the value whose presence in this map is to be tested
@return <tt>true</tt> if this map maps one or more keys to this value
"
      end

      operation 8777730 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this map contains a mapping for the specified
key.

@param key the key whose presence in this map is to be tested
@return <tt>true</tt> if this map contains a mapping for the specified
           key
"
      end

      operation 8777858 "containsMapping"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8777986 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code (key == k)},
then this method returns {@code v}; otherwise it returns
{@code null}.  (There can be at most one such mapping.)

<p>A return value of {@code null} does not <i>necessarily</i>
indicate that the map contains no mapping for the key; it's also
possible that the map explicitly maps the key to {@code null}.
The {@link #containsKey containsKey} operation may be used to
distinguish these two cases.
"
      end

      operation 8778114 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Associates the specified value with the specified key in this map.
If the map previously contained a mapping for this key, the old
value is replaced.

@param key the key with which the specified value is to be associated
@param value the value to be associated with the specified key

@return the previous value associated with specified key, or
    <tt>null</tt> if there was no mapping for key.  (A <tt>null</tt>
    return can also indicate that the map previously associated
    <tt>null</tt> with the specified key.)
@throws NullPointerException if the specified key is null
"
      end

      operation 8778242 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping for this key from this map if present.

@param key the key whose mapping is to be removed from the map
@return the previous value associated with specified key, or
    <tt>null</tt> if there was no entry for key.  (A <tt>null</tt>
    return can also indicate that the map previously associated
    <tt>null</tt> with the specified key.)
"
      end

      operation 8778370 "removeMapping"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8778498 "isValidKey"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if key is of the proper type to be a key in this
enum map.
"
      end

      operation 8778626 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Copies all of the mappings from the specified map to this map.
These mappings will replace any mappings that this map had for
any of the keys currently in the specified map.

@param m the mappings to be stored in this map
@throws NullPointerException the specified map is null, or if
    one or more keys in the specified map are null
"
      end

      operation 8778754 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all mappings from this map.
"
      end

      classrelation 3514242 // entrySet (<unidirectional association>)
	relation 3514242 --->
	  a role_name "entrySet" private
	    comment " Views

This field is initialized to contain an instance of the entry set
view the first time this view is requested.  The view is stateless,
so there's no reason to create more than one.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	    classrelation_ref 3514242 // entrySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      operation 8778882 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the keys contained in this map.
The returned set obeys the general contract outlined in
{@link Map#keySet()}.  The set's iterator will return the keys
in their natural order (the order in which the enum constants
are declared).

@return a set view of the keys contained in this enum map
"
      end

      class 1080962 "KeySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3514370 // <realization>
	  relation 3514370 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3514370 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 8779010 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8779138 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8779266 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8779394 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8779522 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8779650 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.
The returned collection obeys the general contract outlined in
{@link Map#values()}.  The collection's iterator will return the
values in the order their corresponding keys appear in map,
which is their natural order (the order in which the enum constants
are declared).

@return a collection view of the values contained in this map
"
      end

      class 1081090 "Values"
	visibility private 
	nactuals 1
	actual class class_ref 184066 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3514498 // <realization>
	  relation 3514498 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3514498 // <realization>
	    b parent class_ref 184066 // AbstractCollection
	end

	operation 8779778 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8779906 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8780034 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8780162 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8780290 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8780418 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.
The returned set obeys the general contract outlined in
{@link Map#keySet()}.  The set's iterator will return the
mappings in the order their keys appear in map, which is their
natural order (the order in which the enum constants are declared).

@return a set view of the mappings contained in this enum map
"
      end

      class 1081218 "EntrySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3514626 // <realization>
	  relation 3514626 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3514626 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 8780546 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8780674 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8780802 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8780930 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8781058 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8781186 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8781314 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8781442 "fillEntryArray"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "a" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1081346 "EnumMapIterator"
	abstract visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3514754 // <realization>
	  relation 3514754 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3514754 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 2038658 "index"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Lower bound on index of next element to return
"
	end

	attribute 2038786 "lastReturnedIndex"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Index of last returned element, or -1 if none
"
	end

	operation 8781570 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8781698 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8781826 "checkLastReturnedIndex"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1081474 "KeyIterator"
	visibility private 
	nactuals 3
	actual class class_ref 458498 // EnumMap
	  rank 0 explicit_value ""
	actual class class_ref 458498 // EnumMap
	  rank 1 explicit_value ""
	actual class class_ref 1081346 // EnumMapIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3514882 // <realization>
	  relation 3514882 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3514882 // <realization>
	    b parent class_ref 1081346 // EnumMapIterator
	end

	operation 8781954 "next"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1081602 "ValueIterator"
	visibility private 
	nactuals 3
	actual class class_ref 458498 // EnumMap
	  rank 0 explicit_value ""
	actual class class_ref 458498 // EnumMap
	  rank 1 explicit_value ""
	actual class class_ref 1081346 // EnumMapIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3515010 // <realization>
	  relation 3515010 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3515010 // <realization>
	    b parent class_ref 1081346 // EnumMapIterator
	end

	operation 8782082 "next"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1081730 "EntryIterator"
	visibility private 
	nactuals 3
	actual class class_ref 458498 // EnumMap
	  rank 0 explicit_value ""
	actual class class_ref 458498 // EnumMap
	  rank 1 explicit_value ""
	actual class class_ref 1081346 // EnumMapIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3515138 // <realization>
	  relation 3515138 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3515138 // <realization>
	    b parent class_ref 1081346 // EnumMapIterator
	end

	class 1081858 "Entry"
	  visibility private 
	  nactuals 4
	  actual class class_ref 130178 // Map
	    rank 0 explicit_value ""
	  actual class class_ref 130178 // Map
	    rank 1 explicit_value ""
	  actual class class_ref 192386 // Entry
	    rank 0 explicit_value ""
	  actual class class_ref 192386 // Entry
	    rank 1 explicit_value ""
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3515394 // <realization>
	    relation 3515394 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3515394 // <realization>
	      b parent class_ref 192386 // Entry
	  end

	  attribute 2038914 "index"
	    private explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8782466 "Entry"
	    cpp_inline private explicit_return_type ""
	    nparams 1
	      param in name "index" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8782594 "getKey"
	    cpp_inline public explicit_return_type "K"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8782722 "getValue"
	    cpp_inline public explicit_return_type "V"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8782850 "setValue"
	    cpp_inline public explicit_return_type "V"
	    nparams 1
	      param inout name "value" explicit_type "V"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8782978 "equals"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8783106 "hashCode"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8783234 "toString"
	    cpp_inline public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8783362 "checkIndexForEntryUse"
	    cpp_inline private explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 3515266 // lastReturnedEntry (<unidirectional association>)
	  relation 3515266 --->
	    a role_name "lastReturnedEntry" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3515266 // lastReturnedEntry (<unidirectional association>)
	    b parent class_ref 1081858 // Entry
	end

	operation 8782210 "next"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8782338 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8783490 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison and hashing

Compares the specified object with this map for equality.  Returns
<tt>true</tt> if the given object is also a map and the two maps
represent the same mappings, as specified in the {@link
Map#equals(Object)} contract.

@param o the object to be compared for equality with this map
@return <tt>true</tt> if the specified object is equal to this map
"
      end

      operation 8783618 "equals"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param inout name "em" type class_ref 458498 // EnumMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8783746 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this map.  The hash code of a map is
defined to be the sum of the hash codes of each entry in the map.
"
      end

      operation 8783874 "entryHashCode"
	cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8784002 "clone"
	cpp_inline public return_type class_ref 458498 // EnumMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a shallow copy of this enum map.  (The values themselves
are not cloned.

@return a shallow copy of this enum map
"
      end

      operation 8784130 "typeCheck"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws an exception if e is not of the correct type for this enum set.
"
      end

      operation 8784258 "getKeyUniverse"
	class_operation cpp_inline private explicit_return_type "K"
	nparams 1
	  param inout name "keyType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K extends Enum<K>> ${type}[] ${name}${(}${t0}<K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all of the values comprising K.
The result is uncloned, cached, and shared by all callers.
"
      end

      attribute 2039042 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 458661240069192865L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8784386 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the <tt>EnumMap</tt> instance to a stream (i.e.,
serialize it).

@serialData The <i>size</i> of the enum map (the number of key-value
            mappings) is emitted (int), followed by the key (Object)
            and value (Object) for each key-value mapping represented
            by the enum map.
"
      end

      operation 8784514 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Reconstitute the <tt>EnumMap</tt> instance from a stream (i.e.,
deserialize it).
"
      end
    end

    class 500226 "IdentityHashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 192130 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 192130 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements the <tt>Map</tt> interface with a hash table, using
reference-equality in place of object-equality when comparing keys (and
values).  In other words, in an <tt>IdentityHashMap</tt>, two keys
<tt>k1</tt> and <tt>k2</tt> are considered equal if and only if
<tt>(k1==k2)</tt>.  (In normal <tt>Map</tt> implementations (like
<tt>HashMap</tt>) two keys <tt>k1</tt> and <tt>k2</tt> are considered equal
if and only if <tt>(k1==null ? k2==null : k1.equals(k2))</tt>.)

<p><b>This class is <i>not</i> a general-purpose <tt>Map</tt>
implementation!  While this class implements the <tt>Map</tt> interface, it
intentionally violates <tt>Map's</tt> general contract, which mandates the
use of the <tt>equals</tt> method when comparing objects.  This class is
designed for use only in the rare cases wherein reference-equality
semantics are required.</b>

<p>A typical use of this class is <i>topology-preserving object graph
transformations</i>, such as serialization or deep-copying.  To perform such
a transformation, a program must maintain a \"node table\" that keeps track
of all the object references that have already been processed.  The node
table must not equate distinct objects even if they happen to be equal.
Another typical use of this class is to maintain <i>proxy objects</i>.  For
example, a debugging facility might wish to maintain a proxy object for
each object in the program being debugged.

<p>This class provides all of the optional map operations, and permits
<tt>null</tt> values and the <tt>null</tt> key.  This class makes no
guarantees as to the order of the map; in particular, it does not guarantee
that the order will remain constant over time.

<p>This class provides constant-time performance for the basic
operations (<tt>get</tt> and <tt>put</tt>), assuming the system
identity hash function ({@link System#identityHashCode(Object)})
disperses elements properly among the buckets.

<p>This class has one tuning parameter (which affects performance but not
semantics): <i>expected maximum size</i>.  This parameter is the maximum
number of key-value mappings that the map is expected to hold.  Internally,
this parameter is used to determine the number of buckets initially
comprising the hash table.  The precise relationship between the expected
maximum size and the number of buckets is unspecified.

<p>If the size of the map (the number of key-value mappings) sufficiently
exceeds the expected maximum size, the number of buckets is increased.
Increasing the number of buckets (\"rehashing\") may be fairly expensive, so
it pays to create identity hash maps with a sufficiently large expected
maximum size.  On the other hand, iteration over collection views requires
time proportional to the number of buckets in the hash table, so it
pays not to set the expected maximum size too high if you are especially
concerned with iteration performance or memory usage.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access an identity hash map concurrently, and at
least one of the threads modifies the map structurally, it <i>must</i>
be synchronized externally.  (A structural modification is any operation
that adds or deletes one or more mappings; merely changing the value
associated with a key that an instance already contains is not a
structural modification.)  This is typically accomplished by
synchronizing on some object that naturally encapsulates the map.

If no such object exists, the map should be \"wrapped\" using the
{@link Collections#synchronizedMap Collections.synchronizedMap}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the map:<pre>
  Map m = Collections.synchronizedMap(new IdentityHashMap(...));</pre>

<p>The iterators returned by the <tt>iterator</tt> method of the
collections returned by all of this class's \"collection view
methods\" are <i>fail-fast</i>: if the map is structurally modified
at any time after the iterator is created, in any way except
through the iterator's own <tt>remove</tt> method, the iterator
will throw a {@link ConcurrentModificationException}.  Thus, in the
face of concurrent modification, the iterator fails quickly and
cleanly, rather than risking arbitrary, non-deterministic behavior
at an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>fail-fast iterators should be used only
to detect bugs.</i>

<p>Implementation note: This is a simple <i>linear-probe</i> hash table,
as described for example in texts by Sedgewick and Knuth.  The array
alternates holding keys and values.  (This has better locality for large
tables than does using separate arrays.)  For many JRE implementations
and operation mixes, this class will yield better performance than
{@link HashMap} (which uses <i>chaining</i> rather than linear-probing).

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@see     System#identityHashCode(Object)
@see     Object#hashCode()
@see     Collection
@see     Map
@see     HashMap
@see     TreeMap
@author  Doug Lea and Josh Bloch
@since   1.4
"
      classrelation 3520898 // <realization>
	relation 3520898 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3520898 // <realization>
	  b parent class_ref 192130 // AbstractMap
      end

      classrelation 3521026 // <realization>
	relation 3521026 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3521026 // <realization>
	  b parent class_ref 130178 // Map
      end

      classrelation 3521154 // <realization>
	relation 3521154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3521154 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3521282 // <realization>
	relation 3521282 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3521282 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 2052738 "DEFAULT_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The initial capacity used by the no-args constructor.
MUST be a power of two.  The value 32 corresponds to the
(specified) expected maximum size of 21, given a load factor
of 2/3.

"
      end

      attribute 2052866 "MINIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum capacity, used if a lower value is implicitly specified
by either of the constructors with arguments.  The value 4 corresponds
to an expected maximum size of 2, given a load factor of 2/3.
MUST be a power of two.

"
      end

      attribute 2052994 "MAXIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 29"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum capacity, used if a higher value is implicitly specified
by either of the constructors with arguments.
MUST be a power of two <= 1<<29.

In fact, the map can hold no more than MAXIMUM_CAPACITY-1 items
because it has to have at least one slot with the key == null
in order to avoid infinite loops in get(), put(), remove()

"
      end

      classrelation 3521410 // table (<unidirectional association>)
	relation 3521410 --->
	  a role_name "table" multiplicity "[]" package
	    comment "
The table, resized as necessary. Length MUST always be a power of two.

 non-private to simplify nested class access"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3521410 // table (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2053122 "size"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of key-value mappings contained in this identity hash map.

@serial

"
      end

      attribute 2053250 "modCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of modifications, to support fast-fail iterators

"
      end

      classrelation 3521538 // NULL_KEY (<unidirectional association>)
	relation 3521538 --->
	  a role_name "NULL_KEY" init_value " new Object()" class_relation const_relation package
	    comment "
Value representing null keys inside tables.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3521538 // NULL_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 8813186 "maskNull"
	class_operation cpp_inline private return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use NULL_KEY for key if it is null.
"
      end

      operation 8813314 "unmaskNull"
	class_operation cpp_inline package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns internal representation of null key back to caller as null.
"
      end

      operation 8813442 "IdentityHashMap"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty identity hash map with a default expected
maximum size (21).
"
      end

      operation 8813570 "IdentityHashMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "expectedMaxSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty map with the specified expected maximum size.
Putting more than the expected number of key-value mappings into
the map may cause the internal data structure to grow, which may be
somewhat time-consuming.

@param expectedMaxSize the expected maximum size of the map
@throws IllegalArgumentException if <tt>expectedMaxSize</tt> is negative
"
      end

      operation 8813698 "capacity"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "expectedMaxSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate capacity for the given expected maximum size.
Returns the smallest power of two between MINIMUM_CAPACITY and
MAXIMUM_CAPACITY, inclusive, that is greater than (3 *
expectedMaxSize)/2, if such a number exists.  Otherwise returns
MAXIMUM_CAPACITY.
"
      end

      operation 8813826 "init"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "initCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes object to be an empty map with the specified initial
capacity, which is assumed to be a power of two between
MINIMUM_CAPACITY and MAXIMUM_CAPACITY inclusive.
"
      end

      operation 8813954 "IdentityHashMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new identity hash map containing the keys-value mappings
in the specified map.

@param m the map whose mappings are to be placed into this map
@throws NullPointerException if the specified map is null
"
      end

      operation 8814082 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key-value mappings in this identity hash map.

@return the number of key-value mappings in this map
"
      end

      operation 8814210 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this identity hash map contains no key-value
mappings.

@return <tt>true</tt> if this identity hash map contains no key-value
        mappings
"
      end

      operation 8814338 "hash"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "x" type class_ref 129538 // Object
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns index for Object x.
"
      end

      operation 8814466 "nextKeyIndex"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Circularly traverses table of size len.
"
      end

      operation 8814594 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code (key == k)},
then this method returns {@code v}; otherwise it returns
{@code null}.  (There can be at most one such mapping.)

<p>A return value of {@code null} does not <i>necessarily</i>
indicate that the map contains no mapping for the key; it's also
possible that the map explicitly maps the key to {@code null}.
The {@link #containsKey containsKey} operation may be used to
distinguish these two cases.

@see #put(Object, Object)
"
      end

      operation 8814722 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the specified object reference is a key in this identity
hash map.

@param   key   possible key
@return  <code>true</code> if the specified object reference is a key
         in this map
@see     #containsValue(Object)
"
      end

      operation 8814850 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the specified object reference is a value in this identity
hash map.

@param value value whose presence in this map is to be tested
@return <tt>true</tt> if this map maps one or more keys to the
        specified object reference
@see     #containsKey(Object)
"
      end

      operation 8814978 "containsMapping"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the specified key-value mapping is in the map.

@param   key   possible key
@param   value possible value
@return  <code>true</code> if and only if the specified key-value
         mapping is in the map
"
      end

      operation 8815106 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified key in this identity
hash map.  If the map previously contained a mapping for the key, the
old value is replaced.

@param key the key with which the specified value is to be associated
@param value the value to be associated with the specified key
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
        (A <tt>null</tt> return can also indicate that the map
        previously associated <tt>null</tt> with <tt>key</tt>.)
@see     Object#equals(Object)
@see     #get(Object)
@see     #containsKey(Object)
"
      end

      operation 8815234 "resize"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes the table if necessary to hold given capacity.

@param newCapacity the new capacity, must be a power of two.
@return whether a resize did in fact take place
"
      end

      operation 8815362 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified map to this map.
These mappings will replace any mappings that this map had for
any of the keys currently in the specified map.

@param m mappings to be stored in this map
@throws NullPointerException if the specified map is null
"
      end

      operation 8815490 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping for this key from this map if present.

@param key key whose mapping is to be removed from the map
@return the previous value associated with <tt>key</tt>, or
        <tt>null</tt> if there was no mapping for <tt>key</tt>.
        (A <tt>null</tt> return can also indicate that the map
        previously associated <tt>null</tt> with <tt>key</tt>.)
"
      end

      operation 8815618 "removeMapping"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified key-value mapping from the map if it is present.

@param   key   possible key
@param   value possible value
@return  <code>true</code> if and only if the specified key-value
         mapping was in the map
"
      end

      operation 8815746 "closeDeletion"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "d" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rehash all possibly-colliding entries following a
deletion. This preserves the linear-probe
collision properties required by get, put, etc.

@param d the index of a newly empty deleted slot
"
      end

      operation 8815874 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the mappings from this map.
The map will be empty after this call returns.
"
      end

      operation 8816002 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified object with this map for equality.  Returns
<tt>true</tt> if the given object is also a map and the two maps
represent identical object-reference mappings.  More formally, this
map is equal to another map <tt>m</tt> if and only if
<tt>this.entrySet().equals(m.entrySet())</tt>.

<p><b>Owing to the reference-equality-based semantics of this map it is
possible that the symmetry and transitivity requirements of the
<tt>Object.equals</tt> contract may be violated if this map is compared
to a normal map.  However, the <tt>Object.equals</tt> contract is
guaranteed to hold among <tt>IdentityHashMap</tt> instances.</b>

@param  o object to be compared for equality with this map
@return <tt>true</tt> if the specified object is equal to this map
@see Object#equals(Object)
"
      end

      operation 8816130 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this map.  The hash code of a map is
defined to be the sum of the hash codes of each entry in the map's
<tt>entrySet()</tt> view.  This ensures that <tt>m1.equals(m2)</tt>
implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two
<tt>IdentityHashMap</tt> instances <tt>m1</tt> and <tt>m2</tt>, as
required by the general contract of {@link Object#hashCode}.

<p><b>Owing to the reference-equality-based semantics of the
<tt>Map.Entry</tt> instances in the set returned by this map's
<tt>entrySet</tt> method, it is possible that the contractual
requirement of <tt>Object.hashCode</tt> mentioned in the previous
paragraph will be violated if one of the two objects being compared is
an <tt>IdentityHashMap</tt> instance and the other is a normal map.</b>

@return the hash code value for this map
@see Object#equals(Object)
@see #equals(Object)
"
      end

      operation 8816258 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shallow copy of this identity hash map: the keys and values
themselves are not cloned.

@return a shallow copy of this map
"
      end

      class 1083778 "IdentityHashMapIterator"
	abstract visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3521666 // <realization>
	  relation 3521666 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3521666 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 2053378 "index"
	  package explicit_type "int"
	  init_value " (size != 0 ? 0 : table.length)"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current slot."
	end

	attribute 2053506 "expectedModCount"
	  package explicit_type "int"
	  init_value " modCount"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " to support fast-fail"
	end

	attribute 2053634 "lastReturnedIndex"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " to allow remove()"
	end

	attribute 2053762 "indexValid"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " To avoid unnecessary next computation"
	end

	classrelation 3521794 // traversalTable (<unidirectional association>)
	  relation 3521794 --->
	    a role_name "traversalTable" multiplicity "[]" init_value " table" package
	      comment " reference to main table or copy"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3521794 // traversalTable (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 8816386 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8816514 "nextIndex"
	  cpp_inline protected explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8816642 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1083906 "KeyIterator"
	visibility private 
	nactuals 3
	actual class class_ref 500226 // IdentityHashMap
	  rank 0 explicit_value ""
	actual class class_ref 500226 // IdentityHashMap
	  rank 1 explicit_value ""
	actual class class_ref 1083778 // IdentityHashMapIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3521922 // <realization>
	  relation 3521922 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3521922 // <realization>
	    b parent class_ref 1083778 // IdentityHashMapIterator
	end

	operation 8816770 "next"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end

      class 1084034 "ValueIterator"
	visibility private 
	nactuals 3
	actual class class_ref 500226 // IdentityHashMap
	  rank 0 explicit_value ""
	actual class class_ref 500226 // IdentityHashMap
	  rank 1 explicit_value ""
	actual class class_ref 1083778 // IdentityHashMapIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3522050 // <realization>
	  relation 3522050 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3522050 // <realization>
	    b parent class_ref 1083778 // IdentityHashMapIterator
	end

	operation 8816898 "next"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end

      class 1084162 "EntryIterator"
	visibility private 
	nactuals 3
	actual class class_ref 500226 // IdentityHashMap
	  rank 0 explicit_value ""
	actual class class_ref 500226 // IdentityHashMap
	  rank 1 explicit_value ""
	actual class class_ref 1083778 // IdentityHashMapIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3522178 // <realization>
	  relation 3522178 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3522178 // <realization>
	    b parent class_ref 1083778 // IdentityHashMapIterator
	end

	class 1084290 "Entry"
	  visibility private 
	  nactuals 4
	  actual class class_ref 130178 // Map
	    rank 0 explicit_value ""
	  actual class class_ref 130178 // Map
	    rank 1 explicit_value ""
	  actual class class_ref 192386 // Entry
	    rank 0 explicit_value ""
	  actual class class_ref 192386 // Entry
	    rank 1 explicit_value ""
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3522434 // <realization>
	    relation 3522434 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3522434 // <realization>
	      b parent class_ref 192386 // Entry
	  end

	  attribute 2053890 "index"
	    private explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8817282 "Entry"
	    cpp_inline private explicit_return_type ""
	    nparams 1
	      param in name "index" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8817410 "getKey"
	    cpp_inline public explicit_return_type "K"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8817538 "getValue"
	    cpp_inline public explicit_return_type "V"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8817666 "setValue"
	    cpp_inline public explicit_return_type "V"
	    nparams 1
	      param inout name "value" explicit_type "V"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8817794 "equals"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8817922 "hashCode"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8818050 "toString"
	    cpp_inline public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8818178 "checkIndexForEntryUse"
	    cpp_inline private explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 3522306 // lastReturnedEntry (<unidirectional association>)
	  relation 3522306 --->
	    a role_name "lastReturnedEntry" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3522306 // lastReturnedEntry (<unidirectional association>)
	    b parent class_ref 1084290 // Entry
	end

	operation 8817026 "next"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8817154 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3522562 // entrySet (<unidirectional association>)
	relation 3522562 --->
	  a role_name "entrySet" private
	    comment " Views

This field is initialized to contain an instance of the entry set
view the first time this view is requested.  The view is stateless,
so there's no reason to create more than one.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	    classrelation_ref 3522562 // entrySet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      operation 8818306 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an identity-based set view of the keys contained in this map.
The set is backed by the map, so changes to the map are reflected in
the set, and vice-versa.  If the map is modified while an iteration
over the set is in progress, the results of the iteration are
undefined.  The set supports element removal, which removes the
corresponding mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt>, and
<tt>clear</tt> methods.  It does not support the <tt>add</tt> or
<tt>addAll</tt> methods.

<p><b>While the object returned by this method implements the
<tt>Set</tt> interface, it does <i>not</i> obey <tt>Set's</tt> general
contract.  Like its backing map, the set returned by this method
defines element equality as reference-equality rather than
object-equality.  This affects the behavior of its <tt>contains</tt>,
<tt>remove</tt>, <tt>containsAll</tt>, <tt>equals</tt>, and
<tt>hashCode</tt> methods.</b>

<p><b>The <tt>equals</tt> method of the returned set returns <tt>true</tt>
only if the specified object is a set containing exactly the same
object references as the returned set.  The symmetry and transitivity
requirements of the <tt>Object.equals</tt> contract may be violated if
the set returned by this method is compared to a normal set.  However,
the <tt>Object.equals</tt> contract is guaranteed to hold among sets
returned by this method.</b>

<p>The <tt>hashCode</tt> method of the returned set returns the sum of
the <i>identity hashcodes</i> of the elements in the set, rather than
the sum of their hashcodes.  This is mandated by the change in the
semantics of the <tt>equals</tt> method, in order to enforce the
general contract of the <tt>Object.hashCode</tt> method among sets
returned by this method.

@return an identity-based set view of the keys contained in this map
@see Object#equals(Object)
@see System#identityHashCode(Object)
"
      end

      class 1084418 "KeySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3522690 // <realization>
	  relation 3522690 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3522690 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 8818434 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8818562 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8818690 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8818818 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8818946 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Must revert from AbstractSet's impl to AbstractCollection's, as
the former contains an optimization that results in incorrect
behavior when c is a smaller \"normal\" (non-identity-based) Set.
"
	end

	operation 8819074 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8819202 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8819330 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8819458 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8819586 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8819714 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.
The collection is backed by the map, so changes to the map are
reflected in the collection, and vice-versa.  If the map is
modified while an iteration over the collection is in progress,
the results of the iteration are undefined.  The collection
supports element removal, which removes the corresponding
mapping from the map, via the <tt>Iterator.remove</tt>,
<tt>Collection.remove</tt>, <tt>removeAll</tt>,
<tt>retainAll</tt> and <tt>clear</tt> methods.  It does not
support the <tt>add</tt> or <tt>addAll</tt> methods.

<p><b>While the object returned by this method implements the
<tt>Collection</tt> interface, it does <i>not</i> obey
<tt>Collection's</tt> general contract.  Like its backing map,
the collection returned by this method defines element equality as
reference-equality rather than object-equality.  This affects the
behavior of its <tt>contains</tt>, <tt>remove</tt> and
<tt>containsAll</tt> methods.</b>
"
      end

      class 1084546 "Values"
	visibility private 
	nactuals 1
	actual class class_ref 184066 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3522818 // <realization>
	  relation 3522818 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3522818 // <realization>
	    b parent class_ref 184066 // AbstractCollection
	end

	operation 8819842 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8819970 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8820098 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8820226 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8820354 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8820482 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8820610 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8820738 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8820866 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.
Each element in the returned set is a reference-equality-based
<tt>Map.Entry</tt>.  The set is backed by the map, so changes
to the map are reflected in the set, and vice-versa.  If the
map is modified while an iteration over the set is in progress,
the results of the iteration are undefined.  The set supports
element removal, which removes the corresponding mapping from
the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
<tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt>
methods.  It does not support the <tt>add</tt> or
<tt>addAll</tt> methods.

<p>Like the backing map, the <tt>Map.Entry</tt> objects in the set
returned by this method define key and value equality as
reference-equality rather than object-equality.  This affects the
behavior of the <tt>equals</tt> and <tt>hashCode</tt> methods of these
<tt>Map.Entry</tt> objects.  A reference-equality based <tt>Map.Entry
e</tt> is equal to an object <tt>o</tt> if and only if <tt>o</tt> is a
<tt>Map.Entry</tt> and <tt>e.getKey()==o.getKey() &amp;&amp;
e.getValue()==o.getValue()</tt>.  To accommodate these equals
semantics, the <tt>hashCode</tt> method returns
<tt>System.identityHashCode(e.getKey()) ^
System.identityHashCode(e.getValue())</tt>.

<p><b>Owing to the reference-equality-based semantics of the
<tt>Map.Entry</tt> instances in the set returned by this method,
it is possible that the symmetry and transitivity requirements of
the {@link Object#equals(Object)} contract may be violated if any of
the entries in the set is compared to a normal map entry, or if
the set returned by this method is compared to a set of normal map
entries (such as would be returned by a call to this method on a normal
map).  However, the <tt>Object.equals</tt> contract is guaranteed to
hold among identity-based map entries, and among sets of such entries.
</b>

@return a set view of the identity-mappings contained in this map
"
      end

      class 1084674 "EntrySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3522946 // <realization>
	  relation 3522946 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3522946 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 8820994 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8821122 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8821250 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8821378 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8821506 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8821634 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Must revert from AbstractSet's impl to AbstractCollection's, as
the former contains an optimization that results in incorrect
behavior when c is a smaller \"normal\" (non-identity-based) Set.
"
	end

	operation 8821762 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8821890 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8822018 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 2054018 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8188218128353913216L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8822146 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Saves the state of the <tt>IdentityHashMap</tt> instance to a stream
(i.e., serializes it).

@serialData The <i>size</i> of the HashMap (the number of key-value
         mappings) (<tt>int</tt>), followed by the key (Object) and
         value (Object) for each key-value mapping represented by the
         IdentityHashMap.  The key-value mappings are emitted in no
         particular order.
"
      end

      operation 8822274 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitutes the <tt>IdentityHashMap</tt> instance from a stream (i.e.,
deserializes it).
"
      end

      operation 8822402 "putForCreate"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	nexceptions 1
	  exception class_ref 171778 // StreamCorruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The put method for readObject.  It does not resize the table,
update modCount, etc.
"
      end

      operation 8822530 "forEach"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 192514 // BiConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	
	
	
      end

      operation 8822658 "replaceAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "function" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	
	
	
      end

      class 1084802 "IdentityHashMapSpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3523074 // map (<unidirectional association>)
	  relation 3523074 --->
	    a role_name "map" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3523074 // map (<unidirectional association>)
	    b parent class_ref 500226 // IdentityHashMap
	end

	attribute 2054146 "index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 2054274 "fence"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " -1 until first use; then one past last index"
	end

	attribute 2054402 "est"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2054530 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " initialized when fence set"
	end

	operation 8822786 "IdentityHashMapSpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "map" type class_ref 500226 // IdentityHashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8822914 "getFence"
	  cpp_inline package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8823042 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1084930 "KeySpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 5
	actual class class_ref 500226 // IdentityHashMap
	  rank 0 explicit_value ""
	actual class class_ref 500226 // IdentityHashMap
	  rank 1 explicit_value ""
	actual class class_ref 1084802 // IdentityHashMapSpliterator
	  rank 0 explicit_value ""
	actual class class_ref 1084802 // IdentityHashMapSpliterator
	  rank 1 explicit_value ""
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3523202 // <realization>
	  relation 3523202 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3523202 // <realization>
	    b parent class_ref 1084802 // IdentityHashMapSpliterator
	end

	classrelation 3523330 // <realization>
	  relation 3523330 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3523330 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 8823170 "KeySpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "map" type class_ref 500226 // IdentityHashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8823298 "trySplit"
	  cpp_inline public return_type class_ref 1084930 // KeySpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8823426 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8823554 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8823682 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1085058 "ValueSpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 5
	actual class class_ref 500226 // IdentityHashMap
	  rank 0 explicit_value ""
	actual class class_ref 500226 // IdentityHashMap
	  rank 1 explicit_value ""
	actual class class_ref 1084802 // IdentityHashMapSpliterator
	  rank 0 explicit_value ""
	actual class class_ref 1084802 // IdentityHashMapSpliterator
	  rank 1 explicit_value ""
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3523458 // <realization>
	  relation 3523458 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3523458 // <realization>
	    b parent class_ref 1084802 // IdentityHashMapSpliterator
	end

	classrelation 3523586 // <realization>
	  relation 3523586 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3523586 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 8823810 "ValueSpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "m" type class_ref 500226 // IdentityHashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8823938 "trySplit"
	  cpp_inline public return_type class_ref 1085058 // ValueSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824066 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824194 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824322 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1085186 "EntrySpliterator"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 5
	actual class class_ref 500226 // IdentityHashMap
	  rank 0 explicit_value ""
	actual class class_ref 500226 // IdentityHashMap
	  rank 1 explicit_value ""
	actual class class_ref 1084802 // IdentityHashMapSpliterator
	  rank 0 explicit_value ""
	actual class class_ref 1084802 // IdentityHashMapSpliterator
	  rank 1 explicit_value ""
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3523714 // <realization>
	  relation 3523714 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3523714 // <realization>
	    b parent class_ref 1084802 // IdentityHashMapSpliterator
	end

	classrelation 3523842 // <realization>
	  relation 3523842 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3523842 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	operation 8824450 "EntrySpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "m" type class_ref 500226 // IdentityHashMap
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "est" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824578 "trySplit"
	  cpp_inline public return_type class_ref 1085186 // EntrySpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824706 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Map.Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824834 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Map.Entry<K,V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8824962 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 500354 "SortedMap"
      visibility public stereotype "interface"
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link Map} that further provides a <em>total ordering</em> on its keys.
The map is ordered according to the {@linkplain Comparable natural
ordering} of its keys, or by a {@link Comparator} typically
provided at sorted map creation time.  This order is reflected when
iterating over the sorted map's collection views (returned by the
{@code entrySet}, {@code keySet} and {@code values} methods).
Several additional operations are provided to take advantage of the
ordering.  (This interface is the map analogue of {@link SortedSet}.)

<p>All keys inserted into a sorted map must implement the {@code Comparable}
interface (or be accepted by the specified comparator).  Furthermore, all
such keys must be <em>mutually comparable</em>: {@code k1.compareTo(k2)} (or
{@code comparator.compare(k1, k2)}) must not throw a
{@code ClassCastException} for any keys {@code k1} and {@code k2} in
the sorted map.  Attempts to violate this restriction will cause the
offending method or constructor invocation to throw a
{@code ClassCastException}.

<p>Note that the ordering maintained by a sorted map (whether or not an
explicit comparator is provided) must be <em>consistent with equals</em> if
the sorted map is to correctly implement the {@code Map} interface.  (See
the {@code Comparable} interface or {@code Comparator} interface for a
precise definition of <em>consistent with equals</em>.)  This is so because
the {@code Map} interface is defined in terms of the {@code equals}
operation, but a sorted map performs all key comparisons using its
{@code compareTo} (or {@code compare}) method, so two keys that are
deemed equal by this method are, from the standpoint of the sorted map,
equal.  The behavior of a tree map <em>is</em> well-defined even if its
ordering is inconsistent with equals; it just fails to obey the general
contract of the {@code Map} interface.

<p>All general-purpose sorted map implementation classes should provide four
\"standard\" constructors. It is not possible to enforce this recommendation
though as required constructors cannot be specified by interfaces. The
expected \"standard\" constructors for all sorted map implementations are:
<ol>
  <li>A void (no arguments) constructor, which creates an empty sorted map
  sorted according to the natural ordering of its keys.</li>
  <li>A constructor with a single argument of type {@code Comparator}, which
  creates an empty sorted map sorted according to the specified comparator.</li>
  <li>A constructor with a single argument of type {@code Map}, which creates
  a new map with the same key-value mappings as its argument, sorted
  according to the keys' natural ordering.</li>
  <li>A constructor with a single argument of type {@code SortedMap}, which
  creates a new sorted map with the same key-value mappings and the same
  ordering as the input sorted map.</li>
</ol>

<p><strong>Note</strong>: several methods return submaps with restricted key
ranges. Such ranges are <em>half-open</em>, that is, they include their low
endpoint but not their high endpoint (where applicable).  If you need a
<em>closed range</em> (which includes both endpoints), and the key type
allows for calculation of the successor of a given key, merely request
the subrange from {@code lowEndpoint} to
{@code successor(highEndpoint)}.  For example, suppose that {@code m}
is a map whose keys are strings.  The following idiom obtains a view
containing all of the key-value mappings in {@code m} whose keys are
between {@code low} and {@code high}, inclusive:<pre>
  SortedMap&lt;String, V&gt; sub = m.subMap(low, high+\"\\0\");</pre>

A similar technique can be used to generate an <em>open range</em>
(which contains neither endpoint).  The following idiom obtains a
view containing all of the key-value mappings in {@code m} whose keys
are between {@code low} and {@code high}, exclusive:<pre>
  SortedMap&lt;String, V&gt; sub = m.subMap(low+\"\\0\", high);</pre>

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author  Josh Bloch
@see Map
@see TreeMap
@see SortedSet
@see Comparator
@see Comparable
@see Collection
@see ClassCastException
@since 1.2
"
      classrelation 3494018 // <realization>
	relation 3494018 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3494018 // <realization>
	  b parent class_ref 130178 // Map
      end

      operation 8693762 "comparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comparator used to order the keys in this map, or
{@code null} if this map uses the {@linkplain Comparable
natural ordering} of its keys.

@return the comparator used to order the keys in this map,
        or {@code null} if this map uses the natural ordering
        of its keys
"
      end

      operation 8693890 "subMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "toKey" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys range from
{@code fromKey}, inclusive, to {@code toKey}, exclusive.  (If
{@code fromKey} and {@code toKey} are equal, the returned map
is empty.)  The returned map is backed by this map, so changes
in the returned map are reflected in this map, and vice-versa.
The returned map supports all optional map operations that this
map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param fromKey low endpoint (inclusive) of the keys in the returned map
@param toKey high endpoint (exclusive) of the keys in the returned map
@return a view of the portion of this map whose keys range from
        {@code fromKey}, inclusive, to {@code toKey}, exclusive
@throws ClassCastException if {@code fromKey} and {@code toKey}
        cannot be compared to one another using this map's comparator
        (or, if the map has no comparator, using natural ordering).
        Implementations may, but are not required to, throw this
        exception if {@code fromKey} or {@code toKey}
        cannot be compared to keys currently in the map.
@throws NullPointerException if {@code fromKey} or {@code toKey}
        is null and this map does not permit null keys
@throws IllegalArgumentException if {@code fromKey} is greater than
        {@code toKey}; or if this map itself has a restricted
        range, and {@code fromKey} or {@code toKey} lies
        outside the bounds of the range
"
      end

      operation 8694018 "headMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "toKey" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys are
strictly less than {@code toKey}.  The returned map is backed
by this map, so changes in the returned map are reflected in
this map, and vice-versa.  The returned map supports all
optional map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param toKey high endpoint (exclusive) of the keys in the returned map
@return a view of the portion of this map whose keys are strictly
        less than {@code toKey}
@throws ClassCastException if {@code toKey} is not compatible
        with this map's comparator (or, if the map has no comparator,
        if {@code toKey} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code toKey} cannot be compared to keys
        currently in the map.
@throws NullPointerException if {@code toKey} is null and
        this map does not permit null keys
@throws IllegalArgumentException if this map itself has a
        restricted range, and {@code toKey} lies outside the
        bounds of the range
"
      end

      operation 8694146 "tailMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "fromKey" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys are
greater than or equal to {@code fromKey}.  The returned map is
backed by this map, so changes in the returned map are
reflected in this map, and vice-versa.  The returned map
supports all optional map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param fromKey low endpoint (inclusive) of the keys in the returned map
@return a view of the portion of this map whose keys are greater
        than or equal to {@code fromKey}
@throws ClassCastException if {@code fromKey} is not compatible
        with this map's comparator (or, if the map has no comparator,
        if {@code fromKey} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code fromKey} cannot be compared to keys
        currently in the map.
@throws NullPointerException if {@code fromKey} is null and
        this map does not permit null keys
@throws IllegalArgumentException if this map itself has a
        restricted range, and {@code fromKey} lies outside the
        bounds of the range
"
      end

      operation 8694274 "firstKey"
	cpp_inline public explicit_return_type "K"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first (lowest) key currently in this map.

@return the first (lowest) key currently in this map
@throws NoSuchElementException if this map is empty
"
      end

      operation 8694402 "lastKey"
	cpp_inline public explicit_return_type "K"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last (highest) key currently in this map.

@return the last (highest) key currently in this map
@throws NoSuchElementException if this map is empty
"
      end

      operation 8694530 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the keys contained in this map.
The set's iterator returns the keys in ascending order.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own {@code remove} operation), the results of
the iteration are undefined.  The set supports element removal,
which removes the corresponding mapping from the map, via the
{@code Iterator.remove}, {@code Set.remove},
{@code removeAll}, {@code retainAll}, and {@code clear}
operations.  It does not support the {@code add} or {@code addAll}
operations.

@return a set view of the keys contained in this map, sorted in
        ascending order
"
      end

      operation 8694658 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.
The collection's iterator returns the values in ascending order
of the corresponding keys.
The collection is backed by the map, so changes to the map are
reflected in the collection, and vice-versa.  If the map is
modified while an iteration over the collection is in progress
(except through the iterator's own {@code remove} operation),
the results of the iteration are undefined.  The collection
supports element removal, which removes the corresponding
mapping from the map, via the {@code Iterator.remove},
{@code Collection.remove}, {@code removeAll},
{@code retainAll} and {@code clear} operations.  It does not
support the {@code add} or {@code addAll} operations.

@return a collection view of the values contained in this map,
        sorted in ascending key order
"
      end

      operation 8694786 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.
The set's iterator returns the entries in ascending key order.
The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own {@code remove} operation, or through the
{@code setValue} operation on a map entry returned by the
iterator) the results of the iteration are undefined.  The set
supports element removal, which removes the corresponding
mapping from the map, via the {@code Iterator.remove},
{@code Set.remove}, {@code removeAll}, {@code retainAll} and
{@code clear} operations.  It does not support the
{@code add} or {@code addAll} operations.

@return a set view of the mappings contained in this map,
        sorted in ascending key order
"
      end
    end

    class 511874 "SortedSet"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 192258 // Set
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link Set} that further provides a <i>total ordering</i> on its elements.
The elements are ordered using their {@linkplain Comparable natural
ordering}, or by a {@link Comparator} typically provided at sorted
set creation time.  The set's iterator will traverse the set in
ascending element order. Several additional operations are provided
to take advantage of the ordering.  (This interface is the set
analogue of {@link SortedMap}.)

<p>All elements inserted into a sorted set must implement the <tt>Comparable</tt>
interface (or be accepted by the specified comparator).  Furthermore, all
such elements must be <i>mutually comparable</i>: <tt>e1.compareTo(e2)</tt>
(or <tt>comparator.compare(e1, e2)</tt>) must not throw a
<tt>ClassCastException</tt> for any elements <tt>e1</tt> and <tt>e2</tt> in
the sorted set.  Attempts to violate this restriction will cause the
offending method or constructor invocation to throw a
<tt>ClassCastException</tt>.

<p>Note that the ordering maintained by a sorted set (whether or not an
explicit comparator is provided) must be <i>consistent with equals</i> if
the sorted set is to correctly implement the <tt>Set</tt> interface.  (See
the <tt>Comparable</tt> interface or <tt>Comparator</tt> interface for a
precise definition of <i>consistent with equals</i>.)  This is so because
the <tt>Set</tt> interface is defined in terms of the <tt>equals</tt>
operation, but a sorted set performs all element comparisons using its
<tt>compareTo</tt> (or <tt>compare</tt>) method, so two elements that are
deemed equal by this method are, from the standpoint of the sorted set,
equal.  The behavior of a sorted set <i>is</i> well-defined even if its
ordering is inconsistent with equals; it just fails to obey the general
contract of the <tt>Set</tt> interface.

<p>All general-purpose sorted set implementation classes should
provide four \"standard\" constructors: 1) A void (no arguments)
constructor, which creates an empty sorted set sorted according to
the natural ordering of its elements.  2) A constructor with a
single argument of type <tt>Comparator</tt>, which creates an empty
sorted set sorted according to the specified comparator.  3) A
constructor with a single argument of type <tt>Collection</tt>,
which creates a new sorted set with the same elements as its
argument, sorted according to the natural ordering of the elements.
4) A constructor with a single argument of type <tt>SortedSet</tt>,
which creates a new sorted set with the same elements and the same
ordering as the input sorted set.  There is no way to enforce this
recommendation, as interfaces cannot contain constructors.

<p>Note: several methods return subsets with restricted ranges.
Such ranges are <i>half-open</i>, that is, they include their low
endpoint but not their high endpoint (where applicable).
If you need a <i>closed range</i> (which includes both endpoints), and
the element type allows for calculation of the successor of a given
value, merely request the subrange from <tt>lowEndpoint</tt> to
<tt>successor(highEndpoint)</tt>.  For example, suppose that <tt>s</tt>
is a sorted set of strings.  The following idiom obtains a view
containing all of the strings in <tt>s</tt> from <tt>low</tt> to
<tt>high</tt>, inclusive:<pre>
  SortedSet&lt;String&gt; sub = s.subSet(low, high+\"\\0\");</pre>

A similar technique can be used to generate an <i>open range</i> (which
contains neither endpoint).  The following idiom obtains a view
containing all of the Strings in <tt>s</tt> from <tt>low</tt> to
<tt>high</tt>, exclusive:<pre>
  SortedSet&lt;String&gt; sub = s.subSet(low+\"\\0\", high);</pre>

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements maintained by this set

@author  Josh Bloch
@see Set
@see TreeSet
@see SortedMap
@see Collection
@see Comparable
@see Comparator
@see ClassCastException
@since 1.2
"
      classrelation 3490306 // <realization>
	relation 3490306 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3490306 // <realization>
	  b parent class_ref 192258 // Set
      end

      operation 8678274 "comparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comparator used to order the elements in this set,
or <tt>null</tt> if this set uses the {@linkplain Comparable
natural ordering} of its elements.

@return the comparator used to order the elements in this set,
        or <tt>null</tt> if this set uses the natural ordering
        of its elements
"
      end

      operation 8678402 "subSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "toElement" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements range
from <tt>fromElement</tt>, inclusive, to <tt>toElement</tt>,
exclusive.  (If <tt>fromElement</tt> and <tt>toElement</tt> are
equal, the returned set is empty.)  The returned set is backed
by this set, so changes in the returned set are reflected in
this set, and vice-versa.  The returned set supports all
optional set operations that this set supports.

<p>The returned set will throw an <tt>IllegalArgumentException</tt>
on an attempt to insert an element outside its range.

@param fromElement low endpoint (inclusive) of the returned set
@param toElement high endpoint (exclusive) of the returned set
@return a view of the portion of this set whose elements range from
        <tt>fromElement</tt>, inclusive, to <tt>toElement</tt>, exclusive
@throws ClassCastException if <tt>fromElement</tt> and
        <tt>toElement</tt> cannot be compared to one another using this
        set's comparator (or, if the set has no comparator, using
        natural ordering).  Implementations may, but are not required
        to, throw this exception if <tt>fromElement</tt> or
        <tt>toElement</tt> cannot be compared to elements currently in
        the set.
@throws NullPointerException if <tt>fromElement</tt> or
        <tt>toElement</tt> is null and this set does not permit null
        elements
@throws IllegalArgumentException if <tt>fromElement</tt> is
        greater than <tt>toElement</tt>; or if this set itself
        has a restricted range, and <tt>fromElement</tt> or
        <tt>toElement</tt> lies outside the bounds of the range
"
      end

      operation 8678530 "headSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "toElement" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements are
strictly less than <tt>toElement</tt>.  The returned set is
backed by this set, so changes in the returned set are
reflected in this set, and vice-versa.  The returned set
supports all optional set operations that this set supports.

<p>The returned set will throw an <tt>IllegalArgumentException</tt>
on an attempt to insert an element outside its range.

@param toElement high endpoint (exclusive) of the returned set
@return a view of the portion of this set whose elements are strictly
        less than <tt>toElement</tt>
@throws ClassCastException if <tt>toElement</tt> is not compatible
        with this set's comparator (or, if the set has no comparator,
        if <tt>toElement</tt> does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if <tt>toElement</tt> cannot be compared to elements
        currently in the set.
@throws NullPointerException if <tt>toElement</tt> is null and
        this set does not permit null elements
@throws IllegalArgumentException if this set itself has a
        restricted range, and <tt>toElement</tt> lies outside the
        bounds of the range
"
      end

      operation 8678658 "tailSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "fromElement" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements are
greater than or equal to <tt>fromElement</tt>.  The returned
set is backed by this set, so changes in the returned set are
reflected in this set, and vice-versa.  The returned set
supports all optional set operations that this set supports.

<p>The returned set will throw an <tt>IllegalArgumentException</tt>
on an attempt to insert an element outside its range.

@param fromElement low endpoint (inclusive) of the returned set
@return a view of the portion of this set whose elements are greater
        than or equal to <tt>fromElement</tt>
@throws ClassCastException if <tt>fromElement</tt> is not compatible
        with this set's comparator (or, if the set has no comparator,
        if <tt>fromElement</tt> does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if <tt>fromElement</tt> cannot be compared to elements
        currently in the set.
@throws NullPointerException if <tt>fromElement</tt> is null
        and this set does not permit null elements
@throws IllegalArgumentException if this set itself has a
        restricted range, and <tt>fromElement</tt> lies outside the
        bounds of the range
"
      end

      operation 8678786 "first"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first (lowest) element currently in this set.

@return the first (lowest) element currently in this set
@throws NoSuchElementException if this set is empty
"
      end

      operation 8678914 "last"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last (highest) element currently in this set.

@return the last (highest) element currently in this set
@throws NoSuchElementException if this set is empty
"
      end

      operation 8679042 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates a {@code Spliterator} over the elements in this sorted set.

<p>The {@code Spliterator} reports {@link Spliterator#DISTINCT},
{@link Spliterator#SORTED} and {@link Spliterator#ORDERED}.
Implementations should document the reporting of additional
characteristic values.

<p>The spliterator's comparator (see
{@link java.util.Spliterator#getComparator()}) must be {@code null} if
the sorted set's comparator (see {@link #comparator()}) is {@code null}.
Otherwise, the spliterator's comparator must be the same as or impose the
same total ordering as the sorted set's comparator.

@implSpec
The default implementation creates a
<em><a href=\"Spliterator.html#binding\">late-binding</a></em> spliterator
from the sorted set's {@code Iterator}.  The spliterator inherits the
<em>fail-fast</em> properties of the set's iterator.  The
spliterator's comparator is the same as the sorted set's comparator.
<p>
The created {@code Spliterator} additionally reports
{@link Spliterator#SIZED}.

@implNote
The created {@code Spliterator} additionally reports
{@link Spliterator#SUBSIZED}.

@return a {@code Spliterator} over the elements in this sorted set
@since 1.8
"
      end
    end

    class 521474 "Date"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class <code>Date</code> represents a specific instant
in time, with millisecond precision.
<p>
Prior to JDK&nbsp;1.1, the class <code>Date</code> had two additional
functions.  It allowed the interpretation of dates as year, month, day, hour,
minute, and second values.  It also allowed the formatting and parsing
of date strings.  Unfortunately, the API for these functions was not
amenable to internationalization.  As of JDK&nbsp;1.1, the
<code>Calendar</code> class should be used to convert between dates and time
fields and the <code>DateFormat</code> class should be used to format and
parse date strings.
The corresponding methods in <code>Date</code> are deprecated.
<p>
Although the <code>Date</code> class is intended to reflect
coordinated universal time (UTC), it may not do so exactly,
depending on the host environment of the Java Virtual Machine.
Nearly all modern operating systems assume that 1&nbsp;day&nbsp;=
24&nbsp;&times;&nbsp;60&nbsp;&times;&nbsp;60&nbsp;= 86400 seconds
in all cases. In UTC, however, about once every year or two there
is an extra second, called a \"leap second.\" The leap
second is always added as the last second of the day, and always
on December 31 or June 30. For example, the last minute of the
year 1995 was 61 seconds long, thanks to an added leap second.
Most computer clocks are not accurate enough to be able to reflect
the leap-second distinction.
<p>
Some computer standards are defined in terms of Greenwich mean
time (GMT), which is equivalent to universal time (UT).  GMT is
the \"civil\" name for the standard; UT is the
\"scientific\" name for the same standard. The
distinction between UTC and UT is that UTC is based on an atomic
clock and UT is based on astronomical observations, which for all
practical purposes is an invisibly fine hair to split. Because the
earth's rotation is not uniform (it slows down and speeds up
in complicated ways), UT does not always flow uniformly. Leap
seconds are introduced as needed into UTC so as to keep UTC within
0.9 seconds of UT1, which is a version of UT with certain
corrections applied. There are other time and date systems as
well; for example, the time scale used by the satellite-based
global positioning system (GPS) is synchronized to UTC but is
<i>not</i> adjusted for leap seconds. An interesting source of
further information is the U.S. Naval Observatory, particularly
the Directorate of Time at:
<blockquote><pre>
    <a href=http://tycho.usno.navy.mil>http://tycho.usno.navy.mil</a>
</pre></blockquote>
<p>
and their definitions of \"Systems of Time\" at:
<blockquote><pre>
    <a href=http://tycho.usno.navy.mil/systime.html>http://tycho.usno.navy.mil/systime.html</a>
</pre></blockquote>
<p>
In all methods of class <code>Date</code> that accept or return
year, month, date, hours, minutes, and seconds values, the
following representations are used:
<ul>
<li>A year <i>y</i> is represented by the integer
    <i>y</i>&nbsp;<code>-&nbsp;1900</code>.
<li>A month is represented by an integer from 0 to 11; 0 is January,
    1 is February, and so forth; thus 11 is December.
<li>A date (day of month) is represented by an integer from 1 to 31
    in the usual manner.
<li>An hour is represented by an integer from 0 to 23. Thus, the hour
    from midnight to 1 a.m. is hour 0, and the hour from noon to 1
    p.m. is hour 12.
<li>A minute is represented by an integer from 0 to 59 in the usual manner.
<li>A second is represented by an integer from 0 to 61; the values 60 and
    61 occur only for leap seconds and even then only in Java
    implementations that actually track leap seconds correctly. Because
    of the manner in which leap seconds are currently introduced, it is
    extremely unlikely that two leap seconds will occur in the same
    minute, but this specification follows the date and time conventions
    for ISO C.
</ul>
<p>
In all cases, arguments given to methods for these purposes need
not fall within the indicated ranges; for example, a date may be
specified as January 32 and is interpreted as meaning February 1.

@author  James Gosling
@author  Arthur van Hoff
@author  Alan Liu
@see     java.text.DateFormat
@see     java.util.Calendar
@see     java.util.TimeZone
@since   JDK1.0
"
      classrelation 3399426 // <realization>
	relation 3399426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3399426 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3399554 // <realization>
	relation 3399554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3399554 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3399682 // <realization>
	relation 3399682 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3399682 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1886466 "gcal"
	class_attribute const_attribute private explicit_type "BaseCalendar"
	init_value "
                                CalendarSystem.getGregorianCalendar()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1886594 "jcal"
	class_attribute private explicit_type "BaseCalendar"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1886722 "fastTime"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1886850 "cdate"
	private explicit_type "BaseCalendar.Date"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If cdate is null, then fastTime indicates the time in millis.
If cdate.isNormalized() is true, then fastTime and cdate are in
synch. Otherwise, fastTime is ignored, and cdate indicates the
time.

"
      end

      attribute 1886978 "defaultCenturyStart"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initialized just before the value is used. See parse().
"
      end

      attribute 1887106 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7523967970034938905L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from modified java.util.Date for
interoperability with JDK1.1. The Date was modified to write
and read only the UTC time.

"
      end

      operation 8160130 "Date"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a <code>Date</code> object and initializes it so that
it represents the time at which it was allocated, measured to the
nearest millisecond.

@see     java.lang.System#currentTimeMillis()
"
      end

      operation 8160258 "Date"
	public explicit_return_type ""
	nparams 1
	  param in name "date" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a <code>Date</code> object and initializes it to
represent the specified number of milliseconds since the
standard base time known as \"the epoch\", namely January 1,
1970, 00:00:00 GMT.

@param   date   the milliseconds since January 1, 1970, 00:00:00 GMT.
@see     java.lang.System#currentTimeMillis()
"
      end

      operation 8160386 "Date"
	public explicit_return_type ""
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Allocates a <code>Date</code> object and initializes it so that
it represents midnight, local time, at the beginning of the day
specified by the <code>year</code>, <code>month</code>, and
<code>date</code> arguments.

@param   year    the year minus 1900.
@param   month   the month between 0-11.
@param   date    the day of the month between 1-31.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(year + 1900, month, date)</code>
or <code>GregorianCalendar(year + 1900, month, date)</code>.
"
      end

      operation 8160514 "Date"
	public explicit_return_type ""
	nparams 5
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	  param in name "hrs" explicit_type "int"
	  param in name "min" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Allocates a <code>Date</code> object and initializes it so that
it represents the instant at the start of the minute specified by
the <code>year</code>, <code>month</code>, <code>date</code>,
<code>hrs</code>, and <code>min</code> arguments, in the local
time zone.

@param   year    the year minus 1900.
@param   month   the month between 0-11.
@param   date    the day of the month between 1-31.
@param   hrs     the hours between 0-23.
@param   min     the minutes between 0-59.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(year + 1900, month, date,
hrs, min)</code> or <code>GregorianCalendar(year + 1900,
month, date, hrs, min)</code>.
"
      end

      operation 8160642 "Date"
	public explicit_return_type ""
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	  param in name "hrs" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "sec" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Allocates a <code>Date</code> object and initializes it so that
it represents the instant at the start of the second specified
by the <code>year</code>, <code>month</code>, <code>date</code>,
<code>hrs</code>, <code>min</code>, and <code>sec</code> arguments,
in the local time zone.

@param   year    the year minus 1900.
@param   month   the month between 0-11.
@param   date    the day of the month between 1-31.
@param   hrs     the hours between 0-23.
@param   min     the minutes between 0-59.
@param   sec     the seconds between 0-59.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(year + 1900, month, date,
hrs, min, sec)</code> or <code>GregorianCalendar(year + 1900,
month, date, hrs, min, sec)</code>.
"
      end

      operation 8160770 "Date"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Allocates a <code>Date</code> object and initializes it so that
it represents the date and time indicated by the string
<code>s</code>, which is interpreted as if by the
{@link Date#parse} method.

@param   s   a string representation of the date.
@see     java.text.DateFormat
@see     java.util.Date#parse(java.lang.String)
@deprecated As of JDK version 1.1,
replaced by <code>DateFormat.parse(String s)</code>.
"
      end

      operation 8160898 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a copy of this object.
"
      end

      operation 8161026 "UTC"
	class_operation public explicit_return_type "long"
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	  param in name "hrs" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "sec" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Determines the date and time based on the arguments. The
arguments are interpreted as a year, month, day of the month,
hour of the day, minute within the hour, and second within the
minute, exactly as for the <tt>Date</tt> constructor with six
arguments, except that the arguments are interpreted relative
to UTC rather than to the local time zone. The time indicated is
returned represented as the distance, measured in milliseconds,
of that time from the epoch (00:00:00 GMT on January 1, 1970).

@param   year    the year minus 1900.
@param   month   the month between 0-11.
@param   date    the day of the month between 1-31.
@param   hrs     the hours between 0-23.
@param   min     the minutes between 0-59.
@param   sec     the seconds between 0-59.
@return  the number of milliseconds since January 1, 1970, 00:00:00 GMT for
         the date and time specified by the arguments.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(year + 1900, month, date,
hrs, min, sec)</code> or <code>GregorianCalendar(year + 1900,
month, date, hrs, min, sec)</code>, using a UTC
<code>TimeZone</code>, followed by <code>Calendar.getTime().getTime()</code>.
"
      end

      operation 8161154 "parse"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Attempts to interpret the string <tt>s</tt> as a representation
of a date and time. If the attempt is successful, the time
indicated is returned represented as the distance, measured in
milliseconds, of that time from the epoch (00:00:00 GMT on
January 1, 1970). If the attempt fails, an
<tt>IllegalArgumentException</tt> is thrown.
<p>
It accepts many syntaxes; in particular, it recognizes the IETF
standard date syntax: \"Sat, 12 Aug 1995 13:30:00 GMT\". It also
understands the continental U.S. time-zone abbreviations, but for
general use, a time-zone offset should be used: \"Sat, 12 Aug 1995
13:30:00 GMT+0430\" (4 hours, 30 minutes west of the Greenwich
meridian). If no time zone is specified, the local time zone is
assumed. GMT and UTC are considered equivalent.
<p>
The string <tt>s</tt> is processed from left to right, looking for
data of interest. Any material in <tt>s</tt> that is within the
ASCII parenthesis characters <tt>(</tt> and <tt>)</tt> is ignored.
Parentheses may be nested. Otherwise, the only characters permitted
within <tt>s</tt> are these ASCII characters:
<blockquote><pre>
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789,+-:/</pre></blockquote>
and whitespace characters.<p>
A consecutive sequence of decimal digits is treated as a decimal
number:<ul>
<li>If a number is preceded by <tt>+</tt> or <tt>-</tt> and a year
    has already been recognized, then the number is a time-zone
    offset. If the number is less than 24, it is an offset measured
    in hours. Otherwise, it is regarded as an offset in minutes,
    expressed in 24-hour time format without punctuation. A
    preceding <tt>-</tt> means a westward offset. Time zone offsets
    are always relative to UTC (Greenwich). Thus, for example,
    <tt>-5</tt> occurring in the string would mean \"five hours west
    of Greenwich\" and <tt>+0430</tt> would mean \"four hours and
    thirty minutes east of Greenwich.\" It is permitted for the
    string to specify <tt>GMT</tt>, <tt>UT</tt>, or <tt>UTC</tt>
    redundantly-for example, <tt>GMT-5</tt> or <tt>utc+0430</tt>.
<li>The number is regarded as a year number if one of the
    following conditions is true:
<ul>
    <li>The number is equal to or greater than 70 and followed by a
        space, comma, slash, or end of string
    <li>The number is less than 70, and both a month and a day of
        the month have already been recognized</li>
</ul>
    If the recognized year number is less than 100, it is
    interpreted as an abbreviated year relative to a century of
    which dates are within 80 years before and 19 years after
    the time when the Date class is initialized.
    After adjusting the year number, 1900 is subtracted from
    it. For example, if the current year is 1999 then years in
    the range 19 to 99 are assumed to mean 1919 to 1999, while
    years from 0 to 18 are assumed to mean 2000 to 2018.  Note
    that this is slightly different from the interpretation of
    years less than 100 that is used in {@link java.text.SimpleDateFormat}.
<li>If the number is followed by a colon, it is regarded as an hour,
    unless an hour has already been recognized, in which case it is
    regarded as a minute.
<li>If the number is followed by a slash, it is regarded as a month
    (it is decreased by 1 to produce a number in the range <tt>0</tt>
    to <tt>11</tt>), unless a month has already been recognized, in
    which case it is regarded as a day of the month.
<li>If the number is followed by whitespace, a comma, a hyphen, or
    end of string, then if an hour has been recognized but not a
    minute, it is regarded as a minute; otherwise, if a minute has
    been recognized but not a second, it is regarded as a second;
    otherwise, it is regarded as a day of the month. </ul><p>
A consecutive sequence of letters is regarded as a word and treated
as follows:<ul>
<li>A word that matches <tt>AM</tt>, ignoring case, is ignored (but
    the parse fails if an hour has not been recognized or is less
    than <tt>1</tt> or greater than <tt>12</tt>).
<li>A word that matches <tt>PM</tt>, ignoring case, adds <tt>12</tt>
    to the hour (but the parse fails if an hour has not been
    recognized or is less than <tt>1</tt> or greater than <tt>12</tt>).
<li>Any word that matches any prefix of <tt>SUNDAY, MONDAY, TUESDAY,
    WEDNESDAY, THURSDAY, FRIDAY</tt>, or <tt>SATURDAY</tt>, ignoring
    case, is ignored. For example, <tt>sat, Friday, TUE</tt>, and
    <tt>Thurs</tt> are ignored.
<li>Otherwise, any word that matches any prefix of <tt>JANUARY,
    FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER,
    OCTOBER, NOVEMBER</tt>, or <tt>DECEMBER</tt>, ignoring case, and
    considering them in the order given here, is recognized as
    specifying a month and is converted to a number (<tt>0</tt> to
    <tt>11</tt>). For example, <tt>aug, Sept, april</tt>, and
    <tt>NOV</tt> are recognized as months. So is <tt>Ma</tt>, which
    is recognized as <tt>MARCH</tt>, not <tt>MAY</tt>.
<li>Any word that matches <tt>GMT, UT</tt>, or <tt>UTC</tt>, ignoring
    case, is treated as referring to UTC.
<li>Any word that matches <tt>EST, CST, MST</tt>, or <tt>PST</tt>,
    ignoring case, is recognized as referring to the time zone in
    North America that is five, six, seven, or eight hours west of
    Greenwich, respectively. Any word that matches <tt>EDT, CDT,
    MDT</tt>, or <tt>PDT</tt>, ignoring case, is recognized as
    referring to the same time zone, respectively, during daylight
    saving time.</ul><p>
Once the entire string s has been scanned, it is converted to a time
result in one of two ways. If a time zone or time-zone offset has been
recognized, then the year, month, day of month, hour, minute, and
second are interpreted in UTC and then the time-zone offset is
applied. Otherwise, the year, month, day of month, hour, minute, and
second are interpreted in the local time zone.

@param   s   a string to be parsed as a date.
@return  the number of milliseconds since January 1, 1970, 00:00:00 GMT
         represented by the string argument.
@see     java.text.DateFormat
@deprecated As of JDK version 1.1,
replaced by <code>DateFormat.parse(String s)</code>.
"
      end

      classrelation 3399810 // wtb (<unidirectional association>)
	relation 3399810 --->
	  a role_name "wtb" multiplicity "[]" init_value " {
        \"am\", \"pm\",
        \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\",
        \"saturday\", \"sunday\",
        \"january\", \"february\", \"march\", \"april\", \"may\", \"june\",
        \"july\", \"august\", \"september\", \"october\", \"november\", \"december\",
        \"gmt\", \"ut\", \"utc\", \"est\", \"edt\", \"cst\", \"cdt\",
        \"mst\", \"mdt\", \"pst\", \"pdt\"
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3399810 // wtb (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1887234 "ttb"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        14, 1, 0, 0, 0, 0, 0, 0, 0,
        2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
        10000 + 0, 10000 + 0, 10000 + 0,    // GMT/UT/UTC
        10000 + 5 * 60, 10000 + 4 * 60,     // EST/EDT
        10000 + 6 * 60, 10000 + 5 * 60,     // CST/CDT
        10000 + 7 * 60, 10000 + 6 * 60,     // MST/MDT
        10000 + 8 * 60, 10000 + 7 * 60      // PST/PDT
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8161282 "getYear"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns a value that is the result of subtracting 1900 from the
year that contains or begins with the instant in time represented
by this <code>Date</code> object, as interpreted in the local
time zone.

@return  the year represented by this date, minus 1900.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.YEAR) - 1900</code>.
"
      end

      operation 8161410 "setYear"
	public explicit_return_type "void"
	nparams 1
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the year of this <tt>Date</tt> object to be the specified
value plus 1900. This <code>Date</code> object is modified so
that it represents a point in time within the specified year,
with the month, date, hour, minute, and second the same as
before, as interpreted in the local time zone. (Of course, if
the date was February 29, for example, and the year is set to a
non-leap year, then the new date will be treated as if it were
on March 1.)

@param   year    the year value.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(Calendar.YEAR, year + 1900)</code>.
"
      end

      operation 8161538 "getMonth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns a number representing the month that contains or begins
with the instant in time represented by this <tt>Date</tt> object.
The value returned is between <code>0</code> and <code>11</code>,
with the value <code>0</code> representing January.

@return  the month represented by this date.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.MONTH)</code>.
"
      end

      operation 8161666 "setMonth"
	public explicit_return_type "void"
	nparams 1
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the month of this date to the specified value. This
<tt>Date</tt> object is modified so that it represents a point
in time within the specified month, with the year, date, hour,
minute, and second the same as before, as interpreted in the
local time zone. If the date was October 31, for example, and
the month is set to June, then the new date will be treated as
if it were on July 1, because June has only 30 days.

@param   month   the month value between 0-11.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(Calendar.MONTH, int month)</code>.
"
      end

      operation 8161794 "getDate"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the day of the month represented by this <tt>Date</tt> object.
The value returned is between <code>1</code> and <code>31</code>
representing the day of the month that contains or begins with the
instant in time represented by this <tt>Date</tt> object, as
interpreted in the local time zone.

@return  the day of the month represented by this date.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.DAY_OF_MONTH)</code>.
@deprecated
"
      end

      operation 8161922 "setDate"
	public explicit_return_type "void"
	nparams 1
	  param in name "date" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the day of the month of this <tt>Date</tt> object to the
specified value. This <tt>Date</tt> object is modified so that
it represents a point in time within the specified day of the
month, with the year, month, hour, minute, and second the same
as before, as interpreted in the local time zone. If the date
was April 30, for example, and the date is set to 31, then it
will be treated as if it were on May 1, because April has only
30 days.

@param   date   the day of the month value between 1-31.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(Calendar.DAY_OF_MONTH, int date)</code>.
"
      end

      operation 8162050 "getDay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the day of the week represented by this date. The
returned value (<tt>0</tt> = Sunday, <tt>1</tt> = Monday,
<tt>2</tt> = Tuesday, <tt>3</tt> = Wednesday, <tt>4</tt> =
Thursday, <tt>5</tt> = Friday, <tt>6</tt> = Saturday)
represents the day of the week that contains or begins with
the instant in time represented by this <tt>Date</tt> object,
as interpreted in the local time zone.

@return  the day of the week represented by this date.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.DAY_OF_WEEK)</code>.
"
      end

      operation 8162178 "getHours"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the hour represented by this <tt>Date</tt> object. The
returned value is a number (<tt>0</tt> through <tt>23</tt>)
representing the hour within the day that contains or begins
with the instant in time represented by this <tt>Date</tt>
object, as interpreted in the local time zone.

@return  the hour represented by this date.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.HOUR_OF_DAY)</code>.
"
      end

      operation 8162306 "setHours"
	public explicit_return_type "void"
	nparams 1
	  param in name "hours" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the hour of this <tt>Date</tt> object to the specified value.
This <tt>Date</tt> object is modified so that it represents a point
in time within the specified hour of the day, with the year, month,
date, minute, and second the same as before, as interpreted in the
local time zone.

@param   hours   the hour value.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(Calendar.HOUR_OF_DAY, int hours)</code>.
"
      end

      operation 8162434 "getMinutes"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the number of minutes past the hour represented by this date,
as interpreted in the local time zone.
The value returned is between <code>0</code> and <code>59</code>.

@return  the number of minutes past the hour represented by this date.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.MINUTE)</code>.
"
      end

      operation 8162562 "setMinutes"
	public explicit_return_type "void"
	nparams 1
	  param in name "minutes" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the minutes of this <tt>Date</tt> object to the specified value.
This <tt>Date</tt> object is modified so that it represents a point
in time within the specified minute of the hour, with the year, month,
date, hour, and second the same as before, as interpreted in the
local time zone.

@param   minutes   the value of the minutes.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(Calendar.MINUTE, int minutes)</code>.
"
      end

      operation 8162690 "getSeconds"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the number of seconds past the minute represented by this date.
The value returned is between <code>0</code> and <code>61</code>. The
values <code>60</code> and <code>61</code> can only occur on those
Java Virtual Machines that take leap seconds into account.

@return  the number of seconds past the minute represented by this date.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.get(Calendar.SECOND)</code>.
"
      end

      operation 8162818 "setSeconds"
	public explicit_return_type "void"
	nparams 1
	  param in name "seconds" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the seconds of this <tt>Date</tt> to the specified value.
This <tt>Date</tt> object is modified so that it represents a
point in time within the specified second of the minute, with
the year, month, date, hour, and minute the same as before, as
interpreted in the local time zone.

@param   seconds   the seconds value.
@see     java.util.Calendar
@deprecated As of JDK version 1.1,
replaced by <code>Calendar.set(Calendar.SECOND, int seconds)</code>.
"
      end

      operation 8162946 "getTime"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT
represented by this <tt>Date</tt> object.

@return  the number of milliseconds since January 1, 1970, 00:00:00 GMT
         represented by this date.
"
      end

      operation 8163074 "getTimeImpl"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8163202 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this <code>Date</code> object to represent a point in time that is
<code>time</code> milliseconds after January 1, 1970 00:00:00 GMT.

@param   time   the number of milliseconds.
"
      end

      operation 8163330 "before"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "when" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this date is before the specified date.

@param   when   a date.
@return  <code>true</code> if and only if the instant of time
           represented by this <tt>Date</tt> object is strictly
           earlier than the instant represented by <tt>when</tt>;
         <code>false</code> otherwise.
@exception NullPointerException if <code>when</code> is null.
"
      end

      operation 8163458 "after"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "when" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this date is after the specified date.

@param   when   a date.
@return  <code>true</code> if and only if the instant represented
         by this <tt>Date</tt> object is strictly later than the
         instant represented by <tt>when</tt>;
         <code>false</code> otherwise.
@exception NullPointerException if <code>when</code> is null.
"
      end

      operation 8163586 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two dates for equality.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and is a <code>Date</code> object that
represents the same point in time, to the millisecond, as this object.
<p>
Thus, two <code>Date</code> objects are equal if and only if the
<code>getTime</code> method returns the same <code>long</code>
value for both.

@param   obj   the object to compare with.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see     java.util.Date#getTime()
"
      end

      operation 8163714 "getMillisOf"
	class_operation package explicit_return_type "long"
	nparams 1
	  param inout name "date" type class_ref 521474 // Date
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the millisecond value of this <code>Date</code> object
without affecting its internal state.
"
      end

      operation 8163842 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherDate" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two Dates for ordering.

@param   anotherDate   the <code>Date</code> to be compared.
@return  the value <code>0</code> if the argument Date is equal to
         this Date; a value less than <code>0</code> if this Date
         is before the Date argument; and a value greater than
     <code>0</code> if this Date is after the Date argument.
@since   1.2
@exception NullPointerException if <code>anotherDate</code> is null.
"
      end

      operation 8163970 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this object. The result is the
exclusive OR of the two halves of the primitive <tt>long</tt>
value returned by the {@link Date#getTime}
method. That is, the hash code is the value of the expression:
<blockquote><pre>{@code
(int)(this.getTime()^(this.getTime() >>> 32))
}</pre></blockquote>

@return  a hash code value for this object.
"
      end

      operation 8164098 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this <code>Date</code> object to a <code>String</code>
of the form:
<blockquote><pre>
dow mon dd hh:mm:ss zzz yyyy</pre></blockquote>
where:<ul>
<li><tt>dow</tt> is the day of the week (<tt>Sun, Mon, Tue, Wed,
    Thu, Fri, Sat</tt>).
<li><tt>mon</tt> is the month (<tt>Jan, Feb, Mar, Apr, May, Jun,
    Jul, Aug, Sep, Oct, Nov, Dec</tt>).
<li><tt>dd</tt> is the day of the month (<tt>01</tt> through
    <tt>31</tt>), as two decimal digits.
<li><tt>hh</tt> is the hour of the day (<tt>00</tt> through
    <tt>23</tt>), as two decimal digits.
<li><tt>mm</tt> is the minute within the hour (<tt>00</tt> through
    <tt>59</tt>), as two decimal digits.
<li><tt>ss</tt> is the second within the minute (<tt>00</tt> through
    <tt>61</tt>, as two decimal digits.
<li><tt>zzz</tt> is the time zone (and may reflect daylight saving
    time). Standard time zone abbreviations include those
    recognized by the method <tt>parse</tt>. If time zone
    information is not available, then <tt>zzz</tt> is empty -
    that is, it consists of no characters at all.
<li><tt>yyyy</tt> is the year, as four decimal digits.
</ul>

@return  a string representation of this date.
@see     java.util.Date#toLocaleString()
@see     java.util.Date#toGMTString()
"
      end

      operation 8164226 "convertToAbbr"
	class_operation private return_type class_ref 173058 // StringBuilder
	nparams 2
	  param inout name "sb" type class_ref 173058 // StringBuilder
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the given name to its 3-letter abbreviation (e.g.,
\"monday\" -> \"Mon\") and stored the abbreviation in the given
<code>StringBuilder</code>.
"
      end

      operation 8164354 "toLocaleString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a string representation of this <tt>Date</tt> object in an
implementation-dependent form. The intent is that the form should
be familiar to the user of the Java application, wherever it may
happen to be running. The intent is comparable to that of the
\"<code>%c</code>\" format supported by the <code>strftime()</code>
function of ISO&nbsp;C.

@return  a string representation of this date, using the locale
         conventions.
@see     java.text.DateFormat
@see     java.util.Date#toString()
@see     java.util.Date#toGMTString()
@deprecated As of JDK version 1.1,
replaced by <code>DateFormat.format(Date date)</code>.
"
      end

      operation 8164482 "toGMTString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a string representation of this <tt>Date</tt> object of
the form:
<blockquote><pre>
d mon yyyy hh:mm:ss GMT</pre></blockquote>
where:<ul>
<li><i>d</i> is the day of the month (<tt>1</tt> through <tt>31</tt>),
    as one or two decimal digits.
<li><i>mon</i> is the month (<tt>Jan, Feb, Mar, Apr, May, Jun, Jul,
    Aug, Sep, Oct, Nov, Dec</tt>).
<li><i>yyyy</i> is the year, as four decimal digits.
<li><i>hh</i> is the hour of the day (<tt>00</tt> through <tt>23</tt>),
    as two decimal digits.
<li><i>mm</i> is the minute within the hour (<tt>00</tt> through
    <tt>59</tt>), as two decimal digits.
<li><i>ss</i> is the second within the minute (<tt>00</tt> through
    <tt>61</tt>), as two decimal digits.
<li><i>GMT</i> is exactly the ASCII letters \"<tt>GMT</tt>\" to indicate
    Greenwich Mean Time.
</ul><p>
The result does not depend on the local time zone.

@return  a string representation of this date, using the Internet GMT
         conventions.
@see     java.text.DateFormat
@see     java.util.Date#toString()
@see     java.util.Date#toLocaleString()
@deprecated As of JDK version 1.1,
replaced by <code>DateFormat.format(Date date)</code>, using a
GMT <code>TimeZone</code>.
"
      end

      operation 8164610 "getTimezoneOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the offset, measured in minutes, for the local time zone
relative to UTC that is appropriate for the time represented by
this <code>Date</code> object.
<p>
For example, in Massachusetts, five time zones west of Greenwich:
<blockquote><pre>
new Date(96, 1, 14).getTimezoneOffset() returns 300</pre></blockquote>
because on February 14, 1996, standard time (Eastern Standard Time)
is in use, which is offset five hours from UTC; but:
<blockquote><pre>
new Date(96, 5, 1).getTimezoneOffset() returns 240</pre></blockquote>
because on June 1, 1996, daylight saving time (Eastern Daylight Time)
is in use, which is offset only four hours from UTC.<p>
This method produces the same result as if it computed:
<blockquote><pre>
(this.getTime() - UTC(this.getYear(),
                      this.getMonth(),
                      this.getDate(),
                      this.getHours(),
                      this.getMinutes(),
                      this.getSeconds())) / (60 * 1000)
</pre></blockquote>

@return  the time-zone offset, in minutes, for the current time zone.
@see     java.util.Calendar#ZONE_OFFSET
@see     java.util.Calendar#DST_OFFSET
@see     java.util.TimeZone#getDefault
@deprecated As of JDK version 1.1,
replaced by <code>-(Calendar.get(Calendar.ZONE_OFFSET) +
Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)</code>.
"
      end

      operation 8164738 "getCalendarDate"
	private explicit_return_type "BaseCalendar.Date"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8164866 "normalize"
	private explicit_return_type "BaseCalendar.Date"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8164994 "normalize"
	private explicit_return_type "BaseCalendar.Date"
	nparams 1
	  param inout name "date" explicit_type "BaseCalendar.Date"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " fastTime and the returned data are in sync upon return."
      end

      operation 8165122 "getCalendarSystem"
	class_operation private explicit_return_type "BaseCalendar"
	nparams 1
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Gregorian or Julian calendar system to use with the
given date. Use Gregorian from October 15, 1582.

@param year normalized calendar year (not -1900)
@return the CalendarSystem to use for the specified date
"
      end

      operation 8165250 "getCalendarSystem"
	class_operation private explicit_return_type "BaseCalendar"
	nparams 1
	  param in name "utc" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8165378 "getCalendarSystem"
	class_operation private explicit_return_type "BaseCalendar"
	nparams 1
	  param inout name "cdate" explicit_type "BaseCalendar.Date"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8165506 "getJulianCalendar"
	class_operation private explicit_return_type "BaseCalendar"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8165634 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of this object to a stream (i.e., serialize it).

@serialData The value returned by <code>getTime()</code>
            is emitted (long).  This represents the offset from
            January 1, 1970, 00:00:00 GMT in milliseconds.
"
      end

      operation 8165762 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute this object from a stream (i.e., deserialize it).
"
      end

      operation 8165890 "from"
	class_operation public return_type class_ref 521474 // Date
	nparams 1
	  param inout name "instant" type class_ref 1003778 // Instant
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an instance of {@code Date} from an {@code Instant} object.
<p>
{@code Instant} uses a precision of nanoseconds, whereas {@code Date}
uses a precision of milliseconds.  The conversion will trancate any
excess precision information as though the amount in nanoseconds was
subject to integer division by one million.
<p>
{@code Instant} can store points on the time-line further in the future
and further in the past than {@code Date}. In this scenario, this method
will throw an exception.

@param instant  the instant to convert
@return a {@code Date} representing the same point on the time-line as
 the provided instant
@exception NullPointerException if {@code instant} is null.
@exception IllegalArgumentException if the instant is too large to
 represent as a {@code Date}
@since 1.8
"
      end

      operation 8166018 "toInstant"
	public return_type class_ref 1003778 // Instant
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this {@code Date} object to an {@code Instant}.
<p>
The conversion creates an {@code Instant} that represents the same
point on the time-line as this {@code Date}.

@return an instant representing the same point on the time-line as
 this {@code Date} object
@since 1.8
"
      end
    end

    class 525698 "EventObject"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
The root class from which all event state objects shall be derived.
<p>
All Events are constructed with a reference to the object, the \"source\",
that is logically deemed to be the object upon which the Event in question
initially occurred upon.

@since JDK1.1
"
      classrelation 1030402 // <realization>
	relation 1030402 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1030402 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 669314 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5516075349620653480L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1030530 // source (<unidirectional association>)
	relation 1030530 --->
	  a role_name "source" protected
	    comment "
The object on which the Event initially occurred.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1030530 // source (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 3174018 "EventObject"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a prototypical Event.

@param    source    The object on which the Event initially occurred.
@exception  IllegalArgumentException  if source is null.
"
      end

      operation 3174146 "getSource"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The object on which the Event initially occurred.

@return   The object on which the Event initially occurred.
"
      end

      operation 3174274 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String representation of this EventObject.

@return  A a String representation of this EventObject.
"
      end
    end

    class 660738 "MissingResourceException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a resource is missing.
@see java.lang.Exception
@see ResourceBundle
@author      Mark Davis
@since       JDK1.1
"
      classrelation 3533442 // <generalisation>
	relation 3533442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3533442 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 8859650 "MissingResourceException"
	public explicit_return_type ""
	nparams 3
	  param inout name "s" type class_ref 128130 // String
	  param inout name "className" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a MissingResourceException with the specified information.
A detail message is a String that describes this particular exception.
@param s the detail message
@param className the name of the resource class
@param key the key for the missing resource.
"
      end

      operation 8859778 "MissingResourceException"
	package explicit_return_type ""
	nparams 4
	  param inout name "message" type class_ref 128130 // String
	  param inout name "className" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MissingResourceException</code> with
<code>message</code>, <code>className</code>, <code>key</code>,
and <code>cause</code>. This constructor is package private for
use by <code>ResourceBundle.getBundle</code>.

@param message
       the detail message
@param className
       the name of the resource class
@param key
       the key for the missing resource.
@param cause
       the cause (which is saved for later retrieval by the
       {@link Throwable.getCause()} method). (A null value is
       permitted, and indicates that the cause is nonexistent
       or unknown.)
"
      end

      operation 8859906 "getClassName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets parameter passed by constructor.

@return the name of the resource class
"
      end

      operation 8860034 "getKey"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets parameter passed by constructor.

@return the key for the missing resource
"
      end

      attribute 2065282 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4876345176062000401L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "============ privates ============
 serialization compatibility with JDK1.1
"
      end

      classrelation 3533570 // className (<unidirectional association>)
	relation 3533570 --->
	  a role_name "className" private
	    comment "
The class name of the resource bundle requested by the user.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3533570 // className (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3533698 // key (<unidirectional association>)
	relation 3533698 --->
	  a role_name "key" private
	    comment "
The name of the specific resource requested by the user.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3533698 // key (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 723202 "GregorianCalendar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>GregorianCalendar</code> is a concrete subclass of
<code>Calendar</code> and provides the standard calendar system
used by most of the world.

<p> <code>GregorianCalendar</code> is a hybrid calendar that
supports both the Julian and Gregorian calendar systems with the
support of a single discontinuity, which corresponds by default to
the Gregorian date when the Gregorian calendar was instituted
(October 15, 1582 in some countries, later in others).  The cutover
date may be changed by the caller by calling {@link
#setGregorianChange(Date) setGregorianChange()}.

<p>
Historically, in those countries which adopted the Gregorian calendar first,
October 4, 1582 (Julian) was thus followed by October 15, 1582 (Gregorian). This calendar models
this correctly.  Before the Gregorian cutover, <code>GregorianCalendar</code>
implements the Julian calendar.  The only difference between the Gregorian
and the Julian calendar is the leap year rule. The Julian calendar specifies
leap years every four years, whereas the Gregorian calendar omits century
years which are not divisible by 400.

<p>
<code>GregorianCalendar</code> implements <em>proleptic</em> Gregorian and
Julian calendars. That is, dates are computed by extrapolating the current
rules indefinitely far backward and forward in time. As a result,
<code>GregorianCalendar</code> may be used for all years to generate
meaningful and consistent results. However, dates obtained using
<code>GregorianCalendar</code> are historically accurate only from March 1, 4
AD onward, when modern Julian calendar rules were adopted.  Before this date,
leap year rules were applied irregularly, and before 45 BC the Julian
calendar did not even exist.

<p>
Prior to the institution of the Gregorian calendar, New Year's Day was
March 25. To avoid confusion, this calendar always uses January 1. A manual
adjustment may be made if desired for dates that are prior to the Gregorian
changeover and which fall between January 1 and March 24.

<h3><a name=\"week_and_year\">Week Of Year and Week Year</a></h3>

<p>Values calculated for the {@link Calendar#WEEK_OF_YEAR
WEEK_OF_YEAR} field range from 1 to 53. The first week of a
calendar year is the earliest seven day period starting on {@link
Calendar#getFirstDayOfWeek() getFirstDayOfWeek()} that contains at
least {@link Calendar#getMinimalDaysInFirstWeek()
getMinimalDaysInFirstWeek()} days from that year. It thus depends
on the values of {@code getMinimalDaysInFirstWeek()}, {@code
getFirstDayOfWeek()}, and the day of the week of January 1. Weeks
between week 1 of one year and week 1 of the following year
(exclusive) are numbered sequentially from 2 to 52 or 53 (except
for year(s) involved in the Julian-Gregorian transition).

<p>The {@code getFirstDayOfWeek()} and {@code
getMinimalDaysInFirstWeek()} values are initialized using
locale-dependent resources when constructing a {@code
GregorianCalendar}. <a name=\"iso8601_compatible_setting\">The week
determination is compatible</a> with the ISO 8601 standard when {@code
getFirstDayOfWeek()} is {@code MONDAY} and {@code
getMinimalDaysInFirstWeek()} is 4, which values are used in locales
where the standard is preferred. These values can explicitly be set by
calling {@link Calendar#setFirstDayOfWeek(int) setFirstDayOfWeek()} and
{@link Calendar#setMinimalDaysInFirstWeek(int)
setMinimalDaysInFirstWeek()}.

<p>A <a name=\"week_year\"><em>week year</em></a> is in sync with a
{@code WEEK_OF_YEAR} cycle. All weeks between the first and last
weeks (inclusive) have the same <em>week year</em> value.
Therefore, the first and last days of a week year may have
different calendar year values.

<p>For example, January 1, 1998 is a Thursday. If {@code
getFirstDayOfWeek()} is {@code MONDAY} and {@code
getMinimalDaysInFirstWeek()} is 4 (ISO 8601 standard compatible
setting), then week 1 of 1998 starts on December 29, 1997, and ends
on January 4, 1998. The week year is 1998 for the last three days
of calendar year 1997. If, however, {@code getFirstDayOfWeek()} is
{@code SUNDAY}, then week 1 of 1998 starts on January 4, 1998, and
ends on January 10, 1998; the first three days of 1998 then are
part of week 53 of 1997 and their week year is 1997.

<h4>Week Of Month</h4>

<p>Values calculated for the <code>WEEK_OF_MONTH</code> field range from 0
to 6.  Week 1 of a month (the days with <code>WEEK_OF_MONTH =
1</code>) is the earliest set of at least
<code>getMinimalDaysInFirstWeek()</code> contiguous days in that month,
ending on the day before <code>getFirstDayOfWeek()</code>.  Unlike
week 1 of a year, week 1 of a month may be shorter than 7 days, need
not start on <code>getFirstDayOfWeek()</code>, and will not include days of
the previous month.  Days of a month before week 1 have a
<code>WEEK_OF_MONTH</code> of 0.

<p>For example, if <code>getFirstDayOfWeek()</code> is <code>SUNDAY</code>
and <code>getMinimalDaysInFirstWeek()</code> is 4, then the first week of
January 1998 is Sunday, January 4 through Saturday, January 10.  These days
have a <code>WEEK_OF_MONTH</code> of 1.  Thursday, January 1 through
Saturday, January 3 have a <code>WEEK_OF_MONTH</code> of 0.  If
<code>getMinimalDaysInFirstWeek()</code> is changed to 3, then January 1
through January 3 have a <code>WEEK_OF_MONTH</code> of 1.

<h4>Default Fields Values</h4>

<p>The <code>clear</code> method sets calendar field(s)
undefined. <code>GregorianCalendar</code> uses the following
default value for each calendar field if its value is undefined.

<table cellpadding=\"0\" cellspacing=\"3\" border=\"0\"
       summary=\"GregorianCalendar default field values\"
       style=\"text-align: left; width: 66%;\">
  <tbody>
    <tr>
      <th style=\"vertical-align: top; background-color: rgb(204, 204, 255);
          text-align: center;\">Field<br>
      </th>
      <th style=\"vertical-align: top; background-color: rgb(204, 204, 255);
          text-align: center;\">Default Value<br>
      </th>
    </tr>
    <tr>
      <td style=\"vertical-align: middle;\">
             <code>ERA<br></code>
      </td>
      <td style=\"vertical-align: middle;\">
             <code>AD<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: middle; background-color: rgb(238, 238, 255);\">
             <code>YEAR<br></code>
      </td>
      <td style=\"vertical-align: middle; background-color: rgb(238, 238, 255);\">
             <code>1970<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: middle;\">
             <code>MONTH<br></code>
      </td>
      <td style=\"vertical-align: middle;\">
             <code>JANUARY<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">
             <code>DAY_OF_MONTH<br></code>
      </td>
      <td style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">
             <code>1<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: middle;\">
             <code>DAY_OF_WEEK<br></code>
      </td>
      <td style=\"vertical-align: middle;\">
             <code>the first day of week<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">
             <code>WEEK_OF_MONTH<br></code>
      </td>
      <td style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">
             <code>0<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: top;\">
             <code>DAY_OF_WEEK_IN_MONTH<br></code>
      </td>
      <td style=\"vertical-align: top;\">
             <code>1<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: middle; background-color: rgb(238, 238, 255);\">
             <code>AM_PM<br></code>
      </td>
      <td style=\"vertical-align: middle; background-color: rgb(238, 238, 255);\">
             <code>AM<br></code>
      </td>
    </tr>
    <tr>
      <td style=\"vertical-align: middle;\">
             <code>HOUR, HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND<br></code>
      </td>
      <td style=\"vertical-align: middle;\">
             <code>0<br></code>
      </td>
    </tr>
  </tbody>
</table>
<br>Default values are not applicable for the fields not listed above.

<p>
<strong>Example:</strong>
<blockquote>
<pre>
// get the supported ids for GMT-08:00 (Pacific Standard Time)
String[] ids = TimeZone.getAvailableIDs(-8 * 60 * 60 * 1000);
// if no ids were returned, something is wrong. get out.
if (ids.length == 0)
    System.exit(0);

 // begin output
System.out.println(\"Current Time\");

// create a Pacific Standard Time time zone
SimpleTimeZone pdt = new SimpleTimeZone(-8 * 60 * 60 * 1000, ids[0]);

// set up rules for Daylight Saving Time
pdt.setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2 * 60 * 60 * 1000);
pdt.setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2 * 60 * 60 * 1000);

// create a GregorianCalendar with the Pacific Daylight time zone
// and the current date and time
Calendar calendar = new GregorianCalendar(pdt);
Date trialTime = new Date();
calendar.setTime(trialTime);

// print out a bunch of interesting things
System.out.println(\"ERA: \" + calendar.get(Calendar.ERA));
System.out.println(\"YEAR: \" + calendar.get(Calendar.YEAR));
System.out.println(\"MONTH: \" + calendar.get(Calendar.MONTH));
System.out.println(\"WEEK_OF_YEAR: \" + calendar.get(Calendar.WEEK_OF_YEAR));
System.out.println(\"WEEK_OF_MONTH: \" + calendar.get(Calendar.WEEK_OF_MONTH));
System.out.println(\"DATE: \" + calendar.get(Calendar.DATE));
System.out.println(\"DAY_OF_MONTH: \" + calendar.get(Calendar.DAY_OF_MONTH));
System.out.println(\"DAY_OF_YEAR: \" + calendar.get(Calendar.DAY_OF_YEAR));
System.out.println(\"DAY_OF_WEEK: \" + calendar.get(Calendar.DAY_OF_WEEK));
System.out.println(\"DAY_OF_WEEK_IN_MONTH: \"
                   + calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH));
System.out.println(\"AM_PM: \" + calendar.get(Calendar.AM_PM));
System.out.println(\"HOUR: \" + calendar.get(Calendar.HOUR));
System.out.println(\"HOUR_OF_DAY: \" + calendar.get(Calendar.HOUR_OF_DAY));
System.out.println(\"MINUTE: \" + calendar.get(Calendar.MINUTE));
System.out.println(\"SECOND: \" + calendar.get(Calendar.SECOND));
System.out.println(\"MILLISECOND: \" + calendar.get(Calendar.MILLISECOND));
System.out.println(\"ZONE_OFFSET: \"
                   + (calendar.get(Calendar.ZONE_OFFSET)/(60*60*1000)));
System.out.println(\"DST_OFFSET: \"
                   + (calendar.get(Calendar.DST_OFFSET)/(60*60*1000)));

System.out.println(\"Current Time, with hour reset to 3\");
calendar.clear(Calendar.HOUR_OF_DAY); // so doesn't override
calendar.set(Calendar.HOUR, 3);
System.out.println(\"ERA: \" + calendar.get(Calendar.ERA));
System.out.println(\"YEAR: \" + calendar.get(Calendar.YEAR));
System.out.println(\"MONTH: \" + calendar.get(Calendar.MONTH));
System.out.println(\"WEEK_OF_YEAR: \" + calendar.get(Calendar.WEEK_OF_YEAR));
System.out.println(\"WEEK_OF_MONTH: \" + calendar.get(Calendar.WEEK_OF_MONTH));
System.out.println(\"DATE: \" + calendar.get(Calendar.DATE));
System.out.println(\"DAY_OF_MONTH: \" + calendar.get(Calendar.DAY_OF_MONTH));
System.out.println(\"DAY_OF_YEAR: \" + calendar.get(Calendar.DAY_OF_YEAR));
System.out.println(\"DAY_OF_WEEK: \" + calendar.get(Calendar.DAY_OF_WEEK));
System.out.println(\"DAY_OF_WEEK_IN_MONTH: \"
                   + calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH));
System.out.println(\"AM_PM: \" + calendar.get(Calendar.AM_PM));
System.out.println(\"HOUR: \" + calendar.get(Calendar.HOUR));
System.out.println(\"HOUR_OF_DAY: \" + calendar.get(Calendar.HOUR_OF_DAY));
System.out.println(\"MINUTE: \" + calendar.get(Calendar.MINUTE));
System.out.println(\"SECOND: \" + calendar.get(Calendar.SECOND));
System.out.println(\"MILLISECOND: \" + calendar.get(Calendar.MILLISECOND));
System.out.println(\"ZONE_OFFSET: \"
       + (calendar.get(Calendar.ZONE_OFFSET)/(60*60*1000))); // in hours
System.out.println(\"DST_OFFSET: \"
       + (calendar.get(Calendar.DST_OFFSET)/(60*60*1000))); // in hours
</pre>
</blockquote>

@see          TimeZone
@author David Goldsmith, Mark Davis, Chen-Lieh Huang, Alan Liu
@since JDK1.1
"
      classrelation 3520002 // <generalisation>
	relation 3520002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3520002 // <generalisation>
	  b parent class_ref 723586 // Calendar
      end

      attribute 2048642 "BC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Implementation Notes

The epoch is the number of days or milliseconds from some defined
starting point. The epoch for java.util.Date is used here; that is,
milliseconds from January 1, 1970 (Gregorian), midnight UTC.  Other
epochs which are used are January 1, year 1 (Gregorian), which is day 1
of the Gregorian calendar, and December 30, year 0 (Gregorian), which is
day 1 of the Julian calendar.

We implement the proleptic Julian and Gregorian calendars.  This means we
implement the modern definition of the calendar even though the
historical usage differs.  For example, if the Gregorian change is set
to new Date(Long.MIN_VALUE), we have a pure Gregorian calendar which
labels dates preceding the invention of the Gregorian calendar in 1582 as
if the calendar existed then.

Likewise, with the Julian calendar, we assume a consistent
4-year leap year rule, even though the historical pattern of
leap years is irregular, being every 3 years from 45 BCE
through 9 BCE, then every 4 years from 8 CE onwards, with no
leap years in-between.  Thus date computations and functions
such as isLeapYear() are not intended to be historically
accurate.

////////////////
 Class Variables
////////////////

Value of the <code>ERA</code> field indicating
the period before the common era (before Christ), also known as BCE.
The sequence of years at the transition from <code>BC</code> to <code>AD</code> is
..., 2 BC, 1 BC, 1 AD, 2 AD,...

@see #ERA

"
      end

      attribute 2048770 "BCE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #ERA} field indicating
the period before the common era, the same value as {@link #BC}.

@see #CE

"
      end

      attribute 2048898 "AD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the <code>ERA</code> field indicating
the common era (Anno Domini), also known as CE.
The sequence of years at the transition from <code>BC</code> to <code>AD</code> is
..., 2 BC, 1 BC, 1 AD, 2 AD,...

@see #ERA

"
      end

      attribute 2049026 "CE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #ERA} field indicating
the common era, the same value as {@link #AD}.

@see #BCE

"
      end

      attribute 2049154 "EPOCH_OFFSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 719163"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fixed date of January 1, 1970 (Gregorian)"
      end

      attribute 2049282 "EPOCH_YEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1970"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2049410 "MONTH_LENGTH"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {31,28,31,30,31,30,31,31,30,31,30,31}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 0-based"
      end

      attribute 2049538 "LEAP_MONTH_LENGTH"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {31,29,31,30,31,30,31,31,30,31,30,31}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 0-based"
      end

      attribute 2049666 "ONE_SECOND"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Useful millisecond constants.  Although ONE_DAY and ONE_WEEK can fit
 into ints, they must be longs in order to prevent arithmetic overflow
 when performing (bug 4173516).
"
      end

      attribute 2049794 "ONE_MINUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*ONE_SECOND"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2049922 "ONE_HOUR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*ONE_MINUTE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2050050 "ONE_DAY"
	class_attribute const_attribute private explicit_type "long"
	init_value " 24*ONE_HOUR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2050178 "ONE_WEEK"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7*ONE_DAY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2050306 "MIN_VALUES"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        BCE,            // ERA
        1,              // YEAR
        JANUARY,        // MONTH
        1,              // WEEK_OF_YEAR
        0,              // WEEK_OF_MONTH
        1,              // DAY_OF_MONTH
        1,              // DAY_OF_YEAR
        SUNDAY,         // DAY_OF_WEEK
        1,              // DAY_OF_WEEK_IN_MONTH
        AM,             // AM_PM
        0,              // HOUR
        0,              // HOUR_OF_DAY
        0,              // MINUTE
        0,              // SECOND
        0,              // MILLISECOND
        -13*ONE_HOUR,   // ZONE_OFFSET (UNIX compatibility)
        0               // DST_OFFSET
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<pre>
                           Greatest       Least
Field name        Minimum   Minimum     Maximum     Maximum
----------        -------   -------     -------     -------
ERA                     0         0           1           1
YEAR                    1         1   292269054   292278994
MONTH                   0         0          11          11
WEEK_OF_YEAR            1         1          52*         53
WEEK_OF_MONTH           0         0           4*          6
DAY_OF_MONTH            1         1          28*         31
DAY_OF_YEAR             1         1         365*        366
DAY_OF_WEEK             1         1           7           7
DAY_OF_WEEK_IN_MONTH   -1        -1           4*          6
AM_PM                   0         0           1           1
HOUR                    0         0          11          11
HOUR_OF_DAY             0         0          23          23
MINUTE                  0         0          59          59
SECOND                  0         0          59          59
MILLISECOND             0         0         999         999
ZONE_OFFSET        -13:00    -13:00       14:00       14:00
DST_OFFSET           0:00      0:00        0:20        2:00
</pre>
*: depends on the Gregorian change date

"
      end

      attribute 2050434 "LEAST_MAX_VALUES"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        CE,             // ERA
        292269054,      // YEAR
        DECEMBER,       // MONTH
        52,             // WEEK_OF_YEAR
        4,              // WEEK_OF_MONTH
        28,             // DAY_OF_MONTH
        365,            // DAY_OF_YEAR
        SATURDAY,       // DAY_OF_WEEK
        4,              // DAY_OF_WEEK_IN
        PM,             // AM_PM
        11,             // HOUR
        23,             // HOUR_OF_DAY
        59,             // MINUTE
        59,             // SECOND
        999,            // MILLISECOND
        14*ONE_HOUR,    // ZONE_OFFSET
        20*ONE_MINUTE   // DST_OFFSET (historical least maximum)
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2050562 "MAX_VALUES"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        CE,             // ERA
        292278994,      // YEAR
        DECEMBER,       // MONTH
        53,             // WEEK_OF_YEAR
        6,              // WEEK_OF_MONTH
        31,             // DAY_OF_MONTH
        366,            // DAY_OF_YEAR
        SATURDAY,       // DAY_OF_WEEK
        6,              // DAY_OF_WEEK_IN
        PM,             // AM_PM
        11,             // HOUR
        23,             // HOUR_OF_DAY
        59,             // MINUTE
        59,             // SECOND
        999,            // MILLISECOND
        14*ONE_HOUR,    // ZONE_OFFSET
        2*ONE_HOUR      // DST_OFFSET (double summer time)
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2050690 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8125100834729963327L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"FieldNameHidesFieldInSuperclass\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Proclaim serialization compatibility with JDK 1.1
"
      end

      attribute 2050818 "gcal"
	class_attribute const_attribute private explicit_type "Gregorian"
	init_value "
                                CalendarSystem.getGregorianCalendar()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reference to the sun.util.calendar.Gregorian instance (singleton).
"
      end

      attribute 2050946 "jcal"
	class_attribute private explicit_type "JulianCalendar"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reference to the JulianCalendar instance (singleton), set as needed. See
 getJulianCalendarSystem().
"
      end

      attribute 2051074 "jeras"
	class_attribute private explicit_type "Era"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " JulianCalendar eras. See getJulianCalendarSystem().
"
      end

      attribute 2051202 "DEFAULT_GREGORIAN_CUTOVER"
	class_attribute const_attribute package explicit_type "long"
	init_value " -12219292800000L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The default value of gregorianCutover.
"
      end

      attribute 2051330 "gregorianCutover"
	private explicit_type "long"
	init_value " DEFAULT_GREGORIAN_CUTOVER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "///////////////////
 Instance Variables
///////////////////

The point at which the Gregorian calendar rules are used, measured in
milliseconds from the standard epoch.  Default is October 15, 1582
(Gregorian) 00:00:00 UTC or -12219292800000L.  For this value, October 4,
1582 (Julian) is followed by October 15, 1582 (Gregorian).  This
corresponds to Julian day number 2299161.
@serial

"
      end

      attribute 2051458 "gregorianCutoverDate"
	private explicit_type "long"
	init_value "
        (((DEFAULT_GREGORIAN_CUTOVER + 1)/ONE_DAY) - 1) + EPOCH_OFFSET"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The fixed date of the gregorianCutover.

 == 577736"
      end

      attribute 2051586 "gregorianCutoverYear"
	private explicit_type "int"
	init_value " 1582"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The normalized year of the gregorianCutover in Gregorian, with
0 representing 1 BCE, -1 representing 2 BCE, etc.

"
      end

      attribute 2051714 "gregorianCutoverYearJulian"
	private explicit_type "int"
	init_value " 1582"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The normalized year of the gregorianCutover in Julian, with 0
representing 1 BCE, -1 representing 2 BCE, etc.

"
      end

      attribute 2051842 "gdate"
	private explicit_type "BaseCalendar.Date"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "gdate always has a sun.util.calendar.Gregorian.Date instance to
avoid overhead of creating it. The assumption is that most
applications will need only Gregorian calendar calculations.

"
      end

      attribute 2051970 "cdate"
	private explicit_type "BaseCalendar.Date"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Reference to either gdate or a JulianCalendar.Date
instance. After calling complete(), this value is guaranteed to
be set.

"
      end

      attribute 2052098 "calsys"
	private explicit_type "BaseCalendar"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The CalendarSystem used to calculate the date in cdate. After
calling complete(), this value is guaranteed to be set and
consistent with the cdate value.

"
      end

      attribute 2052226 "zoneOffsets"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary int[2] to get time zone offsets. zoneOffsets[0] gets
the GMT offset value and zoneOffsets[1] gets the DST saving
value.

"
      end

      attribute 2052354 "originalFields"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary storage for saving original fields[] values in
non-lenient mode.

"
      end

      operation 8803586 "GregorianCalendar"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/////////////
 Constructors
/////////////

Constructs a default <code>GregorianCalendar</code> using the current time
in the default time zone with the default
{@link Locale.Category#FORMAT FORMAT} locale.
"
      end

      operation 8803714 "GregorianCalendar"
	public explicit_return_type ""
	nparams 1
	  param inout name "zone" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>GregorianCalendar</code> based on the current time
in the given time zone with the default
{@link Locale.Category#FORMAT FORMAT} locale.

@param zone the given time zone.
"
      end

      operation 8803842 "GregorianCalendar"
	public explicit_return_type ""
	nparams 1
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>GregorianCalendar</code> based on the current time
in the default time zone with the given locale.

@param aLocale the given locale.
"
      end

      operation 8803970 "GregorianCalendar"
	public explicit_return_type ""
	nparams 2
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>GregorianCalendar</code> based on the current time
in the given time zone with the given locale.

@param zone the given time zone.
@param aLocale the given locale.
"
      end

      operation 8804098 "GregorianCalendar"
	public explicit_return_type ""
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>GregorianCalendar</code> with the given date set
in the default time zone with the default locale.

@param year the value used to set the <code>YEAR</code> calendar field in the calendar.
@param month the value used to set the <code>MONTH</code> calendar field in the calendar.
Month value is 0-based. e.g., 0 for January.
@param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.
"
      end

      operation 8804226 "GregorianCalendar"
	public explicit_return_type ""
	nparams 5
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>GregorianCalendar</code> with the given date
and time set for the default time zone with the default locale.

@param year the value used to set the <code>YEAR</code> calendar field in the calendar.
@param month the value used to set the <code>MONTH</code> calendar field in the calendar.
Month value is 0-based. e.g., 0 for January.
@param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.
@param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field
in the calendar.
@param minute the value used to set the <code>MINUTE</code> calendar field
in the calendar.
"
      end

      operation 8804354 "GregorianCalendar"
	public explicit_return_type ""
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GregorianCalendar with the given date
and time set for the default time zone with the default locale.

@param year the value used to set the <code>YEAR</code> calendar field in the calendar.
@param month the value used to set the <code>MONTH</code> calendar field in the calendar.
Month value is 0-based. e.g., 0 for January.
@param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.
@param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field
in the calendar.
@param minute the value used to set the <code>MINUTE</code> calendar field
in the calendar.
@param second the value used to set the <code>SECOND</code> calendar field
in the calendar.
"
      end

      operation 8804482 "GregorianCalendar"
	package explicit_return_type ""
	nparams 7
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "millis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>GregorianCalendar</code> with the given date
and time set for the default time zone with the default locale.

@param year the value used to set the <code>YEAR</code> calendar field in the calendar.
@param month the value used to set the <code>MONTH</code> calendar field in the calendar.
Month value is 0-based. e.g., 0 for January.
@param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.
@param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field
in the calendar.
@param minute the value used to set the <code>MINUTE</code> calendar field
in the calendar.
@param second the value used to set the <code>SECOND</code> calendar field
in the calendar.
@param millis the value used to set the <code>MILLISECOND</code> calendar field
"
      end

      operation 8804610 "GregorianCalendar"
	package explicit_return_type ""
	nparams 3
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty GregorianCalendar.

@param zone    the given time zone
@param aLocale the given locale
@param flag    the flag requesting an empty instance
"
      end

      operation 8804738 "setGregorianChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Public methods
///////////////

Sets the <code>GregorianCalendar</code> change date. This is the point when the switch
from Julian dates to Gregorian dates occurred. Default is October 15,
1582 (Gregorian). Previous to this, dates will be in the Julian calendar.
<p>
To obtain a pure Julian calendar, set the change date to
<code>Date(Long.MAX_VALUE)</code>.  To obtain a pure Gregorian calendar,
set the change date to <code>Date(Long.MIN_VALUE)</code>.

@param date the given Gregorian cutover date.
"
      end

      operation 8804866 "setGregorianChange"
	private explicit_return_type "void"
	nparams 1
	  param in name "cutoverTime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8804994 "getGregorianChange"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Gregorian Calendar change date.  This is the point when the
switch from Julian dates to Gregorian dates occurred. Default is
October 15, 1582 (Gregorian). Previous to this, dates will be in the Julian
calendar.

@return the Gregorian cutover date for this <code>GregorianCalendar</code> object.
"
      end

      operation 8805122 "isLeapYear"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the given year is a leap year. Returns <code>true</code> if
the given year is a leap year. To specify BC year numbers,
<code>1 - year number</code> must be given. For example, year BC 4 is
specified as -3.

@param year the given year.
@return <code>true</code> if the given year is a leap year; <code>false</code> otherwise.
"
      end

      operation 8805250 "getCalendarType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns {@code \"gregory\"} as the calendar type.

@return {@code \"gregory\"}
@since 1.8
"
      end

      operation 8805378 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this <code>GregorianCalendar</code> to the specified
<code>Object</code>. The result is <code>true</code> if and
only if the argument is a <code>GregorianCalendar</code> object
that represents the same time value (millisecond offset from
the <a href=\"Calendar.html#Epoch\">Epoch</a>) under the same
<code>Calendar</code> parameters and Gregorian change date as
this object.

@param obj the object to compare with.
@return <code>true</code> if this object is equal to <code>obj</code>;
<code>false</code> otherwise.
@see Calendar#compareTo(Calendar)
"
      end

      operation 8805506 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generates the hash code for this <code>GregorianCalendar</code> object.
"
      end

      operation 8805634 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "amount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified (signed) amount of time to the given calendar field,
based on the calendar's rules.

<p><em>Add rule 1</em>. The value of <code>field</code>
after the call minus the value of <code>field</code> before the
call is <code>amount</code>, modulo any overflow that has occurred in
<code>field</code>. Overflow occurs when a field value exceeds its
range and, as a result, the next larger field is incremented or
decremented and the field value is adjusted back into its range.</p>

<p><em>Add rule 2</em>. If a smaller field is expected to be
invariant, but it is impossible for it to be equal to its
prior value because of changes in its minimum or maximum after
<code>field</code> is changed, then its value is adjusted to be as close
as possible to its expected value. A smaller field represents a
smaller unit of time. <code>HOUR</code> is a smaller field than
<code>DAY_OF_MONTH</code>. No adjustment is made to smaller fields
that are not expected to be invariant. The calendar system
determines what fields are expected to be invariant.</p>

@param field the calendar field.
@param amount the amount of date or time to be added to the field.
@exception IllegalArgumentException if <code>field</code> is
<code>ZONE_OFFSET</code>, <code>DST_OFFSET</code>, or unknown,
or if any calendar fields have out-of-range values in
non-lenient mode.
"
      end

      operation 8805762 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param inout name "up" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds or subtracts (up/down) a single unit of time on the given time
field without changing larger fields.
<p>
<em>Example</em>: Consider a <code>GregorianCalendar</code>
originally set to December 31, 1999. Calling {@link #roll(int,boolean) roll(Calendar.MONTH, true)}
sets the calendar to January 31, 1999.  The <code>YEAR</code> field is unchanged
because it is a larger field than <code>MONTH</code>.</p>

@param up indicates if the value of the specified calendar field is to be
rolled up or rolled down. Use <code>true</code> if rolling up, <code>false</code> otherwise.
@exception IllegalArgumentException if <code>field</code> is
<code>ZONE_OFFSET</code>, <code>DST_OFFSET</code>, or unknown,
or if any calendar fields have out-of-range values in
non-lenient mode.
@see #add(int,int)
@see #set(int,int)
"
      end

      operation 8805890 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "amount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a signed amount to the specified calendar field without changing larger fields.
A negative roll amount means to subtract from field without changing
larger fields. If the specified amount is 0, this method performs nothing.

<p>This method calls {@link #complete()} before adding the
amount so that all the calendar fields are normalized. If there
is any calendar field having an out-of-range value in non-lenient mode, then an
<code>IllegalArgumentException</code> is thrown.

<p>
<em>Example</em>: Consider a <code>GregorianCalendar</code>
originally set to August 31, 1999. Calling <code>roll(Calendar.MONTH,
8)</code> sets the calendar to April 30, <strong>1999</strong>. Using a
<code>GregorianCalendar</code>, the <code>DAY_OF_MONTH</code> field cannot
be 31 in the month April. <code>DAY_OF_MONTH</code> is set to the closest possible
value, 30. The <code>YEAR</code> field maintains the value of 1999 because it
is a larger field than <code>MONTH</code>.
<p>
<em>Example</em>: Consider a <code>GregorianCalendar</code>
originally set to Sunday June 6, 1999. Calling
<code>roll(Calendar.WEEK_OF_MONTH, -1)</code> sets the calendar to
Tuesday June 1, 1999, whereas calling
<code>add(Calendar.WEEK_OF_MONTH, -1)</code> sets the calendar to
Sunday May 30, 1999. This is because the roll rule imposes an
additional constraint: The <code>MONTH</code> must not change when the
<code>WEEK_OF_MONTH</code> is rolled. Taken together with add rule 1,
the resultant date must be between Tuesday June 1 and Saturday June
5. According to add rule 2, the <code>DAY_OF_WEEK</code>, an invariant
when changing the <code>WEEK_OF_MONTH</code>, is set to Tuesday, the
closest possible value to Sunday (where Sunday is the first day of the
week).</p>

@param field the calendar field.
@param amount the signed amount to add to <code>field</code>.
@exception IllegalArgumentException if <code>field</code> is
<code>ZONE_OFFSET</code>, <code>DST_OFFSET</code>, or unknown,
or if any calendar fields have out-of-range values in
non-lenient mode.
@see #roll(int,boolean)
@see #add(int,int)
@see #set(int,int)
@since 1.2
"
      end

      operation 8806018 "getMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the minimum value for the given calendar field of this
<code>GregorianCalendar</code> instance. The minimum value is
defined as the smallest value returned by the {@link
Calendar#get(int) get} method for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
{@link #getGregorianChange() getGregorianChange} and
{@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field.
@return the minimum value for the given calendar field.
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8806146 "getMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the maximum value for the given calendar field of this
<code>GregorianCalendar</code> instance. The maximum value is
defined as the largest value returned by the {@link
Calendar#get(int) get} method for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
{@link #getGregorianChange() getGregorianChange} and
{@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field.
@return the maximum value for the given calendar field.
@see #getMinimum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8806274 "getGreatestMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the highest minimum value for the given calendar field
of this <code>GregorianCalendar</code> instance. The highest
minimum value is defined as the largest value returned by
{@link #getActualMinimum(int)} for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
{@link #getGregorianChange() getGregorianChange} and
{@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field.
@return the highest minimum value for the given calendar field.
@see #getMinimum(int)
@see #getMaximum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8806402 "getLeastMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the lowest maximum value for the given calendar field
of this <code>GregorianCalendar</code> instance. The lowest
maximum value is defined as the smallest value returned by
{@link #getActualMaximum(int)} for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
{@link #getGregorianChange() getGregorianChange} and
{@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field
@return the lowest maximum value for the given calendar field.
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8806530 "getActualMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the minimum value that this calendar field could have,
taking into consideration the given time value and the current
values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
{@link #getGregorianChange() getGregorianChange} and
{@link Calendar#getTimeZone() getTimeZone} methods.

<p>For example, if the Gregorian change date is January 10,
1970 and the date of this <code>GregorianCalendar</code> is
January 20, 1970, the actual minimum value of the
<code>DAY_OF_MONTH</code> field is 10 because the previous date
of January 10, 1970 is December 27, 1996 (in the Julian
calendar). Therefore, December 28, 1969 to January 9, 1970
don't exist.

@param field the calendar field
@return the minimum of the given field for the time value of
this <code>GregorianCalendar</code>
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMaximum(int)
@since 1.2
"
      end

      operation 8806658 "getActualMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the maximum value that this calendar field could have,
taking into consideration the given time value and the current
values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
{@link #getGregorianChange() getGregorianChange} and
{@link Calendar#getTimeZone() getTimeZone} methods.
For example, if the date of this instance is February 1, 2004,
the actual maximum value of the <code>DAY_OF_MONTH</code> field
is 29 because 2004 is a leap year, and if the date of this
instance is February 1, 2005, it's 28.

<p>This method calculates the maximum value of {@link
Calendar#WEEK_OF_YEAR WEEK_OF_YEAR} based on the {@link
Calendar#YEAR YEAR} (calendar year) value, not the <a
href=\"#week_year\">week year</a>. Call {@link
#getWeeksInWeekYear()} to get the maximum value of {@code
WEEK_OF_YEAR} in the week year of this {@code GregorianCalendar}.

@param field the calendar field
@return the maximum of the given field for the time value of
this <code>GregorianCalendar</code>
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@since 1.2
"
      end

      operation 8806786 "getYearOffsetInMillis"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the millisecond offset from the beginning of this
year. This Calendar object must have been normalized.
"
      end

      operation 8806914 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8807042 "getTimeZone"
	public return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8807170 "setTimeZone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "zone" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8807298 "isWeekDateSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns {@code true} indicating this {@code GregorianCalendar}
supports week dates.

@return {@code true} (always)
@see #getWeekYear()
@see #setWeekDate(int,int,int)
@see #getWeeksInWeekYear()
@since 1.7
"
      end

      operation 8807426 "getWeekYear"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <a href=\"#week_year\">week year</a> represented by this
{@code GregorianCalendar}. The dates in the weeks between 1 and the
maximum week number of the week year have the same week year value
that may be one year before or after the {@link Calendar#YEAR YEAR}
(calendar year) value.

<p>This method calls {@link Calendar#complete()} before
calculating the week year.

@return the week year represented by this {@code GregorianCalendar}.
        If the {@link Calendar#ERA ERA} value is {@link #BC}, the year is
        represented by 0 or a negative number: BC 1 is 0, BC 2
        is -1, BC 3 is -2, and so on.
@throws IllegalArgumentException
        if any of the calendar fields is invalid in non-lenient mode.
@see #isWeekDateSupported()
@see #getWeeksInWeekYear()
@see Calendar#getFirstDayOfWeek()
@see Calendar#getMinimalDaysInFirstWeek()
@since 1.7
"
      end

      operation 8807554 "setWeekDate"
	public explicit_return_type "void"
	nparams 3
	  param in name "weekYear" explicit_type "int"
	  param in name "weekOfYear" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets this {@code GregorianCalendar} to the date given by the
date specifiers - <a href=\"#week_year\">{@code weekYear}</a>,
{@code weekOfYear}, and {@code dayOfWeek}. {@code weekOfYear}
follows the <a href=\"#week_and_year\">{@code WEEK_OF_YEAR}
numbering</a>.  The {@code dayOfWeek} value must be one of the
{@link Calendar#DAY_OF_WEEK DAY_OF_WEEK} values: {@link
Calendar#SUNDAY SUNDAY} to {@link Calendar#SATURDAY SATURDAY}.

<p>Note that the numeric day-of-week representation differs from
the ISO 8601 standard, and that the {@code weekOfYear}
numbering is compatible with the standard when {@code
getFirstDayOfWeek()} is {@code MONDAY} and {@code
getMinimalDaysInFirstWeek()} is 4.

<p>Unlike the {@code set} method, all of the calendar fields
and the instant of time value are calculated upon return.

<p>If {@code weekOfYear} is out of the valid week-of-year
range in {@code weekYear}, the {@code weekYear}
and {@code weekOfYear} values are adjusted in lenient
mode, or an {@code IllegalArgumentException} is thrown in
non-lenient mode.

@param weekYear    the week year
@param weekOfYear  the week number based on {@code weekYear}
@param dayOfWeek   the day of week value: one of the constants
                   for the {@link #DAY_OF_WEEK DAY_OF_WEEK} field:
                   {@link Calendar#SUNDAY SUNDAY}, ...,
                   {@link Calendar#SATURDAY SATURDAY}.
@exception IllegalArgumentException
           if any of the given date specifiers is invalid,
           or if any of the calendar fields are inconsistent
           with the given date specifiers in non-lenient mode
@see GregorianCalendar#isWeekDateSupported()
@see Calendar#getFirstDayOfWeek()
@see Calendar#getMinimalDaysInFirstWeek()
@since 1.7
"
      end

      operation 8807682 "getWeeksInWeekYear"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of weeks in the <a href=\"#week_year\">week year</a>
represented by this {@code GregorianCalendar}.

<p>For example, if this {@code GregorianCalendar}'s date is
December 31, 2008 with <a href=\"#iso8601_compatible_setting\">the ISO
8601 compatible setting</a>, this method will return 53 for the
period: December 29, 2008 to January 3, 2010 while {@link
#getActualMaximum(int) getActualMaximum(WEEK_OF_YEAR)} will return
52 for the period: December 31, 2007 to December 28, 2008.

@return the number of weeks in the week year.
@see Calendar#WEEK_OF_YEAR
@see #getWeekYear()
@see #getActualMaximum(int)
@since 1.7
"
      end

      attribute 2052482 "cachedFixedDate"
	private explicit_type "long"
	init_value " Long.MIN_VALUE"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "///////////////////////////
 Time => Fields computation
///////////////////////////

The fixed date corresponding to gdate. If the value is
Long.MIN_VALUE, the fixed date value is unknown. Currently,
Julian calendar dates are not cached.

"
      end

      operation 8807810 "computeFields"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Converts the time value (millisecond offset from the <a
href=\"Calendar.html#Epoch\">Epoch</a>) to calendar field values.
The time is <em>not</em>
recomputed first; to recompute the time, then the fields, call the
<code>complete</code> method.

@see Calendar#complete
"
      end

      operation 8807938 "computeFields"
	private explicit_return_type "int"
	nparams 2
	  param in name "fieldMask" explicit_type "int"
	  param in name "tzMask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This computeFields implements the conversion from UTC
(millisecond offset from the Epoch) to calendar
field values. fieldMask specifies which fields to change the
setting state to COMPUTED, although all fields are set to
the correct values. This is required to fix 4685354.

@param fieldMask a bit mask to specify which fields to change
the setting state.
@param tzMask a bit mask to specify which time zone offset
fields to be used for time calculations
@return a new field mask that indicates what field values have
actually been set.
"
      end

      operation 8808066 "getWeekNumber"
	private explicit_return_type "int"
	nparams 2
	  param in name "fixedDay1" explicit_type "long"
	  param in name "fixedDate" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of weeks in a period between fixedDay1 and
fixedDate. The getFirstDayOfWeek-getMinimalDaysInFirstWeek rule
is applied to calculate the number of weeks.

@param fixedDay1 the fixed date of the first day of the period
@param fixedDate the fixed date of the last day of the period
@return the number of weeks of the given period
"
      end

      operation 8808194 "computeTime"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Converts calendar field values to the time value (millisecond
offset from the <a href=\"Calendar.html#Epoch\">Epoch</a>).

@exception IllegalArgumentException if any calendar fields are invalid.
"
      end

      operation 8808322 "getFixedDate"
	private explicit_return_type "long"
	nparams 3
	  param inout name "cal" explicit_type "BaseCalendar"
	  param in name "year" explicit_type "int"
	  param in name "fieldMask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the fixed date under either the Gregorian or the
Julian calendar, using the given year and the specified calendar fields.

@param cal the CalendarSystem to be used for the date calculation
@param year the normalized year number, with 0 indicating the
year 1 BCE, -1 indicating 2 BCE, etc.
@param fieldMask the calendar fields to be used for the date calculation
@return the fixed date
@see Calendar#selectFields
"
      end

      operation 8808450 "getNormalizedCalendar"
	private return_type class_ref 723202 // GregorianCalendar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object if it's normalized (all fields and time are
in sync). Otherwise, a cloned object is returned after calling
complete() in lenient mode.
"
      end

      operation 8808578 "getJulianCalendarSystem"
	class_operation private explicit_return_type "BaseCalendar"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Julian calendar system instance (singleton). 'jcal'
and 'jeras' are set upon the return.
"
      end

      operation 8808706 "getCutoverCalendarSystem"
	private explicit_return_type "BaseCalendar"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the calendar system for dates before the cutover date
in the cutover year. If the cutover date is January 1, the
method returns Gregorian. Otherwise, Julian.
"
      end

      operation 8808834 "isCutoverYear"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "normalizedYear" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified year (normalized) is the Gregorian
cutover year. This object must have been normalized.
"
      end

      operation 8808962 "getFixedDateJan1"
	private explicit_return_type "long"
	nparams 2
	  param inout name "date" explicit_type "BaseCalendar.Date"
	  param in name "fixedDate" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fixed date of the first day of the year (usually
January 1) before the specified date.

@param date the date for which the first day of the year is
calculated. The date has to be in the cut-over year (Gregorian
or Julian).
@param fixedDate the fixed date representation of the date
"
      end

      operation 8809090 "getFixedDateMonth1"
	private explicit_return_type "long"
	nparams 2
	  param inout name "date" explicit_type "BaseCalendar.Date"
	  param in name "fixedDate" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fixed date of the first date of the month (usually
the 1st of the month) before the specified date.

@param date the date for which the first day of the month is
calculated. The date has to be in the cut-over year (Gregorian
or Julian).
@param fixedDate the fixed date representation of the date
"
      end

      operation 8809218 "getCalendarDate"
	private explicit_return_type "BaseCalendar.Date"
	nparams 1
	  param in name "fd" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a CalendarDate produced from the specified fixed date.

@param fd the fixed date
"
      end

      operation 8809346 "getGregorianCutoverDate"
	private explicit_return_type "BaseCalendar.Date"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Gregorian cutover date as a BaseCalendar.Date. The
date is a Gregorian date.
"
      end

      operation 8809474 "getLastJulianDate"
	private explicit_return_type "BaseCalendar.Date"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the day before the Gregorian cutover date as a
BaseCalendar.Date. The date is a Julian date.
"
      end

      operation 8809602 "monthLength"
	private explicit_return_type "int"
	nparams 2
	  param in name "month" explicit_type "int"
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the specified month in the specified
year. The year number must be normalized.

@see #isLeapYear(int)
"
      end

      operation 8809730 "monthLength"
	private explicit_return_type "int"
	nparams 1
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the specified month in the year provided
by internalGet(YEAR).

@see #isLeapYear(int)
"
      end

      operation 8809858 "actualMonthLength"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8809986 "yearLength"
	private explicit_return_type "int"
	nparams 1
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length (in days) of the specified year. The year
must be normalized.
"
      end

      operation 8810114 "yearLength"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length (in days) of the year provided by
internalGet(YEAR).
"
      end

      operation 8810242 "pinDayOfMonth"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After adjustments such as add(MONTH), add(YEAR), we don't want the
month to jump around.  E.g., we don't want Jan 31 + 1 month to go to Mar
3, we want it to go to Feb 28.  Adjustments which might run into this
problem call this method to retain the proper month.
"
      end

      operation 8810370 "getCurrentFixedDate"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fixed date value of this object. The time value and
calendar fields must be in synch.
"
      end

      operation 8810498 "getRolledValue"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "amount" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the new value after 'roll'ing the specified value and amount.
"
      end

      operation 8810626 "internalGetEra"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ERA.  We need a special method for this because the
default ERA is CE, but a zero (unset) ERA is BCE.
"
      end

      operation 8810754 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates internal state.
"
      end

      operation 8810882 "toZonedDateTime"
	public return_type class_ref 1052290 // ZonedDateTime
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this object to a {@code ZonedDateTime} that represents
the same point on the time-line as this {@code GregorianCalendar}.
<p>
Since this object supports a Julian-Gregorian cutover date and
{@code ZonedDateTime} does not, it is possible that the resulting year,
month and day will have different values.  The result will represent the
correct date in the ISO calendar system, which will also be the same value
for Modified Julian Days.

@return a zoned date-time representing the same point on the time-line
 as this gregorian calendar
@since 1.8
"
      end

      operation 8811010 "from"
	class_operation public return_type class_ref 723202 // GregorianCalendar
	nparams 1
	  param inout name "zdt" type class_ref 1052290 // ZonedDateTime
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an instance of {@code GregorianCalendar} with the default locale
from a {@code ZonedDateTime} object.
<p>
Since {@code ZonedDateTime} does not support a Julian-Gregorian cutover
date and uses ISO calendar system, the return GregorianCalendar is a pure
Gregorian calendar and uses ISO 8601 standard for week definitions,
which has {@code MONDAY} as the {@link Calendar#getFirstDayOfWeek()
FirstDayOfWeek} and {@code 4} as the value of the
{@link Calendar#getMinimalDaysInFirstWeek() MinimalDaysInFirstWeek}.
<p>
{@code ZoneDateTime} can store points on the time-line further in the
future and further in the past than {@code GregorianCalendar}. In this
scenario, this method will throw an {@code IllegalArgumentException}
exception.

@param zdt  the zoned date-time object to convert
@return  the gregorian calendar representing the same point on the
 time-line as the zoned date-time provided
@exception NullPointerException if {@code zdt} is null
@exception IllegalArgumentException if the zoned date-time is too
large to represent as a {@code GregorianCalendar}
@since 1.8
"
      end
    end

    class 723586 "Calendar"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Calendar</code> class is an abstract class that provides methods
for converting between a specific instant in time and a set of {@link
#fields calendar fields} such as <code>YEAR</code>, <code>MONTH</code>,
<code>DAY_OF_MONTH</code>, <code>HOUR</code>, and so on, and for
manipulating the calendar fields, such as getting the date of the next
week. An instant in time can be represented by a millisecond value that is
an offset from the <a name=\"Epoch\"><em>Epoch</em></a>, January 1, 1970
00:00:00.000 GMT (Gregorian).

<p>The class also provides additional fields and methods for
implementing a concrete calendar system outside the package. Those
fields and methods are defined as <code>protected</code>.

<p>
Like other locale-sensitive classes, <code>Calendar</code> provides a
class method, <code>getInstance</code>, for getting a generally useful
object of this type. <code>Calendar</code>'s <code>getInstance</code> method
returns a <code>Calendar</code> object whose
calendar fields have been initialized with the current date and time:
<blockquote>
<pre>
    Calendar rightNow = Calendar.getInstance();
</pre>
</blockquote>

<p>A <code>Calendar</code> object can produce all the calendar field values
needed to implement the date-time formatting for a particular language and
calendar style (for example, Japanese-Gregorian, Japanese-Traditional).
<code>Calendar</code> defines the range of values returned by
certain calendar fields, as well as their meaning.  For example,
the first month of the calendar system has value <code>MONTH ==
JANUARY</code> for all calendars.  Other values are defined by the
concrete subclass, such as <code>ERA</code>.  See individual field
documentation and subclass documentation for details.

<h3>Getting and Setting Calendar Field Values</h3>

<p>The calendar field values can be set by calling the <code>set</code>
methods. Any field values set in a <code>Calendar</code> will not be
interpreted until it needs to calculate its time value (milliseconds from
the Epoch) or values of the calendar fields. Calling the
<code>get</code>, <code>getTimeInMillis</code>, <code>getTime</code>,
<code>add</code> and <code>roll</code> involves such calculation.

<h4>Leniency</h4>

<p><code>Calendar</code> has two modes for interpreting the calendar
fields, <em>lenient</em> and <em>non-lenient</em>.  When a
<code>Calendar</code> is in lenient mode, it accepts a wider range of
calendar field values than it produces.  When a <code>Calendar</code>
recomputes calendar field values for return by <code>get()</code>, all of
the calendar fields are normalized. For example, a lenient
<code>GregorianCalendar</code> interprets <code>MONTH == JANUARY</code>,
<code>DAY_OF_MONTH == 32</code> as February 1.

<p>When a <code>Calendar</code> is in non-lenient mode, it throws an
exception if there is any inconsistency in its calendar fields. For
example, a <code>GregorianCalendar</code> always produces
<code>DAY_OF_MONTH</code> values between 1 and the length of the month. A
non-lenient <code>GregorianCalendar</code> throws an exception upon
calculating its time or calendar field values if any out-of-range field
value has been set.

<h4><a name=\"first_week\">First Week</a></h4>

<code>Calendar</code> defines a locale-specific seven day week using two
parameters: the first day of the week and the minimal days in first week
(from 1 to 7).  These numbers are taken from the locale resource data when a
<code>Calendar</code> is constructed.  They may also be specified explicitly
through the methods for setting their values.

<p>When setting or getting the <code>WEEK_OF_MONTH</code> or
<code>WEEK_OF_YEAR</code> fields, <code>Calendar</code> must determine the
first week of the month or year as a reference point.  The first week of a
month or year is defined as the earliest seven day period beginning on
<code>getFirstDayOfWeek()</code> and containing at least
<code>getMinimalDaysInFirstWeek()</code> days of that month or year.  Weeks
numbered ..., -1, 0 precede the first week; weeks numbered 2, 3,... follow
it.  Note that the normalized numbering returned by <code>get()</code> may be
different.  For example, a specific <code>Calendar</code> subclass may
designate the week before week 1 of a year as week <code><i>n</i></code> of
the previous year.

<h4>Calendar Fields Resolution</h4>

When computing a date and time from the calendar fields, there
may be insufficient information for the computation (such as only
year and month with no day of month), or there may be inconsistent
information (such as Tuesday, July 15, 1996 (Gregorian) -- July 15,
1996 is actually a Monday). <code>Calendar</code> will resolve
calendar field values to determine the date and time in the
following way.

<p><a name=\"resolution\">If there is any conflict in calendar field values,
<code>Calendar</code> gives priorities to calendar fields that have been set
more recently.</a> The following are the default combinations of the
calendar fields. The most recent combination, as determined by the
most recently set single field, will be used.

<p><a name=\"date_resolution\">For the date fields</a>:
<blockquote>
<pre>
YEAR + MONTH + DAY_OF_MONTH
YEAR + MONTH + WEEK_OF_MONTH + DAY_OF_WEEK
YEAR + MONTH + DAY_OF_WEEK_IN_MONTH + DAY_OF_WEEK
YEAR + DAY_OF_YEAR
YEAR + DAY_OF_WEEK + WEEK_OF_YEAR
</pre></blockquote>

<a name=\"time_resolution\">For the time of day fields</a>:
<blockquote>
<pre>
HOUR_OF_DAY
AM_PM + HOUR
</pre></blockquote>

<p>If there are any calendar fields whose values haven't been set in the selected
field combination, <code>Calendar</code> uses their default values. The default
value of each field may vary by concrete calendar systems. For example, in
<code>GregorianCalendar</code>, the default of a field is the same as that
of the start of the Epoch: i.e., <code>YEAR = 1970</code>, <code>MONTH =
JANUARY</code>, <code>DAY_OF_MONTH = 1</code>, etc.

<p>
<strong>Note:</strong> There are certain possible ambiguities in
interpretation of certain singular times, which are resolved in the
following ways:
<ol>
    <li> 23:59 is the last minute of the day and 00:00 is the first
         minute of the next day. Thus, 23:59 on Dec 31, 1999 &lt; 00:00 on
         Jan 1, 2000 &lt; 00:01 on Jan 1, 2000.

    <li> Although historically not precise, midnight also belongs to \"am\",
         and noon belongs to \"pm\", so on the same day,
         12:00 am (midnight) &lt; 12:01 am, and 12:00 pm (noon) &lt; 12:01 pm
</ol>

<p>
The date or time format strings are not part of the definition of a
calendar, as those must be modifiable or overridable by the user at
runtime. Use {@link DateFormat}
to format dates.

<h4>Field Manipulation</h4>

The calendar fields can be changed using three methods:
<code>set()</code>, <code>add()</code>, and <code>roll()</code>.

<p><strong><code>set(f, value)</code></strong> changes calendar field
<code>f</code> to <code>value</code>.  In addition, it sets an
internal member variable to indicate that calendar field <code>f</code> has
been changed. Although calendar field <code>f</code> is changed immediately,
the calendar's time value in milliseconds is not recomputed until the next call to
<code>get()</code>, <code>getTime()</code>, <code>getTimeInMillis()</code>,
<code>add()</code>, or <code>roll()</code> is made. Thus, multiple calls to
<code>set()</code> do not trigger multiple, unnecessary
computations. As a result of changing a calendar field using
<code>set()</code>, other calendar fields may also change, depending on the
calendar field, the calendar field value, and the calendar system. In addition,
<code>get(f)</code> will not necessarily return <code>value</code> set by
the call to the <code>set</code> method
after the calendar fields have been recomputed. The specifics are determined by
the concrete calendar class.</p>

<p><em>Example</em>: Consider a <code>GregorianCalendar</code>
originally set to August 31, 1999. Calling <code>set(Calendar.MONTH,
Calendar.SEPTEMBER)</code> sets the date to September 31,
1999. This is a temporary internal representation that resolves to
October 1, 1999 if <code>getTime()</code>is then called. However, a
call to <code>set(Calendar.DAY_OF_MONTH, 30)</code> before the call to
<code>getTime()</code> sets the date to September 30, 1999, since
no recomputation occurs after <code>set()</code> itself.</p>

<p><strong><code>add(f, delta)</code></strong> adds <code>delta</code>
to field <code>f</code>.  This is equivalent to calling <code>set(f,
get(f) + delta)</code> with two adjustments:</p>

<blockquote>
  <p><strong>Add rule 1</strong>. The value of field <code>f</code>
  after the call minus the value of field <code>f</code> before the
  call is <code>delta</code>, modulo any overflow that has occurred in
  field <code>f</code>. Overflow occurs when a field value exceeds its
  range and, as a result, the next larger field is incremented or
  decremented and the field value is adjusted back into its range.</p>

  <p><strong>Add rule 2</strong>. If a smaller field is expected to be
  invariant, but it is impossible for it to be equal to its
  prior value because of changes in its minimum or maximum after field
  <code>f</code> is changed or other constraints, such as time zone
  offset changes, then its value is adjusted to be as close
  as possible to its expected value. A smaller field represents a
  smaller unit of time. <code>HOUR</code> is a smaller field than
  <code>DAY_OF_MONTH</code>. No adjustment is made to smaller fields
  that are not expected to be invariant. The calendar system
  determines what fields are expected to be invariant.</p>
</blockquote>

<p>In addition, unlike <code>set()</code>, <code>add()</code> forces
an immediate recomputation of the calendar's milliseconds and all
fields.</p>

<p><em>Example</em>: Consider a <code>GregorianCalendar</code>
originally set to August 31, 1999. Calling <code>add(Calendar.MONTH,
13)</code> sets the calendar to September 30, 2000. <strong>Add rule
1</strong> sets the <code>MONTH</code> field to September, since
adding 13 months to August gives September of the next year. Since
<code>DAY_OF_MONTH</code> cannot be 31 in September in a
<code>GregorianCalendar</code>, <strong>add rule 2</strong> sets the
<code>DAY_OF_MONTH</code> to 30, the closest possible value. Although
it is a smaller field, <code>DAY_OF_WEEK</code> is not adjusted by
rule 2, since it is expected to change when the month changes in a
<code>GregorianCalendar</code>.</p>

<p><strong><code>roll(f, delta)</code></strong> adds
<code>delta</code> to field <code>f</code> without changing larger
fields. This is equivalent to calling <code>add(f, delta)</code> with
the following adjustment:</p>

<blockquote>
  <p><strong>Roll rule</strong>. Larger fields are unchanged after the
  call. A larger field represents a larger unit of
  time. <code>DAY_OF_MONTH</code> is a larger field than
  <code>HOUR</code>.</p>
</blockquote>

<p><em>Example</em>: See {@link java.util.GregorianCalendar#roll(int, int)}.

<p><strong>Usage model</strong>. To motivate the behavior of
<code>add()</code> and <code>roll()</code>, consider a user interface
component with increment and decrement buttons for the month, day, and
year, and an underlying <code>GregorianCalendar</code>. If the
interface reads January 31, 1999 and the user presses the month
increment button, what should it read? If the underlying
implementation uses <code>set()</code>, it might read March 3, 1999. A
better result would be February 28, 1999. Furthermore, if the user
presses the month increment button again, it should read March 31,
1999, not March 28, 1999. By saving the original date and using either
<code>add()</code> or <code>roll()</code>, depending on whether larger
fields should be affected, the user interface can behave as most users
will intuitively expect.</p>

@see          java.lang.System#currentTimeMillis()
@see          Date
@see          GregorianCalendar
@see          TimeZone
@see          java.text.DateFormat
@author Mark Davis, David Goldsmith, Chen-Lieh Huang, Alan Liu
@since JDK1.1
"
      classrelation 3487874 // <realization>
	relation 3487874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3487874 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3488002 // <realization>
	relation 3488002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3488002 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3488130 // <realization>
	relation 3488130 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3488130 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 2010882 "ERA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data flow in Calendar
 ---------------------
 The current time is represented in two ways by Calendar: as UTC
 milliseconds from the epoch (1 January 1970 0:00 UTC), and as local
 fields such as MONTH, HOUR, AM_PM, etc.  It is possible to compute the
 millis from the fields, and vice versa.  The data needed to do this
 conversion is encapsulated by a TimeZone object owned by the Calendar.
 The data provided by the TimeZone object may also be overridden if the
 user sets the ZONE_OFFSET and/or DST_OFFSET fields directly. The class
 keeps track of what information was most recently set by the caller, and
 uses that to compute any other information as needed.
 If the user sets the fields using set(), the data flow is as follows.
 This is implemented by the Calendar subclass's computeTime() method.
 During this process, certain fields may be ignored.  The disambiguation
 algorithm for resolving which fields to pay attention to is described
 in the class documentation.
   local fields (YEAR, MONTH, DATE, HOUR, MINUTE, etc.)
           |
           | Using Calendar-specific algorithm
           V
   local standard millis
           |
           | Using TimeZone or user-set ZONE_OFFSET / DST_OFFSET
           V
   UTC millis (in time data member)
 If the user sets the UTC millis using setTime() or setTimeInMillis(),
 the data flow is as follows.  This is implemented by the Calendar
 subclass's computeFields() method.
   UTC millis (in time data member)
           |
           | Using TimeZone getOffset()
           V
   local standard millis
           |
           | Using Calendar-specific algorithm
           V
   local fields (YEAR, MONTH, DATE, HOUR, MINUTE, etc.)
 In general, a round trip from fields, through local and UTC millis, and
 back out to fields is made when necessary.  This is implemented by the
 complete() method.  Resolving a partial set of fields into a UTC millis
 value allows all remaining fields to be generated from that value.  If
 the Calendar is lenient, the fields are also renormalized to standard
 ranges when they are regenerated.

Field number for <code>get</code> and <code>set</code> indicating the
era, e.g., AD or BC in the Julian calendar. This is a calendar-specific
value; see subclass documentation.

@see GregorianCalendar#AD
@see GregorianCalendar#BC

"
      end

      attribute 2011010 "YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
year. This is a calendar-specific value; see subclass documentation.

"
      end

      attribute 2011138 "MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
month. This is a calendar-specific value. The first month of
the year in the Gregorian and Julian calendars is
<code>JANUARY</code> which is 0; the last depends on the number
of months in a year.

@see #JANUARY
@see #FEBRUARY
@see #MARCH
@see #APRIL
@see #MAY
@see #JUNE
@see #JULY
@see #AUGUST
@see #SEPTEMBER
@see #OCTOBER
@see #NOVEMBER
@see #DECEMBER
@see #UNDECIMBER

"
      end

      attribute 2011266 "WEEK_OF_YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
week number within the current year.  The first week of the year, as
defined by <code>getFirstDayOfWeek()</code> and
<code>getMinimalDaysInFirstWeek()</code>, has value 1.  Subclasses define
the value of <code>WEEK_OF_YEAR</code> for days before the first week of
the year.

@see #getFirstDayOfWeek
@see #getMinimalDaysInFirstWeek

"
      end

      attribute 2011394 "WEEK_OF_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
week number within the current month.  The first week of the month, as
defined by <code>getFirstDayOfWeek()</code> and
<code>getMinimalDaysInFirstWeek()</code>, has value 1.  Subclasses define
the value of <code>WEEK_OF_MONTH</code> for days before the first week of
the month.

@see #getFirstDayOfWeek
@see #getMinimalDaysInFirstWeek

"
      end

      attribute 2011522 "DATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
day of the month. This is a synonym for <code>DAY_OF_MONTH</code>.
The first day of the month has value 1.

@see #DAY_OF_MONTH

"
      end

      attribute 2011650 "DAY_OF_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
day of the month. This is a synonym for <code>DATE</code>.
The first day of the month has value 1.

@see #DATE

"
      end

      attribute 2011778 "DAY_OF_YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the day
number within the current year.  The first day of the year has value 1.

"
      end

      attribute 2011906 "DAY_OF_WEEK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the day
of the week.  This field takes values <code>SUNDAY</code>,
<code>MONDAY</code>, <code>TUESDAY</code>, <code>WEDNESDAY</code>,
<code>THURSDAY</code>, <code>FRIDAY</code>, and <code>SATURDAY</code>.

@see #SUNDAY
@see #MONDAY
@see #TUESDAY
@see #WEDNESDAY
@see #THURSDAY
@see #FRIDAY
@see #SATURDAY

"
      end

      attribute 2012034 "DAY_OF_WEEK_IN_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
ordinal number of the day of the week within the current month. Together
with the <code>DAY_OF_WEEK</code> field, this uniquely specifies a day
within a month.  Unlike <code>WEEK_OF_MONTH</code> and
<code>WEEK_OF_YEAR</code>, this field's value does <em>not</em> depend on
<code>getFirstDayOfWeek()</code> or
<code>getMinimalDaysInFirstWeek()</code>.  <code>DAY_OF_MONTH 1</code>
through <code>7</code> always correspond to <code>DAY_OF_WEEK_IN_MONTH
1</code>; <code>8</code> through <code>14</code> correspond to
<code>DAY_OF_WEEK_IN_MONTH 2</code>, and so on.
<code>DAY_OF_WEEK_IN_MONTH 0</code> indicates the week before
<code>DAY_OF_WEEK_IN_MONTH 1</code>.  Negative values count back from the
end of the month, so the last Sunday of a month is specified as
<code>DAY_OF_WEEK = SUNDAY, DAY_OF_WEEK_IN_MONTH = -1</code>.  Because
negative values count backward they will usually be aligned differently
within the month than positive values.  For example, if a month has 31
days, <code>DAY_OF_WEEK_IN_MONTH -1</code> will overlap
<code>DAY_OF_WEEK_IN_MONTH 5</code> and the end of <code>4</code>.

@see #DAY_OF_WEEK
@see #WEEK_OF_MONTH

"
      end

      attribute 2012162 "AM_PM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating
whether the <code>HOUR</code> is before or after noon.
E.g., at 10:04:15.250 PM the <code>AM_PM</code> is <code>PM</code>.

@see #AM
@see #PM
@see #HOUR

"
      end

      attribute 2012290 "HOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
hour of the morning or afternoon. <code>HOUR</code> is used for the
12-hour clock (0 - 11). Noon and midnight are represented by 0, not by 12.
E.g., at 10:04:15.250 PM the <code>HOUR</code> is 10.

@see #AM_PM
@see #HOUR_OF_DAY

"
      end

      attribute 2012418 "HOUR_OF_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
hour of the day. <code>HOUR_OF_DAY</code> is used for the 24-hour clock.
E.g., at 10:04:15.250 PM the <code>HOUR_OF_DAY</code> is 22.

@see #HOUR

"
      end

      attribute 2012546 "MINUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
minute within the hour.
E.g., at 10:04:15.250 PM the <code>MINUTE</code> is 4.

"
      end

      attribute 2012674 "SECOND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
second within the minute.
E.g., at 10:04:15.250 PM the <code>SECOND</code> is 15.

"
      end

      attribute 2012802 "MILLISECOND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
millisecond within the second.
E.g., at 10:04:15.250 PM the <code>MILLISECOND</code> is 250.

"
      end

      attribute 2012930 "ZONE_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code>
indicating the raw offset from GMT in milliseconds.
<p>
This field reflects the correct GMT offset value of the time
zone of this <code>Calendar</code> if the
<code>TimeZone</code> implementation subclass supports
historical GMT offset changes.

"
      end

      attribute 2013058 "DST_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Field number for <code>get</code> and <code>set</code> indicating the
daylight saving offset in milliseconds.
<p>
This field reflects the correct daylight saving offset value of
the time zone of this <code>Calendar</code> if the
<code>TimeZone</code> implementation subclass supports
historical Daylight Saving Time schedule changes.

"
      end

      attribute 2013186 "FIELD_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of distinct fields recognized by <code>get</code> and <code>set</code>.
Field numbers range from <code>0..FIELD_COUNT-1</code>.

"
      end

      attribute 2013314 "SUNDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Sunday.

"
      end

      attribute 2013442 "MONDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Monday.

"
      end

      attribute 2013570 "TUESDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Tuesday.

"
      end

      attribute 2013698 "WEDNESDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Wednesday.

"
      end

      attribute 2013826 "THURSDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Thursday.

"
      end

      attribute 2013954 "FRIDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Friday.

"
      end

      attribute 2014082 "SATURDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #DAY_OF_WEEK} field indicating
Saturday.

"
      end

      attribute 2014210 "JANUARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
first month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2014338 "FEBRUARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
second month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2014466 "MARCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
third month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2014594 "APRIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
fourth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2014722 "MAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
fifth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2014850 "JUNE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
sixth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2014978 "JULY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
seventh month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2015106 "AUGUST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
eighth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2015234 "SEPTEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
ninth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2015362 "OCTOBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
tenth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2015490 "NOVEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
eleventh month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2015618 "DECEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
twelfth month of the year in the Gregorian and Julian calendars.

"
      end

      attribute 2015746 "UNDECIMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #MONTH} field indicating the
thirteenth month of the year. Although <code>GregorianCalendar</code>
does not use this value, lunar calendars do.

"
      end

      attribute 2015874 "AM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #AM_PM} field indicating the
period of the day from midnight to just before noon.

"
      end

      attribute 2016002 "PM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the {@link #AM_PM} field indicating the
period of the day from noon to just before midnight.

"
      end

      attribute 2016130 "ALL_STYLES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating names in all styles, such as
\"January\" and \"Jan\".

@see #SHORT_FORMAT
@see #LONG_FORMAT
@see #SHORT_STANDALONE
@see #LONG_STANDALONE
@see #SHORT
@see #LONG
@since 1.6

"
      end

      attribute 2016258 "STANDALONE_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x8000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2016386 "SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} equivalent to {@link #SHORT_FORMAT}.

@see #SHORT_STANDALONE
@see #LONG
@since 1.6

"
      end

      attribute 2016514 "LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} equivalent to {@link #LONG_FORMAT}.

@see #LONG_STANDALONE
@see #SHORT
@since 1.6

"
      end

      attribute 2016642 "NARROW_FORMAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating a narrow name used for format. Narrow names
are typically single character strings, such as \"M\" for Monday.

@see #NARROW_STANDALONE
@see #SHORT_FORMAT
@see #LONG_FORMAT
@since 1.8

"
      end

      attribute 2016770 "NARROW_STANDALONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " NARROW_FORMAT | STANDALONE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating a narrow name independently. Narrow names
are typically single character strings, such as \"M\" for Monday.

@see #NARROW_FORMAT
@see #SHORT_STANDALONE
@see #LONG_STANDALONE
@since 1.8

"
      end

      attribute 2016898 "SHORT_FORMAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating a short name used for format.

@see #SHORT_STANDALONE
@see #LONG_FORMAT
@see #LONG_STANDALONE
@since 1.8

"
      end

      attribute 2017026 "LONG_FORMAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating a long name used for format.

@see #LONG_STANDALONE
@see #SHORT_FORMAT
@see #SHORT_STANDALONE
@since 1.8

"
      end

      attribute 2017154 "SHORT_STANDALONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " SHORT | STANDALONE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating a short name used independently,
such as a month abbreviation as calendar headers.

@see #SHORT_FORMAT
@see #LONG_FORMAT
@see #LONG_STANDALONE
@since 1.8

"
      end

      attribute 2017282 "LONG_STANDALONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " LONG | STANDALONE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for {@link #getDisplayName(int, int, Locale)
getDisplayName} and {@link #getDisplayNames(int, int, Locale)
getDisplayNames} indicating a long name used independently,
such as a month name as calendar headers.

@see #LONG_FORMAT
@see #SHORT_FORMAT
@see #SHORT_STANDALONE
@since 1.8

"
      end

      attribute 2017410 "fields"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"ProtectedField\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Internal notes:
 Calendar contains two kinds of time representations: current \"time\" in
 milliseconds, and a set of calendar \"fields\" representing the current time.
 The two representations are usually in sync, but can get out of sync
 as follows.
 1. Initially, no fields are set, and the time is invalid.
 2. If the time is set, all fields are computed and in sync.
 3. If a single field is set, the time is invalid.
 Recomputation of the time and fields happens when the object needs
 to return a result to the user, or use a result for a computation.

The calendar field values for the currently set time for this calendar.
This is an array of <code>FIELD_COUNT</code> integers, with index values
<code>ERA</code> through <code>DST_OFFSET</code>.
@serial

"
      end

      attribute 2017538 "isSet"
	protected explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"ProtectedField\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The flags which tell if a specified calendar field for the calendar is set.
A new object has no fields set.  After the first call to a method
which generates the fields, they all remain set after that.
This is an array of <code>FIELD_COUNT</code> booleans, with index values
<code>ERA</code> through <code>DST_OFFSET</code>.
@serial

"
      end

      attribute 2017666 "stamp"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Pseudo-time-stamps which specify when each field was set. There
are two special values, UNSET and COMPUTED. Values from
MINIMUM_USER_SET to Integer.MAX_VALUE are legal user set values.

"
      end

      attribute 2017794 "time"
	protected explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"ProtectedField\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The currently set time for this calendar, expressed in milliseconds after
January 1, 1970, 0:00:00 GMT.
@see #isTimeSet
@serial

"
      end

      attribute 2017922 "isTimeSet"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"ProtectedField\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if then the value of <code>time</code> is valid.
The time is made invalid by a change to an item of <code>field[]</code>.
@see #time
@serial

"
      end

      attribute 2018050 "areFieldsSet"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"ProtectedField\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if <code>fields[]</code> are in sync with the currently set time.
If false, then the next attempt to get the value of a field will
force a recomputation of all fields from the current value of
<code>time</code>.
@serial

"
      end

      attribute 2018178 "areAllFieldsSet"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if all fields have been set.
@serial

"
      end

      attribute 2018306 "lenient"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>True</code> if this calendar allows out-of-range field values during computation
of <code>time</code> from <code>fields[]</code>.
@see #setLenient
@see #isLenient
@serial

"
      end

      classrelation 3488258 // zone (<unidirectional association>)
	relation 3488258 --->
	  a role_name "zone" private
	    comment "
The <code>TimeZone</code> used by this calendar. <code>Calendar</code>
uses the time zone data to translate between locale and GMT time.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3488258 // zone (<unidirectional association>)
	  b parent class_ref 723970 // TimeZone
      end

      attribute 2018434 "sharedZone"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>True</code> if zone references to a shared TimeZone object.

"
      end

      attribute 2018562 "firstDayOfWeek"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The first day of the week, with possible values <code>SUNDAY</code>,
<code>MONDAY</code>, etc.  This is a locale-dependent value.
@serial

"
      end

      attribute 2018690 "minimalDaysInFirstWeek"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of days required for the first week in a month or year,
with possible values from 1 to 7.  This is a locale-dependent value.
@serial

"
      end

      classrelation 3488386 // cachedLocaleData (<unidirectional association>)
	relation 3488386 --->
	  a role_name "cachedLocaleData" init_value " new ConcurrentHashMap<>(3)" class_relation const_relation private
	    comment "
Cache to hold the firstDayOfWeek and minimalDaysInFirstWeek
of a Locale.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Locale, int[]> ${name}${value};
"
	    classrelation_ref 3488386 // cachedLocaleData (<unidirectional association>)
	  b parent class_ref 130690 // ConcurrentMap
      end

      attribute 2018818 "UNSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Special values of stamp[]

The corresponding fields[] has no value.

"
      end

      attribute 2018946 "COMPUTED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the corresponding fields[] has been calculated internally.

"
      end

      attribute 2019074 "MINIMUM_USER_STAMP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the corresponding fields[] has been set externally. Stamp
values which are greater than 1 represents the (pseudo) time when the
corresponding fields[] value was set.

"
      end

      attribute 2019202 "ALL_FIELDS"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << FIELD_COUNT) - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The mask value that represents all of the fields.

"
      end

      attribute 2019330 "nextStamp"
	private explicit_type "int"
	init_value " MINIMUM_USER_STAMP"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The next available value for <code>stamp[]</code>, an internal array.
This actually should not be written out to the stream, and will probably
be removed from the stream in the near future.  In the meantime,
a value of <code>MINIMUM_USER_STAMP</code> should be used.
@serial

"
      end

      attribute 2019458 "currentSerialVersion"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the internal serial version which says which version was written
 - 0 (default) for version up to JDK 1.1.5
 - 1 for version from JDK 1.1.6, which writes a correct 'time' value
     as well as compatible values for other fields.  This is a
     transitional format.
 - 2 (not implemented yet) a future version, in which fields[],
     areFieldsSet, and isTimeSet become transient, and isSet[] is
     removed. In JDK 1.1.6 we write a format compatible with version 2.
"
      end

      attribute 2019586 "serialVersionOnStream"
	private explicit_type "int"
	init_value " currentSerialVersion"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The version of the serialized data on the stream.  Possible values:
<dl>
<dt><b>0</b> or not present on stream</dt>
<dd>
JDK 1.1.5 or earlier.
</dd>
<dt><b>1</b></dt>
<dd>
JDK 1.1.6 or later.  Writes a correct 'time' value
as well as compatible values for other fields.  This is a
transitional format.
</dd>
</dl>
When streaming out this class, the most recent format
and the highest allowable <code>serialVersionOnStream</code>
is written.
@serial
@since JDK1.1.6

"
      end

      attribute 2019714 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1807547505821590642L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Proclaim serialization compatibility with JDK 1.1
"
      end

      attribute 2019842 "ERA_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << ERA)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"PointlessBitwiseExpression\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask values for calendar fields
"
      end

      attribute 2019970 "YEAR_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << YEAR)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020098 "MONTH_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << MONTH)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020226 "WEEK_OF_YEAR_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << WEEK_OF_YEAR)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020354 "WEEK_OF_MONTH_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << WEEK_OF_MONTH)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020482 "DAY_OF_MONTH_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << DAY_OF_MONTH)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020610 "DATE_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " DAY_OF_MONTH_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020738 "DAY_OF_YEAR_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << DAY_OF_YEAR)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020866 "DAY_OF_WEEK_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << DAY_OF_WEEK)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2020994 "DAY_OF_WEEK_IN_MONTH_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << DAY_OF_WEEK_IN_MONTH)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021122 "AM_PM_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << AM_PM)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021250 "HOUR_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << HOUR)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021378 "HOUR_OF_DAY_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << HOUR_OF_DAY)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021506 "MINUTE_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << MINUTE)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021634 "SECOND_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << SECOND)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021762 "MILLISECOND_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << MILLISECOND)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2021890 "ZONE_OFFSET_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << ZONE_OFFSET)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2022018 "DST_OFFSET_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (1 << DST_OFFSET)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1072642 "Builder"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2022146 "NFIELDS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " FIELD_COUNT + 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " +1 for WEEK_YEAR"
	end

	attribute 2022274 "WEEK_YEAR"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " FIELD_COUNT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2022402 "instant"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2022530 "fields"
	  private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Calendar.stamp[] (lower half) and Calendar.fields[] (upper half) combined
"
	end

	attribute 2022658 "nextStamp"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Pseudo timestamp starting from MINIMUM_USER_STAMP.
 (COMPUTED is used to indicate that the instant has been set.)
"
	end

	attribute 2022786 "maxFieldIndex"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " maxFieldIndex keeps the max index of fields which have been set.
 (WEEK_YEAR is never included.)
"
	end

	classrelation 3488514 // type (<unidirectional association>)
	  relation 3488514 --->
	    a role_name "type" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3488514 // type (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3488642 // zone (<unidirectional association>)
	  relation 3488642 --->
	    a role_name "zone" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3488642 // zone (<unidirectional association>)
	    b parent class_ref 723970 // TimeZone
	end

	attribute 2022914 "lenient"
	  private explicit_type "boolean"
	  init_value " true"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3488770 // locale (<unidirectional association>)
	  relation 3488770 --->
	    a role_name "locale" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3488770 // locale (<unidirectional association>)
	    b parent class_ref 312962 // Locale
	end

	attribute 2023042 "firstDayOfWeek"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2023170 "minimalDaysInFirstWeek"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8657410 "Builder"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a {@code Calendar.Builder}.
"
	end

	operation 8657538 "setInstant"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param in name "instant" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the instant parameter to the given {@code instant} value that is
a millisecond offset from <a href=\"Calendar.html#Epoch\">the
Epoch</a>.

@param instant a millisecond offset from the Epoch
@return this {@code Calendar.Builder}
@throws IllegalStateException if any of the field parameters have
                              already been set
@see Calendar#setTime(Date)
@see Calendar#setTimeInMillis(long)
@see Calendar#time
"
	end

	operation 8657666 "setInstant"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param inout name "instant" type class_ref 521474 // Date
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the instant parameter to the {@code instant} value given by a
{@link Date}. This method is equivalent to a call to
{@link #setInstant(long) setInstant(instant.getTime())}.

@param instant a {@code Date} representing a millisecond offset from
               the Epoch
@return this {@code Calendar.Builder}
@throws NullPointerException  if {@code instant} is {@code null}
@throws IllegalStateException if any of the field parameters have
                              already been set
@see Calendar#setTime(Date)
@see Calendar#setTimeInMillis(long)
@see Calendar#time
"
	end

	operation 8657794 "set"
	  public return_type class_ref 1072642 // Builder
	  nparams 2
	    param in name "field" explicit_type "int"
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the {@code field} parameter to the given {@code value}.
{@code field} is an index to the {@link Calendar#fields}, such as
{@link Calendar#DAY_OF_MONTH DAY_OF_MONTH}. Field value validation is
not performed in this method. Any out of range values are either
normalized in lenient mode or detected as an invalid value in
non-lenient mode when building a {@code Calendar}.

@param field an index to the {@code Calendar} fields
@param value the field value
@return this {@code Calendar.Builder}
@throws IllegalArgumentException if {@code field} is invalid
@throws IllegalStateException if the instant value has already been set,
                     or if fields have been set too many
                     (approximately {@link Integer#MAX_VALUE}) times.
@see Calendar#set(int, int)
"
	end

	operation 8657922 "setFields"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param inout name "" explicit_type "int...fieldValuePairs"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets field parameters to their values given by
{@code fieldValuePairs} that are pairs of a field and its value.
For example,
<pre>
  setFeilds(Calendar.YEAR, 2013,
            Calendar.MONTH, Calendar.DECEMBER,
            Calendar.DAY_OF_MONTH, 23);</pre>
is equivalent to the sequence of the following
{@link #set(int, int) set} calls:
<pre>
  set(Calendar.YEAR, 2013)
  .set(Calendar.MONTH, Calendar.DECEMBER)
  .set(Calendar.DAY_OF_MONTH, 23);</pre>

@param fieldValuePairs field-value pairs
@return this {@code Calendar.Builder}
@throws NullPointerException if {@code fieldValuePairs} is {@code null}
@throws IllegalArgumentException if any of fields are invalid,
            or if {@code fieldValuePairs.length} is an odd number.
@throws IllegalStateException    if the instant value has been set,
            or if fields have been set too many (approximately
            {@link Integer#MAX_VALUE}) times.
"
	end

	operation 8658050 "setDate"
	  public return_type class_ref 1072642 // Builder
	  nparams 3
	    param in name "year" explicit_type "int"
	    param in name "month" explicit_type "int"
	    param in name "dayOfMonth" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the date field parameters to the values given by {@code year},
{@code month}, and {@code dayOfMonth}. This method is equivalent to
a call to:
<pre>
  setFields(Calendar.YEAR, year,
            Calendar.MONTH, month,
            Calendar.DAY_OF_MONTH, dayOfMonth);</pre>

@param year       the {@link Calendar#YEAR YEAR} value
@param month      the {@link Calendar#MONTH MONTH} value
                  (the month numbering is <em>0-based</em>).
@param dayOfMonth the {@link Calendar#DAY_OF_MONTH DAY_OF_MONTH} value
@return this {@code Calendar.Builder}
"
	end

	operation 8658178 "setTimeOfDay"
	  public return_type class_ref 1072642 // Builder
	  nparams 3
	    param in name "hourOfDay" explicit_type "int"
	    param in name "minute" explicit_type "int"
	    param in name "second" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the time of day field parameters to the values given by
{@code hourOfDay}, {@code minute}, and {@code second}. This method is
equivalent to a call to:
<pre>
  setTimeOfDay(hourOfDay, minute, second, 0);</pre>

@param hourOfDay the {@link Calendar#HOUR_OF_DAY HOUR_OF_DAY} value
                 (24-hour clock)
@param minute    the {@link Calendar#MINUTE MINUTE} value
@param second    the {@link Calendar#SECOND SECOND} value
@return this {@code Calendar.Builder}
"
	end

	operation 8658306 "setTimeOfDay"
	  public return_type class_ref 1072642 // Builder
	  nparams 4
	    param in name "hourOfDay" explicit_type "int"
	    param in name "minute" explicit_type "int"
	    param in name "second" explicit_type "int"
	    param in name "millis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the time of day field parameters to the values given by
{@code hourOfDay}, {@code minute}, {@code second}, and
{@code millis}. This method is equivalent to a call to:
<pre>
  setFields(Calendar.HOUR_OF_DAY, hourOfDay,
            Calendar.MINUTE, minute,
            Calendar.SECOND, second,
            Calendar.MILLISECOND, millis);</pre>

@param hourOfDay the {@link Calendar#HOUR_OF_DAY HOUR_OF_DAY} value
                 (24-hour clock)
@param minute    the {@link Calendar#MINUTE MINUTE} value
@param second    the {@link Calendar#SECOND SECOND} value
@param millis    the {@link Calendar#MILLISECOND MILLISECOND} value
@return this {@code Calendar.Builder}
"
	end

	operation 8658434 "setWeekDate"
	  public return_type class_ref 1072642 // Builder
	  nparams 3
	    param in name "weekYear" explicit_type "int"
	    param in name "weekOfYear" explicit_type "int"
	    param in name "dayOfWeek" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the week-based date parameters to the values with the given
date specifiers - week year, week of year, and day of week.

<p>If the specified calendar doesn't support week dates, the
{@link #build() build} method will throw an {@link IllegalArgumentException}.

@param weekYear   the week year
@param weekOfYear the week number based on {@code weekYear}
@param dayOfWeek  the day of week value: one of the constants
    for the {@link Calendar#DAY_OF_WEEK DAY_OF_WEEK} field:
    {@link Calendar#SUNDAY SUNDAY}, ..., {@link Calendar#SATURDAY SATURDAY}.
@return this {@code Calendar.Builder}
@see Calendar#setWeekDate(int, int, int)
@see Calendar#isWeekDateSupported()
"
	end

	operation 8658562 "setTimeZone"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param inout name "zone" type class_ref 723970 // TimeZone
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the time zone parameter to the given {@code zone}. If no time
zone parameter is given to this {@code Caledar.Builder}, the
{@linkplain TimeZone#getDefault() default
<code>TimeZone</code>} will be used in the {@link #build() build}
method.

@param zone the {@link TimeZone}
@return this {@code Calendar.Builder}
@throws NullPointerException if {@code zone} is {@code null}
@see Calendar#setTimeZone(TimeZone)
"
	end

	operation 8658690 "setLenient"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param inout name "lenient" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the lenient mode parameter to the value given by {@code lenient}.
If no lenient parameter is given to this {@code Calendar.Builder},
lenient mode will be used in the {@link #build() build} method.

@param lenient {@code true} for lenient mode;
               {@code false} for non-lenient mode
@return this {@code Calendar.Builder}
@see Calendar#setLenient(boolean)
"
	end

	operation 8658818 "setCalendarType"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param inout name "type" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the calendar type parameter to the given {@code type}. The
calendar type given by this method has precedence over any explicit
or implicit calendar type given by the
{@linkplain #setLocale(Locale) locale}.

<p>In addition to the available calendar types returned by the
{@link Calendar#getAvailableCalendarTypes() Calendar.getAvailableCalendarTypes}
method, {@code \"gregorian\"} and {@code \"iso8601\"} as aliases of
{@code \"gregory\"} can be used with this method.

@param type the calendar type
@return this {@code Calendar.Builder}
@throws NullPointerException if {@code type} is {@code null}
@throws IllegalArgumentException if {@code type} is unknown
@throws IllegalStateException if another calendar type has already been set
@see Calendar#getCalendarType()
@see Calendar#getAvailableCalendarTypes()
"
	end

	operation 8658946 "setLocale"
	  public return_type class_ref 1072642 // Builder
	  nparams 1
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the locale parameter to the given {@code locale}. If no locale
is given to this {@code Calendar.Builder}, the {@linkplain
Locale#getDefault(Locale.Category) default <code>Locale</code>}
for {@link Locale.Category#FORMAT} will be used.

<p>If no calendar type is explicitly given by a call to the
{@link #setCalendarType(String) setCalendarType} method,
the {@code Locale} value is used to determine what type of
{@code Calendar} to be built.

<p>If no week definition parameters are explicitly given by a call to
the {@link #setWeekDefinition(int,int) setWeekDefinition} method, the
{@code Locale}'s default values are used.

@param locale the {@link Locale}
@throws NullPointerException if {@code locale} is {@code null}
@return this {@code Calendar.Builder}
@see Calendar#getInstance(Locale)
"
	end

	operation 8659074 "setWeekDefinition"
	  public return_type class_ref 1072642 // Builder
	  nparams 2
	    param in name "firstDayOfWeek" explicit_type "int"
	    param in name "minimalDaysInFirstWeek" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the week definition parameters to the values given by
{@code firstDayOfWeek} and {@code minimalDaysInFirstWeek} that are
used to determine the <a href=\"Calendar.html#First_Week\">first
week</a> of a year. The parameters given by this method have
precedence over the default values given by the
{@linkplain #setLocale(Locale) locale}.

@param firstDayOfWeek the first day of a week; one of
                      {@link Calendar#SUNDAY} to {@link Calendar#SATURDAY}
@param minimalDaysInFirstWeek the minimal number of days in the first
                              week (1..7)
@return this {@code Calendar.Builder}
@throws IllegalArgumentException if {@code firstDayOfWeek} or
                                 {@code minimalDaysInFirstWeek} is invalid
@see Calendar#getFirstDayOfWeek()
@see Calendar#getMinimalDaysInFirstWeek()
"
	end

	operation 8659202 "build"
	  public return_type class_ref 723586 // Calendar
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a {@code Calendar} built from the parameters set by the
setter methods. The calendar type given by the {@link #setCalendarType(String)
setCalendarType} method or the {@linkplain #setLocale(Locale) locale} is
used to determine what {@code Calendar} to be created. If no explicit
calendar type is given, the locale's default calendar is created.

<p>If the calendar type is {@code \"iso8601\"}, the
{@linkplain GregorianCalendar#setGregorianChange(Date) Gregorian change date}
of a {@link GregorianCalendar} is set to {@code Date(Long.MIN_VALUE)}
to be the <em>proleptic</em> Gregorian calendar. Its week definition
parameters are also set to be <a
href=\"GregorianCalendar.html#iso8601_compatible_setting\">compatible
with the ISO 8601 standard</a>. Note that the
{@link GregorianCalendar#getCalendarType() getCalendarType} method of
a {@code GregorianCalendar} created with {@code \"iso8601\"} returns
{@code \"gregory\"}.

<p>The default values are used for locale and time zone if these
parameters haven't been given explicitly.

<p>Any out of range field values are either normalized in lenient
mode or detected as an invalid value in non-lenient mode.

@return a {@code Calendar} built with parameters of this {@code
        Calendar.Builder}
@throws IllegalArgumentException if the calendar type is unknown, or
            if any invalid field values are given in non-lenient mode, or
            if a week date is given for the calendar type that doesn't
            support week dates.
@see Calendar#getInstance(TimeZone, Locale)
@see Locale#getDefault(Locale.Category)
@see TimeZone#getDefault()
"
	end

	operation 8659330 "allocateFields"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8659458 "internalSet"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "field" explicit_type "int"
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8659586 "isInstantSet"
	  private explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8659714 "isSet"
	  private explicit_return_type "boolean"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8659842 "isValidWeekParameter"
	  private explicit_return_type "boolean"
	  nparams 1
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8659970 "Calendar"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Calendar with the default time zone
and the default {@link java.util.Locale.Category#FORMAT FORMAT}
locale.
@see     TimeZone#getDefault
"
      end

      operation 8660098 "Calendar"
	protected explicit_return_type ""
	nparams 2
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a calendar with the specified time zone and locale.

@param zone the time zone to use
@param aLocale the locale for the week data
"
      end

      operation 8660226 "getInstance"
	class_operation public return_type class_ref 723586 // Calendar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a calendar using the default time zone and locale. The
<code>Calendar</code> returned is based on the current time
in the default time zone with the default
{@link Locale.Category#FORMAT FORMAT} locale.

@return a Calendar.
"
      end

      operation 8660354 "getInstance"
	class_operation public return_type class_ref 723586 // Calendar
	nparams 1
	  param inout name "zone" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a calendar using the specified time zone and default locale.
The <code>Calendar</code> returned is based on the current time
in the given time zone with the default
{@link Locale.Category#FORMAT FORMAT} locale.

@param zone the time zone to use
@return a Calendar.
"
      end

      operation 8660482 "getInstance"
	class_operation public return_type class_ref 723586 // Calendar
	nparams 1
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a calendar using the default time zone and specified locale.
The <code>Calendar</code> returned is based on the current time
in the default time zone with the given locale.

@param aLocale the locale for the week data
@return a Calendar.
"
      end

      operation 8660610 "getInstance"
	class_operation public return_type class_ref 723586 // Calendar
	nparams 2
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a calendar with the specified time zone and locale.
The <code>Calendar</code> returned is based on the current time
in the given time zone with the given locale.

@param zone the time zone to use
@param aLocale the locale for the week data
@return a Calendar.
"
      end

      operation 8660738 "createCalendar"
	class_operation private return_type class_ref 723586 // Calendar
	nparams 2
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8660866 "getAvailableLocales"
	class_operation public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all locales for which the <code>getInstance</code>
methods of this class can return localized instances.
The array returned must contain at least a <code>Locale</code>
instance equal to {@link java.util.Locale#US Locale.US}.

@return An array of locales for which localized
        <code>Calendar</code> instances are available.
"
      end

      operation 8660994 "computeTime"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the current calendar field values in {@link #fields fields[]}
to the millisecond time value
{@link #time}.

@see #complete()
@see #computeFields()
"
      end

      operation 8661122 "computeFields"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the current millisecond time value {@link #time}
to calendar field values in {@link #fields fields[]}.
This allows you to sync up the calendar field values with
a new time that is set for the calendar.  The time is <em>not</em>
recomputed first; to recompute the time, then the fields, call the
{@link #complete()} method.

@see #computeTime()
"
      end

      operation 8661250 "getTime"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Date</code> object representing this
<code>Calendar</code>'s time value (millisecond offset from the <a
href=\"#Epoch\">Epoch</a>\").

@return a <code>Date</code> representing the time value.
@see #setTime(Date)
@see #getTimeInMillis()
"
      end

      operation 8661378 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 521474 // Date
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this Calendar's time with the given <code>Date</code>.
<p>
Note: Calling <code>setTime()</code> with
<code>Date(Long.MAX_VALUE)</code> or <code>Date(Long.MIN_VALUE)</code>
may yield incorrect field values from <code>get()</code>.

@param date the given Date.
@see #getTime()
@see #setTimeInMillis(long)
"
      end

      operation 8661506 "getTimeInMillis"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this Calendar's time value in milliseconds.

@return the current time as UTC milliseconds from the epoch.
@see #getTime()
@see #setTimeInMillis(long)
"
      end

      operation 8661634 "setTimeInMillis"
	public explicit_return_type "void"
	nparams 1
	  param in name "millis" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this Calendar's current time from the given long value.

@param millis the new time in UTC milliseconds from the epoch.
@see #setTime(Date)
@see #getTimeInMillis()
"
      end

      operation 8661762 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the given calendar field. In lenient mode,
all calendar fields are normalized. In non-lenient mode, all
calendar fields are validated and this method throws an
exception if any calendar fields have out-of-range values. The
normalization and validation are handled by the
{@link #complete()} method, which process is calendar
system dependent.

@param field the given calendar field.
@return the value for the given calendar field.
@throws ArrayIndexOutOfBoundsException if the specified field is out of range
            (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).
@see #set(int,int)
@see #complete()
"
      end

      operation 8661890 "internalGet"
	protected explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the given calendar field. This method does
not involve normalization or validation of the field value.

@param field the given calendar field.
@return the value for the given calendar field.
@see #get(int)
"
      end

      operation 8662018 "internalSet"
	package explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the given calendar field. This method does
not affect any setting state of the field in this
<code>Calendar</code> instance.

@throws IndexOutOfBoundsException if the specified field is out of range
            (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).
@see #areFieldsSet
@see #isTimeSet
@see #areAllFieldsSet
@see #set(int,int)
"
      end

      operation 8662146 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the given calendar field to the given value. The value is not
interpreted by this method regardless of the leniency mode.

@param field the given calendar field.
@param value the value to be set for the given calendar field.
@throws ArrayIndexOutOfBoundsException if the specified field is out of range
            (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).
in non-lenient mode.
@see #set(int,int,int)
@see #set(int,int,int,int,int)
@see #set(int,int,int,int,int,int)
@see #get(int)
"
      end

      operation 8662274 "set"
	public explicit_return_type "void"
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values for the calendar fields <code>YEAR</code>,
<code>MONTH</code>, and <code>DAY_OF_MONTH</code>.
Previous values of other calendar fields are retained.  If this is not desired,
call {@link #clear()} first.

@param year the value used to set the <code>YEAR</code> calendar field.
@param month the value used to set the <code>MONTH</code> calendar field.
Month value is 0-based. e.g., 0 for January.
@param date the value used to set the <code>DAY_OF_MONTH</code> calendar field.
@see #set(int,int)
@see #set(int,int,int,int,int)
@see #set(int,int,int,int,int,int)
"
      end

      operation 8662402 "set"
	public explicit_return_type "void"
	nparams 5
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values for the calendar fields <code>YEAR</code>,
<code>MONTH</code>, <code>DAY_OF_MONTH</code>,
<code>HOUR_OF_DAY</code>, and <code>MINUTE</code>.
Previous values of other fields are retained.  If this is not desired,
call {@link #clear()} first.

@param year the value used to set the <code>YEAR</code> calendar field.
@param month the value used to set the <code>MONTH</code> calendar field.
Month value is 0-based. e.g., 0 for January.
@param date the value used to set the <code>DAY_OF_MONTH</code> calendar field.
@param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field.
@param minute the value used to set the <code>MINUTE</code> calendar field.
@see #set(int,int)
@see #set(int,int,int)
@see #set(int,int,int,int,int,int)
"
      end

      operation 8662530 "set"
	public explicit_return_type "void"
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "date" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values for the fields <code>YEAR</code>, <code>MONTH</code>,
<code>DAY_OF_MONTH</code>, <code>HOUR_OF_DAY</code>, <code>MINUTE</code>, and
<code>SECOND</code>.
Previous values of other fields are retained.  If this is not desired,
call {@link #clear()} first.

@param year the value used to set the <code>YEAR</code> calendar field.
@param month the value used to set the <code>MONTH</code> calendar field.
Month value is 0-based. e.g., 0 for January.
@param date the value used to set the <code>DAY_OF_MONTH</code> calendar field.
@param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field.
@param minute the value used to set the <code>MINUTE</code> calendar field.
@param second the value used to set the <code>SECOND</code> calendar field.
@see #set(int,int)
@see #set(int,int,int)
@see #set(int,int,int,int,int)
"
      end

      operation 8662658 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all the calendar field values and the time value
(millisecond offset from the <a href=\"#Epoch\">Epoch</a>) of
this <code>Calendar</code> undefined. This means that {@link
#isSet(int) isSet()} will return <code>false</code> for all the
calendar fields, and the date and time calculations will treat
the fields as if they had never been set. A
<code>Calendar</code> implementation class may use its specific
default field values for date/time calculations. For example,
<code>GregorianCalendar</code> uses 1970 if the
<code>YEAR</code> field value is undefined.

@see #clear(int)
"
      end

      operation 8662786 "clear"
	public explicit_return_type "void"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the given calendar field value and the time value
(millisecond offset from the <a href=\"#Epoch\">Epoch</a>) of
this <code>Calendar</code> undefined. This means that {@link
#isSet(int) isSet(field)} will return <code>false</code>, and
the date and time calculations will treat the field as if it
had never been set. A <code>Calendar</code> implementation
class may use the field's specific default value for date and
time calculations.

<p>The {@link #HOUR_OF_DAY}, {@link #HOUR} and {@link #AM_PM}
fields are handled independently and the <a
href=\"#time_resolution\">the resolution rule for the time of
day</a> is applied. Clearing one of the fields doesn't reset
the hour of day value of this <code>Calendar</code>. Use {@link
#set(int,int) set(Calendar.HOUR_OF_DAY, 0)} to reset the hour
value.

@param field the calendar field to be cleared.
@see #clear()
"
      end

      operation 8662914 "isSet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the given calendar field has a value set,
including cases that the value has been set by internal fields
calculations triggered by a <code>get</code> method call.

@param field the calendar field to test
@return <code>true</code> if the given calendar field has a value set;
<code>false</code> otherwise.
"
      end

      operation 8663042 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the calendar
<code>field</code> value in the given <code>style</code> and
<code>locale</code>.  If no string representation is
applicable, <code>null</code> is returned. This method calls
{@link Calendar#get(int) get(field)} to get the calendar
<code>field</code> value if the string representation is
applicable to the given calendar <code>field</code>.

<p>For example, if this <code>Calendar</code> is a
<code>GregorianCalendar</code> and its date is 2005-01-01, then
the string representation of the {@link #MONTH} field would be
\"January\" in the long style in an English locale or \"Jan\" in
the short style. However, no string representation would be
available for the {@link #DAY_OF_MONTH} field, and this method
would return <code>null</code>.

<p>The default implementation supports the calendar fields for
which a {@link DateFormatSymbols} has names in the given
<code>locale</code>.

@param field
       the calendar field for which the string representation
       is returned
@param style
       the style applied to the string representation; one of {@link
       #SHORT_FORMAT} ({@link #SHORT}), {@link #SHORT_STANDALONE},
       {@link #LONG_FORMAT} ({@link #LONG}), {@link #LONG_STANDALONE},
       {@link #NARROW_FORMAT}, or {@link #NARROW_STANDALONE}.
@param locale
       the locale for the string representation
       (any calendar types specified by {@code locale} are ignored)
@return the string representation of the given
       {@code field} in the given {@code style}, or
       {@code null} if no string representation is
       applicable.
@exception IllegalArgumentException
       if {@code field} or {@code style} is invalid,
       or if this {@code Calendar} is non-lenient and any
       of the calendar fields have invalid values
@exception NullPointerException
       if {@code locale} is null
@since 1.6
"
      end

      operation 8663170 "getDisplayNames"
	public return_type class_ref 130178 // Map
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Integer> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Map} containing all names of the calendar
{@code field} in the given {@code style} and
{@code locale} and their corresponding field values. For
example, if this {@code Calendar} is a {@link
GregorianCalendar}, the returned map would contain \"Jan\" to
{@link #JANUARY}, \"Feb\" to {@link #FEBRUARY}, and so on, in the
{@linkplain #SHORT short} style in an English locale.

<p>Narrow names may not be unique due to use of single characters,
such as \"S\" for Sunday and Saturday. In that case narrow names are not
included in the returned {@code Map}.

<p>The values of other calendar fields may be taken into
account to determine a set of display names. For example, if
this {@code Calendar} is a lunisolar calendar system and
the year value given by the {@link #YEAR} field has a leap
month, this method would return month names containing the leap
month name, and month names are mapped to their values specific
for the year.

<p>The default implementation supports display names contained in
a {@link DateFormatSymbols}. For example, if {@code field}
is {@link #MONTH} and {@code style} is {@link
#ALL_STYLES}, this method returns a {@code Map} containing
all strings returned by {@link DateFormatSymbols#getShortMonths()}
and {@link DateFormatSymbols#getMonths()}.

@param field
       the calendar field for which the display names are returned
@param style
       the style applied to the string representation; one of {@link
       #SHORT_FORMAT} ({@link #SHORT}), {@link #SHORT_STANDALONE},
       {@link #LONG_FORMAT} ({@link #LONG}), {@link #LONG_STANDALONE},
       {@link #NARROW_FORMAT}, or {@link #NARROW_STANDALONE}
@param locale
       the locale for the display names
@return a {@code Map} containing all display names in
       {@code style} and {@code locale} and their
       field values, or {@code null} if no display names
       are defined for {@code field}
@exception IllegalArgumentException
       if {@code field} or {@code style} is invalid,
       or if this {@code Calendar} is non-lenient and any
       of the calendar fields have invalid values
@exception NullPointerException
       if {@code locale} is null
@since 1.6
"
      end

      operation 8663298 "getDisplayNamesImpl"
	private return_type class_ref 130178 // Map
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,Integer> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8663426 "checkDisplayNameParams"
	package explicit_return_type "boolean"
	nparams 6
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param in name "minStyle" explicit_type "int"
	  param in name "maxStyle" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	  param in name "fieldMask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8663554 "getFieldStrings"
	private return_type class_ref 128130 // String
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "symbols" type class_ref 1046530 // DateFormatSymbols
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8663682 "complete"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills in any unset fields in the calendar fields. First, the {@link
#computeTime()} method is called if the time value (millisecond offset
from the <a href=\"#Epoch\">Epoch</a>) has not been calculated from
calendar field values. Then, the {@link #computeFields()} method is
called to calculate all calendar field values.
"
      end

      operation 8663810 "isExternallySet"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the value of the specified calendar field has been set
externally by calling one of the setter methods rather than by the
internal time calculation.

@return <code>true</code> if the field has been set externally,
<code>false</code> otherwise.
@exception IndexOutOfBoundsException if the specified
               <code>field</code> is out of range
              (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).
@see #selectFields()
@see #setFieldsComputed(int)
"
      end

      operation 8663938 "getSetStateFields"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a field mask (bit mask) indicating all calendar fields that
have the state of externally or internally set.

@return a bit mask indicating set state fields
"
      end

      operation 8664066 "setFieldsComputed"
	package explicit_return_type "void"
	nparams 1
	  param in name "fieldMask" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of the specified calendar fields to
<em>computed</em>. This state means that the specified calendar fields
have valid values that have been set by internal time calculation
rather than by calling one of the setter methods.

@param fieldMask the field to be marked as computed.
@exception IndexOutOfBoundsException if the specified
               <code>field</code> is out of range
              (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).
@see #isExternallySet(int)
@see #selectFields()
"
      end

      operation 8664194 "setFieldsNormalized"
	package explicit_return_type "void"
	nparams 1
	  param in name "fieldMask" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of the calendar fields that are <em>not</em> specified
by <code>fieldMask</code> to <em>unset</em>. If <code>fieldMask</code>
specifies all the calendar fields, then the state of this
<code>Calendar</code> becomes that all the calendar fields are in sync
with the time value (millisecond offset from the Epoch).

@param fieldMask the field mask indicating which calendar fields are in
sync with the time value.
@exception IndexOutOfBoundsException if the specified
               <code>field</code> is out of range
              (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).
@see #isExternallySet(int)
@see #selectFields()
"
      end

      operation 8664322 "isPartiallyNormalized"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the calendar fields are partially in sync with the time
value or fully in sync but not stamp values are not normalized yet.
"
      end

      operation 8664450 "isFullyNormalized"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the calendar fields are fully in sync with the time
value.
"
      end

      operation 8664578 "setUnnormalized"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks this Calendar as not sync'd.
"
      end

      operation 8664706 "isFieldSet"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param in name "fieldMask" explicit_type "int"
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified <code>field</code> is on in the
<code>fieldMask</code>.
"
      end

      operation 8664834 "selectFields"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a field mask indicating which calendar field values
to be used to calculate the time value. The calendar fields are
returned as a bit mask, each bit of which corresponds to a field, i.e.,
the mask value of <code>field</code> is <code>(1 &lt;&lt;
field)</code>. For example, 0x26 represents the <code>YEAR</code>,
<code>MONTH</code>, and <code>DAY_OF_MONTH</code> fields (i.e., 0x26 is
equal to
<code>(1&lt;&lt;YEAR)|(1&lt;&lt;MONTH)|(1&lt;&lt;DAY_OF_MONTH))</code>.

<p>This method supports the calendar fields resolution as described in
the class description. If the bit mask for a given field is on and its
field has not been set (i.e., <code>isSet(field)</code> is
<code>false</code>), then the default value of the field has to be
used, which case means that the field has been selected because the
selected combination involves the field.

@return a bit mask of selected fields
@see #isExternallySet(int)
"
      end

      operation 8664962 "getBaseStyle"
	package explicit_return_type "int"
	nparams 1
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8665090 "toStandaloneStyle"
	private explicit_return_type "int"
	nparams 1
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8665218 "isStandaloneStyle"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8665346 "isNarrowStyle"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8665474 "isNarrowFormatStyle"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8665602 "aggregateStamp"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "stamp_a" explicit_type "int"
	  param in name "stamp_b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the pseudo-time-stamp for two fields, given their
individual pseudo-time-stamps.  If either of the fields
is unset, then the aggregate is unset.  Otherwise, the
aggregate is the later of the two stamps.
"
      end

      operation 8665730 "getAvailableCalendarTypes"
	class_operation public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable {@code Set} containing all calendar types
supported by {@code Calendar} in the runtime environment. The available
calendar types can be used for the <a
href=\"Locale.html#def_locale_extension\">Unicode locale extensions</a>.
The {@code Set} returned contains at least {@code \"gregory\"}. The
calendar types don't include aliases, such as {@code \"gregorian\"} for
{@code \"gregory\"}.

@return an unmodifiable {@code Set} containing all available calendar types
@since 1.8
@see #getCalendarType()
@see Calendar.Builder#setCalendarType(String)
@see Locale#getUnicodeLocaleType(String)
"
      end

      class 1072770 "AvailableCalendarTypes"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3488898 // SET (<unidirectional association>)
	  relation 3488898 --->
	    a role_name "SET" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 3488898 // SET (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	extra_member 172034 "initialization"
	  
	  cpp "" ""
	  java "  static {
            Set<String> set = new HashSet<>(3);
            set.add(\"gregory\");
            set.add(\"buddhist\");
            set.add(\"japanese\");
            SET = Collections.unmodifiableSet(set);
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 8665858 "AvailableCalendarTypes"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8665986 "getCalendarType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the calendar type of this {@code Calendar}. Calendar types are
defined by the <em>Unicode Locale Data Markup Language (LDML)</em>
specification.

<p>The default implementation of this method returns the class name of
this {@code Calendar} instance. Any subclasses that implement
LDML-defined calendar systems should override this method to return
appropriate calendar types.

@return the LDML-defined calendar type or the class name of this
        {@code Calendar} instance
@since 1.8
@see <a href=\"Locale.html#def_extensions\">Locale extensions</a>
@see Locale.Builder#setLocale(Locale)
@see Locale.Builder#setUnicodeLocaleKeyword(String, String)
"
      end

      operation 8666114 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"EqualsWhichDoesntCheckParameterClass\")
@Override
"
	
	
	
	comment "Compares this <code>Calendar</code> to the specified
<code>Object</code>.  The result is <code>true</code> if and only if
the argument is a <code>Calendar</code> object of the same calendar
system that represents the same time value (millisecond offset from the
<a href=\"#Epoch\">Epoch</a>) under the same
<code>Calendar</code> parameters as this object.

<p>The <code>Calendar</code> parameters are the values represented
by the <code>isLenient</code>, <code>getFirstDayOfWeek</code>,
<code>getMinimalDaysInFirstWeek</code> and <code>getTimeZone</code>
methods. If there is any difference in those parameters
between the two <code>Calendar</code>s, this method returns
<code>false</code>.

<p>Use the {@link #compareTo(Calendar) compareTo} method to
compare only the time values.

@param obj the object to compare with.
@return <code>true</code> if this object is equal to <code>obj</code>;
<code>false</code> otherwise.
"
      end

      operation 8666242 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this calendar.

@return a hash code value for this object.
@since 1.2
"
      end

      operation 8666370 "before"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "when" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this <code>Calendar</code> represents a time
before the time represented by the specified
<code>Object</code>. This method is equivalent to:
<pre>{@code
        compareTo(when) < 0
}</pre>
if and only if <code>when</code> is a <code>Calendar</code>
instance. Otherwise, the method returns <code>false</code>.

@param when the <code>Object</code> to be compared
@return <code>true</code> if the time of this
<code>Calendar</code> is before the time represented by
<code>when</code>; <code>false</code> otherwise.
@see     #compareTo(Calendar)
"
      end

      operation 8666498 "after"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "when" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this <code>Calendar</code> represents a time
after the time represented by the specified
<code>Object</code>. This method is equivalent to:
<pre>{@code
        compareTo(when) > 0
}</pre>
if and only if <code>when</code> is a <code>Calendar</code>
instance. Otherwise, the method returns <code>false</code>.

@param when the <code>Object</code> to be compared
@return <code>true</code> if the time of this <code>Calendar</code> is
after the time represented by <code>when</code>; <code>false</code>
otherwise.
@see     #compareTo(Calendar)
"
      end

      operation 8666626 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherCalendar" type class_ref 723586 // Calendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the time values (millisecond offsets from the <a
href=\"#Epoch\">Epoch</a>) represented by two
<code>Calendar</code> objects.

@param anotherCalendar the <code>Calendar</code> to be compared.
@return the value <code>0</code> if the time represented by the argument
is equal to the time represented by this <code>Calendar</code>; a value
less than <code>0</code> if the time of this <code>Calendar</code> is
before the time represented by the argument; and a value greater than
<code>0</code> if the time of this <code>Calendar</code> is after the
time represented by the argument.
@exception NullPointerException if the specified <code>Calendar</code> is
           <code>null</code>.
@exception IllegalArgumentException if the time value of the
specified <code>Calendar</code> object can't be obtained due to
any invalid calendar values.
@since   1.5
"
      end

      operation 8666754 "add"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "amount" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds or subtracts the specified amount of time to the given calendar field,
based on the calendar's rules. For example, to subtract 5 days from
the current time of the calendar, you can achieve it by calling:
<p><code>add(Calendar.DAY_OF_MONTH, -5)</code>.

@param field the calendar field.
@param amount the amount of date or time to be added to the field.
@see #roll(int,int)
@see #set(int,int)
"
      end

      operation 8666882 "roll"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param inout name "up" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds or subtracts (up/down) a single unit of time on the given time
field without changing larger fields. For example, to roll the current
date up by one day, you can achieve it by calling:
<p>roll(Calendar.DATE, true).
When rolling on the year or Calendar.YEAR field, it will roll the year
value in the range between 1 and the value returned by calling
<code>getMaximum(Calendar.YEAR)</code>.
When rolling on the month or Calendar.MONTH field, other fields like
date might conflict and, need to be changed. For instance,
rolling the month on the date 01/31/96 will result in 02/29/96.
When rolling on the hour-in-day or Calendar.HOUR_OF_DAY field, it will
roll the hour value in the range between 0 and 23, which is zero-based.

@param field the time field.
@param up indicates if the value of the specified time field is to be
rolled up or rolled down. Use true if rolling up, false otherwise.
@see Calendar#add(int,int)
@see Calendar#set(int,int)
"
      end

      operation 8667010 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "amount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified (signed) amount to the specified calendar field
without changing larger fields.  A negative amount means to roll
down.

<p>NOTE:  This default implementation on <code>Calendar</code> just repeatedly calls the
version of {@link #roll(int,boolean) roll()} that rolls by one unit.  This may not
always do the right thing.  For example, if the <code>DAY_OF_MONTH</code> field is 31,
rolling through February will leave it set to 28.  The <code>GregorianCalendar</code>
version of this function takes care of this problem.  Other subclasses
should also provide overrides of this function that do the right thing.

@param field the calendar field.
@param amount the signed amount to add to the calendar <code>field</code>.
@since 1.2
@see #roll(int,boolean)
@see #add(int,int)
@see #set(int,int)
"
      end

      operation 8667138 "setTimeZone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time zone with the given time zone value.

@param value the given time zone.
"
      end

      operation 8667266 "getTimeZone"
	public return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the time zone.

@return the time zone object associated with this calendar.
"
      end

      operation 8667394 "getZone"
	package return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time zone (without cloning).
"
      end

      operation 8667522 "setZoneShared"
	package explicit_return_type "void"
	nparams 1
	  param inout name "shared" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the sharedZone flag to <code>shared</code>.
"
      end

      operation 8667650 "setLenient"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lenient" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether or not date/time interpretation is to be lenient.  With
lenient interpretation, a date such as \"February 942, 1996\" will be
treated as being equivalent to the 941st day after February 1, 1996.
With strict (non-lenient) interpretation, such dates will cause an exception to be
thrown. The default is lenient.

@param lenient <code>true</code> if the lenient mode is to be turned
on; <code>false</code> if it is to be turned off.
@see #isLenient()
@see java.text.DateFormat#setLenient
"
      end

      operation 8667778 "isLenient"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether date/time interpretation is to be lenient.

@return <code>true</code> if the interpretation mode of this calendar is lenient;
<code>false</code> otherwise.
@see #setLenient(boolean)
"
      end

      operation 8667906 "setFirstDayOfWeek"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets what the first day of the week is; e.g., <code>SUNDAY</code> in the U.S.,
<code>MONDAY</code> in France.

@param value the given first day of the week.
@see #getFirstDayOfWeek()
@see #getMinimalDaysInFirstWeek()
"
      end

      operation 8668034 "getFirstDayOfWeek"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets what the first day of the week is; e.g., <code>SUNDAY</code> in the U.S.,
<code>MONDAY</code> in France.

@return the first day of the week.
@see #setFirstDayOfWeek(int)
@see #getMinimalDaysInFirstWeek()
"
      end

      operation 8668162 "setMinimalDaysInFirstWeek"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets what the minimal days required in the first week of the year are;
For example, if the first week is defined as one that contains the first
day of the first month of a year, call this method with value 1. If it
must be a full week, use value 7.

@param value the given minimal days required in the first week
of the year.
@see #getMinimalDaysInFirstWeek()
"
      end

      operation 8668290 "getMinimalDaysInFirstWeek"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets what the minimal days required in the first week of the year are;
e.g., if the first week is defined as one that contains the first day
of the first month of a year, this method returns 1. If
the minimal days required must be a full week, this method
returns 7.

@return the minimal days required in the first week of the year.
@see #setMinimalDaysInFirstWeek(int)
"
      end

      operation 8668418 "isWeekDateSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code Calendar} supports week dates.

<p>The default implementation of this method returns {@code false}.

@return {@code true} if this {@code Calendar} supports week dates;
        {@code false} otherwise.
@see #getWeekYear()
@see #setWeekDate(int,int,int)
@see #getWeeksInWeekYear()
@since 1.7
"
      end

      operation 8668546 "getWeekYear"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the week year represented by this {@code Calendar}. The
week year is in sync with the week cycle. The {@linkplain
#getFirstDayOfWeek() first day of the first week} is the first
day of the week year.

<p>The default implementation of this method throws an
{@link UnsupportedOperationException}.

@return the week year of this {@code Calendar}
@exception UnsupportedOperationException
           if any week year numbering isn't supported
           in this {@code Calendar}.
@see #isWeekDateSupported()
@see #getFirstDayOfWeek()
@see #getMinimalDaysInFirstWeek()
@since 1.7
"
      end

      operation 8668674 "setWeekDate"
	public explicit_return_type "void"
	nparams 3
	  param in name "weekYear" explicit_type "int"
	  param in name "weekOfYear" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the date of this {@code Calendar} with the the given date
specifiers - week year, week of year, and day of week.

<p>Unlike the {@code set} method, all of the calendar fields
and {@code time} values are calculated upon return.

<p>If {@code weekOfYear} is out of the valid week-of-year range
in {@code weekYear}, the {@code weekYear} and {@code
weekOfYear} values are adjusted in lenient mode, or an {@code
IllegalArgumentException} is thrown in non-lenient mode.

<p>The default implementation of this method throws an
{@code UnsupportedOperationException}.

@param weekYear   the week year
@param weekOfYear the week number based on {@code weekYear}
@param dayOfWeek  the day of week value: one of the constants
                  for the {@link #DAY_OF_WEEK} field: {@link
                  #SUNDAY}, ..., {@link #SATURDAY}.
@exception IllegalArgumentException
           if any of the given date specifiers is invalid
           or any of the calendar fields are inconsistent
           with the given date specifiers in non-lenient mode
@exception UnsupportedOperationException
           if any week year numbering isn't supported in this
           {@code Calendar}.
@see #isWeekDateSupported()
@see #getFirstDayOfWeek()
@see #getMinimalDaysInFirstWeek()
@since 1.7
"
      end

      operation 8668802 "getWeeksInWeekYear"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of weeks in the week year represented by this
{@code Calendar}.

<p>The default implementation of this method throws an
{@code UnsupportedOperationException}.

@return the number of weeks in the week year.
@exception UnsupportedOperationException
           if any week year numbering isn't supported in this
           {@code Calendar}.
@see #WEEK_OF_YEAR
@see #isWeekDateSupported()
@see #getWeekYear()
@see #getActualMaximum(int)
@since 1.7
"
      end

      operation 8668930 "getMinimum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value for the given calendar field of this
<code>Calendar</code> instance. The minimum value is defined as
the smallest value returned by the {@link #get(int) get} method
for any possible time value.  The minimum value depends on
calendar system specific parameters of the instance.

@param field the calendar field.
@return the minimum value for the given calendar field.
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8669058 "getMaximum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value for the given calendar field of this
<code>Calendar</code> instance. The maximum value is defined as
the largest value returned by the {@link #get(int) get} method
for any possible time value. The maximum value depends on
calendar system specific parameters of the instance.

@param field the calendar field.
@return the maximum value for the given calendar field.
@see #getMinimum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8669186 "getGreatestMinimum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the highest minimum value for the given calendar field
of this <code>Calendar</code> instance. The highest minimum
value is defined as the largest value returned by {@link
#getActualMinimum(int)} for any possible time value. The
greatest minimum value depends on calendar system specific
parameters of the instance.

@param field the calendar field.
@return the highest minimum value for the given calendar field.
@see #getMinimum(int)
@see #getMaximum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8669314 "getLeastMaximum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lowest maximum value for the given calendar field
of this <code>Calendar</code> instance. The lowest maximum
value is defined as the smallest value returned by {@link
#getActualMaximum(int)} for any possible time value. The least
maximum value depends on calendar system specific parameters of
the instance. For example, a <code>Calendar</code> for the
Gregorian calendar system returns 28 for the
<code>DAY_OF_MONTH</code> field, because the 28th is the last
day of the shortest month of this calendar, February in a
common year.

@param field the calendar field.
@return the lowest maximum value for the given calendar field.
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8669442 "getActualMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value that the specified calendar field
could have, given the time value of this <code>Calendar</code>.

<p>The default implementation of this method uses an iterative
algorithm to determine the actual minimum value for the
calendar field. Subclasses should, if possible, override this
with a more efficient implementation - in many cases, they can
simply return <code>getMinimum()</code>.

@param field the calendar field
@return the minimum of the given calendar field for the time
value of this <code>Calendar</code>
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMaximum(int)
@since 1.2
"
      end

      operation 8669570 "getActualMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value that the specified calendar field
could have, given the time value of this
<code>Calendar</code>. For example, the actual maximum value of
the <code>MONTH</code> field is 12 in some years, and 13 in
other years in the Hebrew calendar system.

<p>The default implementation of this method uses an iterative
algorithm to determine the actual maximum value for the
calendar field. Subclasses should, if possible, override this
with a more efficient implementation.

@param field the calendar field
@return the maximum of the given calendar field for the time
value of this <code>Calendar</code>
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@since 1.2
"
      end

      operation 8669698 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates and returns a copy of this object.

@return a copy of this object.
"
      end

      classrelation 3489026 // FIELD_NAME (<unidirectional association>)
	relation 3489026 --->
	  a role_name "FIELD_NAME" multiplicity "[]" init_value " {
        \"ERA\", \"YEAR\", \"MONTH\", \"WEEK_OF_YEAR\", \"WEEK_OF_MONTH\", \"DAY_OF_MONTH\",
        \"DAY_OF_YEAR\", \"DAY_OF_WEEK\", \"DAY_OF_WEEK_IN_MONTH\", \"AM_PM\", \"HOUR\",
        \"HOUR_OF_DAY\", \"MINUTE\", \"SECOND\", \"MILLISECOND\", \"ZONE_OFFSET\",
        \"DST_OFFSET\"
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3489026 // FIELD_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8669826 "getFieldName"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the specified calendar field.

@param field the calendar field
@return the calendar field name
@exception IndexOutOfBoundsException if <code>field</code> is negative,
equal to or greater then <code>FIELD_COUNT</code>.
"
      end

      operation 8669954 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return a string representation of this calendar. This method
is intended to be used only for debugging purposes, and the
format of the returned string may vary between implementations.
The returned string may be empty but may not be <code>null</code>.

@return  a string representation of this calendar.
"
      end

      operation 8670082 "appendValue"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "sb" type class_ref 173058 // StringBuilder
	  param inout name "item" type class_ref 128130 // String
	  param inout name "valid" explicit_type "boolean"
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " =======================privates==============================="
      end

      operation 8670210 "setWeekCountData"
	private explicit_return_type "void"
	nparams 1
	  param inout name "desiredLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Both firstDayOfWeek and minimalDaysInFirstWeek are locale-dependent.
They are used to figure out the week count for a specific date for
a given locale. These must be set when a Calendar is constructed.
@param desiredLocale the given locale.
"
      end

      operation 8670338 "updateTime"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recomputes the time and updates the status fields isTimeSet
and areFieldsSet.  Callers should check isTimeSet and only
call this method if isTimeSet is false.
"
      end

      operation 8670466 "compareTo"
	private explicit_return_type "int"
	nparams 1
	  param in name "t" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8670594 "getMillisOf"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "calendar" type class_ref 723586 // Calendar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8670722 "adjustStamp"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts the stamp[] values before nextStamp overflow. nextStamp
is set to the next stamp value upon the return.
"
      end

      operation 8670850 "invalidateWeekFields"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the WEEK_OF_MONTH and WEEK_OF_YEAR fields to new values with the
new parameter value if they have been calculated internally.
"
      end

      operation 8670978 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of this object to a stream (i.e., serialize it).

Ideally, <code>Calendar</code> would only write out its state data and
the current time, and not write any field data out, such as
<code>fields[]</code>, <code>isTimeSet</code>, <code>areFieldsSet</code>,
and <code>isSet[]</code>.  <code>nextStamp</code> also should not be part
of the persistent state. Unfortunately, this didn't happen before JDK 1.1
shipped. To be compatible with JDK 1.1, we will always have to write out
the field values and state flags.  However, <code>nextStamp</code> can be
removed from the serialization stream; this will probably happen in the
near future.
"
      end

      class 1072898 "CalendarAccessControlContext"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3489154 // INSTANCE (<unidirectional association>)
	  relation 3489154 --->
	    a role_name "INSTANCE" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3489154 // INSTANCE (<unidirectional association>)
	    b parent class_ref 129154 // AccessControlContext
	end

	extra_member 172162 "initialization"
	  
	  cpp "" ""
	  java "  static {
            RuntimePermission perm = new RuntimePermission(\"accessClassInPackage.sun.util.calendar\");
            PermissionCollection perms = perm.newPermissionCollection();
            perms.add(perm);
            INSTANCE = new AccessControlContext(new ProtectionDomain[] {
                                                    new ProtectionDomain(null, perms)
                                                });
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 8671106 "CalendarAccessControlContext"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8671234 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitutes this object from a stream (i.e., deserialize it).
"
      end

      operation 8671362 "toInstant"
	public return_type class_ref 1003778 // Instant
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this object to an {@link Instant}.
<p>
The conversion creates an {@code Instant} that represents the
same point on the time-line as this {@code Calendar}.

@return the instant representing the same point on the time-line
@since 1.8
"
      end
    end

    class 723970 "TimeZone"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>TimeZone</code> represents a time zone offset, and also figures out daylight
savings.

<p>
Typically, you get a <code>TimeZone</code> using <code>getDefault</code>
which creates a <code>TimeZone</code> based on the time zone where the program
is running. For example, for a program running in Japan, <code>getDefault</code>
creates a <code>TimeZone</code> object based on Japanese Standard Time.

<p>
You can also get a <code>TimeZone</code> using <code>getTimeZone</code>
along with a time zone ID. For instance, the time zone ID for the
U.S. Pacific Time zone is \"America/Los_Angeles\". So, you can get a
U.S. Pacific Time <code>TimeZone</code> object with:
<blockquote><pre>
TimeZone tz = TimeZone.getTimeZone(\"America/Los_Angeles\");
</pre></blockquote>
You can use the <code>getAvailableIDs</code> method to iterate through
all the supported time zone IDs. You can then choose a
supported ID to get a <code>TimeZone</code>.
If the time zone you want is not represented by one of the
supported IDs, then a custom time zone ID can be specified to
produce a TimeZone. The syntax of a custom time zone ID is:

<blockquote><pre>
<a name=\"CustomID\"><i>CustomID:</i></a>
        <code>GMT</code> <i>Sign</i> <i>Hours</i> <code>:</code> <i>Minutes</i>
        <code>GMT</code> <i>Sign</i> <i>Hours</i> <i>Minutes</i>
        <code>GMT</code> <i>Sign</i> <i>Hours</i>
<i>Sign:</i> one of
        <code>+ -</code>
<i>Hours:</i>
        <i>Digit</i>
        <i>Digit</i> <i>Digit</i>
<i>Minutes:</i>
        <i>Digit</i> <i>Digit</i>
<i>Digit:</i> one of
        <code>0 1 2 3 4 5 6 7 8 9</code>
</pre></blockquote>

<i>Hours</i> must be between 0 to 23 and <i>Minutes</i> must be
between 00 to 59.  For example, \"GMT+10\" and \"GMT+0010\" mean ten
hours and ten minutes ahead of GMT, respectively.
<p>
The format is locale independent and digits must be taken from the
Basic Latin block of the Unicode standard. No daylight saving time
transition schedule can be specified with a custom time zone ID. If
the specified string doesn't match the syntax, <code>\"GMT\"</code>
is used.
<p>
When creating a <code>TimeZone</code>, the specified custom time
zone ID is normalized in the following syntax:
<blockquote><pre>
<a name=\"NormalizedCustomID\"><i>NormalizedCustomID:</i></a>
        <code>GMT</code> <i>Sign</i> <i>TwoDigitHours</i> <code>:</code> <i>Minutes</i>
<i>Sign:</i> one of
        <code>+ -</code>
<i>TwoDigitHours:</i>
        <i>Digit</i> <i>Digit</i>
<i>Minutes:</i>
        <i>Digit</i> <i>Digit</i>
<i>Digit:</i> one of
        <code>0 1 2 3 4 5 6 7 8 9</code>
</pre></blockquote>
For example, TimeZone.getTimeZone(\"GMT-8\").getID() returns \"GMT-08:00\".

<h3>Three-letter time zone IDs</h3>

For compatibility with JDK 1.1.x, some other three-letter time zone IDs
(such as \"PST\", \"CTT\", \"AST\") are also supported. However, <strong>their
use is deprecated</strong> because the same abbreviation is often used
for multiple time zones (for example, \"CST\" could be U.S. \"Central Standard
Time\" and \"China Standard Time\"), and the Java platform can then only
recognize one of them.


@see          Calendar
@see          GregorianCalendar
@see          SimpleTimeZone
@author       Mark Davis, David Goldsmith, Chen-Lieh Huang, Alan Liu
@since        JDK1.1
"
      classrelation 3543426 // <realization>
	relation 3543426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3543426 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3543554 // <realization>
	relation 3543554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3543554 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      operation 8899074 "TimeZone"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      attribute 2071170 "SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for <code>getDisplayName()</code> indicating
a short name, such as \"PST.\"
@see #LONG
@since 1.2

"
      end

      attribute 2071298 "LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A style specifier for <code>getDisplayName()</code> indicating
a long name, such as \"Pacific Standard Time.\"
@see #SHORT
@since 1.2

"
      end

      attribute 2071426 "ONE_MINUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants used internally; unit is milliseconds
"
      end

      attribute 2071554 "ONE_HOUR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*ONE_MINUTE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2071682 "ONE_DAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24*ONE_HOUR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2071810 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3581463369166924961L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Proclaim serialization compatibility with JDK 1.1
"
      end

      operation 8899202 "getOffset"
	abstract public explicit_return_type "int"
	nparams 6
	  param in name "era" explicit_type "int"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "milliseconds" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the time zone offset, for current date, modified in case of
daylight savings. This is the offset to add to UTC to get local time.
<p>
This method returns a historically correct offset if an
underlying <code>TimeZone</code> implementation subclass
supports historical Daylight Saving Time schedule and GMT
offset changes.

@param era the era of the given date.
@param year the year in the given date.
@param month the month in the given date.
Month is 0-based. e.g., 0 for January.
@param day the day-in-month of the given date.
@param dayOfWeek the day-of-week of the given date.
@param milliseconds the milliseconds in day in <em>standard</em>
local time.

@return the offset in milliseconds to add to GMT to get local time.

@see Calendar#ZONE_OFFSET
@see Calendar#DST_OFFSET
"
      end

      operation 8899330 "getOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "date" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset of this time zone from UTC at the specified
date. If Daylight Saving Time is in effect at the specified
date, the offset value is adjusted with the amount of daylight
saving.
<p>
This method returns a historically correct offset value if an
underlying TimeZone implementation subclass supports historical
Daylight Saving Time schedule and GMT offset changes.

@param date the date represented in milliseconds since January 1, 1970 00:00:00 GMT
@return the amount of time in milliseconds to add to UTC to get local time.

@see Calendar#ZONE_OFFSET
@see Calendar#DST_OFFSET
@since 1.4
"
      end

      operation 8899458 "getOffsets"
	package explicit_return_type "int"
	nparams 2
	  param in name "date" explicit_type "long"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the raw GMT offset and the amount of daylight saving of this
time zone at the given time.
@param date the milliseconds (since January 1, 1970,
00:00:00.000 GMT) at which the time zone offset and daylight
saving amount are found
@param offsets an array of int where the raw GMT offset
(offset[0]) and daylight saving amount (offset[1]) are stored,
or null if those values are not needed. The method assumes that
the length of the given array is two or larger.
@return the total amount of the raw GMT offset and daylight
saving at the specified date.

@see Calendar#ZONE_OFFSET
@see Calendar#DST_OFFSET
"
      end

      operation 8899586 "setRawOffset"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "offsetMillis" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the base time zone offset to GMT.
This is the offset to add to UTC to get local time.
<p>
If an underlying <code>TimeZone</code> implementation subclass
supports historical GMT offset changes, the specified GMT
offset is set as the latest GMT offset and the difference from
the known latest GMT offset value is used to adjust all
historical GMT offset values.

@param offsetMillis the given base time zone offset to GMT.
"
      end

      operation 8899714 "getRawOffset"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of time in milliseconds to add to UTC to get
standard time in this time zone. Because this value is not
affected by daylight saving time, it is called <I>raw
offset</I>.
<p>
If an underlying <code>TimeZone</code> implementation subclass
supports historical GMT offset changes, the method returns the
raw offset value of the current date. In Honolulu, for example,
its raw offset changed from GMT-10:30 to GMT-10:00 in 1947, and
this method always returns -36000000 milliseconds (i.e., -10
hours).

@return the amount of raw offset time in milliseconds to add to UTC.
@see Calendar#ZONE_OFFSET
"
      end

      operation 8899842 "getID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ID of this time zone.
@return the ID of this time zone.
"
      end

      operation 8899970 "setID"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time zone ID. This does not change any other data in
the time zone object.
@param ID the new time zone ID.
"
      end

      operation 8900098 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a long standard time name of this {@code TimeZone} suitable for
presentation to the user in the default locale.

<p>This method is equivalent to:
<blockquote><pre>
getDisplayName(false, {@link #LONG},
               Locale.getDefault({@link Locale.Category#DISPLAY}))
</pre></blockquote>

@return the human-readable name of this time zone in the default locale.
@since 1.2
@see #getDisplayName(boolean, int, Locale)
@see Locale#getDefault(Locale.Category)
@see Locale.Category
"
      end

      operation 8900226 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a long standard time name of this {@code TimeZone} suitable for
presentation to the user in the specified {@code locale}.

<p>This method is equivalent to:
<blockquote><pre>
getDisplayName(false, {@link #LONG}, locale)
</pre></blockquote>

@param locale the locale in which to supply the display name.
@return the human-readable name of this time zone in the given locale.
@exception NullPointerException if {@code locale} is {@code null}.
@since 1.2
@see #getDisplayName(boolean, int, Locale)
"
      end

      operation 8900354 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "daylight" explicit_type "boolean"
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name in the specified {@code style} of this {@code TimeZone}
suitable for presentation to the user in the default locale. If the
specified {@code daylight} is {@code true}, a Daylight Saving Time name
is returned (even if this {@code TimeZone} doesn't observe Daylight Saving
Time). Otherwise, a Standard Time name is returned.

<p>This method is equivalent to:
<blockquote><pre>
getDisplayName(daylight, style,
               Locale.getDefault({@link Locale.Category#DISPLAY}))
</pre></blockquote>

@param daylight {@code true} specifying a Daylight Saving Time name, or
                {@code false} specifying a Standard Time name
@param style either {@link #LONG} or {@link #SHORT}
@return the human-readable name of this time zone in the default locale.
@exception IllegalArgumentException if {@code style} is invalid.
@since 1.2
@see #getDisplayName(boolean, int, Locale)
@see Locale#getDefault(Locale.Category)
@see Locale.Category
@see java.text.DateFormatSymbols#getZoneStrings()
"
      end

      operation 8900482 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "daylight" explicit_type "boolean"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a name in the specified {@code style} of this {@code TimeZone}
suitable for presentation to the user in the specified {@code
locale}. If the specified {@code daylight} is {@code true}, a Daylight
Saving Time name is returned (even if this {@code TimeZone} doesn't
observe Daylight Saving Time). Otherwise, a Standard Time name is
returned.

<p>When looking up a time zone name, the {@linkplain
ResourceBundle.Control#getCandidateLocales(String,Locale) default
<code>Locale</code> search path of <code>ResourceBundle</code>} derived
from the specified {@code locale} is used. (No {@linkplain
ResourceBundle.Control#getFallbackLocale(String,Locale) fallback
<code>Locale</code>} search is performed.) If a time zone name in any
{@code Locale} of the search path, including {@link Locale#ROOT}, is
found, the name is returned. Otherwise, a string in the
<a href=\"#NormalizedCustomID\">normalized custom ID format</a> is returned.

@param daylight {@code true} specifying a Daylight Saving Time name, or
                {@code false} specifying a Standard Time name
@param style either {@link #LONG} or {@link #SHORT}
@param locale   the locale in which to supply the display name.
@return the human-readable name of this time zone in the given locale.
@exception IllegalArgumentException if {@code style} is invalid.
@exception NullPointerException if {@code locale} is {@code null}.
@since 1.2
@see java.text.DateFormatSymbols#getZoneStrings()
"
      end

      operation 8900610 "getDisplayNames"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "id" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8900738 "getDSTSavings"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of time to be added to local standard time
to get local wall clock time.

<p>The default implementation returns 3600000 milliseconds
(i.e., one hour) if a call to {@link #useDaylightTime()}
returns {@code true}. Otherwise, 0 (zero) is returned.

<p>If an underlying {@code TimeZone} implementation subclass
supports historical and future Daylight Saving Time schedule
changes, this method returns the amount of saving time of the
last known Daylight Saving Time rule that can be a future
prediction.

<p>If the amount of saving time at any given time stamp is
required, construct a {@link Calendar} with this {@code
TimeZone} and the time stamp, and call {@link Calendar#get(int)
Calendar.get}{@code (}{@link Calendar#DST_OFFSET}{@code )}.

@return the amount of saving time in milliseconds
@since 1.4
@see #inDaylightTime(Date)
@see #getOffset(long)
@see #getOffset(int,int,int,int,int,int)
@see Calendar#ZONE_OFFSET
"
      end

      operation 8900866 "useDaylightTime"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries if this {@code TimeZone} uses Daylight Saving Time.

<p>If an underlying {@code TimeZone} implementation subclass
supports historical and future Daylight Saving Time schedule
changes, this method refers to the last known Daylight Saving Time
rule that can be a future prediction and may not be the same as
the current rule. Consider calling {@link #observesDaylightTime()}
if the current rule should also be taken into account.

@return {@code true} if this {@code TimeZone} uses Daylight Saving Time,
        {@code false}, otherwise.
@see #inDaylightTime(Date)
@see Calendar#DST_OFFSET
"
      end

      operation 8900994 "observesDaylightTime"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code TimeZone} is currently in
Daylight Saving Time, or if a transition from Standard Time to
Daylight Saving Time occurs at any future time.

<p>The default implementation returns {@code true} if
{@code useDaylightTime()} or {@code inDaylightTime(new Date())}
returns {@code true}.

@return {@code true} if this {@code TimeZone} is currently in
Daylight Saving Time, or if a transition from Standard Time to
Daylight Saving Time occurs at any future time; {@code false}
otherwise.
@since 1.7
@see #useDaylightTime()
@see #inDaylightTime(Date)
@see Calendar#DST_OFFSET
"
      end

      operation 8901122 "inDaylightTime"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "date" type class_ref 521474 // Date
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries if the given {@code date} is in Daylight Saving Time in
this time zone.

@param date the given Date.
@return {@code true} if the given date is in Daylight Saving Time,
        {@code false}, otherwise.
"
      end

      operation 8901250 "getTimeZone"
	class_operation public return_type class_ref 723970 // TimeZone
	nparams 1
	  param inout name "ID" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>TimeZone</code> for the given ID.

@param ID the ID for a <code>TimeZone</code>, either an abbreviation
such as \"PST\", a full name such as \"America/Los_Angeles\", or a custom
ID such as \"GMT-8:00\". Note that the support of abbreviations is
for JDK 1.1.x compatibility only and full names should be used.

@return the specified <code>TimeZone</code>, or the GMT zone if the given ID
cannot be understood.
"
      end

      operation 8901378 "getTimeZone"
	class_operation public return_type class_ref 723970 // TimeZone
	nparams 1
	  param inout name "zoneId" type class_ref 1049730 // ZoneId
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code TimeZone} for the given {@code zoneId}.

@param zoneId a {@link ZoneId} from which the time zone ID is obtained
@return the specified {@code TimeZone}, or the GMT zone if the given ID
        cannot be understood.
@throws NullPointerException if {@code zoneId} is {@code null}
@since 1.8
"
      end

      operation 8901506 "toZoneId"
	public return_type class_ref 1049730 // ZoneId
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this {@code TimeZone} object to a {@code ZoneId}.

@return a {@code ZoneId} representing the same time zone as this
        {@code TimeZone}
@since 1.8
"
      end

      operation 8901634 "getTimeZone"
	class_operation private return_type class_ref 723970 // TimeZone
	nparams 2
	  param inout name "ID" type class_ref 128130 // String
	  param inout name "fallback" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8901762 "getAvailableIDs"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "rawOffset" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the available IDs according to the given time zone offset in milliseconds.

@param rawOffset the given time zone GMT offset in milliseconds.
@return an array of IDs, where the time zone for that ID has
the specified GMT offset. For example, \"America/Phoenix\" and \"America/Denver\"
both have GMT-07:00, but differ in daylight saving behavior.
@see #getRawOffset()
"
      end

      operation 8901890 "getAvailableIDs"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the available IDs supported.
@return an array of IDs.
"
      end

      operation 8902018 "getSystemTimeZoneID"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "javaHome" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Gets the platform defined TimeZone ID.
"
      end

      operation 8902146 "getSystemGMTOffsetID"
	class_operation private return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Gets the custom time zone ID based on the GMT offset of the
platform. (e.g., \"GMT+08:00\")
"
      end

      operation 8902274 "getDefault"
	class_operation public return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the default {@code TimeZone} of the Java virtual machine. If the
cached default {@code TimeZone} is available, its clone is returned.
Otherwise, the method takes the following steps to determine the default
time zone.

<ul>
<li>Use the {@code user.timezone} property value as the default
time zone ID if it's available.</li>
<li>Detect the platform time zone ID. The source of the
platform time zone and ID mapping may vary with implementation.</li>
<li>Use {@code GMT} as the last resort if the given or detected
time zone ID is unknown.</li>
</ul>

<p>The default {@code TimeZone} created from the ID is cached,
and its clone is returned. The {@code user.timezone} property
value is set to the ID upon return.

@return the default {@code TimeZone}
@see #setDefault(TimeZone)
"
      end

      operation 8902402 "getDefaultRef"
	class_operation package return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the reference to the default TimeZone object. This
method doesn't create a clone.
"
      end

      operation 8902530 "setDefaultZone"
	class_operation private return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8902658 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "zone" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code TimeZone} that is returned by the {@code getDefault}
method. {@code zone} is cached. If {@code zone} is null, the cached
default {@code TimeZone} is cleared. This method doesn't change the value
of the {@code user.timezone} property.

@param zone the new default {@code TimeZone}, or null
@throws SecurityException if the security manager's {@code checkPermission}
                          denies {@code PropertyPermission(\"user.timezone\",
                          \"write\")}
@see #getDefault
@see PropertyPermission
"
      end

      operation 8902786 "hasSameRules"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this zone has the same rule and offset as another zone.
That is, if this zone differs only in ID, if at all.  Returns false
if the other zone is null.
@param other the <code>TimeZone</code> object to be compared with
@return true if the other zone is not null and is the same as this one,
with the possible exception of the ID
@since 1.2
"
      end

      operation 8902914 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a copy of this <code>TimeZone</code>.

@return a clone of this <code>TimeZone</code>
"
      end

      classrelation 3543682 // NO_TIMEZONE (<unidirectional association>)
	relation 3543682 --->
	  a role_name "NO_TIMEZONE" init_value " null" class_relation const_relation package
	    comment "
The null constant as a TimeZone.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3543682 // NO_TIMEZONE (<unidirectional association>)
	  b parent class_ref 723970 // TimeZone
      end

      classrelation 3543810 // ID (<unidirectional association>)
	relation 3543810 --->
	  a role_name "ID" private
	    comment " =======================privates===============================

The string identifier of this <code>TimeZone</code>.  This is a
programmatic identifier used internally to look up <code>TimeZone</code>
objects from the system table and also to map them to their localized
display names.  <code>ID</code> values are unique in the system
table but may not be for dynamically created zones.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3543810 // ID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3543938 // defaultTimeZone (<unidirectional association>)
	relation 3543938 --->
	  a role_name "defaultTimeZone" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3543938 // defaultTimeZone (<unidirectional association>)
	  b parent class_ref 723970 // TimeZone
      end

      classrelation 3544066 // GMT_ID (<unidirectional association>)
	relation 3544066 --->
	  a role_name "GMT_ID" init_value " \"GMT\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3544066 // GMT_ID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2071938 "GMT_ID_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3544194 // mainAppContextDefault (<unidirectional association>)
	relation 3544194 --->
	  a role_name "mainAppContextDefault" class_relation volatile private
	    comment " a static TimeZone we can reference if no AppContext is in place
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3544194 // mainAppContextDefault (<unidirectional association>)
	  b parent class_ref 723970 // TimeZone
      end

      operation 8903042 "parseCustomTimeZone"
	class_operation private return_type class_ref 723970 // TimeZone
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a custom time zone identifier and returns a corresponding zone.
This method doesn't support the RFC 822 time zone format. (e.g., +hhmm)

@param id a string of the <a href=\"#CustomID\">custom ID form</a>.
@return a newly created TimeZone with the given offset and
no daylight saving time, or null if the id cannot be parsed.
"
      end
    end

    class 865026 "EmptyStackException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by methods in the <code>Stack</code> class to indicate
that the stack is empty.

@author  Jonathan Payne
@see     java.util.Stack
@since   JDK1.0
"
      classrelation 3513218 // <generalisation>
	relation 3513218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3513218 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 2038274 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5084686378493302095L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8776706 "EmptyStackException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>EmptyStackException</code> with <tt>null</tt>
as its error message string.
"
      end
    end

    class 882690 "Timer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A facility for threads to schedule tasks for future execution in a
background thread.  Tasks may be scheduled for one-time execution, or for
repeated execution at regular intervals.

<p>Corresponding to each <tt>Timer</tt> object is a single background
thread that is used to execute all of the timer's tasks, sequentially.
Timer tasks should complete quickly.  If a timer task takes excessive time
to complete, it \"hogs\" the timer's task execution thread.  This can, in
turn, delay the execution of subsequent tasks, which may \"bunch up\" and
execute in rapid succession when (and if) the offending task finally
completes.

<p>After the last live reference to a <tt>Timer</tt> object goes away
<i>and</i> all outstanding tasks have completed execution, the timer's task
execution thread terminates gracefully (and becomes subject to garbage
collection).  However, this can take arbitrarily long to occur.  By
default, the task execution thread does not run as a <i>daemon thread</i>,
so it is capable of keeping an application from terminating.  If a caller
wants to terminate a timer's task execution thread rapidly, the caller
should invoke the timer's <tt>cancel</tt> method.

<p>If the timer's task execution thread terminates unexpectedly, for
example, because its <tt>stop</tt> method is invoked, any further
attempt to schedule a task on the timer will result in an
<tt>IllegalStateException</tt>, as if the timer's <tt>cancel</tt>
method had been invoked.

<p>This class is thread-safe: multiple threads can share a single
<tt>Timer</tt> object without the need for external synchronization.

<p>This class does <i>not</i> offer real-time guarantees: it schedules
tasks using the <tt>Object.wait(long)</tt> method.

<p>Java 5.0 introduced the {@code java.util.concurrent} package and
one of the concurrency utilities therein is the {@link
java.util.concurrent.ScheduledThreadPoolExecutor
ScheduledThreadPoolExecutor} which is a thread pool for repeatedly
executing tasks at a given rate or delay.  It is effectively a more
versatile replacement for the {@code Timer}/{@code TimerTask}
combination, as it allows multiple service threads, accepts various
time units, and doesn't require subclassing {@code TimerTask} (just
implement {@code Runnable}).  Configuring {@code
ScheduledThreadPoolExecutor} with one thread makes it equivalent to
{@code Timer}.

<p>Implementation note: This class scales to large numbers of concurrently
scheduled tasks (thousands should present no problem).  Internally,
it uses a binary heap to represent its task queue, so the cost to schedule
a task is O(log n), where n is the number of concurrently scheduled tasks.

<p>Implementation note: All constructors start a timer thread.

@author  Josh Bloch
@see     TimerTask
@see     Object#wait(long)
@since   1.3
"
      classrelation 3550850 // queue (<unidirectional association>)
	relation 3550850 --->
	  a role_name "queue" init_value " new TaskQueue()" const_relation private
	    comment "
The timer task queue.  This data structure is shared with the timer
thread.  The timer produces tasks, via its various schedule calls,
and the timer thread consumes, executing timer tasks as appropriate,
and removing them from the queue when they're obsolete.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550850 // queue (<unidirectional association>)
	  b parent class_ref 1095426 // TaskQueue
      end

      classrelation 3550978 // thread (<unidirectional association>)
	relation 3550978 --->
	  a role_name "thread" init_value " new TimerThread(queue)" const_relation private
	    comment "
The timer thread.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550978 // thread (<unidirectional association>)
	  b parent class_ref 1095554 // TimerThread
      end

      classrelation 3551106 // threadReaper (<unidirectional association>)
	relation 3551106 --->
	  a role_name "threadReaper" init_value " new Object() {
        protected void finalize() throws Throwable {
            synchronized(queue) {
                thread.newTasksMayBeScheduled = false;
                queue.notify(); // In case queue is empty.
            }
        }
    }" const_relation private
	    comment "
This object causes the timer's task execution thread to exit
gracefully when there are no live references to the Timer object and no
tasks in the timer queue.  It is used in preference to a finalizer on
Timer as such a finalizer would be susceptible to a subclass's
finalizer forgetting to call it.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3551106 // threadReaper (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3551234 // nextSerialNumber (<unidirectional association>)
	relation 3551234 --->
	  a role_name "nextSerialNumber" init_value " new AtomicInteger(0)" class_relation const_relation private
	    comment "
This ID is used to generate thread names.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3551234 // nextSerialNumber (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      operation 8931970 "serialNumber"
	class_operation private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8932098 "Timer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer.  The associated thread does <i>not</i>
{@linkplain Thread#setDaemon run as a daemon}.
"
      end

      operation 8932226 "Timer"
	public explicit_return_type ""
	nparams 1
	  param inout name "isDaemon" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer whose associated thread may be specified to
{@linkplain Thread#setDaemon run as a daemon}.
A daemon thread is called for if the timer will be used to
schedule repeating \"maintenance activities\", which must be
performed as long as the application is running, but should not
prolong the lifetime of the application.

@param isDaemon true if the associated thread should run as a daemon.
"
      end

      operation 8932354 "Timer"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer whose associated thread has the specified name.
The associated thread does <i>not</i>
{@linkplain Thread#setDaemon run as a daemon}.

@param name the name of the associated thread
@throws NullPointerException if {@code name} is null
@since 1.5
"
      end

      operation 8932482 "Timer"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "isDaemon" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer whose associated thread has the specified name,
and may be specified to
{@linkplain Thread#setDaemon run as a daemon}.

@param name the name of the associated thread
@param isDaemon true if the associated thread should run as a daemon
@throws NullPointerException if {@code name} is null
@since 1.5
"
      end

      operation 8932610 "schedule"
	public explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 882818 // TimerTask
	  param in name "delay" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules the specified task for execution after the specified delay.

@param task  task to be scheduled.
@param delay delay in milliseconds before task is to be executed.
@throws IllegalArgumentException if <tt>delay</tt> is negative, or
        <tt>delay + System.currentTimeMillis()</tt> is negative.
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} is null
"
      end

      operation 8932738 "schedule"
	public explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 882818 // TimerTask
	  param inout name "time" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules the specified task for execution at the specified time.  If
the time is in the past, the task is scheduled for immediate execution.

@param task task to be scheduled.
@param time time at which task is to be executed.
@throws IllegalArgumentException if <tt>time.getTime()</tt> is negative.
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} or {@code time} is null
"
      end

      operation 8932866 "schedule"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 882818 // TimerTask
	  param in name "delay" explicit_type "long"
	  param in name "period" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules the specified task for repeated <i>fixed-delay execution</i>,
beginning after the specified delay.  Subsequent executions take place
at approximately regular intervals separated by the specified period.

<p>In fixed-delay execution, each execution is scheduled relative to
the actual execution time of the previous execution.  If an execution
is delayed for any reason (such as garbage collection or other
background activity), subsequent executions will be delayed as well.
In the long run, the frequency of execution will generally be slightly
lower than the reciprocal of the specified period (assuming the system
clock underlying <tt>Object.wait(long)</tt> is accurate).

<p>Fixed-delay execution is appropriate for recurring activities
that require \"smoothness.\"  In other words, it is appropriate for
activities where it is more important to keep the frequency accurate
in the short run than in the long run.  This includes most animation
tasks, such as blinking a cursor at regular intervals.  It also includes
tasks wherein regular activity is performed in response to human
input, such as automatically repeating a character as long as a key
is held down.

@param task   task to be scheduled.
@param delay  delay in milliseconds before task is to be executed.
@param period time in milliseconds between successive task executions.
@throws IllegalArgumentException if {@code delay < 0}, or
        {@code delay + System.currentTimeMillis() < 0}, or
        {@code period <= 0}
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} is null
"
      end

      operation 8932994 "schedule"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 882818 // TimerTask
	  param inout name "firstTime" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules the specified task for repeated <i>fixed-delay execution</i>,
beginning at the specified time. Subsequent executions take place at
approximately regular intervals, separated by the specified period.

<p>In fixed-delay execution, each execution is scheduled relative to
the actual execution time of the previous execution.  If an execution
is delayed for any reason (such as garbage collection or other
background activity), subsequent executions will be delayed as well.
In the long run, the frequency of execution will generally be slightly
lower than the reciprocal of the specified period (assuming the system
clock underlying <tt>Object.wait(long)</tt> is accurate).  As a
consequence of the above, if the scheduled first time is in the past,
it is scheduled for immediate execution.

<p>Fixed-delay execution is appropriate for recurring activities
that require \"smoothness.\"  In other words, it is appropriate for
activities where it is more important to keep the frequency accurate
in the short run than in the long run.  This includes most animation
tasks, such as blinking a cursor at regular intervals.  It also includes
tasks wherein regular activity is performed in response to human
input, such as automatically repeating a character as long as a key
is held down.

@param task   task to be scheduled.
@param firstTime First time at which task is to be executed.
@param period time in milliseconds between successive task executions.
@throws IllegalArgumentException if {@code firstTime.getTime() < 0}, or
        {@code period <= 0}
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} or {@code firstTime} is null
"
      end

      operation 8933122 "scheduleAtFixedRate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 882818 // TimerTask
	  param in name "delay" explicit_type "long"
	  param in name "period" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules the specified task for repeated <i>fixed-rate execution</i>,
beginning after the specified delay.  Subsequent executions take place
at approximately regular intervals, separated by the specified period.

<p>In fixed-rate execution, each execution is scheduled relative to the
scheduled execution time of the initial execution.  If an execution is
delayed for any reason (such as garbage collection or other background
activity), two or more executions will occur in rapid succession to
\"catch up.\"  In the long run, the frequency of execution will be
exactly the reciprocal of the specified period (assuming the system
clock underlying <tt>Object.wait(long)</tt> is accurate).

<p>Fixed-rate execution is appropriate for recurring activities that
are sensitive to <i>absolute</i> time, such as ringing a chime every
hour on the hour, or running scheduled maintenance every day at a
particular time.  It is also appropriate for recurring activities
where the total time to perform a fixed number of executions is
important, such as a countdown timer that ticks once every second for
ten seconds.  Finally, fixed-rate execution is appropriate for
scheduling multiple repeating timer tasks that must remain synchronized
with respect to one another.

@param task   task to be scheduled.
@param delay  delay in milliseconds before task is to be executed.
@param period time in milliseconds between successive task executions.
@throws IllegalArgumentException if {@code delay < 0}, or
        {@code delay + System.currentTimeMillis() < 0}, or
        {@code period <= 0}
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} is null
"
      end

      operation 8933250 "scheduleAtFixedRate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 882818 // TimerTask
	  param inout name "firstTime" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules the specified task for repeated <i>fixed-rate execution</i>,
beginning at the specified time. Subsequent executions take place at
approximately regular intervals, separated by the specified period.

<p>In fixed-rate execution, each execution is scheduled relative to the
scheduled execution time of the initial execution.  If an execution is
delayed for any reason (such as garbage collection or other background
activity), two or more executions will occur in rapid succession to
\"catch up.\"  In the long run, the frequency of execution will be
exactly the reciprocal of the specified period (assuming the system
clock underlying <tt>Object.wait(long)</tt> is accurate).  As a
consequence of the above, if the scheduled first time is in the past,
then any \"missed\" executions will be scheduled for immediate \"catch up\"
execution.

<p>Fixed-rate execution is appropriate for recurring activities that
are sensitive to <i>absolute</i> time, such as ringing a chime every
hour on the hour, or running scheduled maintenance every day at a
particular time.  It is also appropriate for recurring activities
where the total time to perform a fixed number of executions is
important, such as a countdown timer that ticks once every second for
ten seconds.  Finally, fixed-rate execution is appropriate for
scheduling multiple repeating timer tasks that must remain synchronized
with respect to one another.

@param task   task to be scheduled.
@param firstTime First time at which task is to be executed.
@param period time in milliseconds between successive task executions.
@throws IllegalArgumentException if {@code firstTime.getTime() < 0} or
        {@code period <= 0}
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} or {@code firstTime} is null
"
      end

      operation 8933378 "sched"
	private explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 882818 // TimerTask
	  param in name "time" explicit_type "long"
	  param in name "period" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule the specified timer task for execution at the specified
time with the specified period, in milliseconds.  If period is
positive, the task is scheduled for repeated execution; if period is
zero, the task is scheduled for one-time execution. Time is specified
in Date.getTime() format.  This method checks timer state, task state,
and initial execution time, but not period.

@throws IllegalArgumentException if <tt>time</tt> is negative.
@throws IllegalStateException if task was already scheduled or
        cancelled, timer was cancelled, or timer thread terminated.
@throws NullPointerException if {@code task} is null
"
      end

      operation 8933506 "cancel"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminates this timer, discarding any currently scheduled tasks.
Does not interfere with a currently executing task (if it exists).
Once a timer has been terminated, its execution thread terminates
gracefully, and no more tasks may be scheduled on it.

<p>Note that calling this method from within the run method of a
timer task that was invoked by this timer absolutely guarantees that
the ongoing task execution is the last task execution that will ever
be performed by this timer.

<p>This method may be called repeatedly; the second and subsequent
calls have no effect.
"
      end

      operation 8933634 "purge"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all cancelled tasks from this timer's task queue.  <i>Calling
this method has no effect on the behavior of the timer</i>, but
eliminates the references to the cancelled tasks from the queue.
If there are no external references to these tasks, they become
eligible for garbage collection.

<p>Most programs will have no need to call this method.
It is designed for use by the rare application that cancels a large
number of tasks.  Calling this method trades time for space: the
runtime of the method may be proportional to n + c log n, where n
is the number of tasks in the queue and c is the number of cancelled
tasks.

<p>Note that it is permissible to call this method from within a
a task scheduled on this timer.

@return the number of tasks removed from the queue.
@since 1.5
"
      end
    end

    class 882818 "TimerTask"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A task that can be scheduled for one-time or repeated execution by a Timer.

@author  Josh Bloch
@see     Timer
@since   1.3
"
      classrelation 3551746 // <realization>
	relation 3551746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3551746 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      classrelation 3551874 // lock (<unidirectional association>)
	relation 3551874 --->
	  a role_name "lock" init_value " new Object()" const_relation package
	    comment "
This object is used to control access to the TimerTask internals.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3551874 // lock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2086274 "state"
	package explicit_type "int"
	init_value " VIRGIN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The state of this task, chosen from the constants below.

"
      end

      attribute 2086402 "VIRGIN"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This task has not yet been scheduled.

"
      end

      attribute 2086530 "SCHEDULED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This task is scheduled for execution.  If it is a non-repeating task,
it has not yet been executed.

"
      end

      attribute 2086658 "EXECUTED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This non-repeating task has already executed (or is currently
executing) and has not been cancelled.

"
      end

      attribute 2086786 "CANCELLED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This task has been cancelled (with a call to TimerTask.cancel).

"
      end

      attribute 2086914 "nextExecutionTime"
	package explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Next execution time for this task in the format returned by
System.currentTimeMillis, assuming this task is scheduled for execution.
For repeating tasks, this field is updated prior to each task execution.

"
      end

      attribute 2087042 "period"
	package explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Period in milliseconds for repeating tasks.  A positive value indicates
fixed-rate execution.  A negative value indicates fixed-delay execution.
A value of 0 indicates a non-repeating task.

"
      end

      operation 8935682 "TimerTask"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer task.
"
      end

      operation 8935810 "run"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The action to be performed by this timer task.
"
      end

      operation 8935938 "cancel"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels this timer task.  If the task has been scheduled for one-time
execution and has not yet run, or has not yet been scheduled, it will
never run.  If the task has been scheduled for repeated execution, it
will never run again.  (If the task is running when this call occurs,
the task will run to completion, but will never run again.)

<p>Note that calling this method from within the <tt>run</tt> method of
a repeating timer task absolutely guarantees that the timer task will
not run again.

<p>This method may be called repeatedly; the second and subsequent
calls have no effect.

@return true if this task is scheduled for one-time execution and has
        not yet run, or this task is scheduled for repeated execution.
        Returns false if the task was scheduled for one-time execution
        and has already run, or if the task was never scheduled, or if
        the task was already cancelled.  (Loosely speaking, this method
        returns <tt>true</tt> if it prevents one or more scheduled
        executions from taking place.)
"
      end

      operation 8936066 "scheduledExecutionTime"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <i>scheduled</i> execution time of the most recent
<i>actual</i> execution of this task.  (If this method is invoked
while task execution is in progress, the return value is the scheduled
execution time of the ongoing task execution.)

<p>This method is typically invoked from within a task's run method, to
determine whether the current execution of the task is sufficiently
timely to warrant performing the scheduled activity:
<pre>{@code
  public void run() {
      if (System.currentTimeMillis() - scheduledExecutionTime() >=
          MAX_TARDINESS)
              return;  // Too late; skip this execution.
      // Perform the task
  }
}</pre>
This method is typically <i>not</i> used in conjunction with
<i>fixed-delay execution</i> repeating tasks, as their scheduled
execution times are allowed to drift over time, and so are not terribly
significant.

@return the time at which the most recent execution of this task was
        scheduled to occur, in the format returned by Date.getTime().
        The return value is undefined if the task has yet to commence
        its first execution.
@see Date#getTime()
"
      end
    end

    class 884866 "LinkedHashSet"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 388482 // HashSet
        rank 0 explicit_value ""
      actual class class_ref 192258 // Set
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Hash table and linked list implementation of the <tt>Set</tt> interface,
with predictable iteration order.  This implementation differs from
<tt>HashSet</tt> in that it maintains a doubly-linked list running through
all of its entries.  This linked list defines the iteration ordering,
which is the order in which elements were inserted into the set
(<i>insertion-order</i>).  Note that insertion order is <i>not</i> affected
if an element is <i>re-inserted</i> into the set.  (An element <tt>e</tt>
is reinserted into a set <tt>s</tt> if <tt>s.add(e)</tt> is invoked when
<tt>s.contains(e)</tt> would return <tt>true</tt> immediately prior to
the invocation.)

<p>This implementation spares its clients from the unspecified, generally
chaotic ordering provided by {@link HashSet}, without incurring the
increased cost associated with {@link TreeSet}.  It can be used to
produce a copy of a set that has the same order as the original, regardless
of the original set's implementation:
<pre>
    void foo(Set s) {
        Set copy = new LinkedHashSet(s);
        ...
    }
</pre>
This technique is particularly useful if a module takes a set on input,
copies it, and later returns results whose order is determined by that of
the copy.  (Clients generally appreciate having things returned in the same
order they were presented.)

<p>This class provides all of the optional <tt>Set</tt> operations, and
permits null elements.  Like <tt>HashSet</tt>, it provides constant-time
performance for the basic operations (<tt>add</tt>, <tt>contains</tt> and
<tt>remove</tt>), assuming the hash function disperses elements
properly among the buckets.  Performance is likely to be just slightly
below that of <tt>HashSet</tt>, due to the added expense of maintaining the
linked list, with one exception: Iteration over a <tt>LinkedHashSet</tt>
requires time proportional to the <i>size</i> of the set, regardless of
its capacity.  Iteration over a <tt>HashSet</tt> is likely to be more
expensive, requiring time proportional to its <i>capacity</i>.

<p>A linked hash set has two parameters that affect its performance:
<i>initial capacity</i> and <i>load factor</i>.  They are defined precisely
as for <tt>HashSet</tt>.  Note, however, that the penalty for choosing an
excessively high value for initial capacity is less severe for this class
than for <tt>HashSet</tt>, as iteration times for this class are unaffected
by capacity.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a linked hash set concurrently, and at least
one of the threads modifies the set, it <em>must</em> be synchronized
externally.  This is typically accomplished by synchronizing on some
object that naturally encapsulates the set.

If no such object exists, the set should be \"wrapped\" using the
{@link Collections#synchronizedSet Collections.synchronizedSet}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the set: <pre>
  Set s = Collections.synchronizedSet(new LinkedHashSet(...));</pre>

<p>The iterators returned by this class's <tt>iterator</tt> method are
<em>fail-fast</em>: if the set is modified at any time after the iterator
is created, in any way except through the iterator's own <tt>remove</tt>
method, the iterator will throw a {@link ConcurrentModificationException}.
Thus, in the face of concurrent modification, the iterator fails quickly
and cleanly, rather than risking arbitrary, non-deterministic behavior at
an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:   <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements maintained by this set

@author  Josh Bloch
@see     Object#hashCode()
@see     Collection
@see     Set
@see     HashSet
@see     TreeSet
@see     Hashtable
@since   1.4
"
      classrelation 3525890 // <realization>
	relation 3525890 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3525890 // <realization>
	  b parent class_ref 388482 // HashSet
      end

      classrelation 3526018 // <realization>
	relation 3526018 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3526018 // <realization>
	  b parent class_ref 192258 // Set
      end

      classrelation 3526146 // <realization>
	relation 3526146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3526146 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3526274 // <realization>
	relation 3526274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3526274 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2061058 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2851667679971038690L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8837890 "LinkedHashSet"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty linked hash set with the specified initial
capacity and load factor.

@param      initialCapacity the initial capacity of the linked hash set
@param      loadFactor      the load factor of the linked hash set
@throws     IllegalArgumentException  if the initial capacity is less
              than zero, or if the load factor is nonpositive
"
      end

      operation 8838018 "LinkedHashSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty linked hash set with the specified initial
capacity and the default load factor (0.75).

@param   initialCapacity   the initial capacity of the LinkedHashSet
@throws  IllegalArgumentException if the initial capacity is less
             than zero
"
      end

      operation 8838146 "LinkedHashSet"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty linked hash set with the default initial
capacity (16) and load factor (0.75).
"
      end

      operation 8838274 "LinkedHashSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new linked hash set with the same elements as the
specified collection.  The linked hash set is created with an initial
capacity sufficient to hold the elements in the specified collection
and the default load factor (0.75).

@param c  the collection whose elements are to be placed into
          this set
@throws NullPointerException if the specified collection is null
"
      end

      operation 8838402 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates a <em><a href=\"Spliterator.html#binding\">late-binding</a></em>
and <em>fail-fast</em> {@code Spliterator} over the elements in this set.

<p>The {@code Spliterator} reports {@link Spliterator#SIZED},
{@link Spliterator#DISTINCT}, and {@code ORDERED}.  Implementations
should document the reporting of additional characteristic values.

@implNote
The implementation creates a
<em><a href=\"Spliterator.html#binding\">late-binding</a></em> spliterator
from the set's {@code Iterator}.  The spliterator inherits the
<em>fail-fast</em> properties of the set's iterator.
The created {@code Spliterator} additionally reports
{@link Spliterator#SUBSIZED}.

@return a {@code Spliterator} over the elements in this set
@since 1.8
"
      end
    end

    class 886530 "EventListenerProxy"
      abstract visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        extends class_ref 314882 // EventListener
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract wrapper class for an {@code EventListener} class
which associates a set of additional parameters with the listener.
Subclasses must provide the storage and accessor methods
for the additional arguments or parameters.
<p>
For example, a bean which supports named properties
would have a two argument method signature for adding
a {@code PropertyChangeListener} for a property:
<pre>
public void addPropertyChangeListener(String propertyName,
                                      PropertyChangeListener listener)
</pre>
If the bean also implemented the zero argument get listener method:
<pre>
public PropertyChangeListener[] getPropertyChangeListeners()
</pre>
then the array may contain inner {@code PropertyChangeListeners}
which are also {@code PropertyChangeListenerProxy} objects.
<p>
If the calling method is interested in retrieving the named property
then it would have to test the element to see if it is a proxy class.

@since 1.4
"
      classrelation 3005314 // <realization>
	relation 3005314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3005314 // <realization>
	  b parent class_ref 314882 // EventListener
      end

      attribute 1469058 "listener"
	const_attribute private explicit_type "T"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6433538 "EventListenerProxy"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "listener" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a proxy for the specified listener.

@param listener  the listener object
"
      end

      operation 6433666 "getListener"
	cpp_inline public explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the listener associated with the proxy.

@return  the listener associated with the proxy
"
      end
    end

    class 922370 "Formatter"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interpreter for printf-style format strings.  This class provides support
for layout justification and alignment, common formats for numeric, string,
and date/time data, and locale-specific output.  Common Java types such as
{@code byte}, {@link java.math.BigDecimal BigDecimal}, and {@link Calendar}
are supported.  Limited formatting customization for arbitrary user types is
provided through the {@link Formattable} interface.

<p> Formatters are not necessarily safe for multithreaded access.  Thread
safety is optional and is the responsibility of users of methods in this
class.

<p> Formatted printing for the Java language is heavily inspired by C's
{@code printf}.  Although the format strings are similar to C, some
customizations have been made to accommodate the Java language and exploit
some of its features.  Also, Java formatting is more strict than C's; for
example, if a conversion is incompatible with a flag, an exception will be
thrown.  In C inapplicable flags are silently ignored.  The format strings
are thus intended to be recognizable to C programmers but not necessarily
completely compatible with those in C.

<p> Examples of expected usage:

<blockquote><pre>
  StringBuilder sb = new StringBuilder();
  // Send all output to the Appendable object sb
  Formatter formatter = new Formatter(sb, Locale.US);

  // Explicit argument indices may be used to re-order output.
  formatter.format(\"%4$2s %3$2s %2$2s %1$2s\", \"a\", \"b\", \"c\", \"d\")
  // -&gt; \" d  c  b  a\"

  // Optional locale as the first argument can be used to get
  // locale-specific formatting of numbers.  The precision and width can be
  // given to round and align the value.
  formatter.format(Locale.FRANCE, \"e = %+10.4f\", Math.E);
  // -&gt; \"e =    +2,7183\"

  // The '(' numeric flag may be used to format negative numbers with
  // parentheses rather than a minus sign.  Group separators are
  // automatically inserted.
  formatter.format(\"Amount gained or lost since last statement: $ %(,.2f\",
                   balanceDelta);
  // -&gt; \"Amount gained or lost since last statement: $ (6,217.58)\"
</pre></blockquote>

<p> Convenience methods for common formatting requests exist as illustrated
by the following invocations:

<blockquote><pre>
  // Writes a formatted string to System.out.
  System.out.format(\"Local time: %tT\", Calendar.getInstance());
  // -&gt; \"Local time: 13:34:18\"

  // Writes formatted output to System.err.
  System.err.printf(\"Unable to open file '%1$s': %2$s\",
                    fileName, exception.getMessage());
  // -&gt; \"Unable to open file 'food': No such file or directory\"
</pre></blockquote>

<p> Like C's {@code sprintf(3)}, Strings may be formatted using the static
method {@link String#format(String,Object...) String.format}:

<blockquote><pre>
  // Format a string containing a date.
  import java.util.Calendar;
  import java.util.GregorianCalendar;
  import static java.util.Calendar.*;

  Calendar c = new GregorianCalendar(1995, MAY, 23);
  String s = String.format(\"Duke's Birthday: %1$tb %1$te, %1$tY\", c);
  // -&gt; s == \"Duke's Birthday: May 23, 1995\"
</pre></blockquote>

<h3><a name=\"org\">Organization</a></h3>

<p> This specification is divided into two sections.  The first section, <a
href=\"#summary\">Summary</a>, covers the basic formatting concepts.  This
section is intended for users who want to get started quickly and are
familiar with formatted printing in other programming languages.  The second
section, <a href=\"#detail\">Details</a>, covers the specific implementation
details.  It is intended for users who want more precise specification of
formatting behavior.

<h3><a name=\"summary\">Summary</a></h3>

<p> This section is intended to provide a brief overview of formatting
concepts.  For precise behavioral details, refer to the <a
href=\"#detail\">Details</a> section.

<h4><a name=\"syntax\">Format String Syntax</a></h4>

<p> Every method which produces formatted output requires a <i>format
string</i> and an <i>argument list</i>.  The format string is a {@link
String} which may contain fixed text and one or more embedded <i>format
specifiers</i>.  Consider the following example:

<blockquote><pre>
  Calendar c = ...;
  String s = String.format(\"Duke's Birthday: %1$tm %1$te,%1$tY\", c);
</pre></blockquote>

This format string is the first argument to the {@code format} method.  It
contains three format specifiers \"{@code %1$tm}\", \"{@code %1$te}\", and
\"{@code %1$tY}\" which indicate how the arguments should be processed and
where they should be inserted in the text.  The remaining portions of the
format string are fixed text including {@code \"Dukes Birthday: \"} and any
other spaces or punctuation.

The argument list consists of all arguments passed to the method after the
format string.  In the above example, the argument list is of size one and
consists of the {@link java.util.Calendar Calendar} object {@code c}.

<ul>

<li> The format specifiers for general, character, and numeric types have
the following syntax:

<blockquote><pre>
  %[argument_index$][flags][width][.precision]conversion
</pre></blockquote>

<p> The optional <i>argument_index</i> is a decimal integer indicating the
position of the argument in the argument list.  The first argument is
referenced by \"{@code 1$}\", the second by \"{@code 2$}\", etc.

<p> The optional <i>flags</i> is a set of characters that modify the output
format.  The set of valid flags depends on the conversion.

<p> The optional <i>width</i> is a positive decimal integer indicating
the minimum number of characters to be written to the output.

<p> The optional <i>precision</i> is a non-negative decimal integer usually
used to restrict the number of characters.  The specific behavior depends on
the conversion.

<p> The required <i>conversion</i> is a character indicating how the
argument should be formatted.  The set of valid conversions for a given
argument depends on the argument's data type.

<li> The format specifiers for types which are used to represents dates and
times have the following syntax:

<blockquote><pre>
  %[argument_index$][flags][width]conversion
</pre></blockquote>

<p> The optional <i>argument_index</i>, <i>flags</i> and <i>width</i> are
defined as above.

<p> The required <i>conversion</i> is a two character sequence.  The first
character is {@code 't'} or {@code 'T'}.  The second character indicates
the format to be used.  These characters are similar to but not completely
identical to those defined by GNU {@code date} and POSIX
{@code strftime(3c)}.

<li> The format specifiers which do not correspond to arguments have the
following syntax:

<blockquote><pre>
  %[flags][width]conversion
</pre></blockquote>

<p> The optional <i>flags</i> and <i>width</i> is defined as above.

<p> The required <i>conversion</i> is a character indicating content to be
inserted in the output.

</ul>

<h4> Conversions </h4>

<p> Conversions are divided into the following categories:

<ol>

<li> <b>General</b> - may be applied to any argument
type

<li> <b>Character</b> - may be applied to basic types which represent
Unicode characters: {@code char}, {@link Character}, {@code byte}, {@link
Byte}, {@code short}, and {@link Short}. This conversion may also be
applied to the types {@code int} and {@link Integer} when {@link
Character#isValidCodePoint} returns {@code true}

<li> <b>Numeric</b>

<ol>

<li> <b>Integral</b> - may be applied to Java integral types: {@code byte},
{@link Byte}, {@code short}, {@link Short}, {@code int} and {@link
Integer}, {@code long}, {@link Long}, and {@link java.math.BigInteger
BigInteger} (but not {@code char} or {@link Character})

<li><b>Floating Point</b> - may be applied to Java floating-point types:
{@code float}, {@link Float}, {@code double}, {@link Double}, and {@link
java.math.BigDecimal BigDecimal}

</ol>

<li> <b>Date/Time</b> - may be applied to Java types which are capable of
encoding a date or time: {@code long}, {@link Long}, {@link Calendar},
{@link Date} and {@link TemporalAccessor TemporalAccessor}

<li> <b>Percent</b> - produces a literal {@code '%'}
(<tt>'&#92;u0025'</tt>)

<li> <b>Line Separator</b> - produces the platform-specific line separator

</ol>

<p> The following table summarizes the supported conversions.  Conversions
denoted by an upper-case character (i.e. {@code 'B'}, {@code 'H'},
{@code 'S'}, {@code 'C'}, {@code 'X'}, {@code 'E'}, {@code 'G'},
{@code 'A'}, and {@code 'T'}) are the same as those for the corresponding
lower-case conversion characters except that the result is converted to
upper case according to the rules of the prevailing {@link java.util.Locale
Locale}.  The result is equivalent to the following invocation of {@link
String#toUpperCase()}

<pre>
   out.toUpperCase() </pre>

<table cellpadding=5 summary=\"genConv\">

<tr><th valign=\"bottom\"> Conversion
    <th valign=\"bottom\"> Argument Category
    <th valign=\"bottom\"> Description

<tr><td valign=\"top\"> {@code 'b'}, {@code 'B'}
    <td valign=\"top\"> general
    <td> If the argument <i>arg</i> is {@code null}, then the result is
    \"{@code false}\".  If <i>arg</i> is a {@code boolean} or {@link
    Boolean}, then the result is the string returned by {@link
    String#valueOf(boolean) String.valueOf(arg)}.  Otherwise, the result is
    \"true\".

<tr><td valign=\"top\"> {@code 'h'}, {@code 'H'}
    <td valign=\"top\"> general
    <td> If the argument <i>arg</i> is {@code null}, then the result is
    \"{@code null}\".  Otherwise, the result is obtained by invoking
    {@code Integer.toHexString(arg.hashCode())}.

<tr><td valign=\"top\"> {@code 's'}, {@code 'S'}
    <td valign=\"top\"> general
    <td> If the argument <i>arg</i> is {@code null}, then the result is
    \"{@code null}\".  If <i>arg</i> implements {@link Formattable}, then
    {@link Formattable#formatTo arg.formatTo} is invoked. Otherwise, the
    result is obtained by invoking {@code arg.toString()}.

<tr><td valign=\"top\">{@code 'c'}, {@code 'C'}
    <td valign=\"top\"> character
    <td> The result is a Unicode character

<tr><td valign=\"top\">{@code 'd'}
    <td valign=\"top\"> integral
    <td> The result is formatted as a decimal integer

<tr><td valign=\"top\">{@code 'o'}
    <td valign=\"top\"> integral
    <td> The result is formatted as an octal integer

<tr><td valign=\"top\">{@code 'x'}, {@code 'X'}
    <td valign=\"top\"> integral
    <td> The result is formatted as a hexadecimal integer

<tr><td valign=\"top\">{@code 'e'}, {@code 'E'}
    <td valign=\"top\"> floating point
    <td> The result is formatted as a decimal number in computerized
    scientific notation

<tr><td valign=\"top\">{@code 'f'}
    <td valign=\"top\"> floating point
    <td> The result is formatted as a decimal number

<tr><td valign=\"top\">{@code 'g'}, {@code 'G'}
    <td valign=\"top\"> floating point
    <td> The result is formatted using computerized scientific notation or
    decimal format, depending on the precision and the value after rounding.

<tr><td valign=\"top\">{@code 'a'}, {@code 'A'}
    <td valign=\"top\"> floating point
    <td> The result is formatted as a hexadecimal floating-point number with
    a significand and an exponent. This conversion is <b>not</b> supported
    for the {@code BigDecimal} type despite the latter's being in the
    <i>floating point</i> argument category.

<tr><td valign=\"top\">{@code 't'}, {@code 'T'}
    <td valign=\"top\"> date/time
    <td> Prefix for date and time conversion characters.  See <a
    href=\"#dt\">Date/Time Conversions</a>.

<tr><td valign=\"top\">{@code '%'}
    <td valign=\"top\"> percent
    <td> The result is a literal {@code '%'} (<tt>'&#92;u0025'</tt>)

<tr><td valign=\"top\">{@code 'n'}
    <td valign=\"top\"> line separator
    <td> The result is the platform-specific line separator

</table>

<p> Any characters not explicitly defined as conversions are illegal and are
reserved for future extensions.

<h4><a name=\"dt\">Date/Time Conversions</a></h4>

<p> The following date and time conversion suffix characters are defined for
the {@code 't'} and {@code 'T'} conversions.  The types are similar to but
not completely identical to those defined by GNU {@code date} and POSIX
{@code strftime(3c)}.  Additional conversion types are provided to access
Java-specific functionality (e.g. {@code 'L'} for milliseconds within the
second).

<p> The following conversion characters are used for formatting times:

<table cellpadding=5 summary=\"time\">

<tr><td valign=\"top\"> {@code 'H'}
    <td> Hour of the day for the 24-hour clock, formatted as two digits with
    a leading zero as necessary i.e. {@code 00 - 23}.

<tr><td valign=\"top\">{@code 'I'}
    <td> Hour for the 12-hour clock, formatted as two digits with a leading
    zero as necessary, i.e.  {@code 01 - 12}.

<tr><td valign=\"top\">{@code 'k'}
    <td> Hour of the day for the 24-hour clock, i.e. {@code 0 - 23}.

<tr><td valign=\"top\">{@code 'l'}
    <td> Hour for the 12-hour clock, i.e. {@code 1 - 12}.

<tr><td valign=\"top\">{@code 'M'}
    <td> Minute within the hour formatted as two digits with a leading zero
    as necessary, i.e.  {@code 00 - 59}.

<tr><td valign=\"top\">{@code 'S'}
    <td> Seconds within the minute, formatted as two digits with a leading
    zero as necessary, i.e. {@code 00 - 60} (\"{@code 60}\" is a special
    value required to support leap seconds).

<tr><td valign=\"top\">{@code 'L'}
    <td> Millisecond within the second formatted as three digits with
    leading zeros as necessary, i.e. {@code 000 - 999}.

<tr><td valign=\"top\">{@code 'N'}
    <td> Nanosecond within the second, formatted as nine digits with leading
    zeros as necessary, i.e. {@code 000000000 - 999999999}.

<tr><td valign=\"top\">{@code 'p'}
    <td> Locale-specific {@linkplain
    java.text.DateFormatSymbols#getAmPmStrings morning or afternoon} marker
    in lower case, e.g.\"{@code am}\" or \"{@code pm}\". Use of the conversion
    prefix {@code 'T'} forces this output to upper case.

<tr><td valign=\"top\">{@code 'z'}
    <td> <a href=\"http://www.ietf.org/rfc/rfc0822.txt\">RFC&nbsp;822</a>
    style numeric time zone offset from GMT, e.g. {@code -0800}.  This
    value will be adjusted as necessary for Daylight Saving Time.  For
    {@code long}, {@link Long}, and {@link Date} the time zone used is
    the {@linkplain TimeZone#getDefault() default time zone} for this
    instance of the Java virtual machine.

<tr><td valign=\"top\">{@code 'Z'}
    <td> A string representing the abbreviation for the time zone.  This
    value will be adjusted as necessary for Daylight Saving Time.  For
    {@code long}, {@link Long}, and {@link Date} the  time zone used is
    the {@linkplain TimeZone#getDefault() default time zone} for this
    instance of the Java virtual machine.  The Formatter's locale will
    supersede the locale of the argument (if any).

<tr><td valign=\"top\">{@code 's'}
    <td> Seconds since the beginning of the epoch starting at 1 January 1970
    {@code 00:00:00} UTC, i.e. {@code Long.MIN_VALUE/1000} to
    {@code Long.MAX_VALUE/1000}.

<tr><td valign=\"top\">{@code 'Q'}
    <td> Milliseconds since the beginning of the epoch starting at 1 January
    1970 {@code 00:00:00} UTC, i.e. {@code Long.MIN_VALUE} to
    {@code Long.MAX_VALUE}.

</table>

<p> The following conversion characters are used for formatting dates:

<table cellpadding=5 summary=\"date\">

<tr><td valign=\"top\">{@code 'B'}
    <td> Locale-specific {@linkplain java.text.DateFormatSymbols#getMonths
    full month name}, e.g. {@code \"January\"}, {@code \"February\"}.

<tr><td valign=\"top\">{@code 'b'}
    <td> Locale-specific {@linkplain
    java.text.DateFormatSymbols#getShortMonths abbreviated month name},
    e.g. {@code \"Jan\"}, {@code \"Feb\"}.

<tr><td valign=\"top\">{@code 'h'}
    <td> Same as {@code 'b'}.

<tr><td valign=\"top\">{@code 'A'}
    <td> Locale-specific full name of the {@linkplain
    java.text.DateFormatSymbols#getWeekdays day of the week},
    e.g. {@code \"Sunday\"}, {@code \"Monday\"}

<tr><td valign=\"top\">{@code 'a'}
    <td> Locale-specific short name of the {@linkplain
    java.text.DateFormatSymbols#getShortWeekdays day of the week},
    e.g. {@code \"Sun\"}, {@code \"Mon\"}

<tr><td valign=\"top\">{@code 'C'}
    <td> Four-digit year divided by {@code 100}, formatted as two digits
    with leading zero as necessary, i.e. {@code 00 - 99}

<tr><td valign=\"top\">{@code 'Y'}
    <td> Year, formatted as at least four digits with leading zeros as
    necessary, e.g. {@code 0092} equals {@code 92} CE for the Gregorian
    calendar.

<tr><td valign=\"top\">{@code 'y'}
    <td> Last two digits of the year, formatted with leading zeros as
    necessary, i.e. {@code 00 - 99}.

<tr><td valign=\"top\">{@code 'j'}
    <td> Day of year, formatted as three digits with leading zeros as
    necessary, e.g. {@code 001 - 366} for the Gregorian calendar.

<tr><td valign=\"top\">{@code 'm'}
    <td> Month, formatted as two digits with leading zeros as necessary,
    i.e. {@code 01 - 13}.

<tr><td valign=\"top\">{@code 'd'}
    <td> Day of month, formatted as two digits with leading zeros as
    necessary, i.e. {@code 01 - 31}

<tr><td valign=\"top\">{@code 'e'}
    <td> Day of month, formatted as two digits, i.e. {@code 1 - 31}.

</table>

<p> The following conversion characters are used for formatting common
date/time compositions.

<table cellpadding=5 summary=\"composites\">

<tr><td valign=\"top\">{@code 'R'}
    <td> Time formatted for the 24-hour clock as {@code \"%tH:%tM\"}

<tr><td valign=\"top\">{@code 'T'}
    <td> Time formatted for the 24-hour clock as {@code \"%tH:%tM:%tS\"}.

<tr><td valign=\"top\">{@code 'r'}
    <td> Time formatted for the 12-hour clock as {@code \"%tI:%tM:%tS %Tp\"}.
    The location of the morning or afternoon marker ({@code '%Tp'}) may be
    locale-dependent.

<tr><td valign=\"top\">{@code 'D'}
    <td> Date formatted as {@code \"%tm/%td/%ty\"}.

<tr><td valign=\"top\">{@code 'F'}
    <td> <a href=\"http://www.w3.org/TR/NOTE-datetime\">ISO&nbsp;8601</a>
    complete date formatted as {@code \"%tY-%tm-%td\"}.

<tr><td valign=\"top\">{@code 'c'}
    <td> Date and time formatted as {@code \"%ta %tb %td %tT %tZ %tY\"},
    e.g. {@code \"Sun Jul 20 16:17:00 EDT 1969\"}.

</table>

<p> Any characters not explicitly defined as date/time conversion suffixes
are illegal and are reserved for future extensions.

<h4> Flags </h4>

<p> The following table summarizes the supported flags.  <i>y</i> means the
flag is supported for the indicated argument types.

<table cellpadding=5 summary=\"genConv\">

<tr><th valign=\"bottom\"> Flag <th valign=\"bottom\"> General
    <th valign=\"bottom\"> Character <th valign=\"bottom\"> Integral
    <th valign=\"bottom\"> Floating Point
    <th valign=\"bottom\"> Date/Time
    <th valign=\"bottom\"> Description

<tr><td> '-' <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> y
    <td> The result will be left-justified.

<tr><td> '#' <td align=\"center\" valign=\"top\"> y<sup>1</sup>
    <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> y<sup>3</sup>
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> -
    <td> The result should use a conversion-dependent alternate form

<tr><td> '+' <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> y<sup>4</sup>
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> -
    <td> The result will always include a sign

<tr><td> '&nbsp;&nbsp;' <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> y<sup>4</sup>
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> -
    <td> The result will include a leading space for positive values

<tr><td> '0' <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> y
    <td align=\"center\" valign=\"top\"> -
    <td> The result will be zero-padded

<tr><td> ',' <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> y<sup>2</sup>
    <td align=\"center\" valign=\"top\"> y<sup>5</sup>
    <td align=\"center\" valign=\"top\"> -
    <td> The result will include locale-specific {@linkplain
    java.text.DecimalFormatSymbols#getGroupingSeparator grouping separators}

<tr><td> '(' <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> -
    <td align=\"center\" valign=\"top\"> y<sup>4</sup>
    <td align=\"center\" valign=\"top\"> y<sup>5</sup>
    <td align=\"center\"> -
    <td> The result will enclose negative numbers in parentheses

</table>

<p> <sup>1</sup> Depends on the definition of {@link Formattable}.

<p> <sup>2</sup> For {@code 'd'} conversion only.

<p> <sup>3</sup> For {@code 'o'}, {@code 'x'}, and {@code 'X'}
conversions only.

<p> <sup>4</sup> For {@code 'd'}, {@code 'o'}, {@code 'x'}, and
{@code 'X'} conversions applied to {@link java.math.BigInteger BigInteger}
or {@code 'd'} applied to {@code byte}, {@link Byte}, {@code short}, {@link
Short}, {@code int} and {@link Integer}, {@code long}, and {@link Long}.

<p> <sup>5</sup> For {@code 'e'}, {@code 'E'}, {@code 'f'},
{@code 'g'}, and {@code 'G'} conversions only.

<p> Any characters not explicitly defined as flags are illegal and are
reserved for future extensions.

<h4> Width </h4>

<p> The width is the minimum number of characters to be written to the
output.  For the line separator conversion, width is not applicable; if it
is provided, an exception will be thrown.

<h4> Precision </h4>

<p> For general argument types, the precision is the maximum number of
characters to be written to the output.

<p> For the floating-point conversions {@code 'a'}, {@code 'A'}, {@code 'e'},
{@code 'E'}, and {@code 'f'} the precision is the number of digits after the
radix point.  If the conversion is {@code 'g'} or {@code 'G'}, then the
precision is the total number of digits in the resulting magnitude after
rounding.

<p> For character, integral, and date/time argument types and the percent
and line separator conversions, the precision is not applicable; if a
precision is provided, an exception will be thrown.

<h4> Argument Index </h4>

<p> The argument index is a decimal integer indicating the position of the
argument in the argument list.  The first argument is referenced by
\"{@code 1$}\", the second by \"{@code 2$}\", etc.

<p> Another way to reference arguments by position is to use the
{@code '<'} (<tt>'&#92;u003c'</tt>) flag, which causes the argument for
the previous format specifier to be re-used.  For example, the following two
statements would produce identical strings:

<blockquote><pre>
  Calendar c = ...;
  String s1 = String.format(\"Duke's Birthday: %1$tm %1$te,%1$tY\", c);

  String s2 = String.format(\"Duke's Birthday: %1$tm %&lt;te,%&lt;tY\", c);
</pre></blockquote>

<hr>
<h3><a name=\"detail\">Details</a></h3>

<p> This section is intended to provide behavioral details for formatting,
including conditions and exceptions, supported data types, localization, and
interactions between flags, conversions, and data types.  For an overview of
formatting concepts, refer to the <a href=\"#summary\">Summary</a>

<p> Any characters not explicitly defined as conversions, date/time
conversion suffixes, or flags are illegal and are reserved for
future extensions.  Use of such a character in a format string will
cause an {@link UnknownFormatConversionException} or {@link
UnknownFormatFlagsException} to be thrown.

<p> If the format specifier contains a width or precision with an invalid
value or which is otherwise unsupported, then a {@link
IllegalFormatWidthException} or {@link IllegalFormatPrecisionException}
respectively will be thrown.

<p> If a format specifier contains a conversion character that is not
applicable to the corresponding argument, then an {@link
IllegalFormatConversionException} will be thrown.

<p> All specified exceptions may be thrown by any of the {@code format}
methods of {@code Formatter} as well as by any {@code format} convenience
methods such as {@link String#format(String,Object...) String.format} and
{@link java.io.PrintStream#printf(String,Object...) PrintStream.printf}.

<p> Conversions denoted by an upper-case character (i.e. {@code 'B'},
{@code 'H'}, {@code 'S'}, {@code 'C'}, {@code 'X'}, {@code 'E'},
{@code 'G'}, {@code 'A'}, and {@code 'T'}) are the same as those for the
corresponding lower-case conversion characters except that the result is
converted to upper case according to the rules of the prevailing {@link
java.util.Locale Locale}.  The result is equivalent to the following
invocation of {@link String#toUpperCase()}

<pre>
   out.toUpperCase() </pre>

<h4><a name=\"dgen\">General</a></h4>

<p> The following general conversions may be applied to any argument type:

<table cellpadding=5 summary=\"dgConv\">

<tr><td valign=\"top\"> {@code 'b'}
    <td valign=\"top\"> <tt>'&#92;u0062'</tt>
    <td> Produces either \"{@code true}\" or \"{@code false}\" as returned by
    {@link Boolean#toString(boolean)}.

    <p> If the argument is {@code null}, then the result is
    \"{@code false}\".  If the argument is a {@code boolean} or {@link
    Boolean}, then the result is the string returned by {@link
    String#valueOf(boolean) String.valueOf()}.  Otherwise, the result is
    \"{@code true}\".

    <p> If the {@code '#'} flag is given, then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'B'}
    <td valign=\"top\"> <tt>'&#92;u0042'</tt>
    <td> The upper-case variant of {@code 'b'}.

<tr><td valign=\"top\"> {@code 'h'}
    <td valign=\"top\"> <tt>'&#92;u0068'</tt>
    <td> Produces a string representing the hash code value of the object.

    <p> If the argument, <i>arg</i> is {@code null}, then the
    result is \"{@code null}\".  Otherwise, the result is obtained
    by invoking {@code Integer.toHexString(arg.hashCode())}.

    <p> If the {@code '#'} flag is given, then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'H'}
    <td valign=\"top\"> <tt>'&#92;u0048'</tt>
    <td> The upper-case variant of {@code 'h'}.

<tr><td valign=\"top\"> {@code 's'}
    <td valign=\"top\"> <tt>'&#92;u0073'</tt>
    <td> Produces a string.

    <p> If the argument is {@code null}, then the result is
    \"{@code null}\".  If the argument implements {@link Formattable}, then
    its {@link Formattable#formatTo formatTo} method is invoked.
    Otherwise, the result is obtained by invoking the argument's
    {@code toString()} method.

    <p> If the {@code '#'} flag is given and the argument is not a {@link
    Formattable} , then a {@link FormatFlagsConversionMismatchException}
    will be thrown.

<tr><td valign=\"top\"> {@code 'S'}
    <td valign=\"top\"> <tt>'&#92;u0053'</tt>
    <td> The upper-case variant of {@code 's'}.

</table>

<p> The following <a name=\"dFlags\">flags</a> apply to general conversions:

<table cellpadding=5 summary=\"dFlags\">

<tr><td valign=\"top\"> {@code '-'}
    <td valign=\"top\"> <tt>'&#92;u002d'</tt>
    <td> Left justifies the output.  Spaces (<tt>'&#92;u0020'</tt>) will be
    added at the end of the converted value as required to fill the minimum
    width of the field.  If the width is not provided, then a {@link
    MissingFormatWidthException} will be thrown.  If this flag is not given
    then the output will be right-justified.

<tr><td valign=\"top\"> {@code '#'}
    <td valign=\"top\"> <tt>'&#92;u0023'</tt>
    <td> Requires the output use an alternate form.  The definition of the
    form is specified by the conversion.

</table>

<p> The <a name=\"genWidth\">width</a> is the minimum number of characters to
be written to the
output.  If the length of the converted value is less than the width then
the output will be padded by <tt>'&nbsp;&nbsp;'</tt> (<tt>'&#92;u0020'</tt>)
until the total number of characters equals the width.  The padding is on
the left by default.  If the {@code '-'} flag is given, then the padding
will be on the right.  If the width is not specified then there is no
minimum.

<p> The precision is the maximum number of characters to be written to the
output.  The precision is applied before the width, thus the output will be
truncated to {@code precision} characters even if the width is greater than
the precision.  If the precision is not specified then there is no explicit
limit on the number of characters.

<h4><a name=\"dchar\">Character</a></h4>

This conversion may be applied to {@code char} and {@link Character}.  It
may also be applied to the types {@code byte}, {@link Byte},
{@code short}, and {@link Short}, {@code int} and {@link Integer} when
{@link Character#isValidCodePoint} returns {@code true}.  If it returns
{@code false} then an {@link IllegalFormatCodePointException} will be
thrown.

<table cellpadding=5 summary=\"charConv\">

<tr><td valign=\"top\"> {@code 'c'}
    <td valign=\"top\"> <tt>'&#92;u0063'</tt>
    <td> Formats the argument as a Unicode character as described in <a
    href=\"../lang/Character.html#unicode\">Unicode Character
    Representation</a>.  This may be more than one 16-bit {@code char} in
    the case where the argument represents a supplementary character.

    <p> If the {@code '#'} flag is given, then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'C'}
    <td valign=\"top\"> <tt>'&#92;u0043'</tt>
    <td> The upper-case variant of {@code 'c'}.

</table>

<p> The {@code '-'} flag defined for <a href=\"#dFlags\">General
conversions</a> applies.  If the {@code '#'} flag is given, then a {@link
FormatFlagsConversionMismatchException} will be thrown.

<p> The width is defined as for <a href=\"#genWidth\">General conversions</a>.

<p> The precision is not applicable.  If the precision is specified then an
{@link IllegalFormatPrecisionException} will be thrown.

<h4><a name=\"dnum\">Numeric</a></h4>

<p> Numeric conversions are divided into the following categories:

<ol>

<li> <a href=\"#dnint\"><b>Byte, Short, Integer, and Long</b></a>

<li> <a href=\"#dnbint\"><b>BigInteger</b></a>

<li> <a href=\"#dndec\"><b>Float and Double</b></a>

<li> <a href=\"#dnbdec\"><b>BigDecimal</b></a>

</ol>

<p> Numeric types will be formatted according to the following algorithm:

<p><b><a name=\"L10nAlgorithm\"> Number Localization Algorithm</a></b>

<p> After digits are obtained for the integer part, fractional part, and
exponent (as appropriate for the data type), the following transformation
is applied:

<ol>

<li> Each digit character <i>d</i> in the string is replaced by a
locale-specific digit computed relative to the current locale's
{@linkplain java.text.DecimalFormatSymbols#getZeroDigit() zero digit}
<i>z</i>; that is <i>d&nbsp;-&nbsp;</i> {@code '0'}
<i>&nbsp;+&nbsp;z</i>.

<li> If a decimal separator is present, a locale-specific {@linkplain
java.text.DecimalFormatSymbols#getDecimalSeparator decimal separator} is
substituted.

<li> If the {@code ','} (<tt>'&#92;u002c'</tt>)
<a name=\"L10nGroup\">flag</a> is given, then the locale-specific {@linkplain
java.text.DecimalFormatSymbols#getGroupingSeparator grouping separator} is
inserted by scanning the integer part of the string from least significant
to most significant digits and inserting a separator at intervals defined by
the locale's {@linkplain java.text.DecimalFormat#getGroupingSize() grouping
size}.

<li> If the {@code '0'} flag is given, then the locale-specific {@linkplain
java.text.DecimalFormatSymbols#getZeroDigit() zero digits} are inserted
after the sign character, if any, and before the first non-zero digit, until
the length of the string is equal to the requested field width.

<li> If the value is negative and the {@code '('} flag is given, then a
{@code '('} (<tt>'&#92;u0028'</tt>) is prepended and a {@code ')'}
(<tt>'&#92;u0029'</tt>) is appended.

<li> If the value is negative (or floating-point negative zero) and
{@code '('} flag is not given, then a {@code '-'} (<tt>'&#92;u002d'</tt>)
is prepended.

<li> If the {@code '+'} flag is given and the value is positive or zero (or
floating-point positive zero), then a {@code '+'} (<tt>'&#92;u002b'</tt>)
will be prepended.

</ol>

<p> If the value is NaN or positive infinity the literal strings \"NaN\" or
\"Infinity\" respectively, will be output.  If the value is negative infinity,
then the output will be \"(Infinity)\" if the {@code '('} flag is given
otherwise the output will be \"-Infinity\".  These values are not localized.

<p><a name=\"dnint\"><b> Byte, Short, Integer, and Long </b></a>

<p> The following conversions may be applied to {@code byte}, {@link Byte},
{@code short}, {@link Short}, {@code int} and {@link Integer},
{@code long}, and {@link Long}.

<table cellpadding=5 summary=\"IntConv\">

<tr><td valign=\"top\"> {@code 'd'}
    <td valign=\"top\"> <tt>'&#92;u0064'</tt>
    <td> Formats the argument as a decimal integer. The <a
    href=\"#L10nAlgorithm\">localization algorithm</a> is applied.

    <p> If the {@code '0'} flag is given and the value is negative, then
    the zero padding will occur after the sign.

    <p> If the {@code '#'} flag is given then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'o'}
    <td valign=\"top\"> <tt>'&#92;u006f'</tt>
    <td> Formats the argument as an integer in base eight.  No localization
    is applied.

    <p> If <i>x</i> is negative then the result will be an unsigned value
    generated by adding 2<sup>n</sup> to the value where {@code n} is the
    number of bits in the type as returned by the static {@code SIZE} field
    in the {@linkplain Byte#SIZE Byte}, {@linkplain Short#SIZE Short},
    {@linkplain Integer#SIZE Integer}, or {@linkplain Long#SIZE Long}
    classes as appropriate.

    <p> If the {@code '#'} flag is given then the output will always begin
    with the radix indicator {@code '0'}.

    <p> If the {@code '0'} flag is given then the output will be padded
    with leading zeros to the field width following any indication of sign.

    <p> If {@code '('}, {@code '+'}, '&nbsp;&nbsp;', or {@code ','} flags
    are given then a {@link FormatFlagsConversionMismatchException} will be
    thrown.

<tr><td valign=\"top\"> {@code 'x'}
    <td valign=\"top\"> <tt>'&#92;u0078'</tt>
    <td> Formats the argument as an integer in base sixteen. No
    localization is applied.

    <p> If <i>x</i> is negative then the result will be an unsigned value
    generated by adding 2<sup>n</sup> to the value where {@code n} is the
    number of bits in the type as returned by the static {@code SIZE} field
    in the {@linkplain Byte#SIZE Byte}, {@linkplain Short#SIZE Short},
    {@linkplain Integer#SIZE Integer}, or {@linkplain Long#SIZE Long}
    classes as appropriate.

    <p> If the {@code '#'} flag is given then the output will always begin
    with the radix indicator {@code \"0x\"}.

    <p> If the {@code '0'} flag is given then the output will be padded to
    the field width with leading zeros after the radix indicator or sign (if
    present).

    <p> If {@code '('}, <tt>'&nbsp;&nbsp;'</tt>, {@code '+'}, or
    {@code ','} flags are given then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'X'}
    <td valign=\"top\"> <tt>'&#92;u0058'</tt>
    <td> The upper-case variant of {@code 'x'}.  The entire string
    representing the number will be converted to {@linkplain
    String#toUpperCase upper case} including the {@code 'x'} (if any) and
    all hexadecimal digits {@code 'a'} - {@code 'f'}
    (<tt>'&#92;u0061'</tt> -  <tt>'&#92;u0066'</tt>).

</table>

<p> If the conversion is {@code 'o'}, {@code 'x'}, or {@code 'X'} and
both the {@code '#'} and the {@code '0'} flags are given, then result will
contain the radix indicator ({@code '0'} for octal and {@code \"0x\"} or
{@code \"0X\"} for hexadecimal), some number of zeros (based on the width),
and the value.

<p> If the {@code '-'} flag is not given, then the space padding will occur
before the sign.

<p> The following <a name=\"intFlags\">flags</a> apply to numeric integral
conversions:

<table cellpadding=5 summary=\"intFlags\">

<tr><td valign=\"top\"> {@code '+'}
    <td valign=\"top\"> <tt>'&#92;u002b'</tt>
    <td> Requires the output to include a positive sign for all positive
    numbers.  If this flag is not given then only negative values will
    include a sign.

    <p> If both the {@code '+'} and <tt>'&nbsp;&nbsp;'</tt> flags are given
    then an {@link IllegalFormatFlagsException} will be thrown.

<tr><td valign=\"top\"> <tt>'&nbsp;&nbsp;'</tt>
    <td valign=\"top\"> <tt>'&#92;u0020'</tt>
    <td> Requires the output to include a single extra space
    (<tt>'&#92;u0020'</tt>) for non-negative values.

    <p> If both the {@code '+'} and <tt>'&nbsp;&nbsp;'</tt> flags are given
    then an {@link IllegalFormatFlagsException} will be thrown.

<tr><td valign=\"top\"> {@code '0'}
    <td valign=\"top\"> <tt>'&#92;u0030'</tt>
    <td> Requires the output to be padded with leading {@linkplain
    java.text.DecimalFormatSymbols#getZeroDigit zeros} to the minimum field
    width following any sign or radix indicator except when converting NaN
    or infinity.  If the width is not provided, then a {@link
    MissingFormatWidthException} will be thrown.

    <p> If both the {@code '-'} and {@code '0'} flags are given then an
    {@link IllegalFormatFlagsException} will be thrown.

<tr><td valign=\"top\"> {@code ','}
    <td valign=\"top\"> <tt>'&#92;u002c'</tt>
    <td> Requires the output to include the locale-specific {@linkplain
    java.text.DecimalFormatSymbols#getGroupingSeparator group separators} as
    described in the <a href=\"#L10nGroup\">\"group\" section</a> of the
    localization algorithm.

<tr><td valign=\"top\"> {@code '('}
    <td valign=\"top\"> <tt>'&#92;u0028'</tt>
    <td> Requires the output to prepend a {@code '('}
    (<tt>'&#92;u0028'</tt>) and append a {@code ')'}
    (<tt>'&#92;u0029'</tt>) to negative values.

</table>

<p> If no <a name=\"intdFlags\">flags</a> are given the default formatting is
as follows:

<ul>

<li> The output is right-justified within the {@code width}

<li> Negative numbers begin with a {@code '-'} (<tt>'&#92;u002d'</tt>)

<li> Positive numbers and zero do not include a sign or extra leading
space

<li> No grouping separators are included

</ul>

<p> The <a name=\"intWidth\">width</a> is the minimum number of characters to
be written to the output.  This includes any signs, digits, grouping
separators, radix indicator, and parentheses.  If the length of the
converted value is less than the width then the output will be padded by
spaces (<tt>'&#92;u0020'</tt>) until the total number of characters equals
width.  The padding is on the left by default.  If {@code '-'} flag is
given then the padding will be on the right.  If width is not specified then
there is no minimum.

<p> The precision is not applicable.  If precision is specified then an
{@link IllegalFormatPrecisionException} will be thrown.

<p><a name=\"dnbint\"><b> BigInteger </b></a>

<p> The following conversions may be applied to {@link
java.math.BigInteger}.

<table cellpadding=5 summary=\"BIntConv\">

<tr><td valign=\"top\"> {@code 'd'}
    <td valign=\"top\"> <tt>'&#92;u0064'</tt>
    <td> Requires the output to be formatted as a decimal integer. The <a
    href=\"#L10nAlgorithm\">localization algorithm</a> is applied.

    <p> If the {@code '#'} flag is given {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'o'}
    <td valign=\"top\"> <tt>'&#92;u006f'</tt>
    <td> Requires the output to be formatted as an integer in base eight.
    No localization is applied.

    <p> If <i>x</i> is negative then the result will be a signed value
    beginning with {@code '-'} (<tt>'&#92;u002d'</tt>).  Signed output is
    allowed for this type because unlike the primitive types it is not
    possible to create an unsigned equivalent without assuming an explicit
    data-type size.

    <p> If <i>x</i> is positive or zero and the {@code '+'} flag is given
    then the result will begin with {@code '+'} (<tt>'&#92;u002b'</tt>).

    <p> If the {@code '#'} flag is given then the output will always begin
    with {@code '0'} prefix.

    <p> If the {@code '0'} flag is given then the output will be padded
    with leading zeros to the field width following any indication of sign.

    <p> If the {@code ','} flag is given then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'x'}
    <td valign=\"top\"> <tt>'&#92;u0078'</tt>
    <td> Requires the output to be formatted as an integer in base
    sixteen.  No localization is applied.

    <p> If <i>x</i> is negative then the result will be a signed value
    beginning with {@code '-'} (<tt>'&#92;u002d'</tt>).  Signed output is
    allowed for this type because unlike the primitive types it is not
    possible to create an unsigned equivalent without assuming an explicit
    data-type size.

    <p> If <i>x</i> is positive or zero and the {@code '+'} flag is given
    then the result will begin with {@code '+'} (<tt>'&#92;u002b'</tt>).

    <p> If the {@code '#'} flag is given then the output will always begin
    with the radix indicator {@code \"0x\"}.

    <p> If the {@code '0'} flag is given then the output will be padded to
    the field width with leading zeros after the radix indicator or sign (if
    present).

    <p> If the {@code ','} flag is given then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'X'}
    <td valign=\"top\"> <tt>'&#92;u0058'</tt>
    <td> The upper-case variant of {@code 'x'}.  The entire string
    representing the number will be converted to {@linkplain
    String#toUpperCase upper case} including the {@code 'x'} (if any) and
    all hexadecimal digits {@code 'a'} - {@code 'f'}
    (<tt>'&#92;u0061'</tt> - <tt>'&#92;u0066'</tt>).

</table>

<p> If the conversion is {@code 'o'}, {@code 'x'}, or {@code 'X'} and
both the {@code '#'} and the {@code '0'} flags are given, then result will
contain the base indicator ({@code '0'} for octal and {@code \"0x\"} or
{@code \"0X\"} for hexadecimal), some number of zeros (based on the width),
and the value.

<p> If the {@code '0'} flag is given and the value is negative, then the
zero padding will occur after the sign.

<p> If the {@code '-'} flag is not given, then the space padding will occur
before the sign.

<p> All <a href=\"#intFlags\">flags</a> defined for Byte, Short, Integer, and
Long apply.  The <a href=\"#intdFlags\">default behavior</a> when no flags are
given is the same as for Byte, Short, Integer, and Long.

<p> The specification of <a href=\"#intWidth\">width</a> is the same as
defined for Byte, Short, Integer, and Long.

<p> The precision is not applicable.  If precision is specified then an
{@link IllegalFormatPrecisionException} will be thrown.

<p><a name=\"dndec\"><b> Float and Double</b></a>

<p> The following conversions may be applied to {@code float}, {@link
Float}, {@code double} and {@link Double}.

<table cellpadding=5 summary=\"floatConv\">

<tr><td valign=\"top\"> {@code 'e'}
    <td valign=\"top\"> <tt>'&#92;u0065'</tt>
    <td> Requires the output to be formatted using <a
    name=\"scientific\">computerized scientific notation</a>.  The <a
    href=\"#L10nAlgorithm\">localization algorithm</a> is applied.

    <p> The formatting of the magnitude <i>m</i> depends upon its value.

    <p> If <i>m</i> is NaN or infinite, the literal strings \"NaN\" or
    \"Infinity\", respectively, will be output.  These values are not
    localized.

    <p> If <i>m</i> is positive-zero or negative-zero, then the exponent
    will be {@code \"+00\"}.

    <p> Otherwise, the result is a string that represents the sign and
    magnitude (absolute value) of the argument.  The formatting of the sign
    is described in the <a href=\"#L10nAlgorithm\">localization
    algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
    value.

    <p> Let <i>n</i> be the unique integer such that 10<sup><i>n</i></sup>
    &lt;= <i>m</i> &lt; 10<sup><i>n</i>+1</sup>; then let <i>a</i> be the
    mathematically exact quotient of <i>m</i> and 10<sup><i>n</i></sup> so
    that 1 &lt;= <i>a</i> &lt; 10. The magnitude is then represented as the
    integer part of <i>a</i>, as a single decimal digit, followed by the
    decimal separator followed by decimal digits representing the fractional
    part of <i>a</i>, followed by the exponent symbol {@code 'e'}
    (<tt>'&#92;u0065'</tt>), followed by the sign of the exponent, followed
    by a representation of <i>n</i> as a decimal integer, as produced by the
    method {@link Long#toString(long, int)}, and zero-padded to include at
    least two digits.

    <p> The number of digits in the result for the fractional part of
    <i>m</i> or <i>a</i> is equal to the precision.  If the precision is not
    specified then the default value is {@code 6}. If the precision is less
    than the number of digits which would appear after the decimal point in
    the string returned by {@link Float#toString(float)} or {@link
    Double#toString(double)} respectively, then the value will be rounded
    using the {@linkplain java.math.BigDecimal#ROUND_HALF_UP round half up
    algorithm}.  Otherwise, zeros may be appended to reach the precision.
    For a canonical representation of the value, use {@link
    Float#toString(float)} or {@link Double#toString(double)} as
    appropriate.

    <p>If the {@code ','} flag is given, then an {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'E'}
    <td valign=\"top\"> <tt>'&#92;u0045'</tt>
    <td> The upper-case variant of {@code 'e'}.  The exponent symbol
    will be {@code 'E'} (<tt>'&#92;u0045'</tt>).

<tr><td valign=\"top\"> {@code 'g'}
    <td valign=\"top\"> <tt>'&#92;u0067'</tt>
    <td> Requires the output to be formatted in general scientific notation
    as described below. The <a href=\"#L10nAlgorithm\">localization
    algorithm</a> is applied.

    <p> After rounding for the precision, the formatting of the resulting
    magnitude <i>m</i> depends on its value.

    <p> If <i>m</i> is greater than or equal to 10<sup>-4</sup> but less
    than 10<sup>precision</sup> then it is represented in <i><a
    href=\"#decimal\">decimal format</a></i>.

    <p> If <i>m</i> is less than 10<sup>-4</sup> or greater than or equal to
    10<sup>precision</sup>, then it is represented in <i><a
    href=\"#scientific\">computerized scientific notation</a></i>.

    <p> The total number of significant digits in <i>m</i> is equal to the
    precision.  If the precision is not specified, then the default value is
    {@code 6}.  If the precision is {@code 0}, then it is taken to be
    {@code 1}.

    <p> If the {@code '#'} flag is given then an {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'G'}
    <td valign=\"top\"> <tt>'&#92;u0047'</tt>
    <td> The upper-case variant of {@code 'g'}.

<tr><td valign=\"top\"> {@code 'f'}
    <td valign=\"top\"> <tt>'&#92;u0066'</tt>
    <td> Requires the output to be formatted using <a name=\"decimal\">decimal
    format</a>.  The <a href=\"#L10nAlgorithm\">localization algorithm</a> is
    applied.

    <p> The result is a string that represents the sign and magnitude
    (absolute value) of the argument.  The formatting of the sign is
    described in the <a href=\"#L10nAlgorithm\">localization
    algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
    value.

    <p> If <i>m</i> NaN or infinite, the literal strings \"NaN\" or
    \"Infinity\", respectively, will be output.  These values are not
    localized.

    <p> The magnitude is formatted as the integer part of <i>m</i>, with no
    leading zeroes, followed by the decimal separator followed by one or
    more decimal digits representing the fractional part of <i>m</i>.

    <p> The number of digits in the result for the fractional part of
    <i>m</i> or <i>a</i> is equal to the precision.  If the precision is not
    specified then the default value is {@code 6}. If the precision is less
    than the number of digits which would appear after the decimal point in
    the string returned by {@link Float#toString(float)} or {@link
    Double#toString(double)} respectively, then the value will be rounded
    using the {@linkplain java.math.BigDecimal#ROUND_HALF_UP round half up
    algorithm}.  Otherwise, zeros may be appended to reach the precision.
    For a canonical representation of the value, use {@link
    Float#toString(float)} or {@link Double#toString(double)} as
    appropriate.

<tr><td valign=\"top\"> {@code 'a'}
    <td valign=\"top\"> <tt>'&#92;u0061'</tt>
    <td> Requires the output to be formatted in hexadecimal exponential
    form.  No localization is applied.

    <p> The result is a string that represents the sign and magnitude
    (absolute value) of the argument <i>x</i>.

    <p> If <i>x</i> is negative or a negative-zero value then the result
    will begin with {@code '-'} (<tt>'&#92;u002d'</tt>).

    <p> If <i>x</i> is positive or a positive-zero value and the
    {@code '+'} flag is given then the result will begin with {@code '+'}
    (<tt>'&#92;u002b'</tt>).

    <p> The formatting of the magnitude <i>m</i> depends upon its value.

    <ul>

    <li> If the value is NaN or infinite, the literal strings \"NaN\" or
    \"Infinity\", respectively, will be output.

    <li> If <i>m</i> is zero then it is represented by the string
    {@code \"0x0.0p0\"}.

    <li> If <i>m</i> is a {@code double} value with a normalized
    representation then substrings are used to represent the significand and
    exponent fields.  The significand is represented by the characters
    {@code \"0x1.\"} followed by the hexadecimal representation of the rest
    of the significand as a fraction.  The exponent is represented by
    {@code 'p'} (<tt>'&#92;u0070'</tt>) followed by a decimal string of the
    unbiased exponent as if produced by invoking {@link
    Integer#toString(int) Integer.toString} on the exponent value.  If the
    precision is specified, the value is rounded to the given number of
    hexadecimal digits.

    <li> If <i>m</i> is a {@code double} value with a subnormal
    representation then, unless the precision is specified to be in the range
    1 through 12, inclusive, the significand is represented by the characters
    {@code '0x0.'} followed by the hexadecimal representation of the rest of
    the significand as a fraction, and the exponent represented by
    {@code 'p-1022'}.  If the precision is in the interval
    [1,&nbsp;12], the subnormal value is normalized such that it
    begins with the characters {@code '0x1.'}, rounded to the number of
    hexadecimal digits of precision, and the exponent adjusted
    accordingly.  Note that there must be at least one nonzero digit in a
    subnormal significand.

    </ul>

    <p> If the {@code '('} or {@code ','} flags are given, then a {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'A'}
    <td valign=\"top\"> <tt>'&#92;u0041'</tt>
    <td> The upper-case variant of {@code 'a'}.  The entire string
    representing the number will be converted to upper case including the
    {@code 'x'} (<tt>'&#92;u0078'</tt>) and {@code 'p'}
    (<tt>'&#92;u0070'</tt> and all hexadecimal digits {@code 'a'} -
    {@code 'f'} (<tt>'&#92;u0061'</tt> - <tt>'&#92;u0066'</tt>).

</table>

<p> All <a href=\"#intFlags\">flags</a> defined for Byte, Short, Integer, and
Long apply.

<p> If the {@code '#'} flag is given, then the decimal separator will
always be present.

<p> If no <a name=\"floatdFlags\">flags</a> are given the default formatting
is as follows:

<ul>

<li> The output is right-justified within the {@code width}

<li> Negative numbers begin with a {@code '-'}

<li> Positive numbers and positive zero do not include a sign or extra
leading space

<li> No grouping separators are included

<li> The decimal separator will only appear if a digit follows it

</ul>

<p> The <a name=\"floatDWidth\">width</a> is the minimum number of characters
to be written to the output.  This includes any signs, digits, grouping
separators, decimal separators, exponential symbol, radix indicator,
parentheses, and strings representing infinity and NaN as applicable.  If
the length of the converted value is less than the width then the output
will be padded by spaces (<tt>'&#92;u0020'</tt>) until the total number of
characters equals width.  The padding is on the left by default.  If the
{@code '-'} flag is given then the padding will be on the right.  If width
is not specified then there is no minimum.

<p> If the <a name=\"floatDPrec\">conversion</a> is {@code 'e'},
{@code 'E'} or {@code 'f'}, then the precision is the number of digits
after the decimal separator.  If the precision is not specified, then it is
assumed to be {@code 6}.

<p> If the conversion is {@code 'g'} or {@code 'G'}, then the precision is
the total number of significant digits in the resulting magnitude after
rounding.  If the precision is not specified, then the default value is
{@code 6}.  If the precision is {@code 0}, then it is taken to be
{@code 1}.

<p> If the conversion is {@code 'a'} or {@code 'A'}, then the precision
is the number of hexadecimal digits after the radix point.  If the
precision is not provided, then all of the digits as returned by {@link
Double#toHexString(double)} will be output.

<p><a name=\"dnbdec\"><b> BigDecimal </b></a>

<p> The following conversions may be applied {@link java.math.BigDecimal
BigDecimal}.

<table cellpadding=5 summary=\"floatConv\">

<tr><td valign=\"top\"> {@code 'e'}
    <td valign=\"top\"> <tt>'&#92;u0065'</tt>
    <td> Requires the output to be formatted using <a
    name=\"bscientific\">computerized scientific notation</a>.  The <a
    href=\"#L10nAlgorithm\">localization algorithm</a> is applied.

    <p> The formatting of the magnitude <i>m</i> depends upon its value.

    <p> If <i>m</i> is positive-zero or negative-zero, then the exponent
    will be {@code \"+00\"}.

    <p> Otherwise, the result is a string that represents the sign and
    magnitude (absolute value) of the argument.  The formatting of the sign
    is described in the <a href=\"#L10nAlgorithm\">localization
    algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
    value.

    <p> Let <i>n</i> be the unique integer such that 10<sup><i>n</i></sup>
    &lt;= <i>m</i> &lt; 10<sup><i>n</i>+1</sup>; then let <i>a</i> be the
    mathematically exact quotient of <i>m</i> and 10<sup><i>n</i></sup> so
    that 1 &lt;= <i>a</i> &lt; 10. The magnitude is then represented as the
    integer part of <i>a</i>, as a single decimal digit, followed by the
    decimal separator followed by decimal digits representing the fractional
    part of <i>a</i>, followed by the exponent symbol {@code 'e'}
    (<tt>'&#92;u0065'</tt>), followed by the sign of the exponent, followed
    by a representation of <i>n</i> as a decimal integer, as produced by the
    method {@link Long#toString(long, int)}, and zero-padded to include at
    least two digits.

    <p> The number of digits in the result for the fractional part of
    <i>m</i> or <i>a</i> is equal to the precision.  If the precision is not
    specified then the default value is {@code 6}.  If the precision is
    less than the number of digits to the right of the decimal point then
    the value will be rounded using the
    {@linkplain java.math.BigDecimal#ROUND_HALF_UP round half up
    algorithm}.  Otherwise, zeros may be appended to reach the precision.
    For a canonical representation of the value, use {@link
    BigDecimal#toString()}.

    <p> If the {@code ','} flag is given, then an {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'E'}
    <td valign=\"top\"> <tt>'&#92;u0045'</tt>
    <td> The upper-case variant of {@code 'e'}.  The exponent symbol
    will be {@code 'E'} (<tt>'&#92;u0045'</tt>).

<tr><td valign=\"top\"> {@code 'g'}
    <td valign=\"top\"> <tt>'&#92;u0067'</tt>
    <td> Requires the output to be formatted in general scientific notation
    as described below. The <a href=\"#L10nAlgorithm\">localization
    algorithm</a> is applied.

    <p> After rounding for the precision, the formatting of the resulting
    magnitude <i>m</i> depends on its value.

    <p> If <i>m</i> is greater than or equal to 10<sup>-4</sup> but less
    than 10<sup>precision</sup> then it is represented in <i><a
    href=\"#bdecimal\">decimal format</a></i>.

    <p> If <i>m</i> is less than 10<sup>-4</sup> or greater than or equal to
    10<sup>precision</sup>, then it is represented in <i><a
    href=\"#bscientific\">computerized scientific notation</a></i>.

    <p> The total number of significant digits in <i>m</i> is equal to the
    precision.  If the precision is not specified, then the default value is
    {@code 6}.  If the precision is {@code 0}, then it is taken to be
    {@code 1}.

    <p> If the {@code '#'} flag is given then an {@link
    FormatFlagsConversionMismatchException} will be thrown.

<tr><td valign=\"top\"> {@code 'G'}
    <td valign=\"top\"> <tt>'&#92;u0047'</tt>
    <td> The upper-case variant of {@code 'g'}.

<tr><td valign=\"top\"> {@code 'f'}
    <td valign=\"top\"> <tt>'&#92;u0066'</tt>
    <td> Requires the output to be formatted using <a name=\"bdecimal\">decimal
    format</a>.  The <a href=\"#L10nAlgorithm\">localization algorithm</a> is
    applied.

    <p> The result is a string that represents the sign and magnitude
    (absolute value) of the argument.  The formatting of the sign is
    described in the <a href=\"#L10nAlgorithm\">localization
    algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
    value.

    <p> The magnitude is formatted as the integer part of <i>m</i>, with no
    leading zeroes, followed by the decimal separator followed by one or
    more decimal digits representing the fractional part of <i>m</i>.

    <p> The number of digits in the result for the fractional part of
    <i>m</i> or <i>a</i> is equal to the precision. If the precision is not
    specified then the default value is {@code 6}.  If the precision is
    less than the number of digits to the right of the decimal point
    then the value will be rounded using the
    {@linkplain java.math.BigDecimal#ROUND_HALF_UP round half up
    algorithm}.  Otherwise, zeros may be appended to reach the precision.
    For a canonical representation of the value, use {@link
    BigDecimal#toString()}.

</table>

<p> All <a href=\"#intFlags\">flags</a> defined for Byte, Short, Integer, and
Long apply.

<p> If the {@code '#'} flag is given, then the decimal separator will
always be present.

<p> The <a href=\"#floatdFlags\">default behavior</a> when no flags are
given is the same as for Float and Double.

<p> The specification of <a href=\"#floatDWidth\">width</a> and <a
href=\"#floatDPrec\">precision</a> is the same as defined for Float and
Double.

<h4><a name=\"ddt\">Date/Time</a></h4>

<p> This conversion may be applied to {@code long}, {@link Long}, {@link
Calendar}, {@link Date} and {@link TemporalAccessor TemporalAccessor}

<table cellpadding=5 summary=\"DTConv\">

<tr><td valign=\"top\"> {@code 't'}
    <td valign=\"top\"> <tt>'&#92;u0074'</tt>
    <td> Prefix for date and time conversion characters.
<tr><td valign=\"top\"> {@code 'T'}
    <td valign=\"top\"> <tt>'&#92;u0054'</tt>
    <td> The upper-case variant of {@code 't'}.

</table>

<p> The following date and time conversion character suffixes are defined
for the {@code 't'} and {@code 'T'} conversions.  The types are similar to
but not completely identical to those defined by GNU {@code date} and
POSIX {@code strftime(3c)}.  Additional conversion types are provided to
access Java-specific functionality (e.g. {@code 'L'} for milliseconds
within the second).

<p> The following conversion characters are used for formatting times:

<table cellpadding=5 summary=\"time\">

<tr><td valign=\"top\"> {@code 'H'}
    <td valign=\"top\"> <tt>'&#92;u0048'</tt>
    <td> Hour of the day for the 24-hour clock, formatted as two digits with
    a leading zero as necessary i.e. {@code 00 - 23}. {@code 00}
    corresponds to midnight.

<tr><td valign=\"top\">{@code 'I'}
    <td valign=\"top\"> <tt>'&#92;u0049'</tt>
    <td> Hour for the 12-hour clock, formatted as two digits with a leading
    zero as necessary, i.e.  {@code 01 - 12}.  {@code 01} corresponds to
    one o'clock (either morning or afternoon).

<tr><td valign=\"top\">{@code 'k'}
    <td valign=\"top\"> <tt>'&#92;u006b'</tt>
    <td> Hour of the day for the 24-hour clock, i.e. {@code 0 - 23}.
    {@code 0} corresponds to midnight.

<tr><td valign=\"top\">{@code 'l'}
    <td valign=\"top\"> <tt>'&#92;u006c'</tt>
    <td> Hour for the 12-hour clock, i.e. {@code 1 - 12}.  {@code 1}
    corresponds to one o'clock (either morning or afternoon).

<tr><td valign=\"top\">{@code 'M'}
    <td valign=\"top\"> <tt>'&#92;u004d'</tt>
    <td> Minute within the hour formatted as two digits with a leading zero
    as necessary, i.e.  {@code 00 - 59}.

<tr><td valign=\"top\">{@code 'S'}
    <td valign=\"top\"> <tt>'&#92;u0053'</tt>
    <td> Seconds within the minute, formatted as two digits with a leading
    zero as necessary, i.e. {@code 00 - 60} (\"{@code 60}\" is a special
    value required to support leap seconds).

<tr><td valign=\"top\">{@code 'L'}
    <td valign=\"top\"> <tt>'&#92;u004c'</tt>
    <td> Millisecond within the second formatted as three digits with
    leading zeros as necessary, i.e. {@code 000 - 999}.

<tr><td valign=\"top\">{@code 'N'}
    <td valign=\"top\"> <tt>'&#92;u004e'</tt>
    <td> Nanosecond within the second, formatted as nine digits with leading
    zeros as necessary, i.e. {@code 000000000 - 999999999}.  The precision
    of this value is limited by the resolution of the underlying operating
    system or hardware.

<tr><td valign=\"top\">{@code 'p'}
    <td valign=\"top\"> <tt>'&#92;u0070'</tt>
    <td> Locale-specific {@linkplain
    java.text.DateFormatSymbols#getAmPmStrings morning or afternoon} marker
    in lower case, e.g.\"{@code am}\" or \"{@code pm}\".  Use of the
    conversion prefix {@code 'T'} forces this output to upper case.  (Note
    that {@code 'p'} produces lower-case output.  This is different from
    GNU {@code date} and POSIX {@code strftime(3c)} which produce
    upper-case output.)

<tr><td valign=\"top\">{@code 'z'}
    <td valign=\"top\"> <tt>'&#92;u007a'</tt>
    <td> <a href=\"http://www.ietf.org/rfc/rfc0822.txt\">RFC&nbsp;822</a>
    style numeric time zone offset from GMT, e.g. {@code -0800}.  This
    value will be adjusted as necessary for Daylight Saving Time.  For
    {@code long}, {@link Long}, and {@link Date} the time zone used is
    the {@linkplain TimeZone#getDefault() default time zone} for this
    instance of the Java virtual machine.

<tr><td valign=\"top\">{@code 'Z'}
    <td valign=\"top\"> <tt>'&#92;u005a'</tt>
    <td> A string representing the abbreviation for the time zone.  This
    value will be adjusted as necessary for Daylight Saving Time.  For
    {@code long}, {@link Long}, and {@link Date} the time zone used is
    the {@linkplain TimeZone#getDefault() default time zone} for this
    instance of the Java virtual machine.  The Formatter's locale will
    supersede the locale of the argument (if any).

<tr><td valign=\"top\">{@code 's'}
    <td valign=\"top\"> <tt>'&#92;u0073'</tt>
    <td> Seconds since the beginning of the epoch starting at 1 January 1970
    {@code 00:00:00} UTC, i.e. {@code Long.MIN_VALUE/1000} to
    {@code Long.MAX_VALUE/1000}.

<tr><td valign=\"top\">{@code 'Q'}
    <td valign=\"top\"> <tt>'&#92;u004f'</tt>
    <td> Milliseconds since the beginning of the epoch starting at 1 January
    1970 {@code 00:00:00} UTC, i.e. {@code Long.MIN_VALUE} to
    {@code Long.MAX_VALUE}. The precision of this value is limited by
    the resolution of the underlying operating system or hardware.

</table>

<p> The following conversion characters are used for formatting dates:

<table cellpadding=5 summary=\"date\">

<tr><td valign=\"top\">{@code 'B'}
    <td valign=\"top\"> <tt>'&#92;u0042'</tt>
    <td> Locale-specific {@linkplain java.text.DateFormatSymbols#getMonths
    full month name}, e.g. {@code \"January\"}, {@code \"February\"}.

<tr><td valign=\"top\">{@code 'b'}
    <td valign=\"top\"> <tt>'&#92;u0062'</tt>
    <td> Locale-specific {@linkplain
    java.text.DateFormatSymbols#getShortMonths abbreviated month name},
    e.g. {@code \"Jan\"}, {@code \"Feb\"}.

<tr><td valign=\"top\">{@code 'h'}
    <td valign=\"top\"> <tt>'&#92;u0068'</tt>
    <td> Same as {@code 'b'}.

<tr><td valign=\"top\">{@code 'A'}
    <td valign=\"top\"> <tt>'&#92;u0041'</tt>
    <td> Locale-specific full name of the {@linkplain
    java.text.DateFormatSymbols#getWeekdays day of the week},
    e.g. {@code \"Sunday\"}, {@code \"Monday\"}

<tr><td valign=\"top\">{@code 'a'}
    <td valign=\"top\"> <tt>'&#92;u0061'</tt>
    <td> Locale-specific short name of the {@linkplain
    java.text.DateFormatSymbols#getShortWeekdays day of the week},
    e.g. {@code \"Sun\"}, {@code \"Mon\"}

<tr><td valign=\"top\">{@code 'C'}
    <td valign=\"top\"> <tt>'&#92;u0043'</tt>
    <td> Four-digit year divided by {@code 100}, formatted as two digits
    with leading zero as necessary, i.e. {@code 00 - 99}

<tr><td valign=\"top\">{@code 'Y'}
    <td valign=\"top\"> <tt>'&#92;u0059'</tt> <td> Year, formatted to at least
    four digits with leading zeros as necessary, e.g. {@code 0092} equals
    {@code 92} CE for the Gregorian calendar.

<tr><td valign=\"top\">{@code 'y'}
    <td valign=\"top\"> <tt>'&#92;u0079'</tt>
    <td> Last two digits of the year, formatted with leading zeros as
    necessary, i.e. {@code 00 - 99}.

<tr><td valign=\"top\">{@code 'j'}
    <td valign=\"top\"> <tt>'&#92;u006a'</tt>
    <td> Day of year, formatted as three digits with leading zeros as
    necessary, e.g. {@code 001 - 366} for the Gregorian calendar.
    {@code 001} corresponds to the first day of the year.

<tr><td valign=\"top\">{@code 'm'}
    <td valign=\"top\"> <tt>'&#92;u006d'</tt>
    <td> Month, formatted as two digits with leading zeros as necessary,
    i.e. {@code 01 - 13}, where \"{@code 01}\" is the first month of the
    year and (\"{@code 13}\" is a special value required to support lunar
    calendars).

<tr><td valign=\"top\">{@code 'd'}
    <td valign=\"top\"> <tt>'&#92;u0064'</tt>
    <td> Day of month, formatted as two digits with leading zeros as
    necessary, i.e. {@code 01 - 31}, where \"{@code 01}\" is the first day
    of the month.

<tr><td valign=\"top\">{@code 'e'}
    <td valign=\"top\"> <tt>'&#92;u0065'</tt>
    <td> Day of month, formatted as two digits, i.e. {@code 1 - 31} where
    \"{@code 1}\" is the first day of the month.

</table>

<p> The following conversion characters are used for formatting common
date/time compositions.

<table cellpadding=5 summary=\"composites\">

<tr><td valign=\"top\">{@code 'R'}
    <td valign=\"top\"> <tt>'&#92;u0052'</tt>
    <td> Time formatted for the 24-hour clock as {@code \"%tH:%tM\"}

<tr><td valign=\"top\">{@code 'T'}
    <td valign=\"top\"> <tt>'&#92;u0054'</tt>
    <td> Time formatted for the 24-hour clock as {@code \"%tH:%tM:%tS\"}.

<tr><td valign=\"top\">{@code 'r'}
    <td valign=\"top\"> <tt>'&#92;u0072'</tt>
    <td> Time formatted for the 12-hour clock as {@code \"%tI:%tM:%tS
    %Tp\"}.  The location of the morning or afternoon marker
    ({@code '%Tp'}) may be locale-dependent.

<tr><td valign=\"top\">{@code 'D'}
    <td valign=\"top\"> <tt>'&#92;u0044'</tt>
    <td> Date formatted as {@code \"%tm/%td/%ty\"}.

<tr><td valign=\"top\">{@code 'F'}
    <td valign=\"top\"> <tt>'&#92;u0046'</tt>
    <td> <a href=\"http://www.w3.org/TR/NOTE-datetime\">ISO&nbsp;8601</a>
    complete date formatted as {@code \"%tY-%tm-%td\"}.

<tr><td valign=\"top\">{@code 'c'}
    <td valign=\"top\"> <tt>'&#92;u0063'</tt>
    <td> Date and time formatted as {@code \"%ta %tb %td %tT %tZ %tY\"},
    e.g. {@code \"Sun Jul 20 16:17:00 EDT 1969\"}.

</table>

<p> The {@code '-'} flag defined for <a href=\"#dFlags\">General
conversions</a> applies.  If the {@code '#'} flag is given, then a {@link
FormatFlagsConversionMismatchException} will be thrown.

<p> The width is the minimum number of characters to
be written to the output.  If the length of the converted value is less than
the {@code width} then the output will be padded by spaces
(<tt>'&#92;u0020'</tt>) until the total number of characters equals width.
The padding is on the left by default.  If the {@code '-'} flag is given
then the padding will be on the right.  If width is not specified then there
is no minimum.

<p> The precision is not applicable.  If the precision is specified then an
{@link IllegalFormatPrecisionException} will be thrown.

<h4><a name=\"dper\">Percent</a></h4>

<p> The conversion does not correspond to any argument.

<table cellpadding=5 summary=\"DTConv\">

<tr><td valign=\"top\">{@code '%'}
    <td> The result is a literal {@code '%'} (<tt>'&#92;u0025'</tt>)

<p> The width is the minimum number of characters to
be written to the output including the {@code '%'}.  If the length of the
converted value is less than the {@code width} then the output will be
padded by spaces (<tt>'&#92;u0020'</tt>) until the total number of
characters equals width.  The padding is on the left.  If width is not
specified then just the {@code '%'} is output.

<p> The {@code '-'} flag defined for <a href=\"#dFlags\">General
conversions</a> applies.  If any other flags are provided, then a
{@link FormatFlagsConversionMismatchException} will be thrown.

<p> The precision is not applicable.  If the precision is specified an
{@link IllegalFormatPrecisionException} will be thrown.

</table>

<h4><a name=\"dls\">Line Separator</a></h4>

<p> The conversion does not correspond to any argument.

<table cellpadding=5 summary=\"DTConv\">

<tr><td valign=\"top\">{@code 'n'}
    <td> the platform-specific line separator as returned by {@link
    System#getProperty System.getProperty(\"line.separator\")}.

</table>

<p> Flags, width, and precision are not applicable.  If any are provided an
{@link IllegalFormatFlagsException}, {@link IllegalFormatWidthException},
and {@link IllegalFormatPrecisionException}, respectively will be thrown.

<h4><a name=\"dpos\">Argument Index</a></h4>

<p> Format specifiers can reference arguments in three ways:

<ul>

<li> <i>Explicit indexing</i> is used when the format specifier contains an
argument index.  The argument index is a decimal integer indicating the
position of the argument in the argument list.  The first argument is
referenced by \"{@code 1$}\", the second by \"{@code 2$}\", etc.  An argument
may be referenced more than once.

<p> For example:

<blockquote><pre>
  formatter.format(\"%4$s %3$s %2$s %1$s %4$s %3$s %2$s %1$s\",
                   \"a\", \"b\", \"c\", \"d\")
  // -&gt; \"d c b a d c b a\"
</pre></blockquote>

<li> <i>Relative indexing</i> is used when the format specifier contains a
{@code '<'} (<tt>'&#92;u003c'</tt>) flag which causes the argument for
the previous format specifier to be re-used.  If there is no previous
argument, then a {@link MissingFormatArgumentException} is thrown.

<blockquote><pre>
   formatter.format(\"%s %s %&lt;s %&lt;s\", \"a\", \"b\", \"c\", \"d\")
   // -&gt; \"a b b b\"
   // \"c\" and \"d\" are ignored because they are not referenced
</pre></blockquote>

<li> <i>Ordinary indexing</i> is used when the format specifier contains
neither an argument index nor a {@code '<'} flag.  Each format specifier
which uses ordinary indexing is assigned a sequential implicit index into
argument list which is independent of the indices used by explicit or
relative indexing.

<blockquote><pre>
  formatter.format(\"%s %s %s %s\", \"a\", \"b\", \"c\", \"d\")
  // -&gt; \"a b c d\"
</pre></blockquote>

</ul>

<p> It is possible to have a format string which uses all forms of indexing,
for example:

<blockquote><pre>
  formatter.format(\"%2$s %s %&lt;s %s\", \"a\", \"b\", \"c\", \"d\")
  // -&gt; \"b a a b\"
  // \"c\" and \"d\" are ignored because they are not referenced
</pre></blockquote>

<p> The maximum number of arguments is limited by the maximum dimension of a
Java array as defined by
<cite>The Java&trade; Virtual Machine Specification</cite>.
If the argument index is does not correspond to an
available argument, then a {@link MissingFormatArgumentException} is thrown.

<p> If there are more arguments than format specifiers, the extra arguments
are ignored.

<p> Unless otherwise specified, passing a {@code null} argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@author  Iris Clark
@since 1.5
"
      classrelation 3516930 // <realization>
	relation 3516930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3516930 // <realization>
	  b parent class_ref 146562 // Closeable
      end

      classrelation 3517058 // <realization>
	relation 3517058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3517058 // <realization>
	  b parent class_ref 151426 // Flushable
      end

      classrelation 3517186 // a (<unidirectional association>)
	relation 3517186 --->
	  a role_name "a" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3517186 // a (<unidirectional association>)
	  b parent class_ref 548866 // Appendable
      end

      classrelation 3517314 // l (<unidirectional association>)
	relation 3517314 --->
	  a role_name "l" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3517314 // l (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3517442 // lastException (<unidirectional association>)
	relation 3517442 --->
	  a role_name "lastException" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3517442 // lastException (<unidirectional association>)
	  b parent class_ref 146818 // IOException
      end

      attribute 2039938 "zero"
	const_attribute private explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2040066 "scaleUp"
	class_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2040194 "MAX_FD_CHARS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 1 (sign) + 19 (max # sig digits) + 1 ('.') + 1 ('e') + 1 (sign)
 + 3 (max # exp digits) + 4 (error) = 30
"
      end

      operation 8788354 "toCharset"
	class_operation private return_type class_ref 853634 // Charset
	nparams 1
	  param inout name "csn" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a charset object for the given charset name.
@throws NullPointerException          is csn is null
@throws UnsupportedEncodingException  if the charset is not supported
"
      end

      operation 8788482 "nonNullAppendable"
	class_operation private return_type class_ref 548866 // Appendable
	nparams 1
	  param inout name "a" type class_ref 548866 // Appendable
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8788610 "Formatter"
	private explicit_return_type ""
	nparams 2
	  param inout name "l" type class_ref 312962 // Locale
	  param inout name "a" type class_ref 548866 // Appendable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private constructors "
      end

      operation 8788738 "Formatter"
	private explicit_return_type ""
	nparams 3
	  param inout name "charset" type class_ref 853634 // Charset
	  param inout name "l" type class_ref 312962 // Locale
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8788866 "Formatter"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter.

<p> The destination of the formatted output is a {@link StringBuilder}
which may be retrieved by invoking {@link #out out()} and whose
current content may be converted into a string by invoking {@link
#toString toString()}.  The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.
"
      end

      operation 8788994 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 548866 // Appendable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified destination.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  a
        Destination for the formatted output.  If {@code a} is
        {@code null} then a {@link StringBuilder} will be created.
"
      end

      operation 8789122 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified locale.

<p> The destination of the formatted output is a {@link StringBuilder}
which may be retrieved by invoking {@link #out out()} and whose current
content may be converted into a string by invoking {@link #toString
toString()}.

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.
"
      end

      operation 8789250 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "a" type class_ref 548866 // Appendable
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified destination and locale.

@param  a
        Destination for the formatted output.  If {@code a} is
        {@code null} then a {@link StringBuilder} will be created.

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.
"
      end

      operation 8789378 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified file name.

<p> The charset used is the {@linkplain
java.nio.charset.Charset#defaultCharset() default charset} for this
instance of the Java virtual machine.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  fileName
        The name of the file to use as the destination of this
        formatter.  If the file exists then it will be truncated to
        zero size; otherwise, a new file will be created.  The output
        will be written to the file and is buffered.

@throws  SecurityException
         If a security manager is present and {@link
         SecurityManager#checkWrite checkWrite(fileName)} denies write
         access to the file

@throws  FileNotFoundException
         If the given file name does not denote an existing, writable
         regular file and a new regular file of that name cannot be
         created, or if some other error occurs while opening or
         creating the file
"
      end

      operation 8789506 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "fileName" type class_ref 128130 // String
	  param inout name "csn" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 580354 // FileNotFoundException
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified file name and charset.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  fileName
        The name of the file to use as the destination of this
        formatter.  If the file exists then it will be truncated to
        zero size; otherwise, a new file will be created.  The output
        will be written to the file and is buffered.

@param  csn
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@throws  FileNotFoundException
         If the given file name does not denote an existing, writable
         regular file and a new regular file of that name cannot be
         created, or if some other error occurs while opening or
         creating the file

@throws  SecurityException
         If a security manager is present and {@link
         SecurityManager#checkWrite checkWrite(fileName)} denies write
         access to the file

@throws  UnsupportedEncodingException
         If the named charset is not supported
"
      end

      operation 8789634 "Formatter"
	public explicit_return_type ""
	nparams 3
	  param inout name "fileName" type class_ref 128130 // String
	  param inout name "csn" type class_ref 128130 // String
	  param inout name "l" type class_ref 312962 // Locale
	nexceptions 2
	  exception class_ref 580354 // FileNotFoundException
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified file name, charset, and
locale.

@param  fileName
        The name of the file to use as the destination of this
        formatter.  If the file exists then it will be truncated to
        zero size; otherwise, a new file will be created.  The output
        will be written to the file and is buffered.

@param  csn
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.

@throws  FileNotFoundException
         If the given file name does not denote an existing, writable
         regular file and a new regular file of that name cannot be
         created, or if some other error occurs while opening or
         creating the file

@throws  SecurityException
         If a security manager is present and {@link
         SecurityManager#checkWrite checkWrite(fileName)} denies write
         access to the file

@throws  UnsupportedEncodingException
         If the named charset is not supported
"
      end

      operation 8789762 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified file.

<p> The charset used is the {@linkplain
java.nio.charset.Charset#defaultCharset() default charset} for this
instance of the Java virtual machine.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  file
        The file to use as the destination of this formatter.  If the
        file exists then it will be truncated to zero size; otherwise,
        a new file will be created.  The output will be written to the
        file and is buffered.

@throws  SecurityException
         If a security manager is present and {@link
         SecurityManager#checkWrite checkWrite(file.getPath())} denies
         write access to the file

@throws  FileNotFoundException
         If the given file object does not denote an existing, writable
         regular file and a new regular file of that name cannot be
         created, or if some other error occurs while opening or
         creating the file
"
      end

      operation 8789890 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "file" type class_ref 131970 // File
	  param inout name "csn" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 580354 // FileNotFoundException
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified file and charset.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  file
        The file to use as the destination of this formatter.  If the
        file exists then it will be truncated to zero size; otherwise,
        a new file will be created.  The output will be written to the
        file and is buffered.

@param  csn
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@throws  FileNotFoundException
         If the given file object does not denote an existing, writable
         regular file and a new regular file of that name cannot be
         created, or if some other error occurs while opening or
         creating the file

@throws  SecurityException
         If a security manager is present and {@link
         SecurityManager#checkWrite checkWrite(file.getPath())} denies
         write access to the file

@throws  UnsupportedEncodingException
         If the named charset is not supported
"
      end

      operation 8790018 "Formatter"
	public explicit_return_type ""
	nparams 3
	  param inout name "file" type class_ref 131970 // File
	  param inout name "csn" type class_ref 128130 // String
	  param inout name "l" type class_ref 312962 // Locale
	nexceptions 2
	  exception class_ref 580354 // FileNotFoundException
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified file, charset, and
locale.

@param  file
        The file to use as the destination of this formatter.  If the
        file exists then it will be truncated to zero size; otherwise,
        a new file will be created.  The output will be written to the
        file and is buffered.

@param  csn
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.

@throws  FileNotFoundException
         If the given file object does not denote an existing, writable
         regular file and a new regular file of that name cannot be
         created, or if some other error occurs while opening or
         creating the file

@throws  SecurityException
         If a security manager is present and {@link
         SecurityManager#checkWrite checkWrite(file.getPath())} denies
         write access to the file

@throws  UnsupportedEncodingException
         If the named charset is not supported
"
      end

      operation 8790146 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "ps" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified print stream.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

<p> Characters are written to the given {@link java.io.PrintStream
PrintStream} object and are therefore encoded using that object's
charset.

@param  ps
        The stream to use as the destination of this formatter.
"
      end

      operation 8790274 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "os" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified output stream.

<p> The charset used is the {@linkplain
java.nio.charset.Charset#defaultCharset() default charset} for this
instance of the Java virtual machine.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  os
        The output stream to use as the destination of this formatter.
        The output will be buffered.
"
      end

      operation 8790402 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "os" type class_ref 151298 // OutputStream
	  param inout name "csn" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified output stream and
charset.

<p> The locale used is the {@linkplain
Locale#getDefault(Locale.Category) default locale} for
{@linkplain Locale.Category#FORMAT formatting} for this instance of the Java
virtual machine.

@param  os
        The output stream to use as the destination of this formatter.
        The output will be buffered.

@param  csn
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@throws  UnsupportedEncodingException
         If the named charset is not supported
"
      end

      operation 8790530 "Formatter"
	public explicit_return_type ""
	nparams 3
	  param inout name "os" type class_ref 151298 // OutputStream
	  param inout name "csn" type class_ref 128130 // String
	  param inout name "l" type class_ref 312962 // Locale
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new formatter with the specified output stream, charset,
and locale.

@param  os
        The output stream to use as the destination of this formatter.
        The output will be buffered.

@param  csn
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.

@throws  UnsupportedEncodingException
         If the named charset is not supported
"
      end

      operation 8790658 "getZero"
	class_operation private explicit_return_type "char"
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8790786 "locale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the locale set by the construction of this formatter.

<p> The {@link #format(java.util.Locale,String,Object...) format} method
for this object which has a locale argument does not change this value.

@return  {@code null} if no localization is applied, otherwise a
         locale

@throws  FormatterClosedException
         If this formatter has been closed by invoking its {@link
         #close()} method
"
      end

      operation 8790914 "out"
	public return_type class_ref 548866 // Appendable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the destination for the output.

@return  The destination for the output

@throws  FormatterClosedException
         If this formatter has been closed by invoking its {@link
         #close()} method
"
      end

      operation 8791042 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of invoking {@code toString()} on the destination
for the output.  For example, the following code formats text into a
{@link StringBuilder} then retrieves the resultant string:

<blockquote><pre>
  Formatter f = new Formatter();
  f.format(\"Last reboot at %tc\", lastRebootDate);
  String s = f.toString();
  // -&gt; s == \"Last reboot at Sat Jan 01 00:00:00 PST 2000\"
</pre></blockquote>

<p> An invocation of this method behaves in exactly the same way as the
invocation

<pre>
    out().toString() </pre>

<p> Depending on the specification of {@code toString} for the {@link
Appendable}, the returned string may or may not contain the characters
written to the destination.  For instance, buffers typically return
their contents in {@code toString()}, but streams cannot since the
data is discarded.

@return  The result of invoking {@code toString()} on the destination
         for the output

@throws  FormatterClosedException
         If this formatter has been closed by invoking its {@link
         #close()} method
"
      end

      operation 8791170 "flush"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes this formatter.  If the destination implements the {@link
java.io.Flushable} interface, its {@code flush} method will be invoked.

<p> Flushing a formatter writes any buffered output in the destination
to the underlying stream.

@throws  FormatterClosedException
         If this formatter has been closed by invoking its {@link
         #close()} method
"
      end

      operation 8791298 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this formatter.  If the destination implements the {@link
java.io.Closeable} interface, its {@code close} method will be invoked.

<p> Closing a formatter allows it to release resources it may be holding
(such as open files).  If the formatter is already closed, then invoking
this method has no effect.

<p> Attempting to invoke any methods except {@link #ioException()} in
this formatter after it has been closed will result in a {@link
FormatterClosedException}.
"
      end

      operation 8791426 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8791554 "ioException"
	public return_type class_ref 146818 // IOException
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code IOException} last thrown by this formatter's {@link
Appendable}.

<p> If the destination's {@code append()} method never throws
{@code IOException}, then this method will always return {@code null}.

@return  The last exception thrown by the Appendable or {@code null} if
         no such exception exists.
"
      end

      operation 8791682 "format"
	public return_type class_ref 922370 // Formatter
	nparams 2
	  param inout name "format" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ... ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a formatted string to this object's destination using the
specified format string and arguments.  The locale used is the one
defined during the construction of this formatter.

@param  format
        A format string as described in <a href=\"#syntax\">Format string
        syntax</a>.

@param  args
        Arguments referenced by the format specifiers in the format
        string.  If there are more arguments than format specifiers, the
        extra arguments are ignored.  The maximum number of arguments is
        limited by the maximum dimension of a Java array as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.

@throws  IllegalFormatException
         If a format string contains an illegal syntax, a format
         specifier that is incompatible with the given arguments,
         insufficient arguments given the format string, or other
         illegal conditions.  For specification of all possible
         formatting errors, see the <a href=\"#detail\">Details</a>
         section of the formatter class specification.

@throws  FormatterClosedException
         If this formatter has been closed by invoking its {@link
         #close()} method

@return  This formatter
"
      end

      operation 8791810 "format"
	public return_type class_ref 922370 // Formatter
	nparams 3
	  param inout name "l" type class_ref 312962 // Locale
	  param inout name "format" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ... ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a formatted string to this object's destination using the
specified locale, format string, and arguments.

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.  This does not change this object's locale that was
        set during construction.

@param  format
        A format string as described in <a href=\"#syntax\">Format string
        syntax</a>

@param  args
        Arguments referenced by the format specifiers in the format
        string.  If there are more arguments than format specifiers, the
        extra arguments are ignored.  The maximum number of arguments is
        limited by the maximum dimension of a Java array as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.

@throws  IllegalFormatException
         If a format string contains an illegal syntax, a format
         specifier that is incompatible with the given arguments,
         insufficient arguments given the format string, or other
         illegal conditions.  For specification of all possible
         formatting errors, see the <a href=\"#detail\">Details</a>
         section of the formatter class specification.

@throws  FormatterClosedException
         If this formatter has been closed by invoking its {@link
         #close()} method

@return  This formatter
"
      end

      classrelation 3517570 // formatSpecifier (<unidirectional association>)
	relation 3517570 --->
	  a role_name "formatSpecifier" init_value " \"%(\\\\d+\\\\$)?([-#+ 0,(\\\\<]*)?(\\\\d+)?(\\\\.\\\\d+)?([tT])?([a-zA-Z%])\"" class_relation const_relation private
	    comment " %[argument_index$][flags][width][.precision][t]conversion
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3517570 // formatSpecifier (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3517698 // fsPattern (<unidirectional association>)
	relation 3517698 --->
	  a role_name "fsPattern" init_value " Pattern.compile(formatSpecifier)" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3517698 // fsPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      class 1082626 "FormatString"
	visibility private stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 8792194 "index"
	  public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8792322 "print"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8792450 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8791938 "parse"
	private return_type class_ref 1082626 // FormatString
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds format specifiers in the format string.
"
      end

      operation 8792066 "checkText"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "s" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1082754 "FixedString"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3517826 // <realization>
	  relation 3517826 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3517826 // <realization>
	    b parent class_ref 1082626 // FormatString
	end

	classrelation 3517954 // s (<unidirectional association>)
	  relation 3517954 --->
	    a role_name "s" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3517954 // s (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 8792578 "FixedString"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8792706 "index"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8792834 "print"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8792962 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1082882 "BigDecimalLayoutForm"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2040322 "SCIENTIFIC"
	  public type class_ref 1082882 // BigDecimalLayoutForm
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Format the {@code BigDecimal} in computerized scientific notation.

"
	end

	attribute 2040450 "DECIMAL_FLOAT"
	  public type class_ref 1082882 // BigDecimalLayoutForm
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Format the {@code BigDecimal} as a decimal number.
"
	end
      end

      class 1083010 "FormatSpecifier"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3518082 // <realization>
	  relation 3518082 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3518082 // <realization>
	    b parent class_ref 1082626 // FormatString
	end

	attribute 2040578 "index"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3518210 // f (<unidirectional association>)
	  relation 3518210 --->
	    a role_name "f" init_value " Flags.NONE" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3518210 // f (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	attribute 2040706 "width"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2040834 "precision"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2040962 "dt"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2041090 "c"
	  private explicit_type "char"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8793090 "index"
	  private explicit_return_type "int"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793218 "index"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793346 "flags"
	  private return_type class_ref 1083138 // Flags
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793474 "flags"
	  package return_type class_ref 1083138 // Flags
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793602 "width"
	  private explicit_return_type "int"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793730 "width"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793858 "precision"
	  private explicit_return_type "int"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8793986 "precision"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794114 "conversion"
	  private explicit_return_type "char"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794242 "conversion"
	  private explicit_return_type "char"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794370 "FormatSpecifier"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 834690 // Matcher
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794498 "print"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794626 "printInteger"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794754 "printFloat"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8794882 "printDateTime"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795010 "printCharacter"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "arg" type class_ref 129538 // Object
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795138 "printString"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "arg" type class_ref 129538 // Object
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795266 "printBoolean"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "arg" type class_ref 129538 // Object
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795394 "printHashCode"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "arg" type class_ref 129538 // Object
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795522 "print"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795650 "justify"
	  private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795778 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8795906 "checkGeneral"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796034 "checkDateTime"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796162 "checkCharacter"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796290 "checkInteger"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796418 "checkBadFlags"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "badFlags" type class_ref 1083138 // Flags
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ... ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796546 "checkFloat"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796674 "checkNumeric"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796802 "checkText"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8796930 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "byte"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8797058 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "short"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8797186 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "int"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8797314 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "long"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8797442 "leadingSign"
	  private return_type class_ref 173058 // StringBuilder
	  nparams 2
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param inout name "neg" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " neg := val < 0"
	end

	operation 8797570 "trailingSign"
	  private return_type class_ref 173058 // StringBuilder
	  nparams 2
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param inout name "neg" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " neg := val < 0"
	end

	operation 8797698 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "value" type class_ref 686338 // BigInteger
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8797826 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "float"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8797954 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "double"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8798082 "print"
	  private explicit_return_type "void"
	  nparams 7
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param in name "value" explicit_type "double"
	    param inout name "l" type class_ref 312962 // Locale
	    param inout name "f" type class_ref 1083138 // Flags
	    param in name "c" explicit_type "char"
	    param in name "precision" explicit_type "int"
	    param inout name "neg" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " !Double.isInfinite(value) && !Double.isNaN(value)"
	end

	operation 8798210 "addZeros"
	  private explicit_return_type "char"
	  nparams 2
	    param inout name "v" explicit_type "char"
	  multiplicity "[]"
	    param in name "prec" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add zeros to the requested precision."
	end

	operation 8798338 "hexDouble"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param in name "d" explicit_type "double"
	    param in name "prec" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Method assumes that d > 0."
	end

	operation 8798466 "print"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "value" type class_ref 145794 // BigDecimal
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8798594 "print"
	  private explicit_return_type "void"
	  nparams 7
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param inout name "value" type class_ref 145794 // BigDecimal
	    param inout name "l" type class_ref 312962 // Locale
	    param inout name "f" type class_ref 1083138 // Flags
	    param in name "c" explicit_type "char"
	    param in name "precision" explicit_type "int"
	    param inout name "neg" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " value > 0"
	end

	class 1083266 "BigDecimalLayout"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3518338 // mant (<unidirectional association>)
	    relation 3518338 --->
	      a role_name "mant" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 3518338 // mant (<unidirectional association>)
	      b parent class_ref 173058 // StringBuilder
	  end

	  classrelation 3518466 // exp (<unidirectional association>)
	    relation 3518466 --->
	      a role_name "exp" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 3518466 // exp (<unidirectional association>)
	      b parent class_ref 173058 // StringBuilder
	  end

	  attribute 2041218 "dot"
	    private explicit_type "boolean"
	    init_value " false"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2041346 "scale"
	    private explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8798722 "BigDecimalLayout"
	    public explicit_return_type ""
	    nparams 3
	      param inout name "intVal" type class_ref 686338 // BigInteger
	      param in name "scale" explicit_type "int"
	      param inout name "form" type class_ref 1082882 // BigDecimalLayoutForm
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8798850 "hasDot"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8798978 "scale"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8799106 "layoutChars"
	    public explicit_return_type "char"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " char[] with canonical string representation"
	  end

	  operation 8799234 "mantissa"
	    public explicit_return_type "char"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8799362 "exponent"
	    public explicit_return_type "char"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " The exponent will be formatted as a sign ('+' or '-') followed
 by the exponent zero-padded to include at least two digits."
	  end

	  operation 8799490 "toCharArray"
	    private explicit_return_type "char"
	    nparams 1
	      param inout name "sb" type class_ref 173058 // StringBuilder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8799618 "layout"
	    private explicit_return_type "void"
	    nparams 3
	      param inout name "intVal" type class_ref 686338 // BigInteger
	      param in name "scale" explicit_type "int"
	      param inout name "form" type class_ref 1082882 // BigDecimalLayoutForm
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 8799746 "adjustWidth"
	  private explicit_return_type "int"
	  nparams 3
	    param in name "width" explicit_type "int"
	    param inout name "f" type class_ref 1083138 // Flags
	    param inout name "neg" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8799874 "addDot"
	  private explicit_return_type "char"
	  nparams 1
	    param inout name "mant" explicit_type "char"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add a '.' to th mantissa if required"
	end

	operation 8800002 "trailingZeros"
	  private explicit_return_type "char"
	  nparams 2
	    param inout name "mant" explicit_type "char"
	  multiplicity "[]"
	    param in name "nzeros" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add trailing zeros in the case precision is greater than the number
 of available digits after the decimal separator."
	end

	operation 8800130 "print"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "t" type class_ref 723586 // Calendar
	    param in name "c" explicit_type "char"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8800258 "print"
	  private return_type class_ref 548866 // Appendable
	  nparams 4
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param inout name "t" type class_ref 723586 // Calendar
	    param in name "c" explicit_type "char"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8800386 "print"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "t" type class_ref 1050754 // TemporalAccessor
	    param in name "c" explicit_type "char"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8800514 "print"
	  private return_type class_ref 548866 // Appendable
	  nparams 4
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param inout name "t" type class_ref 1050754 // TemporalAccessor
	    param in name "c" explicit_type "char"
	    param inout name "l" type class_ref 312962 // Locale
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8800642 "failMismatch"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "f" type class_ref 1083138 // Flags
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " -- Methods to support throwing exceptions --"
	end

	operation 8800770 "failConversion"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "c" explicit_type "char"
	    param inout name "arg" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8800898 "getZero"
	  private explicit_return_type "char"
	  nparams 1
	    param inout name "l" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801026 "localizedMagnitude"
	  private return_type class_ref 173058 // StringBuilder
	  nparams 5
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param in name "value" explicit_type "long"
	    param inout name "f" type class_ref 1083138 // Flags
	    param in name "width" explicit_type "int"
	    param inout name "l" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801154 "localizedMagnitude"
	  private return_type class_ref 173058 // StringBuilder
	  nparams 5
	    param inout name "sb" type class_ref 173058 // StringBuilder
	    param inout name "value" explicit_type "char"
	  multiplicity "[]"
	    param inout name "f" type class_ref 1083138 // Flags
	    param in name "width" explicit_type "int"
	    param inout name "l" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1083138 "Flags"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2041474 "flags"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3518594 // NONE (<unidirectional association>)
	  relation 3518594 --->
	    a role_name "NONE" init_value " new Flags(0)" class_relation const_relation package
	      comment " ''"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3518594 // NONE (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3518722 // LEFT_JUSTIFY (<unidirectional association>)
	  relation 3518722 --->
	    a role_name "LEFT_JUSTIFY" init_value " new Flags(1<<0)" class_relation const_relation package
	      comment " duplicate declarations from Formattable.java
 '-'"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3518722 // LEFT_JUSTIFY (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3518850 // UPPERCASE (<unidirectional association>)
	  relation 3518850 --->
	    a role_name "UPPERCASE" init_value " new Flags(1<<1)" class_relation const_relation package
	      comment " '^'"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3518850 // UPPERCASE (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3518978 // ALTERNATE (<unidirectional association>)
	  relation 3518978 --->
	    a role_name "ALTERNATE" init_value " new Flags(1<<2)" class_relation const_relation package
	      comment " '#'"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3518978 // ALTERNATE (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3519106 // PLUS (<unidirectional association>)
	  relation 3519106 --->
	    a role_name "PLUS" init_value " new Flags(1<<3)" class_relation const_relation package
	      comment " numerics
 '+'"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3519106 // PLUS (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3519234 // LEADING_SPACE (<unidirectional association>)
	  relation 3519234 --->
	    a role_name "LEADING_SPACE" init_value " new Flags(1<<4)" class_relation const_relation package
	      comment " ' '"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3519234 // LEADING_SPACE (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3519362 // ZERO_PAD (<unidirectional association>)
	  relation 3519362 --->
	    a role_name "ZERO_PAD" init_value " new Flags(1<<5)" class_relation const_relation package
	      comment " '0'"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3519362 // ZERO_PAD (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3519490 // GROUP (<unidirectional association>)
	  relation 3519490 --->
	    a role_name "GROUP" init_value " new Flags(1<<6)" class_relation const_relation package
	      comment " ','"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3519490 // GROUP (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3519618 // PARENTHESES (<unidirectional association>)
	  relation 3519618 --->
	    a role_name "PARENTHESES" init_value " new Flags(1<<7)" class_relation const_relation package
	      comment " '('"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3519618 // PARENTHESES (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	classrelation 3519746 // PREVIOUS (<unidirectional association>)
	  relation 3519746 --->
	    a role_name "PREVIOUS" init_value " new Flags(1<<8)" class_relation const_relation package
	      comment " indexing
 '<'"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3519746 // PREVIOUS (<unidirectional association>)
	    b parent class_ref 1083138 // Flags
	end

	operation 8801282 "Flags"
	  private explicit_return_type ""
	  nparams 1
	    param in name "f" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801410 "valueOf"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801538 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "f" type class_ref 1083138 // Flags
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801666 "dup"
	  public return_type class_ref 1083138 // Flags
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801794 "add"
	  private return_type class_ref 1083138 // Flags
	  nparams 1
	    param inout name "f" type class_ref 1083138 // Flags
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8801922 "remove"
	  public return_type class_ref 1083138 // Flags
	  nparams 1
	    param inout name "f" type class_ref 1083138 // Flags
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8802050 "parse"
	  class_operation public return_type class_ref 1083138 // Flags
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8802178 "parse"
	  class_operation private return_type class_ref 1083138 // Flags
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " parse those flags which may be provided by users"
	end

	operation 8802306 "toString"
	  class_operation public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "f" type class_ref 1083138 // Flags
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns a string representation of the current {@code Flags}."
	end

	operation 8802434 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1083394 "Conversion"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2041602 "DECIMAL_INTEGER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'd'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Byte, Short, Integer, Long, BigInteger
 (and associated primitives due to autoboxing)
"
	end

	attribute 2041730 "OCTAL_INTEGER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'o'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2041858 "HEXADECIMAL_INTEGER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'x'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2041986 "HEXADECIMAL_INTEGER_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'X'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2042114 "SCIENTIFIC"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'e'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Float, Double, BigDecimal
 (and associated primitives due to autoboxing)
"
	end

	attribute 2042242 "SCIENTIFIC_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'E'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2042370 "GENERAL"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'g'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2042498 "GENERAL_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'G'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2042626 "DECIMAL_FLOAT"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'f'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2042754 "HEXADECIMAL_FLOAT"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'a'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2042882 "HEXADECIMAL_FLOAT_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'A'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2043010 "CHARACTER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'c'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Character, Byte, Short, Integer
 (and associated primitives due to autoboxing)
"
	end

	attribute 2043138 "CHARACTER_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'C'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2043266 "DATE_TIME"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 't'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " java.util.Date, java.util.Calendar, long
"
	end

	attribute 2043394 "DATE_TIME_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'T'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2043522 "BOOLEAN"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'b'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " if (arg.TYPE != boolean) return boolean
 if (arg != null) return true; else return false;
"
	end

	attribute 2043650 "BOOLEAN_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'B'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2043778 "STRING"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 's'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " if (arg instanceof Formattable) arg.formatTo()
 else arg.toString();
"
	end

	attribute 2043906 "STRING_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'S'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2044034 "HASHCODE"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'h'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " arg.hashCode()
"
	end

	attribute 2044162 "HASHCODE_UPPER"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'H'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2044290 "LINE_SEPARATOR"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'n'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2044418 "PERCENT_SIGN"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " '%'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8802562 "isValid"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8802690 "isGeneral"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns true iff the Conversion is applicable to all objects."
	end

	operation 8802818 "isCharacter"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns true iff the Conversion is applicable to character."
	end

	operation 8802946 "isInteger"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns true iff the Conversion is an integer type."
	end

	operation 8803074 "isFloat"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns true iff the Conversion is a floating-point type."
	end

	operation 8803202 "isText"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns true iff the Conversion does not require an argument"
	end
      end

      class 1083522 "DateTime"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2044546 "HOUR_OF_DAY_0"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'H'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (00 - 23)"
	end

	attribute 2044674 "HOUR_0"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'I'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (01 - 12)"
	end

	attribute 2044802 "HOUR_OF_DAY"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'k'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (0 - 23) -- like H"
	end

	attribute 2044930 "HOUR"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'l'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (1 - 12) -- like I"
	end

	attribute 2045058 "MINUTE"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'M'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (00 - 59)"
	end

	attribute 2045186 "NANOSECOND"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'N'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (000000000 - 999999999)"
	end

	attribute 2045314 "MILLISECOND"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'L'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " jdk, not in gnu (000 - 999)"
	end

	attribute 2045442 "MILLISECOND_SINCE_EPOCH"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'Q'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (0 - 99...?)"
	end

	attribute 2045570 "AM_PM"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'p'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (am or pm)"
	end

	attribute 2045698 "SECONDS_SINCE_EPOCH"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 's'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (0 - 99...?)"
	end

	attribute 2045826 "SECOND"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'S'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (00 - 60 - leap second)"
	end

	attribute 2045954 "TIME"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'T'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (24 hour hh:mm:ss)"
	end

	attribute 2046082 "ZONE_NUMERIC"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'z'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (-1200 - +1200) - ls minus?"
	end

	attribute 2046210 "ZONE"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'Z'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (symbol)"
	end

	attribute 2046338 "NAME_OF_DAY_ABBREV"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'a'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Date
 'a'"
	end

	attribute 2046466 "NAME_OF_DAY"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'A'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " 'A'"
	end

	attribute 2046594 "NAME_OF_MONTH_ABBREV"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'b'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " 'b'"
	end

	attribute 2046722 "NAME_OF_MONTH"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'B'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " 'B'"
	end

	attribute 2046850 "CENTURY"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'C'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (00 - 99)"
	end

	attribute 2046978 "DAY_OF_MONTH_0"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'd'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (01 - 31)"
	end

	attribute 2047106 "DAY_OF_MONTH"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'e'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (1 - 31) -- like d"
	end

	attribute 2047234 "NAME_OF_MONTH_ABBREV_X"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'h'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " *    static final char ISO_WEEK_OF_YEAR_2    = 'g'; // cross %y %V
 *    static final char ISO_WEEK_OF_YEAR_4    = 'G'; // cross %Y %V
 -- same b"
	end

	attribute 2047362 "DAY_OF_YEAR"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'j'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (001 - 366)"
	end

	attribute 2047490 "MONTH"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'm'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (01 - 12)"
	end

	attribute 2047618 "YEAR_2"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'y'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " *    static final char DAY_OF_WEEK_1         = 'u'; // (1 - 7) Monday
 *    static final char WEEK_OF_YEAR_SUNDAY   = 'U'; // (0 - 53) Sunday+
 *    static final char WEEK_OF_YEAR_MONDAY_01 = 'V'; // (01 - 53) Monday+
 *    static final char DAY_OF_WEEK_0         = 'w'; // (0 - 6) Sunday
 *    static final char WEEK_OF_YEAR_MONDAY   = 'W'; // (00 - 53) Monday
 (00 - 99)"
	end

	attribute 2047746 "YEAR_4"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'Y'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (0000 - 9999)"
	end

	attribute 2047874 "TIME_12_HOUR"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'r'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Composites
 (hh:mm:ss [AP]M)"
	end

	attribute 2048002 "TIME_24_HOUR"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'R'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (hh:mm same as %H:%M)"
	end

	attribute 2048130 "DATE_TIME"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'c'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " *    static final char LOCALE_TIME   = 'X'; // (%H:%M:%S) - parse format?
"
	end

	attribute 2048258 "DATE"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'D'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (Sat Nov 04 12:02:33 EST 1999)
 (mm/dd/yy)"
	end

	attribute 2048386 "ISO_STANDARD_DATE"
	  class_attribute const_attribute package explicit_type "char"
	  init_value " 'F'"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " (%Y-%m-%d)"
	end

	operation 8803330 "isValid"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " *    static final char LOCALE_DATE           = 'x'; // (mm/dd/yy)"
	end
      end
    end

    class 934914 "Random"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is used to generate a stream of
pseudorandom numbers. The class uses a 48-bit seed, which is
modified using a linear congruential formula. (See Donald Knuth,
<i>The Art of Computer Programming, Volume 2</i>, Section 3.2.1.)
<p>
If two instances of {@code Random} are created with the same
seed, and the same sequence of method calls is made for each, they
will generate and return identical sequences of numbers. In order to
guarantee this property, particular algorithms are specified for the
class {@code Random}. Java implementations must use all the algorithms
shown here for the class {@code Random}, for the sake of absolute
portability of Java code. However, subclasses of class {@code Random}
are permitted to use other algorithms, so long as they adhere to the
general contracts for all the methods.
<p>
The algorithms implemented by class {@code Random} use a
{@code protected} utility method that on each invocation can supply
up to 32 pseudorandomly generated bits.
<p>
Many applications will find the method {@link Math#random} simpler to use.

<p>Instances of {@code java.util.Random} are threadsafe.
However, the concurrent use of the same {@code java.util.Random}
instance across threads may encounter contention and consequent
poor performance. Consider instead using
{@link java.util.concurrent.ThreadLocalRandom} in multithreaded
designs.

<p>Instances of {@code java.util.Random} are not cryptographically
secure.  Consider instead using {@link java.security.SecureRandom} to
get a cryptographically secure pseudo-random number generator for use
by security-sensitive applications.

@author  Frank Yellin
@since   1.0
"
      classrelation 3361154 // <realization>
	relation 3361154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3361154 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1853442 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3905348978240129619L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.1 for interoperability 
"
      end

      classrelation 3361282 // seed (<unidirectional association>)
	relation 3361282 --->
	  a role_name "seed" const_relation private
	    comment "
The internal state associated with this pseudorandom number generator.
(The specs for the methods in this class describe the ongoing
computation of this value.)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3361282 // seed (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      attribute 1853570 "multiplier"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0x5DEECE66DL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1853698 "addend"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0xBL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1853826 "mask"
	class_attribute const_attribute private explicit_type "long"
	init_value " (1L << 48) - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1853954 "DOUBLE_UNIT"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0x1.0p-53"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 1.0 / (1L << 53)"
      end

      classrelation 3361410 // BadBound (<unidirectional association>)
	relation 3361410 --->
	  a role_name "BadBound" init_value " \"bound must be positive\"" class_relation const_relation package
	    comment " IllegalArgumentException messages
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3361410 // BadBound (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3361538 // BadRange (<unidirectional association>)
	relation 3361538 --->
	  a role_name "BadRange" init_value " \"bound must be greater than origin\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3361538 // BadRange (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3361666 // BadSize (<unidirectional association>)
	relation 3361666 --->
	  a role_name "BadSize" init_value " \"size must be non-negative\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3361666 // BadSize (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 7989762 "Random"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new random number generator. This constructor sets
the seed of the random number generator to a value very likely
to be distinct from any other invocation of this constructor.
"
      end

      operation 7989890 "seedUniquifier"
	class_operation private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3361794 // seedUniquifier (<unidirectional association>)
	relation 3361794 --->
	  a role_name "seedUniquifier" init_value " new AtomicLong(8682522807148012L)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3361794 // seedUniquifier (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      operation 7990018 "Random"
	public explicit_return_type ""
	nparams 1
	  param in name "seed" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new random number generator using a single {@code long} seed.
The seed is the initial value of the internal state of the pseudorandom
number generator which is maintained by method {@link #next}.

<p>The invocation {@code new Random(seed)} is equivalent to:
 <pre> {@code
Random rnd = new Random();
rnd.setSeed(seed);}</pre>

@param seed the initial seed
@see   #setSeed(long)
"
      end

      operation 7990146 "initialScramble"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "seed" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7990274 "setSeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "seed" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the seed of this random number generator using a single
{@code long} seed. The general contract of {@code setSeed} is
that it alters the state of this random number generator object
so as to be in exactly the same state as if it had just been
created with the argument {@code seed} as a seed. The method
{@code setSeed} is implemented by class {@code Random} by
atomically updating the seed to
 <pre>{@code (seed ^ 0x5DEECE66DL) & ((1L << 48) - 1)}</pre>
and clearing the {@code haveNextNextGaussian} flag used by {@link
#nextGaussian}.

<p>The implementation of {@code setSeed} by class {@code Random}
happens to use only 48 bits of the given seed. In general, however,
an overriding method may use all 64 bits of the {@code long}
argument as a seed value.

@param seed the initial seed
"
      end

      operation 7990402 "next"
	protected explicit_return_type "int"
	nparams 1
	  param in name "bits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the next pseudorandom number. Subclasses should
override this, as this is used by all other methods.

<p>The general contract of {@code next} is that it returns an
{@code int} value and if the argument {@code bits} is between
{@code 1} and {@code 32} (inclusive), then that many low-order
bits of the returned value will be (approximately) independently
chosen bit values, each of which is (approximately) equally
likely to be {@code 0} or {@code 1}. The method {@code next} is
implemented by class {@code Random} by atomically updating the seed to
 <pre>{@code (seed * 0x5DEECE66DL + 0xBL) & ((1L << 48) - 1)}</pre>
and returning
 <pre>{@code (int)(seed >>> (48 - bits))}.</pre>

This is a linear congruential pseudorandom number generator, as
defined by D. H. Lehmer and described by Donald E. Knuth in
<i>The Art of Computer Programming,</i> Volume 3:
<i>Seminumerical Algorithms</i>, section 3.2.1.

@param  bits random bits
@return the next pseudorandom value from this random number
        generator's sequence
@since  1.1
"
      end

      operation 7990530 "nextBytes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates random bytes and places them into a user-supplied
byte array.  The number of random bytes produced is equal to
the length of the byte array.

<p>The method {@code nextBytes} is implemented by class {@code Random}
as if by:
 <pre> {@code
public void nextBytes(byte[] bytes) {
  for (int i = 0; i < bytes.length; )
    for (int rnd = nextInt(), n = Math.min(bytes.length - i, 4);
         n-- > 0; rnd >>= 8)
      bytes[i++] = (byte)rnd;
}}</pre>

@param  bytes the byte array to fill with random bytes
@throws NullPointerException if the byte array is null
@since  1.1
"
      end

      operation 7990658 "internalNextLong"
	package explicit_return_type "long"
	nparams 2
	  param in name "origin" explicit_type "long"
	  param in name "bound" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The form of nextLong used by LongStream Spliterators.  If
origin is greater than bound, acts as unbounded form of
nextLong, else as bounded form.

@param origin the least value, unless greater than bound
@param bound the upper bound (exclusive), must not equal origin
@return a pseudorandom value
"
      end

      operation 7990786 "internalNextInt"
	package explicit_return_type "int"
	nparams 2
	  param in name "origin" explicit_type "int"
	  param in name "bound" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The form of nextInt used by IntStream Spliterators.
For the unbounded case: uses nextInt().
For the bounded case with representable range: uses nextInt(int bound)
For the bounded case with unrepresentable range: uses nextInt()

@param origin the least value, unless greater than bound
@param bound the upper bound (exclusive), must not equal origin
@return a pseudorandom value
"
      end

      operation 7990914 "internalNextDouble"
	package explicit_return_type "double"
	nparams 2
	  param in name "origin" explicit_type "double"
	  param in name "bound" explicit_type "double"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The form of nextDouble used by DoubleStream Spliterators.

@param origin the least value, unless greater than bound
@param bound the upper bound (exclusive), must not equal origin
@return a pseudorandom value
"
      end

      operation 7991042 "nextInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next pseudorandom, uniformly distributed {@code int}
value from this random number generator's sequence. The general
contract of {@code nextInt} is that one {@code int} value is
pseudorandomly generated and returned. All 2<sup>32</sup> possible
{@code int} values are produced with (approximately) equal probability.

<p>The method {@code nextInt} is implemented by class {@code Random}
as if by:
 <pre> {@code
public int nextInt() {
  return next(32);
}}</pre>

@return the next pseudorandom, uniformly distributed {@code int}
        value from this random number generator's sequence
"
      end

      operation 7991170 "nextInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "bound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom, uniformly distributed {@code int} value
between 0 (inclusive) and the specified value (exclusive), drawn from
this random number generator's sequence.  The general contract of
{@code nextInt} is that one {@code int} value in the specified range
is pseudorandomly generated and returned.  All {@code bound} possible
{@code int} values are produced with (approximately) equal
probability.  The method {@code nextInt(int bound)} is implemented by
class {@code Random} as if by:
 <pre> {@code
public int nextInt(int bound) {
  if (bound <= 0)
    throw new IllegalArgumentException(\"bound must be positive\");

  if ((bound & -bound) == bound)  // i.e., bound is a power of 2
    return (int)((bound * (long)next(31)) >> 31);

  int bits, val;
  do {
      bits = next(31);
      val = bits % bound;
  } while (bits - val + (bound-1) < 0);
  return val;
}}</pre>

<p>The hedge \"approximately\" is used in the foregoing description only
because the next method is only approximately an unbiased source of
independently chosen bits.  If it were a perfect source of randomly
chosen bits, then the algorithm shown would choose {@code int}
values from the stated range with perfect uniformity.
<p>
The algorithm is slightly tricky.  It rejects values that would result
in an uneven distribution (due to the fact that 2^31 is not divisible
by n). The probability of a value being rejected depends on n.  The
worst case is n=2^30+1, for which the probability of a reject is 1/2,
and the expected number of iterations before the loop terminates is 2.
<p>
The algorithm treats the case where n is a power of two specially: it
returns the correct number of high-order bits from the underlying
pseudo-random number generator.  In the absence of special treatment,
the correct number of <i>low-order</i> bits would be returned.  Linear
congruential pseudo-random number generators such as the one
implemented by this class are known to have short periods in the
sequence of values of their low-order bits.  Thus, this special case
greatly increases the length of the sequence of values returned by
successive calls to this method if n is a small power of two.

@param bound the upper bound (exclusive).  Must be positive.
@return the next pseudorandom, uniformly distributed {@code int}
        value between zero (inclusive) and {@code bound} (exclusive)
        from this random number generator's sequence
@throws IllegalArgumentException if bound is not positive
@since 1.2
"
      end

      operation 7991298 "nextLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next pseudorandom, uniformly distributed {@code long}
value from this random number generator's sequence. The general
contract of {@code nextLong} is that one {@code long} value is
pseudorandomly generated and returned.

<p>The method {@code nextLong} is implemented by class {@code Random}
as if by:
 <pre> {@code
public long nextLong() {
  return ((long)next(32) << 32) + next(32);
}}</pre>

Because class {@code Random} uses a seed with only 48 bits,
this algorithm will not return all possible {@code long} values.

@return the next pseudorandom, uniformly distributed {@code long}
        value from this random number generator's sequence
"
      end

      operation 7991426 "nextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next pseudorandom, uniformly distributed
{@code boolean} value from this random number generator's
sequence. The general contract of {@code nextBoolean} is that one
{@code boolean} value is pseudorandomly generated and returned.  The
values {@code true} and {@code false} are produced with
(approximately) equal probability.

<p>The method {@code nextBoolean} is implemented by class {@code Random}
as if by:
 <pre> {@code
public boolean nextBoolean() {
  return next(1) != 0;
}}</pre>

@return the next pseudorandom, uniformly distributed
        {@code boolean} value from this random number generator's
        sequence
@since 1.2
"
      end

      operation 7991554 "nextFloat"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next pseudorandom, uniformly distributed {@code float}
value between {@code 0.0} and {@code 1.0} from this random
number generator's sequence.

<p>The general contract of {@code nextFloat} is that one
{@code float} value, chosen (approximately) uniformly from the
range {@code 0.0f} (inclusive) to {@code 1.0f} (exclusive), is
pseudorandomly generated and returned. All 2<sup>24</sup> possible
{@code float} values of the form <i>m&nbsp;x&nbsp;</i>2<sup>-24</sup>,
where <i>m</i> is a positive integer less than 2<sup>24</sup>, are
produced with (approximately) equal probability.

<p>The method {@code nextFloat} is implemented by class {@code Random}
as if by:
 <pre> {@code
public float nextFloat() {
  return next(24) / ((float)(1 << 24));
}}</pre>

<p>The hedge \"approximately\" is used in the foregoing description only
because the next method is only approximately an unbiased source of
independently chosen bits. If it were a perfect source of randomly
chosen bits, then the algorithm shown would choose {@code float}
values from the stated range with perfect uniformity.<p>
[In early versions of Java, the result was incorrectly calculated as:
 <pre> {@code
  return next(30) / ((float)(1 << 30));}</pre>
This might seem to be equivalent, if not better, but in fact it
introduced a slight nonuniformity because of the bias in the rounding
of floating-point numbers: it was slightly more likely that the
low-order bit of the significand would be 0 than that it would be 1.]

@return the next pseudorandom, uniformly distributed {@code float}
        value between {@code 0.0} and {@code 1.0} from this
        random number generator's sequence
"
      end

      operation 7991682 "nextDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next pseudorandom, uniformly distributed
{@code double} value between {@code 0.0} and
{@code 1.0} from this random number generator's sequence.

<p>The general contract of {@code nextDouble} is that one
{@code double} value, chosen (approximately) uniformly from the
range {@code 0.0d} (inclusive) to {@code 1.0d} (exclusive), is
pseudorandomly generated and returned.

<p>The method {@code nextDouble} is implemented by class {@code Random}
as if by:
 <pre> {@code
public double nextDouble() {
  return (((long)next(26) << 27) + next(27))
    / (double)(1L << 53);
}}</pre>

<p>The hedge \"approximately\" is used in the foregoing description only
because the {@code next} method is only approximately an unbiased
source of independently chosen bits. If it were a perfect source of
randomly chosen bits, then the algorithm shown would choose
{@code double} values from the stated range with perfect uniformity.
<p>[In early versions of Java, the result was incorrectly calculated as:
 <pre> {@code
  return (((long)next(27) << 27) + next(27))
    / (double)(1L << 54);}</pre>
This might seem to be equivalent, if not better, but in fact it
introduced a large nonuniformity because of the bias in the rounding
of floating-point numbers: it was three times as likely that the
low-order bit of the significand would be 0 than that it would be 1!
This nonuniformity probably doesn't matter much in practice, but we
strive for perfection.]

@return the next pseudorandom, uniformly distributed {@code double}
        value between {@code 0.0} and {@code 1.0} from this
        random number generator's sequence
@see Math#random
"
      end

      attribute 1854082 "nextNextGaussian"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1854210 "haveNextNextGaussian"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7991810 "nextGaussian"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next pseudorandom, Gaussian (\"normally\") distributed
{@code double} value with mean {@code 0.0} and standard
deviation {@code 1.0} from this random number generator's sequence.
<p>
The general contract of {@code nextGaussian} is that one
{@code double} value, chosen from (approximately) the usual
normal distribution with mean {@code 0.0} and standard deviation
{@code 1.0}, is pseudorandomly generated and returned.

<p>The method {@code nextGaussian} is implemented by class
{@code Random} as if by a threadsafe version of the following:
 <pre> {@code
private double nextNextGaussian;
private boolean haveNextNextGaussian = false;

public double nextGaussian() {
  if (haveNextNextGaussian) {
    haveNextNextGaussian = false;
    return nextNextGaussian;
  } else {
    double v1, v2, s;
    do {
      v1 = 2 * nextDouble() - 1;   // between -1.0 and 1.0
      v2 = 2 * nextDouble() - 1;   // between -1.0 and 1.0
      s = v1 * v1 + v2 * v2;
    } while (s >= 1 || s == 0);
    double multiplier = StrictMath.sqrt(-2 * StrictMath.log(s)/s);
    nextNextGaussian = v2 * multiplier;
    haveNextNextGaussian = true;
    return v1 * multiplier;
  }
}}</pre>
This uses the <i>polar method</i> of G. E. P. Box, M. E. Muller, and
G. Marsaglia, as described by Donald E. Knuth in <i>The Art of
Computer Programming</i>, Volume 3: <i>Seminumerical Algorithms</i>,
section 3.4.1, subsection C, algorithm P. Note that it generates two
independent values at the cost of only one call to {@code StrictMath.log}
and one call to {@code StrictMath.sqrt}.

@return the next pseudorandom, Gaussian (\"normally\") distributed
        {@code double} value with mean {@code 0.0} and
        standard deviation {@code 1.0} from this random number
        generator's sequence
"
      end

      operation 7991938 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 1
	  param in name "streamSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " stream methods, coded in a way intended to better isolate for
 maintenance purposes the small differences across forms.

Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code int} values.

<p>A pseudorandom {@code int} value is generated as if it's the result of
calling the method {@link #nextInt()}.

@param streamSize the number of values to generate
@return a stream of pseudorandom {@code int} values
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
@since 1.8
"
      end

      operation 7992066 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code int}
values.

<p>A pseudorandom {@code int} value is generated as if it's the result of
calling the method {@link #nextInt()}.

@implNote This method is implemented to be equivalent to {@code
ints(Long.MAX_VALUE)}.

@return a stream of pseudorandom {@code int} values
@since 1.8
"
      end

      operation 7992194 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 3
	  param in name "streamSize" explicit_type "long"
	  param in name "randomNumberOrigin" explicit_type "int"
	  param in name "randomNumberBound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number
of pseudorandom {@code int} values, each conforming to the given
origin (inclusive) and bound (exclusive).

<p>A pseudorandom {@code int} value is generated as if it's the result of
calling the following method with the origin and bound:
<pre> {@code
int nextInt(int origin, int bound) {
  int n = bound - origin;
  if (n > 0) {
    return nextInt(n) + origin;
  }
  else {  // range not representable as int
    int r;
    do {
      r = nextInt();
    } while (r < origin || r >= bound);
    return r;
  }
}}</pre>

@param streamSize the number of values to generate
@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code int} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code streamSize} is
        less than zero, or {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
@since 1.8
"
      end

      operation 7992322 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 2
	  param in name "randomNumberOrigin" explicit_type "int"
	  param in name "randomNumberBound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
int} values, each conforming to the given origin (inclusive) and bound
(exclusive).

<p>A pseudorandom {@code int} value is generated as if it's the result of
calling the following method with the origin and bound:
<pre> {@code
int nextInt(int origin, int bound) {
  int n = bound - origin;
  if (n > 0) {
    return nextInt(n) + origin;
  }
  else {  // range not representable as int
    int r;
    do {
      r = nextInt();
    } while (r < origin || r >= bound);
    return r;
  }
}}</pre>

@implNote This method is implemented to be equivalent to {@code
ints(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)}.

@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code int} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
@since 1.8
"
      end

      operation 7992450 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 1
	  param in name "streamSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code long} values.

<p>A pseudorandom {@code long} value is generated as if it's the result
of calling the method {@link #nextLong()}.

@param streamSize the number of values to generate
@return a stream of pseudorandom {@code long} values
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
@since 1.8
"
      end

      operation 7992578 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code long}
values.

<p>A pseudorandom {@code long} value is generated as if it's the result
of calling the method {@link #nextLong()}.

@implNote This method is implemented to be equivalent to {@code
longs(Long.MAX_VALUE)}.

@return a stream of pseudorandom {@code long} values
@since 1.8
"
      end

      operation 7992706 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 3
	  param in name "streamSize" explicit_type "long"
	  param in name "randomNumberOrigin" explicit_type "long"
	  param in name "randomNumberBound" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code long}, each conforming to the given origin
(inclusive) and bound (exclusive).

<p>A pseudorandom {@code long} value is generated as if it's the result
of calling the following method with the origin and bound:
<pre> {@code
long nextLong(long origin, long bound) {
  long r = nextLong();
  long n = bound - origin, m = n - 1;
  if ((n & m) == 0L)  // power of two
    r = (r & m) + origin;
  else if (n > 0L) {  // reject over-represented candidates
    for (long u = r >>> 1;            // ensure nonnegative
         u + m - (r = u % n) < 0L;    // rejection check
         u = nextLong() >>> 1) // retry
        ;
    r += origin;
  }
  else {              // range not representable as long
    while (r < origin || r >= bound)
      r = nextLong();
  }
  return r;
}}</pre>

@param streamSize the number of values to generate
@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code long} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code streamSize} is
        less than zero, or {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
@since 1.8
"
      end

      operation 7992834 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 2
	  param in name "randomNumberOrigin" explicit_type "long"
	  param in name "randomNumberBound" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
long} values, each conforming to the given origin (inclusive) and bound
(exclusive).

<p>A pseudorandom {@code long} value is generated as if it's the result
of calling the following method with the origin and bound:
<pre> {@code
long nextLong(long origin, long bound) {
  long r = nextLong();
  long n = bound - origin, m = n - 1;
  if ((n & m) == 0L)  // power of two
    r = (r & m) + origin;
  else if (n > 0L) {  // reject over-represented candidates
    for (long u = r >>> 1;            // ensure nonnegative
         u + m - (r = u % n) < 0L;    // rejection check
         u = nextLong() >>> 1) // retry
        ;
    r += origin;
  }
  else {              // range not representable as long
    while (r < origin || r >= bound)
      r = nextLong();
  }
  return r;
}}</pre>

@implNote This method is implemented to be equivalent to {@code
longs(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)}.

@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code long} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
@since 1.8
"
      end

      operation 7992962 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 1
	  param in name "streamSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code double} values, each between zero
(inclusive) and one (exclusive).

<p>A pseudorandom {@code double} value is generated as if it's the result
of calling the method {@link #nextDouble()}.

@param streamSize the number of values to generate
@return a stream of {@code double} values
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
@since 1.8
"
      end

      operation 7993090 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
double} values, each between zero (inclusive) and one
(exclusive).

<p>A pseudorandom {@code double} value is generated as if it's the result
of calling the method {@link #nextDouble()}.

@implNote This method is implemented to be equivalent to {@code
doubles(Long.MAX_VALUE)}.

@return a stream of pseudorandom {@code double} values
@since 1.8
"
      end

      operation 7993218 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 3
	  param in name "streamSize" explicit_type "long"
	  param in name "randomNumberOrigin" explicit_type "double"
	  param in name "randomNumberBound" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code double} values, each conforming to the given origin
(inclusive) and bound (exclusive).

<p>A pseudorandom {@code double} value is generated as if it's the result
of calling the following method with the origin and bound:
<pre> {@code
double nextDouble(double origin, double bound) {
  double r = nextDouble();
  r = r * (bound - origin) + origin;
  if (r >= bound) // correct for rounding
    r = Math.nextDown(bound);
  return r;
}}</pre>

@param streamSize the number of values to generate
@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code double} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
@since 1.8
"
      end

      operation 7993346 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 2
	  param in name "randomNumberOrigin" explicit_type "double"
	  param in name "randomNumberBound" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
double} values, each conforming to the given origin (inclusive) and bound
(exclusive).

<p>A pseudorandom {@code double} value is generated as if it's the result
of calling the following method with the origin and bound:
<pre> {@code
double nextDouble(double origin, double bound) {
  double r = nextDouble();
  r = r * (bound - origin) + origin;
  if (r >= bound) // correct for rounding
    r = Math.nextDown(bound);
  return r;
}}</pre>

@implNote This method is implemented to be equivalent to {@code
doubles(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)}.

@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code double} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
@since 1.8
"
      end

      class 1023746 "RandomIntsSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3361922 // <realization>
	  relation 3361922 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3361922 // <realization>
	    b parent class_ref 376578 // OfInt
	end

	classrelation 3362050 // rng (<unidirectional association>)
	  relation 3362050 --->
	    a role_name "rng" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3362050 // rng (<unidirectional association>)
	    b parent class_ref 934914 // Random
	end

	attribute 1854338 "index"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1854466 "fence"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1854594 "origin"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1854722 "bound"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7993474 "RandomIntsSpliterator"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "rng" type class_ref 934914 // Random
	    param in name "index" explicit_type "long"
	    param in name "fence" explicit_type "long"
	    param in name "origin" explicit_type "int"
	    param in name "bound" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7993602 "trySplit"
	  public return_type class_ref 1023746 // RandomIntsSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7993730 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7993858 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7993986 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7994114 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1023874 "RandomLongsSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3362178 // <realization>
	  relation 3362178 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3362178 // <realization>
	    b parent class_ref 376834 // OfLong
	end

	classrelation 3362306 // rng (<unidirectional association>)
	  relation 3362306 --->
	    a role_name "rng" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3362306 // rng (<unidirectional association>)
	    b parent class_ref 934914 // Random
	end

	attribute 1854850 "index"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1854978 "fence"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1855106 "origin"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1855234 "bound"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7994242 "RandomLongsSpliterator"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "rng" type class_ref 934914 // Random
	    param in name "index" explicit_type "long"
	    param in name "fence" explicit_type "long"
	    param in name "origin" explicit_type "long"
	    param in name "bound" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7994370 "trySplit"
	  public return_type class_ref 1023874 // RandomLongsSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7994498 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7994626 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7994754 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7994882 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1024002 "RandomDoublesSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3362434 // <realization>
	  relation 3362434 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3362434 // <realization>
	    b parent class_ref 377090 // OfDouble
	end

	classrelation 3362562 // rng (<unidirectional association>)
	  relation 3362562 --->
	    a role_name "rng" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3362562 // rng (<unidirectional association>)
	    b parent class_ref 934914 // Random
	end

	attribute 1855362 "index"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1855490 "fence"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1855618 "origin"
	  const_attribute package explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1855746 "bound"
	  const_attribute package explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7995010 "RandomDoublesSpliterator"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "rng" type class_ref 934914 // Random
	    param in name "index" explicit_type "long"
	    param in name "fence" explicit_type "long"
	    param in name "origin" explicit_type "double"
	    param in name "bound" explicit_type "double"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7995138 "trySplit"
	  public return_type class_ref 1024002 // RandomDoublesSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7995266 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7995394 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7995522 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7995650 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3362690 // serialPersistentFields (<unidirectional association>)
	relation 3362690 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"seed\", Long.TYPE),
        new ObjectStreamField(\"nextNextGaussian\", Double.TYPE),
        new ObjectStreamField(\"haveNextNextGaussian\", Boolean.TYPE)
    }" class_relation const_relation private
	    comment "
Serializable fields for Random.

@serialField    seed long
             seed for random computations
@serialField    nextNextGaussian double
             next Gaussian to be returned
@serialField      haveNextNextGaussian boolean
             nextNextGaussian is valid

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3362690 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 7995778 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the {@code Random} instance from a stream (that is,
deserialize it).
"
      end

      operation 7995906 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the {@code Random} instance to a stream.
"
      end

      attribute 1855874 "unsafe"
	class_attribute const_attribute private explicit_type "Unsafe"
	init_value " Unsafe.getUnsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Support for resetting seed while deserializing
"
      end

      attribute 1856002 "seedOffset"
	class_attribute const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 167554 "initialization"
	
	cpp "" ""
	java "  static {
        try {
            seedOffset = unsafe.objectFieldOffset
                (Random.class.getDeclaredField(\"seed\"));
        } catch (Exception ex) { throw new Error(ex); }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 7996034 "resetSeed"
	private explicit_return_type "void"
	nparams 1
	  param in name "seedVal" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 994690 "ConcurrentModificationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception may be thrown by methods that have detected concurrent
modification of an object when such modification is not permissible.
<p>
For example, it is not generally permissible for one thread to modify a Collection
while another thread is iterating over it.  In general, the results of the
iteration are undefined under these circumstances.  Some Iterator
implementations (including those of all the general purpose collection implementations
provided by the JRE) may choose to throw this exception if this behavior is
detected.  Iterators that do this are known as <i>fail-fast</i> iterators,
as they fail quickly and cleanly, rather that risking arbitrary,
non-deterministic behavior at an undetermined time in the future.
<p>
Note that this exception does not always indicate that an object has
been concurrently modified by a <i>different</i> thread.  If a single
thread issues a sequence of method invocations that violates the
contract of an object, the object may throw this exception.  For
example, if a thread modifies a collection directly while it is
iterating over the collection with a fail-fast iterator, the iterator
will throw this exception.

<p>Note that fail-fast behavior cannot be guaranteed as it is, generally
speaking, impossible to make any hard guarantees in the presence of
unsynchronized concurrent modification.  Fail-fast operations
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>{@code ConcurrentModificationException}
should be used only to detect bugs.</i>

@author  Josh Bloch
@see     Collection
@see     Iterator
@see     Spliterator
@see     ListIterator
@see     Vector
@see     LinkedList
@see     HashSet
@see     Hashtable
@see     TreeMap
@see     AbstractList
@since   1.2
"
      classrelation 3309826 // <generalisation>
	relation 3309826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3309826 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1818626 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3666751008965953603L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7825922 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ConcurrentModificationException with no
detail message.
"
      end

      operation 7826050 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code ConcurrentModificationException} with the
specified detail message.

@param message the detail message pertaining to this exception.
"
      end

      operation 7826178 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified cause and a detail
message of {@code (cause==null ? null : cause.toString())} (which
typically contains the class and detail message of {@code cause}.

@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.7
"
      end

      operation 7826306 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message and
cause.

<p>Note that the detail message associated with <code>cause</code> is
<i>not</i> automatically incorporated in this exception's detail
message.

@param  message the detail message (which is saved for later retrieval
        by the {@link Throwable#getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A {@code null} value
        is permitted, and indicates that the cause is nonexistent or
        unknown.)
@since 1.7
"
      end
    end

    class 998530 "ArrayDeque"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 184066 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 1064450 // Deque
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Resizable-array implementation of the {@link Deque} interface.  Array
deques have no capacity restrictions; they grow as necessary to support
usage.  They are not thread-safe; in the absence of external
synchronization, they do not support concurrent access by multiple threads.
Null elements are prohibited.  This class is likely to be faster than
{@link Stack} when used as a stack, and faster than {@link LinkedList}
when used as a queue.

<p>Most {@code ArrayDeque} operations run in amortized constant time.
Exceptions include {@link #remove(Object) remove}, {@link
#removeFirstOccurrence removeFirstOccurrence}, {@link #removeLastOccurrence
removeLastOccurrence}, {@link #contains contains}, {@link #iterator
iterator.remove()}, and the bulk operations, all of which run in linear
time.

<p>The iterators returned by this class's {@code iterator} method are
<i>fail-fast</i>: If the deque is modified at any time after the iterator
is created, in any way except through the iterator's own {@code remove}
method, the iterator will generally throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the
future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class and its iterator implement all of the
<em>optional</em> methods of the {@link Collection} and {@link
Iterator} interfaces.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch and Doug Lea
@since   1.6
@param <E> the type of elements held in this collection
"
      classrelation 3475714 // <realization>
	relation 3475714 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475714 // <realization>
	  b parent class_ref 184066 // AbstractCollection
      end

      classrelation 3475970 // <realization>
	relation 3475970 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475970 // <realization>
	  b parent class_ref 1064450 // Deque
      end

      classrelation 3476098 // <realization>
	relation 3476098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3476098 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3476226 // <realization>
	relation 3476226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3476226 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3476354 // elements (<unidirectional association>)
	relation 3476354 --->
	  a role_name "elements" multiplicity "[]" package
	    comment "
The array in which the elements of the deque are stored.
The capacity of the deque is the length of this array, which is
always a power of two. The array is never allowed to become
full, except transiently within an addX method where it is
resized (see doubleCapacity) immediately upon becoming full,
thus avoiding head and tail wrapping around to equal each
other.  We also guarantee that all array cells not holding
deque elements are always null.

 non-private to simplify nested class access"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3476354 // elements (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1979138 "head"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the element at the head of the deque (which is the
element that would be removed by remove() or pop()); or an
arbitrary number equal to tail if the deque is empty.

"
      end

      attribute 1979266 "tail"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index at which the next element would be added to the tail
of the deque (via addLast(E), add(E), or push(E)).

"
      end

      attribute 1979394 "MIN_INITIAL_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum capacity that we'll use for a newly created deque.
Must be a power of 2.

"
      end

      operation 8589954 "allocateElements"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "numElements" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ******  Array allocation and resizing utilities ******

Allocates empty array to hold the given number of elements.

@param numElements  the number of elements to hold
"
      end

      operation 8590082 "doubleCapacity"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Doubles the capacity of this deque.  Call only when full, i.e.,
when head and tail have wrapped around to become equal.
"
      end

      operation 8590210 "copyElements"
	cpp_inline private explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the elements from our element array into the specified array,
in order (from first to last element in the deque).  It is assumed
that the array is large enough to hold all elements in the deque.

@return its argument
"
      end

      operation 8590338 "ArrayDeque"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty array deque with an initial capacity
sufficient to hold 16 elements.
"
      end

      operation 8590466 "ArrayDeque"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "numElements" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty array deque with an initial capacity
sufficient to hold the specified number of elements.

@param numElements  lower bound on initial capacity of the deque
"
      end

      operation 8590594 "ArrayDeque"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a deque containing the elements of the specified
collection, in the order they are returned by the collection's
iterator.  (The first element returned by the collection's
iterator becomes the first element, or <i>front</i> of the
deque.)

@param c the collection whose elements are to be placed into the deque
@throws NullPointerException if the specified collection is null
"
      end

      operation 8590722 "addFirst"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The main insertion and extraction methods are addFirst,
 addLast, pollFirst, pollLast. The other methods are defined in
 terms of these.

Inserts the specified element at the front of this deque.

@param e the element to add
@throws NullPointerException if the specified element is null
"
      end

      operation 8590850 "addLast"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque.

<p>This method is equivalent to {@link #add}.

@param e the element to add
@throws NullPointerException if the specified element is null
"
      end

      operation 8590978 "offerFirst"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the front of this deque.

@param e the element to add
@return {@code true} (as specified by {@link Deque#offerFirst})
@throws NullPointerException if the specified element is null
"
      end

      operation 8591106 "offerLast"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque.

@param e the element to add
@return {@code true} (as specified by {@link Deque#offerLast})
@throws NullPointerException if the specified element is null
"
      end

      operation 8591234 "removeFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8591362 "removeLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8591490 "pollFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8591618 "pollLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8591746 "getFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8591874 "getLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8592002 "peekFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8592130 "peekLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8592258 "removeFirstOccurrence"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element in this
deque (when traversing the deque from head to tail).
If the deque does not contain the element, it is unchanged.
More formally, removes the first element {@code e} such that
{@code o.equals(e)} (if such an element exists).
Returns {@code true} if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return {@code true} if the deque contained the specified element
"
      end

      operation 8592386 "removeLastOccurrence"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last occurrence of the specified element in this
deque (when traversing the deque from head to tail).
If the deque does not contain the element, it is unchanged.
More formally, removes the last element {@code e} such that
{@code o.equals(e)} (if such an element exists).
Returns {@code true} if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return {@code true} if the deque contained the specified element
"
      end

      operation 8592514 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Queue methods ***

Inserts the specified element at the end of this deque.

<p>This method is equivalent to {@link #addLast}.

@param e the element to add
@return {@code true} (as specified by {@link Collection#add})
@throws NullPointerException if the specified element is null
"
      end

      operation 8592642 "offer"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque.

<p>This method is equivalent to {@link #offerLast}.

@param e the element to add
@return {@code true} (as specified by {@link Queue#offer})
@throws NullPointerException if the specified element is null
"
      end

      operation 8592770 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque.

This method differs from {@link #poll poll} only in that it throws an
exception if this deque is empty.

<p>This method is equivalent to {@link #removeFirst}.

@return the head of the queue represented by this deque
@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8592898 "poll"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque
(in other words, the first element of this deque), or returns
{@code null} if this deque is empty.

<p>This method is equivalent to {@link #pollFirst}.

@return the head of the queue represented by this deque, or
        {@code null} if this deque is empty
"
      end

      operation 8593026 "element"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque.  This method differs from {@link #peek peek} only in
that it throws an exception if this deque is empty.

<p>This method is equivalent to {@link #getFirst}.

@return the head of the queue represented by this deque
@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8593154 "peek"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque, or returns {@code null} if this deque is empty.

<p>This method is equivalent to {@link #peekFirst}.

@return the head of the queue represented by this deque, or
        {@code null} if this deque is empty
"
      end

      operation 8593282 "push"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Stack methods ***

Pushes an element onto the stack represented by this deque.  In other
words, inserts the element at the front of this deque.

<p>This method is equivalent to {@link #addFirst}.

@param e the element to push
@throws NullPointerException if the specified element is null
"
      end

      operation 8593410 "pop"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops an element from the stack represented by this deque.  In other
words, removes and returns the first element of this deque.

<p>This method is equivalent to {@link #removeFirst()}.

@return the element at the front of this deque (which is the top
        of the stack represented by this deque)
@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8593538 "checkInvariants"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8593666 "delete"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in the elements array,
adjusting head and tail as necessary.  This can result in motion of
elements backwards or forwards in the array.

<p>This method is called delete rather than remove to emphasize
that its semantics differ from those of {@link List#remove(int)}.

@return true if elements moved backwards
"
      end

      operation 8593794 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Collection Methods ***

Returns the number of elements in this deque.

@return the number of elements in this deque
"
      end

      operation 8593922 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this deque contains no elements.

@return {@code true} if this deque contains no elements
"
      end

      operation 8594050 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this deque.  The elements
will be ordered from first (head) to last (tail).  This is the same
order that elements would be dequeued (via successive calls to
{@link #remove} or popped (via successive calls to {@link #pop}).

@return an iterator over the elements in this deque
"
      end

      operation 8594178 "descendingIterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1064578 "DeqIterator"
	visibility private 
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3476482 // <realization>
	  relation 3476482 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3476482 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 1979522 "cursor"
	  private explicit_type "int"
	  init_value " head"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Index of element to be returned by subsequent call to next.

"
	end

	attribute 1979650 "fence"
	  private explicit_type "int"
	  init_value " tail"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Tail recorded at construction (also in remove), to stop
iterator and also to check for comodification.

"
	end

	attribute 1979778 "lastRet"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Index of element returned by most recent call to next.
Reset to -1 if element is deleted by a call to remove.

"
	end

	operation 8594306 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8594434 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8594562 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8594690 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1064706 "DescendingIterator"
	visibility private 
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3476610 // <realization>
	  relation 3476610 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3476610 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 1979906 "cursor"
	  private explicit_type "int"
	  init_value " tail"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This class is nearly a mirror-image of DeqIterator, using
tail instead of head for initial cursor, and head instead of
tail for fence.

"
	end

	attribute 1980034 "fence"
	  private explicit_type "int"
	  init_value " head"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1980162 "lastRet"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8594818 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8594946 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8595074 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8595202 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this deque contains the specified element.
More formally, returns {@code true} if and only if this deque contains
at least one element {@code e} such that {@code o.equals(e)}.

@param o object to be checked for containment in this deque
@return {@code true} if this deque contains the specified element
"
      end

      operation 8595330 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a single instance of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the first element {@code e} such that
{@code o.equals(e)} (if such an element exists).
Returns {@code true} if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

<p>This method is equivalent to {@link #removeFirstOccurrence(Object)}.

@param o element to be removed from this deque, if present
@return {@code true} if this deque contained the specified element
"
      end

      operation 8595458 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this deque.
The deque will be empty after this call returns.
"
      end

      operation 8595586 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this deque
in proper sequence (from first to last element).

<p>The returned array will be \"safe\" in that no references to it are
maintained by this deque.  (In other words, this method must allocate
a new array).  The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all of the elements in this deque
"
      end

      operation 8595714 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all of the elements in this deque in
proper sequence (from first to last element); the runtime type of the
returned array is that of the specified array.  If the deque fits in
the specified array, it is returned therein.  Otherwise, a new array
is allocated with the runtime type of the specified array and the
size of this deque.

<p>If this deque fits in the specified array with room to spare
(i.e., the array has more elements than this deque), the element in
the array immediately following the end of the deque is set to
{@code null}.

<p>Like the {@link #toArray()} method, this method acts as bridge between
array-based and collection-based APIs.  Further, this method allows
precise control over the runtime type of the output array, and may,
under certain circumstances, be used to save allocation costs.

<p>Suppose {@code x} is a deque known to contain only strings.
The following code can be used to dump the deque into a newly
allocated array of {@code String}:

 <pre> {@code String[] y = x.toArray(new String[0]);}</pre>

Note that {@code toArray(new Object[0])} is identical in function to
{@code toArray()}.

@param a the array into which the elements of the deque are to
         be stored, if it is big enough; otherwise, a new array of the
         same runtime type is allocated for this purpose
@return an array containing all of the elements in this deque
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in
        this deque
@throws NullPointerException if the specified array is null
"
      end

      operation 8595842 "clone"
	cpp_inline public return_type class_ref 998530 // ArrayDeque
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Object methods ***

Returns a copy of this deque.

@return a copy of this deque
"
      end

      attribute 1980290 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2340985798034038923L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8595970 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Saves this deque to a stream (that is, serializes it).

@serialData The current size ({@code int}) of the deque,
followed by all of its elements (each an object reference) in
first-to-last order.
"
      end

      operation 8596098 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitutes this deque from a stream (that is, deserializes it).
"
      end

      operation 8596226 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <em><a href=\"Spliterator.html#binding\">late-binding</a></em>
and <em>fail-fast</em> {@link Spliterator} over the elements in this
deque.

<p>The {@code Spliterator} reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#NONNULL}.  Overriding implementations should document
the reporting of additional characteristic values.

@return a {@code Spliterator} over the elements in this deque
@since 1.8
"
      end

      class 1064834 "DeqSpliterator"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3476738 // <realization>
	  relation 3476738 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3476738 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	classrelation 3476866 // deq (<unidirectional association>)
	  relation 3476866 --->
	    a role_name "deq" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3476866 // deq (<unidirectional association>)
	    b parent class_ref 998530 // ArrayDeque
	end

	attribute 1980418 "fence"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " -1 until first use"
	end

	attribute 1980546 "index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on traverse/split"
	end

	operation 8596354 "DeqSpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "deq" type class_ref 998530 // ArrayDeque
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Creates new spliterator covering the given array and range "
	end

	operation 8596482 "getFence"
	  cpp_inline private explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8596610 "trySplit"
	  cpp_inline public return_type class_ref 1064834 // DeqSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8596738 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8596866 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8596994 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8597122 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1014658 "InvalidPropertiesFormatException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that an operation could not complete because
the input did not conform to the appropriate XML document type
for a collection of properties, as per the {@link Properties}
specification.<p>

Note, that although InvalidPropertiesFormatException inherits Serializable
interface from Exception, it is not intended to be Serializable. Appropriate
serialization methods are implemented to throw NotSerializableException.

@see     Properties
@since   1.5
@serial exclude
"
      classrelation 3525378 // <generalisation>
	relation 3525378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3525378 // <generalisation>
	  b parent class_ref 146818 // IOException
      end

      attribute 2056834 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7763056076009360219L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8829570 "InvalidPropertiesFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidPropertiesFormatException with the specified
cause.

@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).
"
      end

      operation 8829698 "InvalidPropertiesFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidPropertiesFormatException with the specified
detail message.

@param   message   the detail message. The detail message is saved for
         later retrieval by the {@link Throwable#getMessage()} method.
"
      end

      operation 8829826 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 925442 // NotSerializableException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws NotSerializableException, since InvalidPropertiesFormatException
objects are not intended to be serializable.
"
      end

      operation 8829954 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 1
	  exception class_ref 925442 // NotSerializableException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws NotSerializableException, since InvalidPropertiesFormatException
objects are not intended to be serializable.
"
      end
    end

    class 1046018 "Currency"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a currency. Currencies are identified by their ISO 4217 currency
codes. Visit the <a href=\"http://www.iso.org/iso/home/standards/currency_codes.htm\">
ISO web site</a> for more information.
<p>
The class is designed so that there's never more than one
<code>Currency</code> instance for any given currency. Therefore, there's
no public constructor. You obtain a <code>Currency</code> instance using
the <code>getInstance</code> methods.
<p>
Users can supersede the Java runtime currency data by means of the system
property {@code java.util.currency.data}. If this system property is
defined then its value is the location of a properties file, the contents of
which are key/value pairs of the ISO 3166 country codes and the ISO 4217
currency data respectively.  The value part consists of three ISO 4217 values
of a currency, i.e., an alphabetic code, a numeric code, and a minor unit.
Those three ISO 4217 values are separated by commas.
The lines which start with '#'s are considered comment lines. An optional UTC
timestamp may be specified per currency entry if users need to specify a
cutover date indicating when the new data comes into effect. The timestamp is
appended to the end of the currency properties and uses a comma as a separator.
If a UTC datestamp is present and valid, the JRE will only use the new currency
properties if the current UTC date is later than the date specified at class
loading time. The format of the timestamp must be of ISO 8601 format :
{@code 'yyyy-MM-dd'T'HH:mm:ss'}. For example,
<p>
<code>
#Sample currency properties<br>
JP=JPZ,999,0
</code>
<p>
will supersede the currency data for Japan.

<p>
<code>
#Sample currency properties with cutover date<br>
JP=JPZ,999,0,2014-01-01T00:00:00
</code>
<p>
will supersede the currency data for Japan if {@code Currency} class is loaded after
1st January 2014 00:00:00 GMT.
<p>
Where syntactically malformed entries are encountered, the entry is ignored
and the remainder of entries in file are processed. For instances where duplicate
country code entries exist, the behavior of the Currency information for that
{@code Currency} is undefined and the remainder of entries in file are processed.

@since 1.4
"
      classrelation 3511554 // <realization>
	relation 3511554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3511554 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2032130 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -158308464356906721L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3511682 // currencyCode (<unidirectional association>)
	relation 3511682 --->
	  a role_name "currencyCode" const_relation private
	    comment "
ISO 4217 currency code for this currency.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3511682 // currencyCode (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2032258 "defaultFractionDigits"
	const_attribute private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default fraction digits for this currency.
Set from currency data tables.

"
      end

      attribute 2032386 "numericCode"
	const_attribute private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ISO 4217 numeric code for this currency.
Set from currency data tables.

"
      end

      classrelation 3511810 // instances (<unidirectional association>)
	relation 3511810 --->
	  a role_name "instances" init_value " new ConcurrentHashMap<>(7)" class_relation private
	    comment " class data: instance map
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Currency> ${name}${value};
"
	    classrelation_ref 3511810 // instances (<unidirectional association>)
	  b parent class_ref 130690 // ConcurrentMap
      end

      classrelation 3511938 // available (<unidirectional association>)
	relation 3511938 --->
	  a role_name "available" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Currency> ${name}${value};
"
	    classrelation_ref 3511938 // available (<unidirectional association>)
	  b parent class_ref 388482 // HashSet
      end

      attribute 2032514 "formatVersion"
	class_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Class data: currency data obtained from currency.data file.
 Purpose:
 - determine valid country codes
 - determine valid currency codes
 - map country codes to currency codes
 - obtain default fraction digits for currency codes

 sc = special case; dfd = default fraction digits
 Simple countries are those where the country code is a prefix of the
 currency code, and there are no known plans to change the currency.

 table formats:
 - mainTable:
   - maps country code to 32-bit int
   - 26*26 entries, corresponding to [A-Z]*[A-Z]
   - \\u007F -> not valid country
   - bits 20-31: unused
   - bits 10-19: numeric code (0 to 1023)
   - bit 9: 1 - special case, bits 0-4 indicate which one
            0 - simple country, bits 0-4 indicate final char of currency code
   - bits 5-8: fraction digits for simple countries, 0 for special cases
   - bits 0-4: final char for currency code for simple country, or ID of special case
 - special case IDs:
   - 0: country has no currency
   - other: index into sc* arrays + 1
 - scCutOverTimes: cut-over time in millis as returned by
   System.currentTimeMillis for special case countries that are changing
   currencies; Long.MAX_VALUE for countries that are not changing currencies
 - scOldCurrencies: old currencies for special case countries
 - scNewCurrencies: new currencies for special case countries that are
   changing currencies; null for others
 - scOldCurrenciesDFD: default fraction digits for old currencies
 - scNewCurrenciesDFD: default fraction digits for new currencies, 0 for
   countries that are not changing currencies
 - otherCurrencies: concatenation of all currency codes that are not the
   main currency of a simple country, separated by \"-\"
 - otherCurrenciesDFD: decimal format digits for currencies in otherCurrencies, same order
"
      end

      attribute 2032642 "dataVersion"
	class_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2032770 "mainTable"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2032898 "scCutOverTimes"
	class_attribute package explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3512066 // scOldCurrencies (<unidirectional association>)
	relation 3512066 --->
	  a role_name "scOldCurrencies" multiplicity "[]" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3512066 // scOldCurrencies (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3512194 // scNewCurrencies (<unidirectional association>)
	relation 3512194 --->
	  a role_name "scNewCurrencies" multiplicity "[]" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3512194 // scNewCurrencies (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2033026 "scOldCurrenciesDFD"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2033154 "scNewCurrenciesDFD"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2033282 "scOldCurrenciesNumericCode"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2033410 "scNewCurrenciesNumericCode"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3512322 // otherCurrencies (<unidirectional association>)
	relation 3512322 --->
	  a role_name "otherCurrencies" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3512322 // otherCurrencies (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2033538 "otherCurrenciesDFD"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2033666 "otherCurrenciesNumericCode"
	class_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2033794 "MAGIC_NUMBER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x43757244"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " handy constants - must match definitions in GenerateCurrencyData
 magic number
"
      end

      attribute 2033922 "A_TO_Z"
	class_attribute const_attribute private explicit_type "int"
	init_value " ('Z' - 'A') + 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of characters from A to Z
"
      end

      attribute 2034050 "INVALID_COUNTRY_ENTRY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0000007F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " entry for invalid country codes
"
      end

      attribute 2034178 "COUNTRY_WITHOUT_CURRENCY_ENTRY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " entry for countries without currency
"
      end

      attribute 2034306 "SIMPLE_CASE_COUNTRY_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for simple case country entries
"
      end

      attribute 2034434 "SIMPLE_CASE_COUNTRY_FINAL_CHAR_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0000001F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for simple case country entry final character
"
      end

      attribute 2034562 "SIMPLE_CASE_COUNTRY_DEFAULT_DIGITS_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x000001E0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for simple case country entry default currency digits
"
      end

      attribute 2034690 "SIMPLE_CASE_COUNTRY_DEFAULT_DIGITS_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " shift count for simple case country entry default currency digits
"
      end

      attribute 2034818 "SIMPLE_CASE_COUNTRY_MAX_DEFAULT_DIGITS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " maximum number for simple case country entry default currency digits
"
      end

      attribute 2034946 "SPECIAL_CASE_COUNTRY_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for special case country entries
"
      end

      attribute 2035074 "SPECIAL_CASE_COUNTRY_INDEX_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0000001F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for special case country index
"
      end

      attribute 2035202 "SPECIAL_CASE_COUNTRY_INDEX_DELTA"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " delta from entry index component in main table to index into special case tables
"
      end

      attribute 2035330 "COUNTRY_TYPE_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " SIMPLE_CASE_COUNTRY_MASK | SPECIAL_CASE_COUNTRY_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for distinguishing simple and special case countries
"
      end

      attribute 2035458 "NUMERIC_CODE_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x000FFC00"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for the numeric code of the currency
"
      end

      attribute 2035586 "NUMERIC_CODE_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " shift count for the numeric code of the currency
"
      end

      attribute 2035714 "VALID_FORMAT_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Currency data format version
"
      end

      extra_member 172290 "initialization"
	
	cpp "" ""
	java "  static {
        AccessController.doPrivileged(new PrivilegedAction<Void>() {
            @Override
            public Void run() {
                String homeDir = System.getProperty(\"java.home\");
                try {
                    String dataFile = homeDir + File.separator +
                            \"lib\" + File.separator + \"currency.data\";
                    try (DataInputStream dis = new DataInputStream(
                             new BufferedInputStream(
                             new FileInputStream(dataFile)))) {
                        if (dis.readInt() != MAGIC_NUMBER) {
                            throw new InternalError(\"Currency data is possibly corrupted\");
                        }
                        formatVersion = dis.readInt();
                        if (formatVersion != VALID_FORMAT_VERSION) {
                            throw new InternalError(\"Currency data format is incorrect\");
                        }
                        dataVersion = dis.readInt();
                        mainTable = readIntArray(dis, A_TO_Z * A_TO_Z);
                        int scCount = dis.readInt();
                        scCutOverTimes = readLongArray(dis, scCount);
                        scOldCurrencies = readStringArray(dis, scCount);
                        scNewCurrencies = readStringArray(dis, scCount);
                        scOldCurrenciesDFD = readIntArray(dis, scCount);
                        scNewCurrenciesDFD = readIntArray(dis, scCount);
                        scOldCurrenciesNumericCode = readIntArray(dis, scCount);
                        scNewCurrenciesNumericCode = readIntArray(dis, scCount);
                        int ocCount = dis.readInt();
                        otherCurrencies = dis.readUTF();
                        otherCurrenciesDFD = readIntArray(dis, ocCount);
                        otherCurrenciesNumericCode = readIntArray(dis, ocCount);
                    }
                } catch (IOException e) {
                    throw new InternalError(e);
                }

                // look for the properties file for overrides
                String propsFile = System.getProperty(\"java.util.currency.data\");
                if (propsFile == null) {
                    propsFile = homeDir + File.separator + \"lib\" +
                        File.separator + \"currency.properties\";
                }
                try {
                    File propFile = new File(propsFile);
                    if (propFile.exists()) {
                        Properties props = new Properties();
                        try (FileReader fr = new FileReader(propFile)) {
                            props.load(fr);
                        }
                        Set<String> keys = props.stringPropertyNames();
                        Pattern propertiesPattern =
                            Pattern.compile(\"([A-Z]{3})\\\\s*,\\\\s*(\\\\d{3})\\\\s*,\\\\s*\" +
                                \"(\\\\d+)\\\\s*,?\\\\s*(\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\" +
                                \"\\\\d{2}:\\\\d{2})?\");
                        for (String key : keys) {
                           replaceCurrencyData(propertiesPattern,
                               key.toUpperCase(Locale.ROOT),
                               props.getProperty(key).toUpperCase(Locale.ROOT));
                        }
                    }
                } catch (IOException e) {
                    info(\"currency.properties is ignored because of an IOException\", e);
                }
                return null;
            }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 2035842 "SYMBOL"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constants for retrieving localized names from the name providers.

"
      end

      attribute 2035970 "DISPLAYNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8769282 "Currency"
	private explicit_return_type ""
	nparams 3
	  param inout name "currencyCode" type class_ref 128130 // String
	  param in name "defaultFractionDigits" explicit_type "int"
	  param in name "numericCode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>Currency</code> instance. The constructor is private
so that we can insure that there's never more than one instance for a
given currency.
"
      end

      operation 8769410 "getInstance"
	class_operation public return_type class_ref 1046018 // Currency
	nparams 1
	  param inout name "currencyCode" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Currency</code> instance for the given currency code.

@param currencyCode the ISO 4217 code of the currency
@return the <code>Currency</code> instance for the given currency code
@exception NullPointerException if <code>currencyCode</code> is null
@exception IllegalArgumentException if <code>currencyCode</code> is not
a supported ISO 4217 code.
"
      end

      operation 8769538 "getInstance"
	class_operation private return_type class_ref 1046018 // Currency
	nparams 3
	  param inout name "currencyCode" type class_ref 128130 // String
	  param in name "defaultFractionDigits" explicit_type "int"
	  param in name "numericCode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8769666 "getInstance"
	class_operation public return_type class_ref 1046018 // Currency
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Currency</code> instance for the country of the
given locale. The language and variant components of the locale
are ignored. The result may vary over time, as countries change their
currencies. For example, for the original member countries of the
European Monetary Union, the method returns the old national currencies
until December 31, 2001, and the Euro from January 1, 2002, local time
of the respective countries.
<p>
The method returns <code>null</code> for territories that don't
have a currency, such as Antarctica.

@param locale the locale for whose country a <code>Currency</code>
instance is needed
@return the <code>Currency</code> instance for the country of the given
locale, or {@code null}
@exception NullPointerException if <code>locale</code> or its country
code is {@code null}
@exception IllegalArgumentException if the country of the given {@code locale}
is not a supported ISO 3166 country code.
"
      end

      operation 8769794 "getAvailableCurrencies"
	class_operation public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Currency> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the set of available currencies.  The returned set of currencies
contains all of the available currencies, which may include currencies
that represent obsolete ISO 4217 codes.  The set can be modified
without affecting the available currencies in the runtime.

@return the set of available currencies.  If there is no currency
   available in the runtime, the returned set is empty.
@since 1.7
"
      end

      operation 8769922 "getCurrencyCode"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ISO 4217 currency code of this currency.

@return the ISO 4217 currency code of this currency.
"
      end

      operation 8770050 "getSymbol"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the symbol of this currency for the default
{@link Locale.Category#DISPLAY DISPLAY} locale.
For example, for the US Dollar, the symbol is \"$\" if the default
locale is the US, while for other locales it may be \"US$\". If no
symbol can be determined, the ISO 4217 currency code is returned.
<p>
This is equivalent to calling
{@link #getSymbol(Locale)
    getSymbol(Locale.getDefault(Locale.Category.DISPLAY))}.

@return the symbol of this currency for the default
    {@link Locale.Category#DISPLAY DISPLAY} locale
"
      end

      operation 8770178 "getSymbol"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the symbol of this currency for the specified locale.
For example, for the US Dollar, the symbol is \"$\" if the specified
locale is the US, while for other locales it may be \"US$\". If no
symbol can be determined, the ISO 4217 currency code is returned.

@param locale the locale for which a display name for this currency is
needed
@return the symbol of this currency for the specified locale
@exception NullPointerException if <code>locale</code> is null
"
      end

      operation 8770306 "getDefaultFractionDigits"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the default number of fraction digits used with this currency.
For example, the default number of fraction digits for the Euro is 2,
while for the Japanese Yen it's 0.
In the case of pseudo-currencies, such as IMF Special Drawing Rights,
-1 is returned.

@return the default number of fraction digits used with this currency
"
      end

      operation 8770434 "getNumericCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ISO 4217 numeric code of this currency.

@return the ISO 4217 numeric code of this currency
@since 1.7
"
      end

      operation 8770562 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name that is suitable for displaying this currency for
the default {@link Locale.Category#DISPLAY DISPLAY} locale.
If there is no suitable display name found
for the default locale, the ISO 4217 currency code is returned.
<p>
This is equivalent to calling
{@link #getDisplayName(Locale)
    getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))}.

@return the display name of this currency for the default
    {@link Locale.Category#DISPLAY DISPLAY} locale
@since 1.7
"
      end

      operation 8770690 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name that is suitable for displaying this currency for
the specified locale.  If there is no suitable display name found
for the specified locale, the ISO 4217 currency code is returned.

@param locale the locale for which a display name for this currency is
needed
@return the display name of this currency for the specified locale
@exception NullPointerException if <code>locale</code> is null
@since 1.7
"
      end

      operation 8770818 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the ISO 4217 currency code of this currency.

@return the ISO 4217 currency code of this currency
"
      end

      operation 8770946 "readResolve"
	private return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves instances being deserialized to a single instance per currency.
"
      end

      operation 8771074 "getMainTableEntry"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "char1" explicit_type "char"
	  param in name "char2" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the main table entry for the country whose country code consists
of char1 and char2.
"
      end

      operation 8771202 "setMainTableEntry"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "char1" explicit_type "char"
	  param in name "char2" explicit_type "char"
	  param in name "entry" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the main table entry for the country whose country code consists
of char1 and char2.
"
      end

      class 1080066 "CurrencyNameGetter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3512578 // INSTANCE (<unidirectional association>)
	  relation 3512578 --->
	    a role_name "INSTANCE" init_value " new CurrencyNameGetter()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3512578 // INSTANCE (<unidirectional association>)
	    b parent class_ref 1080066 // CurrencyNameGetter
	end

	operation 8771330 "getObject"
	  public return_type class_ref 128130 // String
	  nparams 4
	    param inout name "currencyNameProvider" type class_ref 1080194 // CurrencyNameProvider
	    param inout name "locale" type class_ref 312962 // Locale
	    param inout name "key" type class_ref 128130 // String
	    param inout name "" explicit_type "Object...params"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8771458 "readIntArray"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "dis" type class_ref 172930 // DataInputStream
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8771586 "readLongArray"
	class_operation private explicit_return_type "long"
	nparams 2
	  param inout name "dis" type class_ref 172930 // DataInputStream
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8771714 "readStringArray"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "dis" type class_ref 172930 // DataInputStream
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8771842 "replaceCurrencyData"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "pattern" type class_ref 417154 // Pattern
	  param inout name "ctry" type class_ref 128130 // String
	  param inout name "curdata" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces currency data found in the currencydata.properties file

@param pattern regex pattern for the properties
@param ctry country code
@param curdata currency data.  This is a comma separated string that
   consists of \"three-letter alphabet code\", \"three-digit numeric code\",
   and \"one-digit (0-9) default fraction digit\".
   For example, \"JPZ,392,0\".
   An optional UTC date can be appended to the string (comma separated)
   to allow a currency change take effect after date specified.
   For example, \"JP=JPZ,999,0,2014-01-01T00:00:00\" has no effect unless
   UTC time is past 1st January 2014 00:00:00 GMT.
"
      end

      operation 8771970 "isPastCutoverDate"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 372482 // ParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8772098 "countOccurrences"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param in name "match" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8772226 "info"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "t" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1063426 "NavigableMap"
      visibility public stereotype "interface"
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 500354 // SortedMap
        rank 0 explicit_value ""
      actual class class_ref 500354 // SortedMap
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link SortedMap} extended with navigation methods returning the
closest matches for given search targets. Methods
{@code lowerEntry}, {@code floorEntry}, {@code ceilingEntry},
and {@code higherEntry} return {@code Map.Entry} objects
associated with keys respectively less than, less than or equal,
greater than or equal, and greater than a given key, returning
{@code null} if there is no such key.  Similarly, methods
{@code lowerKey}, {@code floorKey}, {@code ceilingKey}, and
{@code higherKey} return only the associated keys. All of these
methods are designed for locating, not traversing entries.

<p>A {@code NavigableMap} may be accessed and traversed in either
ascending or descending key order.  The {@code descendingMap}
method returns a view of the map with the senses of all relational
and directional methods inverted. The performance of ascending
operations and views is likely to be faster than that of descending
ones.  Methods {@code subMap}, {@code headMap},
and {@code tailMap} differ from the like-named {@code
SortedMap} methods in accepting additional arguments describing
whether lower and upper bounds are inclusive versus exclusive.
Submaps of any {@code NavigableMap} must implement the {@code
NavigableMap} interface.

<p>This interface additionally defines methods {@code firstEntry},
{@code pollFirstEntry}, {@code lastEntry}, and
{@code pollLastEntry} that return and/or remove the least and
greatest mappings, if any exist, else returning {@code null}.

<p>Implementations of entry-returning methods are expected to
return {@code Map.Entry} pairs representing snapshots of mappings
at the time they were produced, and thus generally do <em>not</em>
support the optional {@code Entry.setValue} method. Note however
that it is possible to change mappings in the associated map using
method {@code put}.

<p>Methods
{@link #subMap(Object, Object) subMap(K, K)},
{@link #headMap(Object) headMap(K)}, and
{@link #tailMap(Object) tailMap(K)}
are specified to return {@code SortedMap} to allow existing
implementations of {@code SortedMap} to be compatibly retrofitted to
implement {@code NavigableMap}, but extensions and implementations
of this interface are encouraged to override these methods to return
{@code NavigableMap}.  Similarly,
{@link #keySet()} can be overriden to return {@code NavigableSet}.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author Doug Lea
@author Josh Bloch
@param <K> the type of keys maintained by this map
@param <V> the type of mapped values
@since 1.6
"
      classrelation 3494658 // <realization>
	relation 3494658 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3494658 // <realization>
	  b parent class_ref 500354 // SortedMap
      end

      operation 8695938 "lowerEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the greatest key
strictly less than the given key, or {@code null} if there is
no such key.

@param key the key
@return an entry with the greatest key less than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696066 "lowerKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest key strictly less than the given key, or
{@code null} if there is no such key.

@param key the key
@return the greatest key less than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696194 "floorEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the greatest key
less than or equal to the given key, or {@code null} if there
is no such key.

@param key the key
@return an entry with the greatest key less than or equal to
        {@code key}, or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696322 "floorKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest key less than or equal to the given key,
or {@code null} if there is no such key.

@param key the key
@return the greatest key less than or equal to {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696450 "ceilingEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the least key
greater than or equal to the given key, or {@code null} if
there is no such key.

@param key the key
@return an entry with the least key greater than or equal to
        {@code key}, or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696578 "ceilingKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least key greater than or equal to the given key,
or {@code null} if there is no such key.

@param key the key
@return the least key greater than or equal to {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696706 "higherEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the least key
strictly greater than the given key, or {@code null} if there
is no such key.

@param key the key
@return an entry with the least key greater than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696834 "higherKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least key strictly greater than the given key, or
{@code null} if there is no such key.

@param key the key
@return the least key greater than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys
"
      end

      operation 8696962 "firstEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the least
key in this map, or {@code null} if the map is empty.

@return an entry with the least key,
        or {@code null} if this map is empty
"
      end

      operation 8697090 "lastEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the greatest
key in this map, or {@code null} if the map is empty.

@return an entry with the greatest key,
        or {@code null} if this map is empty
"
      end

      operation 8697218 "pollFirstEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes and returns a key-value mapping associated with
the least key in this map, or {@code null} if the map is empty.

@return the removed first entry of this map,
        or {@code null} if this map is empty
"
      end

      operation 8697346 "pollLastEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes and returns a key-value mapping associated with
the greatest key in this map, or {@code null} if the map is empty.

@return the removed last entry of this map,
        or {@code null} if this map is empty
"
      end

      operation 8697474 "descendingMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reverse order view of the mappings contained in this map.
The descending map is backed by this map, so changes to the map are
reflected in the descending map, and vice-versa.  If either map is
modified while an iteration over a collection view of either map
is in progress (except through the iterator's own {@code remove}
operation), the results of the iteration are undefined.

<p>The returned map has an ordering equivalent to
<tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.
The expression {@code m.descendingMap().descendingMap()} returns a
view of {@code m} essentially equivalent to {@code m}.

@return a reverse order view of this map
"
      end

      operation 8697602 "navigableKeySet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link NavigableSet} view of the keys contained in this map.
The set's iterator returns the keys in ascending order.
The set is backed by the map, so changes to the map are reflected in
the set, and vice-versa.  If the map is modified while an iteration
over the set is in progress (except through the iterator's own {@code
remove} operation), the results of the iteration are undefined.  The
set supports element removal, which removes the corresponding mapping
from the map, via the {@code Iterator.remove}, {@code Set.remove},
{@code removeAll}, {@code retainAll}, and {@code clear} operations.
It does not support the {@code add} or {@code addAll} operations.

@return a navigable set view of the keys in this map
"
      end

      operation 8697730 "descendingKeySet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reverse order {@link NavigableSet} view of the keys contained in this map.
The set's iterator returns the keys in descending order.
The set is backed by the map, so changes to the map are reflected in
the set, and vice-versa.  If the map is modified while an iteration
over the set is in progress (except through the iterator's own {@code
remove} operation), the results of the iteration are undefined.  The
set supports element removal, which removes the corresponding mapping
from the map, via the {@code Iterator.remove}, {@code Set.remove},
{@code removeAll}, {@code retainAll}, and {@code clear} operations.
It does not support the {@code add} or {@code addAll} operations.

@return a reverse order navigable set view of the keys in this map
"
      end

      operation 8697858 "subMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 4
	  param inout name "fromKey" explicit_type "K"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "toKey" explicit_type "K"
	  param inout name "toInclusive" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys range from
{@code fromKey} to {@code toKey}.  If {@code fromKey} and
{@code toKey} are equal, the returned map is empty unless
{@code fromInclusive} and {@code toInclusive} are both true.  The
returned map is backed by this map, so changes in the returned map are
reflected in this map, and vice-versa.  The returned map supports all
optional map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside of its range, or to construct a
submap either of whose endpoints lie outside its range.

@param fromKey low endpoint of the keys in the returned map
@param fromInclusive {@code true} if the low endpoint
       is to be included in the returned view
@param toKey high endpoint of the keys in the returned map
@param toInclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this map whose keys range from
        {@code fromKey} to {@code toKey}
@throws ClassCastException if {@code fromKey} and {@code toKey}
        cannot be compared to one another using this map's comparator
        (or, if the map has no comparator, using natural ordering).
        Implementations may, but are not required to, throw this
        exception if {@code fromKey} or {@code toKey}
        cannot be compared to keys currently in the map.
@throws NullPointerException if {@code fromKey} or {@code toKey}
        is null and this map does not permit null keys
@throws IllegalArgumentException if {@code fromKey} is greater than
        {@code toKey}; or if this map itself has a restricted
        range, and {@code fromKey} or {@code toKey} lies
        outside the bounds of the range
"
      end

      operation 8697986 "headMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 2
	  param inout name "toKey" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys are less than (or
equal to, if {@code inclusive} is true) {@code toKey}.  The returned
map is backed by this map, so changes in the returned map are reflected
in this map, and vice-versa.  The returned map supports all optional
map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param toKey high endpoint of the keys in the returned map
@param inclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this map whose keys are less than
        (or equal to, if {@code inclusive} is true) {@code toKey}
@throws ClassCastException if {@code toKey} is not compatible
        with this map's comparator (or, if the map has no comparator,
        if {@code toKey} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code toKey} cannot be compared to keys
        currently in the map.
@throws NullPointerException if {@code toKey} is null
        and this map does not permit null keys
@throws IllegalArgumentException if this map itself has a
        restricted range, and {@code toKey} lies outside the
        bounds of the range
"
      end

      operation 8698114 "tailMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys are greater than (or
equal to, if {@code inclusive} is true) {@code fromKey}.  The returned
map is backed by this map, so changes in the returned map are reflected
in this map, and vice-versa.  The returned map supports all optional
map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param fromKey low endpoint of the keys in the returned map
@param inclusive {@code true} if the low endpoint
       is to be included in the returned view
@return a view of the portion of this map whose keys are greater than
        (or equal to, if {@code inclusive} is true) {@code fromKey}
@throws ClassCastException if {@code fromKey} is not compatible
        with this map's comparator (or, if the map has no comparator,
        if {@code fromKey} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code fromKey} cannot be compared to keys
        currently in the map.
@throws NullPointerException if {@code fromKey} is null
        and this map does not permit null keys
@throws IllegalArgumentException if this map itself has a
        restricted range, and {@code fromKey} lies outside the
        bounds of the range
"
      end

      operation 8698242 "subMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "toKey" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code subMap(fromKey, true, toKey, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8698370 "headMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "toKey" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code headMap(toKey, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8698498 "tailMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "fromKey" explicit_type "K"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code tailMap(fromKey, true)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end
    end

    class 1064066 "AbstractQueue"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 184066 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 1064194 // Queue
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides skeletal implementations of some {@link Queue}
operations. The implementations in this class are appropriate when
the base implementation does <em>not</em> allow <tt>null</tt>
elements.  Methods {@link #add add}, {@link #remove remove}, and
{@link #element element} are based on {@link #offer offer}, {@link
#poll poll}, and {@link #peek peek}, respectively, but throw
exceptions instead of indicating failure via <tt>false</tt> or
<tt>null</tt> returns.

<p>A <tt>Queue</tt> implementation that extends this class must
minimally define a method {@link Queue#offer} which does not permit
insertion of <tt>null</tt> elements, along with methods {@link
Queue#peek}, {@link Queue#poll}, {@link Collection#size}, and
{@link Collection#iterator}.  Typically, additional methods will be
overridden as well.  If these requirements cannot be met, consider
instead subclassing {@link AbstractCollection}.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@since 1.5
@author Doug Lea
@param <E> the type of elements held in this collection
"
      classrelation 3475202 // <realization>
	relation 3475202 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475202 // <realization>
	  b parent class_ref 184066 // AbstractCollection
      end

      classrelation 3475458 // <realization>
	relation 3475458 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475458 // <realization>
	  b parent class_ref 1064194 // Queue
      end

      operation 8584706 "AbstractQueue"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for use by subclasses.
"
      end

      operation 8584834 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this queue if it is possible to do so
immediately without violating capacity restrictions, returning
<tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
if no space is currently available.

<p>This implementation returns <tt>true</tt> if <tt>offer</tt> succeeds,
else throws an <tt>IllegalStateException</tt>.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Collection#add})
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this queue
@throws NullPointerException if the specified element is null and
        this queue does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this queue
"
      end

      operation 8584962 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of this queue.  This method differs
from {@link #poll poll} only in that it throws an exception if this
queue is empty.

<p>This implementation returns the result of <tt>poll</tt>
unless the queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty
"
      end

      operation 8585090 "element"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of this queue.  This method
differs from {@link #peek peek} only in that it throws an exception if
this queue is empty.

<p>This implementation returns the result of <tt>peek</tt>
unless the queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty
"
      end

      operation 8585218 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this queue.
The queue will be empty after this call returns.

<p>This implementation repeatedly invokes {@link #poll poll} until it
returns <tt>null</tt>.
"
      end

      operation 8585346 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this
queue.  Attempts to addAll of a queue to itself result in
<tt>IllegalArgumentException</tt>. Further, the behavior of
this operation is undefined if the specified collection is
modified while the operation is in progress.

<p>This implementation iterates over the specified collection,
and adds each element returned by the iterator to this
queue, in turn.  A runtime exception encountered while
trying to add an element (including, in particular, a
<tt>null</tt> element) may result in only some of the elements
having been successfully added when the associated exception is
thrown.

@param c collection containing elements to be added to this queue
@return <tt>true</tt> if this queue changed as a result of the call
@throws ClassCastException if the class of an element of the specified
        collection prevents it from being added to this queue
@throws NullPointerException if the specified collection contains a
        null element and this queue does not permit null elements,
        or if the specified collection is null
@throws IllegalArgumentException if some property of an element of the
        specified collection prevents it from being added to this
        queue, or if the specified collection is this queue
@throws IllegalStateException if not all the elements can be added at
        this time due to insertion restrictions
@see #add(Object)
"
      end
    end

    class 1064194 "Queue"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184194 // Collection
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A collection designed for holding elements prior to processing.
Besides basic {@link java.util.Collection Collection} operations,
queues provide additional insertion, extraction, and inspection
operations.  Each of these methods exists in two forms: one throws
an exception if the operation fails, the other returns a special
value (either {@code null} or {@code false}, depending on the
operation).  The latter form of the insert operation is designed
specifically for use with capacity-restricted {@code Queue}
implementations; in most implementations, insert operations cannot
fail.

<table BORDER CELLPADDING=3 CELLSPACING=1>
<caption>Summary of Queue methods</caption>
 <tr>
   <td></td>
   <td ALIGN=CENTER><em>Throws exception</em></td>
   <td ALIGN=CENTER><em>Returns special value</em></td>
 </tr>
 <tr>
   <td><b>Insert</b></td>
   <td>{@link Queue#add add(e)}</td>
   <td>{@link Queue#offer offer(e)}</td>
 </tr>
 <tr>
   <td><b>Remove</b></td>
   <td>{@link Queue#remove remove()}</td>
   <td>{@link Queue#poll poll()}</td>
 </tr>
 <tr>
   <td><b>Examine</b></td>
   <td>{@link Queue#element element()}</td>
   <td>{@link Queue#peek peek()}</td>
 </tr>
</table>

<p>Queues typically, but do not necessarily, order elements in a
FIFO (first-in-first-out) manner.  Among the exceptions are
priority queues, which order elements according to a supplied
comparator, or the elements' natural ordering, and LIFO queues (or
stacks) which order the elements LIFO (last-in-first-out).
Whatever the ordering used, the <em>head</em> of the queue is that
element which would be removed by a call to {@link #remove() } or
{@link #poll()}.  In a FIFO queue, all new elements are inserted at
the <em>tail</em> of the queue. Other kinds of queues may use
different placement rules.  Every {@code Queue} implementation
must specify its ordering properties.

<p>The {@link #offer offer} method inserts an element if possible,
otherwise returning {@code false}.  This differs from the {@link
java.util.Collection#add Collection.add} method, which can fail to
add an element only by throwing an unchecked exception.  The
{@code offer} method is designed for use when failure is a normal,
rather than exceptional occurrence, for example, in fixed-capacity
(or &quot;bounded&quot;) queues.

<p>The {@link #remove()} and {@link #poll()} methods remove and
return the head of the queue.
Exactly which element is removed from the queue is a
function of the queue's ordering policy, which differs from
implementation to implementation. The {@code remove()} and
{@code poll()} methods differ only in their behavior when the
queue is empty: the {@code remove()} method throws an exception,
while the {@code poll()} method returns {@code null}.

<p>The {@link #element()} and {@link #peek()} methods return, but do
not remove, the head of the queue.

<p>The {@code Queue} interface does not define the <i>blocking queue
methods</i>, which are common in concurrent programming.  These methods,
which wait for elements to appear or for space to become available, are
defined in the {@link java.util.concurrent.BlockingQueue} interface, which
extends this interface.

<p>{@code Queue} implementations generally do not allow insertion
of {@code null} elements, although some implementations, such as
{@link LinkedList}, do not prohibit insertion of {@code null}.
Even in the implementations that permit it, {@code null} should
not be inserted into a {@code Queue}, as {@code null} is also
used as a special return value by the {@code poll} method to
indicate that the queue contains no elements.

<p>{@code Queue} implementations generally do not define
element-based versions of methods {@code equals} and
{@code hashCode} but instead inherit the identity based versions
from class {@code Object}, because element-based equality is not
always well-defined for queues with the same elements but different
ordering properties.


<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@see java.util.Collection
@see LinkedList
@see PriorityQueue
@see java.util.concurrent.LinkedBlockingQueue
@see java.util.concurrent.BlockingQueue
@see java.util.concurrent.ArrayBlockingQueue
@see java.util.concurrent.LinkedBlockingQueue
@see java.util.concurrent.PriorityBlockingQueue
@since 1.5
@author Doug Lea
@param <E> the type of elements held in this collection
"
      classrelation 3475330 // <realization>
	relation 3475330 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475330 // <realization>
	  b parent class_ref 184194 // Collection
      end

      operation 8583938 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this queue if it is possible to do so
immediately without violating capacity restrictions, returning
{@code true} upon success and throwing an {@code IllegalStateException}
if no space is currently available.

@param e the element to add
@return {@code true} (as specified by {@link Collection#add})
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this queue
@throws NullPointerException if the specified element is null and
        this queue does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this queue
"
      end

      operation 8584066 "offer"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this queue if it is possible to do
so immediately without violating capacity restrictions.
When using a capacity-restricted queue, this method is generally
preferable to {@link #add}, which can fail to insert an element only
by throwing an exception.

@param e the element to add
@return {@code true} if the element was added to this queue, else
        {@code false}
@throws ClassCastException if the class of the specified element
        prevents it from being added to this queue
@throws NullPointerException if the specified element is null and
        this queue does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this queue
"
      end

      operation 8584194 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of this queue.  This method differs
from {@link #poll poll} only in that it throws an exception if this
queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty
"
      end

      operation 8584322 "poll"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of this queue,
or returns {@code null} if this queue is empty.

@return the head of this queue, or {@code null} if this queue is empty
"
      end

      operation 8584450 "element"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of this queue.  This method
differs from {@link #peek peek} only in that it throws an exception
if this queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty
"
      end

      operation 8584578 "peek"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of this queue,
or returns {@code null} if this queue is empty.

@return the head of this queue, or {@code null} if this queue is empty
"
      end
    end

    class 1064322 "AbstractSequentialList"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 183938 // AbstractList
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a skeletal implementation of the <tt>List</tt>
interface to minimize the effort required to implement this interface
backed by a \"sequential access\" data store (such as a linked list).  For
random access data (such as an array), <tt>AbstractList</tt> should be used
in preference to this class.<p>

This class is the opposite of the <tt>AbstractList</tt> class in the sense
that it implements the \"random access\" methods (<tt>get(int index)</tt>,
<tt>set(int index, E element)</tt>, <tt>add(int index, E element)</tt> and
<tt>remove(int index)</tt>) on top of the list's list iterator, instead of
the other way around.<p>

To implement a list the programmer needs only to extend this class and
provide implementations for the <tt>listIterator</tt> and <tt>size</tt>
methods.  For an unmodifiable list, the programmer need only implement the
list iterator's <tt>hasNext</tt>, <tt>next</tt>, <tt>hasPrevious</tt>,
<tt>previous</tt> and <tt>index</tt> methods.<p>

For a modifiable list the programmer should additionally implement the list
iterator's <tt>set</tt> method.  For a variable-size list the programmer
should additionally implement the list iterator's <tt>remove</tt> and
<tt>add</tt> methods.<p>

The programmer should generally provide a void (no argument) and collection
constructor, as per the recommendation in the <tt>Collection</tt> interface
specification.<p>

This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@author  Neal Gafter
@see Collection
@see List
@see AbstractList
@see AbstractCollection
@since 1.2
"
      classrelation 3475586 // <realization>
	relation 3475586 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475586 // <realization>
	  b parent class_ref 183938 // AbstractList
      end

      operation 8585474 "AbstractSequentialList"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8585602 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element at the specified position in this list.

<p>This implementation first gets a list iterator pointing to the
indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
the element using <tt>ListIterator.next</tt> and returns it.

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 8585730 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified position in this list with the
specified element (optional operation).

<p>This implementation first gets a list iterator pointing to the
indexed element (with <tt>listIterator(index)</tt>).  Then, it gets
the current element using <tt>ListIterator.next</tt> and replaces it
with <tt>ListIterator.set</tt>.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the list iterator does not
implement the <tt>set</tt> operation.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 8585858 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the specified position in this list
(optional operation).  Shifts the element currently at that position
(if any) and any subsequent elements to the right (adds one to their
indices).

<p>This implementation first gets a list iterator pointing to the
indexed element (with <tt>listIterator(index)</tt>).  Then, it
inserts the specified element with <tt>ListIterator.add</tt>.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the list iterator does not
implement the <tt>add</tt> operation.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 8585986 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in this list (optional
operation).  Shifts any subsequent elements to the left (subtracts one
from their indices).  Returns the element that was removed from the
list.

<p>This implementation first gets a list iterator pointing to the
indexed element (with <tt>listIterator(index)</tt>).  Then, it removes
the element with <tt>ListIterator.remove</tt>.

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the list iterator does not
implement the <tt>remove</tt> operation.

@throws UnsupportedOperationException {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 8586114 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Inserts all of the elements in the specified collection into this
list at the specified position (optional operation).  Shifts the
element currently at that position (if any) and any subsequent
elements to the right (increases their indices).  The new elements
will appear in this list in the order that they are returned by the
specified collection's iterator.  The behavior of this operation is
undefined if the specified collection is modified while the
operation is in progress.  (Note that this will occur if the specified
collection is this list, and it's nonempty.)

<p>This implementation gets an iterator over the specified collection and
a list iterator over this list pointing to the indexed element (with
<tt>listIterator(index)</tt>).  Then, it iterates over the specified
collection, inserting the elements obtained from the iterator into this
list, one at a time, using <tt>ListIterator.add</tt> followed by
<tt>ListIterator.next</tt> (to skip over the added element).

<p>Note that this implementation will throw an
<tt>UnsupportedOperationException</tt> if the list iterator returned by
the <tt>listIterator</tt> method does not implement the <tt>add</tt>
operation.

@throws UnsupportedOperationException {@inheritDoc}
@throws ClassCastException            {@inheritDoc}
@throws NullPointerException          {@inheritDoc}
@throws IllegalArgumentException      {@inheritDoc}
@throws IndexOutOfBoundsException     {@inheritDoc}
"
      end

      operation 8586242 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterators

Returns an iterator over the elements in this list (in proper
sequence).<p>

This implementation merely returns a list iterator over the list.

@return an iterator over the elements in this list (in proper sequence)
"
      end

      operation 8586370 "listIterator"
	abstract cpp_inline public return_type class_ref 185090 // ListIterator
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator over the elements in this list (in proper
sequence).

@param  index index of first element to be returned from the list
        iterator (by a call to the <code>next</code> method)
@return a list iterator over the elements in this list (in proper
        sequence)
@throws IndexOutOfBoundsException {@inheritDoc}
"
      end
    end

    class 1064450 "Deque"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 1064194 // Queue
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A linear collection that supports element insertion and removal at
both ends.  The name <i>deque</i> is short for \"double ended queue\"
and is usually pronounced \"deck\".  Most {@code Deque}
implementations place no fixed limits on the number of elements
they may contain, but this interface supports capacity-restricted
deques as well as those with no fixed size limit.

<p>This interface defines methods to access the elements at both
ends of the deque.  Methods are provided to insert, remove, and
examine the element.  Each of these methods exists in two forms:
one throws an exception if the operation fails, the other returns a
special value (either {@code null} or {@code false}, depending on
the operation).  The latter form of the insert operation is
designed specifically for use with capacity-restricted
{@code Deque} implementations; in most implementations, insert
operations cannot fail.

<p>The twelve methods described above are summarized in the
following table:

<table BORDER CELLPADDING=3 CELLSPACING=1>
<caption>Summary of Deque methods</caption>
 <tr>
   <td></td>
   <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
   <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 </tr>
 <tr>
   <td></td>
   <td ALIGN=CENTER><em>Throws exception</em></td>
   <td ALIGN=CENTER><em>Special value</em></td>
   <td ALIGN=CENTER><em>Throws exception</em></td>
   <td ALIGN=CENTER><em>Special value</em></td>
 </tr>
 <tr>
   <td><b>Insert</b></td>
   <td>{@link Deque#addFirst addFirst(e)}</td>
   <td>{@link Deque#offerFirst offerFirst(e)}</td>
   <td>{@link Deque#addLast addLast(e)}</td>
   <td>{@link Deque#offerLast offerLast(e)}</td>
 </tr>
 <tr>
   <td><b>Remove</b></td>
   <td>{@link Deque#removeFirst removeFirst()}</td>
   <td>{@link Deque#pollFirst pollFirst()}</td>
   <td>{@link Deque#removeLast removeLast()}</td>
   <td>{@link Deque#pollLast pollLast()}</td>
 </tr>
 <tr>
   <td><b>Examine</b></td>
   <td>{@link Deque#getFirst getFirst()}</td>
   <td>{@link Deque#peekFirst peekFirst()}</td>
   <td>{@link Deque#getLast getLast()}</td>
   <td>{@link Deque#peekLast peekLast()}</td>
 </tr>
</table>

<p>This interface extends the {@link Queue} interface.  When a deque is
used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
added at the end of the deque and removed from the beginning.  The methods
inherited from the {@code Queue} interface are precisely equivalent to
{@code Deque} methods as indicated in the following table:

<table BORDER CELLPADDING=3 CELLSPACING=1>
<caption>Comparison of Queue and Deque methods</caption>
 <tr>
   <td ALIGN=CENTER> <b>{@code Queue} Method</b></td>
   <td ALIGN=CENTER> <b>Equivalent {@code Deque} Method</b></td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#add add(e)}</td>
   <td>{@link #addLast addLast(e)}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#offer offer(e)}</td>
   <td>{@link #offerLast offerLast(e)}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#remove remove()}</td>
   <td>{@link #removeFirst removeFirst()}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#poll poll()}</td>
   <td>{@link #pollFirst pollFirst()}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#element element()}</td>
   <td>{@link #getFirst getFirst()}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#peek peek()}</td>
   <td>{@link #peek peekFirst()}</td>
 </tr>
</table>

<p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
interface should be used in preference to the legacy {@link Stack} class.
When a deque is used as a stack, elements are pushed and popped from the
beginning of the deque.  Stack methods are precisely equivalent to
{@code Deque} methods as indicated in the table below:

<table BORDER CELLPADDING=3 CELLSPACING=1>
<caption>Comparison of Stack and Deque methods</caption>
 <tr>
   <td ALIGN=CENTER> <b>Stack Method</b></td>
   <td ALIGN=CENTER> <b>Equivalent {@code Deque} Method</b></td>
 </tr>
 <tr>
   <td>{@link #push push(e)}</td>
   <td>{@link #addFirst addFirst(e)}</td>
 </tr>
 <tr>
   <td>{@link #pop pop()}</td>
   <td>{@link #removeFirst removeFirst()}</td>
 </tr>
 <tr>
   <td>{@link #peek peek()}</td>
   <td>{@link #peekFirst peekFirst()}</td>
 </tr>
</table>

<p>Note that the {@link #peek peek} method works equally well when
a deque is used as a queue or a stack; in either case, elements are
drawn from the beginning of the deque.

<p>This interface provides two methods to remove interior
elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
{@link #removeLastOccurrence removeLastOccurrence}.

<p>Unlike the {@link List} interface, this interface does not
provide support for indexed access to elements.

<p>While {@code Deque} implementations are not strictly required
to prohibit the insertion of null elements, they are strongly
encouraged to do so.  Users of any {@code Deque} implementations
that do allow null elements are strongly encouraged <i>not</i> to
take advantage of the ability to insert nulls.  This is so because
{@code null} is used as a special return value by various methods
to indicated that the deque is empty.

<p>{@code Deque} implementations generally do not define
element-based versions of the {@code equals} and {@code hashCode}
methods, but instead inherit the identity-based versions from class
{@code Object}.

<p>This interface is a member of the <a
href=\"{@docRoot}/../technotes/guides/collections/index.html\"> Java Collections
Framework</a>.

@author Doug Lea
@author Josh Bloch
@since  1.6
@param <E> the type of elements held in this collection
"
      classrelation 3475842 // <realization>
	relation 3475842 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3475842 // <realization>
	  b parent class_ref 1064194 // Queue
      end

      operation 8586498 "addFirst"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the front of this deque if it is
possible to do so immediately without violating capacity restrictions,
throwing an {@code IllegalStateException} if no space is currently
available.  When using a capacity-restricted deque, it is generally
preferable to use method {@link #offerFirst}.

@param e the element to add
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8586626 "addLast"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque if it is
possible to do so immediately without violating capacity restrictions,
throwing an {@code IllegalStateException} if no space is currently
available.  When using a capacity-restricted deque, it is generally
preferable to use method {@link #offerLast}.

<p>This method is equivalent to {@link #add}.

@param e the element to add
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8586754 "offerFirst"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the front of this deque unless it would
violate capacity restrictions.  When using a capacity-restricted deque,
this method is generally preferable to the {@link #addFirst} method,
which can fail to insert an element only by throwing an exception.

@param e the element to add
@return {@code true} if the element was added to this deque, else
        {@code false}
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8586882 "offerLast"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque unless it would
violate capacity restrictions.  When using a capacity-restricted deque,
this method is generally preferable to the {@link #addLast} method,
which can fail to insert an element only by throwing an exception.

@param e the element to add
@return {@code true} if the element was added to this deque, else
        {@code false}
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8587010 "removeFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first element of this deque.  This method
differs from {@link #pollFirst pollFirst} only in that it throws an
exception if this deque is empty.

@return the head of this deque
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8587138 "removeLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last element of this deque.  This method
differs from {@link #pollLast pollLast} only in that it throws an
exception if this deque is empty.

@return the tail of this deque
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8587266 "pollFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first element of this deque,
or returns {@code null} if this deque is empty.

@return the head of this deque, or {@code null} if this deque is empty
"
      end

      operation 8587394 "pollLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last element of this deque,
or returns {@code null} if this deque is empty.

@return the tail of this deque, or {@code null} if this deque is empty
"
      end

      operation 8587522 "getFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the first element of this deque.

This method differs from {@link #peekFirst peekFirst} only in that it
throws an exception if this deque is empty.

@return the head of this deque
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8587650 "getLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the last element of this deque.
This method differs from {@link #peekLast peekLast} only in that it
throws an exception if this deque is empty.

@return the tail of this deque
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8587778 "peekFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the first element of this deque,
or returns {@code null} if this deque is empty.

@return the head of this deque, or {@code null} if this deque is empty
"
      end

      operation 8587906 "peekLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the last element of this deque,
or returns {@code null} if this deque is empty.

@return the tail of this deque, or {@code null} if this deque is empty
"
      end

      operation 8588034 "removeFirstOccurrence"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the first element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
(if such an element exists).
Returns {@code true} if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return {@code true} if an element was removed as a result of this call
@throws ClassCastException if the class of the specified element
        is incompatible with this deque
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 8588162 "removeLastOccurrence"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last occurrence of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the last element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
(if such an element exists).
Returns {@code true} if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return {@code true} if an element was removed as a result of this call
@throws ClassCastException if the class of the specified element
        is incompatible with this deque
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 8588290 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Queue methods ***

Inserts the specified element into the queue represented by this deque
(in other words, at the tail of this deque) if it is possible to do so
immediately without violating capacity restrictions, returning
{@code true} upon success and throwing an
{@code IllegalStateException} if no space is currently available.
When using a capacity-restricted deque, it is generally preferable to
use {@link #offer(Object) offer}.

<p>This method is equivalent to {@link #addLast}.

@param e the element to add
@return {@code true} (as specified by {@link Collection#add})
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8588418 "offer"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into the queue represented by this deque
(in other words, at the tail of this deque) if it is possible to do so
immediately without violating capacity restrictions, returning
{@code true} upon success and {@code false} if no space is currently
available.  When using a capacity-restricted deque, this method is
generally preferable to the {@link #add} method, which can fail to
insert an element only by throwing an exception.

<p>This method is equivalent to {@link #offerLast}.

@param e the element to add
@return {@code true} if the element was added to this deque, else
        {@code false}
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8588546 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque
(in other words, the first element of this deque).
This method differs from {@link #poll poll} only in that it throws an
exception if this deque is empty.

<p>This method is equivalent to {@link #removeFirst()}.

@return the head of the queue represented by this deque
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8588674 "poll"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque
(in other words, the first element of this deque), or returns
{@code null} if this deque is empty.

<p>This method is equivalent to {@link #pollFirst()}.

@return the first element of this deque, or {@code null} if
        this deque is empty
"
      end

      operation 8588802 "element"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque (in other words, the first element of this deque).
This method differs from {@link #peek peek} only in that it throws an
exception if this deque is empty.

<p>This method is equivalent to {@link #getFirst()}.

@return the head of the queue represented by this deque
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8588930 "peek"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque (in other words, the first element of this deque), or
returns {@code null} if this deque is empty.

<p>This method is equivalent to {@link #peekFirst()}.

@return the head of the queue represented by this deque, or
        {@code null} if this deque is empty
"
      end

      operation 8589058 "push"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Stack methods ***

Pushes an element onto the stack represented by this deque (in other
words, at the head of this deque) if it is possible to do so
immediately without violating capacity restrictions, throwing an
{@code IllegalStateException} if no space is currently available.

<p>This method is equivalent to {@link #addFirst}.

@param e the element to push
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque
"
      end

      operation 8589186 "pop"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops an element from the stack represented by this deque.  In other
words, removes and returns the first element of this deque.

<p>This method is equivalent to {@link #removeFirst()}.

@return the element at the front of this deque (which is the top
        of the stack represented by this deque)
@throws NoSuchElementException if this deque is empty
"
      end

      operation 8589314 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Collection methods ***

Removes the first occurrence of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the first element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
(if such an element exists).
Returns {@code true} if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

<p>This method is equivalent to {@link #removeFirstOccurrence(Object)}.

@param o element to be removed from this deque, if present
@return {@code true} if an element was removed as a result of this call
@throws ClassCastException if the class of the specified element
        is incompatible with this deque
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 8589442 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this deque contains the specified element.
More formally, returns {@code true} if and only if this deque contains
at least one element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this deque is to be tested
@return {@code true} if this deque contains the specified element
@throws ClassCastException if the type of the specified element
        is incompatible with this deque
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
"
      end

      operation 8589570 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this deque.

@return the number of elements in this deque
"
      end

      operation 8589698 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this deque in proper sequence.
The elements will be returned in order from first (head) to last (tail).

@return an iterator over the elements in this deque in proper sequence
"
      end

      operation 8589826 "descendingIterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this deque in reverse
sequential order.  The elements will be returned in order from
last (tail) to first (head).

@return an iterator over the elements in this deque in reverse
sequence
"
      end
    end

    class 1064962 "ArrayPrefixHelpers"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ForkJoin tasks to perform Arrays.parallelPrefix operations.

@author Doug Lea
@since 1.8
"
      operation 8602370 "ArrayPrefixHelpers"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1981186 "CUMULATE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " non-instantiable

Parallel prefix (aka cumulate, scan) task classes
are based loosely on Guy Blelloch's original
algorithm (http://www.cs.cmu.edu/~scandal/alg/scan.html):
 Keep dividing by two to threshold segment size, and then:
  Pass 1: Create tree of partial sums for each segment
  Pass 2: For each segment, cumulate with offset of left sibling

This version improves performance within FJ framework mainly by
allowing the second pass of ready left-hand sides to proceed
even if some right-hand side first passes are still executing.
It also combines first and second pass for leftmost segment,
and skips the first pass for rightmost segment (whose result is
not needed for second pass).  It similarly manages to avoid
requiring that users supply an identity basis for accumulations
by tracking those segments/subtasks for which the first
existing element is used as base.

Managing this relies on ORing some bits in the pendingCount for
phases/states: CUMULATE, SUMMED, and FINISHED. CUMULATE is the
main phase bit. When false, segments compute only their sum.
When true, they cumulate array elements. CUMULATE is set at
root at beginning of second pass and then propagated down. But
it may also be set earlier for subtrees with lo==0 (the left
spine of tree). SUMMED is a one bit join count. For leafs, it
is set when summed. For internal nodes, it becomes true when
one child is summed.  When the second child finishes summing,
we then moves up tree to trigger the cumulate phase. FINISHED
is also a one bit join count. For leafs, it is set when
cumulated. For internal nodes, it becomes true when one child
is cumulated.  When the second child finishes cumulating, it
then moves up tree, completing at the root.

To better exploit locality and reduce overhead, the compute
method loops starting with the current task, moving if possible
to one of its subtasks rather than forking.

As usual for this sort of utility, there are 4 versions, that
are simple copy/paste/adapt variants of each other.  (The
double and int versions differ from long version soley by
replacing \"long\" (with case-matching)).

 see above
"
      end

      attribute 1981314 "SUMMED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1981442 "FINISHED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1981570 "MIN_PARTITION"
	class_attribute const_attribute package explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The smallest subtask array partition size to use as threshold 
"
      end

      class 1065090 "CumulateTask"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 1065218 // CountedCompleter
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3480962 // <realization>
	  relation 3480962 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3480962 // <realization>
	    b parent class_ref 1065218 // CountedCompleter
	end

	attribute 1984642 "array"
	  const_attribute package explicit_type "T"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3481090 // function (<unidirectional association>)
	  relation 3481090 --->
	    a role_name "function" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 3481090 // function (<unidirectional association>)
	    b parent class_ref 1066626 // BinaryOperator
	end

	classrelation 3481218 // left (<unidirectional association>)
	  relation 3481218 --->
	    a role_name "left" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 3481218 // left (<unidirectional association>)
	    b parent class_ref 1065090 // CumulateTask
	end

	classrelation 3481346 // right (<unidirectional association>)
	  relation 3481346 --->
	    a role_name "right" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 3481346 // right (<unidirectional association>)
	    b parent class_ref 1065090 // CumulateTask
	end

	attribute 1984770 "in"
	  package explicit_type "T"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1984898 "out"
	  package explicit_type "T"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1985026 "lo"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1985154 "hi"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1985282 "origin"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1985410 "fence"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1985538 "threshold"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8616450 "CumulateTask"
	  cpp_inline public explicit_return_type ""
	  nparams 5
	    param inout name "parent" type class_ref 1065090 // CumulateTask
	    param inout name "function" type class_ref 1066626 // BinaryOperator
	    param inout name "array" explicit_type "T"
	  multiplicity "[]"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}, ${t1}<T> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Root task constructor "
	end

	operation 8616578 "CumulateTask"
	  cpp_inline package explicit_return_type ""
	  nparams 8
	    param inout name "parent" type class_ref 1065090 // CumulateTask
	    param inout name "function" type class_ref 1066626 // BinaryOperator
	    param inout name "array" explicit_type "T"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "threshold" explicit_type "int"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}, ${t1}<T> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Subtask constructor "
	end

	operation 8616706 "compute"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end

      class 1066754 "LongCumulateTask"
	visibility package 
	nactuals 1
	actual class class_ref 1065218 // CountedCompleter
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3481474 // <realization>
	  relation 3481474 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3481474 // <realization>
	    b parent class_ref 1065218 // CountedCompleter
	end

	attribute 1985666 "array"
	  const_attribute package explicit_type "long"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3481602 // function (<unidirectional association>)
	  relation 3481602 --->
	    a role_name "function" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3481602 // function (<unidirectional association>)
	    b parent class_ref 1066882 // LongBinaryOperator
	end

	classrelation 3481730 // left (<unidirectional association>)
	  relation 3481730 --->
	    a role_name "left" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3481730 // left (<unidirectional association>)
	    b parent class_ref 1066754 // LongCumulateTask
	end

	classrelation 3481858 // right (<unidirectional association>)
	  relation 3481858 --->
	    a role_name "right" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3481858 // right (<unidirectional association>)
	    b parent class_ref 1066754 // LongCumulateTask
	end

	attribute 1985794 "in"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1985922 "out"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1986050 "lo"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1986178 "hi"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1986306 "origin"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1986434 "fence"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1986562 "threshold"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8616834 "LongCumulateTask"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "parent" type class_ref 1066754 // LongCumulateTask
	    param inout name "function" type class_ref 1066882 // LongBinaryOperator
	    param inout name "array" explicit_type "long"
	  multiplicity "[]"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Root task constructor "
	end

	operation 8616962 "LongCumulateTask"
	  package explicit_return_type ""
	  nparams 8
	    param inout name "parent" type class_ref 1066754 // LongCumulateTask
	    param inout name "function" type class_ref 1066882 // LongBinaryOperator
	    param inout name "array" explicit_type "long"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "threshold" explicit_type "int"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Subtask constructor "
	end

	operation 8617090 "compute"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1067010 "DoubleCumulateTask"
	visibility package 
	nactuals 1
	actual class class_ref 1065218 // CountedCompleter
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3481986 // <realization>
	  relation 3481986 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3481986 // <realization>
	    b parent class_ref 1065218 // CountedCompleter
	end

	attribute 1986690 "array"
	  const_attribute package explicit_type "double"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3482114 // function (<unidirectional association>)
	  relation 3482114 --->
	    a role_name "function" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3482114 // function (<unidirectional association>)
	    b parent class_ref 1067138 // DoubleBinaryOperator
	end

	classrelation 3482242 // left (<unidirectional association>)
	  relation 3482242 --->
	    a role_name "left" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3482242 // left (<unidirectional association>)
	    b parent class_ref 1067010 // DoubleCumulateTask
	end

	classrelation 3482370 // right (<unidirectional association>)
	  relation 3482370 --->
	    a role_name "right" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3482370 // right (<unidirectional association>)
	    b parent class_ref 1067010 // DoubleCumulateTask
	end

	attribute 1986818 "in"
	  package explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1986946 "out"
	  package explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1987074 "lo"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1987202 "hi"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1987330 "origin"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1987458 "fence"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1987586 "threshold"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8617218 "DoubleCumulateTask"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "parent" type class_ref 1067010 // DoubleCumulateTask
	    param inout name "function" type class_ref 1067138 // DoubleBinaryOperator
	    param inout name "array" explicit_type "double"
	  multiplicity "[]"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Root task constructor "
	end

	operation 8617346 "DoubleCumulateTask"
	  package explicit_return_type ""
	  nparams 8
	    param inout name "parent" type class_ref 1067010 // DoubleCumulateTask
	    param inout name "function" type class_ref 1067138 // DoubleBinaryOperator
	    param inout name "array" explicit_type "double"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "threshold" explicit_type "int"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Subtask constructor "
	end

	operation 8617474 "compute"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1067266 "IntCumulateTask"
	visibility package 
	nactuals 1
	actual class class_ref 1065218 // CountedCompleter
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3482498 // <realization>
	  relation 3482498 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3482498 // <realization>
	    b parent class_ref 1065218 // CountedCompleter
	end

	attribute 1987714 "array"
	  const_attribute package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3482626 // function (<unidirectional association>)
	  relation 3482626 --->
	    a role_name "function" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3482626 // function (<unidirectional association>)
	    b parent class_ref 1067394 // IntBinaryOperator
	end

	classrelation 3482754 // left (<unidirectional association>)
	  relation 3482754 --->
	    a role_name "left" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3482754 // left (<unidirectional association>)
	    b parent class_ref 1067266 // IntCumulateTask
	end

	classrelation 3482882 // right (<unidirectional association>)
	  relation 3482882 --->
	    a role_name "right" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3482882 // right (<unidirectional association>)
	    b parent class_ref 1067266 // IntCumulateTask
	end

	attribute 1987842 "in"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1987970 "out"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1988098 "lo"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1988226 "hi"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1988354 "origin"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1988482 "fence"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1988610 "threshold"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8617602 "IntCumulateTask"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "parent" type class_ref 1067266 // IntCumulateTask
	    param inout name "function" type class_ref 1067394 // IntBinaryOperator
	    param inout name "array" explicit_type "int"
	  multiplicity "[]"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Root task constructor "
	end

	operation 8617730 "IntCumulateTask"
	  package explicit_return_type ""
	  nparams 8
	    param inout name "parent" type class_ref 1067266 // IntCumulateTask
	    param inout name "function" type class_ref 1067394 // IntBinaryOperator
	    param inout name "array" explicit_type "int"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "threshold" explicit_type "int"
	    param in name "lo" explicit_type "int"
	    param in name "hi" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Subtask constructor "
	end

	operation 8617858 "compute"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1067522 "Arrays"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains various methods for manipulating arrays (such as
sorting and searching). This class also contains a static factory
that allows arrays to be viewed as lists.

<p>The methods in this class all throw a {@code NullPointerException},
if the specified array reference is null, except where noted.

<p>The documentation for the methods contained in this class includes
briefs description of the <i>implementations</i>. Such descriptions should
be regarded as <i>implementation notes</i>, rather than parts of the
<i>specification</i>. Implementors should feel free to substitute other
algorithms, so long as the specification itself is adhered to. (For
example, the algorithm used by {@code sort(Object[])} does not have to be
a MergeSort, but it does have to be <i>stable</i>.)

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author Josh Bloch
@author Neal Gafter
@author John Rose
@since  1.2
"
      attribute 1988738 "MIN_ARRAY_SORT_GRAN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum array length below which a parallel sorting
algorithm will not further partition the sorting task. Using
smaller sizes typically results in memory contention across
tasks that makes parallel speedups unlikely.

"
      end

      operation 8617986 "Arrays"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suppresses default constructor, ensuring non-instantiability."
      end

      class 1067650 "NaturalOrder"
	visibility package 
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3483010 // <realization>
	  relation 3483010 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3483010 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	operation 8618114 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "first" type class_ref 129538 // Object
	    param inout name "second" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	classrelation 3483138 // INSTANCE (<unidirectional association>)
	  relation 3483138 --->
	    a role_name "INSTANCE" init_value " new NaturalOrder()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3483138 // INSTANCE (<unidirectional association>)
	    b parent class_ref 1067650 // NaturalOrder
	end
      end

      operation 8618242 "rangeCheck"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "arrayLength" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that {@code fromIndex} and {@code toIndex} are in
the range and throws an exception if they aren't.
"
      end

      operation 8618370 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorting methods. Note that all public \"sort\" methods take the
same form: Performing argument checks if necessary, and then
expanding arguments into those required for the internal
implementation methods residing in other package-private
classes (except for legacyMergeSort, included in this class).


Sorts the specified array into ascending numerical order.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8618498 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8618626 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8618754 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8618882 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8619010 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8619138 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8619266 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8619394 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8619522 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8619650 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>The {@code <} relation does not provide a total order on all float
values: {@code -0.0f == 0.0f} is {@code true} and a {@code Float.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Float#compareTo}: {@code -0.0f} is treated as less than value
{@code 0.0f} and {@code Float.NaN} is considered greater than any
other value and all {@code Float.NaN} values are considered equal.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8619778 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>The {@code <} relation does not provide a total order on all float
values: {@code -0.0f == 0.0f} is {@code true} and a {@code Float.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Float#compareTo}: {@code -0.0f} is treated as less than value
{@code 0.0f} and {@code Float.NaN} is considered greater than any
other value and all {@code Float.NaN} values are considered equal.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8619906 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>The {@code <} relation does not provide a total order on all double
values: {@code -0.0d == 0.0d} is {@code true} and a {@code Double.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Double#compareTo}: {@code -0.0d} is treated as less than value
{@code 0.0d} and {@code Double.NaN} is considered greater than any
other value and all {@code Double.NaN} values are considered equal.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
"
      end

      operation 8620034 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty.

<p>The {@code <} relation does not provide a total order on all double
values: {@code -0.0d == 0.0d} is {@code true} and a {@code Double.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Double#compareTo}: {@code -0.0d} is treated as less than value
{@code 0.0d} and {@code Double.NaN} is considered greater than any
other value and all {@code Double.NaN} values are considered equal.

<p>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort
by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}
"
      end

      operation 8620162 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(byte[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(byte[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8620290 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(byte[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(byte[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8620418 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(char[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(char[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8620546 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(char[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(char[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8620674 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(short[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(short[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8620802 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(short[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(short[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8620930 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(int[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(int[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8621058 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(int[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(int[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8621186 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(long[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(long[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8621314 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(long[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(long[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8621442 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>The {@code <} relation does not provide a total order on all float
values: {@code -0.0f == 0.0f} is {@code true} and a {@code Float.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Float#compareTo}: {@code -0.0f} is treated as less than value
{@code 0.0f} and {@code Float.NaN} is considered greater than any
other value and all {@code Float.NaN} values are considered equal.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(float[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(float[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8621570 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

<p>The {@code <} relation does not provide a total order on all float
values: {@code -0.0f == 0.0f} is {@code true} and a {@code Float.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Float#compareTo}: {@code -0.0f} is treated as less than value
{@code 0.0f} and {@code Float.NaN} is considered greater than any
other value and all {@code Float.NaN} values are considered equal.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(float[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(float[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8621698 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>The {@code <} relation does not provide a total order on all double
values: {@code -0.0d == 0.0d} is {@code true} and a {@code Double.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Double#compareTo}: {@code -0.0d} is treated as less than value
{@code 0.0d} and {@code Double.NaN} is considered greater than any
other value and all {@code Double.NaN} values are considered equal.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(double[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(double[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param a the array to be sorted

@since 1.8
"
      end

      operation 8621826 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending numerical order.
The range to be sorted extends from the index {@code fromIndex},
inclusive, to the index {@code toIndex}, exclusive. If
{@code fromIndex == toIndex}, the range to be sorted is empty.

<p>The {@code <} relation does not provide a total order on all double
values: {@code -0.0d == 0.0d} is {@code true} and a {@code Double.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Double#compareTo}: {@code -0.0d} is treated as less than value
{@code 0.0d} and {@code Double.NaN} is considered greater than any
other value and all {@code Double.NaN} values are considered equal.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(double[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(double[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted

@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}

@since 1.8
"
      end

      operation 8621954 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified array of objects into ascending order, according
to the {@linkplain Comparable natural ordering} of its elements.
All elements in the array must implement the {@link Comparable}
interface.  Furthermore, all elements in the array must be
<i>mutually comparable</i> (that is, {@code e1.compareTo(e2)} must
not throw a {@code ClassCastException} for any elements {@code e1}
and {@code e2} in the array).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(Object[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(Object[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param <T> the class of the objects to be sorted
@param a the array to be sorted

@throws ClassCastException if the array contains elements that are not
        <i>mutually comparable</i> (for example, strings and integers)
@throws IllegalArgumentException (optional) if the natural
        ordering of the array elements is found to violate the
        {@link Comparable} contract

@since 1.8
"
      end

      operation 8622082 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified range of the specified array of objects into
ascending order, according to the
{@linkplain Comparable natural ordering} of its
elements.  The range to be sorted extends from index
{@code fromIndex}, inclusive, to index {@code toIndex}, exclusive.
(If {@code fromIndex==toIndex}, the range to be sorted is empty.)  All
elements in this range must implement the {@link Comparable}
interface.  Furthermore, all elements in this range must be <i>mutually
comparable</i> (that is, {@code e1.compareTo(e2)} must not throw a
{@code ClassCastException} for any elements {@code e1} and
{@code e2} in the array).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(Object[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(Object[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param <T> the class of the objects to be sorted
@param a the array to be sorted
@param fromIndex the index of the first element (inclusive) to be
       sorted
@param toIndex the index of the last element (exclusive) to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex} or
        (optional) if the natural ordering of the array elements is
        found to violate the {@link Comparable} contract
@throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or
        {@code toIndex > a.length}
@throws ClassCastException if the array contains elements that are
        not <i>mutually comparable</i> (for example, strings and
        integers).

@since 1.8
"
      end

      operation 8622210 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param inout name "cmp" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified array of objects according to the order induced by
the specified comparator.  All elements in the array must be
<i>mutually comparable</i> by the specified comparator (that is,
{@code c.compare(e1, e2)} must not throw a {@code ClassCastException}
for any elements {@code e1} and {@code e2} in the array).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(Object[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(Object[]) Arrays.sort} method. The algorithm requires a
working space no greater than the size of the original array. The
{@link ForkJoinPool#commonPool() ForkJoin common pool} is used to
execute any parallel tasks.

@param <T> the class of the objects to be sorted
@param a the array to be sorted
@param cmp the comparator to determine the order of the array.  A
       {@code null} value indicates that the elements'
       {@linkplain Comparable natural ordering} should be used.
@throws ClassCastException if the array contains elements that are
        not <i>mutually comparable</i> using the specified comparator
@throws IllegalArgumentException (optional) if the comparator is
        found to violate the {@link java.util.Comparator} contract

@since 1.8
"
      end

      operation 8622338 "parallelSort"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "cmp" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified range of the specified array of objects according
to the order induced by the specified comparator.  The range to be
sorted extends from index {@code fromIndex}, inclusive, to index
{@code toIndex}, exclusive.  (If {@code fromIndex==toIndex}, the
range to be sorted is empty.)  All elements in the range must be
<i>mutually comparable</i> by the specified comparator (that is,
{@code c.compare(e1, e2)} must not throw a {@code ClassCastException}
for any elements {@code e1} and {@code e2} in the range).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

@implNote The sorting algorithm is a parallel sort-merge that breaks the
array into sub-arrays that are themselves sorted and then merged. When
the sub-array length reaches a minimum granularity, the sub-array is
sorted using the appropriate {@link Arrays#sort(Object[]) Arrays.sort}
method. If the length of the specified array is less than the minimum
granularity, then it is sorted using the appropriate {@link
Arrays#sort(Object[]) Arrays.sort} method. The algorithm requires a working
space no greater than the size of the specified range of the original
array. The {@link ForkJoinPool#commonPool() ForkJoin common pool} is
used to execute any parallel tasks.

@param <T> the class of the objects to be sorted
@param a the array to be sorted
@param fromIndex the index of the first element (inclusive) to be
       sorted
@param toIndex the index of the last element (exclusive) to be sorted
@param cmp the comparator to determine the order of the array.  A
       {@code null} value indicates that the elements'
       {@linkplain Comparable natural ordering} should be used.
@throws IllegalArgumentException if {@code fromIndex > toIndex} or
        (optional) if the natural ordering of the array elements is
        found to violate the {@link Comparable} contract
@throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or
        {@code toIndex > a.length}
@throws ClassCastException if the array contains elements that are
        not <i>mutually comparable</i> (for example, strings and
        integers).

@since 1.8
"
      end

      class 1067778 "LegacyMergeSort"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1988866 "userRequested"
	  class_attribute const_attribute private explicit_type "boolean"
	  init_value "
            java.security.AccessController.doPrivileged(
                new sun.security.action.GetBooleanAction(
                    \"java.util.Arrays.useLegacyMergeSort\")).booleanValue()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 8622466 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array of objects into ascending order, according
to the {@linkplain Comparable natural ordering} of its elements.
All elements in the array must implement the {@link Comparable}
interface.  Furthermore, all elements in the array must be
<i>mutually comparable</i> (that is, {@code e1.compareTo(e2)} must
not throw a {@code ClassCastException} for any elements {@code e1}
and {@code e2} in the array).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

<p>Implementation note: This implementation is a stable, adaptive,
iterative mergesort that requires far fewer than n lg(n) comparisons
when the input array is partially sorted, while offering the
performance of a traditional mergesort when the input array is
randomly ordered.  If the input array is nearly sorted, the
implementation requires approximately n comparisons.  Temporary
storage requirements vary from a small constant for nearly sorted
input arrays to n/2 object references for randomly ordered input
arrays.

<p>The implementation takes equal advantage of ascending and
descending order in its input array, and can take advantage of
ascending and descending order in different parts of the the same
input array.  It is well-suited to merging two or more sorted arrays:
simply concatenate the arrays and sort the resulting array.

<p>The implementation was adapted from Tim Peters's list sort for Python
(<a href=\"http://svn.python.org/projects/python/trunk/Objects/listsort.txt\">
TimSort</a>).  It uses techniques from Peter McIlroy's \"Optimistic
Sorting and Information Theoretic Complexity\", in Proceedings of the
Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
January 1993.

@param a the array to be sorted
@throws ClassCastException if the array contains elements that are not
        <i>mutually comparable</i> (for example, strings and integers)
@throws IllegalArgumentException (optional) if the natural
        ordering of the array elements is found to violate the
        {@link Comparable} contract
"
      end

      operation 8622594 "legacyMergeSort"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be removed in a future release. "
      end

      operation 8622722 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the specified array of objects into
ascending order, according to the
{@linkplain Comparable natural ordering} of its
elements.  The range to be sorted extends from index
{@code fromIndex}, inclusive, to index {@code toIndex}, exclusive.
(If {@code fromIndex==toIndex}, the range to be sorted is empty.)  All
elements in this range must implement the {@link Comparable}
interface.  Furthermore, all elements in this range must be <i>mutually
comparable</i> (that is, {@code e1.compareTo(e2)} must not throw a
{@code ClassCastException} for any elements {@code e1} and
{@code e2} in the array).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

<p>Implementation note: This implementation is a stable, adaptive,
iterative mergesort that requires far fewer than n lg(n) comparisons
when the input array is partially sorted, while offering the
performance of a traditional mergesort when the input array is
randomly ordered.  If the input array is nearly sorted, the
implementation requires approximately n comparisons.  Temporary
storage requirements vary from a small constant for nearly sorted
input arrays to n/2 object references for randomly ordered input
arrays.

<p>The implementation takes equal advantage of ascending and
descending order in its input array, and can take advantage of
ascending and descending order in different parts of the the same
input array.  It is well-suited to merging two or more sorted arrays:
simply concatenate the arrays and sort the resulting array.

<p>The implementation was adapted from Tim Peters's list sort for Python
(<a href=\"http://svn.python.org/projects/python/trunk/Objects/listsort.txt\">
TimSort</a>).  It uses techniques from Peter McIlroy's \"Optimistic
Sorting and Information Theoretic Complexity\", in Proceedings of the
Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
January 1993.

@param a the array to be sorted
@param fromIndex the index of the first element (inclusive) to be
       sorted
@param toIndex the index of the last element (exclusive) to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex} or
        (optional) if the natural ordering of the array elements is
        found to violate the {@link Comparable} contract
@throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or
        {@code toIndex > a.length}
@throws ClassCastException if the array contains elements that are
        not <i>mutually comparable</i> (for example, strings and
        integers).
"
      end

      operation 8622850 "legacyMergeSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be removed in a future release. "
      end

      attribute 1988994 "INSERTIONSORT_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tuning parameter: list size at or below which insertion sort will be
used in preference to mergesort.
To be removed in a future release.

"
      end

      operation 8622978 "mergeSort"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "src" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "dest" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "low" explicit_type "int"
	  param in name "high" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Src is the source array that starts at index 0
Dest is the (possibly larger) array destination with a possible offset
low is the index in dest to start sorting
high is the end index in dest to end sorting
off is the offset to generate corresponding low, high in src
To be removed in a future release.
"
      end

      operation 8623106 "swap"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "x" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Swaps x[a] with x[b].
"
      end

      operation 8623234 "sort"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array of objects according to the order induced by
the specified comparator.  All elements in the array must be
<i>mutually comparable</i> by the specified comparator (that is,
{@code c.compare(e1, e2)} must not throw a {@code ClassCastException}
for any elements {@code e1} and {@code e2} in the array).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

<p>Implementation note: This implementation is a stable, adaptive,
iterative mergesort that requires far fewer than n lg(n) comparisons
when the input array is partially sorted, while offering the
performance of a traditional mergesort when the input array is
randomly ordered.  If the input array is nearly sorted, the
implementation requires approximately n comparisons.  Temporary
storage requirements vary from a small constant for nearly sorted
input arrays to n/2 object references for randomly ordered input
arrays.

<p>The implementation takes equal advantage of ascending and
descending order in its input array, and can take advantage of
ascending and descending order in different parts of the the same
input array.  It is well-suited to merging two or more sorted arrays:
simply concatenate the arrays and sort the resulting array.

<p>The implementation was adapted from Tim Peters's list sort for Python
(<a href=\"http://svn.python.org/projects/python/trunk/Objects/listsort.txt\">
TimSort</a>).  It uses techniques from Peter McIlroy's \"Optimistic
Sorting and Information Theoretic Complexity\", in Proceedings of the
Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
January 1993.

@param <T> the class of the objects to be sorted
@param a the array to be sorted
@param c the comparator to determine the order of the array.  A
       {@code null} value indicates that the elements'
       {@linkplain Comparable natural ordering} should be used.
@throws ClassCastException if the array contains elements that are
        not <i>mutually comparable</i> using the specified comparator
@throws IllegalArgumentException (optional) if the comparator is
        found to violate the {@link Comparator} contract
"
      end

      operation 8623362 "legacyMergeSort"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be removed in a future release. "
      end

      operation 8623490 "sort"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the specified array of objects according
to the order induced by the specified comparator.  The range to be
sorted extends from index {@code fromIndex}, inclusive, to index
{@code toIndex}, exclusive.  (If {@code fromIndex==toIndex}, the
range to be sorted is empty.)  All elements in the range must be
<i>mutually comparable</i> by the specified comparator (that is,
{@code c.compare(e1, e2)} must not throw a {@code ClassCastException}
for any elements {@code e1} and {@code e2} in the range).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

<p>Implementation note: This implementation is a stable, adaptive,
iterative mergesort that requires far fewer than n lg(n) comparisons
when the input array is partially sorted, while offering the
performance of a traditional mergesort when the input array is
randomly ordered.  If the input array is nearly sorted, the
implementation requires approximately n comparisons.  Temporary
storage requirements vary from a small constant for nearly sorted
input arrays to n/2 object references for randomly ordered input
arrays.

<p>The implementation takes equal advantage of ascending and
descending order in its input array, and can take advantage of
ascending and descending order in different parts of the the same
input array.  It is well-suited to merging two or more sorted arrays:
simply concatenate the arrays and sort the resulting array.

<p>The implementation was adapted from Tim Peters's list sort for Python
(<a href=\"http://svn.python.org/projects/python/trunk/Objects/listsort.txt\">
TimSort</a>).  It uses techniques from Peter McIlroy's \"Optimistic
Sorting and Information Theoretic Complexity\", in Proceedings of the
Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
January 1993.

@param <T> the class of the objects to be sorted
@param a the array to be sorted
@param fromIndex the index of the first element (inclusive) to be
       sorted
@param toIndex the index of the last element (exclusive) to be sorted
@param c the comparator to determine the order of the array.  A
       {@code null} value indicates that the elements'
       {@linkplain Comparable natural ordering} should be used.
@throws ClassCastException if the array contains elements that are not
        <i>mutually comparable</i> using the specified comparator.
@throws IllegalArgumentException if {@code fromIndex > toIndex} or
        (optional) if the comparator is found to violate the
        {@link Comparator} contract
@throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or
        {@code toIndex > a.length}
"
      end

      operation 8623618 "legacyMergeSort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be removed in a future release. "
      end

      operation 8623746 "mergeSort"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "src" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "dest" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "low" explicit_type "int"
	  param in name "high" explicit_type "int"
	  param in name "off" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\", \"unchecked\"})
"
	
	
	
	comment "Src is the source array that starts at index 0
Dest is the (possibly larger) array destination with a possible offset
low is the index in dest to start sorting
high is the end index in dest to end sorting
off is the offset into src corresponding to low in dest
To be removed in a future release.
"
      end

      operation 8623874 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "op" type class_ref 1066626 // BinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parallel prefix

Cumulates, in parallel, each element of the given array in place,
using the supplied function. For example if the array initially
holds {@code [2, 1, 0, 3]} and the operation performs addition,
then upon return the array holds {@code [2, 3, 3, 6]}.
Parallel prefix computation is usually more efficient than
sequential loops for large arrays.

@param <T> the class of the objects in the array
@param array the array, which is modified in-place by this method
@param op a side-effect-free, associative function to perform the
cumulation
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624002 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "op" type class_ref 1066626 // BinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs {@link #parallelPrefix(Object[], BinaryOperator)}
for the given subrange of the array.

@param <T> the class of the objects in the array
@param array the array
@param fromIndex the index of the first element, inclusive
@param toIndex the index of the last element, exclusive
@param op a side-effect-free, associative function to perform the
cumulation
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > array.length}
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624130 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param inout name "op" type class_ref 1066882 // LongBinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cumulates, in parallel, each element of the given array in place,
using the supplied function. For example if the array initially
holds {@code [2, 1, 0, 3]} and the operation performs addition,
then upon return the array holds {@code [2, 3, 3, 6]}.
Parallel prefix computation is usually more efficient than
sequential loops for large arrays.

@param array the array, which is modified in-place by this method
@param op a side-effect-free, associative function to perform the
cumulation
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624258 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "op" type class_ref 1066882 // LongBinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs {@link #parallelPrefix(long[], LongBinaryOperator)}
for the given subrange of the array.

@param array the array
@param fromIndex the index of the first element, inclusive
@param toIndex the index of the last element, exclusive
@param op a side-effect-free, associative function to perform the
cumulation
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > array.length}
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624386 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param inout name "op" type class_ref 1067138 // DoubleBinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cumulates, in parallel, each element of the given array in place,
using the supplied function. For example if the array initially
holds {@code [2.0, 1.0, 0.0, 3.0]} and the operation performs addition,
then upon return the array holds {@code [2.0, 3.0, 3.0, 6.0]}.
Parallel prefix computation is usually more efficient than
sequential loops for large arrays.

<p> Because floating-point operations may not be strictly associative,
the returned result may not be identical to the value that would be
obtained if the operation was performed sequentially.

@param array the array, which is modified in-place by this method
@param op a side-effect-free function to perform the cumulation
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624514 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "op" type class_ref 1067138 // DoubleBinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs {@link #parallelPrefix(double[], DoubleBinaryOperator)}
for the given subrange of the array.

@param array the array
@param fromIndex the index of the first element, inclusive
@param toIndex the index of the last element, exclusive
@param op a side-effect-free, associative function to perform the
cumulation
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > array.length}
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624642 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param inout name "op" type class_ref 1067394 // IntBinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cumulates, in parallel, each element of the given array in place,
using the supplied function. For example if the array initially
holds {@code [2, 1, 0, 3]} and the operation performs addition,
then upon return the array holds {@code [2, 3, 3, 6]}.
Parallel prefix computation is usually more efficient than
sequential loops for large arrays.

@param array the array, which is modified in-place by this method
@param op a side-effect-free, associative function to perform the
cumulation
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624770 "parallelPrefix"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "op" type class_ref 1067394 // IntBinaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs {@link #parallelPrefix(int[], IntBinaryOperator)}
for the given subrange of the array.

@param array the array
@param fromIndex the index of the first element, inclusive
@param toIndex the index of the last element, exclusive
@param op a side-effect-free, associative function to perform the
cumulation
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > array.length}
@throws NullPointerException if the specified array or function is null
@since 1.8
"
      end

      operation 8624898 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Searching

Searches the specified array of longs for the specified value using the
binary search algorithm.  The array must be sorted (as
by the {@link #sort(long[])} method) prior to making this call.  If it
is not sorted, the results are undefined.  If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8625026 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of longs for the specified value using the
binary search algorithm.
The range must be sorted (as
by the {@link #sort(long[], int, int)} method)
prior to making this call.  If it
is not sorted, the results are undefined.  If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8625154 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8625282 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array of ints for the specified value using the
binary search algorithm.  The array must be sorted (as
by the {@link #sort(int[])} method) prior to making this call.  If it
is not sorted, the results are undefined.  If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8625410 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of ints for the specified value using the
binary search algorithm.
The range must be sorted (as
by the {@link #sort(int[], int, int)} method)
prior to making this call.  If it
is not sorted, the results are undefined.  If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8625538 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8625666 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "key" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array of shorts for the specified value using
the binary search algorithm.  The array must be sorted
(as by the {@link #sort(short[])} method) prior to making this call.  If
it is not sorted, the results are undefined.  If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8625794 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of shorts for the specified value using
the binary search algorithm.
The range must be sorted
(as by the {@link #sort(short[], int, int)} method)
prior to making this call.  If
it is not sorted, the results are undefined.  If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8625922 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8626050 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "key" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array of chars for the specified value using the
binary search algorithm.  The array must be sorted (as
by the {@link #sort(char[])} method) prior to making this call.  If it
is not sorted, the results are undefined.  If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8626178 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of chars for the specified value using the
binary search algorithm.
The range must be sorted (as
by the {@link #sort(char[], int, int)} method)
prior to making this call.  If it
is not sorted, the results are undefined.  If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8626306 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8626434 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "key" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array of bytes for the specified value using the
binary search algorithm.  The array must be sorted (as
by the {@link #sort(byte[])} method) prior to making this call.  If it
is not sorted, the results are undefined.  If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8626562 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of bytes for the specified value using the
binary search algorithm.
The range must be sorted (as
by the {@link #sort(byte[], int, int)} method)
prior to making this call.  If it
is not sorted, the results are undefined.  If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8626690 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8626818 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "key" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array of doubles for the specified value using
the binary search algorithm.  The array must be sorted
(as by the {@link #sort(double[])} method) prior to making this call.
If it is not sorted, the results are undefined.  If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found.  This method considers all NaN values to be
equivalent and equal.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8626946 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of doubles for the specified value using
the binary search algorithm.
The range must be sorted
(as by the {@link #sort(double[], int, int)} method)
prior to making this call.
If it is not sorted, the results are undefined.  If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found.  This method considers all NaN values to be
equivalent and equal.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8627074 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8627202 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "key" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array of floats for the specified value using
the binary search algorithm. The array must be sorted
(as by the {@link #sort(float[])} method) prior to making this call. If
it is not sorted, the results are undefined. If the array contains
multiple elements with the specified value, there is no guarantee which
one will be found. This method considers all NaN values to be
equivalent and equal.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>. The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key. Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
"
      end

      operation 8627330 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array of floats for the specified value using
the binary search algorithm.
The range must be sorted
(as by the {@link #sort(float[], int, int)} method)
prior to making this call. If
it is not sorted, the results are undefined. If the range contains
multiple elements with the specified value, there is no guarantee which
one will be found. This method considers all NaN values to be
equivalent and equal.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>. The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key. Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8627458 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "key" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8627586 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array for the specified object using the binary
search algorithm. The array must be sorted into ascending order
according to the
{@linkplain Comparable natural ordering}
of its elements (as by the
{@link #sort(Object[])} method) prior to making this call.
If it is not sorted, the results are undefined.
(If the array contains elements that are not mutually comparable (for
example, strings and integers), it <i>cannot</i> be sorted according
to the natural ordering of its elements, hence results are undefined.)
If the array contains multiple
elements equal to the specified object, there is no guarantee which
one will be found.

@param a the array to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws ClassCastException if the search key is not comparable to the
        elements of the array.
"
      end

      operation 8627714 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array for the specified object using the binary
search algorithm.
The range must be sorted into ascending order
according to the
{@linkplain Comparable natural ordering}
of its elements (as by the
{@link #sort(Object[], int, int)} method) prior to making this
call.  If it is not sorted, the results are undefined.
(If the range contains elements that are not mutually comparable (for
example, strings and integers), it <i>cannot</i> be sorted according
to the natural ordering of its elements, hence results are undefined.)
If the range contains multiple
elements equal to the specified object, there is no guarantee which
one will be found.

@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws ClassCastException if the search key is not comparable to the
        elements of the array within the specified range.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8627842 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8627970 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param inout name "key" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified array for the specified object using the binary
search algorithm.  The array must be sorted into ascending order
according to the specified comparator (as by the
{@link #sort(Object[], Comparator) sort(T[], Comparator)}
method) prior to making this call.  If it is
not sorted, the results are undefined.
If the array contains multiple
elements equal to the specified object, there is no guarantee which one
will be found.

@param <T> the class of the objects in the array
@param a the array to be searched
@param key the value to be searched for
@param c the comparator by which the array is ordered.  A
       <tt>null</tt> value indicates that the elements'
       {@linkplain Comparable natural ordering} should be used.
@return index of the search key, if it is contained in the array;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element greater than the key, or <tt>a.length</tt> if all
        elements in the array are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws ClassCastException if the array contains elements that are not
        <i>mutually comparable</i> using the specified comparator,
        or the search key is not comparable to the
        elements of the array using this comparator.
"
      end

      operation 8628098 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 5
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "key" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? super T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches a range of
the specified array for the specified object using the binary
search algorithm.
The range must be sorted into ascending order
according to the specified comparator (as by the
{@link #sort(Object[], int, int, Comparator)
sort(T[], int, int, Comparator)}
method) prior to making this call.
If it is not sorted, the results are undefined.
If the range contains multiple elements equal to the specified object,
there is no guarantee which one will be found.

@param <T> the class of the objects in the array
@param a the array to be searched
@param fromIndex the index of the first element (inclusive) to be
         searched
@param toIndex the index of the last element (exclusive) to be searched
@param key the value to be searched for
@param c the comparator by which the array is ordered.  A
       <tt>null</tt> value indicates that the elements'
       {@linkplain Comparable natural ordering} should be used.
@return index of the search key, if it is contained in the array
        within the specified range;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the array: the index of the first
        element in the range greater than the key,
        or <tt>toIndex</tt> if all
        elements in the range are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws ClassCastException if the range contains elements that are not
        <i>mutually comparable</i> using the specified comparator,
        or the search key is not comparable to the
        elements in the range using this comparator.
@throws IllegalArgumentException
        if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
        if {@code fromIndex < 0 or toIndex > a.length}
@since 1.6
"
      end

      operation 8628226 "binarySearch0"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "key" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? super T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Like public version, but without range checks."
      end

      operation 8628354 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param inout name "a2" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Equality Testing

Returns <tt>true</tt> if the two specified arrays of longs are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8628482 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param inout name "a2" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of ints are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8628610 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param inout name "a2" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of shorts are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8628738 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param inout name "a2" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of chars are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8628866 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param inout name "a2" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of bytes are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8628994 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "a2" explicit_type "boolean"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of booleans are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8629122 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param inout name "a2" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of doubles are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

Two doubles <tt>d1</tt> and <tt>d2</tt> are considered equal if:
<pre>    <tt>new Double(d1).equals(new Double(d2))</tt></pre>
(Unlike the <tt>==</tt> operator, this method considers
<tt>NaN</tt> equals to itself, and 0.0d unequal to -0.0d.)

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
@see Double#equals(Object)
"
      end

      operation 8629250 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param inout name "a2" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of floats are
<i>equal</i> to one another.  Two arrays are considered equal if both
arrays contain the same number of elements, and all corresponding pairs
of elements in the two arrays are equal.  In other words, two arrays
are equal if they contain the same elements in the same order.  Also,
two array references are considered equal if both are <tt>null</tt>.<p>

Two floats <tt>f1</tt> and <tt>f2</tt> are considered equal if:
<pre>    <tt>new Float(f1).equals(new Float(f2))</tt></pre>
(Unlike the <tt>==</tt> operator, this method considers
<tt>NaN</tt> equals to itself, and 0.0f unequal to -0.0f.)

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
@see Float#equals(Object)
"
      end

      operation 8629378 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "a2" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays of Objects are
<i>equal</i> to one another.  The two arrays are considered equal if
both arrays contain the same number of elements, and all corresponding
pairs of elements in the two arrays are equal.  Two objects <tt>e1</tt>
and <tt>e2</tt> are considered <i>equal</i> if <tt>(e1==null ? e2==null
: e1.equals(e2))</tt>.  In other words, the two arrays are equal if
they contain the same elements in the same order.  Also, two array
references are considered equal if both are <tt>null</tt>.<p>

@param a one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
"
      end

      operation 8629506 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "val" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Filling

Assigns the specified long value to each element of the specified array
of longs.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8629634 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified long value to each element of the specified
range of the specified array of longs.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8629762 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "val" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified int value to each element of the specified array
of ints.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8629890 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified int value to each element of the specified
range of the specified array of ints.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8630018 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "val" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified short value to each element of the specified array
of shorts.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8630146 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified short value to each element of the specified
range of the specified array of shorts.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8630274 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "val" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified char value to each element of the specified array
of chars.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8630402 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified char value to each element of the specified
range of the specified array of chars.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8630530 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "val" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified byte value to each element of the specified array
of bytes.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8630658 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified byte value to each element of the specified
range of the specified array of bytes.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8630786 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "val" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified boolean value to each element of the specified
array of booleans.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8630914 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "boolean"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "val" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified boolean value to each element of the specified
range of the specified array of booleans.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8631042 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "val" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified double value to each element of the specified
array of doubles.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8631170 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified double value to each element of the specified
range of the specified array of doubles.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8631298 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "val" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified float value to each element of the specified array
of floats.

@param a the array to be filled
@param val the value to be stored in all elements of the array
"
      end

      operation 8631426 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "val" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified float value to each element of the specified
range of the specified array of floats.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
"
      end

      operation 8631554 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "val" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified Object reference to each element of the specified
array of Objects.

@param a the array to be filled
@param val the value to be stored in all elements of the array
@throws ArrayStoreException if the specified value is not of a
        runtime type that can be stored in the specified array
"
      end

      operation 8631682 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "val" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the specified Object reference to each element of the specified
range of the specified array of Objects.  The range to be filled
extends from index <tt>fromIndex</tt>, inclusive, to index
<tt>toIndex</tt>, exclusive.  (If <tt>fromIndex==toIndex</tt>, the
range to be filled is empty.)

@param a the array to be filled
@param fromIndex the index of the first element (inclusive) to be
       filled with the specified value
@param toIndex the index of the last element (exclusive) to be
       filled with the specified value
@param val the value to be stored in all elements of the array
@throws IllegalArgumentException if <tt>fromIndex &gt; toIndex</tt>
@throws ArrayIndexOutOfBoundsException if <tt>fromIndex &lt; 0</tt> or
        <tt>toIndex &gt; a.length</tt>
@throws ArrayStoreException if the specified value is not of a
        runtime type that can be stored in the specified array
"
      end

      operation 8631810 "copyOf"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "original" explicit_type "T"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Cloning

Copies the specified array, truncating or padding with nulls (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>null</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.
The resulting array is of exactly the same class as the original array.

@param <T> the class of the objects in the array
@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with nulls
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8631938 "copyOf"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "original" explicit_type "U"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	  param inout name "newType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T,U> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}<? extends T[]> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with nulls (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>null</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.
The resulting array is of the class <tt>newType</tt>.

@param <U> the class of the objects in the original array
@param <T> the class of the objects in the returned array
@param original the array to be copied
@param newLength the length of the copy to be returned
@param newType the class of the copy to be returned
@return a copy of the original array, truncated or padded with nulls
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@throws ArrayStoreException if an element copied from
    <tt>original</tt> is not of a runtime type that can be stored in
    an array of class <tt>newType</tt>
@since 1.6
"
      end

      operation 8632066 "copyOf"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "original" explicit_type "byte"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with zeros (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>(byte)0</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with zeros
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632194 "copyOf"
	class_operation public explicit_return_type "short"
	nparams 2
	  param inout name "original" explicit_type "short"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with zeros (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>(short)0</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with zeros
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632322 "copyOf"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "original" explicit_type "int"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with zeros (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>0</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with zeros
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632450 "copyOf"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "original" explicit_type "long"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with zeros (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>0L</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with zeros
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632578 "copyOf"
	class_operation public explicit_return_type "char"
	nparams 2
	  param inout name "original" explicit_type "char"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with null characters (if necessary)
so the copy has the specified length.  For all indices that are valid
in both the original array and the copy, the two arrays will contain
identical values.  For any indices that are valid in the copy but not
the original, the copy will contain <tt>'\\\\u000'</tt>.  Such indices
will exist if and only if the specified length is greater than that of
the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with null characters
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632706 "copyOf"
	class_operation public explicit_return_type "float"
	nparams 2
	  param inout name "original" explicit_type "float"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with zeros (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>0f</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with zeros
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632834 "copyOf"
	class_operation public explicit_return_type "double"
	nparams 2
	  param inout name "original" explicit_type "double"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with zeros (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>0d</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with zeros
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8632962 "copyOf"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "original" explicit_type "boolean"
	multiplicity "[]"
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified array, truncating or padding with <tt>false</tt> (if necessary)
so the copy has the specified length.  For all indices that are
valid in both the original array and the copy, the two arrays will
contain identical values.  For any indices that are valid in the
copy but not the original, the copy will contain <tt>false</tt>.
Such indices will exist if and only if the specified length
is greater than that of the original array.

@param original the array to be copied
@param newLength the length of the copy to be returned
@return a copy of the original array, truncated or padded with false elements
    to obtain the specified length
@throws NegativeArraySizeException if <tt>newLength</tt> is negative
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633090 "copyOfRange"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "original" explicit_type "T"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>null</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.
<p>
The resulting array is of exactly the same class as the original array.

@param <T> the class of the objects in the array
@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with nulls to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633218 "copyOfRange"
	class_operation public explicit_return_type "T"
	nparams 4
	  param inout name "original" explicit_type "U"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param inout name "newType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T,U> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? extends T[]> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>null</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.
The resulting array is of the class <tt>newType</tt>.

@param <U> the class of the objects in the original array
@param <T> the class of the objects in the returned array
@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@param newType the class of the copy to be returned
@return a new array containing the specified range from the original array,
    truncated or padded with nulls to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@throws ArrayStoreException if an element copied from
    <tt>original</tt> is not of a runtime type that can be stored in
    an array of class <tt>newType</tt>.
@since 1.6
"
      end

      operation 8633346 "copyOfRange"
	class_operation public explicit_return_type "byte"
	nparams 3
	  param inout name "original" explicit_type "byte"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>(byte)0</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with zeros to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633474 "copyOfRange"
	class_operation public explicit_return_type "short"
	nparams 3
	  param inout name "original" explicit_type "short"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>(short)0</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with zeros to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633602 "copyOfRange"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "original" explicit_type "int"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>0</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with zeros to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633730 "copyOfRange"
	class_operation public explicit_return_type "long"
	nparams 3
	  param inout name "original" explicit_type "long"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>0L</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with zeros to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633858 "copyOfRange"
	class_operation public explicit_return_type "char"
	nparams 3
	  param inout name "original" explicit_type "char"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>'\\\\u000'</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with null characters to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8633986 "copyOfRange"
	class_operation public explicit_return_type "float"
	nparams 3
	  param inout name "original" explicit_type "float"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>0f</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with zeros to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8634114 "copyOfRange"
	class_operation public explicit_return_type "double"
	nparams 3
	  param inout name "original" explicit_type "double"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>0d</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with zeros to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8634242 "copyOfRange"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "original" explicit_type "boolean"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified range of the specified array into a new array.
The initial index of the range (<tt>from</tt>) must lie between zero
and <tt>original.length</tt>, inclusive.  The value at
<tt>original[from]</tt> is placed into the initial element of the copy
(unless <tt>from == original.length</tt> or <tt>from == to</tt>).
Values from subsequent elements in the original array are placed into
subsequent elements in the copy.  The final index of the range
(<tt>to</tt>), which must be greater than or equal to <tt>from</tt>,
may be greater than <tt>original.length</tt>, in which case
<tt>false</tt> is placed in all elements of the copy whose index is
greater than or equal to <tt>original.length - from</tt>.  The length
of the returned array will be <tt>to - from</tt>.

@param original the array from which a range is to be copied
@param from the initial index of the range to be copied, inclusive
@param to the final index of the range to be copied, exclusive.
    (This index may lie outside the array.)
@return a new array containing the specified range from the original array,
    truncated or padded with false elements to obtain the required length
@throws ArrayIndexOutOfBoundsException if {@code from < 0}
    or {@code from > original.length}
@throws IllegalArgumentException if <tt>from &gt; to</tt>
@throws NullPointerException if <tt>original</tt> is null
@since 1.6
"
      end

      operation 8634370 "asList"
	class_operation public return_type class_ref 175362 // List
	nparams 1
	  param inout name "" explicit_type "T...a"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
@SuppressWarnings(\"varargs\")
"
	
	
	
	comment " Misc

Returns a fixed-size list backed by the specified array.  (Changes to
the returned list \"write through\" to the array.)  This method acts
as bridge between array-based and collection-based APIs, in
combination with {@link Collection#toArray}.  The returned list is
serializable and implements {@link RandomAccess}.

<p>This method also provides a convenient way to create a fixed-size
list initialized to contain several elements:
<pre>
    List&lt;String&gt; stooges = Arrays.asList(\"Larry\", \"Moe\", \"Curly\");
</pre>

@param <T> the class of the objects in the array
@param a the array by which the list will be backed
@return a list view of the specified array
"
      end

      class 1067906 "ArrayList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 183938 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3483266 // <realization>
	  relation 3483266 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3483266 // <realization>
	    b parent class_ref 183938 // AbstractList
	end

	classrelation 3483394 // <realization>
	  relation 3483394 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3483394 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	classrelation 3483522 // <realization>
	  relation 3483522 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3483522 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 1989122 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2764017481108945198L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1989250 "a"
	  const_attribute private explicit_type "E"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8634498 "ArrayList"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "array" explicit_type "E"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8634626 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8634754 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8634882 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8635010 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635138 "set"
	  cpp_inline public explicit_return_type "E"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635266 "indexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635394 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635522 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635650 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635778 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "operator" type class_ref 184834 // UnaryOperator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8635906 "sort"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8636034 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>long</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Long}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636162 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two non-null <tt>int</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Integer}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636290 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>short</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Short}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636418 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>char</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Character}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636546 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>byte</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Byte}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636674 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "boolean"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>boolean</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Boolean}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636802 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>float</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Float}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8636930 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.
For any two <tt>double</tt> arrays <tt>a</tt> and <tt>b</tt>
such that <tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is the same value that would be
obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}
method on a {@link List} containing a sequence of {@link Double}
instances representing the elements of <tt>a</tt> in the same order.
If <tt>a</tt> is <tt>null</tt>, this method returns 0.

@param a the array whose hash value to compute
@return a content-based hash code for <tt>a</tt>
@since 1.5
"
      end

      operation 8637058 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the specified array.  If
the array contains other arrays as elements, the hash code is based on
their identities rather than their contents.  It is therefore
acceptable to invoke this method on an array that contains itself as an
element,  either directly or indirectly through one or more levels of
arrays.

<p>For any two arrays <tt>a</tt> and <tt>b</tt> such that
<tt>Arrays.equals(a, b)</tt>, it is also the case that
<tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.

<p>The value returned by this method is equal to the value that would
be returned by <tt>Arrays.asList(a).hashCode()</tt>, unless <tt>a</tt>
is <tt>null</tt>, in which case <tt>0</tt> is returned.

@param a the array whose content-based hash code to compute
@return a content-based hash code for <tt>a</tt>
@see #deepHashCode(Object[])
@since 1.5
"
      end

      operation 8637186 "deepHashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the \"deep contents\" of the specified
array.  If the array contains other arrays as elements, the
hash code is based on their contents and so on, ad infinitum.
It is therefore unacceptable to invoke this method on an array that
contains itself as an element, either directly or indirectly through
one or more levels of arrays.  The behavior of such an invocation is
undefined.

<p>For any two arrays <tt>a</tt> and <tt>b</tt> such that
<tt>Arrays.deepEquals(a, b)</tt>, it is also the case that
<tt>Arrays.deepHashCode(a) == Arrays.deepHashCode(b)</tt>.

<p>The computation of the value returned by this method is similar to
that of the value returned by {@link List#hashCode()} on a list
containing the same elements as <tt>a</tt> in the same order, with one
difference: If an element <tt>e</tt> of <tt>a</tt> is itself an array,
its hash code is computed not by calling <tt>e.hashCode()</tt>, but as
by calling the appropriate overloading of <tt>Arrays.hashCode(e)</tt>
if <tt>e</tt> is an array of a primitive type, or as by calling
<tt>Arrays.deepHashCode(e)</tt> recursively if <tt>e</tt> is an array
of a reference type.  If <tt>a</tt> is <tt>null</tt>, this method
returns 0.

@param a the array whose deep-content-based hash code to compute
@return a deep-content-based hash code for <tt>a</tt>
@see #hashCode(Object[])
@since 1.5
"
      end

      operation 8637314 "deepEquals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a1" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "a2" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the two specified arrays are <i>deeply
equal</i> to one another.  Unlike the {@link #equals(Object[],Object[])}
method, this method is appropriate for use with nested arrays of
arbitrary depth.

<p>Two array references are considered deeply equal if both
are <tt>null</tt>, or if they refer to arrays that contain the same
number of elements and all corresponding pairs of elements in the two
arrays are deeply equal.

<p>Two possibly <tt>null</tt> elements <tt>e1</tt> and <tt>e2</tt> are
deeply equal if any of the following conditions hold:
<ul>
   <li> <tt>e1</tt> and <tt>e2</tt> are both arrays of object reference
        types, and <tt>Arrays.deepEquals(e1, e2) would return true</tt>
   <li> <tt>e1</tt> and <tt>e2</tt> are arrays of the same primitive
        type, and the appropriate overloading of
        <tt>Arrays.equals(e1, e2)</tt> would return true.
   <li> <tt>e1 == e2</tt>
   <li> <tt>e1.equals(e2)</tt> would return true.
</ul>
Note that this definition permits <tt>null</tt> elements at any depth.

<p>If either of the specified arrays contain themselves as elements
either directly or indirectly through one or more levels of arrays,
the behavior of this method is undefined.

@param a1 one array to be tested for equality
@param a2 the other array to be tested for equality
@return <tt>true</tt> if the two arrays are equal
@see #equals(Object[],Object[])
@see Objects#deepEquals(Object, Object)
@since 1.5
"
      end

      operation 8637442 "deepEquals0"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "e1" type class_ref 129538 // Object
	  param inout name "e2" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8637570 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(long)</tt>.  Returns <tt>\"null\"</tt> if <tt>a</tt>
is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8637698 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(int)</tt>.  Returns <tt>\"null\"</tt> if <tt>a</tt> is
<tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8637826 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(short)</tt>.  Returns <tt>\"null\"</tt> if <tt>a</tt>
is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8637954 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(char)</tt>.  Returns <tt>\"null\"</tt> if <tt>a</tt>
is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8638082 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements
are separated by the characters <tt>\", \"</tt> (a comma followed
by a space).  Elements are converted to strings as by
<tt>String.valueOf(byte)</tt>.  Returns <tt>\"null\"</tt> if
<tt>a</tt> is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8638210 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "boolean"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(boolean)</tt>.  Returns <tt>\"null\"</tt> if
<tt>a</tt> is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8638338 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(float)</tt>.  Returns <tt>\"null\"</tt> if <tt>a</tt>
is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8638466 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
The string representation consists of a list of the array's elements,
enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent elements are
separated by the characters <tt>\", \"</tt> (a comma followed by a
space).  Elements are converted to strings as by
<tt>String.valueOf(double)</tt>.  Returns <tt>\"null\"</tt> if <tt>a</tt>
is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@since 1.5
"
      end

      operation 8638594 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the contents of the specified array.
If the array contains other arrays as elements, they are converted to
strings by the {@link Object#toString} method inherited from
<tt>Object</tt>, which describes their <i>identities</i> rather than
their contents.

<p>The value returned by this method is equal to the value that would
be returned by <tt>Arrays.asList(a).toString()</tt>, unless <tt>a</tt>
is <tt>null</tt>, in which case <tt>\"null\"</tt> is returned.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@see #deepToString(Object[])
@since 1.5
"
      end

      operation 8638722 "deepToString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the \"deep contents\" of the specified
array.  If the array contains other arrays as elements, the string
representation contains their contents and so on.  This method is
designed for converting multidimensional arrays to strings.

<p>The string representation consists of a list of the array's
elements, enclosed in square brackets (<tt>\"[]\"</tt>).  Adjacent
elements are separated by the characters <tt>\", \"</tt> (a comma
followed by a space).  Elements are converted to strings as by
<tt>String.valueOf(Object)</tt>, unless they are themselves
arrays.

<p>If an element <tt>e</tt> is an array of a primitive type, it is
converted to a string as by invoking the appropriate overloading of
<tt>Arrays.toString(e)</tt>.  If an element <tt>e</tt> is an array of a
reference type, it is converted to a string as by invoking
this method recursively.

<p>To avoid infinite recursion, if the specified array contains itself
as an element, or contains an indirect reference to itself through one
or more levels of arrays, the self-reference is converted to the string
<tt>\"[...]\"</tt>.  For example, an array containing only a reference
to itself would be rendered as <tt>\"[[...]]\"</tt>.

<p>This method returns <tt>\"null\"</tt> if the specified array
is <tt>null</tt>.

@param a the array whose string representation to return
@return a string representation of <tt>a</tt>
@see #toString(Object[])
@since 1.5
"
      end

      operation 8638850 "deepToString"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "buf" type class_ref 173058 // StringBuilder
	  param inout name "dejaVu" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}<Object[]> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8638978 "setAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068034 // IntFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? extends T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, using the provided
generator function to compute each element.

<p>If the generator function throws an exception, it is relayed to
the caller and the array is left in an indeterminate state.

@param <T> type of elements of the array
@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639106 "parallelSetAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068034 // IntFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? extends T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, in parallel, using the
provided generator function to compute each element.

<p>If the generator function throws an exception, an unchecked exception
is thrown from {@code parallelSetAll} and the array is left in an
indeterminate state.

@param <T> type of elements of the array
@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639234 "setAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068162 // IntUnaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, using the provided
generator function to compute each element.

<p>If the generator function throws an exception, it is relayed to
the caller and the array is left in an indeterminate state.

@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639362 "parallelSetAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068162 // IntUnaryOperator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, in parallel, using the
provided generator function to compute each element.

<p>If the generator function throws an exception, an unchecked exception
is thrown from {@code parallelSetAll} and the array is left in an
indeterminate state.

@param array array to be initialized
@param generator a function accepting an index and producing the desired
value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639490 "setAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068290 // IntToLongFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, using the provided
generator function to compute each element.

<p>If the generator function throws an exception, it is relayed to
the caller and the array is left in an indeterminate state.

@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639618 "parallelSetAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068290 // IntToLongFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, in parallel, using the
provided generator function to compute each element.

<p>If the generator function throws an exception, an unchecked exception
is thrown from {@code parallelSetAll} and the array is left in an
indeterminate state.

@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639746 "setAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068418 // IntToDoubleFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, using the provided
generator function to compute each element.

<p>If the generator function throws an exception, it is relayed to
the caller and the array is left in an indeterminate state.

@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8639874 "parallelSetAll"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param inout name "generator" type class_ref 1068418 // IntToDoubleFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set all elements of the specified array, in parallel, using the
provided generator function to compute each element.

<p>If the generator function throws an exception, an unchecked exception
is thrown from {@code parallelSetAll} and the array is left in an
indeterminate state.

@param array array to be initialized
@param generator a function accepting an index and producing the desired
       value for that position
@throws NullPointerException if the generator is null
@since 1.8
"
      end

      operation 8640002 "spliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 1
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator} covering all of the specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param <T> type of elements
@param array the array, assumed to be unmodified during use
@return a spliterator for the array elements
@since 1.8
"
      end

      operation 8640130 "spliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 3
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator} covering the specified range of the
specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param <T> type of elements
@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a spliterator for the array elements
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8640258 "spliterator"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator.OfInt} covering all of the specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param array the array, assumed to be unmodified during use
@return a spliterator for the array elements
@since 1.8
"
      end

      operation 8640386 "spliterator"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 3
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator.OfInt} covering the specified range of the
specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a spliterator for the array elements
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8640514 "spliterator"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 1
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator.OfLong} covering all of the specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param array the array, assumed to be unmodified during use
@return the spliterator for the array elements
@since 1.8
"
      end

      operation 8640642 "spliterator"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 3
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator.OfLong} covering the specified range of the
specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a spliterator for the array elements
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8640770 "spliterator"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 1
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator.OfDouble} covering all of the specified
array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param array the array, assumed to be unmodified during use
@return a spliterator for the array elements
@since 1.8
"
      end

      operation 8640898 "spliterator"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 3
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Spliterator.OfDouble} covering the specified range of
the specified array.

<p>The spliterator reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, {@link Spliterator#ORDERED}, and
{@link Spliterator#IMMUTABLE}.

@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a spliterator for the array elements
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8641026 "stream"
	class_operation public return_type class_ref 184706 // Stream
	nparams 1
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link Stream} with the specified array as its
source.

@param <T> The type of the array elements
@param array The array, assumed to be unmodified during use
@return a {@code Stream} for the array
@since 1.8
"
      end

      operation 8641154 "stream"
	class_operation public return_type class_ref 184706 // Stream
	nparams 3
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link Stream} with the specified range of the
specified array as its source.

@param <T> the type of the array elements
@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a {@code Stream} for the array range
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8641282 "stream"
	class_operation public return_type class_ref 429570 // IntStream
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link IntStream} with the specified array as its
source.

@param array the array, assumed to be unmodified during use
@return an {@code IntStream} for the array
@since 1.8
"
      end

      operation 8641410 "stream"
	class_operation public return_type class_ref 429570 // IntStream
	nparams 3
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link IntStream} with the specified range of the
specified array as its source.

@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return an {@code IntStream} for the array range
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8641538 "stream"
	class_operation public return_type class_ref 1023490 // LongStream
	nparams 1
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link LongStream} with the specified array as its
source.

@param array the array, assumed to be unmodified during use
@return a {@code LongStream} for the array
@since 1.8
"
      end

      operation 8641666 "stream"
	class_operation public return_type class_ref 1023490 // LongStream
	nparams 3
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link LongStream} with the specified range of the
specified array as its source.

@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a {@code LongStream} for the array range
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end

      operation 8641794 "stream"
	class_operation public return_type class_ref 1023618 // DoubleStream
	nparams 1
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link DoubleStream} with the specified array as its
source.

@param array the array, assumed to be unmodified during use
@return a {@code DoubleStream} for the array
@since 1.8
"
      end

      operation 8641922 "stream"
	class_operation public return_type class_ref 1023618 // DoubleStream
	nparams 3
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param in name "startInclusive" explicit_type "int"
	  param in name "endExclusive" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sequential {@link DoubleStream} with the specified range of the
specified array as its source.

@param array the array, assumed to be unmodified during use
@param startInclusive the first index to cover, inclusive
@param endExclusive index immediately past the last index to cover
@return a {@code DoubleStream} for the array range
@throws ArrayIndexOutOfBoundsException if {@code startInclusive} is
        negative, {@code endExclusive} is less than
        {@code startInclusive}, or {@code endExclusive} is greater than
        the array size
@since 1.8
"
      end
    end

    class 1068546 "ArraysParallelSortHelpers"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper utilities for the parallel sort methods in Arrays.parallelSort.

For each primitive type, plus Object, we define a static class to
contain the Sorter and Merger implementations for that type:

Sorter classes based mainly on CilkSort
<A href=\"http://supertech.lcs.mit.edu/cilk/\"> Cilk</A>:
Basic algorithm:
if array size is small, just use a sequential quicksort (via Arrays.sort)
        Otherwise:
        1. Break array in half.
        2. For each half,
            a. break the half in half (i.e., quarters),
            b. sort the quarters
            c. merge them together
        3. merge together the two halves.

One reason for splitting in quarters is that this guarantees that
the final sort is in the main array, not the workspace array.
(workspace and main swap roles on each subsort step.)  Leaf-level
sorts use the associated sequential sort.

Merger classes perform merging for Sorter.  They are structured
such that if the underlying sort is stable (as is true for
TimSort), then so is the full sort.  If big enough, they split the
largest of the two partitions in half, find the greatest point in
smaller partition less than the beginning of the second half of
larger via binary search; and then merge in parallel the two
partitions.  In part to ensure tasks are triggered in
stability-preserving order, the current CountedCompleter design
requires some little tasks to serve as place holders for triggering
completion tasks.  These classes (EmptyCompleter and Relay) don't
need to keep track of the arrays, and are never themselves forked,
so don't hold any task state.

The primitive class versions (FJByte... FJDouble) are
identical to each other except for type declarations.

The base sequential sorts rely on non-public versions of TimSort,
ComparableTimSort, and DualPivotQuicksort sort methods that accept
temp workspace array slices that we will have already allocated, so
avoids redundant allocation. (Except for DualPivotQuicksort byte[]
sort, that does not ever use a workspace array.)

package"
      class 1068674 "EmptyCompleter"
	visibility package 
	nactuals 1
	actual class class_ref 1065218 // CountedCompleter
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3483650 // <realization>
	  relation 3483650 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3483650 // <realization>
	    b parent class_ref 1065218 // CountedCompleter
	end

	attribute 1989378 "serialVersionUID"
	  class_attribute const_attribute package explicit_type "long"
	  init_value " 2446542900576103244L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8642050 "EmptyCompleter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "p" type class_ref 1065218 // CountedCompleter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8642178 "compute"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1068802 "Relay"
	visibility package 
	nactuals 1
	actual class class_ref 1065218 // CountedCompleter
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3483778 // <realization>
	  relation 3483778 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3483778 // <realization>
	    b parent class_ref 1065218 // CountedCompleter
	end

	attribute 1989506 "serialVersionUID"
	  class_attribute const_attribute package explicit_type "long"
	  init_value " 2446542900576103244L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3483906 // task (<unidirectional association>)
	  relation 3483906 --->
	    a role_name "task" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 3483906 // task (<unidirectional association>)
	    b parent class_ref 1065218 // CountedCompleter
	end

	operation 8642306 "Relay"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "task" type class_ref 1065218 // CountedCompleter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8642434 "compute"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8642562 "onCompletion"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "t" type class_ref 1065218 // CountedCompleter
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1068930 "FJObject"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1069058 "Sorter"
	  visibility package 
	  nformals 1
	  formal name "T" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3484034 // <realization>
	    relation 3484034 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3484034 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1989634 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1989762 "a"
	    const_attribute package explicit_type "T"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1989890 "w"
	    const_attribute package explicit_type "T"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1990018 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1990146 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1990274 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1990402 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  classrelation 3484162 // comparator (<unidirectional association>)
	    relation 3484162 --->
	      a role_name "comparator" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super T> ${name}${value};
"
		classrelation_ref 3484162 // comparator (<unidirectional association>)
	      b parent class_ref 184962 // Comparator
	  end

	  operation 8642690 "Sorter"
	    cpp_inline package explicit_return_type ""
	    nparams 8
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "T"
	    multiplicity "[]"
	      param inout name "w" explicit_type "T"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	      param inout name "comparator" type class_ref 184962 // Comparator
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7}<? super T> ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8642818 "compute"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1069186 "Merger"
	  visibility package 
	  nformals 1
	  formal name "T" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3484290 // <realization>
	    relation 3484290 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3484290 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1990530 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1990658 "a"
	    const_attribute package explicit_type "T"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1990786 "w"
	    const_attribute package explicit_type "T"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 1990914 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991042 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991170 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991298 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991426 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991554 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  classrelation 3484418 // comparator (<unidirectional association>)
	    relation 3484418 --->
	      a role_name "comparator" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super T> ${name}${value};
"
		classrelation_ref 3484418 // comparator (<unidirectional association>)
	      b parent class_ref 184962 // Comparator
	  end

	  operation 8642946 "Merger"
	    cpp_inline package explicit_return_type ""
	    nparams 10
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "T"
	    multiplicity "[]"
	      param inout name "w" explicit_type "T"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	      param inout name "comparator" type class_ref 184962 // Comparator
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9}<? super T> ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8643074 "compute"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1069314 "FJByte"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1069442 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3484546 // <realization>
	    relation 3484546 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3484546 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1991682 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991810 "a"
	    const_attribute package explicit_type "byte"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1991938 "w"
	    const_attribute package explicit_type "byte"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1992066 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1992194 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1992322 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1992450 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8643202 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "byte"
	    multiplicity "[]"
	      param inout name "w" explicit_type "byte"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8643330 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1069570 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3484674 // <realization>
	    relation 3484674 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3484674 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1992578 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1992706 "a"
	    const_attribute package explicit_type "byte"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1992834 "w"
	    const_attribute package explicit_type "byte"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 1992962 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993090 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993218 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993346 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993474 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993602 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8643458 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "byte"
	    multiplicity "[]"
	      param inout name "w" explicit_type "byte"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8643586 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1069698 "FJChar"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1069826 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3484802 // <realization>
	    relation 3484802 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3484802 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1993730 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993858 "a"
	    const_attribute package explicit_type "char"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1993986 "w"
	    const_attribute package explicit_type "char"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1994114 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1994242 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1994370 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1994498 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8643714 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "char"
	    multiplicity "[]"
	      param inout name "w" explicit_type "char"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8643842 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1069954 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3484930 // <realization>
	    relation 3484930 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3484930 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1994626 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1994754 "a"
	    const_attribute package explicit_type "char"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1994882 "w"
	    const_attribute package explicit_type "char"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 1995010 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1995138 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1995266 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1995394 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1995522 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1995650 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8643970 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "char"
	    multiplicity "[]"
	      param inout name "w" explicit_type "char"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8644098 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1070082 "FJShort"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1070210 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485058 // <realization>
	    relation 3485058 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485058 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1995778 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1995906 "a"
	    const_attribute package explicit_type "short"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996034 "w"
	    const_attribute package explicit_type "short"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996162 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996290 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996418 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996546 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8644226 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "short"
	    multiplicity "[]"
	      param inout name "w" explicit_type "short"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8644354 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1070338 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485186 // <realization>
	    relation 3485186 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485186 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1996674 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996802 "a"
	    const_attribute package explicit_type "short"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1996930 "w"
	    const_attribute package explicit_type "short"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 1997058 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1997186 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1997314 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1997442 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1997570 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1997698 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8644482 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "short"
	    multiplicity "[]"
	      param inout name "w" explicit_type "short"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8644610 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1070466 "FJInt"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1070594 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485314 // <realization>
	    relation 3485314 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485314 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1997826 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1997954 "a"
	    const_attribute package explicit_type "int"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998082 "w"
	    const_attribute package explicit_type "int"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998210 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998338 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998466 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998594 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8644738 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "int"
	    multiplicity "[]"
	      param inout name "w" explicit_type "int"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8644866 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1070722 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485442 // <realization>
	    relation 3485442 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485442 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1998722 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998850 "a"
	    const_attribute package explicit_type "int"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1998978 "w"
	    const_attribute package explicit_type "int"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 1999106 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1999234 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1999362 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1999490 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1999618 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 1999746 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8644994 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "int"
	    multiplicity "[]"
	      param inout name "w" explicit_type "int"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8645122 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1070850 "FJLong"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1070978 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485570 // <realization>
	    relation 3485570 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485570 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 1999874 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000002 "a"
	    const_attribute package explicit_type "long"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000130 "w"
	    const_attribute package explicit_type "long"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000258 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000386 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000514 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000642 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8645250 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "long"
	    multiplicity "[]"
	      param inout name "w" explicit_type "long"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8645378 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1071106 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485698 // <realization>
	    relation 3485698 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485698 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 2000770 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2000898 "a"
	    const_attribute package explicit_type "long"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2001026 "w"
	    const_attribute package explicit_type "long"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 2001154 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2001282 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2001410 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2001538 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2001666 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2001794 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8645506 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "long"
	    multiplicity "[]"
	      param inout name "w" explicit_type "long"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8645634 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1071234 "FJFloat"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1071362 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485826 // <realization>
	    relation 3485826 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485826 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 2001922 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002050 "a"
	    const_attribute package explicit_type "float"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002178 "w"
	    const_attribute package explicit_type "float"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002306 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002434 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002562 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002690 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8645762 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "float"
	    multiplicity "[]"
	      param inout name "w" explicit_type "float"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8645890 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1071490 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3485954 // <realization>
	    relation 3485954 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3485954 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 2002818 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2002946 "a"
	    const_attribute package explicit_type "float"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2003074 "w"
	    const_attribute package explicit_type "float"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 2003202 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2003330 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2003458 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2003586 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2003714 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2003842 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8646018 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "float"
	    multiplicity "[]"
	      param inout name "w" explicit_type "float"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8646146 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1071618 "FJDouble"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1071746 "Sorter"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3486082 // <realization>
	    relation 3486082 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3486082 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 2003970 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004098 "a"
	    const_attribute package explicit_type "double"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004226 "w"
	    const_attribute package explicit_type "double"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004354 "base"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004482 "size"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004610 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004738 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8646274 "Sorter"
	    package explicit_return_type ""
	    nparams 7
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "double"
	    multiplicity "[]"
	      param inout name "w" explicit_type "double"
	    multiplicity "[]"
	      param in name "base" explicit_type "int"
	      param in name "size" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8646402 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1071874 "Merger"
	  visibility package 
	  nactuals 1
	  actual class class_ref 1065218 // CountedCompleter
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3486210 // <realization>
	    relation 3486210 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3486210 // <realization>
	      b parent class_ref 1065218 // CountedCompleter
	  end

	  attribute 2004866 "serialVersionUID"
	    class_attribute const_attribute package explicit_type "long"
	    init_value " 2446542900576103244L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2004994 "a"
	    const_attribute package explicit_type "double"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2005122 "w"
	    const_attribute package explicit_type "double"
	    multiplicity "[]"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " main and workspace arrays"
	  end

	  attribute 2005250 "lbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2005378 "lsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2005506 "rbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2005634 "rsize"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2005762 "wbase"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2005890 "gran"
	    const_attribute package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8646530 "Merger"
	    package explicit_return_type ""
	    nparams 9
	      param inout name "par" type class_ref 1065218 // CountedCompleter
	      param inout name "a" explicit_type "double"
	    multiplicity "[]"
	      param inout name "w" explicit_type "double"
	    multiplicity "[]"
	      param in name "lbase" explicit_type "int"
	      param in name "lsize" explicit_type "int"
	      param in name "rbase" explicit_type "int"
	      param in name "rsize" explicit_type "int"
	      param in name "wbase" explicit_type "int"
	      param in name "gran" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8646658 "compute"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end
    end

    class 1072002 "Base64"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class consists exclusively of static methods for obtaining
encoders and decoders for the Base64 encoding scheme. The
implementation of this class supports the following types of Base64
as specified in
<a href=\"http://www.ietf.org/rfc/rfc4648.txt\">RFC 4648</a> and
<a href=\"http://www.ietf.org/rfc/rfc2045.txt\">RFC 2045</a>.

<ul>
<li><a name=\"basic\"><b>Basic</b></a>
<p> Uses \"The Base64 Alphabet\" as specified in Table 1 of
    RFC 4648 and RFC 2045 for encoding and decoding operation.
    The encoder does not add any line feed (line separator)
    character. The decoder rejects data that contains characters
    outside the base64 alphabet.</p></li>

<li><a name=\"url\"><b>URL and Filename safe</b></a>
<p> Uses the \"URL and Filename safe Base64 Alphabet\" as specified
    in Table 2 of RFC 4648 for encoding and decoding. The
    encoder does not add any line feed (line separator) character.
    The decoder rejects data that contains characters outside the
    base64 alphabet.</p></li>

<li><a name=\"mime\"><b>MIME</b></a>
<p> Uses the \"The Base64 Alphabet\" as specified in Table 1 of
    RFC 2045 for encoding and decoding operation. The encoded output
    must be represented in lines of no more than 76 characters each
    and uses a carriage return {@code '\\r'} followed immediately by
    a linefeed {@code '\\n'} as the line separator. No line separator
    is added to the end of the encoded output. All line separators
    or other characters not found in the base64 alphabet table are
    ignored in decoding operation.</p></li>
</ul>

<p> Unless otherwise noted, passing a {@code null} argument to a
method of this class will cause a {@link java.lang.NullPointerException
NullPointerException} to be thrown.

@author  Xueming Shen
@since   1.8
"
      operation 8646786 "Base64"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1072130 "Encoder"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2006018 "newline"
	  const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2006146 "linemax"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2006274 "isURL"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2006402 "doPadding"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8647810 "Encoder"
	  private explicit_return_type ""
	  nparams 4
	    param inout name "isURL" explicit_type "boolean"
	    param inout name "newline" explicit_type "byte"
	  multiplicity "[]"
	    param in name "linemax" explicit_type "int"
	    param inout name "doPadding" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2006530 "toBase64"
	  class_attribute const_attribute private explicit_type "char"
	  multiplicity "[]"
	  init_value " {
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
            'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
            'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'
        }"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This array is a lookup table that translates 6-bit positive integer
index values into their \"Base64 Alphabet\" equivalents as specified
in \"Table 1: The Base64 Alphabet\" of RFC 2045 (and RFC 4648).

"
	end

	attribute 2006658 "toBase64URL"
	  class_attribute const_attribute private explicit_type "char"
	  multiplicity "[]"
	  init_value " {
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
            'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
            'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'
        }"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "It's the lookup table for \"URL and Filename safe Base64\" as specified
in Table 2 of the RFC 4648, with the '+' and '/' changed to '-' and
'_'. This table is used when BASE64_URL is specified.

"
	end

	attribute 2006786 "MIMELINEMAX"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 76"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2006914 "CRLF"
	  class_attribute const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[] {'\\r', '\\n'}"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3486338 // RFC4648 (<unidirectional association>)
	  relation 3486338 --->
	    a role_name "RFC4648" init_value " new Encoder(false, null, -1, true)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3486338 // RFC4648 (<unidirectional association>)
	    b parent class_ref 1072130 // Encoder
	end

	classrelation 3486466 // RFC4648_URLSAFE (<unidirectional association>)
	  relation 3486466 --->
	    a role_name "RFC4648_URLSAFE" init_value " new Encoder(true, null, -1, true)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3486466 // RFC4648_URLSAFE (<unidirectional association>)
	    b parent class_ref 1072130 // Encoder
	end

	classrelation 3486594 // RFC2045 (<unidirectional association>)
	  relation 3486594 --->
	    a role_name "RFC2045" init_value " new Encoder(false, CRLF, MIMELINEMAX, true)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3486594 // RFC2045 (<unidirectional association>)
	    b parent class_ref 1072130 // Encoder
	end

	operation 8647938 "outLength"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "srclen" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8648066 "encode"
	  public explicit_return_type "byte"
	  nparams 1
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Encodes all bytes from the specified byte array into a newly-allocated
byte array using the {@link Base64} encoding scheme. The returned byte
array is of the length of the resulting bytes.

@param   src
         the byte array to encode
@return  A newly-allocated byte array containing the resulting
         encoded bytes.
"
	end

	operation 8648194 "encode"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	    param inout name "dst" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Encodes all bytes from the specified byte array using the
{@link Base64} encoding scheme, writing the resulting bytes to the
given output byte array, starting at offset 0.

<p> It is the responsibility of the invoker of this method to make
sure the output byte array {@code dst} has enough space for encoding
all bytes from the input byte array. No bytes will be written to the
output byte array if the output byte array is not big enough.

@param   src
         the byte array to encode
@param   dst
         the output byte array
@return  The number of bytes written to the output byte array

@throws  IllegalArgumentException if {@code dst} does not have enough
         space for encoding all input bytes.
"
	end

	operation 8648322 "encodeToString"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"deprecation\")
"
	  
	  
	  
	  comment "Encodes the specified byte array into a String using the {@link Base64}
encoding scheme.

<p> This method first encodes all input bytes into a base64 encoded
byte array and then constructs a new String by using the encoded byte
array and the {@link java.nio.charset.StandardCharsets#ISO_8859_1
ISO-8859-1} charset.

<p> In other words, an invocation of this method has exactly the same
effect as invoking
{@code new String(encode(src), StandardCharsets.ISO_8859_1)}.

@param   src
         the byte array to encode
@return  A String containing the resulting Base64 encoded characters
"
	end

	operation 8648450 "encode"
	  public return_type class_ref 149890 // ByteBuffer
	  nparams 1
	    param inout name "buffer" type class_ref 149890 // ByteBuffer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Encodes all remaining bytes from the specified byte buffer into
a newly-allocated ByteBuffer using the {@link Base64} encoding
scheme.

Upon return, the source buffer's position will be updated to
its limit; its limit will not have been changed. The returned
output buffer's position will be zero and its limit will be the
number of resulting encoded bytes.

@param   buffer
         the source ByteBuffer to encode
@return  A newly-allocated byte buffer containing the encoded bytes.
"
	end

	operation 8648578 "wrap"
	  public return_type class_ref 151298 // OutputStream
	  nparams 1
	    param inout name "os" type class_ref 151298 // OutputStream
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Wraps an output stream for encoding byte data using the {@link Base64}
encoding scheme.

<p> It is recommended to promptly close the returned output stream after
use, during which it will flush all possible leftover bytes to the underlying
output stream. Closing the returned output stream will close the underlying
output stream.

@param   os
         the output stream.
@return  the output stream for encoding the byte data into the
         specified Base64 encoded format
"
	end

	operation 8648706 "withoutPadding"
	  public return_type class_ref 1072130 // Encoder
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an encoder instance that encodes equivalently to this one,
but without adding any padding character at the end of the encoded
byte data.

<p> The encoding scheme of this encoder instance is unaffected by
this invocation. The returned encoder instance should be used for
non-padding encoding operation.

@return an equivalent encoder that encodes without adding any
        padding character at the end
"
	end

	operation 8648834 "encode0"
	  private explicit_return_type "int"
	  nparams 4
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "end" explicit_type "int"
	    param inout name "dst" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8646914 "getEncoder"
	class_operation public return_type class_ref 1072130 // Encoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Encoder} that encodes using the
<a href=\"#basic\">Basic</a> type base64 encoding scheme.

@return  A Base64 encoder.
"
      end

      operation 8647042 "getUrlEncoder"
	class_operation public return_type class_ref 1072130 // Encoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Encoder} that encodes using the
<a href=\"#url\">URL and Filename safe</a> type base64
encoding scheme.

@return  A Base64 encoder.
"
      end

      operation 8647170 "getMimeEncoder"
	class_operation public return_type class_ref 1072130 // Encoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Encoder} that encodes using the
<a href=\"#mime\">MIME</a> type base64 encoding scheme.

@return  A Base64 encoder.
"
      end

      operation 8647298 "getMimeEncoder"
	class_operation public return_type class_ref 1072130 // Encoder
	nparams 2
	  param in name "lineLength" explicit_type "int"
	  param inout name "lineSeparator" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Encoder} that encodes using the
<a href=\"#mime\">MIME</a> type base64 encoding scheme
with specified line length and line separators.

@param   lineLength
         the length of each output line (rounded down to nearest multiple
         of 4). If {@code lineLength <= 0} the output will not be separated
         in lines
@param   lineSeparator
         the line separator for each output line

@return  A Base64 encoder.

@throws  IllegalArgumentException if {@code lineSeparator} includes any
         character of \"The Base64 Alphabet\" as specified in Table 1 of
         RFC 2045.
"
      end

      class 1072258 "Decoder"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2007042 "isURL"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2007170 "isMIME"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8648962 "Decoder"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "isURL" explicit_type "boolean"
	    param inout name "isMIME" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2007298 "fromBase64"
	  class_attribute const_attribute private explicit_type "int"
	  multiplicity "[]"
	  init_value " new int[256]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Lookup table for decoding unicode characters drawn from the
\"Base64 Alphabet\" (as specified in Table 1 of RFC 2045) into
their 6-bit positive integer equivalents.  Characters that
are not in the Base64 alphabet but fall within the bounds of
the array are encoded to -1.


"
	end

	extra_member 171778 "initialization"
	  
	  cpp "" ""
	  java "  static {
            Arrays.fill(fromBase64, -1);
            for (int i = 0; i < Encoder.toBase64.length; i++)
                fromBase64[Encoder.toBase64[i]] = i;
            fromBase64['='] = -2;
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	attribute 2007426 "fromBase64URL"
	  class_attribute const_attribute private explicit_type "int"
	  multiplicity "[]"
	  init_value " new int[256]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Lookup table for decoding \"URL and Filename safe Base64 Alphabet\"
as specified in Table2 of the RFC 4648.

"
	end

	extra_member 171906 "initialization"
	  
	  cpp "" ""
	  java "  static {
            Arrays.fill(fromBase64URL, -1);
            for (int i = 0; i < Encoder.toBase64URL.length; i++)
                fromBase64URL[Encoder.toBase64URL[i]] = i;
            fromBase64URL['='] = -2;
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	classrelation 3486722 // RFC4648 (<unidirectional association>)
	  relation 3486722 --->
	    a role_name "RFC4648" init_value " new Decoder(false, false)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3486722 // RFC4648 (<unidirectional association>)
	    b parent class_ref 1072258 // Decoder
	end

	classrelation 3486850 // RFC4648_URLSAFE (<unidirectional association>)
	  relation 3486850 --->
	    a role_name "RFC4648_URLSAFE" init_value " new Decoder(true, false)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3486850 // RFC4648_URLSAFE (<unidirectional association>)
	    b parent class_ref 1072258 // Decoder
	end

	classrelation 3486978 // RFC2045 (<unidirectional association>)
	  relation 3486978 --->
	    a role_name "RFC2045" init_value " new Decoder(false, true)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3486978 // RFC2045 (<unidirectional association>)
	    b parent class_ref 1072258 // Decoder
	end

	operation 8649090 "decode"
	  public explicit_return_type "byte"
	  nparams 1
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Decodes all bytes from the input byte array using the {@link Base64}
encoding scheme, writing the results into a newly-allocated output
byte array. The returned byte array is of the length of the resulting
bytes.

@param   src
         the byte array to decode

@return  A newly-allocated byte array containing the decoded bytes.

@throws  IllegalArgumentException
         if {@code src} is not in valid Base64 scheme
"
	end

	operation 8649218 "decode"
	  public explicit_return_type "byte"
	  nparams 1
	    param inout name "src" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Decodes a Base64 encoded String into a newly-allocated byte array
using the {@link Base64} encoding scheme.

<p> An invocation of this method has exactly the same effect as invoking
{@code decode(src.getBytes(StandardCharsets.ISO_8859_1))}

@param   src
         the string to decode

@return  A newly-allocated byte array containing the decoded bytes.

@throws  IllegalArgumentException
         if {@code src} is not in valid Base64 scheme
"
	end

	operation 8649346 "decode"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	    param inout name "dst" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Decodes all bytes from the input byte array using the {@link Base64}
encoding scheme, writing the results into the given output byte array,
starting at offset 0.

<p> It is the responsibility of the invoker of this method to make
sure the output byte array {@code dst} has enough space for decoding
all bytes from the input byte array. No bytes will be be written to
the output byte array if the output byte array is not big enough.

<p> If the input byte array is not in valid Base64 encoding scheme
then some bytes may have been written to the output byte array before
IllegalargumentException is thrown.

@param   src
         the byte array to decode
@param   dst
         the output byte array

@return  The number of bytes written to the output byte array

@throws  IllegalArgumentException
         if {@code src} is not in valid Base64 scheme, or {@code dst}
         does not have enough space for decoding all input bytes.
"
	end

	operation 8649474 "decode"
	  public return_type class_ref 149890 // ByteBuffer
	  nparams 1
	    param inout name "buffer" type class_ref 149890 // ByteBuffer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Decodes all bytes from the input byte buffer using the {@link Base64}
encoding scheme, writing the results into a newly-allocated ByteBuffer.

<p> Upon return, the source buffer's position will be updated to
its limit; its limit will not have been changed. The returned
output buffer's position will be zero and its limit will be the
number of resulting decoded bytes

<p> {@code IllegalArgumentException} is thrown if the input buffer
is not in valid Base64 encoding scheme. The position of the input
buffer will not be advanced in this case.

@param   buffer
         the ByteBuffer to decode

@return  A newly-allocated byte buffer containing the decoded bytes

@throws  IllegalArgumentException
         if {@code src} is not in valid Base64 scheme.
"
	end

	operation 8649602 "wrap"
	  public return_type class_ref 146434 // InputStream
	  nparams 1
	    param inout name "is" type class_ref 146434 // InputStream
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an input stream for decoding {@link Base64} encoded byte stream.

<p> The {@code read}  methods of the returned {@code InputStream} will
throw {@code IOException} when reading bytes that cannot be decoded.

<p> Closing the returned input stream will close the underlying
input stream.

@param   is
         the input stream

@return  the input stream for decoding the specified Base64 encoded
         byte stream
"
	end

	operation 8649730 "outLength"
	  private explicit_return_type "int"
	  nparams 3
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	    param in name "sp" explicit_type "int"
	    param in name "sl" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8649858 "decode0"
	  private explicit_return_type "int"
	  nparams 4
	    param inout name "src" explicit_type "byte"
	  multiplicity "[]"
	    param in name "sp" explicit_type "int"
	    param in name "sl" explicit_type "int"
	    param inout name "dst" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8647426 "getDecoder"
	class_operation public return_type class_ref 1072258 // Decoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Decoder} that decodes using the
<a href=\"#basic\">Basic</a> type base64 encoding scheme.

@return  A Base64 decoder.
"
      end

      operation 8647554 "getUrlDecoder"
	class_operation public return_type class_ref 1072258 // Decoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Decoder} that decodes using the
<a href=\"#url\">URL and Filename safe</a> type base64
encoding scheme.

@return  A Base64 decoder.
"
      end

      operation 8647682 "getMimeDecoder"
	class_operation public return_type class_ref 1072258 // Decoder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Decoder} that decodes using the
<a href=\"#mime\">MIME</a> type base64 decoding scheme.

@return  A Base64 decoder.
"
      end

      class 1072386 "EncOutputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3487106 // <generalisation>
	  relation 3487106 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3487106 // <generalisation>
	    b parent class_ref 921730 // FilterOutputStream
	end

	attribute 2007554 "leftover"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2007682 "b0"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2007810 "b1"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2007938 "b2"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2008066 "closed"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2008194 "base64"
	  const_attribute private explicit_type "char"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " byte->base64 mapping"
	end

	attribute 2008322 "newline"
	  const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " line separator, if needed"
	end

	attribute 2008450 "linemax"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2008578 "doPadding"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " whether or not to pad"
	end

	attribute 2008706 "linepos"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8649986 "EncOutputStream"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "os" type class_ref 151298 // OutputStream
	    param inout name "base64" explicit_type "char"
	  multiplicity "[]"
	    param inout name "newline" explicit_type "byte"
	  multiplicity "[]"
	    param in name "linemax" explicit_type "int"
	    param inout name "doPadding" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8650114 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "b" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8650242 "checkNewline"
	  private explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8650370 "write"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8650498 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1072514 "DecInputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3487234 // <generalisation>
	  relation 3487234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3487234 // <generalisation>
	    b parent class_ref 146434 // InputStream
	end

	classrelation 3487362 // is (<unidirectional association>)
	  relation 3487362 --->
	    a role_name "is" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3487362 // is (<unidirectional association>)
	    b parent class_ref 146434 // InputStream
	end

	attribute 2008834 "isMIME"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2008962 "base64"
	  const_attribute private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " base64 -> byte mapping"
	end

	attribute 2009090 "bits"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " 24-bit buffer for decoding"
	end

	attribute 2009218 "nextin"
	  private explicit_type "int"
	  init_value " 18"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " next available \"off\" in \"bits\" for input;"
	end

	attribute 2009346 "nextout"
	  private explicit_type "int"
	  init_value " -8"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " -> 18, 12, 6, 0
 next available \"off\" in \"bits\" for output;"
	end

	attribute 2009474 "eof"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " -> 8, 0, -8 (no byte for output)
"
	end

	attribute 2009602 "closed"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8650626 "DecInputStream"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "is" type class_ref 146434 // InputStream
	    param inout name "base64" explicit_type "int"
	  multiplicity "[]"
	    param inout name "isMIME" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2009730 "sbBuf"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[1]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8650754 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8650882 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8651010 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8651138 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1073026 "Collections"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class consists exclusively of static methods that operate on or return
collections.  It contains polymorphic algorithms that operate on
collections, \"wrappers\", which return a new collection backed by a
specified collection, and a few other odds and ends.

<p>The methods of this class all throw a <tt>NullPointerException</tt>
if the collections or class objects provided to them are null.

<p>The documentation for the polymorphic algorithms contained in this class
generally includes a brief description of the <i>implementation</i>.  Such
descriptions should be regarded as <i>implementation notes</i>, rather than
parts of the <i>specification</i>.  Implementors should feel free to
substitute other algorithms, so long as the specification itself is adhered
to.  (For example, the algorithm used by <tt>sort</tt> does not have to be
a mergesort, but it does have to be <i>stable</i>.)

<p>The \"destructive\" algorithms contained in this class, that is, the
algorithms that modify the collection on which they operate, are specified
to throw <tt>UnsupportedOperationException</tt> if the collection does not
support the appropriate mutation primitive(s), such as the <tt>set</tt>
method.  These algorithms may, but are not required to, throw this
exception if an invocation would have no effect on the collection.  For
example, invoking the <tt>sort</tt> method on an unmodifiable list that is
already sorted may or may not throw <tt>UnsupportedOperationException</tt>.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@author  Neal Gafter
@see     Collection
@see     Set
@see     List
@see     Map
@since   1.2
"
      operation 8671490 "Collections"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suppresses default constructor, ensuring non-instantiability."
      end

      attribute 2023298 "BINARYSEARCH_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Algorithms

Tuning parameters for algorithms - Many of the List algorithms have
two implementations, one of which is appropriate for RandomAccess
lists, the other for \"sequential.\"  Often, the random access variant
yields better performance on small sequential access lists.  The
tuning parameters below determine the cutoff point for what constitutes
a \"small\" sequential access list for each algorithm.  The values below
were empirically determined to work well for LinkedList. Hopefully
they should be reasonable for other sequential access List
implementations.  Those doing performance work on this code would
do well to validate the values of these parameters from time to time.
(The first word of each tuning parameter name is the algorithm to which
it applies.)

"
      end

      attribute 2023426 "REVERSE_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "   18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2023554 "SHUFFLE_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "    5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2023682 "FILL_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "   25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2023810 "ROTATE_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "  100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2023938 "COPY_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "   10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2024066 "REPLACEALL_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "   11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2024194 "INDEXOFSUBLIST_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "   35"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8671618 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified list into ascending order, according to the
{@linkplain Comparable natural ordering} of its elements.
All elements in the list must implement the {@link Comparable}
interface.  Furthermore, all elements in the list must be
<i>mutually comparable</i> (that is, {@code e1.compareTo(e2)}
must not throw a {@code ClassCastException} for any elements
{@code e1} and {@code e2} in the list).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

<p>The specified list must be modifiable, but need not be resizable.

@implNote
This implementation defers to the {@link List#sort(Comparator)}
method using the specified list and a {@code null} comparator.

@param  <T> the class of the objects in the list
@param  list the list to be sorted.
@throws ClassCastException if the list contains elements that are not
        <i>mutually comparable</i> (for example, strings and integers).
@throws UnsupportedOperationException if the specified list's
        list-iterator does not support the {@code set} operation.
@throws IllegalArgumentException (optional) if the implementation
        detects that the natural ordering of the list elements is
        found to violate the {@link Comparable} contract
@see List#sort(Comparator)
"
      end

      operation 8671746 "sort"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Sorts the specified list according to the order induced by the
specified comparator.  All elements in the list must be <i>mutually
comparable</i> using the specified comparator (that is,
{@code c.compare(e1, e2)} must not throw a {@code ClassCastException}
for any elements {@code e1} and {@code e2} in the list).

<p>This sort is guaranteed to be <i>stable</i>:  equal elements will
not be reordered as a result of the sort.

<p>The specified list must be modifiable, but need not be resizable.

@implNote
This implementation defers to the {@link List#sort(Comparator)}
method using the specified list and comparator.

@param  <T> the class of the objects in the list
@param  list the list to be sorted.
@param  c the comparator to determine the order of the list.  A
       {@code null} value indicates that the elements' <i>natural
       ordering</i> should be used.
@throws ClassCastException if the list contains elements that are not
        <i>mutually comparable</i> using the specified comparator.
@throws UnsupportedOperationException if the specified list's
        list-iterator does not support the {@code set} operation.
@throws IllegalArgumentException (optional) if the comparator is
        found to violate the {@link Comparator} contract
@see List#sort(Comparator)
"
      end

      operation 8671874 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "key" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends Comparable<? super T>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified list for the specified object using the binary
search algorithm.  The list must be sorted into ascending order
according to the {@linkplain Comparable natural ordering} of its
elements (as by the {@link #sort(List)} method) prior to making this
call.  If it is not sorted, the results are undefined.  If the list
contains multiple elements equal to the specified object, there is no
guarantee which one will be found.

<p>This method runs in log(n) time for a \"random access\" list (which
provides near-constant-time positional access).  If the specified list
does not implement the {@link RandomAccess} interface and is large,
this method will do an iterator-based binary search that performs
O(n) link traversals and O(log n) element comparisons.

@param  <T> the class of the objects in the list
@param  list the list to be searched.
@param  key the key to be searched for.
@return the index of the search key, if it is contained in the list;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the list: the index of the first
        element greater than the key, or <tt>list.size()</tt> if all
        elements in the list are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws ClassCastException if the list contains elements that are not
        <i>mutually comparable</i> (for example, strings and
        integers), or the search key is not mutually comparable
        with the elements of the list.
"
      end

      operation 8672002 "indexedBinarySearch"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "key" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends Comparable<? super T>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8672130 "iteratorBinarySearch"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "key" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends Comparable<? super T>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8672258 "get"
	class_operation private explicit_return_type "T"
	nparams 2
	  param inout name "i" type class_ref 185090 // ListIterator
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ith element from the given list by repositioning the specified
list listIterator.
"
      end

      operation 8672386 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "list" type class_ref 175362 // List
	  param inout name "key" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Searches the specified list for the specified object using the binary
search algorithm.  The list must be sorted into ascending order
according to the specified comparator (as by the
{@link #sort(List, Comparator) sort(List, Comparator)}
method), prior to making this call.  If it is
not sorted, the results are undefined.  If the list contains multiple
elements equal to the specified object, there is no guarantee which one
will be found.

<p>This method runs in log(n) time for a \"random access\" list (which
provides near-constant-time positional access).  If the specified list
does not implement the {@link RandomAccess} interface and is large,
this method will do an iterator-based binary search that performs
O(n) link traversals and O(log n) element comparisons.

@param  <T> the class of the objects in the list
@param  list the list to be searched.
@param  key the key to be searched for.
@param  c the comparator by which the list is ordered.
        A <tt>null</tt> value indicates that the elements'
        {@linkplain Comparable natural ordering} should be used.
@return the index of the search key, if it is contained in the list;
        otherwise, <tt>(-(<i>insertion point</i>) - 1)</tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the list: the index of the first
        element greater than the key, or <tt>list.size()</tt> if all
        elements in the list are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
@throws ClassCastException if the list contains elements that are not
        <i>mutually comparable</i> using the specified comparator,
        or the search key is not mutually comparable with the
        elements of the list using this comparator.
"
      end

      operation 8672514 "indexedBinarySearch"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "l" type class_ref 175362 // List
	  param inout name "key" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8672642 "iteratorBinarySearch"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "l" type class_ref 175362 // List
	  param inout name "key" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8672770 "reverse"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\", \"unchecked\"})
"
	
	
	
	comment "Reverses the order of the elements in the specified list.<p>

This method runs in linear time.

@param  list the list whose elements are to be reversed.
@throws UnsupportedOperationException if the specified list or
        its list-iterator does not support the <tt>set</tt> operation.
"
      end

      operation 8672898 "shuffle"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Randomly permutes the specified list using a default source of
randomness.  All permutations occur with approximately equal
likelihood.

<p>The hedge \"approximately\" is used in the foregoing description because
default source of randomness is only approximately an unbiased source
of independently chosen bits. If it were a perfect source of randomly
chosen bits, then the algorithm would choose permutations with perfect
uniformity.

<p>This implementation traverses the list backwards, from the last
element up to the second, repeatedly swapping a randomly selected element
into the \"current position\".  Elements are randomly selected from the
portion of the list that runs from the first element to the current
position, inclusive.

<p>This method runs in linear time.  If the specified list does not
implement the {@link RandomAccess} interface and is large, this
implementation dumps the specified list into an array before shuffling
it, and dumps the shuffled array back into the list.  This avoids the
quadratic behavior that would result from shuffling a \"sequential
access\" list in place.

@param  list the list to be shuffled.
@throws UnsupportedOperationException if the specified list or
        its list-iterator does not support the <tt>set</tt> operation.
"
      end

      classrelation 3489282 // r (<unidirectional association>)
	relation 3489282 --->
	  a role_name "r" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3489282 // r (<unidirectional association>)
	  b parent class_ref 934914 // Random
      end

      operation 8673026 "shuffle"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "rnd" type class_ref 934914 // Random
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\", \"unchecked\"})
"
	
	
	
	comment "Randomly permute the specified list using the specified source of
randomness.  All permutations occur with equal likelihood
assuming that the source of randomness is fair.<p>

This implementation traverses the list backwards, from the last element
up to the second, repeatedly swapping a randomly selected element into
the \"current position\".  Elements are randomly selected from the
portion of the list that runs from the first element to the current
position, inclusive.<p>

This method runs in linear time.  If the specified list does not
implement the {@link RandomAccess} interface and is large, this
implementation dumps the specified list into an array before shuffling
it, and dumps the shuffled array back into the list.  This avoids the
quadratic behavior that would result from shuffling a \"sequential
access\" list in place.

@param  list the list to be shuffled.
@param  rnd the source of randomness to use to shuffle the list.
@throws UnsupportedOperationException if the specified list or its
        list-iterator does not support the <tt>set</tt> operation.
"
      end

      operation 8673154 "swap"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "list" type class_ref 175362 // List
	  param in name "i" explicit_type "int"
	  param in name "j" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\", \"unchecked\"})
"
	
	
	
	comment "Swaps the elements at the specified positions in the specified list.
(If the specified positions are equal, invoking this method leaves
the list unchanged.)

@param list The list in which to swap elements.
@param i the index of one element to be swapped.
@param j the index of the other element to be swapped.
@throws IndexOutOfBoundsException if either <tt>i</tt> or <tt>j</tt>
        is out of range (i &lt; 0 || i &gt;= list.size()
        || j &lt; 0 || j &gt;= list.size()).
@since 1.4
"
      end

      operation 8673282 "swap"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "arr" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "i" explicit_type "int"
	  param in name "j" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Swaps the two specified elements in the specified array.
"
      end

      operation 8673410 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "obj" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? super T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all of the elements of the specified list with the specified
element. <p>

This method runs in linear time.

@param  <T> the class of the objects in the list
@param  list the list to be filled with the specified element.
@param  obj The element with which to fill the specified list.
@throws UnsupportedOperationException if the specified list or its
        list-iterator does not support the <tt>set</tt> operation.
"
      end

      operation 8673538 "copy"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 175362 // List
	  param inout name "src" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? super T> ${p0}, ${t1}<? extends T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the elements from one list into another.  After the
operation, the index of each copied element in the destination list
will be identical to its index in the source list.  The destination
list must be at least as long as the source list.  If it is longer, the
remaining elements in the destination list are unaffected. <p>

This method runs in linear time.

@param  <T> the class of the objects in the lists
@param  dest The destination list.
@param  src The source list.
@throws IndexOutOfBoundsException if the destination list is too small
        to contain the entire source List.
@throws UnsupportedOperationException if the destination list's
        list-iterator does not support the <tt>set</tt> operation.
"
      end

      operation 8673666 "min"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "coll" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object & Comparable<? super T>> ${type} ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum element of the given collection, according to the
<i>natural ordering</i> of its elements.  All elements in the
collection must implement the <tt>Comparable</tt> interface.
Furthermore, all elements in the collection must be <i>mutually
comparable</i> (that is, <tt>e1.compareTo(e2)</tt> must not throw a
<tt>ClassCastException</tt> for any elements <tt>e1</tt> and
<tt>e2</tt> in the collection).<p>

This method iterates over the entire collection, hence it requires
time proportional to the size of the collection.

@param  <T> the class of the objects in the collection
@param  coll the collection whose minimum element is to be determined.
@return the minimum element of the given collection, according
        to the <i>natural ordering</i> of its elements.
@throws ClassCastException if the collection contains elements that are
        not <i>mutually comparable</i> (for example, strings and
        integers).
@throws NoSuchElementException if the collection is empty.
@see Comparable
"
      end

      operation 8673794 "min"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "coll" type class_ref 184194 // Collection
	  param inout name "comp" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Returns the minimum element of the given collection, according to the
order induced by the specified comparator.  All elements in the
collection must be <i>mutually comparable</i> by the specified
comparator (that is, <tt>comp.compare(e1, e2)</tt> must not throw a
<tt>ClassCastException</tt> for any elements <tt>e1</tt> and
<tt>e2</tt> in the collection).<p>

This method iterates over the entire collection, hence it requires
time proportional to the size of the collection.

@param  <T> the class of the objects in the collection
@param  coll the collection whose minimum element is to be determined.
@param  comp the comparator with which to determine the minimum element.
        A <tt>null</tt> value indicates that the elements' <i>natural
        ordering</i> should be used.
@return the minimum element of the given collection, according
        to the specified comparator.
@throws ClassCastException if the collection contains elements that are
        not <i>mutually comparable</i> using the specified comparator.
@throws NoSuchElementException if the collection is empty.
@see Comparable
"
      end

      operation 8673922 "max"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "coll" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object & Comparable<? super T>> ${type} ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum element of the given collection, according to the
<i>natural ordering</i> of its elements.  All elements in the
collection must implement the <tt>Comparable</tt> interface.
Furthermore, all elements in the collection must be <i>mutually
comparable</i> (that is, <tt>e1.compareTo(e2)</tt> must not throw a
<tt>ClassCastException</tt> for any elements <tt>e1</tt> and
<tt>e2</tt> in the collection).<p>

This method iterates over the entire collection, hence it requires
time proportional to the size of the collection.

@param  <T> the class of the objects in the collection
@param  coll the collection whose maximum element is to be determined.
@return the maximum element of the given collection, according
        to the <i>natural ordering</i> of its elements.
@throws ClassCastException if the collection contains elements that are
        not <i>mutually comparable</i> (for example, strings and
        integers).
@throws NoSuchElementException if the collection is empty.
@see Comparable
"
      end

      operation 8674050 "max"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "coll" type class_ref 184194 // Collection
	  param inout name "comp" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Returns the maximum element of the given collection, according to the
order induced by the specified comparator.  All elements in the
collection must be <i>mutually comparable</i> by the specified
comparator (that is, <tt>comp.compare(e1, e2)</tt> must not throw a
<tt>ClassCastException</tt> for any elements <tt>e1</tt> and
<tt>e2</tt> in the collection).<p>

This method iterates over the entire collection, hence it requires
time proportional to the size of the collection.

@param  <T> the class of the objects in the collection
@param  coll the collection whose maximum element is to be determined.
@param  comp the comparator with which to determine the maximum element.
        A <tt>null</tt> value indicates that the elements' <i>natural
       ordering</i> should be used.
@return the maximum element of the given collection, according
        to the specified comparator.
@throws ClassCastException if the collection contains elements that are
        not <i>mutually comparable</i> using the specified comparator.
@throws NoSuchElementException if the collection is empty.
@see Comparable
"
      end

      operation 8674178 "rotate"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the elements in the specified list by the specified distance.
After calling this method, the element at index <tt>i</tt> will be
the element previously at index <tt>(i - distance)</tt> mod
<tt>list.size()</tt>, for all values of <tt>i</tt> between <tt>0</tt>
and <tt>list.size()-1</tt>, inclusive.  (This method has no effect on
the size of the list.)

<p>For example, suppose <tt>list</tt> comprises<tt> [t, a, n, k, s]</tt>.
After invoking <tt>Collections.rotate(list, 1)</tt> (or
<tt>Collections.rotate(list, -4)</tt>), <tt>list</tt> will comprise
<tt>[s, t, a, n, k]</tt>.

<p>Note that this method can usefully be applied to sublists to
move one or more elements within a list while preserving the
order of the remaining elements.  For example, the following idiom
moves the element at index <tt>j</tt> forward to position
<tt>k</tt> (which must be greater than or equal to <tt>j</tt>):
<pre>
    Collections.rotate(list.subList(j, k+1), -1);
</pre>
To make this concrete, suppose <tt>list</tt> comprises
<tt>[a, b, c, d, e]</tt>.  To move the element at index <tt>1</tt>
(<tt>b</tt>) forward two positions, perform the following invocation:
<pre>
    Collections.rotate(l.subList(1, 4), -1);
</pre>
The resulting list is <tt>[a, c, d, b, e]</tt>.

<p>To move more than one element forward, increase the absolute value
of the rotation distance.  To move elements backward, use a positive
shift distance.

<p>If the specified list is small or implements the {@link
RandomAccess} interface, this implementation exchanges the first
element into the location it should go, and then repeatedly exchanges
the displaced element into the location it should go until a displaced
element is swapped into the first element.  If necessary, the process
is repeated on the second and successive elements, until the rotation
is complete.  If the specified list is large and doesn't implement the
<tt>RandomAccess</tt> interface, this implementation breaks the
list into two sublist views around index <tt>-distance mod size</tt>.
Then the {@link #reverse(List)} method is invoked on each sublist view,
and finally it is invoked on the entire list.  For a more complete
description of both algorithms, see Section 2.3 of Jon Bentley's
<i>Programming Pearls</i> (Addison-Wesley, 1986).

@param list the list to be rotated.
@param distance the distance to rotate the list.  There are no
       constraints on this value; it may be zero, negative, or
       greater than <tt>list.size()</tt>.
@throws UnsupportedOperationException if the specified list or
        its list-iterator does not support the <tt>set</tt> operation.
@since 1.4
"
      end

      operation 8674306 "rotate1"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8674434 "rotate2"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8674562 "replaceAll"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "list" type class_ref 175362 // List
	  param inout name "oldVal" explicit_type "T"
	  param inout name "newVal" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all occurrences of one specified value in a list with another.
More formally, replaces with <tt>newVal</tt> each element <tt>e</tt>
in <tt>list</tt> such that
<tt>(oldVal==null ? e==null : oldVal.equals(e))</tt>.
(This method has no effect on the size of the list.)

@param  <T> the class of the objects in the list
@param list the list in which replacement is to occur.
@param oldVal the old value to be replaced.
@param newVal the new value with which <tt>oldVal</tt> is to be
       replaced.
@return <tt>true</tt> if <tt>list</tt> contained one or more elements
        <tt>e</tt> such that
        <tt>(oldVal==null ?  e==null : oldVal.equals(e))</tt>.
@throws UnsupportedOperationException if the specified list or
        its list-iterator does not support the <tt>set</tt> operation.
@since  1.4
"
      end

      operation 8674690 "indexOfSubList"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "source" type class_ref 175362 // List
	  param inout name "target" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the starting position of the first occurrence of the specified
target list within the specified source list, or -1 if there is no
such occurrence.  More formally, returns the lowest index <tt>i</tt>
such that {@code source.subList(i, i+target.size()).equals(target)},
or -1 if there is no such index.  (Returns -1 if
{@code target.size() > source.size()})

<p>This implementation uses the \"brute force\" technique of scanning
over the source list, looking for a match with the target at each
location in turn.

@param source the list in which to search for the first occurrence
       of <tt>target</tt>.
@param target the list to search for as a subList of <tt>source</tt>.
@return the starting position of the first occurrence of the specified
        target list within the specified source list, or -1 if there
        is no such occurrence.
@since  1.4
"
      end

      operation 8674818 "lastIndexOfSubList"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "source" type class_ref 175362 // List
	  param inout name "target" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the starting position of the last occurrence of the specified
target list within the specified source list, or -1 if there is no such
occurrence.  More formally, returns the highest index <tt>i</tt>
such that {@code source.subList(i, i+target.size()).equals(target)},
or -1 if there is no such index.  (Returns -1 if
{@code target.size() > source.size()})

<p>This implementation uses the \"brute force\" technique of iterating
over the source list, looking for a match with the target at each
location in turn.

@param source the list in which to search for the last occurrence
       of <tt>target</tt>.
@param target the list to search for as a subList of <tt>source</tt>.
@return the starting position of the last occurrence of the specified
        target list within the specified source list, or -1 if there
        is no such occurrence.
@since  1.4
"
      end

      operation 8674946 "unmodifiableCollection"
	class_operation public return_type class_ref 184194 // Collection
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unmodifiable Wrappers

Returns an unmodifiable view of the specified collection.  This method
allows modules to provide users with \"read-only\" access to internal
collections.  Query operations on the returned collection \"read through\"
to the specified collection, and attempts to modify the returned
collection, whether direct or via its iterator, result in an
<tt>UnsupportedOperationException</tt>.<p>

The returned collection does <i>not</i> pass the hashCode and equals
operations through to the backing collection, but relies on
<tt>Object</tt>'s <tt>equals</tt> and <tt>hashCode</tt> methods.  This
is necessary to preserve the contracts of these operations in the case
that the backing collection is a set or a list.<p>

The returned collection will be serializable if the specified collection
is serializable.

@param  <T> the class of the objects in the collection
@param  c the collection for which an unmodifiable view is to be
        returned.
@return an unmodifiable view of the specified collection.
"
      end

      class 1073154 "UnmodifiableCollection"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184194 // Collection
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3489410 // <realization>
	  relation 3489410 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3489410 // <realization>
	    b parent class_ref 184194 // Collection
	end

	classrelation 3489538 // <realization>
	  relation 3489538 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3489538 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2024322 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1820017752578914078L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3489666 // c (<unidirectional association>)
	  relation 3489666 --->
	    a role_name "c" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends E> ${name}${value};
"
	      classrelation_ref 3489666 // c (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	operation 8675074 "UnmodifiableCollection"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675202 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675330 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675458 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675586 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675714 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675842 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675970 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676098 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676226 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676354 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676482 "addAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676610 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676738 "retainAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676866 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8676994 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Collection"
	end

	operation 8677122 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8677250 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	  
	  
	  
	end

	operation 8677378 "stream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	  
	  
	  
	end

	operation 8677506 "parallelStream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	  
	  
	  
	end
      end

      operation 8677634 "unmodifiableSet"
	class_operation public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "s" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified set.  This method allows
modules to provide users with \"read-only\" access to internal sets.
Query operations on the returned set \"read through\" to the specified
set, and attempts to modify the returned set, whether direct or via its
iterator, result in an <tt>UnsupportedOperationException</tt>.<p>

The returned set will be serializable if the specified set
is serializable.

@param  <T> the class of the objects in the set
@param  s the set for which an unmodifiable view is to be returned.
@return an unmodifiable view of the specified set.
"
      end

      class 1073282 "UnmodifiableSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1073154 // UnmodifiableCollection
	  rank 0 explicit_value ""
	actual class class_ref 192258 // Set
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3489794 // <realization>
	  relation 3489794 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3489794 // <realization>
	    b parent class_ref 1073154 // UnmodifiableCollection
	end

	classrelation 3489922 // <realization>
	  relation 3489922 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3489922 // <realization>
	    b parent class_ref 192258 // Set
	end

	classrelation 3490050 // <realization>
	  relation 3490050 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3490050 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2024450 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -9215047833775013803L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8677762 "UnmodifiableSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 192258 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8677890 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8678018 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8678146 "unmodifiableSortedSet"
	class_operation public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "s" type class_ref 511874 // SortedSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified sorted set.  This method
allows modules to provide users with \"read-only\" access to internal
sorted sets.  Query operations on the returned sorted set \"read
through\" to the specified sorted set.  Attempts to modify the returned
sorted set, whether direct, via its iterator, or via its
<tt>subSet</tt>, <tt>headSet</tt>, or <tt>tailSet</tt> views, result in
an <tt>UnsupportedOperationException</tt>.<p>

The returned sorted set will be serializable if the specified sorted set
is serializable.

@param  <T> the class of the objects in the set
@param s the sorted set for which an unmodifiable view is to be
       returned.
@return an unmodifiable view of the specified sorted set.
"
      end

      class 1073410 "UnmodifiableSortedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1073282 // UnmodifiableSet
	  rank 0 explicit_value ""
	actual class class_ref 511874 // SortedSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3490178 // <realization>
	  relation 3490178 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3490178 // <realization>
	    b parent class_ref 1073282 // UnmodifiableSet
	end

	classrelation 3490434 // <realization>
	  relation 3490434 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3490434 // <realization>
	    b parent class_ref 511874 // SortedSet
	end

	classrelation 3490562 // <realization>
	  relation 3490562 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3490562 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2024578 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -4929149591599911165L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3490690 // ss (<unidirectional association>)
	  relation 3490690 --->
	    a role_name "ss" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3490690 // ss (<unidirectional association>)
	    b parent class_ref 511874 // SortedSet
	end

	operation 8679170 "UnmodifiableSortedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 511874 // SortedSet
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8679298 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8679426 "subSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8679554 "headSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8679682 "tailSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8679810 "first"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8679938 "last"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8680066 "unmodifiableNavigableSet"
	class_operation public return_type class_ref 1073538 // NavigableSet
	nparams 1
	  param inout name "s" type class_ref 1073538 // NavigableSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified navigable set.  This method
allows modules to provide users with \"read-only\" access to internal
navigable sets.  Query operations on the returned navigable set \"read
through\" to the specified navigable set.  Attempts to modify the returned
navigable set, whether direct, via its iterator, or via its
{@code subSet}, {@code headSet}, or {@code tailSet} views, result in
an {@code UnsupportedOperationException}.<p>

The returned navigable set will be serializable if the specified
navigable set is serializable.

@param  <T> the class of the objects in the set
@param s the navigable set for which an unmodifiable view is to be
       returned
@return an unmodifiable view of the specified navigable set
@since 1.8
"
      end

      class 1073666 "UnmodifiableNavigableSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1073410 // UnmodifiableSortedSet
	  rank 0 explicit_value ""
	actual class class_ref 1073538 // NavigableSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3490818 // <realization>
	  relation 3490818 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3490818 // <realization>
	    b parent class_ref 1073410 // UnmodifiableSortedSet
	end

	classrelation 3491074 // <realization>
	  relation 3491074 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3491074 // <realization>
	    b parent class_ref 1073538 // NavigableSet
	end

	classrelation 3491202 // <realization>
	  relation 3491202 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3491202 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2024706 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6027448201786391929L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	class 1073794 "EmptyNavigableSet"
	  visibility private 
	  nformals 1
	  formal name "E" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 1073666 // UnmodifiableNavigableSet
	    rank 0 explicit_value ""
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3491330 // <realization>
	    relation 3491330 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3491330 // <realization>
	      b parent class_ref 1073666 // UnmodifiableNavigableSet
	  end

	  classrelation 3491458 // <realization>
	    relation 3491458 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3491458 // <realization>
	      b parent class_ref 136578 // Serializable
	  end

	  attribute 2024834 "serialVersionUID"
	    class_attribute const_attribute private explicit_type "long"
	    init_value " -6291252904449939134L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8682114 "EmptyNavigableSet"
	    cpp_inline public explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8682242 "readResolve"
	    cpp_inline private return_type class_ref 129538 // Object
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 3491586 // EMPTY_NAVIGABLE_SET (<unidirectional association>)
	  relation 3491586 --->
	    a role_name "EMPTY_NAVIGABLE_SET" init_value "
                new EmptyNavigableSet<>()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      java_annotation "@SuppressWarnings(\"rawtypes\")
"
	      classrelation_ref 3491586 // EMPTY_NAVIGABLE_SET (<unidirectional association>)
	    b parent class_ref 1073538 // NavigableSet
	end

	classrelation 3491714 // ns (<unidirectional association>)
	  relation 3491714 --->
	    a role_name "ns" const_relation private
	      comment "
The instance we are protecting.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3491714 // ns (<unidirectional association>)
	    b parent class_ref 1073538 // NavigableSet
	end

	operation 8682370 "UnmodifiableNavigableSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 1073538 // NavigableSet
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8682498 "lower"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8682626 "floor"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8682754 "ceiling"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8682882 "higher"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683010 "pollFirst"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683138 "pollLast"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683266 "descendingSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683394 "descendingIterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683522 "subSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 4
	    param inout name "fromElement" explicit_type "E"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toElement" explicit_type "E"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683650 "headSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "toElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8683778 "tailSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8683906 "unmodifiableList"
	class_operation public return_type class_ref 175362 // List
	nparams 1
	  param inout name "list" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified list.  This method allows
modules to provide users with \"read-only\" access to internal
lists.  Query operations on the returned list \"read through\" to the
specified list, and attempts to modify the returned list, whether
direct or via its iterator, result in an
<tt>UnsupportedOperationException</tt>.<p>

The returned list will be serializable if the specified list
is serializable. Similarly, the returned list will implement
{@link RandomAccess} if the specified list does.

@param  <T> the class of the objects in the list
@param  list the list for which an unmodifiable view is to be returned.
@return an unmodifiable view of the specified list.
"
      end

      class 1073922 "UnmodifiableList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1073154 // UnmodifiableCollection
	  rank 0 explicit_value ""
	actual class class_ref 175362 // List
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3491842 // <realization>
	  relation 3491842 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3491842 // <realization>
	    b parent class_ref 1073154 // UnmodifiableCollection
	end

	classrelation 3491970 // <realization>
	  relation 3491970 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3491970 // <realization>
	    b parent class_ref 175362 // List
	end

	attribute 2024962 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -283967356065247728L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3492098 // list (<unidirectional association>)
	  relation 3492098 --->
	    a role_name "list" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends E> ${name}${value};
"
	      classrelation_ref 3492098 // list (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 8684034 "UnmodifiableList"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "list" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684162 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684290 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684418 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684546 "set"
	  cpp_inline public explicit_return_type "E"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684674 "add"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684802 "remove"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8684930 "indexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8685058 "lastIndexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8685186 "addAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8685314 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "operator" type class_ref 184834 // UnaryOperator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8685442 "sort"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8685570 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8685698 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8685826 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8685954 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "UnmodifiableRandomAccessList instances are serialized as
UnmodifiableList instances to allow them to be deserialized
in pre-1.4 JREs (which do not have UnmodifiableRandomAccessList).
This method inverts the transformation.  As a beneficial
side-effect, it also grafts the RandomAccess marker onto
UnmodifiableList instances that were serialized in pre-1.4 JREs.

Note: Unfortunately, UnmodifiableRandomAccessList instances
serialized in 1.4.1 and deserialized in 1.4 will become
UnmodifiableList instances, as this method was missing in 1.4.
"
	end
      end

      class 1074050 "UnmodifiableRandomAccessList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 1073922 // UnmodifiableList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3492226 // <realization>
	  relation 3492226 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3492226 // <realization>
	    b parent class_ref 1073922 // UnmodifiableList
	end

	classrelation 3492354 // <realization>
	  relation 3492354 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3492354 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	operation 8686082 "UnmodifiableRandomAccessList"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "list" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8686210 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2025090 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2542308836966382001L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8686338 "writeReplace"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Allows instances to be deserialized in pre-1.4 JREs (which do
not have UnmodifiableRandomAccessList).  UnmodifiableList has
a readResolve method that inverts this transformation upon
deserialization.
"
	end
      end

      operation 8686466 "unmodifiableMap"
	class_operation public return_type class_ref 130178 // Map
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified map.  This method
allows modules to provide users with \"read-only\" access to internal
maps.  Query operations on the returned map \"read through\"
to the specified map, and attempts to modify the returned
map, whether direct or via its collection views, result in an
<tt>UnsupportedOperationException</tt>.<p>

The returned map will be serializable if the specified map
is serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param  m the map for which an unmodifiable view is to be returned.
@return an unmodifiable view of the specified map.
"
      end

      class 1074178 "UnmodifiableMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3492482 // <realization>
	  relation 3492482 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3492482 // <realization>
	    b parent class_ref 130178 // Map
	end

	classrelation 3492610 // <realization>
	  relation 3492610 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3492610 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2025218 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -1034234728574286014L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3492738 // m (<unidirectional association>)
	  relation 3492738 --->
	    a role_name "m" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends K, ? extends V> ${name}${value};
"
	      classrelation_ref 3492738 // m (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	operation 8686594 "UnmodifiableMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8686722 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8686850 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8686978 "containsKey"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8687106 "containsValue"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "val" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8687234 "get"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8687362 "put"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8687490 "remove"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8687618 "putAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "m" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8687746 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3492866 // keySet (<unidirectional association>)
	  relation 3492866 --->
	    a role_name "keySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 3492866 // keySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	classrelation 3492994 // entrySet (<unidirectional association>)
	  relation 3492994 --->
	    a role_name "entrySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	      classrelation_ref 3492994 // entrySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	classrelation 3493122 // values (<unidirectional association>)
	  relation 3493122 --->
	    a role_name "values" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	      classrelation_ref 3493122 // values (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	operation 8687874 "keySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8688002 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8688130 "values"
	  cpp_inline public return_type class_ref 184194 // Collection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8688258 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8688386 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8688514 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8688642 "getOrDefault"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "k" type class_ref 129538 // Object
	    param inout name "defaultValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment " Override default methods in Map"
	end

	operation 8688770 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 192514 // BiConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8688898 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "function" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689026 "putIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689154 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689282 "replace"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "oldValue" explicit_type "V"
	    param inout name "newValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689410 "replace"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689538 "computeIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "mappingFunction" type class_ref 192770 // Function
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689666 "computeIfPresent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689794 "compute"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8689922 "merge"
	  cpp_inline public explicit_return_type "V"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 1074306 "UnmodifiableEntrySet"
	  visibility package 
	  nformals 2
	  formal name "K" type "" explicit_default_value ""
	    explicit_extends ""
	  formal name "V" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 1073282 // UnmodifiableSet
	    rank 0 explicit_value ""
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3493250 // <realization>
	    relation 3493250 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3493250 // <realization>
	      b parent class_ref 1073282 // UnmodifiableSet
	  end

	  attribute 2025346 "serialVersionUID"
	    class_attribute const_attribute private explicit_type "long"
	    init_value " 7854390611657943733L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8690050 "UnmodifiableEntrySet"
	    cpp_inline package explicit_return_type ""
	    nparams 1
	      param inout name "s" type class_ref 192258 // Set
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends Map.Entry<? extends K, ? extends V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	    
	    
	    
	  end

	  operation 8690178 "entryConsumer"
	    class_operation cpp_inline package return_type class_ref 163458 // Consumer
	    nparams 1
	      param inout name "action" type class_ref 163458 // Consumer
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<Map.Entry<K, V>> ${name}${(}${t0}<? super Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8690306 "forEach"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "action" type class_ref 163458 // Consumer
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  class 1074434 "UnmodifiableEntrySetSpliterator"
	    visibility package 
	    nformals 2
	    formal name "K" type "" explicit_default_value ""
	      explicit_extends ""
	    formal name "V" type "" explicit_default_value ""
	      explicit_extends ""
	    nactuals 1
	    actual class class_ref 184450 // Spliterator
	      rank 0 explicit_value ""
	    cpp_decl ""
	    final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    mysql_decl ""
	    
	    classrelation 3493378 // <realization>
	      relation 3493378 -_-|>
		stereotype "bind"
		a public
		  java "${type}"
		  classrelation_ref 3493378 // <realization>
		b parent class_ref 184450 // Spliterator
	    end

	    classrelation 3493506 // s (<unidirectional association>)
	      relation 3493506 --->
		a role_name "s" const_relation package
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K, V>> ${name}${value};
"
		  classrelation_ref 3493506 // s (<unidirectional association>)
		b parent class_ref 184450 // Spliterator
	    end

	    operation 8690434 "UnmodifiableEntrySetSpliterator"
	      cpp_inline package explicit_return_type ""
	      nparams 1
	        param inout name "s" type class_ref 184450 // Spliterator
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8690562 "tryAdvance"
	      cpp_inline public explicit_return_type "boolean"
	      nparams 1
	        param inout name "action" type class_ref 163458 // Consumer
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8690690 "forEachRemaining"
	      cpp_inline public explicit_return_type "void"
	      nparams 1
	        param inout name "action" type class_ref 163458 // Consumer
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8690818 "trySplit"
	      cpp_inline public return_type class_ref 184450 // Spliterator
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8690946 "estimateSize"
	      cpp_inline public explicit_return_type "long"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8691074 "getExactSizeIfKnown"
	      cpp_inline public explicit_return_type "long"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8691202 "characteristics"
	      cpp_inline public explicit_return_type "int"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8691330 "hasCharacteristics"
	      cpp_inline public explicit_return_type "boolean"
	      nparams 1
	        param in name "characteristics" explicit_type "int"
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 8691458 "getComparator"
	      cpp_inline public return_type class_ref 184962 // Comparator
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end
	  end

	  operation 8691586 "spliterator"
	    cpp_inline public return_type class_ref 184450 // Spliterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8691714 "stream"
	    cpp_inline public return_type class_ref 184706 // Stream
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 8691842 "parallelStream"
	    cpp_inline public return_type class_ref 184706 // Stream
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 8691970 "iterator"
	    cpp_inline public return_type class_ref 132994 // Iterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8692098 "toArray"
	    cpp_inline public return_type class_ref 129538 // Object
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8692226 "toArray"
	    cpp_inline public explicit_return_type "T"
	    nparams 1
	      param inout name "a" explicit_type "T"
	    multiplicity "[]"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8692354 "contains"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "This method is overridden to protect the backing set against
an object with a nefarious equals function that senses
that the equality-candidate is Map.Entry and calls its
setValue method.
"
	  end

	  operation 8692482 "containsAll"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "coll" type class_ref 184194 // Collection
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "The next two methods are overridden to protect against
an unscrupulous List whose contains(Object o) method senses
when o is a Map.Entry, and calls o.setValue.
"
	  end

	  operation 8692610 "equals"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  class 1074562 "UnmodifiableEntry"
	    visibility private 
	    nformals 2
	    formal name "K" type "" explicit_default_value ""
	      explicit_extends ""
	    formal name "V" type "" explicit_default_value ""
	      explicit_extends ""
	    nactuals 4
	    actual class class_ref 130178 // Map
	      rank 0 explicit_value ""
	    actual class class_ref 130178 // Map
	      rank 1 explicit_value ""
	    actual class class_ref 192386 // Entry
	      rank 0 explicit_value ""
	    actual class class_ref 192386 // Entry
	      rank 1 explicit_value ""
	    cpp_decl ""
	    static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    mysql_decl ""
	    
	    classrelation 3493634 // <realization>
	      relation 3493634 -_-|>
		stereotype "bind"
		a public
		  java "${type}"
		  classrelation_ref 3493634 // <realization>
		b parent class_ref 192386 // Entry
	    end

	    classrelation 3493762 // e (<unidirectional association>)
	      relation 3493762 --->
		a role_name "e" private
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends K, ? extends V> ${name}${value};
"
		  classrelation_ref 3493762 // e (<unidirectional association>)
		b parent class_ref 192386 // Entry
	    end

	    operation 8692738 "UnmodifiableEntry"
	      cpp_inline package explicit_return_type ""
	      nparams 1
	        param inout name "e" type class_ref 192386 // Entry
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8692866 "getKey"
	      cpp_inline public explicit_return_type "K"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8692994 "getValue"
	      cpp_inline public explicit_return_type "V"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8693122 "setValue"
	      cpp_inline public explicit_return_type "V"
	      nparams 1
	        param inout name "value" explicit_type "V"
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8693250 "hashCode"
	      cpp_inline public explicit_return_type "int"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8693378 "equals"
	      cpp_inline public explicit_return_type "boolean"
	      nparams 1
	        param inout name "o" type class_ref 129538 // Object
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8693506 "toString"
	      cpp_inline public return_type class_ref 128130 // String
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end
	  end
	end
      end

      operation 8693634 "unmodifiableSortedMap"
	class_operation public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "m" type class_ref 500354 // SortedMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified sorted map.  This method
allows modules to provide users with \"read-only\" access to internal
sorted maps.  Query operations on the returned sorted map \"read through\"
to the specified sorted map.  Attempts to modify the returned
sorted map, whether direct, via its collection views, or via its
<tt>subMap</tt>, <tt>headMap</tt>, or <tt>tailMap</tt> views, result in
an <tt>UnsupportedOperationException</tt>.<p>

The returned sorted map will be serializable if the specified sorted map
is serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param m the sorted map for which an unmodifiable view is to be
       returned.
@return an unmodifiable view of the specified sorted map.
"
      end

      class 1074690 "UnmodifiableSortedMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1074178 // UnmodifiableMap
	  rank 0 explicit_value ""
	actual class class_ref 1074178 // UnmodifiableMap
	  rank 1 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3493890 // <realization>
	  relation 3493890 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3493890 // <realization>
	    b parent class_ref 1074178 // UnmodifiableMap
	end

	classrelation 3494146 // <realization>
	  relation 3494146 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3494146 // <realization>
	    b parent class_ref 500354 // SortedMap
	end

	classrelation 3494274 // <realization>
	  relation 3494274 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3494274 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2025474 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8806743815996713206L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3494402 // sm (<unidirectional association>)
	  relation 3494402 --->
	    a role_name "sm" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, ? extends V> ${name}${value};
"
	      classrelation_ref 3494402 // sm (<unidirectional association>)
	    b parent class_ref 500354 // SortedMap
	end

	operation 8694914 "UnmodifiableSortedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 500354 // SortedMap
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8695042 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8695170 "subMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8695298 "headMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8695426 "tailMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8695554 "firstKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8695682 "lastKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8695810 "unmodifiableNavigableMap"
	class_operation public return_type class_ref 1063426 // NavigableMap
	nparams 1
	  param inout name "m" type class_ref 1063426 // NavigableMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable view of the specified navigable map.  This method
allows modules to provide users with \"read-only\" access to internal
navigable maps.  Query operations on the returned navigable map \"read
through\" to the specified navigable map.  Attempts to modify the returned
navigable map, whether direct, via its collection views, or via its
{@code subMap}, {@code headMap}, or {@code tailMap} views, result in
an {@code UnsupportedOperationException}.<p>

The returned navigable map will be serializable if the specified
navigable map is serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param m the navigable map for which an unmodifiable view is to be
       returned
@return an unmodifiable view of the specified navigable map
@since 1.8
"
      end

      class 1074818 "UnmodifiableNavigableMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1074690 // UnmodifiableSortedMap
	  rank 0 explicit_value ""
	actual class class_ref 1074690 // UnmodifiableSortedMap
	  rank 1 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 0 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3494530 // <realization>
	  relation 3494530 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3494530 // <realization>
	    b parent class_ref 1074690 // UnmodifiableSortedMap
	end

	classrelation 3494786 // <realization>
	  relation 3494786 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3494786 // <realization>
	    b parent class_ref 1063426 // NavigableMap
	end

	classrelation 3494914 // <realization>
	  relation 3494914 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3494914 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2025602 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -4858195264774772197L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	class 1074946 "EmptyNavigableMap"
	  visibility private 
	  nformals 2
	  formal name "K" type "" explicit_default_value ""
	    explicit_extends ""
	  formal name "V" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 2
	  actual class class_ref 1074818 // UnmodifiableNavigableMap
	    rank 0 explicit_value ""
	  actual class class_ref 1074818 // UnmodifiableNavigableMap
	    rank 1 explicit_value ""
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3495042 // <realization>
	    relation 3495042 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3495042 // <realization>
	      b parent class_ref 1074818 // UnmodifiableNavigableMap
	  end

	  classrelation 3495170 // <realization>
	    relation 3495170 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3495170 // <realization>
	      b parent class_ref 136578 // Serializable
	  end

	  attribute 2025730 "serialVersionUID"
	    class_attribute const_attribute private explicit_type "long"
	    init_value " -2239321462712562324L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8698626 "EmptyNavigableMap"
	    cpp_inline package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8698754 "navigableKeySet"
	    cpp_inline public return_type class_ref 1073538 // NavigableSet
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 8698882 "readResolve"
	    cpp_inline private return_type class_ref 129538 // Object
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 3495298 // EMPTY_NAVIGABLE_MAP (<unidirectional association>)
	  relation 3495298 --->
	    a role_name "EMPTY_NAVIGABLE_MAP" init_value "
            new EmptyNavigableMap<>()" class_relation const_relation private
	      comment "
Singleton for {@link emptyNavigableMap()} which is also immutable.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?,?> ${name}${value};
"
	      classrelation_ref 3495298 // EMPTY_NAVIGABLE_MAP (<unidirectional association>)
	    b parent class_ref 1074946 // EmptyNavigableMap
	end

	classrelation 3495426 // nm (<unidirectional association>)
	  relation 3495426 --->
	    a role_name "nm" const_relation private
	      comment "
The instance we wrap and protect.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, ? extends V> ${name}${value};
"
	      classrelation_ref 3495426 // nm (<unidirectional association>)
	    b parent class_ref 1063426 // NavigableMap
	end

	operation 8699010 "UnmodifiableNavigableMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 1063426 // NavigableMap
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8699138 "lowerKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8699266 "floorKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8699394 "ceilingKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8699522 "higherKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8699650 "lowerEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8699778 "floorEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8699906 "ceilingEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8700034 "higherEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8700162 "firstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8700290 "lastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8700418 "pollFirstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8700546 "pollLastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8700674 "descendingMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8700802 "navigableKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8700930 "descendingKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8701058 "subMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 4
	    param inout name "fromKey" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toKey" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8701186 "headMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "toKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8701314 "tailMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8701442 "synchronizedCollection"
	class_operation public return_type class_ref 184194 // Collection
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Synch Wrappers

Returns a synchronized (thread-safe) collection backed by the specified
collection.  In order to guarantee serial access, it is critical that
<strong>all</strong> access to the backing collection is accomplished
through the returned collection.<p>

It is imperative that the user manually synchronize on the returned
collection when traversing it via {@link Iterator}, {@link Spliterator}
or {@link Stream}:
<pre>
 Collection c = Collections.synchronizedCollection(myCollection);
    ...
 synchronized (c) {
     Iterator i = c.iterator(); // Must be in the synchronized block
     while (i.hasNext())
        foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned collection does <i>not</i> pass the {@code hashCode}
and {@code equals} operations through to the backing collection, but
relies on {@code Object}'s equals and hashCode methods.  This is
necessary to preserve the contracts of these operations in the case
that the backing collection is a set or a list.<p>

The returned collection will be serializable if the specified collection
is serializable.

@param  <T> the class of the objects in the collection
@param  c the collection to be \"wrapped\" in a synchronized collection.
@return a synchronized view of the specified collection.
"
      end

      operation 8701570 "synchronizedCollection"
	class_operation package return_type class_ref 184194 // Collection
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param inout name "mutex" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1075074 "SynchronizedCollection"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184194 // Collection
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3495554 // <realization>
	  relation 3495554 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3495554 // <realization>
	    b parent class_ref 184194 // Collection
	end

	classrelation 3495682 // <realization>
	  relation 3495682 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3495682 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2025858 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3053995032091335093L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3495810 // c (<unidirectional association>)
	  relation 3495810 --->
	    a role_name "c" const_relation package
	      comment " Backing Collection"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3495810 // c (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	classrelation 3495938 // mutex (<unidirectional association>)
	  relation 3495938 --->
	    a role_name "mutex" const_relation package
	      comment " Object on which to synchronize"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3495938 // mutex (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 8701698 "SynchronizedCollection"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8701826 "SynchronizedCollection"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 184194 // Collection
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8701954 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702082 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702210 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702338 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702466 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702594 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702722 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702850 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8702978 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8703106 "addAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8703234 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8703362 "retainAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8703490 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8703618 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8703746 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Collection"
	end

	operation 8703874 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8704002 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8704130 "stream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8704258 "parallelStream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8704386 "writeObject"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 173442 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8704514 "synchronizedSet"
	class_operation public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "s" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) set backed by the specified
set.  In order to guarantee serial access, it is critical that
<strong>all</strong> access to the backing set is accomplished
through the returned set.<p>

It is imperative that the user manually synchronize on the returned
set when iterating over it:
<pre>
 Set s = Collections.synchronizedSet(new HashSet());
     ...
 synchronized (s) {
     Iterator i = s.iterator(); // Must be in the synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned set will be serializable if the specified set is
serializable.

@param  <T> the class of the objects in the set
@param  s the set to be \"wrapped\" in a synchronized set.
@return a synchronized view of the specified set.
"
      end

      operation 8704642 "synchronizedSet"
	class_operation package return_type class_ref 192258 // Set
	nparams 2
	  param inout name "s" type class_ref 192258 // Set
	  param inout name "mutex" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1075202 "SynchronizedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1075074 // SynchronizedCollection
	  rank 0 explicit_value ""
	actual class class_ref 192258 // Set
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3496066 // <realization>
	  relation 3496066 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3496066 // <realization>
	    b parent class_ref 1075074 // SynchronizedCollection
	end

	classrelation 3496194 // <realization>
	  relation 3496194 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3496194 // <realization>
	    b parent class_ref 192258 // Set
	end

	attribute 2025986 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 487447009682186044L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8704770 "SynchronizedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 192258 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8704898 "SynchronizedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 192258 // Set
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8705026 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8705154 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8705282 "synchronizedSortedSet"
	class_operation public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "s" type class_ref 511874 // SortedSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) sorted set backed by the specified
sorted set.  In order to guarantee serial access, it is critical that
<strong>all</strong> access to the backing sorted set is accomplished
through the returned sorted set (or its views).<p>

It is imperative that the user manually synchronize on the returned
sorted set when iterating over it or any of its <tt>subSet</tt>,
<tt>headSet</tt>, or <tt>tailSet</tt> views.
<pre>
 SortedSet s = Collections.synchronizedSortedSet(new TreeSet());
     ...
 synchronized (s) {
     Iterator i = s.iterator(); // Must be in the synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
or:
<pre>
 SortedSet s = Collections.synchronizedSortedSet(new TreeSet());
 SortedSet s2 = s.headSet(foo);
     ...
 synchronized (s) {  // Note: s, not s2!!!
     Iterator i = s2.iterator(); // Must be in the synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned sorted set will be serializable if the specified
sorted set is serializable.

@param  <T> the class of the objects in the set
@param  s the sorted set to be \"wrapped\" in a synchronized sorted set.
@return a synchronized view of the specified sorted set.
"
      end

      class 1075330 "SynchronizedSortedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1075202 // SynchronizedSet
	  rank 0 explicit_value ""
	actual class class_ref 511874 // SortedSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3496322 // <realization>
	  relation 3496322 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3496322 // <realization>
	    b parent class_ref 1075202 // SynchronizedSet
	end

	classrelation 3496450 // <realization>
	  relation 3496450 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3496450 // <realization>
	    b parent class_ref 511874 // SortedSet
	end

	attribute 2026114 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8695801310862127406L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3496578 // ss (<unidirectional association>)
	  relation 3496578 --->
	    a role_name "ss" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3496578 // ss (<unidirectional association>)
	    b parent class_ref 511874 // SortedSet
	end

	operation 8705410 "SynchronizedSortedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 511874 // SortedSet
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8705538 "SynchronizedSortedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 511874 // SortedSet
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8705666 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8705794 "subSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8705922 "headSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8706050 "tailSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8706178 "first"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8706306 "last"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8706434 "synchronizedNavigableSet"
	class_operation public return_type class_ref 1073538 // NavigableSet
	nparams 1
	  param inout name "s" type class_ref 1073538 // NavigableSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) navigable set backed by the
specified navigable set.  In order to guarantee serial access, it is
critical that <strong>all</strong> access to the backing navigable set is
accomplished through the returned navigable set (or its views).<p>

It is imperative that the user manually synchronize on the returned
navigable set when iterating over it or any of its {@code subSet},
{@code headSet}, or {@code tailSet} views.
<pre>
 NavigableSet s = Collections.synchronizedNavigableSet(new TreeSet());
     ...
 synchronized (s) {
     Iterator i = s.iterator(); // Must be in the synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
or:
<pre>
 NavigableSet s = Collections.synchronizedNavigableSet(new TreeSet());
 NavigableSet s2 = s.headSet(foo, true);
     ...
 synchronized (s) {  // Note: s, not s2!!!
     Iterator i = s2.iterator(); // Must be in the synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned navigable set will be serializable if the specified
navigable set is serializable.

@param  <T> the class of the objects in the set
@param  s the navigable set to be \"wrapped\" in a synchronized navigable
set
@return a synchronized view of the specified navigable set
@since 1.8
"
      end

      class 1075458 "SynchronizedNavigableSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1075330 // SynchronizedSortedSet
	  rank 0 explicit_value ""
	actual class class_ref 1073538 // NavigableSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3496706 // <realization>
	  relation 3496706 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3496706 // <realization>
	    b parent class_ref 1075330 // SynchronizedSortedSet
	end

	classrelation 3496834 // <realization>
	  relation 3496834 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3496834 // <realization>
	    b parent class_ref 1073538 // NavigableSet
	end

	attribute 2026242 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -5505529816273629798L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3496962 // ns (<unidirectional association>)
	  relation 3496962 --->
	    a role_name "ns" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3496962 // ns (<unidirectional association>)
	    b parent class_ref 1073538 // NavigableSet
	end

	operation 8706562 "SynchronizedNavigableSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 1073538 // NavigableSet
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8706690 "SynchronizedNavigableSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 1073538 // NavigableSet
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8706818 "lower"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8706946 "floor"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707074 "ceiling"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707202 "higher"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707330 "pollFirst"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707458 "pollLast"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707586 "descendingSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707714 "descendingIterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707842 "subSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8707970 "headSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8708098 "tailSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8708226 "subSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 4
	    param inout name "fromElement" explicit_type "E"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toElement" explicit_type "E"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8708354 "headSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "toElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8708482 "tailSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8708610 "synchronizedList"
	class_operation public return_type class_ref 175362 // List
	nparams 1
	  param inout name "list" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) list backed by the specified
list.  In order to guarantee serial access, it is critical that
<strong>all</strong> access to the backing list is accomplished
through the returned list.<p>

It is imperative that the user manually synchronize on the returned
list when iterating over it:
<pre>
 List list = Collections.synchronizedList(new ArrayList());
     ...
 synchronized (list) {
     Iterator i = list.iterator(); // Must be in synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned list will be serializable if the specified list is
serializable.

@param  <T> the class of the objects in the list
@param  list the list to be \"wrapped\" in a synchronized list.
@return a synchronized view of the specified list.
"
      end

      operation 8708738 "synchronizedList"
	class_operation package return_type class_ref 175362 // List
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "mutex" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1075586 "SynchronizedList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1075074 // SynchronizedCollection
	  rank 0 explicit_value ""
	actual class class_ref 175362 // List
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3497090 // <realization>
	  relation 3497090 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3497090 // <realization>
	    b parent class_ref 1075074 // SynchronizedCollection
	end

	classrelation 3497218 // <realization>
	  relation 3497218 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3497218 // <realization>
	    b parent class_ref 175362 // List
	end

	attribute 2026370 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -7754090372962971524L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3497346 // list (<unidirectional association>)
	  relation 3497346 --->
	    a role_name "list" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3497346 // list (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 8708866 "SynchronizedList"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "list" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8708994 "SynchronizedList"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "list" type class_ref 175362 // List
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709122 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709250 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709378 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709506 "set"
	  cpp_inline public explicit_return_type "E"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709634 "add"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709762 "remove"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8709890 "indexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8710018 "lastIndexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8710146 "addAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8710274 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8710402 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8710530 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8710658 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "operator" type class_ref 184834 // UnaryOperator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8710786 "sort"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8710914 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "SynchronizedRandomAccessList instances are serialized as
SynchronizedList instances to allow them to be deserialized
in pre-1.4 JREs (which do not have SynchronizedRandomAccessList).
This method inverts the transformation.  As a beneficial
side-effect, it also grafts the RandomAccess marker onto
SynchronizedList instances that were serialized in pre-1.4 JREs.

Note: Unfortunately, SynchronizedRandomAccessList instances
serialized in 1.4.1 and deserialized in 1.4 will become
SynchronizedList instances, as this method was missing in 1.4.
"
	end
      end

      class 1075714 "SynchronizedRandomAccessList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 1075586 // SynchronizedList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3497474 // <realization>
	  relation 3497474 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3497474 // <realization>
	    b parent class_ref 1075586 // SynchronizedList
	end

	classrelation 3497602 // <realization>
	  relation 3497602 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3497602 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	operation 8711042 "SynchronizedRandomAccessList"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "list" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8711170 "SynchronizedRandomAccessList"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "list" type class_ref 175362 // List
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8711298 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2026498 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1530674583602358482L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8711426 "writeReplace"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Allows instances to be deserialized in pre-1.4 JREs (which do
not have SynchronizedRandomAccessList).  SynchronizedList has
a readResolve method that inverts this transformation upon
deserialization.
"
	end
      end

      operation 8711554 "synchronizedMap"
	class_operation public return_type class_ref 130178 // Map
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) map backed by the specified
map.  In order to guarantee serial access, it is critical that
<strong>all</strong> access to the backing map is accomplished
through the returned map.<p>

It is imperative that the user manually synchronize on the returned
map when iterating over any of its collection views:
<pre>
 Map m = Collections.synchronizedMap(new HashMap());
     ...
 Set s = m.keySet();  // Needn't be in synchronized block
     ...
 synchronized (m) {  // Synchronizing on m, not s!
     Iterator i = s.iterator(); // Must be in synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned map will be serializable if the specified map is
serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param  m the map to be \"wrapped\" in a synchronized map.
@return a synchronized view of the specified map.
"
      end

      class 1075842 "SynchronizedMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3497730 // <realization>
	  relation 3497730 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3497730 // <realization>
	    b parent class_ref 130178 // Map
	end

	classrelation 3497858 // <realization>
	  relation 3497858 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3497858 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2026626 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1978198479659022715L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3497986 // m (<unidirectional association>)
	  relation 3497986 --->
	    a role_name "m" const_relation private
	      comment " Backing Map"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3497986 // m (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 3498114 // mutex (<unidirectional association>)
	  relation 3498114 --->
	    a role_name "mutex" const_relation package
	      comment " Object on which to synchronize"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3498114 // mutex (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 8711682 "SynchronizedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8711810 "SynchronizedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "m" type class_ref 130178 // Map
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8711938 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712066 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712194 "containsKey"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712322 "containsValue"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712450 "get"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712578 "put"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712706 "remove"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712834 "putAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "map" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8712962 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3498242 // keySet (<unidirectional association>)
	  relation 3498242 --->
	    a role_name "keySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 3498242 // keySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	classrelation 3498370 // entrySet (<unidirectional association>)
	  relation 3498370 --->
	    a role_name "entrySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	      classrelation_ref 3498370 // entrySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	classrelation 3498498 // values (<unidirectional association>)
	  relation 3498498 --->
	    a role_name "values" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	      classrelation_ref 3498498 // values (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	operation 8713090 "keySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8713218 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8713346 "values"
	  cpp_inline public return_type class_ref 184194 // Collection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8713474 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8713602 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8713730 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8713858 "getOrDefault"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "k" type class_ref 129538 // Object
	    param inout name "defaultValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Map"
	end

	operation 8713986 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 192514 // BiConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714114 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "function" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714242 "putIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714370 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714498 "replace"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "oldValue" explicit_type "V"
	    param inout name "newValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714626 "replace"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714754 "computeIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "mappingFunction" type class_ref 192770 // Function
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8714882 "computeIfPresent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8715010 "compute"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8715138 "merge"
	  cpp_inline public explicit_return_type "V"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8715266 "writeObject"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 173442 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8715394 "synchronizedSortedMap"
	class_operation public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "m" type class_ref 500354 // SortedMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) sorted map backed by the specified
sorted map.  In order to guarantee serial access, it is critical that
<strong>all</strong> access to the backing sorted map is accomplished
through the returned sorted map (or its views).<p>

It is imperative that the user manually synchronize on the returned
sorted map when iterating over any of its collection views, or the
collections views of any of its <tt>subMap</tt>, <tt>headMap</tt> or
<tt>tailMap</tt> views.
<pre>
 SortedMap m = Collections.synchronizedSortedMap(new TreeMap());
     ...
 Set s = m.keySet();  // Needn't be in synchronized block
     ...
 synchronized (m) {  // Synchronizing on m, not s!
     Iterator i = s.iterator(); // Must be in synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
or:
<pre>
 SortedMap m = Collections.synchronizedSortedMap(new TreeMap());
 SortedMap m2 = m.subMap(foo, bar);
     ...
 Set s2 = m2.keySet();  // Needn't be in synchronized block
     ...
 synchronized (m) {  // Synchronizing on m, not m2 or s2!
     Iterator i = s.iterator(); // Must be in synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned sorted map will be serializable if the specified
sorted map is serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param  m the sorted map to be \"wrapped\" in a synchronized sorted map.
@return a synchronized view of the specified sorted map.
"
      end

      class 1075970 "SynchronizedSortedMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1075842 // SynchronizedMap
	  rank 0 explicit_value ""
	actual class class_ref 1075842 // SynchronizedMap
	  rank 1 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3498626 // <realization>
	  relation 3498626 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3498626 // <realization>
	    b parent class_ref 1075842 // SynchronizedMap
	end

	classrelation 3498754 // <realization>
	  relation 3498754 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3498754 // <realization>
	    b parent class_ref 500354 // SortedMap
	end

	attribute 2026754 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8798146769416483793L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3498882 // sm (<unidirectional association>)
	  relation 3498882 --->
	    a role_name "sm" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3498882 // sm (<unidirectional association>)
	    b parent class_ref 500354 // SortedMap
	end

	operation 8715522 "SynchronizedSortedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 500354 // SortedMap
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8715650 "SynchronizedSortedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "m" type class_ref 500354 // SortedMap
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8715778 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8715906 "subMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8716034 "headMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8716162 "tailMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8716290 "firstKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8716418 "lastKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8716546 "synchronizedNavigableMap"
	class_operation public return_type class_ref 1063426 // NavigableMap
	nparams 1
	  param inout name "m" type class_ref 1063426 // NavigableMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a synchronized (thread-safe) navigable map backed by the
specified navigable map.  In order to guarantee serial access, it is
critical that <strong>all</strong> access to the backing navigable map is
accomplished through the returned navigable map (or its views).<p>

It is imperative that the user manually synchronize on the returned
navigable map when iterating over any of its collection views, or the
collections views of any of its {@code subMap}, {@code headMap} or
{@code tailMap} views.
<pre>
 NavigableMap m = Collections.synchronizedNavigableMap(new TreeMap());
     ...
 Set s = m.keySet();  // Needn't be in synchronized block
     ...
 synchronized (m) {  // Synchronizing on m, not s!
     Iterator i = s.iterator(); // Must be in synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
or:
<pre>
 NavigableMap m = Collections.synchronizedNavigableMap(new TreeMap());
 NavigableMap m2 = m.subMap(foo, true, bar, false);
     ...
 Set s2 = m2.keySet();  // Needn't be in synchronized block
     ...
 synchronized (m) {  // Synchronizing on m, not m2 or s2!
     Iterator i = s.iterator(); // Must be in synchronized block
     while (i.hasNext())
         foo(i.next());
 }
</pre>
Failure to follow this advice may result in non-deterministic behavior.

<p>The returned navigable map will be serializable if the specified
navigable map is serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param  m the navigable map to be \"wrapped\" in a synchronized navigable
             map
@return a synchronized view of the specified navigable map.
@since 1.8
"
      end

      class 1076098 "SynchronizedNavigableMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1075970 // SynchronizedSortedMap
	  rank 0 explicit_value ""
	actual class class_ref 1075970 // SynchronizedSortedMap
	  rank 1 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 0 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3499010 // <realization>
	  relation 3499010 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3499010 // <realization>
	    b parent class_ref 1075970 // SynchronizedSortedMap
	end

	classrelation 3499138 // <realization>
	  relation 3499138 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3499138 // <realization>
	    b parent class_ref 1063426 // NavigableMap
	end

	attribute 2026882 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 699392247599746807L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3499266 // nm (<unidirectional association>)
	  relation 3499266 --->
	    a role_name "nm" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3499266 // nm (<unidirectional association>)
	    b parent class_ref 1063426 // NavigableMap
	end

	operation 8716674 "SynchronizedNavigableMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 1063426 // NavigableMap
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8716802 "SynchronizedNavigableMap"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "m" type class_ref 1063426 // NavigableMap
	    param inout name "mutex" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8716930 "lowerEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717058 "lowerKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717186 "floorEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717314 "floorKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717442 "ceilingEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717570 "ceilingKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717698 "higherEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717826 "higherKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8717954 "firstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718082 "lastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718210 "pollFirstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718338 "pollLastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718466 "descendingMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718594 "keySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718722 "navigableKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718850 "descendingKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8718978 "subMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8719106 "headMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8719234 "tailMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8719362 "subMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 4
	    param inout name "fromKey" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toKey" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8719490 "headMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "toKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8719618 "tailMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8719746 "checkedCollection"
	class_operation public return_type class_ref 184194 // Collection
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Dynamically typesafe collection wrappers

Returns a dynamically typesafe view of the specified collection.
Any attempt to insert an element of the wrong type will result in an
immediate {@link ClassCastException}.  Assuming a collection
contains no incorrectly typed elements prior to the time a
dynamically typesafe view is generated, and that all subsequent
access to the collection takes place through the view, it is
<i>guaranteed</i> that the collection cannot contain an incorrectly
typed element.

<p>The generics mechanism in the language provides compile-time
(static) type checking, but it is possible to defeat this mechanism
with unchecked casts.  Usually this is not a problem, as the compiler
issues warnings on all such unchecked operations.  There are, however,
times when static type checking alone is not sufficient.  For example,
suppose a collection is passed to a third-party library and it is
imperative that the library code not corrupt the collection by
inserting an element of the wrong type.

<p>Another use of dynamically typesafe views is debugging.  Suppose a
program fails with a {@code ClassCastException}, indicating that an
incorrectly typed element was put into a parameterized collection.
Unfortunately, the exception can occur at any time after the erroneous
element is inserted, so it typically provides little or no information
as to the real source of the problem.  If the problem is reproducible,
one can quickly determine its source by temporarily modifying the
program to wrap the collection with a dynamically typesafe view.
For example, this declaration:
 <pre> {@code
    Collection<String> c = new HashSet<>();
}</pre>
may be replaced temporarily by this one:
 <pre> {@code
    Collection<String> c = Collections.checkedCollection(
        new HashSet<>(), String.class);
}</pre>
Running the program again will cause it to fail at the point where
an incorrectly typed element is inserted into the collection, clearly
identifying the source of the problem.  Once the problem is fixed, the
modified declaration may be reverted back to the original.

<p>The returned collection does <i>not</i> pass the hashCode and equals
operations through to the backing collection, but relies on
{@code Object}'s {@code equals} and {@code hashCode} methods.  This
is necessary to preserve the contracts of these operations in the case
that the backing collection is a set or a list.

<p>The returned collection will be serializable if the specified
collection is serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned collection permits insertion of null elements
whenever the backing collection does.

@param <E> the class of the objects in the collection
@param c the collection for which a dynamically typesafe view is to be
         returned
@param type the type of element that {@code c} is permitted to hold
@return a dynamically typesafe view of the specified collection
@since 1.5
"
      end

      operation 8719874 "zeroLengthArray"
	class_operation package explicit_return_type "T"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      class 1076226 "CheckedCollection"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184194 // Collection
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3499394 // <realization>
	  relation 3499394 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3499394 // <realization>
	    b parent class_ref 184194 // Collection
	end

	classrelation 3499522 // <realization>
	  relation 3499522 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3499522 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2027010 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1578914078182001775L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3499650 // c (<unidirectional association>)
	  relation 3499650 --->
	    a role_name "c" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3499650 // c (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	classrelation 3499778 // type (<unidirectional association>)
	  relation 3499778 --->
	    a role_name "type" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3499778 // type (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	operation 8720002 "typeCheck"
	  cpp_inline package explicit_return_type "E"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8720130 "badElementMsg"
	  cpp_inline private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8720258 "CheckedCollection"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 184194 // Collection
	    param inout name "type" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8720386 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8720514 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8720642 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8720770 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8720898 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721026 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721154 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721282 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721410 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721538 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721666 "retainAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721794 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8721922 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2027138 "zeroLengthElementArray"
	  private explicit_type "E"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Lazily initialized"
	end

	operation 8722050 "zeroLengthElementArray"
	  cpp_inline private explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8722178 "checkedCopyOf"
	  cpp_inline package return_type class_ref 184194 // Collection
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8722306 "addAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "coll" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8722434 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Collection"
	end

	operation 8722562 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8722690 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8722818 "stream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8722946 "parallelStream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8723074 "checkedQueue"
	class_operation public return_type class_ref 1064194 // Queue
	nparams 2
	  param inout name "queue" type class_ref 1064194 // Queue
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified queue.
Any attempt to insert an element of the wrong type will result in
an immediate {@link ClassCastException}.  Assuming a queue contains
no incorrectly typed elements prior to the time a dynamically typesafe
view is generated, and that all subsequent access to the queue
takes place through the view, it is <i>guaranteed</i> that the
queue cannot contain an incorrectly typed element.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned queue will be serializable if the specified queue
is serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned queue permits insertion of {@code null} elements
whenever the backing queue does.

@param <E> the class of the objects in the queue
@param queue the queue for which a dynamically typesafe view is to be
            returned
@param type the type of element that {@code queue} is permitted to hold
@return a dynamically typesafe view of the specified queue
@since 1.8
"
      end

      class 1076354 "CheckedQueue"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1076226 // CheckedCollection
	  rank 0 explicit_value ""
	actual class class_ref 1064194 // Queue
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3499906 // <realization>
	  relation 3499906 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3499906 // <realization>
	    b parent class_ref 1076226 // CheckedCollection
	end

	classrelation 3500034 // <realization>
	  relation 3500034 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3500034 // <realization>
	    b parent class_ref 1064194 // Queue
	end

	classrelation 3500162 // <realization>
	  relation 3500162 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3500162 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2027266 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1433151992604707767L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3500290 // queue (<unidirectional association>)
	  relation 3500290 --->
	    a role_name "queue" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3500290 // queue (<unidirectional association>)
	    b parent class_ref 1064194 // Queue
	end

	operation 8723202 "CheckedQueue"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "queue" type class_ref 1064194 // Queue
	    param inout name "elementType" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8723330 "element"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8723458 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8723586 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8723714 "peek"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8723842 "poll"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8723970 "remove"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8724098 "offer"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8724226 "checkedSet"
	class_operation public return_type class_ref 192258 // Set
	nparams 2
	  param inout name "s" type class_ref 192258 // Set
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified set.
Any attempt to insert an element of the wrong type will result in
an immediate {@link ClassCastException}.  Assuming a set contains
no incorrectly typed elements prior to the time a dynamically typesafe
view is generated, and that all subsequent access to the set
takes place through the view, it is <i>guaranteed</i> that the
set cannot contain an incorrectly typed element.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned set will be serializable if the specified set is
serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned set permits insertion of null elements whenever
the backing set does.

@param <E> the class of the objects in the set
@param s the set for which a dynamically typesafe view is to be
         returned
@param type the type of element that {@code s} is permitted to hold
@return a dynamically typesafe view of the specified set
@since 1.5
"
      end

      class 1076482 "CheckedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1076226 // CheckedCollection
	  rank 0 explicit_value ""
	actual class class_ref 192258 // Set
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3500418 // <realization>
	  relation 3500418 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3500418 // <realization>
	    b parent class_ref 1076226 // CheckedCollection
	end

	classrelation 3500546 // <realization>
	  relation 3500546 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3500546 // <realization>
	    b parent class_ref 192258 // Set
	end

	classrelation 3500674 // <realization>
	  relation 3500674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3500674 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2027394 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 4694047833775013803L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8724354 "CheckedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 192258 // Set
	    param inout name "elementType" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8724482 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8724610 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8724738 "checkedSortedSet"
	class_operation public return_type class_ref 511874 // SortedSet
	nparams 2
	  param inout name "s" type class_ref 511874 // SortedSet
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified sorted set.
Any attempt to insert an element of the wrong type will result in an
immediate {@link ClassCastException}.  Assuming a sorted set
contains no incorrectly typed elements prior to the time a
dynamically typesafe view is generated, and that all subsequent
access to the sorted set takes place through the view, it is
<i>guaranteed</i> that the sorted set cannot contain an incorrectly
typed element.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned sorted set will be serializable if the specified sorted
set is serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned sorted set permits insertion of null elements
whenever the backing sorted set does.

@param <E> the class of the objects in the set
@param s the sorted set for which a dynamically typesafe view is to be
         returned
@param type the type of element that {@code s} is permitted to hold
@return a dynamically typesafe view of the specified sorted set
@since 1.5
"
      end

      class 1076610 "CheckedSortedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1076482 // CheckedSet
	  rank 0 explicit_value ""
	actual class class_ref 511874 // SortedSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3500802 // <realization>
	  relation 3500802 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3500802 // <realization>
	    b parent class_ref 1076482 // CheckedSet
	end

	classrelation 3500930 // <realization>
	  relation 3500930 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3500930 // <realization>
	    b parent class_ref 511874 // SortedSet
	end

	classrelation 3501058 // <realization>
	  relation 3501058 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3501058 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2027522 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1599911165492914959L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3501186 // ss (<unidirectional association>)
	  relation 3501186 --->
	    a role_name "ss" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3501186 // ss (<unidirectional association>)
	    b parent class_ref 511874 // SortedSet
	end

	operation 8724866 "CheckedSortedSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 511874 // SortedSet
	    param inout name "type" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8724994 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8725122 "first"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8725250 "last"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8725378 "subSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8725506 "headSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8725634 "tailSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8725762 "checkedNavigableSet"
	class_operation public return_type class_ref 1073538 // NavigableSet
	nparams 2
	  param inout name "s" type class_ref 1073538 // NavigableSet
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified navigable set.
Any attempt to insert an element of the wrong type will result in an
immediate {@link ClassCastException}.  Assuming a navigable set
contains no incorrectly typed elements prior to the time a
dynamically typesafe view is generated, and that all subsequent
access to the navigable set takes place through the view, it is
<em>guaranteed</em> that the navigable set cannot contain an incorrectly
typed element.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned navigable set will be serializable if the specified
navigable set is serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned navigable set permits insertion of null elements
whenever the backing sorted set does.

@param <E> the class of the objects in the set
@param s the navigable set for which a dynamically typesafe view is to be
         returned
@param type the type of element that {@code s} is permitted to hold
@return a dynamically typesafe view of the specified navigable set
@since 1.8
"
      end

      class 1076738 "CheckedNavigableSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1076610 // CheckedSortedSet
	  rank 0 explicit_value ""
	actual class class_ref 1073538 // NavigableSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3501314 // <realization>
	  relation 3501314 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3501314 // <realization>
	    b parent class_ref 1076610 // CheckedSortedSet
	end

	classrelation 3501442 // <realization>
	  relation 3501442 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3501442 // <realization>
	    b parent class_ref 1073538 // NavigableSet
	end

	classrelation 3501570 // <realization>
	  relation 3501570 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3501570 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2027650 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -5429120189805438922L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3501698 // ns (<unidirectional association>)
	  relation 3501698 --->
	    a role_name "ns" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3501698 // ns (<unidirectional association>)
	    b parent class_ref 1073538 // NavigableSet
	end

	operation 8725890 "CheckedNavigableSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 1073538 // NavigableSet
	    param inout name "type" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726018 "lower"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726146 "floor"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726274 "ceiling"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726402 "higher"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726530 "pollFirst"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726658 "pollLast"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726786 "descendingSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8726914 "descendingIterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8727042 "subSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8727170 "headSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8727298 "tailSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8727426 "subSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 4
	    param inout name "fromElement" explicit_type "E"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toElement" explicit_type "E"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8727554 "headSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "toElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8727682 "tailSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8727810 "checkedList"
	class_operation public return_type class_ref 175362 // List
	nparams 2
	  param inout name "list" type class_ref 175362 // List
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified list.
Any attempt to insert an element of the wrong type will result in
an immediate {@link ClassCastException}.  Assuming a list contains
no incorrectly typed elements prior to the time a dynamically typesafe
view is generated, and that all subsequent access to the list
takes place through the view, it is <i>guaranteed</i> that the
list cannot contain an incorrectly typed element.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned list will be serializable if the specified list
is serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned list permits insertion of null elements whenever
the backing list does.

@param <E> the class of the objects in the list
@param list the list for which a dynamically typesafe view is to be
            returned
@param type the type of element that {@code list} is permitted to hold
@return a dynamically typesafe view of the specified list
@since 1.5
"
      end

      class 1076866 "CheckedList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1076226 // CheckedCollection
	  rank 0 explicit_value ""
	actual class class_ref 175362 // List
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3501826 // <realization>
	  relation 3501826 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3501826 // <realization>
	    b parent class_ref 1076226 // CheckedCollection
	end

	classrelation 3501954 // <realization>
	  relation 3501954 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3501954 // <realization>
	    b parent class_ref 175362 // List
	end

	attribute 2027778 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 65247728283967356L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3502082 // list (<unidirectional association>)
	  relation 3502082 --->
	    a role_name "list" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3502082 // list (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 8727938 "CheckedList"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "list" type class_ref 175362 // List
	    param inout name "type" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728066 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728194 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728322 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728450 "remove"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728578 "indexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728706 "lastIndexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728834 "set"
	  cpp_inline public explicit_return_type "E"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8728962 "add"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "element" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8729090 "addAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8729218 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8729346 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8729474 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8729602 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "operator" type class_ref 184834 // UnaryOperator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@throws ClassCastException if the class of an element returned by the
        operator prevents it from being added to this collection. The
        exception may be thrown after some elements of the list have
        already been replaced.
"
	end

	operation 8729730 "sort"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1076994 "CheckedRandomAccessList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 1076866 // CheckedList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3502210 // <realization>
	  relation 3502210 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3502210 // <realization>
	    b parent class_ref 1076866 // CheckedList
	end

	classrelation 3502338 // <realization>
	  relation 3502338 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3502338 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	attribute 2027906 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1638200125423088369L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8729858 "CheckedRandomAccessList"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "list" type class_ref 175362 // List
	    param inout name "type" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8729986 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8730114 "checkedMap"
	class_operation public return_type class_ref 130178 // Map
	nparams 3
	  param inout name "m" type class_ref 130178 // Map
	  param inout name "keyType" type class_ref 130818 // Class
	  param inout name "valueType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified map.
Any attempt to insert a mapping whose key or value have the wrong
type will result in an immediate {@link ClassCastException}.
Similarly, any attempt to modify the value currently associated with
a key will result in an immediate {@link ClassCastException},
whether the modification is attempted directly through the map
itself, or through a {@link Map.Entry} instance obtained from the
map's {@link Map#entrySet() entry set} view.

<p>Assuming a map contains no incorrectly typed keys or values
prior to the time a dynamically typesafe view is generated, and
that all subsequent access to the map takes place through the view
(or one of its collection views), it is <i>guaranteed</i> that the
map cannot contain an incorrectly typed key or value.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned map will be serializable if the specified map is
serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned map permits insertion of null keys or values
whenever the backing map does.

@param <K> the class of the map keys
@param <V> the class of the map values
@param m the map for which a dynamically typesafe view is to be
         returned
@param keyType the type of key that {@code m} is permitted to hold
@param valueType the type of value that {@code m} is permitted to hold
@return a dynamically typesafe view of the specified map
@since 1.5
"
      end

      class 1077122 "CheckedMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3502466 // <realization>
	  relation 3502466 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3502466 // <realization>
	    b parent class_ref 130178 // Map
	end

	classrelation 3502594 // <realization>
	  relation 3502594 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3502594 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028034 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 5742860141034234728L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3502722 // m (<unidirectional association>)
	  relation 3502722 --->
	    a role_name "m" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 3502722 // m (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 3502850 // keyType (<unidirectional association>)
	  relation 3502850 --->
	    a role_name "keyType" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 3502850 // keyType (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 3502978 // valueType (<unidirectional association>)
	  relation 3502978 --->
	    a role_name "valueType" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	      classrelation_ref 3502978 // valueType (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	operation 8730242 "typeCheck"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8730370 "typeCheck"
	  cpp_inline private return_type class_ref 192642 // BiFunction
	  nparams 1
	    param inout name "func" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K, ? super V, ? extends V> ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8730498 "badKeyMsg"
	  cpp_inline private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8730626 "badValueMsg"
	  cpp_inline private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8730754 "CheckedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "m" type class_ref 130178 // Map
	    param inout name "keyType" type class_ref 130818 // Class
	    param inout name "valueType" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8730882 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731010 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731138 "containsKey"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731266 "containsValue"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "v" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731394 "get"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731522 "remove"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731650 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731778 "keySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8731906 "values"
	  cpp_inline public return_type class_ref 184194 // Collection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8732034 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8732162 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8732290 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8732418 "put"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8732546 "putAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "t" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	classrelation 3503106 // entrySet (<unidirectional association>)
	  relation 3503106 --->
	    a role_name "entrySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	      classrelation_ref 3503106 // entrySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	operation 8732674 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8732802 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 192514 // BiConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Map"
	end

	operation 8732930 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "function" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733058 "putIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733186 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733314 "replace"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "oldValue" explicit_type "V"
	    param inout name "newValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733442 "replace"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733570 "computeIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "mappingFunction" type class_ref 192770 // Function
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733698 "computeIfPresent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733826 "compute"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8733954 "merge"
	  cpp_inline public explicit_return_type "V"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 1077250 "CheckedEntrySet"
	  visibility package 
	  nformals 2
	  formal name "K" type "" explicit_default_value ""
	    explicit_extends ""
	  formal name "V" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 192258 // Set
	    rank 0 explicit_value ""
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3503234 // <realization>
	    relation 3503234 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3503234 // <realization>
	      b parent class_ref 192258 // Set
	  end

	  classrelation 3503362 // s (<unidirectional association>)
	    relation 3503362 --->
	      a role_name "s" const_relation private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
		classrelation_ref 3503362 // s (<unidirectional association>)
	      b parent class_ref 192258 // Set
	  end

	  classrelation 3503490 // valueType (<unidirectional association>)
	    relation 3503490 --->
	      a role_name "valueType" const_relation private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
		classrelation_ref 3503490 // valueType (<unidirectional association>)
	      b parent class_ref 130818 // Class
	  end

	  operation 8734082 "CheckedEntrySet"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "s" type class_ref 192258 // Set
	      param inout name "valueType" type class_ref 130818 // Class
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Map.Entry<K, V>> ${p0}, ${t1}<V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734210 "size"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734338 "isEmpty"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734466 "toString"
	    cpp_inline public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734594 "hashCode"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734722 "clear"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734850 "add"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "e" type class_ref 192386 // Entry
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8734978 "addAll"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "coll" type class_ref 184194 // Collection
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Map.Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8735106 "iterator"
	    cpp_inline public return_type class_ref 132994 // Iterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8735234 "toArray"
	    cpp_inline public return_type class_ref 129538 // Object
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8735362 "toArray"
	    cpp_inline public explicit_return_type "T"
	    nparams 1
	      param inout name "a" explicit_type "T"
	    multiplicity "[]"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    
	    
	    
	  end

	  operation 8735490 "contains"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "This method is overridden to protect the backing set against
an object with a nefarious equals function that senses
that the equality-candidate is Map.Entry and calls its
setValue method.
"
	  end

	  operation 8735618 "containsAll"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 184194 // Collection
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "The bulk collection methods are overridden to protect
against an unscrupulous collection whose contains(Object o)
method senses when o is a Map.Entry, and calls o.setValue.
"
	  end

	  operation 8735746 "remove"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8735874 "removeAll"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 184194 // Collection
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8736002 "retainAll"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 184194 // Collection
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8736130 "batchRemove"
	    cpp_inline private explicit_return_type "boolean"
	    nparams 2
	      param inout name "c" type class_ref 184194 // Collection
	      param inout name "complement" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8736258 "equals"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  class 1077378 "CheckedEntry"
	    visibility private 
	    nformals 3
	    formal name "K" type "" explicit_default_value ""
	      explicit_extends ""
	    formal name "V" type "" explicit_default_value ""
	      explicit_extends ""
	    formal name "T" type "" explicit_default_value ""
	      explicit_extends ""
	    nactuals 4
	    actual class class_ref 130178 // Map
	      rank 0 explicit_value ""
	    actual class class_ref 130178 // Map
	      rank 1 explicit_value ""
	    actual class class_ref 192386 // Entry
	      rank 0 explicit_value ""
	    actual class class_ref 192386 // Entry
	      rank 1 explicit_value ""
	    cpp_decl ""
	    static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    mysql_decl ""
	    
	    classrelation 3503618 // <realization>
	      relation 3503618 -_-|>
		stereotype "bind"
		a public
		  java "${type}"
		  classrelation_ref 3503618 // <realization>
		b parent class_ref 192386 // Entry
	    end

	    classrelation 3503746 // e (<unidirectional association>)
	      relation 3503746 --->
		a role_name "e" const_relation private
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
		  classrelation_ref 3503746 // e (<unidirectional association>)
		b parent class_ref 192386 // Entry
	    end

	    classrelation 3503874 // valueType (<unidirectional association>)
	      relation 3503874 --->
		a role_name "valueType" const_relation private
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
		  classrelation_ref 3503874 // valueType (<unidirectional association>)
		b parent class_ref 130818 // Class
	    end

	    operation 8736514 "CheckedEntry"
	      cpp_inline package explicit_return_type ""
	      nparams 2
	        param inout name "e" type class_ref 192386 // Entry
	        param inout name "valueType" type class_ref 130818 // Class
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8736642 "getKey"
	      cpp_inline public explicit_return_type "K"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8736770 "getValue"
	      cpp_inline public explicit_return_type "V"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8736898 "hashCode"
	      cpp_inline public explicit_return_type "int"
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8737026 "toString"
	      cpp_inline public return_type class_ref 128130 // String
	      nparams 0
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8737154 "setValue"
	      cpp_inline public explicit_return_type "V"
	      nparams 1
	        param inout name "value" explicit_type "V"
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8737282 "badValueMsg"
	      cpp_inline private return_type class_ref 128130 // String
	      nparams 1
	        param inout name "value" type class_ref 129538 // Object
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 8737410 "equals"
	      cpp_inline public explicit_return_type "boolean"
	      nparams 1
	        param inout name "o" type class_ref 129538 // Object
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end
	  end

	  operation 8736386 "checkedEntry"
	    class_operation cpp_inline package return_type class_ref 1077378 // CheckedEntry
	    nparams 2
	      param inout name "e" type class_ref 192386 // Entry
	      param inout name "valueType" type class_ref 130818 // Class
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V,T> ${type}<K,V,T> ${name}${(}${t0}<K,V> ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      operation 8737538 "checkedSortedMap"
	class_operation public return_type class_ref 500354 // SortedMap
	nparams 3
	  param inout name "m" type class_ref 500354 // SortedMap
	  param inout name "keyType" type class_ref 130818 // Class
	  param inout name "valueType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified sorted map.
Any attempt to insert a mapping whose key or value have the wrong
type will result in an immediate {@link ClassCastException}.
Similarly, any attempt to modify the value currently associated with
a key will result in an immediate {@link ClassCastException},
whether the modification is attempted directly through the map
itself, or through a {@link Map.Entry} instance obtained from the
map's {@link Map#entrySet() entry set} view.

<p>Assuming a map contains no incorrectly typed keys or values
prior to the time a dynamically typesafe view is generated, and
that all subsequent access to the map takes place through the view
(or one of its collection views), it is <i>guaranteed</i> that the
map cannot contain an incorrectly typed key or value.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned map will be serializable if the specified map is
serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned map permits insertion of null keys or values
whenever the backing map does.

@param <K> the class of the map keys
@param <V> the class of the map values
@param m the map for which a dynamically typesafe view is to be
         returned
@param keyType the type of key that {@code m} is permitted to hold
@param valueType the type of value that {@code m} is permitted to hold
@return a dynamically typesafe view of the specified map
@since 1.5
"
      end

      class 1077506 "CheckedSortedMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1077122 // CheckedMap
	  rank 0 explicit_value ""
	actual class class_ref 1077122 // CheckedMap
	  rank 1 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3504002 // <realization>
	  relation 3504002 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3504002 // <realization>
	    b parent class_ref 1077122 // CheckedMap
	end

	classrelation 3504130 // <realization>
	  relation 3504130 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3504130 // <realization>
	    b parent class_ref 500354 // SortedMap
	end

	classrelation 3504258 // <realization>
	  relation 3504258 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3504258 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028162 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1599671320688067438L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3504386 // sm (<unidirectional association>)
	  relation 3504386 --->
	    a role_name "sm" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 3504386 // sm (<unidirectional association>)
	    b parent class_ref 500354 // SortedMap
	end

	operation 8737666 "CheckedSortedMap"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "m" type class_ref 500354 // SortedMap
	    param inout name "keyType" type class_ref 130818 // Class
	    param inout name "valueType" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8737794 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8737922 "firstKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8738050 "lastKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8738178 "subMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8738306 "headMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8738434 "tailMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8738562 "checkedNavigableMap"
	class_operation public return_type class_ref 1063426 // NavigableMap
	nparams 3
	  param inout name "m" type class_ref 1063426 // NavigableMap
	  param inout name "keyType" type class_ref 130818 // Class
	  param inout name "valueType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified navigable map.
Any attempt to insert a mapping whose key or value have the wrong
type will result in an immediate {@link ClassCastException}.
Similarly, any attempt to modify the value currently associated with
a key will result in an immediate {@link ClassCastException},
whether the modification is attempted directly through the map
itself, or through a {@link Map.Entry} instance obtained from the
map's {@link Map#entrySet() entry set} view.

<p>Assuming a map contains no incorrectly typed keys or values
prior to the time a dynamically typesafe view is generated, and
that all subsequent access to the map takes place through the view
(or one of its collection views), it is <em>guaranteed</em> that the
map cannot contain an incorrectly typed key or value.

<p>A discussion of the use of dynamically typesafe views may be
found in the documentation for the {@link #checkedCollection
checkedCollection} method.

<p>The returned map will be serializable if the specified map is
serializable.

<p>Since {@code null} is considered to be a value of any reference
type, the returned map permits insertion of null keys or values
whenever the backing map does.

@param <K> type of map keys
@param <V> type of map values
@param m the map for which a dynamically typesafe view is to be
         returned
@param keyType the type of key that {@code m} is permitted to hold
@param valueType the type of value that {@code m} is permitted to hold
@return a dynamically typesafe view of the specified map
@since 1.8
"
      end

      class 1077634 "CheckedNavigableMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1077506 // CheckedSortedMap
	  rank 0 explicit_value ""
	actual class class_ref 1077506 // CheckedSortedMap
	  rank 1 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 0 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3504514 // <realization>
	  relation 3504514 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3504514 // <realization>
	    b parent class_ref 1077506 // CheckedSortedMap
	end

	classrelation 3504642 // <realization>
	  relation 3504642 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3504642 // <realization>
	    b parent class_ref 1063426 // NavigableMap
	end

	classrelation 3504770 // <realization>
	  relation 3504770 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3504770 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028290 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -4852462692372534096L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3504898 // nm (<unidirectional association>)
	  relation 3504898 --->
	    a role_name "nm" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 3504898 // nm (<unidirectional association>)
	    b parent class_ref 1063426 // NavigableMap
	end

	operation 8738690 "CheckedNavigableMap"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "m" type class_ref 1063426 // NavigableMap
	    param inout name "keyType" type class_ref 130818 // Class
	    param inout name "valueType" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8738818 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8738946 "firstKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739074 "lastKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739202 "lowerEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739330 "lowerKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739458 "floorEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739586 "floorKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739714 "ceilingEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739842 "ceilingKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8739970 "higherEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740098 "higherKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740226 "firstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740354 "lastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740482 "pollFirstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740610 "pollLastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740738 "descendingMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740866 "keySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8740994 "navigableKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8741122 "descendingKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8741250 "subMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8741378 "headMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8741506 "tailMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8741634 "subMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 4
	    param inout name "fromKey" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toKey" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8741762 "headMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "toKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8741890 "tailMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8742018 "emptyIterator"
	class_operation public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Empty collections

Returns an iterator that has no elements.  More precisely,

<ul>
<li>{@link Iterator#hasNext hasNext} always returns {@code
false}.</li>
<li>{@link Iterator#next next} always throws {@link
NoSuchElementException}.</li>
<li>{@link Iterator#remove remove} always throws {@link
IllegalStateException}.</li>
</ul>

<p>Implementations of this method are permitted, but not
required, to return the same object from multiple invocations.

@param <T> type of elements, if there were any, in the iterator
@return an empty iterator
@since 1.7
"
      end

      class 1077762 "EmptyIterator"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3505026 // <realization>
	  relation 3505026 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3505026 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	classrelation 3505154 // EMPTY_ITERATOR (<unidirectional association>)
	  relation 3505154 --->
	    a role_name "EMPTY_ITERATOR" init_value " new EmptyIterator<>()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 3505154 // EMPTY_ITERATOR (<unidirectional association>)
	    b parent class_ref 1077762 // EmptyIterator
	end

	operation 8742146 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8742274 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8742402 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8742530 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8742658 "emptyListIterator"
	class_operation public return_type class_ref 185090 // ListIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a list iterator that has no elements.  More precisely,

<ul>
<li>{@link Iterator#hasNext hasNext} and {@link
ListIterator#hasPrevious hasPrevious} always return {@code
false}.</li>
<li>{@link Iterator#next next} and {@link ListIterator#previous
previous} always throw {@link NoSuchElementException}.</li>
<li>{@link Iterator#remove remove} and {@link ListIterator#set
set} always throw {@link IllegalStateException}.</li>
<li>{@link ListIterator#add add} always throws {@link
UnsupportedOperationException}.</li>
<li>{@link ListIterator#nextIndex nextIndex} always returns
{@code 0}.</li>
<li>{@link ListIterator#previousIndex previousIndex} always
returns {@code -1}.</li>
</ul>

<p>Implementations of this method are permitted, but not
required, to return the same object from multiple invocations.

@param <T> type of elements, if there were any, in the iterator
@return an empty list iterator
@since 1.7
"
      end

      class 1077890 "EmptyListIterator"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1077762 // EmptyIterator
	  rank 0 explicit_value ""
	actual class class_ref 185090 // ListIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3505282 // <realization>
	  relation 3505282 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3505282 // <realization>
	    b parent class_ref 1077762 // EmptyIterator
	end

	classrelation 3505410 // <realization>
	  relation 3505410 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3505410 // <realization>
	    b parent class_ref 185090 // ListIterator
	end

	classrelation 3505538 // EMPTY_ITERATOR (<unidirectional association>)
	  relation 3505538 --->
	    a role_name "EMPTY_ITERATOR" init_value " new EmptyListIterator<>()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 3505538 // EMPTY_ITERATOR (<unidirectional association>)
	    b parent class_ref 1077890 // EmptyListIterator
	end

	operation 8742786 "hasPrevious"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8742914 "previous"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8743042 "nextIndex"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8743170 "previousIndex"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8743298 "set"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8743426 "add"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8743554 "emptyEnumeration"
	class_operation public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an enumeration that has no elements.  More precisely,

<ul>
<li>{@link Enumeration#hasMoreElements hasMoreElements} always
returns {@code false}.</li>
<li> {@link Enumeration#nextElement nextElement} always throws
{@link NoSuchElementException}.</li>
</ul>

<p>Implementations of this method are permitted, but not
required, to return the same object from multiple invocations.

@param  <T> the class of the objects in the enumeration
@return an empty enumeration
@since 1.7
"
      end

      class 1078018 "EmptyEnumeration"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 185986 // Enumeration
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3505666 // <realization>
	  relation 3505666 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3505666 // <realization>
	    b parent class_ref 185986 // Enumeration
	end

	classrelation 3505794 // EMPTY_ENUMERATION (<unidirectional association>)
	  relation 3505794 --->
	    a role_name "EMPTY_ENUMERATION" init_value " new EmptyEnumeration<>()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 3505794 // EMPTY_ENUMERATION (<unidirectional association>)
	    b parent class_ref 1078018 // EmptyEnumeration
	end

	operation 8743682 "hasMoreElements"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8743810 "nextElement"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3505922 // EMPTY_SET (<unidirectional association>)
	relation 3505922 --->
	  a role_name "EMPTY_SET" init_value " new EmptySet<>()" class_relation const_relation public
	    comment "
The empty set (immutable).  This set is serializable.

@see #emptySet()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"rawtypes\")
"
	    classrelation_ref 3505922 // EMPTY_SET (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      operation 8743938 "emptySet"
	class_operation public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty set (immutable).  This set is serializable.
Unlike the like-named field, this method is parameterized.

<p>This example illustrates the type-safe way to obtain an empty set:
<pre>
    Set&lt;String&gt; s = Collections.emptySet();
</pre>
@implNote Implementations of this method need not create a separate
{@code Set} object for each call.  Using this method is likely to have
comparable cost to using the like-named field.  (Unlike this method, the
field does not provide type safety.)

@param  <T> the class of the objects in the set
@return the empty set

@see #EMPTY_SET
@since 1.5
"
      end

      class 1078146 "EmptySet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3506050 // <realization>
	  relation 3506050 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3506050 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 3506178 // <realization>
	  relation 3506178 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3506178 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028418 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1582296315990362920L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8744066 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744194 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744322 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744450 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744578 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744706 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744834 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8744962 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Collection"
	end

	operation 8745090 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8745218 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8745346 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Preserves singleton property"
	end
      end

      operation 8745474 "emptySortedSet"
	class_operation public return_type class_ref 511874 // SortedSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty sorted set (immutable).  This set is serializable.

<p>This example illustrates the type-safe way to obtain an empty
sorted set:
<pre> {@code
    SortedSet<String> s = Collections.emptySortedSet();
}</pre>

@implNote Implementations of this method need not create a separate
{@code SortedSet} object for each call.

@param <E> type of elements, if there were any, in the set
@return the empty sorted set
@since 1.8
"
      end

      operation 8745602 "emptyNavigableSet"
	class_operation public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty navigable set (immutable).  This set is serializable.

<p>This example illustrates the type-safe way to obtain an empty
navigable set:
<pre> {@code
    NavigableSet<String> s = Collections.emptyNavigableSet();
}</pre>

@implNote Implementations of this method need not
create a separate {@code NavigableSet} object for each call.

@param <E> type of elements, if there were any, in the set
@return the empty navigable set
@since 1.8
"
      end

      classrelation 3506306 // EMPTY_LIST (<unidirectional association>)
	relation 3506306 --->
	  a role_name "EMPTY_LIST" init_value " new EmptyList<>()" class_relation const_relation public
	    comment "
The empty list (immutable).  This list is serializable.

@see #emptyList()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"rawtypes\")
"
	    classrelation_ref 3506306 // EMPTY_LIST (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 8745730 "emptyList"
	class_operation public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty list (immutable).  This list is serializable.

<p>This example illustrates the type-safe way to obtain an empty list:
<pre>
    List&lt;String&gt; s = Collections.emptyList();
</pre>

@implNote
Implementations of this method need not create a separate <tt>List</tt>
object for each call.   Using this method is likely to have comparable
cost to using the like-named field.  (Unlike this method, the field does
not provide type safety.)

@param <T> type of elements, if there were any, in the list
@return an empty immutable list

@see #EMPTY_LIST
@since 1.5
"
      end

      class 1078274 "EmptyList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 183938 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3506434 // <realization>
	  relation 3506434 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3506434 // <realization>
	    b parent class_ref 183938 // AbstractList
	end

	classrelation 3506562 // <realization>
	  relation 3506562 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3506562 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	classrelation 3506690 // <realization>
	  relation 3506690 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3506690 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028546 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8842843931221139166L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8745858 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8745986 "listIterator"
	  cpp_inline public return_type class_ref 185090 // ListIterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746114 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746242 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746370 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746498 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746626 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746754 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8746882 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8747010 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8747138 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8747266 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8747394 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "operator" type class_ref 184834 // UnaryOperator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8747522 "sort"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8747650 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Collection"
	end

	operation 8747778 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8747906 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Preserves singleton property"
	end
      end

      classrelation 3506818 // EMPTY_MAP (<unidirectional association>)
	relation 3506818 --->
	  a role_name "EMPTY_MAP" init_value " new EmptyMap<>()" class_relation const_relation public
	    comment "
The empty map (immutable).  This map is serializable.

@see #emptyMap()
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"rawtypes\")
"
	    classrelation_ref 3506818 // EMPTY_MAP (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 8748034 "emptyMap"
	class_operation public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty map (immutable).  This map is serializable.

<p>This example illustrates the type-safe way to obtain an empty map:
<pre>
    Map&lt;String, Date&gt; s = Collections.emptyMap();
</pre>
@implNote Implementations of this method need not create a separate
{@code Map} object for each call.  Using this method is likely to have
comparable cost to using the like-named field.  (Unlike this method, the
field does not provide type safety.)

@param <K> the class of the map keys
@param <V> the class of the map values
@return an empty map
@see #EMPTY_MAP
@since 1.5
"
      end

      operation 8748162 "emptySortedMap"
	class_operation public return_type class_ref 500354 // SortedMap
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty sorted map (immutable).  This map is serializable.

<p>This example illustrates the type-safe way to obtain an empty map:
<pre> {@code
    SortedMap<String, Date> s = Collections.emptySortedMap();
}</pre>

@implNote Implementations of this method need not create a separate
{@code SortedMap} object for each call.

@param <K> the class of the map keys
@param <V> the class of the map values
@return an empty sorted map
@since 1.8
"
      end

      operation 8748290 "emptyNavigableMap"
	class_operation public return_type class_ref 1063426 // NavigableMap
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty navigable map (immutable).  This map is serializable.

<p>This example illustrates the type-safe way to obtain an empty map:
<pre> {@code
    NavigableMap<String, Date> s = Collections.emptyNavigableMap();
}</pre>

@implNote Implementations of this method need not create a separate
{@code NavigableMap} object for each call.

@param <K> the class of the map keys
@param <V> the class of the map values
@return an empty navigable map
@since 1.8
"
      end

      class 1078402 "EmptyMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 192130 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 192130 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3506946 // <realization>
	  relation 3506946 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3506946 // <realization>
	    b parent class_ref 192130 // AbstractMap
	end

	classrelation 3507074 // <realization>
	  relation 3507074 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3507074 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028674 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 6428348081105594320L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8748418 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8748546 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8748674 "containsKey"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8748802 "containsValue"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8748930 "get"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8749058 "keySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8749186 "values"
	  cpp_inline public return_type class_ref 184194 // Collection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8749314 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8749442 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8749570 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8749698 "getOrDefault"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "k" type class_ref 129538 // Object
	    param inout name "defaultValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment " Override default methods in Map"
	end

	operation 8749826 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 192514 // BiConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8749954 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "function" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750082 "putIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750210 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750338 "replace"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "oldValue" explicit_type "V"
	    param inout name "newValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750466 "replace"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750594 "computeIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "mappingFunction" type class_ref 192770 // Function
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750722 "computeIfPresent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750850 "compute"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8750978 "merge"
	  cpp_inline public explicit_return_type "V"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8751106 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Preserves singleton property"
	end
      end

      operation 8751234 "singleton"
	class_operation public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "o" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Singleton collections

Returns an immutable set containing only the specified object.
The returned set is serializable.

@param  <T> the class of the objects in the set
@param o the sole object to be stored in the returned set.
@return an immutable set containing only the specified object.
"
      end

      operation 8751362 "singletonIterator"
	class_operation package return_type class_ref 132994 // Iterator
	nparams 1
	  param in name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8751490 "singletonSpliterator"
	class_operation package return_type class_ref 184450 // Spliterator
	nparams 1
	  param in name "element" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator} with only the specified element

@param <T> Type of elements
@return A singleton {@code Spliterator}
"
      end

      class 1078530 "SingletonSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3507202 // <realization>
	  relation 3507202 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3507202 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 3507330 // <realization>
	  relation 3507330 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3507330 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2028802 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3193687207550431679L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2028930 "element"
	  const_attribute private explicit_type "E"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8751618 "SingletonSet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8751746 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8751874 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8752002 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8752130 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods for Collection"
	end

	operation 8752258 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8752386 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8752514 "singletonList"
	class_operation public return_type class_ref 175362 // List
	nparams 1
	  param inout name "o" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an immutable list containing only the specified object.
The returned list is serializable.

@param  <T> the class of the objects in the list
@param o the sole object to be stored in the returned list.
@return an immutable list containing only the specified object.
@since 1.3
"
      end

      class 1078658 "SingletonList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 183938 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3507458 // <realization>
	  relation 3507458 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3507458 // <realization>
	    b parent class_ref 183938 // AbstractList
	end

	classrelation 3507586 // <realization>
	  relation 3507586 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3507586 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	classrelation 3507714 // <realization>
	  relation 3507714 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3507714 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2029058 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3093736618740652951L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2029186 "element"
	  const_attribute private explicit_type "E"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8752642 "SingletonList"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "obj" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8752770 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8752898 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8753026 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8753154 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8753282 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods for Collection"
	end

	operation 8753410 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8753538 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "operator" type class_ref 184834 // UnaryOperator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8753666 "sort"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8753794 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8753922 "singletonMap"
	class_operation public return_type class_ref 130178 // Map
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an immutable map, mapping only the specified key to the
specified value.  The returned map is serializable.

@param <K> the class of the map keys
@param <V> the class of the map values
@param key the sole key to be stored in the returned map.
@param value the value to which the returned map maps <tt>key</tt>.
@return an immutable map containing only the specified key-value
        mapping.
@since 1.3
"
      end

      class 1078786 "SingletonMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 192130 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 192130 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3507842 // <realization>
	  relation 3507842 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3507842 // <realization>
	    b parent class_ref 192130 // AbstractMap
	end

	classrelation 3507970 // <realization>
	  relation 3507970 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3507970 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2029314 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6979724477215052911L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2029442 "k"
	  const_attribute private explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2029570 "v"
	  const_attribute private explicit_type "V"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8754050 "SingletonMap"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8754178 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8754306 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8754434 "containsKey"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8754562 "containsValue"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8754690 "get"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3508098 // keySet (<unidirectional association>)
	  relation 3508098 --->
	    a role_name "keySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 3508098 // keySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	classrelation 3508226 // entrySet (<unidirectional association>)
	  relation 3508226 --->
	    a role_name "entrySet" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K,V>> ${name}${value};
"
	      classrelation_ref 3508226 // entrySet (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	classrelation 3508354 // values (<unidirectional association>)
	  relation 3508354 --->
	    a role_name "values" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	      classrelation_ref 3508354 // values (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	operation 8754818 "keySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8754946 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8755074 "values"
	  cpp_inline public return_type class_ref 184194 // Collection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8755202 "getOrDefault"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "defaultValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Map"
	end

	operation 8755330 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 192514 // BiConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8755458 "replaceAll"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "function" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8755586 "putIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8755714 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8755842 "replace"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "oldValue" explicit_type "V"
	    param inout name "newValue" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8755970 "replace"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8756098 "computeIfAbsent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "mappingFunction" type class_ref 192770 // Function
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8756226 "computeIfPresent"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8756354 "compute"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? super K, ? super V, ? extends V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8756482 "merge"
	  cpp_inline public explicit_return_type "V"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param inout name "remappingFunction" type class_ref 192642 // BiFunction
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super V, ? super V, ? extends V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8756610 "nCopies"
	class_operation public return_type class_ref 175362 // List
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "o" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Miscellaneous

Returns an immutable list consisting of <tt>n</tt> copies of the
specified object.  The newly allocated data object is tiny (it contains
a single reference to the data object).  This method is useful in
combination with the <tt>List.addAll</tt> method to grow lists.
The returned list is serializable.

@param  <T> the class of the object to copy and of the objects
        in the returned list.
@param  n the number of elements in the returned list.
@param  o the element to appear repeatedly in the returned list.
@return an immutable list consisting of <tt>n</tt> copies of the
        specified object.
@throws IllegalArgumentException if {@code n < 0}
@see    List#addAll(Collection)
@see    List#addAll(int, Collection)
"
      end

      class 1078914 "CopiesList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 183938 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3508482 // <realization>
	  relation 3508482 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3508482 // <realization>
	    b parent class_ref 183938 // AbstractList
	end

	classrelation 3508610 // <realization>
	  relation 3508610 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3508610 // <realization>
	    b parent class_ref 185730 // RandomAccess
	end

	classrelation 3508738 // <realization>
	  relation 3508738 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3508738 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2029698 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 2739099268398711800L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2029826 "n"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2029954 "element"
	  const_attribute package explicit_type "E"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8756738 "CopiesList"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param in name "n" explicit_type "int"
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8756866 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8756994 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8757122 "indexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8757250 "lastIndexOf"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8757378 "get"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8757506 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8757634 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8757762 "subList"
	  cpp_inline public return_type class_ref 175362 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8757890 "stream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Override default methods in Collection"
	end

	operation 8758018 "parallelStream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8758146 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8758274 "reverseOrder"
	class_operation public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a comparator that imposes the reverse of the <em>natural
ordering</em> on a collection of objects that implement the
{@code Comparable} interface.  (The natural ordering is the ordering
imposed by the objects' own {@code compareTo} method.)  This enables a
simple idiom for sorting (or maintaining) collections (or arrays) of
objects that implement the {@code Comparable} interface in
reverse-natural-order.  For example, suppose {@code a} is an array of
strings. Then: <pre>
         Arrays.sort(a, Collections.reverseOrder());
</pre> sorts the array in reverse-lexicographic (alphabetical) order.<p>

The returned comparator is serializable.

@param  <T> the class of the objects compared by the comparator
@return A comparator that imposes the reverse of the <i>natural
        ordering</i> on a collection of objects that implement
        the <tt>Comparable</tt> interface.
@see Comparable
"
      end

      class 1079042 "ReverseComparator"
	visibility private 
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3508866 // <realization>
	  relation 3508866 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3508866 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	classrelation 3508994 // <realization>
	  relation 3508994 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3508994 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2030082 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7207038068494060240L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3509122 // REVERSE_ORDER (<unidirectional association>)
	  relation 3509122 --->
	    a role_name "REVERSE_ORDER" init_value " new ReverseComparator()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3509122 // REVERSE_ORDER (<unidirectional association>)
	    b parent class_ref 1079042 // ReverseComparator
	end

	operation 8758402 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "c1" type class_ref 194946 // Comparable
	    param inout name "c2" type class_ref 194946 // Comparable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1}<Object> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8758530 "readResolve"
	  private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8758658 "reversed"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Comparable<Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8758786 "reverseOrder"
	class_operation public return_type class_ref 184962 // Comparator
	nparams 1
	  param inout name "cmp" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a comparator that imposes the reverse ordering of the specified
comparator.  If the specified comparator is {@code null}, this method is
equivalent to {@link #reverseOrder()} (in other words, it returns a
comparator that imposes the reverse of the <em>natural ordering</em> on
a collection of objects that implement the Comparable interface).

<p>The returned comparator is serializable (assuming the specified
comparator is also serializable or {@code null}).

@param <T> the class of the objects compared by the comparator
@param cmp a comparator who's ordering is to be reversed by the returned
comparator or {@code null}
@return A comparator that imposes the reverse ordering of the
        specified comparator.
@since 1.5
"
      end

      class 1079170 "ReverseComparator2"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3509250 // <realization>
	  relation 3509250 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3509250 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	classrelation 3509378 // <realization>
	  relation 3509378 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3509378 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2030210 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 4374092139857L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3509506 // cmp (<unidirectional association>)
	  relation 3509506 --->
	    a role_name "cmp" const_relation package
	      comment "
The comparator specified in the static factory.  This will never
be null, as the static factory returns a ReverseComparator
instance if its argument is null.

@serial

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 3509506 // cmp (<unidirectional association>)
	    b parent class_ref 184962 // Comparator
	end

	operation 8758914 "ReverseComparator2"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "cmp" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8759042 "compare"
	  cpp_inline public explicit_return_type "int"
	  nparams 2
	    param inout name "t1" explicit_type "T"
	    param inout name "t2" explicit_type "T"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8759170 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8759298 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8759426 "reversed"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8759554 "enumeration"
	class_operation public return_type class_ref 185986 // Enumeration
	nparams 1
	  param in name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}final ${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration over the specified collection.  This provides
interoperability with legacy APIs that require an enumeration
as input.

@param  <T> the class of the objects in the collection
@param c the collection for which an enumeration is to be returned.
@return an enumeration over the specified collection.
@see Enumeration
"
      end

      operation 8759682 "list"
	class_operation public return_type class_ref 186498 // ArrayList
	nparams 1
	  param inout name "e" type class_ref 185986 // Enumeration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array list containing the elements returned by the
specified enumeration in the order they are returned by the
enumeration.  This method provides interoperability between
legacy APIs that return enumerations and new APIs that require
collections.

@param <T> the class of the objects returned by the enumeration
@param e enumeration providing elements for the returned
         array list
@return an array list containing the elements returned
        by the specified enumeration.
@since 1.4
@see Enumeration
@see ArrayList
"
      end

      operation 8759810 "eq"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "o1" type class_ref 129538 // Object
	  param inout name "o2" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified arguments are equal, or both null.

NB: Do not replace with Object.equals until JDK-8015417 is resolved.
"
      end

      operation 8759938 "frequency"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in the specified collection equal to the
specified object.  More formally, returns the number of elements
<tt>e</tt> in the collection such that
<tt>(o == null ? e == null : o.equals(e))</tt>.

@param c the collection in which to determine the frequency
    of <tt>o</tt>
@param o the object whose frequency is to be determined
@return the number of elements in {@code c} equal to {@code o}
@throws NullPointerException if <tt>c</tt> is null
@since 1.5
"
      end

      operation 8760066 "disjoint"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "c1" type class_ref 184194 // Collection
	  param inout name "c2" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the two specified collections have no
elements in common.

<p>Care must be exercised if this method is used on collections that
do not comply with the general contract for {@code Collection}.
Implementations may elect to iterate over either collection and test
for containment in the other collection (or to perform any equivalent
computation).  If either collection uses a nonstandard equality test
(as does a {@link SortedSet} whose ordering is not <em>compatible with
equals</em>, or the key set of an {@link IdentityHashMap}), both
collections must use the same nonstandard equality test, or the
result of this method is undefined.

<p>Care must also be exercised when using collections that have
restrictions on the elements that they may contain. Collection
implementations are allowed to throw exceptions for any operation
involving elements they deem ineligible. For absolute safety the
specified collections should contain only elements which are
eligible elements for both collections.

<p>Note that it is permissible to pass the same collection in both
parameters, in which case the method will return {@code true} if and
only if the collection is empty.

@param c1 a collection
@param c2 a collection
@return {@code true} if the two specified collections have no
elements in common.
@throws NullPointerException if either collection is {@code null}.
@throws NullPointerException if one collection contains a {@code null}
element and {@code null} is not an eligible element for the other collection.
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@throws ClassCastException if one collection contains an element that is
of a type which is ineligible for the other collection.
(<a href=\"Collection.html#optional-restrictions\">optional</a>)
@since 1.5
"
      end

      operation 8760194 "addAll"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param inout name "" explicit_type "T...elements"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? super T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
"
	
	
	
	comment "Adds all of the specified elements to the specified collection.
Elements to be added may be specified individually or as an array.
The behavior of this convenience method is identical to that of
<tt>c.addAll(Arrays.asList(elements))</tt>, but this method is likely
to run significantly faster under most implementations.

<p>When elements are specified individually, this method provides a
convenient way to add a few elements to an existing collection:
<pre>
    Collections.addAll(flavors, \"Peaches 'n Plutonium\", \"Rocky Racoon\");
</pre>

@param  <T> the class of the elements to add and of the collection
@param c the collection into which <tt>elements</tt> are to be inserted
@param elements the elements to insert into <tt>c</tt>
@return <tt>true</tt> if the collection changed as a result of the call
@throws UnsupportedOperationException if <tt>c</tt> does not support
        the <tt>add</tt> operation
@throws NullPointerException if <tt>elements</tt> contains one or more
        null values and <tt>c</tt> does not permit null elements, or
        if <tt>c</tt> or <tt>elements</tt> are <tt>null</tt>
@throws IllegalArgumentException if some property of a value in
        <tt>elements</tt> prevents it from being added to <tt>c</tt>
@see Collection#addAll(Collection)
@since 1.5
"
      end

      operation 8760322 "newSetFromMap"
	class_operation public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E, Boolean> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set backed by the specified map.  The resulting set displays
the same ordering, concurrency, and performance characteristics as the
backing map.  In essence, this factory method provides a {@link Set}
implementation corresponding to any {@link Map} implementation.  There
is no need to use this method on a {@link Map} implementation that
already has a corresponding {@link Set} implementation (such as {@link
HashMap} or {@link TreeMap}).

<p>Each method invocation on the set returned by this method results in
exactly one method invocation on the backing map or its <tt>keySet</tt>
view, with one exception.  The <tt>addAll</tt> method is implemented
as a sequence of <tt>put</tt> invocations on the backing map.

<p>The specified map must be empty at the time this method is invoked,
and should not be accessed directly after this method returns.  These
conditions are ensured if the map is created empty, passed directly
to this method, and no reference to the map is retained, as illustrated
in the following code fragment:
<pre>
   Set&lt;Object&gt; weakHashSet = Collections.newSetFromMap(
       new WeakHashMap&lt;Object, Boolean&gt;());
</pre>

@param <E> the class of the map keys and of the objects in the
       returned set
@param map the backing map
@return the set backed by the map
@throws IllegalArgumentException if <tt>map</tt> is not empty
@since 1.6
"
      end

      class 1079298 "SetFromMap"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	actual class class_ref 192258 // Set
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3509634 // <realization>
	  relation 3509634 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3509634 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 3509762 // <realization>
	  relation 3509762 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3509762 // <realization>
	    b parent class_ref 192258 // Set
	end

	classrelation 3509890 // <realization>
	  relation 3509890 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3509890 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 3510018 // m (<unidirectional association>)
	  relation 3510018 --->
	    a role_name "m" const_relation private
	      comment " The backing map"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E, Boolean> ${name}${value};
"
	      classrelation_ref 3510018 // m (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 3510146 // s (<unidirectional association>)
	  relation 3510146 --->
	    a role_name "s" private
	      comment " Its keySet"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3510146 // s (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	operation 8760450 "SetFromMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E, Boolean> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8760578 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8760706 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8760834 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8760962 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761090 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761218 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761346 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761474 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761602 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761730 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761858 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8761986 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8762114 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8762242 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8762370 "retainAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8762498 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " addAll is the only inherited implementation
 Override default methods in Collection"
	end

	operation 8762626 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8762754 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8762882 "stream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8763010 "parallelStream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	attribute 2030338 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 2454657854757543876L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8763138 "readObject"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 168962 // ObjectInputStream
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8763266 "asLifoQueue"
	class_operation public return_type class_ref 1064194 // Queue
	nparams 1
	  param inout name "deque" type class_ref 1064450 // Deque
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of a {@link Deque} as a Last-in-first-out (Lifo)
{@link Queue}. Method <tt>add</tt> is mapped to <tt>push</tt>,
<tt>remove</tt> is mapped to <tt>pop</tt> and so on. This
view can be useful when you would like to use a method
requiring a <tt>Queue</tt> but you need Lifo ordering.

<p>Each method invocation on the queue returned by this method
results in exactly one method invocation on the backing deque, with
one exception.  The {@link Queue#addAll addAll} method is
implemented as a sequence of {@link Deque#addFirst addFirst}
invocations on the backing deque.

@param  <T> the class of the objects in the deque
@param deque the deque
@return the queue
@since  1.6
"
      end

      class 1079426 "AsLIFOQueue"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1064066 // AbstractQueue
	  rank 0 explicit_value ""
	actual class class_ref 1064194 // Queue
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3510274 // <realization>
	  relation 3510274 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3510274 // <realization>
	    b parent class_ref 1064066 // AbstractQueue
	end

	classrelation 3510402 // <realization>
	  relation 3510402 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3510402 // <realization>
	    b parent class_ref 1064194 // Queue
	end

	classrelation 3510530 // <realization>
	  relation 3510530 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3510530 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2030466 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1802017725587941708L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3510658 // q (<unidirectional association>)
	  relation 3510658 --->
	    a role_name "q" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3510658 // q (<unidirectional association>)
	    b parent class_ref 1064450 // Deque
	end

	operation 8763394 "AsLIFOQueue"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "q" type class_ref 1064450 // Deque
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8763522 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8763650 "offer"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8763778 "poll"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8763906 "remove"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764034 "peek"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764162 "element"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764290 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764418 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764546 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764674 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764802 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8764930 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765058 "toArray"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765186 "toArray"
	  cpp_inline public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765314 "toString"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765442 "containsAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765570 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765698 "retainAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8765826 "forEach"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " We use inherited addAll; forwarding addAll would be wrong
 Override default methods in Collection"
	end

	operation 8765954 "removeIf"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "filter" type class_ref 184578 // Predicate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8766082 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8766210 "stream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8766338 "parallelStream"
	  cpp_inline public return_type class_ref 184706 // Stream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1073538 "NavigableSet"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 511874 // SortedSet
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link SortedSet} extended with navigation methods reporting
closest matches for given search targets. Methods {@code lower},
{@code floor}, {@code ceiling}, and {@code higher} return elements
respectively less than, less than or equal, greater than or equal,
and greater than a given element, returning {@code null} if there
is no such element.  A {@code NavigableSet} may be accessed and
traversed in either ascending or descending order.  The {@code
descendingSet} method returns a view of the set with the senses of
all relational and directional methods inverted. The performance of
ascending operations and views is likely to be faster than that of
descending ones.  This interface additionally defines methods
{@code pollFirst} and {@code pollLast} that return and remove the
lowest and highest element, if one exists, else returning {@code
null}.  Methods {@code subSet}, {@code headSet},
and {@code tailSet} differ from the like-named {@code
SortedSet} methods in accepting additional arguments describing
whether lower and upper bounds are inclusive versus exclusive.
Subsets of any {@code NavigableSet} must implement the {@code
NavigableSet} interface.

<p> The return values of navigation methods may be ambiguous in
implementations that permit {@code null} elements. However, even
in this case the result can be disambiguated by checking
{@code contains(null)}. To avoid such issues, implementations of
this interface are encouraged to <em>not</em> permit insertion of
{@code null} elements. (Note that sorted sets of {@link
Comparable} elements intrinsically do not permit {@code null}.)

<p>Methods
{@link #subSet(Object, Object) subSet(E, E)},
{@link #headSet(Object) headSet(E)}, and
{@link #tailSet(Object) tailSet(E)}
are specified to return {@code SortedSet} to allow existing
implementations of {@code SortedSet} to be compatibly retrofitted to
implement {@code NavigableSet}, but extensions and implementations
of this interface are encouraged to override these methods to return
{@code NavigableSet}.

<p>This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author Doug Lea
@author Josh Bloch
@param <E> the type of elements maintained by this set
@since 1.6
"
      classrelation 3490946 // <realization>
	relation 3490946 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3490946 // <realization>
	  b parent class_ref 511874 // SortedSet
      end

      operation 8680194 "lower"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest element in this set strictly less than the
given element, or {@code null} if there is no such element.

@param e the value to match
@return the greatest element less than {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements
"
      end

      operation 8680322 "floor"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest element in this set less than or equal to
the given element, or {@code null} if there is no such element.

@param e the value to match
@return the greatest element less than or equal to {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements
"
      end

      operation 8680450 "ceiling"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least element in this set greater than or equal to
the given element, or {@code null} if there is no such element.

@param e the value to match
@return the least element greater than or equal to {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements
"
      end

      operation 8680578 "higher"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least element in this set strictly greater than the
given element, or {@code null} if there is no such element.

@param e the value to match
@return the least element greater than {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements
"
      end

      operation 8680706 "pollFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first (lowest) element,
or returns {@code null} if this set is empty.

@return the first element, or {@code null} if this set is empty
"
      end

      operation 8680834 "pollLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last (highest) element,
or returns {@code null} if this set is empty.

@return the last element, or {@code null} if this set is empty
"
      end

      operation 8680962 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set, in ascending order.

@return an iterator over the elements in this set, in ascending order
"
      end

      operation 8681090 "descendingSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reverse order view of the elements contained in this set.
The descending set is backed by this set, so changes to the set are
reflected in the descending set, and vice-versa.  If either set is
modified while an iteration over either set is in progress (except
through the iterator's own {@code remove} operation), the results of
the iteration are undefined.

<p>The returned set has an ordering equivalent to
<tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.
The expression {@code s.descendingSet().descendingSet()} returns a
view of {@code s} essentially equivalent to {@code s}.

@return a reverse order view of this set
"
      end

      operation 8681218 "descendingIterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set, in descending order.
Equivalent in effect to {@code descendingSet().iterator()}.

@return an iterator over the elements in this set, in descending order
"
      end

      operation 8681346 "subSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 4
	  param inout name "fromElement" explicit_type "E"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "toElement" explicit_type "E"
	  param inout name "toInclusive" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements range from
{@code fromElement} to {@code toElement}.  If {@code fromElement} and
{@code toElement} are equal, the returned set is empty unless {@code
fromInclusive} and {@code toInclusive} are both true.  The returned set
is backed by this set, so changes in the returned set are reflected in
this set, and vice-versa.  The returned set supports all optional set
operations that this set supports.

<p>The returned set will throw an {@code IllegalArgumentException}
on an attempt to insert an element outside its range.

@param fromElement low endpoint of the returned set
@param fromInclusive {@code true} if the low endpoint
       is to be included in the returned view
@param toElement high endpoint of the returned set
@param toInclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this set whose elements range from
        {@code fromElement}, inclusive, to {@code toElement}, exclusive
@throws ClassCastException if {@code fromElement} and
        {@code toElement} cannot be compared to one another using this
        set's comparator (or, if the set has no comparator, using
        natural ordering).  Implementations may, but are not required
        to, throw this exception if {@code fromElement} or
        {@code toElement} cannot be compared to elements currently in
        the set.
@throws NullPointerException if {@code fromElement} or
        {@code toElement} is null and this set does
        not permit null elements
@throws IllegalArgumentException if {@code fromElement} is
        greater than {@code toElement}; or if this set itself
        has a restricted range, and {@code fromElement} or
        {@code toElement} lies outside the bounds of the range.
"
      end

      operation 8681474 "headSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 2
	  param inout name "toElement" explicit_type "E"
	  param inout name "inclusive" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements are less than
(or equal to, if {@code inclusive} is true) {@code toElement}.  The
returned set is backed by this set, so changes in the returned set are
reflected in this set, and vice-versa.  The returned set supports all
optional set operations that this set supports.

<p>The returned set will throw an {@code IllegalArgumentException}
on an attempt to insert an element outside its range.

@param toElement high endpoint of the returned set
@param inclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this set whose elements are less than
        (or equal to, if {@code inclusive} is true) {@code toElement}
@throws ClassCastException if {@code toElement} is not compatible
        with this set's comparator (or, if the set has no comparator,
        if {@code toElement} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code toElement} cannot be compared to elements
        currently in the set.
@throws NullPointerException if {@code toElement} is null and
        this set does not permit null elements
@throws IllegalArgumentException if this set itself has a
        restricted range, and {@code toElement} lies outside the
        bounds of the range
"
      end

      operation 8681602 "tailSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "inclusive" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements are greater
than (or equal to, if {@code inclusive} is true) {@code fromElement}.
The returned set is backed by this set, so changes in the returned set
are reflected in this set, and vice-versa.  The returned set supports
all optional set operations that this set supports.

<p>The returned set will throw an {@code IllegalArgumentException}
on an attempt to insert an element outside its range.

@param fromElement low endpoint of the returned set
@param inclusive {@code true} if the low endpoint
       is to be included in the returned view
@return a view of the portion of this set whose elements are greater
        than or equal to {@code fromElement}
@throws ClassCastException if {@code fromElement} is not compatible
        with this set's comparator (or, if the set has no comparator,
        if {@code fromElement} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code fromElement} cannot be compared to elements
        currently in the set.
@throws NullPointerException if {@code fromElement} is null
        and this set does not permit null elements
@throws IllegalArgumentException if this set itself has a
        restricted range, and {@code fromElement} lies outside the
        bounds of the range
"
      end

      operation 8681730 "subSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "toElement" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code subSet(fromElement, true, toElement, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8681858 "headSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "toElement" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code headSet(toElement, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8681986 "tailSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "fromElement" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code tailSet(fromElement, true)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end
    end

    class 1079554 "ComparableTimSort"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a near duplicate of {@link TimSort}, modified for use with
arrays of objects that implement {@link Comparable}, instead of using
explicit comparators.

<p>If you are using an optimizing VM, you may find that ComparableTimSort
offers no performance benefit over TimSort in conjunction with a
comparator that simply returns {@code ((Comparable)first).compareTo(Second)}.
If this is the case, you are better off deleting ComparableTimSort to
eliminate the code duplication.  (See Arrays.java for details.)

@author Josh Bloch
"
      attribute 2030594 "MIN_MERGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the minimum sized sequence that will be merged.  Shorter
sequences will be lengthened by calling binarySort.  If the entire
array is less than this length, no merges will be performed.

This constant should be a power of two.  It was 64 in Tim Peter's C
implementation, but 32 was empirically determined to work better in
this implementation.  In the unlikely event that you set this constant
to be a number that's not a power of two, you'll need to change the
{@link #minRunLength} computation.

If you decrease this constant, you must change the stackLen
computation in the TimSort constructor, or you risk an
ArrayOutOfBounds exception.  See listsort.txt for a discussion
of the minimum stack length required as a function of the length
of the array being sorted and the minimum merge sequence length.

"
      end

      classrelation 3510786 // a (<unidirectional association>)
	relation 3510786 --->
	  a role_name "a" multiplicity "[]" const_relation private
	    comment "
The array being sorted.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3510786 // a (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2030722 "MIN_GALLOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When we get into galloping mode, we stay there until both runs win less
often than MIN_GALLOP consecutive times.

"
      end

      attribute 2030850 "minGallop"
	private explicit_type "int"
	init_value " MIN_GALLOP"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This controls when we get *into* galloping mode.  It is initialized
to MIN_GALLOP.  The mergeLo and mergeHi methods nudge it higher for
random data, and lower for highly structured data.

"
      end

      attribute 2030978 "INITIAL_TMP_STORAGE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximum initial size of tmp array, which is used for merging.  The array
can grow to accommodate demand.

Unlike Tim's original C version, we do not allocate this much storage
when sorting smaller arrays.  This change was required for performance.

"
      end

      classrelation 3510914 // tmp (<unidirectional association>)
	relation 3510914 --->
	  a role_name "tmp" multiplicity "[]" private
	    comment "
Temp storage for merges. A workspace array may optionally be
provided in constructor, and if so will be used as long as it
is big enough.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3510914 // tmp (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2031106 "tmpBase"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " base of tmp array slice"
      end

      attribute 2031234 "tmpLen"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " length of tmp array slice"
      end

      attribute 2031362 "stackSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A stack of pending runs yet to be merged.  Run i starts at
address base[i] and extends for len[i] elements.  It's always
true (so long as the indices are in bounds) that:

    runBase[i] + runLen[i] == runBase[i + 1]

so we could cut the storage for this, but it's a minor amount,
and keeping all the info explicit simplifies the code.

 Number of pending runs on stack"
      end

      attribute 2031490 "runBase"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2031618 "runLen"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8766466 "ComparableTimSort"
	private explicit_return_type ""
	nparams 4
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "work" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TimSort instance to maintain the state of an ongoing sort.

@param a the array to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8766594 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param inout name "work" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The next method (package private and static) constitutes the
entire API of this class.


Sorts the given range, using the given workspace array slice
for temp storage when possible. This method is designed to be
invoked from public methods (in class Arrays) after performing
any necessary array bounds checks and expanding parameters into
the required forms.

@param a the array to be sorted
@param lo the index of the first element, inclusive, to be sorted
@param hi the index of the last element, exclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
@since 1.8
"
      end

      operation 8766722 "binarySort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"fallthrough\", \"rawtypes\", \"unchecked\"})
"
	
	
	
	comment "Sorts the specified portion of the specified array using a binary
insertion sort.  This is the best method for sorting small numbers
of elements.  It requires O(n log n) compares, but O(n^2) data
movement (worst case).

If the initial part of the specified range is already sorted,
this method can take advantage of it: the method assumes that the
elements from index {@code lo}, inclusive, to {@code start},
exclusive are already sorted.

@param a the array in which a range is to be sorted
@param lo the index of the first element in the range to be sorted
@param hi the index after the last element in the range to be sorted
@param start the index of the first element in the range that is
       not already known to be sorted ({@code lo <= start <= hi})
"
      end

      operation 8766850 "countRunAndMakeAscending"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Returns the length of the run beginning at the specified position in
the specified array and reverses the run if it is descending (ensuring
that the run will always be ascending when the method returns).

A run is the longest ascending sequence with:

   a[lo] <= a[lo + 1] <= a[lo + 2] <= ...

or the longest descending sequence with:

   a[lo] >  a[lo + 1] >  a[lo + 2] >  ...

For its intended use in a stable mergesort, the strictness of the
definition of \"descending\" is needed so that the call can safely
reverse a descending sequence without violating stability.

@param a the array in which a run is to be counted and possibly reversed
@param lo index of the first element in the run
@param hi index after the last element that may be contained in the run.
It is required that {@code lo < hi}.
@return  the length of the run beginning at the specified position in
         the specified array
"
      end

      operation 8766978 "reverseRange"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverse the specified range of the specified array.

@param a the array in which a range is to be reversed
@param lo the index of the first element in the range to be reversed
@param hi the index after the last element in the range to be reversed
"
      end

      operation 8767106 "minRunLength"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum acceptable run length for an array of the specified
length. Natural runs shorter than this will be extended with
{@link #binarySort}.

Roughly speaking, the computation is:

 If n < MIN_MERGE, return n (it's too small to bother with fancy stuff).
 Else if n is an exact power of 2, return MIN_MERGE/2.
 Else return an int k, MIN_MERGE/2 <= k <= MIN_MERGE, such that n/k
  is close to, but strictly less than, an exact power of 2.

For the rationale, see listsort.txt.

@param n the length of the array to be sorted
@return the length of the minimum run to be merged
"
      end

      operation 8767234 "pushRun"
	private explicit_return_type "void"
	nparams 2
	  param in name "runBase" explicit_type "int"
	  param in name "runLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes the specified run onto the pending-run stack.

@param runBase index of the first element in the run
@param runLen  the number of elements in the run
"
      end

      operation 8767362 "mergeCollapse"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examines the stack of runs waiting to be merged and merges adjacent runs
until the stack invariants are reestablished:

    1. runLen[i - 3] > runLen[i - 2] + runLen[i - 1]
    2. runLen[i - 2] > runLen[i - 1]

This method is called each time a new run is pushed onto the stack,
so the invariants are guaranteed to hold for i < stackSize upon
entry to the method.
"
      end

      operation 8767490 "mergeForceCollapse"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges all runs on the stack until only one remains.  This method is
called once, to complete the sort.
"
      end

      operation 8767618 "mergeAt"
	private explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Merges the two runs at stack indices i and i+1.  Run i must be
the penultimate or antepenultimate run on the stack.  In other words,
i must be equal to stackSize-2 or stackSize-3.

@param i stack index of the first of the two runs to merge
"
      end

      operation 8767746 "gallopLeft"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "key" type class_ref 194946 // Comparable
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the position at which to insert the specified key into the
specified sorted range; if the range contains an element equal to key,
returns the index of the leftmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@return the int k,  0 <= k <= n such that a[b + k - 1] < key <= a[b + k],
   pretending that a[b - 1] is minus infinity and a[b + n] is infinity.
   In other words, key belongs at index b + k; or in other words,
   the first k elements of a should precede key, and the last n - k
   should follow it.
"
      end

      operation 8767874 "gallopRight"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "key" type class_ref 194946 // Comparable
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like gallopLeft, except that if the range contains an element equal to
key, gallopRight returns the index after the rightmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@return the int k,  0 <= k <= n such that a[b + k - 1] <= key < a[b + k]
"
      end

      operation 8768002 "mergeLo"
	private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Merges two adjacent runs in place, in a stable fashion.  The first
element of the first run must be greater than the first element of the
second run (a[base1] > a[base2]), and the last element of the first run
(a[base1 + len1-1]) must be greater than all elements of the second run.

For performance, this method should be called only when len1 <= len2;
its twin, mergeHi should be called if len1 >= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)
"
      end

      operation 8768130 "mergeHi"
	private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Like mergeLo, except that this method should be called only if
len1 >= len2; mergeLo should be called if len1 <= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)
"
      end

      operation 8768258 "ensureCapacity"
	private return_type class_ref 129538 // Object
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the external array tmp has at least the specified
number of elements, increasing its size if necessary.  The size
increases exponentially to ensure amortized linear time complexity.

@param minCapacity the minimum required capacity of the tmp array
@return tmp, whether or not it grew
"
      end
    end

    class 1079682 "Comparators"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Package private supporting class for {@link Comparator}.
"
      operation 8768386 "Comparators"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1079810 "NaturalOrderComparator"
	visibility package stereotype "enum"
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3511042 // <realization>
	  relation 3511042 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3511042 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	attribute 2031746 "INSTANCE"
	  public type class_ref 1079810 // NaturalOrderComparator
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8768514 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "c1" type class_ref 194946 // Comparable
	    param inout name "c2" type class_ref 194946 // Comparable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1}<Object> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8768642 "reversed"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Comparable<Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1079938 "NullComparator"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3511170 // <realization>
	  relation 3511170 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3511170 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	classrelation 3511298 // <realization>
	  relation 3511298 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3511298 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2031874 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -7569533591570686392L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2032002 "nullFirst"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3511426 // real (<unidirectional association>)
	  relation 3511426 --->
	    a role_name "real" const_relation private
	      comment " if null, non-null Ts are considered equal
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 3511426 // real (<unidirectional association>)
	    b parent class_ref 184962 // Comparator
	end

	operation 8768770 "NullComparator"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "nullFirst" explicit_type "boolean"
	    param inout name "real" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8768898 "compare"
	  cpp_inline public explicit_return_type "int"
	  nparams 2
	    param inout name "a" explicit_type "T"
	    param inout name "b" explicit_type "T"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8769026 "thenComparing"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 1
	    param inout name "other" type class_ref 184962 // Comparator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8769154 "reversed"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1080450 "DoubleSummaryStatistics"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A state object for collecting statistics such as count, min, max, sum, and
average.

<p>This class is designed to work with (though does not require)
{@linkplain java.util.stream streams}. For example, you can compute
summary statistics on a stream of doubles with:
<pre> {@code
DoubleSummaryStatistics stats = doubleStream.collect(DoubleSummaryStatistics::new,
                                                     DoubleSummaryStatistics::accept,
                                                     DoubleSummaryStatistics::combine);
}</pre>

<p>{@code DoubleSummaryStatistics} can be used as a
{@linkplain java.util.stream.Stream#collect(Collector) reduction}
target for a {@linkplain java.util.stream.Stream stream}. For example:

<pre> {@code
DoubleSummaryStatistics stats = people.stream()
    .collect(Collectors.summarizingDouble(Person::getWeight));
}</pre>

This computes, in a single pass, the count of people, as well as the minimum,
maximum, sum, and average of their weights.

@implNote This implementation is not thread safe. However, it is safe to use
{@link java.util.stream.Collectors#summarizingDouble(java.util.function.ToDoubleFunction)
Collectors.toDoubleStatistics()} on a parallel stream, because the parallel
implementation of {@link java.util.stream.Stream#collect Stream.collect()}
provides the necessary partitioning, isolation, and merging of results for
safe and efficient parallel execution.
@since 1.8
"
      classrelation 3512706 // <realization>
	relation 3512706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3512706 // <realization>
	  b parent class_ref 377346 // DoubleConsumer
      end

      attribute 2036098 "count"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2036226 "sum"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2036354 "sumCompensation"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Low order bits of sum"
      end

      attribute 2036482 "simpleSum"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to compute right sum for non-finite inputs"
      end

      attribute 2036610 "min"
	private explicit_type "double"
	init_value " Double.POSITIVE_INFINITY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2036738 "max"
	private explicit_type "double"
	init_value " Double.NEGATIVE_INFINITY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8772610 "DoubleSummaryStatistics"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty instance with zero count, zero sum,
{@code Double.POSITIVE_INFINITY} min, {@code Double.NEGATIVE_INFINITY}
max and zero average.
"
      end

      operation 8772738 "accept"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Records another value into the summary information.

@param value the input value
"
      end

      operation 8772866 "combine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 1080450 // DoubleSummaryStatistics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Combines the state of another {@code DoubleSummaryStatistics} into this
one.

@param other another {@code DoubleSummaryStatistics}
@throws NullPointerException if {@code other} is null
"
      end

      operation 8772994 "sumWithCompensation"
	private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Incorporate a new double value using Kahan summation /
compensated summation.
"
      end

      operation 8773122 "getCount"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the count of values recorded.

@return the count of values
"
      end

      operation 8773250 "getSum"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of values recorded, or zero if no values have been
recorded.

If any recorded value is a NaN or the sum is at any point a NaN
then the sum will be NaN.

<p> The value of a floating-point sum is a function both of the
input values as well as the order of addition operations. The
order of addition operations of this method is intentionally
not defined to allow for implementation flexibility to improve
the speed and accuracy of the computed result.

In particular, this method may be implemented using compensated
summation or other technique to reduce the error bound in the
numerical sum compared to a simple summation of {@code double}
values.

@apiNote Values sorted by increasing absolute magnitude tend to yield
more accurate results.

@return the sum of values, or zero if none
"
      end

      operation 8773378 "getMin"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum recorded value, {@code Double.NaN} if any recorded
value was NaN or {@code Double.POSITIVE_INFINITY} if no values were
recorded. Unlike the numerical comparison operators, this method
considers negative zero to be strictly smaller than positive zero.

@return the minimum recorded value, {@code Double.NaN} if any recorded
value was NaN or {@code Double.POSITIVE_INFINITY} if no values were
recorded
"
      end

      operation 8773506 "getMax"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum recorded value, {@code Double.NaN} if any recorded
value was NaN or {@code Double.NEGATIVE_INFINITY} if no values were
recorded. Unlike the numerical comparison operators, this method
considers negative zero to be strictly smaller than positive zero.

@return the maximum recorded value, {@code Double.NaN} if any recorded
value was NaN or {@code Double.NEGATIVE_INFINITY} if no values were
recorded
"
      end

      operation 8773634 "getAverage"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arithmetic mean of values recorded, or zero if no
values have been recorded.

If any recorded value is a NaN or the sum is at any point a NaN
then the average will be code NaN.

<p>The average returned can vary depending upon the order in
which values are recorded.

This method may be implemented using compensated summation or
other technique to reduce the error bound in the {@link #getSum
numerical sum} used to compute the average.

@apiNote Values sorted by increasing absolute magnitude tend to yield
more accurate results.

@return the arithmetic mean of values, or zero if none
"
      end

      operation 8773762 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Returns a non-empty string representation of this object suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.
"
      end
    end

    class 1080578 "DualPivotQuicksort"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements the Dual-Pivot Quicksort algorithm by
Vladimir Yaroslavskiy, Jon Bentley, and Josh Bloch. The algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

All exposed methods are package-private, designed to be invoked
from public methods (in class Arrays) after performing any
necessary array bounds checks and expanding parameters into the
required forms.

@author Vladimir Yaroslavskiy
@author Jon Bentley
@author Josh Bloch

@version 2011.02.11 m765.827.12i:5\\7pm
@since 1.7
"
      operation 8773890 "DualPivotQuicksort"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevents instantiation.
"
      end

      attribute 2036866 "MAX_RUN_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 67"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tuning parameters.


The maximum number of runs in merge sort.

"
      end

      attribute 2036994 "MAX_RUN_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 33"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum length of run in merge sort.

"
      end

      attribute 2037122 "QUICKSORT_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 286"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the length of an array to be sorted is less than this
constant, Quicksort is used in preference to merge sort.

"
      end

      attribute 2037250 "INSERTION_SORT_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 47"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the length of an array to be sorted is less than this
constant, insertion sort is used in preference to Quicksort.

"
      end

      attribute 2037378 "COUNTING_SORT_THRESHOLD_FOR_BYTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 29"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the length of a byte array to be sorted is greater than this
constant, counting sort is used in preference to insertion sort.

"
      end

      attribute 2037506 "COUNTING_SORT_THRESHOLD_FOR_SHORT_OR_CHAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the length of a short or char array to be sorted is greater
than this constant, counting sort is used in preference to Quicksort.

"
      end

      operation 8774018 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "int"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorting methods for seven primitive types.


Sorts the specified range of the array using the given
workspace array slice if possible for merging

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8774146 "sort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "leftmost" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array by Dual-Pivot Quicksort.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param leftmost indicates if this part is the leftmost in the range
"
      end

      operation 8774274 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "long"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array using the given
workspace array slice if possible for merging

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8774402 "sort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "leftmost" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array by Dual-Pivot Quicksort.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param leftmost indicates if this part is the leftmost in the range
"
      end

      operation 8774530 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "short"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array using the given
workspace array slice if possible for merging

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      attribute 2037634 "NUM_SHORT_VALUES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of distinct short values. 
"
      end

      operation 8774658 "doSort"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "short"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8774786 "sort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "short"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "leftmost" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array by Dual-Pivot Quicksort.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param leftmost indicates if this part is the leftmost in the range
"
      end

      operation 8774914 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "char"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array using the given
workspace array slice if possible for merging

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      attribute 2037762 "NUM_CHAR_VALUES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of distinct char values. 
"
      end

      operation 8775042 "doSort"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "char"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8775170 "sort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "leftmost" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array by Dual-Pivot Quicksort.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param leftmost indicates if this part is the leftmost in the range
"
      end

      attribute 2037890 "NUM_BYTE_VALUES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of distinct byte values. 
"
      end

      operation 8775298 "sort"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
"
      end

      operation 8775426 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "float"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array using the given
workspace array slice if possible for merging

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8775554 "doSort"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "float"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8775682 "sort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "float"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "leftmost" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array by Dual-Pivot Quicksort.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param leftmost indicates if this part is the leftmost in the range
"
      end

      operation 8775810 "sort"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "double"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array using the given
workspace array slice if possible for merging

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8775938 "doSort"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "work" explicit_type "double"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8776066 "sort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "double"
	multiplicity "[]"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "leftmost" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array by Dual-Pivot Quicksort.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted
@param leftmost indicates if this part is the leftmost in the range
"
      end
    end

    class 1080706 "DuplicateFormatFlagsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when duplicate flags are provided in the format
specifier.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3512962 // <generalisation>
	relation 3512962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3512962 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2038146 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18890531L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3513090 // flags (<unidirectional association>)
	relation 3513090 --->
	  a role_name "flags" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3513090 // flags (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8776322 "DuplicateFormatFlagsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified flags.

@param  f
        The set of format flags which contain a duplicate flag.
"
      end

      operation 8776450 "getFlags"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of flags which contains a duplicate flag.

@return  The flags
"
      end

      operation 8776578 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1080834 "IllegalFormatException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when a format string contains an illegal syntax
or a format specifier that is incompatible with the given arguments.  Only
explicit subtypes of this exception which correspond to specific errors
should be instantiated.

@since 1.5
"
      classrelation 3512834 // <generalisation>
	relation 3512834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3512834 // <generalisation>
	  b parent class_ref 187778 // IllegalArgumentException
      end

      attribute 2038018 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18830826L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8776194 "IllegalFormatException"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private to prevent explicit instantiation"
      end
    end

    class 1081986 "EnumSet"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends "Enum<E>"
      nactuals 1
      actual class class_ref 255618 // AbstractSet
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A specialized {@link Set} implementation for use with enum types.  All of
the elements in an enum set must come from a single enum type that is
specified, explicitly or implicitly, when the set is created.  Enum sets
are represented internally as bit vectors.  This representation is
extremely compact and efficient. The space and time performance of this
class should be good enough to allow its use as a high-quality, typesafe
alternative to traditional <tt>int</tt>-based \"bit flags.\"  Even bulk
operations (such as <tt>containsAll</tt> and <tt>retainAll</tt>) should
run very quickly if their argument is also an enum set.

<p>The iterator returned by the <tt>iterator</tt> method traverses the
elements in their <i>natural order</i> (the order in which the enum
constants are declared).  The returned iterator is <i>weakly
consistent</i>: it will never throw {@link ConcurrentModificationException}
and it may or may not show the effects of any modifications to the set that
occur while the iteration is in progress.

<p>Null elements are not permitted.  Attempts to insert a null element
will throw {@link NullPointerException}.  Attempts to test for the
presence of a null element or to remove one will, however, function
properly.

<P>Like most collection implementations, <tt>EnumSet</tt> is not
synchronized.  If multiple threads access an enum set concurrently, and at
least one of the threads modifies the set, it should be synchronized
externally.  This is typically accomplished by synchronizing on some
object that naturally encapsulates the enum set.  If no such object exists,
the set should be \"wrapped\" using the {@link Collections#synchronizedSet}
method.  This is best done at creation time, to prevent accidental
unsynchronized access:

<pre>
Set&lt;MyEnum&gt; s = Collections.synchronizedSet(EnumSet.noneOf(MyEnum.class));
</pre>

<p>Implementation note: All basic operations execute in constant time.
They are likely (though not guaranteed) to be much faster than their
{@link HashSet} counterparts.  Even bulk operations execute in
constant time if their argument is also an enum set.

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author Josh Bloch
@since 1.5
@see EnumMap
@serial exclude
"
      classrelation 3515522 // <realization>
	relation 3515522 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3515522 // <realization>
	  b parent class_ref 255618 // AbstractSet
      end

      classrelation 3515650 // <realization>
	relation 3515650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3515650 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3515778 // <realization>
	relation 3515778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3515778 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3515906 // elementType (<unidirectional association>)
	relation 3515906 --->
	  a role_name "elementType" const_relation package
	    comment "
The class of all the elements of this set.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 3515906 // elementType (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3516034 // universe (<unidirectional association>)
	relation 3516034 --->
	  a role_name "universe" multiplicity "[]" const_relation package
	    comment "
All of the values comprising T.  (Cached for performance.)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	    classrelation_ref 3516034 // universe (<unidirectional association>)
	  b parent class_ref 172034 // Enum
      end

      classrelation 3516162 // ZERO_LENGTH_ENUM_ARRAY (<unidirectional association>)
	relation 3516162 --->
	  a role_name "ZERO_LENGTH_ENUM_ARRAY" multiplicity "[]" init_value " new Enum<?>[0]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	    classrelation_ref 3516162 // ZERO_LENGTH_ENUM_ARRAY (<unidirectional association>)
	  b parent class_ref 172034 // Enum
      end

      operation 8784642 "EnumSet"
	cpp_inline package explicit_return_type ""
	nparams 2
	  param inout name "elementType" type class_ref 130818 // Class
	  param inout name "universe" type class_ref 172034 // Enum
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<?>[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8784770 "noneOf"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 1
	  param inout name "elementType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty enum set with the specified element type.

@param <E> The class of the elements in the set
@param elementType the class object of the element type for this enum
    set
@return An empty enum set of the specified type.
@throws NullPointerException if <tt>elementType</tt> is null
"
      end

      operation 8784898 "allOf"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 1
	  param inout name "elementType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set containing all of the elements in the specified
element type.

@param <E> The class of the elements in the set
@param elementType the class object of the element type for this enum
    set
@return An enum set containing all the elements in the specified type.
@throws NullPointerException if <tt>elementType</tt> is null
"
      end

      operation 8785026 "addAll"
	abstract cpp_inline package explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements from the appropriate enum type to this enum
set, which is empty prior to the call.
"
      end

      operation 8785154 "copyOf"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 1
	  param inout name "s" type class_ref 1081986 // EnumSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set with the same element type as the specified enum
set, initially containing the same elements (if any).

@param <E> The class of the elements in the set
@param s the enum set from which to initialize this enum set
@return A copy of the specified enum set.
@throws NullPointerException if <tt>s</tt> is null
"
      end

      operation 8785282 "copyOf"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initialized from the specified collection.  If
the specified collection is an <tt>EnumSet</tt> instance, this static
factory method behaves identically to {@link #copyOf(EnumSet)}.
Otherwise, the specified collection must contain at least one element
(in order to determine the new enum set's element type).

@param <E> The class of the elements in the collection
@param c the collection from which to initialize this enum set
@return An enum set initialized from the given collection.
@throws IllegalArgumentException if <tt>c</tt> is not an
    <tt>EnumSet</tt> instance and contains no elements
@throws NullPointerException if <tt>c</tt> is null
"
      end

      operation 8785410 "complementOf"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 1
	  param inout name "s" type class_ref 1081986 // EnumSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set with the same element type as the specified enum
set, initially containing all the elements of this type that are
<i>not</i> contained in the specified set.

@param <E> The class of the elements in the enum set
@param s the enum set from whose complement to initialize this enum set
@return The complement of the specified set in this set
@throws NullPointerException if <tt>s</tt> is null
"
      end

      operation 8785538 "of"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initially containing the specified element.

Overloadings of this method exist to initialize an enum set with
one through five elements.  A sixth overloading is provided that
uses the varargs feature.  This overloading may be used to create
an enum set initially containing an arbitrary number of elements, but
is likely to run slower than the overloadings that do not use varargs.

@param <E> The class of the specified element and of the set
@param e the element that this set is to contain initially
@throws NullPointerException if <tt>e</tt> is null
@return an enum set initially containing the specified element
"
      end

      operation 8785666 "of"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 2
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initially containing the specified elements.

Overloadings of this method exist to initialize an enum set with
one through five elements.  A sixth overloading is provided that
uses the varargs feature.  This overloading may be used to create
an enum set initially containing an arbitrary number of elements, but
is likely to run slower than the overloadings that do not use varargs.

@param <E> The class of the parameter elements and of the set
@param e1 an element that this set is to contain initially
@param e2 another element that this set is to contain initially
@throws NullPointerException if any parameters are null
@return an enum set initially containing the specified elements
"
      end

      operation 8785794 "of"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 3
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	  param inout name "e3" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initially containing the specified elements.

Overloadings of this method exist to initialize an enum set with
one through five elements.  A sixth overloading is provided that
uses the varargs feature.  This overloading may be used to create
an enum set initially containing an arbitrary number of elements, but
is likely to run slower than the overloadings that do not use varargs.

@param <E> The class of the parameter elements and of the set
@param e1 an element that this set is to contain initially
@param e2 another element that this set is to contain initially
@param e3 another element that this set is to contain initially
@throws NullPointerException if any parameters are null
@return an enum set initially containing the specified elements
"
      end

      operation 8785922 "of"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 4
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	  param inout name "e3" explicit_type "E"
	  param inout name "e4" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initially containing the specified elements.

Overloadings of this method exist to initialize an enum set with
one through five elements.  A sixth overloading is provided that
uses the varargs feature.  This overloading may be used to create
an enum set initially containing an arbitrary number of elements, but
is likely to run slower than the overloadings that do not use varargs.

@param <E> The class of the parameter elements and of the set
@param e1 an element that this set is to contain initially
@param e2 another element that this set is to contain initially
@param e3 another element that this set is to contain initially
@param e4 another element that this set is to contain initially
@throws NullPointerException if any parameters are null
@return an enum set initially containing the specified elements
"
      end

      operation 8786050 "of"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 5
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	  param inout name "e3" explicit_type "E"
	  param inout name "e4" explicit_type "E"
	  param inout name "e5" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initially containing the specified elements.

Overloadings of this method exist to initialize an enum set with
one through five elements.  A sixth overloading is provided that
uses the varargs feature.  This overloading may be used to create
an enum set initially containing an arbitrary number of elements, but
is likely to run slower than the overloadings that do not use varargs.

@param <E> The class of the parameter elements and of the set
@param e1 an element that this set is to contain initially
@param e2 another element that this set is to contain initially
@param e3 another element that this set is to contain initially
@param e4 another element that this set is to contain initially
@param e5 another element that this set is to contain initially
@throws NullPointerException if any parameters are null
@return an enum set initially containing the specified elements
"
      end

      operation 8786178 "of"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 2
	  param inout name "first" explicit_type "E"
	  param inout name "" explicit_type "E...rest"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
"
	
	
	
	comment "Creates an enum set initially containing the specified elements.
This factory, whose parameter list uses the varargs feature, may
be used to create an enum set initially containing an arbitrary
number of elements, but it is likely to run slower than the overloadings
that do not use varargs.

@param <E> The class of the parameter elements and of the set
@param first an element that the set is to contain initially
@param rest the remaining elements the set is to contain initially
@throws NullPointerException if any of the specified elements are null,
    or if <tt>rest</tt> is null
@return an enum set initially containing the specified elements
"
      end

      operation 8786306 "range"
	class_operation cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 2
	  param inout name "from" explicit_type "E"
	  param inout name "to" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set initially containing all of the elements in the
range defined by the two specified endpoints.  The returned set will
contain the endpoints themselves, which may be identical but must not
be out of order.

@param <E> The class of the parameter elements and of the set
@param from the first element in the range
@param to the last element in the range
@throws NullPointerException if {@code from} or {@code to} are null
@throws IllegalArgumentException if {@code from.compareTo(to) > 0}
@return an enum set initially containing all of the elements in the
        range defined by the two specified endpoints
"
      end

      operation 8786434 "addRange"
	abstract cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "from" explicit_type "E"
	  param inout name "to" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified range to this enum set, which is empty prior
to the call.
"
      end

      operation 8786562 "clone"
	cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a copy of this set.

@return a copy of this set
"
      end

      operation 8786690 "complement"
	abstract cpp_inline package explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Complements the contents of this enum set.
"
      end

      operation 8786818 "typeCheck"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws an exception if e is not of the correct type for this enum set.
"
      end

      operation 8786946 "getUniverse"
	class_operation cpp_inline private explicit_return_type "E"
	nparams 1
	  param inout name "elementType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}[] ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all of the values comprising E.
The result is uncloned, cached, and shared by all callers.
"
      end

      class 1082114 "SerializationProxy"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends "Enum<E>"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3516290 // <realization>
	  relation 3516290 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3516290 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 3516418 // elementType (<unidirectional association>)
	  relation 3516418 --->
	    a role_name "elementType" const_relation private
	      comment "
The element type of this enum set.

@serial

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3516418 // elementType (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 3516546 // elements (<unidirectional association>)
	  relation 3516546 --->
	    a role_name "elements" multiplicity "[]" const_relation private
	      comment "
The elements contained in this enum set.

@serial

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	      classrelation_ref 3516546 // elements (<unidirectional association>)
	    b parent class_ref 172034 // Enum
	end

	operation 8787074 "SerializationProxy"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "set" type class_ref 1081986 // EnumSet
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8787202 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment " instead of cast to E, we should perhaps use elementType.cast()
 to avoid injection of forged stream, but it will slow the implementation"
	end

	attribute 2039170 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 362491234563181265L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 8787330 "writeReplace"
	cpp_inline package return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8787458 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 1
	  exception class_ref 171650 // InvalidObjectException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " readObject method for the serialization proxy pattern
 See Effective Java, Second Ed., Item 78."
      end
    end

    class 1082242 "FormatFlagsConversionMismatchException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when a conversion and flag are incompatible.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3516674 // <generalisation>
	relation 3516674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3516674 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2039298 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19120414L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3516802 // f (<unidirectional association>)
	relation 3516802 --->
	  a role_name "f" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3516802 // f (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2039426 "c"
	private explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8787586 "FormatFlagsConversionMismatchException"
	public explicit_return_type ""
	nparams 2
	  param inout name "f" type class_ref 128130 // String
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified flag
and conversion.

@param  f
        The flag

@param  c
        The conversion
"
      end

      operation 8787714 "getFlags"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the incompatible flag.

@return  The flag
"
      end

      operation 8787842 "getConversion"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the incompatible conversion.

@return  The conversion
"
      end

      operation 8787970 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1082370 "Formattable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <tt>Formattable</tt> interface must be implemented by any class that
needs to perform custom formatting using the <tt>'s'</tt> conversion
specifier of {@link java.util.Formatter}.  This interface allows basic
control for formatting arbitrary objects.

For example, the following class prints out different representations of a
stock's name depending on the flags and length constraints:

{@code
  import java.nio.CharBuffer;
  import java.util.Formatter;
  import java.util.Formattable;
  import java.util.Locale;
  import static java.util.FormattableFlags.*;

 ...

  public class StockName implements Formattable {
      private String symbol, companyName, frenchCompanyName;
      public StockName(String symbol, String companyName,
                       String frenchCompanyName) {
          ...
      }

      ...

      public void formatTo(Formatter fmt, int f, int width, int precision) {
          StringBuilder sb = new StringBuilder();

          // decide form of name
          String name = companyName;
          if (fmt.locale().equals(Locale.FRANCE))
              name = frenchCompanyName;
          boolean alternate = (f & ALTERNATE) == ALTERNATE;
          boolean usesymbol = alternate || (precision != -1 && precision < 10);
          String out = (usesymbol ? symbol : name);

          // apply precision
          if (precision == -1 || out.length() < precision) {
              // write it all
              sb.append(out);
          } else {
              sb.append(out.substring(0, precision - 1)).append('*');
          }

          // apply width and justification
          int len = sb.length();
          if (len < width)
              for (int i = 0; i < width - len; i++)
                  if ((f & LEFT_JUSTIFY) == LEFT_JUSTIFY)
                      sb.append(' ');
                  else
                      sb.insert(0, ' ');

          fmt.format(sb.toString());
      }

      public String toString() {
          return String.format(\"%s - %s\", symbol, companyName);
      }
  }
}

<p> When used in conjunction with the {@link java.util.Formatter}, the above
class produces the following output for various format strings.

{@code
  Formatter fmt = new Formatter();
  StockName sn = new StockName(\"HUGE\", \"Huge Fruit, Inc.\",
                               \"Fruit Titanesque, Inc.\");
  fmt.format(\"%s\", sn);                   //   -> \"Huge Fruit, Inc.\"
  fmt.format(\"%s\", sn.toString());        //   -> \"HUGE - Huge Fruit, Inc.\"
  fmt.format(\"%#s\", sn);                  //   -> \"HUGE\"
  fmt.format(\"%-10.8s\", sn);              //   -> \"HUGE      \"
  fmt.format(\"%.12s\", sn);                //   -> \"Huge Fruit,*\"
  fmt.format(Locale.FRANCE, \"%25s\", sn);  //   -> \"   Fruit Titanesque, Inc.\"
}

<p> Formattables are not necessarily safe for multithreaded access.  Thread
safety is optional and may be enforced by classes that extend and implement
this interface.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to
any method in this interface will cause a {@link
NullPointerException} to be thrown.

@since  1.5
"
      operation 8788098 "formatTo"
	public explicit_return_type "void"
	nparams 4
	  param inout name "formatter" type class_ref 922370 // Formatter
	  param in name "flags" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "precision" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats the object using the provided {@link Formatter formatter}.

@param  formatter
        The {@link Formatter formatter}.  Implementing classes may call
        {@link Formatter#out() formatter.out()} or {@link
        Formatter#locale() formatter.locale()} to obtain the {@link
        Appendable} or {@link Locale} used by this
        <tt>formatter</tt> respectively.

@param  flags
        The flags modify the output format.  The value is interpreted as
        a bitmask.  Any combination of the following flags may be set:
        {@link FormattableFlags#LEFT_JUSTIFY}, {@link
        FormattableFlags#UPPERCASE}, and {@link
        FormattableFlags#ALTERNATE}.  If no flags are set, the default
        formatting of the implementing class will apply.

@param  width
        The minimum number of characters to be written to the output.
        If the length of the converted value is less than the
        <tt>width</tt> then the output will be padded by
        <tt>'&nbsp;&nbsp;'</tt> until the total number of characters
        equals width.  The padding is at the beginning by default.  If
        the {@link FormattableFlags#LEFT_JUSTIFY} flag is set then the
        padding will be at the end.  If <tt>width</tt> is <tt>-1</tt>
        then there is no minimum.

@param  precision
        The maximum number of characters to be written to the output.
        The precision is applied before the width, thus the output will
        be truncated to <tt>precision</tt> characters even if the
        <tt>width</tt> is greater than the <tt>precision</tt>.  If
        <tt>precision</tt> is <tt>-1</tt> then there is no explicit
        limit on the number of characters.

@throws  IllegalFormatException
         If any of the parameters are invalid.  For specification of all
         possible formatting errors, see the <a
         href=\"../util/Formatter.html#detail\">Details</a> section of the
         formatter class specification.
"
      end
    end

    class 1082498 "FormattableFlags"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "FomattableFlags are passed to the {@link Formattable#formatTo
Formattable.formatTo()} method and modify the output format for {@linkplain
Formattable Formattables}.  Implementations of {@link Formattable} are
responsible for interpreting and validating any flags.

@since  1.5
"
      operation 8788226 "FormattableFlags"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Explicit instantiation of this class is prohibited."
      end

      attribute 2039554 "LEFT_JUSTIFY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Left-justifies the output.  Spaces (<tt>'&#92;u0020'</tt>) will be added
at the end of the converted value as required to fill the minimum width
of the field.  If this flag is not set then the output will be
right-justified.

<p> This flag corresponds to <tt>'-'</tt> (<tt>'&#92;u002d'</tt>) in
the format specifier.

 '-'"
      end

      attribute 2039682 "UPPERCASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Converts the output to upper case according to the rules of the
{@linkplain java.util.Locale locale} given during creation of the
<tt>formatter</tt> argument of the {@link Formattable#formatTo
formatTo()} method.  The output should be equivalent the following
invocation of {@link String#toUpperCase(java.util.Locale)}

<pre>
    out.toUpperCase() </pre>

<p> This flag corresponds to <tt>'S'</tt> (<tt>'&#92;u0053'</tt>) in
the format specifier.

 'S'"
      end

      attribute 2039810 "ALTERNATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Requires the output to use an alternate form.  The definition of the
form is specified by the <tt>Formattable</tt>.

<p> This flag corresponds to <tt>'#'</tt> (<tt>'&#92;u0023'</tt>) in
the format specifier.

 '#'"
      end
    end

    class 1083650 "FormatterClosedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when the formatter has been closed.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3519874 // <generalisation>
	relation 3519874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3519874 // <generalisation>
	  b parent class_ref 254850 // IllegalStateException
      end

      attribute 2048514 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18111216L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8803458 "FormatterClosedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class.
"
      end
    end

    class 1085314 "IllegalFormatCodePointException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when a character with an invalid Unicode code
point as defined by {@link Character#isValidCodePoint} is passed to the
{@link Formatter}.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3523970 // <generalisation>
	relation 3523970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3523970 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2054658 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19080630L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2054786 "c"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8825090 "IllegalFormatCodePointException"
	public explicit_return_type ""
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified illegal code
point as defined by {@link Character#isValidCodePoint}.

@param  c
        The illegal Unicode code point
"
      end

      operation 8825218 "getCodePoint"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the illegal code point as defined by {@link
Character#isValidCodePoint}.

@return  The illegal Unicode code point
"
      end

      operation 8825346 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1085442 "IllegalFormatConversionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when the argument corresponding to the format
specifier is of an incompatible type.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3524098 // <generalisation>
	relation 3524098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3524098 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2054914 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 17000126L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2055042 "c"
	private explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3524226 // arg (<unidirectional association>)
	relation 3524226 --->
	  a role_name "arg" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3524226 // arg (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 8825474 "IllegalFormatConversionException"
	public explicit_return_type ""
	nparams 2
	  param in name "c" explicit_type "char"
	  param inout name "arg" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the mismatched conversion and
the corresponding argument class.

@param  c
        Inapplicable conversion

@param  arg
        Class of the mismatched argument
"
      end

      operation 8825602 "getConversion"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the inapplicable conversion.

@return  The inapplicable conversion
"
      end

      operation 8825730 "getArgumentClass"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class of the mismatched argument.

@return   The class of the mismatched argument
"
      end

      operation 8825858 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " javadoc inherited from Throwable.java"
      end
    end

    class 1085570 "IllegalFormatFlagsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when an illegal combination flags is given.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3524354 // <generalisation>
	relation 3524354 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3524354 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2055170 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 790824L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3524482 // flags (<unidirectional association>)
	relation 3524482 --->
	  a role_name "flags" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3524482 // flags (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8825986 "IllegalFormatFlagsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified flags.

@param  f
        The set of format flags which contain an illegal combination
"
      end

      operation 8826114 "getFlags"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of flags which contains an illegal combination.

@return  The flags
"
      end

      operation 8826242 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1085698 "IllegalFormatPrecisionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when the precision is a negative value other than
<tt>-1</tt>, the conversion does not support a precision, or the value is
otherwise unsupported.

@since 1.5
"
      classrelation 3524610 // <generalisation>
	relation 3524610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3524610 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2055298 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18711008L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2055426 "p"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8826370 "IllegalFormatPrecisionException"
	public explicit_return_type ""
	nparams 1
	  param in name "p" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified precision.

@param  p
        The precision
"
      end

      operation 8826498 "getPrecision"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the precision

@return  The precision
"
      end

      operation 8826626 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1085826 "IllegalFormatWidthException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when the format width is a negative value other
than <tt>-1</tt> or is otherwise unsupported.

@since 1.5
"
      classrelation 3524738 // <generalisation>
	relation 3524738 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3524738 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2055554 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 16660902L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2055682 "w"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8826754 "IllegalFormatWidthException"
	public explicit_return_type ""
	nparams 1
	  param in name "w" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified width.

@param  w
        The width
"
      end

      operation 8826882 "getWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width

@return  The width
"
      end

      operation 8827010 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1085954 "IllformedLocaleException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by methods in {@link Locale} and {@link Locale.Builder} to
indicate that an argument is not a well-formed BCP 47 tag.

@see Locale
@since 1.7
"
      classrelation 3524866 // <generalisation>
	relation 3524866 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3524866 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 2055810 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5245986824925681401L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2055938 "_errIdx"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8827138 "IllformedLocaleException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>IllformedLocaleException</code> with no
detail message and -1 as the error index.
"
      end

      operation 8827266 "IllformedLocaleException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>IllformedLocaleException</code> with the
given message and -1 as the error index.

@param message the message
"
      end

      operation 8827394 "IllformedLocaleException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param in name "errorIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>IllformedLocaleException</code> with the
given message and the error index.  The error index is the approximate
offset from the start of the ill-formed value to the point where the
parse first detected an error.  A negative error index value indicates
either the error index is not applicable or unknown.

@param message the message
@param errorIndex the index
"
      end

      operation 8827522 "getErrorIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index where the error was found. A negative value indicates
either the error index is not applicable or unknown.

@return the error index
"
      end
    end

    class 1086082 "InputMismatchException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by a <code>Scanner</code> to indicate that the token
retrieved does not match the pattern for the expected type, or
that the token is out of range for the expected type.

@author  unascribed
@see     java.util.Scanner
@since   1.5
"
      classrelation 3525122 // <generalisation>
	relation 3525122 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3525122 // <generalisation>
	  b parent class_ref 163842 // NoSuchElementException
      end

      attribute 2056194 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8811230760997066428L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8827906 "InputMismatchException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InputMismatchException</code> with <tt>null</tt>
as its error message string.
"
      end

      operation 8828034 "InputMismatchException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InputMismatchException</code>, saving a reference
to the error message string <tt>s</tt> for later retrieval by the
<tt>getMessage</tt> method.

@param   s   the detail message.
"
      end
    end

    class 1086210 "IntSummaryStatistics"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A state object for collecting statistics such as count, min, max, sum, and
average.

<p>This class is designed to work with (though does not require)
{@linkplain java.util.stream streams}. For example, you can compute
summary statistics on a stream of ints with:
<pre> {@code
IntSummaryStatistics stats = intStream.collect(IntSummaryStatistics::new,
                                               IntSummaryStatistics::accept,
                                               IntSummaryStatistics::combine);
}</pre>

<p>{@code IntSummaryStatistics} can be used as a
{@linkplain java.util.stream.Stream#collect(Collector) reduction}
target for a {@linkplain java.util.stream.Stream stream}. For example:

<pre> {@code
IntSummaryStatistics stats = people.stream()
                                   .collect(Collectors.summarizingInt(Person::getDependents));
}</pre>

This computes, in a single pass, the count of people, as well as the minimum,
maximum, sum, and average of their number of dependents.

@implNote This implementation is not thread safe. However, it is safe to use
{@link java.util.stream.Collectors#summarizingInt(java.util.function.ToIntFunction)
Collectors.toIntStatistics()} on a parallel stream, because the parallel
implementation of {@link java.util.stream.Stream#collect Stream.collect()}
provides the necessary partitioning, isolation, and merging of results for
safe and efficient parallel execution.

<p>This implementation does not check for overflow of the sum.
@since 1.8
"
      classrelation 3525250 // <realization>
	relation 3525250 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3525250 // <realization>
	  b parent class_ref 376706 // IntConsumer
      end

      attribute 2056322 "count"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2056450 "sum"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2056578 "min"
	private explicit_type "int"
	init_value " Integer.MAX_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2056706 "max"
	private explicit_type "int"
	init_value " Integer.MIN_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8828418 "IntSummaryStatistics"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty instance with zero count, zero sum,
{@code Integer.MAX_VALUE} min, {@code Integer.MIN_VALUE} max and zero
average.
"
      end

      operation 8828546 "accept"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Records a new value into the summary information

@param value the input value
"
      end

      operation 8828674 "combine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 1086210 // IntSummaryStatistics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Combines the state of another {@code IntSummaryStatistics} into this one.

@param other another {@code IntSummaryStatistics}
@throws NullPointerException if {@code other} is null
"
      end

      operation 8828802 "getCount"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the count of values recorded.

@return the count of values
"
      end

      operation 8828930 "getSum"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of values recorded, or zero if no values have been
recorded.

@return the sum of values, or zero if none
"
      end

      operation 8829058 "getMin"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value recorded, or {@code Integer.MAX_VALUE} if no
values have been recorded.

@return the minimum value, or {@code Integer.MAX_VALUE} if none
"
      end

      operation 8829186 "getMax"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value recorded, or {@code Integer.MIN_VALUE} if no
values have been recorded.

@return the maximum value, or {@code Integer.MIN_VALUE} if none
"
      end

      operation 8829314 "getAverage"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arithmetic mean of values recorded, or zero if no values have been
recorded.

@return the arithmetic mean of values, or zero if none
"
      end

      operation 8829442 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Returns a non-empty string representation of this object suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.
"
      end
    end

    class 1086338 "JapaneseImperialCalendar"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JapaneseImperialCalendar</code> implements a Japanese
calendar system in which the imperial era-based year numbering is
supported from the Meiji era. The following are the eras supported
by this calendar system.
<pre><tt>
ERA value   Era name    Since (in Gregorian)
------------------------------------------------------
    0       N/A         N/A
    1       Meiji       1868-01-01 midnight local time
    2       Taisho      1912-07-30 midnight local time
    3       Showa       1926-12-25 midnight local time
    4       Heisei      1989-01-08 midnight local time
------------------------------------------------------
</tt></pre>

<p><code>ERA</code> value 0 specifies the years before Meiji and
the Gregorian year values are used. Unlike {@link
GregorianCalendar}, the Julian to Gregorian transition is not
supported because it doesn't make any sense to the Japanese
calendar systems used before Meiji. To represent the years before
Gregorian year 1, 0 and negative values are used. The Japanese
Imperial rescripts and government decrees don't specify how to deal
with time differences for applying the era transitions. This
calendar implementation assumes local time for all transitions.

@author Masayoshi Okutsu
@since 1.6
"
      classrelation 3525506 // <generalisation>
	relation 3525506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3525506 // <generalisation>
	  b parent class_ref 723586 // Calendar
      end

      attribute 2056962 "BEFORE_MEIJI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Implementation Notes

This implementation uses
sun.util.calendar.LocalGregorianCalendar to perform most of the
calendar calculations. LocalGregorianCalendar is configurable
and reads <JRE_HOME>/lib/calendars.properties at the start-up.


The ERA constant designating the era before Meiji.

"
      end

      attribute 2057090 "MEIJI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The ERA constant designating the Meiji era.

"
      end

      attribute 2057218 "TAISHO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The ERA constant designating the Taisho era.

"
      end

      attribute 2057346 "SHOWA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The ERA constant designating the Showa era.

"
      end

      attribute 2057474 "HEISEI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The ERA constant designating the Heisei era.

"
      end

      attribute 2057602 "EPOCH_OFFSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 719163"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fixed date of January 1, 1970 (Gregorian)"
      end

      attribute 2057730 "EPOCH_YEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1970"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2057858 "ONE_SECOND"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Useful millisecond constants.  Although ONE_DAY and ONE_WEEK can fit
 into ints, they must be longs in order to prevent arithmetic overflow
 when performing (bug 4173516).
"
      end

      attribute 2057986 "ONE_MINUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*ONE_SECOND"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2058114 "ONE_HOUR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*ONE_MINUTE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2058242 "ONE_DAY"
	class_attribute const_attribute private explicit_type "long"
	init_value " 24*ONE_HOUR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2058370 "ONE_WEEK"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7*ONE_DAY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2058498 "jcal"
	class_attribute const_attribute private explicit_type "LocalGregorianCalendar"
	init_value " (LocalGregorianCalendar) CalendarSystem.forName(\"japanese\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reference to the sun.util.calendar.LocalGregorianCalendar instance (singleton).
"
      end

      attribute 2058626 "gcal"
	class_attribute const_attribute private explicit_type "Gregorian"
	init_value " CalendarSystem.getGregorianCalendar()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Gregorian calendar instance. This is required because era
 transition dates are given in Gregorian dates.
"
      end

      attribute 2058754 "BEFORE_MEIJI_ERA"
	class_attribute const_attribute private explicit_type "Era"
	init_value " new Era(\"BeforeMeiji\", \"BM\", Long.MIN_VALUE, false)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The Era instance representing \"before Meiji\".
"
      end

      attribute 2058882 "eras"
	class_attribute const_attribute private explicit_type "Era"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Imperial eras. The sun.util.calendar.LocalGregorianCalendar
 doesn't have an Era representing before Meiji, which is
 inconvenient for a Calendar. So, era[0] is a reference to
 BEFORE_MEIJI_ERA.
"
      end

      attribute 2059010 "sinceFixedDates"
	class_attribute const_attribute private explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fixed date of the first date of each era.
"
      end

      attribute 2059138 "MIN_VALUES"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        0,              // ERA
        -292275055,     // YEAR
        JANUARY,        // MONTH
        1,              // WEEK_OF_YEAR
        0,              // WEEK_OF_MONTH
        1,              // DAY_OF_MONTH
        1,              // DAY_OF_YEAR
        SUNDAY,         // DAY_OF_WEEK
        1,              // DAY_OF_WEEK_IN_MONTH
        AM,             // AM_PM
        0,              // HOUR
        0,              // HOUR_OF_DAY
        0,              // MINUTE
        0,              // SECOND
        0,              // MILLISECOND
        -13*ONE_HOUR,   // ZONE_OFFSET (UNIX compatibility)
        0               // DST_OFFSET
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<pre>
                                Greatest       Least
Field name             Minimum   Minimum     Maximum     Maximum
----------             -------   -------     -------     -------
ERA                          0         0           1           1
YEAR                -292275055         1           ?           ?
MONTH                        0         0          11          11
WEEK_OF_YEAR                 1         1          52*         53
WEEK_OF_MONTH                0         0           4*          6
DAY_OF_MONTH                 1         1          28*         31
DAY_OF_YEAR                  1         1         365*        366
DAY_OF_WEEK                  1         1           7           7
DAY_OF_WEEK_IN_MONTH        -1        -1           4*          6
AM_PM                        0         0           1           1
HOUR                         0         0          11          11
HOUR_OF_DAY                  0         0          23          23
MINUTE                       0         0          59          59
SECOND                       0         0          59          59
MILLISECOND                  0         0         999         999
ZONE_OFFSET             -13:00    -13:00       14:00       14:00
DST_OFFSET                0:00      0:00        0:20        2:00
</pre>
*: depends on eras

"
      end

      attribute 2059266 "LEAST_MAX_VALUES"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        0,              // ERA (initialized later)
        0,              // YEAR (initialized later)
        JANUARY,        // MONTH (Showa 64 ended in January.)
        0,              // WEEK_OF_YEAR (Showa 1 has only 6 days which could be 0 weeks.)
        4,              // WEEK_OF_MONTH
        28,             // DAY_OF_MONTH
        0,              // DAY_OF_YEAR (initialized later)
        SATURDAY,       // DAY_OF_WEEK
        4,              // DAY_OF_WEEK_IN
        PM,             // AM_PM
        11,             // HOUR
        23,             // HOUR_OF_DAY
        59,             // MINUTE
        59,             // SECOND
        999,            // MILLISECOND
        14*ONE_HOUR,    // ZONE_OFFSET
        20*ONE_MINUTE   // DST_OFFSET (historical least maximum)
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2059394 "MAX_VALUES"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        0,              // ERA
        292278994,      // YEAR
        DECEMBER,       // MONTH
        53,             // WEEK_OF_YEAR
        6,              // WEEK_OF_MONTH
        31,             // DAY_OF_MONTH
        366,            // DAY_OF_YEAR
        SATURDAY,       // DAY_OF_WEEK
        6,              // DAY_OF_WEEK_IN
        PM,             // AM_PM
        11,             // HOUR
        23,             // HOUR_OF_DAY
        59,             // MINUTE
        59,             // SECOND
        999,            // MILLISECOND
        14*ONE_HOUR,    // ZONE_OFFSET
        2*ONE_HOUR      // DST_OFFSET (double summer time)
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2059522 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3364572813905467929L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Proclaim serialization compatibility with JDK 1.6
"
      end

      extra_member 172418 "initialization"
	
	cpp "" ""
	java "  static {
        Era[] es = jcal.getEras();
        int length = es.length + 1;
        eras = new Era[length];
        sinceFixedDates = new long[length];

        // eras[BEFORE_MEIJI] and sinceFixedDate[BEFORE_MEIJI] are the
        // same as Gregorian.
        int index = BEFORE_MEIJI;
        sinceFixedDates[index] = gcal.getFixedDate(BEFORE_MEIJI_ERA.getSinceDate());
        eras[index++] = BEFORE_MEIJI_ERA;
        for (Era e : es) {
            CalendarDate d = e.getSinceDate();
            sinceFixedDates[index] = gcal.getFixedDate(d);
            eras[index++] = e;
        }

        LEAST_MAX_VALUES[ERA] = MAX_VALUES[ERA] = eras.length - 1;

        // Calculate the least maximum year and least day of Year
        // values. The following code assumes that there's at most one
        // era transition in a Gregorian year.
        int year = Integer.MAX_VALUE;
        int dayOfYear = Integer.MAX_VALUE;
        CalendarDate date = gcal.newCalendarDate(TimeZone.NO_TIMEZONE);
        for (int i = 1; i < eras.length; i++) {
            long fd = sinceFixedDates[i];
            CalendarDate transitionDate = eras[i].getSinceDate();
            date.setDate(transitionDate.getYear(), BaseCalendar.JANUARY, 1);
            long fdd = gcal.getFixedDate(date);
            if (fd != fdd) {
                dayOfYear = Math.min((int)(fd - fdd) + 1, dayOfYear);
            }
            date.setDate(transitionDate.getYear(), BaseCalendar.DECEMBER, 31);
            fdd = gcal.getFixedDate(date);
            if (fd != fdd) {
                dayOfYear = Math.min((int)(fdd - fd) + 1, dayOfYear);
            }
            LocalGregorianCalendar.Date lgd = getCalendarDate(fd - 1);
            int y = lgd.getYear();
            // Unless the first year starts from January 1, the actual
            // max value could be one year short. For example, if it's
            // Showa 63 January 8, 63 is the actual max value since
            // Showa 64 January 8 doesn't exist.
            if (!(lgd.getMonth() == BaseCalendar.JANUARY && lgd.getDayOfMonth() == 1)) {
                y--;
            }
            year = Math.min(y, year);
        }
        LEAST_MAX_VALUES[YEAR] = year; // Max year could be smaller than this value.
        LEAST_MAX_VALUES[DAY_OF_YEAR] = dayOfYear;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 2059650 "jdate"
	private explicit_type "LocalGregorianCalendar.Date"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "jdate always has a sun.util.calendar.LocalGregorianCalendar.Date instance to
avoid overhead of creating it for each calculation.

"
      end

      attribute 2059778 "zoneOffsets"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary int[2] to get time zone offsets. zoneOffsets[0] gets
the GMT offset value and zoneOffsets[1] gets the daylight saving
value.

"
      end

      attribute 2059906 "originalFields"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary storage for saving original fields[] values in
non-lenient mode.

"
      end

      operation 8830082 "JapaneseImperialCalendar"
	package explicit_return_type ""
	nparams 2
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JapaneseImperialCalendar</code> based on the current time
in the given time zone with the given locale.

@param zone the given time zone.
@param aLocale the given locale.
"
      end

      operation 8830210 "JapaneseImperialCalendar"
	package explicit_return_type ""
	nparams 3
	  param inout name "zone" type class_ref 723970 // TimeZone
	  param inout name "aLocale" type class_ref 312962 // Locale
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an \"empty\" {@code JapaneseImperialCalendar}.

@param zone    the given time zone
@param aLocale the given locale
@param flag    the flag requesting an empty instance
"
      end

      operation 8830338 "getCalendarType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns {@code \"japanese\"} as the calendar type of this {@code
JapaneseImperialCalendar}.

@return {@code \"japanese\"}
"
      end

      operation 8830466 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>JapaneseImperialCalendar</code> to the specified
<code>Object</code>. The result is <code>true</code> if and
only if the argument is a <code>JapaneseImperialCalendar</code> object
that represents the same time value (millisecond offset from
the <a href=\"Calendar.html#Epoch\">Epoch</a>) under the same
<code>Calendar</code> parameters.

@param obj the object to compare with.
@return <code>true</code> if this object is equal to <code>obj</code>;
<code>false</code> otherwise.
@see Calendar#compareTo(Calendar)
"
      end

      operation 8830594 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the hash code for this
<code>JapaneseImperialCalendar</code> object.
"
      end

      operation 8830722 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "amount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified (signed) amount of time to the given calendar field,
based on the calendar's rules.

<p><em>Add rule 1</em>. The value of <code>field</code>
after the call minus the value of <code>field</code> before the
call is <code>amount</code>, modulo any overflow that has occurred in
<code>field</code>. Overflow occurs when a field value exceeds its
range and, as a result, the next larger field is incremented or
decremented and the field value is adjusted back into its range.</p>

<p><em>Add rule 2</em>. If a smaller field is expected to be
invariant, but it is impossible for it to be equal to its
prior value because of changes in its minimum or maximum after
<code>field</code> is changed, then its value is adjusted to be as close
as possible to its expected value. A smaller field represents a
smaller unit of time. <code>HOUR</code> is a smaller field than
<code>DAY_OF_MONTH</code>. No adjustment is made to smaller fields
that are not expected to be invariant. The calendar system
determines what fields are expected to be invariant.</p>

@param field the calendar field.
@param amount the amount of date or time to be added to the field.
@exception IllegalArgumentException if <code>field</code> is
<code>ZONE_OFFSET</code>, <code>DST_OFFSET</code>, or unknown,
or if any calendar fields have out-of-range values in
non-lenient mode.
"
      end

      operation 8830850 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param inout name "up" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8830978 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "amount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a signed amount to the specified calendar field without changing larger fields.
A negative roll amount means to subtract from field without changing
larger fields. If the specified amount is 0, this method performs nothing.

<p>This method calls {@link #complete()} before adding the
amount so that all the calendar fields are normalized. If there
is any calendar field having an out-of-range value in non-lenient mode, then an
<code>IllegalArgumentException</code> is thrown.

@param field the calendar field.
@param amount the signed amount to add to <code>field</code>.
@exception IllegalArgumentException if <code>field</code> is
<code>ZONE_OFFSET</code>, <code>DST_OFFSET</code>, or unknown,
or if any calendar fields have out-of-range values in
non-lenient mode.
@see #roll(int,boolean)
@see #add(int,int)
@see #set(int,int)
"
      end

      operation 8831106 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8831234 "getDisplayNames"
	public return_type class_ref 130178 // Map
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,Integer> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8831362 "getMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value for the given calendar field of this
<code>Calendar</code> instance. The minimum value is
defined as the smallest value returned by the {@link
Calendar#get(int) get} method for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
and {@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field.
@return the minimum value for the given calendar field.
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8831490 "getMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value for the given calendar field of this
<code>GregorianCalendar</code> instance. The maximum value is
defined as the largest value returned by the {@link
Calendar#get(int) get} method for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
and {@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field.
@return the maximum value for the given calendar field.
@see #getMinimum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8831618 "getGreatestMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the highest minimum value for the given calendar field
of this <code>GregorianCalendar</code> instance. The highest
minimum value is defined as the largest value returned by
{@link #getActualMinimum(int)} for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
and {@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field.
@return the highest minimum value for the given calendar field.
@see #getMinimum(int)
@see #getMaximum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8831746 "getLeastMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lowest maximum value for the given calendar field
of this <code>GregorianCalendar</code> instance. The lowest
maximum value is defined as the smallest value returned by
{@link #getActualMaximum(int)} for any possible time value,
taking into consideration the current values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
and {@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field
@return the lowest maximum value for the given calendar field.
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getActualMinimum(int)
@see #getActualMaximum(int)
"
      end

      operation 8831874 "getActualMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value that this calendar field could have,
taking into consideration the given time value and the current
values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
and {@link Calendar#getTimeZone() getTimeZone} methods.

@param field the calendar field
@return the minimum of the given field for the time value of
this <code>JapaneseImperialCalendar</code>
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMaximum(int)
"
      end

      operation 8832002 "getActualMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value that this calendar field could have,
taking into consideration the given time value and the current
values of the
{@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},
{@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},
and
{@link Calendar#getTimeZone() getTimeZone} methods.
For example, if the date of this instance is Heisei 16February 1,
the actual maximum value of the <code>DAY_OF_MONTH</code> field
is 29 because Heisei 16 is a leap year, and if the date of this
instance is Heisei 17 February 1, it's 28.

@param field the calendar field
@return the maximum of the given field for the time value of
this <code>JapaneseImperialCalendar</code>
@see #getMinimum(int)
@see #getMaximum(int)
@see #getGreatestMinimum(int)
@see #getLeastMaximum(int)
@see #getActualMinimum(int)
"
      end

      operation 8832130 "getYearOffsetInMillis"
	private explicit_return_type "long"
	nparams 1
	  param inout name "date" explicit_type "CalendarDate"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the millisecond offset from the beginning of the
year. In the year for Long.MIN_VALUE, it's a pseudo value
beyond the limit. The given CalendarDate object must have been
normalized before calling this method.
"
      end

      operation 8832258 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8832386 "getTimeZone"
	public return_type class_ref 723970 // TimeZone
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8832514 "setTimeZone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "zone" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2060034 "cachedFixedDate"
	private explicit_type "long"
	init_value " Long.MIN_VALUE"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The fixed date corresponding to jdate. If the value is
Long.MIN_VALUE, the fixed date value is unknown.

"
      end

      operation 8832642 "computeFields"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the time value (millisecond offset from the <a
href=\"Calendar.html#Epoch\">Epoch</a>) to calendar field values.
The time is <em>not</em>
recomputed first; to recompute the time, then the fields, call the
<code>complete</code> method.

@see Calendar#complete
"
      end

      operation 8832770 "computeFields"
	private explicit_return_type "int"
	nparams 2
	  param in name "fieldMask" explicit_type "int"
	  param in name "tzMask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This computeFields implements the conversion from UTC
(millisecond offset from the Epoch) to calendar
field values. fieldMask specifies which fields to change the
setting state to COMPUTED, although all fields are set to
the correct values. This is required to fix 4685354.

@param fieldMask a bit mask to specify which fields to change
the setting state.
@param tzMask a bit mask to specify which time zone offset
fields to be used for time calculations
@return a new field mask that indicates what field values have
actually been set.
"
      end

      operation 8832898 "getWeekNumber"
	private explicit_return_type "int"
	nparams 2
	  param in name "fixedDay1" explicit_type "long"
	  param in name "fixedDate" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of weeks in a period between fixedDay1 and
fixedDate. The getFirstDayOfWeek-getMinimalDaysInFirstWeek rule
is applied to calculate the number of weeks.

@param fixedDay1 the fixed date of the first day of the period
@param fixedDate the fixed date of the last day of the period
@return the number of weeks of the given period
"
      end

      operation 8833026 "computeTime"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts calendar field values to the time value (millisecond
offset from the <a href=\"Calendar.html#Epoch\">Epoch</a>).

@exception IllegalArgumentException if any calendar fields are invalid.
"
      end

      operation 8833154 "getFixedDate"
	private explicit_return_type "long"
	nparams 3
	  param in name "era" explicit_type "int"
	  param in name "year" explicit_type "int"
	  param in name "fieldMask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the fixed date under either the Gregorian or the
Julian calendar, using the given year and the specified calendar fields.

@param era era index
@param year the normalized year number, with 0 indicating the
year 1 BCE, -1 indicating 2 BCE, etc.
@param fieldMask the calendar fields to be used for the date calculation
@return the fixed date
@see Calendar#selectFields
"
      end

      operation 8833282 "getFixedDateJan1"
	private explicit_return_type "long"
	nparams 2
	  param inout name "date" explicit_type "LocalGregorianCalendar.Date"
	  param in name "fixedDate" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fixed date of the first day of the year (usually
January 1) before the specified date.

@param date the date for which the first day of the year is
calculated. The date has to be in the cut-over year.
@param fixedDate the fixed date representation of the date
"
      end

      operation 8833410 "getFixedDateMonth1"
	private explicit_return_type "long"
	nparams 2
	  param inout name "date" explicit_type "LocalGregorianCalendar.Date"
	  param in name "fixedDate" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fixed date of the first date of the month (usually
the 1st of the month) before the specified date.

@param date the date for which the first day of the month is
calculated. The date must be in the era transition year.
@param fixedDate the fixed date representation of the date
"
      end

      operation 8833538 "getCalendarDate"
	class_operation private explicit_return_type "LocalGregorianCalendar.Date"
	nparams 1
	  param in name "fd" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a LocalGregorianCalendar.Date produced from the specified fixed date.

@param fd the fixed date
"
      end

      operation 8833666 "monthLength"
	private explicit_return_type "int"
	nparams 2
	  param in name "month" explicit_type "int"
	  param in name "gregorianYear" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the specified month in the specified
Gregorian year. The year number must be normalized.

@see GregorianCalendar#isLeapYear(int)
"
      end

      operation 8833794 "monthLength"
	private explicit_return_type "int"
	nparams 1
	  param in name "month" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the specified month in the year provided
by internalGet(YEAR).

@see GregorianCalendar#isLeapYear(int)
"
      end

      operation 8833922 "actualMonthLength"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8834050 "getTransitionEraIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "date" explicit_type "LocalGregorianCalendar.Date"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index to the new era if the given date is in a
transition month.  For example, if the give date is Heisei 1
(1989) January 20, then the era index for Heisei is
returned. Likewise, if the given date is Showa 64 (1989)
January 3, then the era index for Heisei is returned. If the
given date is not in any transition month, then -1 is returned.
"
      end

      operation 8834178 "isTransitionYear"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "normalizedYear" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8834306 "getEraIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "date" explicit_type "LocalGregorianCalendar.Date"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8834434 "getNormalizedCalendar"
	private return_type class_ref 1086338 // JapaneseImperialCalendar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object if it's normalized (all fields and time are
in sync). Otherwise, a cloned object is returned after calling
complete() in lenient mode.
"
      end

      operation 8834562 "pinDayOfMonth"
	private explicit_return_type "void"
	nparams 1
	  param inout name "date" explicit_type "LocalGregorianCalendar.Date"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After adjustments such as add(MONTH), add(YEAR), we don't want the
month to jump around.  E.g., we don't want Jan 31 + 1 month to go to Mar
3, we want it to go to Feb 28.  Adjustments which might run into this
problem call this method to retain the proper month.
"
      end

      operation 8834690 "getRolledValue"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "amount" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the new value after 'roll'ing the specified value and amount.
"
      end

      operation 8834818 "internalGetEra"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ERA.  We need a special method for this because the
default ERA is the current era, but a zero (unset) ERA means before Meiji.
"
      end

      operation 8834946 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates internal state.
"
      end
    end

    class 1086466 "JumboEnumSet"
      visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends "Enum<E>"
      nactuals 1
      actual class class_ref 1081986 // EnumSet
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Private implementation class for EnumSet, for \"jumbo\" enum types
(i.e., those with more than 64 elements).

@author Josh Bloch
@since 1.5
@serial exclude
"
      classrelation 3525634 // <realization>
	relation 3525634 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3525634 // <realization>
	  b parent class_ref 1081986 // EnumSet
      end

      attribute 2060162 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 334349849919042784L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2060290 "elements"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bit vector representation of this set.  The ith bit of the jth
element of this array represents the  presence of universe[64*j +i]
in this set.

"
      end

      attribute 2060418 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Redundant - maintained for performance
"
      end

      operation 8835074 "JumboEnumSet"
	cpp_inline package explicit_return_type ""
	nparams 2
	  param inout name "elementType" type class_ref 130818 // Class
	  param inout name "universe" type class_ref 172034 // Enum
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<?>[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8835202 "addRange"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "from" explicit_type "E"
	  param inout name "to" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8835330 "addAll"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8835458 "complement"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8835586 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements contained in this set.  The
iterator traverses the elements in their <i>natural order</i> (which is
the order in which the enum constants are declared). The returned
Iterator is a \"weakly consistent\" iterator that will never throw {@link
ConcurrentModificationException}.

@return an iterator over the elements contained in this set
"
      end

      class 1086594 "EnumSetIterator"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends "Enum<E>"
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3525762 // <realization>
	  relation 3525762 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3525762 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 2060546 "unseen"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A bit vector representing the elements in the current \"word\"
of the set not yet returned by this iterator.

"
	end

	attribute 2060674 "unseenIndex"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The index corresponding to unseen in the elements array.

"
	end

	attribute 2060802 "lastReturned"
	  package explicit_type "long"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The bit representing the last element returned by this iterator
but not removed, or zero if no such element exists.

"
	end

	attribute 2060930 "lastReturnedIndex"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The index corresponding to lastReturned in the elements array.

"
	end

	operation 8835714 "EnumSetIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8835842 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8835970 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8836098 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 8836226 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this set.

@return the number of elements in this set
"
      end

      operation 8836354 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains no elements.

@return <tt>true</tt> if this set contains no elements
"
      end

      operation 8836482 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains the specified element.

@param e element to be checked for containment in this collection
@return <tt>true</tt> if this set contains the specified element
"
      end

      operation 8836610 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Adds the specified element to this set if it is not already present.

@param e element to be added to this set
@return <tt>true</tt> if the set changed as a result of the call

@throws NullPointerException if <tt>e</tt> is null
"
      end

      operation 8836738 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified element from this set if it is present.

@param e element to be removed from this set, if present
@return <tt>true</tt> if the set contained the specified element
"
      end

      operation 8836866 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Returns <tt>true</tt> if this set contains all of the elements
in the specified collection.

@param c collection to be checked for containment in this set
@return <tt>true</tt> if this set contains all of the elements
       in the specified collection
@throws NullPointerException if the specified collection is null
"
      end

      operation 8836994 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this set.

@param c collection whose elements are to be added to this set
@return <tt>true</tt> if this set changed as a result of the call
@throws NullPointerException if the specified collection or any of
    its elements are null
"
      end

      operation 8837122 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this set all of its elements that are contained in
the specified collection.

@param c elements to be removed from this set
@return <tt>true</tt> if this set changed as a result of the call
@throws NullPointerException if the specified collection is null
"
      end

      operation 8837250 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this set that are contained in the
specified collection.

@param c elements to be retained in this set
@return <tt>true</tt> if this set changed as a result of the call
@throws NullPointerException if the specified collection is null
"
      end

      operation 8837378 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this set.
"
      end

      operation 8837506 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified object with this set for equality.  Returns
<tt>true</tt> if the given object is also a set, the two sets have
the same size, and every member of the given set is contained in
this set.

@param o object to be compared for equality with this set
@return <tt>true</tt> if the specified object is equal to this set
"
      end

      operation 8837634 "recalculateSize"
	cpp_inline private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recalculates the size of the set.  Returns true if it's changed.
"
      end

      operation 8837762 "clone"
	cpp_inline public return_type class_ref 1081986 // EnumSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1087874 "LocaleISOData"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3532418 // isoLanguageTable (<unidirectional association>)
	relation 3532418 --->
	  a role_name "isoLanguageTable" init_value "
          \"aa\" + \"aar\"  // Afar
        + \"ab\" + \"abk\"  // Abkhazian
        + \"ae\" + \"ave\"  // Avestan
        + \"af\" + \"afr\"  // Afrikaans
        + \"ak\" + \"aka\"  // Akan
        + \"am\" + \"amh\"  // Amharic
        + \"an\" + \"arg\"  // Aragonese
        + \"ar\" + \"ara\"  // Arabic
        + \"as\" + \"asm\"  // Assamese
        + \"av\" + \"ava\"  // Avaric
        + \"ay\" + \"aym\"  // Aymara
        + \"az\" + \"aze\"  // Azerbaijani
        + \"ba\" + \"bak\"  // Bashkir
        + \"be\" + \"bel\"  // Belarusian
        + \"bg\" + \"bul\"  // Bulgarian
        + \"bh\" + \"bih\"  // Bihari
        + \"bi\" + \"bis\"  // Bislama
        + \"bm\" + \"bam\"  // Bambara
        + \"bn\" + \"ben\"  // Bengali
        + \"bo\" + \"bod\"  // Tibetan
        + \"br\" + \"bre\"  // Breton
        + \"bs\" + \"bos\"  // Bosnian
        + \"ca\" + \"cat\"  // Catalan
        + \"ce\" + \"che\"  // Chechen
        + \"ch\" + \"cha\"  // Chamorro
        + \"co\" + \"cos\"  // Corsican
        + \"cr\" + \"cre\"  // Cree
        + \"cs\" + \"ces\"  // Czech
        + \"cu\" + \"chu\"  // Church Slavic
        + \"cv\" + \"chv\"  // Chuvash
        + \"cy\" + \"cym\"  // Welsh
        + \"da\" + \"dan\"  // Danish
        + \"de\" + \"deu\"  // German
        + \"dv\" + \"div\"  // Divehi
        + \"dz\" + \"dzo\"  // Dzongkha
        + \"ee\" + \"ewe\"  // Ewe
        + \"el\" + \"ell\"  // Greek
        + \"en\" + \"eng\"  // English
        + \"eo\" + \"epo\"  // Esperanto
        + \"es\" + \"spa\"  // Spanish
        + \"et\" + \"est\"  // Estonian
        + \"eu\" + \"eus\"  // Basque
        + \"fa\" + \"fas\"  // Persian
        + \"ff\" + \"ful\"  // Fulah
        + \"fi\" + \"fin\"  // Finnish
        + \"fj\" + \"fij\"  // Fijian
        + \"fo\" + \"fao\"  // Faroese
        + \"fr\" + \"fra\"  // French
        + \"fy\" + \"fry\"  // Frisian
        + \"ga\" + \"gle\"  // Irish
        + \"gd\" + \"gla\"  // Scottish Gaelic
        + \"gl\" + \"glg\"  // Gallegan
        + \"gn\" + \"grn\"  // Guarani
        + \"gu\" + \"guj\"  // Gujarati
        + \"gv\" + \"glv\"  // Manx
        + \"ha\" + \"hau\"  // Hausa
        + \"he\" + \"heb\"  // Hebrew
        + \"hi\" + \"hin\"  // Hindi
        + \"ho\" + \"hmo\"  // Hiri Motu
        + \"hr\" + \"hrv\"  // Croatian
        + \"ht\" + \"hat\"  // Haitian
        + \"hu\" + \"hun\"  // Hungarian
        + \"hy\" + \"hye\"  // Armenian
        + \"hz\" + \"her\"  // Herero
        + \"ia\" + \"ina\"  // Interlingua
        + \"id\" + \"ind\"  // Indonesian
        + \"ie\" + \"ile\"  // Interlingue
        + \"ig\" + \"ibo\"  // Igbo
        + \"ii\" + \"iii\"  // Sichuan Yi
        + \"ik\" + \"ipk\"  // Inupiaq
        + \"in\" + \"ind\"  // Indonesian (old)
        + \"io\" + \"ido\"  // Ido
        + \"is\" + \"isl\"  // Icelandic
        + \"it\" + \"ita\"  // Italian
        + \"iu\" + \"iku\"  // Inuktitut
        + \"iw\" + \"heb\"  // Hebrew (old)
        + \"ja\" + \"jpn\"  // Japanese
        + \"ji\" + \"yid\"  // Yiddish (old)
        + \"jv\" + \"jav\"  // Javanese
        + \"ka\" + \"kat\"  // Georgian
        + \"kg\" + \"kon\"  // Kongo
        + \"ki\" + \"kik\"  // Kikuyu
        + \"kj\" + \"kua\"  // Kwanyama
        + \"kk\" + \"kaz\"  // Kazakh
        + \"kl\" + \"kal\"  // Greenlandic
        + \"km\" + \"khm\"  // Khmer
        + \"kn\" + \"kan\"  // Kannada
        + \"ko\" + \"kor\"  // Korean
        + \"kr\" + \"kau\"  // Kanuri
        + \"ks\" + \"kas\"  // Kashmiri
        + \"ku\" + \"kur\"  // Kurdish
        + \"kv\" + \"kom\"  // Komi
        + \"kw\" + \"cor\"  // Cornish
        + \"ky\" + \"kir\"  // Kirghiz
        + \"la\" + \"lat\"  // Latin
        + \"lb\" + \"ltz\"  // Luxembourgish
        + \"lg\" + \"lug\"  // Ganda
        + \"li\" + \"lim\"  // Limburgish
        + \"ln\" + \"lin\"  // Lingala
        + \"lo\" + \"lao\"  // Lao
        + \"lt\" + \"lit\"  // Lithuanian
        + \"lu\" + \"lub\"  // Luba-Katanga
        + \"lv\" + \"lav\"  // Latvian
        + \"mg\" + \"mlg\"  // Malagasy
        + \"mh\" + \"mah\"  // Marshallese
        + \"mi\" + \"mri\"  // Maori
        + \"mk\" + \"mkd\"  // Macedonian
        + \"ml\" + \"mal\"  // Malayalam
        + \"mn\" + \"mon\"  // Mongolian
        + \"mo\" + \"mol\"  // Moldavian
        + \"mr\" + \"mar\"  // Marathi
        + \"ms\" + \"msa\"  // Malay
        + \"mt\" + \"mlt\"  // Maltese
        + \"my\" + \"mya\"  // Burmese
        + \"na\" + \"nau\"  // Nauru
        + \"nb\" + \"nob\"  // Norwegian Bokm?l
        + \"nd\" + \"nde\"  // North Ndebele
        + \"ne\" + \"nep\"  // Nepali
        + \"ng\" + \"ndo\"  // Ndonga
        + \"nl\" + \"nld\"  // Dutch
        + \"nn\" + \"nno\"  // Norwegian Nynorsk
        + \"no\" + \"nor\"  // Norwegian
        + \"nr\" + \"nbl\"  // South Ndebele
        + \"nv\" + \"nav\"  // Navajo
        + \"ny\" + \"nya\"  // Nyanja
        + \"oc\" + \"oci\"  // Occitan
        + \"oj\" + \"oji\"  // Ojibwa
        + \"om\" + \"orm\"  // Oromo
        + \"or\" + \"ori\"  // Oriya
        + \"os\" + \"oss\"  // Ossetian
        + \"pa\" + \"pan\"  // Panjabi
        + \"pi\" + \"pli\"  // Pali
        + \"pl\" + \"pol\"  // Polish
        + \"ps\" + \"pus\"  // Pushto
        + \"pt\" + \"por\"  // Portuguese
        + \"qu\" + \"que\"  // Quechua
        + \"rm\" + \"roh\"  // Raeto-Romance
        + \"rn\" + \"run\"  // Rundi
        + \"ro\" + \"ron\"  // Romanian
        + \"ru\" + \"rus\"  // Russian
        + \"rw\" + \"kin\"  // Kinyarwanda
        + \"sa\" + \"san\"  // Sanskrit
        + \"sc\" + \"srd\"  // Sardinian
        + \"sd\" + \"snd\"  // Sindhi
        + \"se\" + \"sme\"  // Northern Sami
        + \"sg\" + \"sag\"  // Sango
        + \"si\" + \"sin\"  // Sinhalese
        + \"sk\" + \"slk\"  // Slovak
        + \"sl\" + \"slv\"  // Slovenian
        + \"sm\" + \"smo\"  // Samoan
        + \"sn\" + \"sna\"  // Shona
        + \"so\" + \"som\"  // Somali
        + \"sq\" + \"sqi\"  // Albanian
        + \"sr\" + \"srp\"  // Serbian
        + \"ss\" + \"ssw\"  // Swati
        + \"st\" + \"sot\"  // Southern Sotho
        + \"su\" + \"sun\"  // Sundanese
        + \"sv\" + \"swe\"  // Swedish
        + \"sw\" + \"swa\"  // Swahili
        + \"ta\" + \"tam\"  // Tamil
        + \"te\" + \"tel\"  // Telugu
        + \"tg\" + \"tgk\"  // Tajik
        + \"th\" + \"tha\"  // Thai
        + \"ti\" + \"tir\"  // Tigrinya
        + \"tk\" + \"tuk\"  // Turkmen
        + \"tl\" + \"tgl\"  // Tagalog
        + \"tn\" + \"tsn\"  // Tswana
        + \"to\" + \"ton\"  // Tonga
        + \"tr\" + \"tur\"  // Turkish
        + \"ts\" + \"tso\"  // Tsonga
        + \"tt\" + \"tat\"  // Tatar
        + \"tw\" + \"twi\"  // Twi
        + \"ty\" + \"tah\"  // Tahitian
        + \"ug\" + \"uig\"  // Uighur
        + \"uk\" + \"ukr\"  // Ukrainian
        + \"ur\" + \"urd\"  // Urdu
        + \"uz\" + \"uzb\"  // Uzbek
        + \"ve\" + \"ven\"  // Venda
        + \"vi\" + \"vie\"  // Vietnamese
        + \"vo\" + \"vol\"  // Volap?k
        + \"wa\" + \"wln\"  // Walloon
        + \"wo\" + \"wol\"  // Wolof
        + \"xh\" + \"xho\"  // Xhosa
        + \"yi\" + \"yid\"  // Yiddish
        + \"yo\" + \"yor\"  // Yoruba
        + \"za\" + \"zha\"  // Zhuang
        + \"zh\" + \"zho\"  // Chinese
        + \"zu\" + \"zul\"  // Zulu
        " class_relation const_relation package
	    comment "
The 2- and 3-letter ISO 639 language codes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3532418 // isoLanguageTable (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3532546 // isoCountryTable (<unidirectional association>)
	relation 3532546 --->
	  a role_name "isoCountryTable" init_value "
          \"AD\" + \"AND\"  // Andorra, Principality of
        + \"AE\" + \"ARE\"  // United Arab Emirates
        + \"AF\" + \"AFG\"  // Afghanistan
        + \"AG\" + \"ATG\"  // Antigua and Barbuda
        + \"AI\" + \"AIA\"  // Anguilla
        + \"AL\" + \"ALB\"  // Albania, People's Socialist Republic of
        + \"AM\" + \"ARM\"  // Armenia
        + \"AN\" + \"ANT\"  // Netherlands Antilles
        + \"AO\" + \"AGO\"  // Angola, Republic of
        + \"AQ\" + \"ATA\"  // Antarctica (the territory South of 60 deg S)
        + \"AR\" + \"ARG\"  // Argentina, Argentine Republic
        + \"AS\" + \"ASM\"  // American Samoa
        + \"AT\" + \"AUT\"  // Austria, Republic of
        + \"AU\" + \"AUS\"  // Australia, Commonwealth of
        + \"AW\" + \"ABW\"  // Aruba
        + \"AX\" + \"ALA\"  // \\u00c5land Islands
        + \"AZ\" + \"AZE\"  // Azerbaijan, Republic of
        + \"BA\" + \"BIH\"  // Bosnia and Herzegovina
        + \"BB\" + \"BRB\"  // Barbados
        + \"BD\" + \"BGD\"  // Bangladesh, People's Republic of
        + \"BE\" + \"BEL\"  // Belgium, Kingdom of
        + \"BF\" + \"BFA\"  // Burkina Faso
        + \"BG\" + \"BGR\"  // Bulgaria, People's Republic of
        + \"BH\" + \"BHR\"  // Bahrain, Kingdom of
        + \"BI\" + \"BDI\"  // Burundi, Republic of
        + \"BJ\" + \"BEN\"  // Benin, People's Republic of
        + \"BL\" + \"BLM\"  // Saint Barth\\u00e9lemy
        + \"BM\" + \"BMU\"  // Bermuda
        + \"BN\" + \"BRN\"  // Brunei Darussalam
        + \"BO\" + \"BOL\"  // Bolivia, Republic of
        + \"BQ\" + \"BES\"  // Bonaire, Sint Eustatius and Saba
        + \"BR\" + \"BRA\"  // Brazil, Federative Republic of
        + \"BS\" + \"BHS\"  // Bahamas, Commonwealth of the
        + \"BT\" + \"BTN\"  // Bhutan, Kingdom of
        + \"BV\" + \"BVT\"  // Bouvet Island (Bouvetoya)
        + \"BW\" + \"BWA\"  // Botswana, Republic of
        + \"BY\" + \"BLR\"  // Belarus
        + \"BZ\" + \"BLZ\"  // Belize
        + \"CA\" + \"CAN\"  // Canada
        + \"CC\" + \"CCK\"  // Cocos (Keeling) Islands
        + \"CD\" + \"COD\"  // Congo, Democratic Republic of
        + \"CF\" + \"CAF\"  // Central African Republic
        + \"CG\" + \"COG\"  // Congo, People's Republic of
        + \"CH\" + \"CHE\"  // Switzerland, Swiss Confederation
        + \"CI\" + \"CIV\"  // Cote D'Ivoire, Ivory Coast, Republic of the
        + \"CK\" + \"COK\"  // Cook Islands
        + \"CL\" + \"CHL\"  // Chile, Republic of
        + \"CM\" + \"CMR\"  // Cameroon, United Republic of
        + \"CN\" + \"CHN\"  // China, People's Republic of
        + \"CO\" + \"COL\"  // Colombia, Republic of
        + \"CR\" + \"CRI\"  // Costa Rica, Republic of
//      + \"CS\" + \"SCG\"  // Serbia and Montenegro
        + \"CU\" + \"CUB\"  // Cuba, Republic of
        + \"CV\" + \"CPV\"  // Cape Verde, Republic of
        + \"CW\" + \"CUW\"  // Cura\\u00e7ao
        + \"CX\" + \"CXR\"  // Christmas Island
        + \"CY\" + \"CYP\"  // Cyprus, Republic of
        + \"CZ\" + \"CZE\"  // Czech Republic
        + \"DE\" + \"DEU\"  // Germany
        + \"DJ\" + \"DJI\"  // Djibouti, Republic of
        + \"DK\" + \"DNK\"  // Denmark, Kingdom of
        + \"DM\" + \"DMA\"  // Dominica, Commonwealth of
        + \"DO\" + \"DOM\"  // Dominican Republic
        + \"DZ\" + \"DZA\"  // Algeria, People's Democratic Republic of
        + \"EC\" + \"ECU\"  // Ecuador, Republic of
        + \"EE\" + \"EST\"  // Estonia
        + \"EG\" + \"EGY\"  // Egypt, Arab Republic of
        + \"EH\" + \"ESH\"  // Western Sahara
        + \"ER\" + \"ERI\"  // Eritrea
        + \"ES\" + \"ESP\"  // Spain, Spanish State
        + \"ET\" + \"ETH\"  // Ethiopia
        + \"FI\" + \"FIN\"  // Finland, Republic of
        + \"FJ\" + \"FJI\"  // Fiji, Republic of the Fiji Islands
        + \"FK\" + \"FLK\"  // Falkland Islands (Malvinas)
        + \"FM\" + \"FSM\"  // Micronesia, Federated States of
        + \"FO\" + \"FRO\"  // Faeroe Islands
        + \"FR\" + \"FRA\"  // France, French Republic
        + \"GA\" + \"GAB\"  // Gabon, Gabonese Republic
        + \"GB\" + \"GBR\"  // United Kingdom of Great Britain & N. Ireland
        + \"GD\" + \"GRD\"  // Grenada
        + \"GE\" + \"GEO\"  // Georgia
        + \"GF\" + \"GUF\"  // French Guiana
        + \"GG\" + \"GGY\"  // Guernsey
        + \"GH\" + \"GHA\"  // Ghana, Republic of
        + \"GI\" + \"GIB\"  // Gibraltar
        + \"GL\" + \"GRL\"  // Greenland
        + \"GM\" + \"GMB\"  // Gambia, Republic of the
        + \"GN\" + \"GIN\"  // Guinea, Revolutionary People's Rep'c of
        + \"GP\" + \"GLP\"  // Guadaloupe
        + \"GQ\" + \"GNQ\"  // Equatorial Guinea, Republic of
        + \"GR\" + \"GRC\"  // Greece, Hellenic Republic
        + \"GS\" + \"SGS\"  // South Georgia and the South Sandwich Islands
        + \"GT\" + \"GTM\"  // Guatemala, Republic of
        + \"GU\" + \"GUM\"  // Guam
        + \"GW\" + \"GNB\"  // Guinea-Bissau, Republic of
        + \"GY\" + \"GUY\"  // Guyana, Republic of
        + \"HK\" + \"HKG\"  // Hong Kong, Special Administrative Region of China
        + \"HM\" + \"HMD\"  // Heard and McDonald Islands
        + \"HN\" + \"HND\"  // Honduras, Republic of
        + \"HR\" + \"HRV\"  // Hrvatska (Croatia)
        + \"HT\" + \"HTI\"  // Haiti, Republic of
        + \"HU\" + \"HUN\"  // Hungary, Hungarian People's Republic
        + \"ID\" + \"IDN\"  // Indonesia, Republic of
        + \"IE\" + \"IRL\"  // Ireland
        + \"IL\" + \"ISR\"  // Israel, State of
        + \"IM\" + \"IMN\"  // Isle of Man
        + \"IN\" + \"IND\"  // India, Republic of
        + \"IO\" + \"IOT\"  // British Indian Ocean Territory (Chagos Archipelago)
        + \"IQ\" + \"IRQ\"  // Iraq, Republic of
        + \"IR\" + \"IRN\"  // Iran, Islamic Republic of
        + \"IS\" + \"ISL\"  // Iceland, Republic of
        + \"IT\" + \"ITA\"  // Italy, Italian Republic
        + \"JE\" + \"JEY\"  // Jersey
        + \"JM\" + \"JAM\"  // Jamaica
        + \"JO\" + \"JOR\"  // Jordan, Hashemite Kingdom of
        + \"JP\" + \"JPN\"  // Japan
        + \"KE\" + \"KEN\"  // Kenya, Republic of
        + \"KG\" + \"KGZ\"  // Kyrgyz Republic
        + \"KH\" + \"KHM\"  // Cambodia, Kingdom of
        + \"KI\" + \"KIR\"  // Kiribati, Republic of
        + \"KM\" + \"COM\"  // Comoros, Union of the
        + \"KN\" + \"KNA\"  // St. Kitts and Nevis
        + \"KP\" + \"PRK\"  // Korea, Democratic People's Republic of
        + \"KR\" + \"KOR\"  // Korea, Republic of
        + \"KW\" + \"KWT\"  // Kuwait, State of
        + \"KY\" + \"CYM\"  // Cayman Islands
        + \"KZ\" + \"KAZ\"  // Kazakhstan, Republic of
        + \"LA\" + \"LAO\"  // Lao People's Democratic Republic
        + \"LB\" + \"LBN\"  // Lebanon, Lebanese Republic
        + \"LC\" + \"LCA\"  // St. Lucia
        + \"LI\" + \"LIE\"  // Liechtenstein, Principality of
        + \"LK\" + \"LKA\"  // Sri Lanka, Democratic Socialist Republic of
        + \"LR\" + \"LBR\"  // Liberia, Republic of
        + \"LS\" + \"LSO\"  // Lesotho, Kingdom of
        + \"LT\" + \"LTU\"  // Lithuania
        + \"LU\" + \"LUX\"  // Luxembourg, Grand Duchy of
        + \"LV\" + \"LVA\"  // Latvia
        + \"LY\" + \"LBY\"  // Libyan Arab Jamahiriya
        + \"MA\" + \"MAR\"  // Morocco, Kingdom of
        + \"MC\" + \"MCO\"  // Monaco, Principality of
        + \"MD\" + \"MDA\"  // Moldova, Republic of
        + \"ME\" + \"MNE\"  // Montenegro, Republic of
        + \"MF\" + \"MAF\"  // Saint Martin
        + \"MG\" + \"MDG\"  // Madagascar, Republic of
        + \"MH\" + \"MHL\"  // Marshall Islands
        + \"MK\" + \"MKD\"  // Macedonia, the former Yugoslav Republic of
        + \"ML\" + \"MLI\"  // Mali, Republic of
        + \"MM\" + \"MMR\"  // Myanmar
        + \"MN\" + \"MNG\"  // Mongolia, Mongolian People's Republic
        + \"MO\" + \"MAC\"  // Macao, Special Administrative Region of China
        + \"MP\" + \"MNP\"  // Northern Mariana Islands
        + \"MQ\" + \"MTQ\"  // Martinique
        + \"MR\" + \"MRT\"  // Mauritania, Islamic Republic of
        + \"MS\" + \"MSR\"  // Montserrat
        + \"MT\" + \"MLT\"  // Malta, Republic of
        + \"MU\" + \"MUS\"  // Mauritius
        + \"MV\" + \"MDV\"  // Maldives, Republic of
        + \"MW\" + \"MWI\"  // Malawi, Republic of
        + \"MX\" + \"MEX\"  // Mexico, United Mexican States
        + \"MY\" + \"MYS\"  // Malaysia
        + \"MZ\" + \"MOZ\"  // Mozambique, People's Republic of
        + \"NA\" + \"NAM\"  // Namibia
        + \"NC\" + \"NCL\"  // New Caledonia
        + \"NE\" + \"NER\"  // Niger, Republic of the
        + \"NF\" + \"NFK\"  // Norfolk Island
        + \"NG\" + \"NGA\"  // Nigeria, Federal Republic of
        + \"NI\" + \"NIC\"  // Nicaragua, Republic of
        + \"NL\" + \"NLD\"  // Netherlands, Kingdom of the
        + \"NO\" + \"NOR\"  // Norway, Kingdom of
        + \"NP\" + \"NPL\"  // Nepal, Kingdom of
        + \"NR\" + \"NRU\"  // Nauru, Republic of
        + \"NU\" + \"NIU\"  // Niue, Republic of
        + \"NZ\" + \"NZL\"  // New Zealand
        + \"OM\" + \"OMN\"  // Oman, Sultanate of
        + \"PA\" + \"PAN\"  // Panama, Republic of
        + \"PE\" + \"PER\"  // Peru, Republic of
        + \"PF\" + \"PYF\"  // French Polynesia
        + \"PG\" + \"PNG\"  // Papua New Guinea
        + \"PH\" + \"PHL\"  // Philippines, Republic of the
        + \"PK\" + \"PAK\"  // Pakistan, Islamic Republic of
        + \"PL\" + \"POL\"  // Poland, Republic of Poland
        + \"PM\" + \"SPM\"  // St. Pierre and Miquelon
        + \"PN\" + \"PCN\"  // Pitcairn Island
        + \"PR\" + \"PRI\"  // Puerto Rico
        + \"PS\" + \"PSE\"  // Palestinian Territory, Occupied
        + \"PT\" + \"PRT\"  // Portugal, Portuguese Republic
        + \"PW\" + \"PLW\"  // Palau
        + \"PY\" + \"PRY\"  // Paraguay, Republic of
        + \"QA\" + \"QAT\"  // Qatar, State of
        + \"RE\" + \"REU\"  // Reunion
        + \"RO\" + \"ROU\"  // Romania, Socialist Republic of
        + \"RS\" + \"SRB\"  // Serbia, Republic of
        + \"RU\" + \"RUS\"  // Russian Federation
        + \"RW\" + \"RWA\"  // Rwanda, Rwandese Republic
        + \"SA\" + \"SAU\"  // Saudi Arabia, Kingdom of
        + \"SB\" + \"SLB\"  // Solomon Islands
        + \"SC\" + \"SYC\"  // Seychelles, Republic of
        + \"SD\" + \"SDN\"  // Sudan, Democratic Republic of the
        + \"SE\" + \"SWE\"  // Sweden, Kingdom of
        + \"SG\" + \"SGP\"  // Singapore, Republic of
        + \"SH\" + \"SHN\"  // St. Helena
        + \"SI\" + \"SVN\"  // Slovenia
        + \"SJ\" + \"SJM\"  // Svalbard & Jan Mayen Islands
        + \"SK\" + \"SVK\"  // Slovakia (Slovak Republic)
        + \"SL\" + \"SLE\"  // Sierra Leone, Republic of
        + \"SM\" + \"SMR\"  // San Marino, Republic of
        + \"SN\" + \"SEN\"  // Senegal, Republic of
        + \"SO\" + \"SOM\"  // Somalia, Somali Republic
        + \"SR\" + \"SUR\"  // Suriname, Republic of
        + \"SS\" + \"SSD\"  // South Sudan
        + \"ST\" + \"STP\"  // Sao Tome and Principe, Democratic Republic of
        + \"SV\" + \"SLV\"  // El Salvador, Republic of
        + \"SX\" + \"SXM\"  // Sint Maarten (Dutch part)
        + \"SY\" + \"SYR\"  // Syrian Arab Republic
        + \"SZ\" + \"SWZ\"  // Swaziland, Kingdom of
        + \"TC\" + \"TCA\"  // Turks and Caicos Islands
        + \"TD\" + \"TCD\"  // Chad, Republic of
        + \"TF\" + \"ATF\"  // French Southern Territories
        + \"TG\" + \"TGO\"  // Togo, Togolese Republic
        + \"TH\" + \"THA\"  // Thailand, Kingdom of
        + \"TJ\" + \"TJK\"  // Tajikistan
        + \"TK\" + \"TKL\"  // Tokelau (Tokelau Islands)
        + \"TL\" + \"TLS\"  // Timor-Leste, Democratic Republic of
        + \"TM\" + \"TKM\"  // Turkmenistan
        + \"TN\" + \"TUN\"  // Tunisia, Republic of
        + \"TO\" + \"TON\"  // Tonga, Kingdom of
        + \"TR\" + \"TUR\"  // Turkey, Republic of
        + \"TT\" + \"TTO\"  // Trinidad and Tobago, Republic of
        + \"TV\" + \"TUV\"  // Tuvalu
        + \"TW\" + \"TWN\"  // Taiwan, Province of China
        + \"TZ\" + \"TZA\"  // Tanzania, United Republic of
        + \"UA\" + \"UKR\"  // Ukraine
        + \"UG\" + \"UGA\"  // Uganda, Republic of
        + \"UM\" + \"UMI\"  // United States Minor Outlying Islands
        + \"US\" + \"USA\"  // United States of America
        + \"UY\" + \"URY\"  // Uruguay, Eastern Republic of
        + \"UZ\" + \"UZB\"  // Uzbekistan
        + \"VA\" + \"VAT\"  // Holy See (Vatican City State)
        + \"VC\" + \"VCT\"  // St. Vincent and the Grenadines
        + \"VE\" + \"VEN\"  // Venezuela, Bolivarian Republic of
        + \"VG\" + \"VGB\"  // British Virgin Islands
        + \"VI\" + \"VIR\"  // US Virgin Islands
        + \"VN\" + \"VNM\"  // Viet Nam, Socialist Republic of
        + \"VU\" + \"VUT\"  // Vanuatu
        + \"WF\" + \"WLF\"  // Wallis and Futuna Islands
        + \"WS\" + \"WSM\"  // Samoa, Independent State of
        + \"YE\" + \"YEM\"  // Yemen
        + \"YT\" + \"MYT\"  // Mayotte
        + \"ZA\" + \"ZAF\"  // South Africa, Republic of
        + \"ZM\" + \"ZMB\"  // Zambia, Republic of
        + \"ZW\" + \"ZWE\"  // Zimbabwe
        " class_relation const_relation package
	    comment "
The 2- and 3-letter ISO 3166 country codes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3532546 // isoCountryTable (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8857218 "LocaleISOData"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1088002 "LongSummaryStatistics"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A state object for collecting statistics such as count, min, max, sum, and
average.

<p>This class is designed to work with (though does not require)
{@linkplain java.util.stream streams}. For example, you can compute
summary statistics on a stream of longs with:
<pre> {@code
LongSummaryStatistics stats = longStream.collect(LongSummaryStatistics::new,
                                                 LongSummaryStatistics::accept,
                                                 LongSummaryStatistics::combine);
}</pre>

<p>{@code LongSummaryStatistics} can be used as a
{@linkplain java.util.stream.Stream#collect(Collector)} reduction}
target for a {@linkplain java.util.stream.Stream stream}. For example:

<pre> {@code
LongSummaryStatistics stats = people.stream()
                                    .collect(Collectors.summarizingLong(Person::getAge));
}</pre>

This computes, in a single pass, the count of people, as well as the minimum,
maximum, sum, and average of their ages.

@implNote This implementation is not thread safe. However, it is safe to use
{@link java.util.stream.Collectors#summarizingLong(java.util.function.ToLongFunction)
Collectors.toLongStatistics()} on a parallel stream, because the parallel
implementation of {@link java.util.stream.Stream#collect Stream.collect()}
provides the necessary partitioning, isolation, and merging of results for
safe and efficient parallel execution.

<p>This implementation does not check for overflow of the sum.
@since 1.8
"
      classrelation 3532674 // <realization>
	relation 3532674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3532674 // <realization>
	  b parent class_ref 376962 // LongConsumer
      end

      classrelation 3532802 // <realization>
	relation 3532802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3532802 // <realization>
	  b parent class_ref 376706 // IntConsumer
      end

      attribute 2064514 "count"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2064642 "sum"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2064770 "min"
	private explicit_type "long"
	init_value " Long.MAX_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2064898 "max"
	private explicit_type "long"
	init_value " Long.MIN_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8857602 "LongSummaryStatistics"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty instance with zero count, zero sum,
{@code Long.MAX_VALUE} min, {@code Long.MIN_VALUE} max and zero
average.
"
      end

      operation 8857730 "accept"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Records a new {@code int} value into the summary information.

@param value the input value
"
      end

      operation 8857858 "accept"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Records a new {@code long} value into the summary information.

@param value the input value
"
      end

      operation 8857986 "combine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 1088002 // LongSummaryStatistics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Combines the state of another {@code LongSummaryStatistics} into this
one.

@param other another {@code LongSummaryStatistics}
@throws NullPointerException if {@code other} is null
"
      end

      operation 8858114 "getCount"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the count of values recorded.

@return the count of values
"
      end

      operation 8858242 "getSum"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of values recorded, or zero if no values have been
recorded.

@return the sum of values, or zero if none
"
      end

      operation 8858370 "getMin"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value recorded, or {@code Long.MAX_VALUE} if no
values have been recorded.

@return the minimum value, or {@code Long.MAX_VALUE} if none
"
      end

      operation 8858498 "getMax"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value recorded, or {@code Long.MIN_VALUE} if no
values have been recorded

@return the maximum value, or {@code Long.MIN_VALUE} if none
"
      end

      operation 8858626 "getAverage"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arithmetic mean of values recorded, or zero if no values have been
recorded.

@return The arithmetic mean of values, or zero if none
"
      end

      operation 8858754 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Returns a non-empty string representation of this object suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.
"
      end
    end

    class 1088130 "MissingFormatArgumentException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when there is a format specifier which does not
have a corresponding argument or if an argument index refers to an argument
that does not exist.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3532930 // <generalisation>
	relation 3532930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3532930 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2065026 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19190115L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3533058 // s (<unidirectional association>)
	relation 3533058 --->
	  a role_name "s" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3533058 // s (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8858882 "MissingFormatArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the unmatched format
specifier.

@param  s
        Format specifier which does not have a corresponding argument
"
      end

      operation 8859010 "getFormatSpecifier"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unmatched format specifier.

@return  The unmatched format specifier
"
      end

      operation 8859138 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1088258 "MissingFormatWidthException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when the format width is required.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3533186 // <generalisation>
	relation 3533186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3533186 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2065154 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 15560123L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3533314 // s (<unidirectional association>)
	relation 3533314 --->
	  a role_name "s" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3533314 // s (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8859266 "MissingFormatWidthException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified format
specifier.

@param  s
        The format specifier which does not have a width
"
      end

      operation 8859394 "getFormatSpecifier"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the format specifier which does not have a width.

@return  The format specifier which does not have a width
"
      end

      operation 8859522 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1088386 "Objects"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class consists of {@code static} utility methods for operating
on objects.  These utilities include {@code null}-safe or {@code
null}-tolerant methods for computing the hash code of an object,
returning a string for an object, and comparing two objects.

@since 1.7
"
      operation 8860162 "Objects"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8860290 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 129538 // Object
	  param inout name "b" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the arguments are equal to each other
and {@code false} otherwise.
Consequently, if both arguments are {@code null}, {@code true}
is returned and if exactly one argument is {@code null}, {@code
false} is returned.  Otherwise, equality is determined by using
the {@link Object#equals equals} method of the first
argument.

@param a an object
@param b an object to be compared with {@code a} for equality
@return {@code true} if the arguments are equal to each other
and {@code false} otherwise
@see Object#equals(Object)
"
      end

      operation 8860418 "deepEquals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 129538 // Object
	  param inout name "b" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the arguments are deeply equal to each other
and {@code false} otherwise.

Two {@code null} values are deeply equal.  If both arguments are
arrays, the algorithm in {@link Arrays#deepEquals(Object[],
Object[]) Arrays.deepEquals} is used to determine equality.
Otherwise, equality is determined by using the {@link
Object#equals equals} method of the first argument.

@param a an object
@param b an object to be compared with {@code a} for deep equality
@return {@code true} if the arguments are deeply equal to each other
and {@code false} otherwise
@see Arrays#deepEquals(Object[], Object[])
@see Objects#equals(Object, Object)
"
      end

      operation 8860546 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code of a non-{@code null} argument and 0 for
a {@code null} argument.

@param o an object
@return the hash code of a non-{@code null} argument and 0 for
a {@code null} argument
@see Object#hashCode
"
      end

      operation 8860674 "hash"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "" explicit_type "Object...values"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a hash code for a sequence of input values. The hash
code is generated as if all the input values were placed into an
array, and that array were hashed by calling {@link
Arrays#hashCode(Object[])}.

<p>This method is useful for implementing {@link
Object#hashCode()} on objects containing multiple fields. For
example, if an object that has three fields, {@code x}, {@code
y}, and {@code z}, one could write:

<blockquote><pre>
&#064;Override public int hashCode() {
    return Objects.hash(x, y, z);
}
</pre></blockquote>

<b>Warning: When a single object reference is supplied, the returned
value does not equal the hash code of that object reference.</b> This
value can be computed by calling {@link #hashCode(Object)}.

@param values the values to be hashed
@return a hash value of the sequence of input values
@see Arrays#hashCode(Object[])
@see List#hashCode
"
      end

      operation 8860802 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of calling {@code toString} for a non-{@code
null} argument and {@code \"null\"} for a {@code null} argument.

@param o an object
@return the result of calling {@code toString} for a non-{@code
null} argument and {@code \"null\"} for a {@code null} argument
@see Object#toString
@see String#valueOf(Object)
"
      end

      operation 8860930 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "o" type class_ref 129538 // Object
	  param inout name "nullDefault" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of calling {@code toString} on the first
argument if the first argument is not {@code null} and returns
the second argument otherwise.

@param o an object
@param nullDefault string to return if the first argument is
       {@code null}
@return the result of calling {@code toString} on the first
argument if it is not {@code null} and the second argument
otherwise.
@see Objects#toString(Object)
"
      end

      operation 8861058 "compare"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "T"
	  param inout name "b" explicit_type "T"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 if the arguments are identical and {@code
c.compare(a, b)} otherwise.
Consequently, if both arguments are {@code null} 0
is returned.

<p>Note that if one of the arguments is {@code null}, a {@code
NullPointerException} may or may not be thrown depending on
what ordering policy, if any, the {@link Comparator Comparator}
chooses to have for {@code null} values.

@param <T> the type of the objects being compared
@param a an object
@param b an object to be compared with {@code a}
@param c the {@code Comparator} to compare the first two arguments
@return 0 if the arguments are identical and {@code
c.compare(a, b)} otherwise.
@see Comparable
@see Comparator
"
      end

      operation 8861186 "requireNonNull"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "obj" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the specified object reference is not {@code null}. This
method is designed primarily for doing parameter validation in methods
and constructors, as demonstrated below:
<blockquote><pre>
public Foo(Bar bar) {
    this.bar = Objects.requireNonNull(bar);
}
</pre></blockquote>

@param obj the object reference to check for nullity
@param <T> the type of the reference
@return {@code obj} if not {@code null}
@throws NullPointerException if {@code obj} is {@code null}
"
      end

      operation 8861314 "requireNonNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "obj" explicit_type "T"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the specified object reference is not {@code null} and
throws a customized {@link NullPointerException} if it is. This method
is designed primarily for doing parameter validation in methods and
constructors with multiple parameters, as demonstrated below:
<blockquote><pre>
public Foo(Bar bar, Baz baz) {
    this.bar = Objects.requireNonNull(bar, \"bar must not be null\");
    this.baz = Objects.requireNonNull(baz, \"baz must not be null\");
}
</pre></blockquote>

@param obj     the object reference to check for nullity
@param message detail message to be used in the event that a {@code
               NullPointerException} is thrown
@param <T> the type of the reference
@return {@code obj} if not {@code null}
@throws NullPointerException if {@code obj} is {@code null}
"
      end

      operation 8861442 "isNull"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the provided reference is {@code null} otherwise
returns {@code false}.

@apiNote This method exists to be used as a
{@link java.util.function.Predicate}, {@code filter(Objects::isNull)}

@param obj a reference to be checked against {@code null}
@return {@code true} if the provided reference is {@code null} otherwise
{@code false}

@see java.util.function.Predicate
@since 1.8
"
      end

      operation 8861570 "nonNull"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the provided reference is non-{@code null}
otherwise returns {@code false}.

@apiNote This method exists to be used as a
{@link java.util.function.Predicate}, {@code filter(Objects::nonNull)}

@param obj a reference to be checked against {@code null}
@return {@code true} if the provided reference is non-{@code null}
otherwise {@code false}

@see java.util.function.Predicate
@since 1.8
"
      end

      operation 8861698 "requireNonNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "obj" explicit_type "T"
	  param inout name "messageSupplier" type class_ref 933634 // Supplier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the specified object reference is not {@code null} and
throws a customized {@link NullPointerException} if it is.

<p>Unlike the method {@link #requireNonNull(Object, String)},
this method allows creation of the message to be deferred until
after the null check is made. While this may confer a
performance advantage in the non-null case, when deciding to
call this method care should be taken that the costs of
creating the message supplier are less than the cost of just
creating the string message directly.

@param obj     the object reference to check for nullity
@param messageSupplier supplier of the detail message to be
used in the event that a {@code NullPointerException} is thrown
@param <T> the type of the reference
@return {@code obj} if not {@code null}
@throws NullPointerException if {@code obj} is {@code null}
@since 1.8
"
      end
    end

    class 1088514 "Observable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an observable object, or \"data\"
in the model-view paradigm. It can be subclassed to represent an
object that the application wants to have observed.
<p>
An observable object can have one or more observers. An observer
may be any object that implements interface <tt>Observer</tt>. After an
observable instance changes, an application calling the
<code>Observable</code>'s <code>notifyObservers</code> method
causes all of its observers to be notified of the change by a call
to their <code>update</code> method.
<p>
The order in which notifications will be delivered is unspecified.
The default implementation provided in the Observable class will
notify Observers in the order in which they registered interest, but
subclasses may change this order, use no guaranteed order, deliver
notifications on separate threads, or may guarantee that their
subclass follows this order, as they choose.
<p>
Note that this notification mechanism has nothing to do with threads
and is completely separate from the <tt>wait</tt> and <tt>notify</tt>
mechanism of class <tt>Object</tt>.
<p>
When an observable object is newly created, its set of observers is
empty. Two observers are considered the same if and only if the
<tt>equals</tt> method returns true for them.

@author  Chris Warth
@see     java.util.Observable#notifyObservers()
@see     java.util.Observable#notifyObservers(java.lang.Object)
@see     java.util.Observer
@see     java.util.Observer#update(java.util.Observable, java.lang.Object)
@since   JDK1.0
"
      attribute 2065410 "changed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3533826 // obs (<unidirectional association>)
	relation 3533826 --->
	  a role_name "obs" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Observer> ${name}${value};
"
	    classrelation_ref 3533826 // obs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 8861826 "Observable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct an Observable with zero Observers. "
      end

      operation 8861954 "addObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 1088642 // Observer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an observer to the set of observers for this object, provided
that it is not the same as some observer already in the set.
The order in which notifications will be delivered to multiple
observers is not specified. See the class comment.

@param   o   an observer to be added.
@throws NullPointerException   if the parameter o is null.
"
      end

      operation 8862082 "deleteObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 1088642 // Observer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes an observer from the set of observers of this object.
Passing <CODE>null</CODE> to this method will have no effect.
@param   o   the observer to be deleted.
"
      end

      operation 8862210 "notifyObservers"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this object has changed, as indicated by the
<code>hasChanged</code> method, then notify all of its observers
and then call the <code>clearChanged</code> method to
indicate that this object has no longer changed.
<p>
Each observer has its <code>update</code> method called with two
arguments: this observable object and <code>null</code>. In other
words, this method is equivalent to:
<blockquote><tt>
notifyObservers(null)</tt></blockquote>

@see     java.util.Observable#clearChanged()
@see     java.util.Observable#hasChanged()
@see     java.util.Observer#update(java.util.Observable, java.lang.Object)
"
      end

      operation 8862338 "notifyObservers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this object has changed, as indicated by the
<code>hasChanged</code> method, then notify all of its observers
and then call the <code>clearChanged</code> method to indicate
that this object has no longer changed.
<p>
Each observer has its <code>update</code> method called with two
arguments: this observable object and the <code>arg</code> argument.

@param   arg   any object.
@see     java.util.Observable#clearChanged()
@see     java.util.Observable#hasChanged()
@see     java.util.Observer#update(java.util.Observable, java.lang.Object)
"
      end

      operation 8862466 "deleteObservers"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the observer list so that this object no longer has any observers.
"
      end

      operation 8862594 "setChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks this <tt>Observable</tt> object as having been changed; the
<tt>hasChanged</tt> method will now return <tt>true</tt>.
"
      end

      operation 8862722 "clearChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that this object has no longer changed, or that it has
already notified all of its observers of its most recent change,
so that the <tt>hasChanged</tt> method will now return <tt>false</tt>.
This method is called automatically by the
<code>notifyObservers</code> methods.

@see     java.util.Observable#notifyObservers()
@see     java.util.Observable#notifyObservers(java.lang.Object)
"
      end

      operation 8862850 "hasChanged"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this object has changed.

@return  <code>true</code> if and only if the <code>setChanged</code>
         method has been called more recently than the
         <code>clearChanged</code> method on this object;
         <code>false</code> otherwise.
@see     java.util.Observable#clearChanged()
@see     java.util.Observable#setChanged()
"
      end

      operation 8862978 "countObservers"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of observers of this <tt>Observable</tt> object.

@return  the number of observers of this object.
"
      end
    end

    class 1088642 "Observer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class can implement the <code>Observer</code> interface when it
wants to be informed of changes in observable objects.

@author  Chris Warth
@see     java.util.Observable
@since   JDK1.0
"
      operation 8863106 "update"
	public explicit_return_type "void"
	nparams 2
	  param inout name "o" type class_ref 1088514 // Observable
	  param inout name "arg" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called whenever the observed object is changed. An
application calls an <tt>Observable</tt> object's
<code>notifyObservers</code> method to have all the object's
observers notified of the change.

@param   o     the observable object.
@param   arg   an argument passed to the <code>notifyObservers</code>
                method.
"
      end
    end

    class 1088770 "Optional"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container object which may or may not contain a non-null value.
If a value is present, {@code isPresent()} will return {@code true} and
{@code get()} will return the value.

<p>Additional methods that depend on the presence or absence of a contained
value are provided, such as {@link #orElse(java.lang.Object) orElse()}
(return a default value if value not present) and
{@link #ifPresent(java.util.function.Consumer) ifPresent()} (execute a block
of code if the value is present).

<p>This is a <a href=\"../lang/doc-files/ValueBased.html\">value-based</a>
class; use of identity-sensitive operations (including reference equality
({@code ==}), identity hash code, or synchronization) on instances of
{@code Optional} may have unpredictable results and should be avoided.

@since 1.8
"
      classrelation 3533954 // EMPTY (<unidirectional association>)
	relation 3533954 --->
	  a role_name "EMPTY" init_value " new Optional<>()" class_relation const_relation private
	    comment "
Common instance for {@code empty()}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3533954 // EMPTY (<unidirectional association>)
	  b parent class_ref 1088770 // Optional
      end

      attribute 2065538 "value"
	const_attribute private explicit_type "T"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If non-null, the value; if null, indicates no value is present

"
      end

      operation 8863234 "Optional"
	cpp_inline private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty instance.

@implNote Generally only one empty instance, {@link Optional#EMPTY},
should exist per VM.
"
      end

      operation 8863362 "empty"
	class_operation cpp_inline public return_type class_ref 1088770 // Optional
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an empty {@code Optional} instance.  No value is present for this
Optional.

@apiNote Though it may be tempting to do so, avoid testing if an object
is empty by comparing with {@code ==} against instances returned by
{@code Option.empty()}. There is no guarantee that it is a singleton.
Instead, use {@link #isPresent()}.

@param <T> Type of the non-existent value
@return an empty {@code Optional}
"
      end

      operation 8863490 "Optional"
	cpp_inline private explicit_return_type ""
	nparams 1
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance with the value present.

@param value the non-null value to be present
@throws NullPointerException if value is null
"
      end

      operation 8863618 "of"
	class_operation cpp_inline public return_type class_ref 1088770 // Optional
	nparams 1
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Optional} with the specified present non-null value.

@param <T> the class of the value
@param value the value to be present, which must be non-null
@return an {@code Optional} with the value present
@throws NullPointerException if value is null
"
      end

      operation 8863746 "ofNullable"
	class_operation cpp_inline public return_type class_ref 1088770 // Optional
	nparams 1
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Optional} describing the specified value, if non-null,
otherwise returns an empty {@code Optional}.

@param <T> the class of the value
@param value the possibly-null value to describe
@return an {@code Optional} with a present value if the specified value
is non-null, otherwise an empty {@code Optional}
"
      end

      operation 8863874 "get"
	cpp_inline public explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present in this {@code Optional}, returns the value,
otherwise throws {@code NoSuchElementException}.

@return the non-null value held by this {@code Optional}
@throws NoSuchElementException if there is no value present

@see Optional#isPresent()
"
      end

      operation 8864002 "isPresent"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return {@code true} if there is a value present, otherwise {@code false}.

@return {@code true} if there is a value present, otherwise {@code false}
"
      end

      operation 8864130 "ifPresent"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "consumer" type class_ref 163458 // Consumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present, invoke the specified consumer with the value,
otherwise do nothing.

@param consumer block to be executed if a value is present
@throws NullPointerException if value is present and {@code consumer} is
null
"
      end

      operation 8864258 "filter"
	cpp_inline public return_type class_ref 1088770 // Optional
	nparams 1
	  param inout name "predicate" type class_ref 184578 // Predicate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present, and the value matches the given predicate,
return an {@code Optional} describing the value, otherwise return an
empty {@code Optional}.

@param predicate a predicate to apply to the value, if present
@return an {@code Optional} describing the value of this {@code Optional}
if a value is present and the value matches the given predicate,
otherwise an empty {@code Optional}
@throws NullPointerException if the predicate is null
"
      end

      operation 8864386 "map"
	cpp_inline public return_type class_ref 1088770 // Optional
	nparams 1
	  param inout name "mapper" type class_ref 192770 // Function
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U> ${type}<U> ${name}${(}${t0}<? super T, ? extends U> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present, apply the provided mapping function to it,
and if the result is non-null, return an {@code Optional} describing the
result.  Otherwise return an empty {@code Optional}.

@apiNote This method supports post-processing on optional values, without
the need to explicitly check for a return status.  For example, the
following code traverses a stream of file names, selects one that has
not yet been processed, and then opens that file, returning an
{@code Optional<FileInputStream>}:

<pre>{@code
    Optional<FileInputStream> fis =
        names.stream().filter(name -> !isProcessedYet(name))
                      .findFirst()
                      .map(name -> new FileInputStream(name));
}</pre>

Here, {@code findFirst} returns an {@code Optional<String>}, and then
{@code map} returns an {@code Optional<FileInputStream>} for the desired
file if one exists.

@param <U> The type of the result of the mapping function
@param mapper a mapping function to apply to the value, if present
@return an {@code Optional} describing the result of applying a mapping
function to the value of this {@code Optional}, if a value is present,
otherwise an empty {@code Optional}
@throws NullPointerException if the mapping function is null
"
      end

      operation 8864514 "flatMap"
	cpp_inline public return_type class_ref 1088770 // Optional
	nparams 1
	  param inout name "mapper" type class_ref 192770 // Function
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U> ${type}<U> ${name}${(}${t0}<? super T, Optional<U>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present, apply the provided {@code Optional}-bearing
mapping function to it, return that result, otherwise return an empty
{@code Optional}.  This method is similar to {@link #map(Function)},
but the provided mapper is one whose result is already an {@code Optional},
and if invoked, {@code flatMap} does not wrap it with an additional
{@code Optional}.

@param <U> The type parameter to the {@code Optional} returned by
@param mapper a mapping function to apply to the value, if present
          the mapping function
@return the result of applying an {@code Optional}-bearing mapping
function to the value of this {@code Optional}, if a value is present,
otherwise an empty {@code Optional}
@throws NullPointerException if the mapping function is null or returns
a null result
"
      end

      operation 8864642 "orElse"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "other" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise return {@code other}.

@param other the value to be returned if there is no value present, may
be null
@return the value, if present, otherwise {@code other}
"
      end

      operation 8864770 "orElseGet"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "other" type class_ref 933634 // Supplier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise invoke {@code other} and return
the result of that invocation.

@param other a {@code Supplier} whose result is returned if no value
is present
@return the value if present otherwise the result of {@code other.get()}
@throws NullPointerException if value is not present and {@code other} is
null
"
      end

      operation 8864898 "orElseThrow"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "exceptionSupplier" type class_ref 933634 // Supplier
	nexceptions 1
	  explicit_exception "X"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<X extends Throwable> ${type} ${name}${(}${t0}<? extends X> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the contained value, if present, otherwise throw an exception
to be created by the provided supplier.

@apiNote A method reference to the exception constructor with an empty
argument list can be used as the supplier. For example,
{@code IllegalStateException::new}

@param <X> Type of the exception to be thrown
@param exceptionSupplier The supplier which will return the exception to
be thrown
@return the present value
@throws X if there is no value present
@throws NullPointerException if no value is present and
{@code exceptionSupplier} is null
"
      end

      operation 8865026 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates whether some other object is \"equal to\" this Optional. The
other object is considered equal if:
<ul>
<li>it is also an {@code Optional} and;
<li>both instances have no value present or;
<li>the present values are \"equal to\" each other via {@code equals()}.
</ul>

@param obj an object to be tested for equality
@return {code true} if the other object is \"equal to\" this object
otherwise {@code false}
"
      end

      operation 8865154 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value of the present value, if any, or 0 (zero) if
no value is present.

@return hash code value of the present value or 0 if no value is present
"
      end

      operation 8865282 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a non-empty string representation of this Optional suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.

@implSpec If a value is present the result must include its string
representation in the result. Empty and present Optionals must be
unambiguously differentiable.

@return the string representation of this instance
"
      end
    end

    class 1088898 "OptionalDouble"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container object which may or may not contain a {@code double} value.
If a value is present, {@code isPresent()} will return {@code true} and
{@code getAsDouble()} will return the value.

<p>Additional methods that depend on the presence or absence of a contained
value are provided, such as {@link #orElse(double) orElse()}
(return a default value if value not present) and
{@link #ifPresent(java.util.function.DoubleConsumer) ifPresent()} (execute a block
of code if the value is present).

<p>This is a <a href=\"../lang/doc-files/ValueBased.html\">value-based</a>
class; use of identity-sensitive operations (including reference equality
({@code ==}), identity hash code, or synchronization) on instances of
{@code OptionalDouble} may have unpredictable results and should be avoided.

@since 1.8
"
      classrelation 3534082 // EMPTY (<unidirectional association>)
	relation 3534082 --->
	  a role_name "EMPTY" init_value " new OptionalDouble()" class_relation const_relation private
	    comment "
Common instance for {@code empty()}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3534082 // EMPTY (<unidirectional association>)
	  b parent class_ref 1088898 // OptionalDouble
      end

      attribute 2065666 "isPresent"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then the value is present, otherwise indicates no value is present

"
      end

      attribute 2065794 "value"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8865410 "OptionalDouble"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty instance.

@implNote generally only one empty instance, {@link OptionalDouble#EMPTY},
should exist per VM.
"
      end

      operation 8865538 "empty"
	class_operation public return_type class_ref 1088898 // OptionalDouble
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an empty {@code OptionalDouble} instance.  No value is present for this
OptionalDouble.

@apiNote Though it may be tempting to do so, avoid testing if an object
is empty by comparing with {@code ==} against instances returned by
{@code Option.empty()}. There is no guarantee that it is a singleton.
Instead, use {@link #isPresent()}.

 @return an empty {@code OptionalDouble}.
"
      end

      operation 8865666 "OptionalDouble"
	private explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an instance with the value present.

@param value the double value to be present.
"
      end

      operation 8865794 "of"
	class_operation public return_type class_ref 1088898 // OptionalDouble
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an {@code OptionalDouble} with the specified value present.

@param value the value to be present
@return an {@code OptionalDouble} with the value present
"
      end

      operation 8865922 "getAsDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present in this {@code OptionalDouble}, returns the value,
otherwise throws {@code NoSuchElementException}.

@return the value held by this {@code OptionalDouble}
@throws NoSuchElementException if there is no value present

@see OptionalDouble#isPresent()
"
      end

      operation 8866050 "isPresent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return {@code true} if there is a value present, otherwise {@code false}.

@return {@code true} if there is a value present, otherwise {@code false}
"
      end

      operation 8866178 "ifPresent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "consumer" type class_ref 377346 // DoubleConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Have the specified consumer accept the value if a value is present,
otherwise do nothing.

@param consumer block to be executed if a value is present
@throws NullPointerException if value is present and {@code consumer} is
null
"
      end

      operation 8866306 "orElse"
	public explicit_return_type "double"
	nparams 1
	  param in name "other" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise return {@code other}.

@param other the value to be returned if there is no value present
@return the value, if present, otherwise {@code other}
"
      end

      operation 8866434 "orElseGet"
	public explicit_return_type "double"
	nparams 1
	  param inout name "other" type class_ref 1089026 // DoubleSupplier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise invoke {@code other} and return
the result of that invocation.

@param other a {@code DoubleSupplier} whose result is returned if no value
is present
@return the value if present otherwise the result of {@code other.getAsDouble()}
@throws NullPointerException if value is not present and {@code other} is
null
"
      end

      operation 8866562 "orElseThrow"
	public explicit_return_type "double"
	nparams 1
	  param inout name "exceptionSupplier" type class_ref 933634 // Supplier
	nexceptions 1
	  explicit_exception "X"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<X extends Throwable> ${type} ${name}${(}${t0}<X> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the contained value, if present, otherwise throw an exception
to be created by the provided supplier.

@apiNote A method reference to the exception constructor with an empty
argument list can be used as the supplier. For example,
{@code IllegalStateException::new}

@param <X> Type of the exception to be thrown
@param exceptionSupplier The supplier which will return the exception to
be thrown
@return the present value
@throws X if there is no value present
@throws NullPointerException if no value is present and
{@code exceptionSupplier} is null
"
      end

      operation 8866690 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates whether some other object is \"equal to\" this OptionalDouble. The
other object is considered equal if:
<ul>
<li>it is also an {@code OptionalDouble} and;
<li>both instances have no value present or;
<li>the present values are \"equal to\" each other via {@code Double.compare() == 0}.
</ul>

@param obj an object to be tested for equality
@return {code true} if the other object is \"equal to\" this object
otherwise {@code false}
"
      end

      operation 8866818 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value of the present value, if any, or 0 (zero) if
no value is present.

@return hash code value of the present value or 0 if no value is present
"
      end

      operation 8866946 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Returns a non-empty string representation of this object suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.

@implSpec If a value is present the result must include its string
representation in the result. Empty and present instances must be
unambiguously differentiable.

@return the string representation of this instance
"
      end
    end

    class 1089154 "OptionalInt"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container object which may or may not contain a {@code int} value.
If a value is present, {@code isPresent()} will return {@code true} and
{@code getAsInt()} will return the value.

<p>Additional methods that depend on the presence or absence of a contained
value are provided, such as {@link #orElse(int) orElse()}
(return a default value if value not present) and
{@link #ifPresent(java.util.function.IntConsumer) ifPresent()} (execute a block
of code if the value is present).

<p>This is a <a href=\"../lang/doc-files/ValueBased.html\">value-based</a>
class; use of identity-sensitive operations (including reference equality
({@code ==}), identity hash code, or synchronization) on instances of
{@code OptionalInt} may have unpredictable results and should be avoided.

@since 1.8
"
      classrelation 3534210 // EMPTY (<unidirectional association>)
	relation 3534210 --->
	  a role_name "EMPTY" init_value " new OptionalInt()" class_relation const_relation private
	    comment "
Common instance for {@code empty()}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3534210 // EMPTY (<unidirectional association>)
	  b parent class_ref 1089154 // OptionalInt
      end

      attribute 2065922 "isPresent"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then the value is present, otherwise indicates no value is present

"
      end

      attribute 2066050 "value"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8867074 "OptionalInt"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty instance.

@implNote Generally only one empty instance, {@link OptionalInt#EMPTY},
should exist per VM.
"
      end

      operation 8867202 "empty"
	class_operation public return_type class_ref 1089154 // OptionalInt
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an empty {@code OptionalInt} instance.  No value is present for this
OptionalInt.

@apiNote Though it may be tempting to do so, avoid testing if an object
is empty by comparing with {@code ==} against instances returned by
{@code Option.empty()}. There is no guarantee that it is a singleton.
Instead, use {@link #isPresent()}.

 @return an empty {@code OptionalInt}
"
      end

      operation 8867330 "OptionalInt"
	private explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an instance with the value present.

@param value the int value to be present
"
      end

      operation 8867458 "of"
	class_operation public return_type class_ref 1089154 // OptionalInt
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an {@code OptionalInt} with the specified value present.

@param value the value to be present
@return an {@code OptionalInt} with the value present
"
      end

      operation 8867586 "getAsInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present in this {@code OptionalInt}, returns the value,
otherwise throws {@code NoSuchElementException}.

@return the value held by this {@code OptionalInt}
@throws NoSuchElementException if there is no value present

@see OptionalInt#isPresent()
"
      end

      operation 8867714 "isPresent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return {@code true} if there is a value present, otherwise {@code false}.

@return {@code true} if there is a value present, otherwise {@code false}
"
      end

      operation 8867842 "ifPresent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "consumer" type class_ref 376706 // IntConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Have the specified consumer accept the value if a value is present,
otherwise do nothing.

@param consumer block to be executed if a value is present
@throws NullPointerException if value is present and {@code consumer} is
null
"
      end

      operation 8867970 "orElse"
	public explicit_return_type "int"
	nparams 1
	  param in name "other" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise return {@code other}.

@param other the value to be returned if there is no value present
@return the value, if present, otherwise {@code other}
"
      end

      operation 8868098 "orElseGet"
	public explicit_return_type "int"
	nparams 1
	  param inout name "other" type class_ref 1089282 // IntSupplier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise invoke {@code other} and return
the result of that invocation.

@param other a {@code IntSupplier} whose result is returned if no value
is present
@return the value if present otherwise the result of {@code other.getAsInt()}
@throws NullPointerException if value is not present and {@code other} is
null
"
      end

      operation 8868226 "orElseThrow"
	public explicit_return_type "int"
	nparams 1
	  param inout name "exceptionSupplier" type class_ref 933634 // Supplier
	nexceptions 1
	  explicit_exception "X"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<X extends Throwable> ${type} ${name}${(}${t0}<X> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the contained value, if present, otherwise throw an exception
to be created by the provided supplier.

@apiNote A method reference to the exception constructor with an empty
argument list can be used as the supplier. For example,
{@code IllegalStateException::new}

@param <X> Type of the exception to be thrown
@param exceptionSupplier The supplier which will return the exception to
be thrown
@return the present value
@throws X if there is no value present
@throws NullPointerException if no value is present and
{@code exceptionSupplier} is null
"
      end

      operation 8868354 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates whether some other object is \"equal to\" this OptionalInt. The
other object is considered equal if:
<ul>
<li>it is also an {@code OptionalInt} and;
<li>both instances have no value present or;
<li>the present values are \"equal to\" each other via {@code ==}.
</ul>

@param obj an object to be tested for equality
@return {code true} if the other object is \"equal to\" this object
otherwise {@code false}
"
      end

      operation 8868482 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value of the present value, if any, or 0 (zero) if
no value is present.

@return hash code value of the present value or 0 if no value is present
"
      end

      operation 8868610 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Returns a non-empty string representation of this object suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.

@implSpec If a value is present the result must include its string
representation in the result. Empty and present instances must be
unambiguously differentiable.

@return the string representation of this instance
"
      end
    end

    class 1089410 "OptionalLong"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container object which may or may not contain a {@code long} value.
If a value is present, {@code isPresent()} will return {@code true} and
{@code getAsLong()} will return the value.

<p>Additional methods that depend on the presence or absence of a contained
value are provided, such as {@link #orElse(long) orElse()}
(return a default value if value not present) and
{@link #ifPresent(java.util.function.LongConsumer) ifPresent()} (execute a block
of code if the value is present).

<p>This is a <a href=\"../lang/doc-files/ValueBased.html\">value-based</a>
class; use of identity-sensitive operations (including reference equality
({@code ==}), identity hash code, or synchronization) on instances of
{@code OptionalLong} may have unpredictable results and should be avoided.

@since 1.8
"
      classrelation 3534338 // EMPTY (<unidirectional association>)
	relation 3534338 --->
	  a role_name "EMPTY" init_value " new OptionalLong()" class_relation const_relation private
	    comment "
Common instance for {@code empty()}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3534338 // EMPTY (<unidirectional association>)
	  b parent class_ref 1089410 // OptionalLong
      end

      attribute 2066178 "isPresent"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then the value is present, otherwise indicates no value is present

"
      end

      attribute 2066306 "value"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8868738 "OptionalLong"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty instance.

@implNote generally only one empty instance, {@link OptionalLong#EMPTY},
should exist per VM.
"
      end

      operation 8868866 "empty"
	class_operation public return_type class_ref 1089410 // OptionalLong
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an empty {@code OptionalLong} instance.  No value is present for this
OptionalLong.

@apiNote Though it may be tempting to do so, avoid testing if an object
is empty by comparing with {@code ==} against instances returned by
{@code Option.empty()}. There is no guarantee that it is a singleton.
Instead, use {@link #isPresent()}.

 @return an empty {@code OptionalLong}.
"
      end

      operation 8868994 "OptionalLong"
	private explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an instance with the value present.

@param value the long value to be present
"
      end

      operation 8869122 "of"
	class_operation public return_type class_ref 1089410 // OptionalLong
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an {@code OptionalLong} with the specified value present.

@param value the value to be present
@return an {@code OptionalLong} with the value present
"
      end

      operation 8869250 "getAsLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a value is present in this {@code OptionalLong}, returns the value,
otherwise throws {@code NoSuchElementException}.

@return the value held by this {@code OptionalLong}
@throws NoSuchElementException if there is no value present

@see OptionalLong#isPresent()
"
      end

      operation 8869378 "isPresent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return {@code true} if there is a value present, otherwise {@code false}.

@return {@code true} if there is a value present, otherwise {@code false}
"
      end

      operation 8869506 "ifPresent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "consumer" type class_ref 376962 // LongConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Have the specified consumer accept the value if a value is present,
otherwise do nothing.

@param consumer block to be executed if a value is present
@throws NullPointerException if value is present and {@code consumer} is
null
"
      end

      operation 8869634 "orElse"
	public explicit_return_type "long"
	nparams 1
	  param in name "other" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise return {@code other}.

@param other the value to be returned if there is no value present
@return the value, if present, otherwise {@code other}
"
      end

      operation 8869762 "orElseGet"
	public explicit_return_type "long"
	nparams 1
	  param inout name "other" type class_ref 1089538 // LongSupplier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value if present, otherwise invoke {@code other} and return
the result of that invocation.

@param other a {@code LongSupplier} whose result is returned if no value
is present
@return the value if present otherwise the result of {@code other.getAsLong()}
@throws NullPointerException if value is not present and {@code other} is
null
"
      end

      operation 8869890 "orElseThrow"
	public explicit_return_type "long"
	nparams 1
	  param inout name "exceptionSupplier" type class_ref 933634 // Supplier
	nexceptions 1
	  explicit_exception "X"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<X extends Throwable> ${type} ${name}${(}${t0}<X> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the contained value, if present, otherwise throw an exception
to be created by the provided supplier.

@apiNote A method reference to the exception constructor with an empty
argument list can be used as the supplier. For example,
{@code IllegalStateException::new}

@param <X> Type of the exception to be thrown
@param exceptionSupplier The supplier which will return the exception to
be thrown
@return the present value
@throws X if there is no value present
@throws NullPointerException if no value is present and
{@code exceptionSupplier} is null
"
      end

      operation 8870018 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates whether some other object is \"equal to\" this OptionalLong. The
other object is considered equal if:
<ul>
<li>it is also an {@code OptionalLong} and;
<li>both instances have no value present or;
<li>the present values are \"equal to\" each other via {@code ==}.
</ul>

@param obj an object to be tested for equality
@return {code true} if the other object is \"equal to\" this object
otherwise {@code false}
"
      end

      operation 8870146 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value of the present value, if any, or 0 (zero) if
no value is present.

@return hash code value of the present value or 0 if no value is present
"
      end

      operation 8870274 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Returns a non-empty string representation of this object suitable for
debugging. The exact presentation format is unspecified and may vary
between implementations and versions.

@implSpec If a value is present the result must include its string
representation in the result. Empty and present instances must be
unambiguously differentiable.

@return the string representation of this instance
"
      end
    end

    class 1089666 "PrimitiveIterator"
      visibility public stereotype "interface"
      nformals 2
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T_CONS" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 132994 // Iterator
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A base type for primitive specializations of {@code Iterator}.  Specialized
subtypes are provided for {@link OfInt int}, {@link OfLong long}, and
{@link OfDouble double} values.

<p>The specialized subtype default implementations of {@link Iterator#next}
and {@link Iterator#forEachRemaining(java.util.function.Consumer)} box
primitive values to instances of their corresponding wrapper class.  Such
boxing may offset any advantages gained when using the primitive
specializations.  To avoid boxing, the corresponding primitive-based methods
should be used.  For example, {@link PrimitiveIterator.OfInt#nextInt()} and
{@link PrimitiveIterator.OfInt#forEachRemaining(java.util.function.IntConsumer)}
should be used in preference to {@link PrimitiveIterator.OfInt#next()} and
{@link PrimitiveIterator.OfInt#forEachRemaining(java.util.function.Consumer)}.

<p>Iteration of primitive values using boxing-based methods
{@link Iterator#next next()} and
{@link Iterator#forEachRemaining(java.util.function.Consumer) forEachRemaining()},
does not affect the order in which the values, transformed to boxed values,
are encountered.

@implNote
If the boolean system property {@code org.openjdk.java.util.stream.tripwire}
is set to {@code true} then diagnostic warnings are reported if boxing of
primitive values occur when operating on primitive subtype specializations.

@param <T> the type of elements returned by this PrimitiveIterator.  The
       type must be a wrapper type for a primitive type, such as
       {@code Integer} for the primitive {@code int} type.
@param <T_CONS> the type of primitive consumer.  The type must be a
       primitive specialization of {@link java.util.function.Consumer} for
       {@code T}, such as {@link java.util.function.IntConsumer} for
       {@code Integer}.

@since 1.8
"
      classrelation 3534466 // <realization>
	relation 3534466 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3534466 // <realization>
	  b parent class_ref 132994 // Iterator
      end

      operation 8870402 "forEachRemaining"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" explicit_type "T_CONS"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"overloads\")
"
	
	
	
	comment "Performs the given action for each remaining element, in the order
elements occur when iterating, until all elements have been processed
or the action throws an exception.  Errors or runtime exceptions
thrown by the action are relayed to the caller.

@param action The action to be performed for each element
@throws NullPointerException if the specified action is null
"
      end

      class 1089794 "OfInt"
	visibility public stereotype "interface"
	nactuals 2
	actual class class_ref 1089666 // PrimitiveIterator
	  rank 0 explicit_value ""
	actual class class_ref 1089666 // PrimitiveIterator
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3534594 // <realization>
	  relation 3534594 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3534594 // <realization>
	    b parent class_ref 1089666 // PrimitiveIterator
	end

	operation 8870530 "nextInt"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the next {@code int} element in the iteration.

@return the next {@code int} element in the iteration
@throws NoSuchElementException if the iteration has no more elements
"
	end

	operation 8870658 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs the given action for each remaining element until all elements
have been processed or the action throws an exception.  Actions are
performed in the order of iteration, if that order is specified.
Exceptions thrown by the action are relayed to the caller.

@implSpec
<p>The default implementation behaves as if:
<pre>{@code
    while (hasNext())
        action.accept(nextInt());
}</pre>

@param action The action to be performed for each element
@throws NullPointerException if the specified action is null
"
	end

	operation 8870786 "next"
	  cpp_inline public return_type class_ref 137602 // Integer
	  nparams 0
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
The default implementation boxes the result of calling
{@link #nextInt()}, and returns that boxed result.
"
	end

	operation 8870914 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Integer> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code IntConsumer} then it is cast
to {@code IntConsumer} and passed to {@link #forEachRemaining};
otherwise the action is adapted to an instance of
{@code IntConsumer}, by boxing the argument of {@code IntConsumer},
and then passed to {@link #forEachRemaining}.
"
	end
      end

      class 1089922 "OfLong"
	visibility public stereotype "interface"
	nactuals 2
	actual class class_ref 1089666 // PrimitiveIterator
	  rank 0 explicit_value ""
	actual class class_ref 1089666 // PrimitiveIterator
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3534722 // <realization>
	  relation 3534722 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3534722 // <realization>
	    b parent class_ref 1089666 // PrimitiveIterator
	end

	operation 8871042 "nextLong"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the next {@code long} element in the iteration.

@return the next {@code long} element in the iteration
@throws NoSuchElementException if the iteration has no more elements
"
	end

	operation 8871170 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs the given action for each remaining element until all elements
have been processed or the action throws an exception.  Actions are
performed in the order of iteration, if that order is specified.
Exceptions thrown by the action are relayed to the caller.

@implSpec
<p>The default implementation behaves as if:
<pre>{@code
    while (hasNext())
        action.accept(nextLong());
}</pre>

@param action The action to be performed for each element
@throws NullPointerException if the specified action is null
"
	end

	operation 8871298 "next"
	  cpp_inline public return_type class_ref 251778 // Long
	  nparams 0
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
The default implementation boxes the result of calling
{@link #nextLong()}, and returns that boxed result.
"
	end

	operation 8871426 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Long> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code LongConsumer} then it is cast
to {@code LongConsumer} and passed to {@link #forEachRemaining};
otherwise the action is adapted to an instance of
{@code LongConsumer}, by boxing the argument of {@code LongConsumer},
and then passed to {@link #forEachRemaining}.
"
	end
      end

      class 1090050 "OfDouble"
	visibility public stereotype "interface"
	nactuals 2
	actual class class_ref 1089666 // PrimitiveIterator
	  rank 0 explicit_value ""
	actual class class_ref 1089666 // PrimitiveIterator
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3534850 // <realization>
	  relation 3534850 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3534850 // <realization>
	    b parent class_ref 1089666 // PrimitiveIterator
	end

	operation 8871554 "nextDouble"
	  cpp_inline public explicit_return_type "double"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the next {@code double} element in the iteration.

@return the next {@code double} element in the iteration
@throws NoSuchElementException if the iteration has no more elements
"
	end

	operation 8871682 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs the given action for each remaining element until all elements
have been processed or the action throws an exception.  Actions are
performed in the order of iteration, if that order is specified.
Exceptions thrown by the action are relayed to the caller.

@implSpec
<p>The default implementation behaves as if:
<pre>{@code
    while (hasNext())
        action.accept(nextDouble());
}</pre>

@param action The action to be performed for each element
@throws NullPointerException if the specified action is null
"
	end

	operation 8871810 "next"
	  cpp_inline public return_type class_ref 377218 // Double
	  nparams 0
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
The default implementation boxes the result of calling
{@link #nextDouble()}, and returns that boxed result.
"
	end

	operation 8871938 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Double> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}
@implSpec
If the action is an instance of {@code DoubleConsumer} then it is
cast to {@code DoubleConsumer} and passed to
{@link #forEachRemaining}; otherwise the action is adapted to
an instance of {@code DoubleConsumer}, by boxing the argument of
{@code DoubleConsumer}, and then passed to
{@link #forEachRemaining}.
"
	end
      end
    end

    class 1090178 "PriorityQueue"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 1064066 // AbstractQueue
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An unbounded priority {@linkplain Queue queue} based on a priority heap.
The elements of the priority queue are ordered according to their
{@linkplain Comparable natural ordering}, or by a {@link Comparator}
provided at queue construction time, depending on which constructor is
used.  A priority queue does not permit {@code null} elements.
A priority queue relying on natural ordering also does not permit
insertion of non-comparable objects (doing so may result in
{@code ClassCastException}).

<p>The <em>head</em> of this queue is the <em>least</em> element
with respect to the specified ordering.  If multiple elements are
tied for least value, the head is one of those elements -- ties are
broken arbitrarily.  The queue retrieval operations {@code poll},
{@code remove}, {@code peek}, and {@code element} access the
element at the head of the queue.

<p>A priority queue is unbounded, but has an internal
<i>capacity</i> governing the size of an array used to store the
elements on the queue.  It is always at least as large as the queue
size.  As elements are added to a priority queue, its capacity
grows automatically.  The details of the growth policy are not
specified.

<p>This class and its iterator implement all of the
<em>optional</em> methods of the {@link Collection} and {@link
Iterator} interfaces.  The Iterator provided in method {@link
#iterator()} is <em>not</em> guaranteed to traverse the elements of
the priority queue in any particular order. If you need ordered
traversal, consider using {@code Arrays.sort(pq.toArray())}.

<p><strong>Note that this implementation is not synchronized.</strong>
Multiple threads should not access a {@code PriorityQueue}
instance concurrently if any of the threads modifies the queue.
Instead, use the thread-safe {@link
java.util.concurrent.PriorityBlockingQueue} class.

<p>Implementation note: this implementation provides
O(log(n)) time for the enqueuing and dequeuing methods
({@code offer}, {@code poll}, {@code remove()} and {@code add});
linear time for the {@code remove(Object)} and {@code contains(Object)}
methods; and constant time for the retrieval methods
({@code peek}, {@code element}, and {@code size}).

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@since 1.5
@author Josh Bloch, Doug Lea
@param <E> the type of elements held in this collection
"
      classrelation 3534978 // <realization>
	relation 3534978 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3534978 // <realization>
	  b parent class_ref 1064066 // AbstractQueue
      end

      classrelation 3535106 // <realization>
	relation 3535106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3535106 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2066434 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7720805057305804111L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2066562 "DEFAULT_INITIAL_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3535234 // queue (<unidirectional association>)
	relation 3535234 --->
	  a role_name "queue" multiplicity "[]" package
	    comment "
Priority queue represented as a balanced binary heap: the two
children of queue[n] are queue[2*n+1] and queue[2*(n+1)].  The
priority queue is ordered by comparator, or by the elements'
natural ordering, if comparator is null: For each node n in the
heap and each descendant d of n, n <= d.  The element with the
lowest value is in queue[0], assuming the queue is nonempty.

 non-private to simplify nested class access"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3535234 // queue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2066690 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of elements in the priority queue.

"
      end

      classrelation 3535362 // comparator (<unidirectional association>)
	relation 3535362 --->
	  a role_name "comparator" const_relation private
	    comment "
The comparator, or null if priority queue uses elements'
natural ordering.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super E> ${name}${value};
"
	    classrelation_ref 3535362 // comparator (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      attribute 2066818 "modCount"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of times this priority queue has been
<i>structurally modified</i>.  See AbstractList for gory details.

 non-private to simplify nested class access"
      end

      operation 8872066 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code PriorityQueue} with the default initial
capacity (11) that orders its elements according to their
{@linkplain Comparable natural ordering}.
"
      end

      operation 8872194 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code PriorityQueue} with the specified initial
capacity that orders its elements according to their
{@linkplain Comparable natural ordering}.

@param initialCapacity the initial capacity for this priority queue
@throws IllegalArgumentException if {@code initialCapacity} is less
        than 1
"
      end

      operation 8872322 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code PriorityQueue} with the default initial capacity and
whose elements are ordered according to the specified comparator.

@param  comparator the comparator that will be used to order this
        priority queue.  If {@code null}, the {@linkplain Comparable
        natural ordering} of the elements will be used.
@since 1.8
"
      end

      operation 8872450 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<? super E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code PriorityQueue} with the specified initial capacity
that orders its elements according to the specified comparator.

@param  initialCapacity the initial capacity for this priority queue
@param  comparator the comparator that will be used to order this
        priority queue.  If {@code null}, the {@linkplain Comparable
        natural ordering} of the elements will be used.
@throws IllegalArgumentException if {@code initialCapacity} is
        less than 1
"
      end

      operation 8872578 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Creates a {@code PriorityQueue} containing the elements in the
specified collection.  If the specified collection is an instance of
a {@link SortedSet} or is another {@code PriorityQueue}, this
priority queue will be ordered according to the same ordering.
Otherwise, this priority queue will be ordered according to the
{@linkplain Comparable natural ordering} of its elements.

@param  c the collection whose elements are to be placed
        into this priority queue
@throws ClassCastException if elements of the specified collection
        cannot be compared to one another according to the priority
        queue's ordering
@throws NullPointerException if the specified collection or any
        of its elements are null
"
      end

      operation 8872706 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 1090178 // PriorityQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Creates a {@code PriorityQueue} containing the elements in the
specified priority queue.  This priority queue will be
ordered according to the same ordering as the given priority
queue.

@param  c the priority queue whose elements are to be placed
        into this priority queue
@throws ClassCastException if elements of {@code c} cannot be
        compared to one another according to {@code c}'s
        ordering
@throws NullPointerException if the specified priority queue or any
        of its elements are null
"
      end

      operation 8872834 "PriorityQueue"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 511874 // SortedSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Creates a {@code PriorityQueue} containing the elements in the
specified sorted set.   This priority queue will be ordered
according to the same ordering as the given sorted set.

@param  c the sorted set whose elements are to be placed
        into this priority queue
@throws ClassCastException if elements of the specified sorted
        set cannot be compared to one another according to the
        sorted set's ordering
@throws NullPointerException if the specified sorted set or any
        of its elements are null
"
      end

      operation 8872962 "initFromPriorityQueue"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 1090178 // PriorityQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8873090 "initElementsFromCollection"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8873218 "initFromCollection"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes queue array with elements from the given Collection.

@param c the collection
"
      end

      attribute 2066946 "MAX_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE - 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size of array to allocate.
Some VMs reserve some header words in an array.
Attempts to allocate larger arrays may result in
OutOfMemoryError: Requested array size exceeds VM limit

"
      end

      operation 8873346 "grow"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity of the array.

@param minCapacity the desired minimum capacity
"
      end

      operation 8873474 "hugeCapacity"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8873602 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this priority queue.

@return {@code true} (as specified by {@link Collection#add})
@throws ClassCastException if the specified element cannot be
        compared with elements currently in this priority queue
        according to the priority queue's ordering
@throws NullPointerException if the specified element is null
"
      end

      operation 8873730 "offer"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this priority queue.

@return {@code true} (as specified by {@link Queue#offer})
@throws ClassCastException if the specified element cannot be
        compared with elements currently in this priority queue
        according to the priority queue's ordering
@throws NullPointerException if the specified element is null
"
      end

      operation 8873858 "peek"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8873986 "indexOf"
	cpp_inline private explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8874114 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a single instance of the specified element from this queue,
if it is present.  More formally, removes an element {@code e} such
that {@code o.equals(e)}, if this queue contains one or more such
elements.  Returns {@code true} if and only if this queue contained
the specified element (or equivalently, if this queue changed as a
result of the call).

@param o element to be removed from this queue, if present
@return {@code true} if this queue changed as a result of the call
"
      end

      operation 8874242 "removeEq"
	cpp_inline package explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of remove using reference equality, not equals.
Needed by iterator.remove.

@param o element to be removed from this queue, if present
@return {@code true} if removed
"
      end

      operation 8874370 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this queue contains the specified element.
More formally, returns {@code true} if and only if this queue contains
at least one element {@code e} such that {@code o.equals(e)}.

@param o object to be checked for containment in this queue
@return {@code true} if this queue contains the specified element
"
      end

      operation 8874498 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this queue.
The elements are in no particular order.

<p>The returned array will be \"safe\" in that no references to it are
maintained by this queue.  (In other words, this method must allocate
a new array).  The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all of the elements in this queue
"
      end

      operation 8874626 "toArray"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all of the elements in this queue; the
runtime type of the returned array is that of the specified array.
The returned array elements are in no particular order.
If the queue fits in the specified array, it is returned therein.
Otherwise, a new array is allocated with the runtime type of the
specified array and the size of this queue.

<p>If the queue fits in the specified array with room to spare
(i.e., the array has more elements than the queue), the element in
the array immediately following the end of the collection is set to
{@code null}.

<p>Like the {@link #toArray()} method, this method acts as bridge between
array-based and collection-based APIs.  Further, this method allows
precise control over the runtime type of the output array, and may,
under certain circumstances, be used to save allocation costs.

<p>Suppose {@code x} is a queue known to contain only strings.
The following code can be used to dump the queue into a newly
allocated array of {@code String}:

 <pre> {@code String[] y = x.toArray(new String[0]);}</pre>

Note that {@code toArray(new Object[0])} is identical in function to
{@code toArray()}.

@param a the array into which the elements of the queue are to
         be stored, if it is big enough; otherwise, a new array of the
         same runtime type is allocated for this purpose.
@return an array containing all of the elements in this queue
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in
        this queue
@throws NullPointerException if the specified array is null
"
      end

      operation 8874754 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this queue. The iterator
does not return the elements in any particular order.

@return an iterator over the elements in this queue
"
      end

      class 1090306 "Itr"
	visibility private 
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3535490 // <realization>
	  relation 3535490 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3535490 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 2067074 "cursor"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Index (into queue array) of element to be returned by
subsequent call to next.

"
	end

	attribute 2067202 "lastRet"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Index of element returned by most recent call to next,
unless that element came from the forgetMeNot list.
Set to -1 if element is deleted by a call to remove.

"
	end

	classrelation 3535618 // forgetMeNot (<unidirectional association>)
	  relation 3535618 --->
	    a role_name "forgetMeNot" init_value " null" private
	      comment "
A queue of elements that were moved from the unvisited portion of
the heap into the visited portion as a result of \"unlucky\" element
removals during the iteration.  (Unlucky element removals are those
that require a siftup instead of a siftdown.)  We must visit all of
the elements in this list to complete the iteration.  We do this
after we've completed the \"normal\" iteration.

We expect that most iterations, even those involving removals,
will not need to store elements in this field.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3535618 // forgetMeNot (<unidirectional association>)
	    b parent class_ref 998530 // ArrayDeque
	end

	attribute 2067330 "lastRetElt"
	  private explicit_type "E"
	  init_value " null"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Element returned by the most recent call to next iff that
element was drawn from the forgetMeNot list.

"
	end

	attribute 2067458 "expectedModCount"
	  private explicit_type "int"
	  init_value " modCount"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The modCount value that the iterator believes that the backing
Queue should have.  If this expectation is violated, the iterator
has detected concurrent modification.

"
	end

	operation 8874882 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8875010 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8875138 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8875266 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8875394 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this priority queue.
The queue will be empty after this call returns.
"
      end

      operation 8875522 "poll"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8875650 "removeAt"
	cpp_inline private explicit_return_type "E"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Removes the ith element from queue.

Normally this method leaves the elements at up to i-1,
inclusive, untouched.  Under these circumstances, it returns
null.  Occasionally, in order to maintain the heap invariant,
it must swap a later element of the list with one earlier than
i.  Under these circumstances, this method returns the element
that was previously at the end of the list and is now at some
position before i. This fact is used by iterator.remove so as to
avoid missing traversing elements.
"
      end

      operation 8875778 "siftUp"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "k" explicit_type "int"
	  param inout name "x" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts item x at position k, maintaining heap invariant by
promoting x up the tree until it is greater than or equal to
its parent, or is the root.

To simplify and speed up coercions and comparisons. the
Comparable and Comparator versions are separated into different
methods that are otherwise identical. (Similarly for siftDown.)

@param k the position to fill
@param x the item to insert
"
      end

      operation 8875906 "siftUpComparable"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "k" explicit_type "int"
	  param inout name "x" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8876034 "siftUpUsingComparator"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "k" explicit_type "int"
	  param inout name "x" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8876162 "siftDown"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "k" explicit_type "int"
	  param inout name "x" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts item x at position k, maintaining heap invariant by
demoting x down the tree repeatedly until it is less than or
equal to its children or is a leaf.

@param k the position to fill
@param x the item to insert
"
      end

      operation 8876290 "siftDownComparable"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "k" explicit_type "int"
	  param inout name "x" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8876418 "siftDownUsingComparator"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "k" explicit_type "int"
	  param inout name "x" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 8876546 "heapify"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Establishes the heap invariant (described above) in the entire tree,
assuming nothing about the order of the elements prior to the call.
"
      end

      operation 8876674 "comparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comparator used to order the elements in this
queue, or {@code null} if this queue is sorted according to
the {@linkplain Comparable natural ordering} of its elements.

@return the comparator used to order this queue, or
        {@code null} if this queue is sorted according to the
        natural ordering of its elements
"
      end

      operation 8876802 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Saves this queue to a stream (that is, serializes it).

@serialData The length of the array backing the instance is
            emitted (int), followed by all of its elements
            (each an {@code Object}) in the proper order.
@param s the stream
"
      end

      operation 8876930 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitutes the {@code PriorityQueue} instance from a stream
(that is, deserializes it).

@param s the stream
"
      end

      operation 8877058 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <em><a href=\"Spliterator.html#binding\">late-binding</a></em>
and <em>fail-fast</em> {@link Spliterator} over the elements in this
queue.

<p>The {@code Spliterator} reports {@link Spliterator#SIZED},
{@link Spliterator#SUBSIZED}, and {@link Spliterator#NONNULL}.
Overriding implementations should document the reporting of additional
characteristic values.

@return a {@code Spliterator} over the elements in this queue
@since 1.8
"
      end

      class 1090434 "PriorityQueueSpliterator"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3535746 // <realization>
	  relation 3535746 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3535746 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	classrelation 3535874 // pq (<unidirectional association>)
	  relation 3535874 --->
	    a role_name "pq" const_relation private
	      comment "
This is very similar to ArrayList Spliterator, except for
extra null checks.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 3535874 // pq (<unidirectional association>)
	    b parent class_ref 1090178 // PriorityQueue
	end

	attribute 2067586 "index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 2067714 "fence"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " -1 until first use"
	end

	attribute 2067842 "expectedModCount"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " initialized when fence set"
	end

	operation 8877186 "PriorityQueueSpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 4
	    param inout name "pq" type class_ref 1090178 // PriorityQueue
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "expectedModCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Creates new spliterator covering the given range "
	end

	operation 8877314 "getFence"
	  cpp_inline private explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8877442 "trySplit"
	  cpp_inline public return_type class_ref 1090434 // PriorityQueueSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8877570 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8877698 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8877826 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8877954 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1090562 "PropertyPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for property permissions.

<P>
The name is the name of the property (\"java.home\",
\"os.name\", etc). The naming
convention follows the  hierarchical property naming convention.
Also, an asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match. For example: \"java.*\" and \"*\" signify a wildcard
match, while \"*java\" and \"a*b\" do not.
<P>
The actions to be granted are passed to the constructor in a string containing
a list of one or more comma-separated keywords. The possible keywords are
\"read\" and \"write\". Their meaning is defined as follows:

<DL>
   <DT> read
   <DD> read permission. Allows <code>System.getProperty</code> to
        be called.
   <DT> write
   <DD> write permission. Allows <code>System.setProperty</code> to
        be called.
</DL>
<P>
The actions string is converted to lowercase before processing.
<P>
Care should be taken before granting code permission to access
certain system properties.  For example, granting permission to
access the \"java.home\" system property gives potentially malevolent
code sensitive information about the system environment (the Java
installation directory).  Also, granting permission to access
the \"user.name\" and \"user.home\" system properties gives potentially
malevolent code sensitive information about the user environment
(the user's account name and home directory).

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager


@author Roland Schemers
@since 1.2

@serial exclude
"
      classrelation 3536002 // <generalisation>
	relation 3536002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3536002 // <generalisation>
	  b parent class_ref 257410 // BasicPermission
      end

      attribute 2067970 "READ"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Read action.

"
      end

      attribute 2068098 "WRITE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Write action.

"
      end

      attribute 2068226 "ALL"
	class_attribute const_attribute private explicit_type "int"
	init_value " READ|WRITE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "All actions (read,write);

"
      end

      attribute 2068354 "NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "No actions.

"
      end

      attribute 2068482 "mask"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The actions mask.


"
      end

      classrelation 3536130 // actions (<unidirectional association>)
	relation 3536130 --->
	  a role_name "actions" private
	    comment "
The actions string.

@serial

 Left null as long as possible, then"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3536130 // actions (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8878082 "init"
	private explicit_return_type "void"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " created and re-used in the getAction function.

initialize a PropertyPermission object. Common to all constructors.
Also called during de-serialization.

@param mask the actions mask to use.

"
      end

      operation 8878210 "PropertyPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new PropertyPermission object with the specified name.
The name is the name of the system property, and
<i>actions</i> contains a comma-separated list of the
desired actions granted on the property. Possible actions are
\"read\" and \"write\".

@param name the name of the PropertyPermission.
@param actions the actions string.

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty or if
<code>actions</code> is invalid.
"
      end

      operation 8878338 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this PropertyPermission object \"implies\" the specified
permission.
<P>
More specifically, this method returns true if:
<ul>
<li> <i>p</i> is an instanceof PropertyPermission,
<li> <i>p</i>'s actions are a subset of this
object's actions, and
<li> <i>p</i>'s name is implied by this object's
     name. For example, \"java.*\" implies \"java.home\".
</ul>
@param p the permission to check against.

@return true if the specified permission is implied by this object,
false if not.
"
      end

      operation 8878466 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two PropertyPermission objects for equality. Checks that <i>obj</i> is
a PropertyPermission, and has the same name and actions as this object.
<P>
@param obj the object we are testing for equality with this object.
@return true if obj is a PropertyPermission, and has the same name and
actions as this PropertyPermission object.
"
      end

      operation 8878594 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.
The hash code used is the hash code of this permissions name, that is,
<code>getName().hashCode()</code>, where <code>getName</code> is
from the Permission superclass.

@return a hash code value for this object.
"
      end

      operation 8878722 "getMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an actions String to an actions mask.

@param actions the action string.
@return the actions mask.
"
      end

      operation 8878850 "getActions"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the canonical string representation of the actions.
Always returns present actions in the following order:
read, write.

@return the canonical string representation of the actions.
"
      end

      operation 8878978 "getActions"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions.
That is, this method always returns present actions in the following order:
read, write. For example, if this PropertyPermission object
allows both write and read actions, a call to <code>getActions</code>
will return the string \"read,write\".

@return the canonical string representation of the actions.
"
      end

      operation 8879106 "getMask"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current action mask.
Used by the PropertyPermissionCollection

@return the actions mask.
"
      end

      operation 8879234 "newPermissionCollection"
	public return_type class_ref 257794 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new PermissionCollection object for storing
PropertyPermission objects.
<p>

@return a new PermissionCollection object suitable for storing
PropertyPermissions.
"
      end

      attribute 2068610 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 885438825399942851L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8879362 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the PropertyPermission
to a stream. The actions are serialized, and the superclass
takes care of the name.
"
      end

      operation 8879490 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the PropertyPermission from
a stream.
"
      end
    end

    class 1090690 "PropertyPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PropertyPermissionCollection stores a set of PropertyPermission
permissions.

@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection


@author Roland Schemers

@serial include
"
      classrelation 3536258 // <generalisation>
	relation 3536258 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3536258 // <generalisation>
	  b parent class_ref 257794 // PermissionCollection
      end

      classrelation 3536386 // <realization>
	relation 3536386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3536386 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3536514 // perms (<unidirectional association>)
	relation 3536514 --->
	  a role_name "perms" private
	    comment "
Key is property name; value is PropertyPermission.
Not serialized; see serialization section at end of class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, PropertyPermission> ${name}${value};
"
	    classrelation_ref 3536514 // perms (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 2068738 "all_allowed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Boolean saying if \"*\" is in the collection.

@see #serialPersistentFields

 No sync access; OK for this to be stale.
"
      end

      operation 8879618 "PropertyPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty PropertyPermissionCollection object.
"
      end

      operation 8879746 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the PropertyPermissions. The key for the hash is
the name.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      PropertyPermission

@exception SecurityException - if this PropertyPermissionCollection
                               object has been marked readonly
"
      end

      operation 8879874 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this set of permissions implies the permissions
expressed in \"permission\".

@param permission the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in
the set, false if not.
"
      end

      operation 8880002 "elements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an enumeration of all the PropertyPermission objects in the
container.

@return an enumeration of all the PropertyPermission objects.
"
      end

      attribute 2068866 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7015263904581634791L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3536642 // serialPersistentFields (<unidirectional association>)
	relation 3536642 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"permissions\", Hashtable.class),
        new ObjectStreamField(\"all_allowed\", Boolean.TYPE),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:

 Table of permissions.

 @serial

 private Hashtable permissions;

@serialField permissions java.util.Hashtable
    A table of the PropertyPermissions.
@serialField all_allowed boolean
    boolean saying if \"*\" is in the collection.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3536642 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 8880130 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Default fields.


Writes the contents of the perms field out as a Hashtable for
serialization compatibility with earlier releases. all_allowed
unchanged.
"
      end

      operation 8880258 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Hashtable of PropertyPermissions and saves them in the
perms field. Reads in all_allowed.
"
      end
    end

    class 1090818 "PropertyResourceBundle"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>PropertyResourceBundle</code> is a concrete subclass of
<code>ResourceBundle</code> that manages resources for a locale
using a set of static strings from a property file. See
{@link ResourceBundle ResourceBundle} for more information about resource
bundles.

<p>
Unlike other types of resource bundle, you don't subclass
<code>PropertyResourceBundle</code>.  Instead, you supply properties
files containing the resource data.  <code>ResourceBundle.getBundle</code>
will automatically look for the appropriate properties file and create a
<code>PropertyResourceBundle</code> that refers to it. See
{@link ResourceBundle#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) ResourceBundle.getBundle}
for a complete description of the search and instantiation strategy.

<p>
The following <a name=\"sample\">example</a> shows a member of a resource
bundle family with the base name \"MyResources\".
The text defines the bundle \"MyResources_de\",
the German member of the bundle family.
This member is based on <code>PropertyResourceBundle</code>, and the text
therefore is the content of the file \"MyResources_de.properties\"
(a related <a href=\"ListResourceBundle.html#sample\">example</a> shows
how you can add bundles to this family that are implemented as subclasses
of <code>ListResourceBundle</code>).
The keys in this example are of the form \"s1\" etc. The actual
keys are entirely up to your choice, so long as they are the same as
the keys you use in your program to retrieve the objects from the bundle.
Keys are case-sensitive.
<blockquote>
<pre>
# MessageFormat pattern
s1=Die Platte \\\"{1}\\\" enth&auml;lt {0}.

# location of {0} in pattern
s2=1

# sample disk name
s3=Meine Platte

# first ChoiceFormat choice
s4=keine Dateien

# second ChoiceFormat choice
s5=eine Datei

# third ChoiceFormat choice
s6={0,number} Dateien

# sample date
s7=3. M&auml;rz 1996
</pre>
</blockquote>

<p>
The implementation of a {@code PropertyResourceBundle} subclass must be
thread-safe if it's simultaneously used by multiple threads. The default
implementations of the non-abstract methods in this class are thread-safe.

<p>
<strong>Note:</strong> PropertyResourceBundle can be constructed either
from an InputStream or a Reader, which represents a property file.
Constructing a PropertyResourceBundle instance from an InputStream requires
that the input stream be encoded in ISO-8859-1.  In that case, characters
that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes
as defined in section 3.3 of
<cite>The Java&trade; Language Specification</cite>
whereas the other constructor which takes a Reader does not have that limitation.

@see ResourceBundle
@see ListResourceBundle
@see Properties
@since JDK1.1
"
      classrelation 3536770 // <generalisation>
	relation 3536770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3536770 // <generalisation>
	  b parent class_ref 249858 // ResourceBundle
      end

      operation 8880386 "PropertyResourceBundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "stream" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Creates a property resource bundle from an {@link java.io.InputStream
InputStream}.  The property file read with this constructor
must be encoded in ISO-8859-1.

@param stream an InputStream that represents a property file
       to read from.
@throws IOException if an I/O error occurs
@throws NullPointerException if <code>stream</code> is null
@throws IllegalArgumentException if {@code stream} contains a
    malformed Unicode escape sequence.
"
      end

      operation 8880514 "PropertyResourceBundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "reader" type class_ref 407298 // Reader
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\", \"rawtypes\"})
"
	
	
	
	comment "Creates a property resource bundle from a {@link java.io.Reader
Reader}.  Unlike the constructor
{@link #PropertyResourceBundle(java.io.InputStream) PropertyResourceBundle(InputStream)},
there is no limitation as to the encoding of the input property file.

@param reader a Reader that represents a property file to
       read from.
@throws IOException if an I/O error occurs
@throws NullPointerException if <code>reader</code> is null
@throws IllegalArgumentException if a malformed Unicode escape sequence appears
    from {@code reader}.
@since 1.6
"
      end

      operation 8880642 "handleGetObject"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implements java.util.ResourceBundle.handleGetObject; inherits javadoc specification."
      end

      operation 8880770 "getKeys"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Enumeration</code> of the keys contained in
this <code>ResourceBundle</code> and its parent bundles.

@return an <code>Enumeration</code> of the keys contained in
        this <code>ResourceBundle</code> and its parent bundles.
@see #keySet()
"
      end

      operation 8880898 "handleKeySet"
	protected return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Set</code> of the keys contained
<em>only</em> in this <code>ResourceBundle</code>.

@return a <code>Set</code> of the keys contained only in this
        <code>ResourceBundle</code>
@since 1.6
@see #keySet()
"
      end

      classrelation 3536898 // lookup (<unidirectional association>)
	relation 3536898 --->
	  a role_name "lookup" private
	    comment " ==================privates====================
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Object> ${name}${value};
"
	    classrelation_ref 3536898 // lookup (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end
    end

    class 1090946 "RegularEnumSet"
      visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends "Enum<E>"
      nactuals 1
      actual class class_ref 1081986 // EnumSet
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Private implementation class for EnumSet, for \"regular sized\" enum types
(i.e., those with 64 or fewer enum constants).

@author Josh Bloch
@since 1.5
@serial exclude
"
      classrelation 3537026 // <realization>
	relation 3537026 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3537026 // <realization>
	  b parent class_ref 1081986 // EnumSet
      end

      attribute 2068994 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3411599620347842686L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2069122 "elements"
	private explicit_type "long"
	init_value " 0L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bit vector representation of this set.  The 2^k bit indicates the
presence of universe[k] in this set.

"
      end

      operation 8881026 "RegularEnumSet"
	cpp_inline package explicit_return_type ""
	nparams 2
	  param inout name "elementType" type class_ref 130818 // Class
	  param inout name "universe" type class_ref 172034 // Enum
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<?>[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8881154 "addRange"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "from" explicit_type "E"
	  param inout name "to" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8881282 "addAll"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8881410 "complement"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8881538 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements contained in this set.  The
iterator traverses the elements in their <i>natural order</i> (which is
the order in which the enum constants are declared). The returned
Iterator is a \"snapshot\" iterator that will never throw {@link
ConcurrentModificationException}; the elements are traversed as they
existed when this call was invoked.

@return an iterator over the elements contained in this set
"
      end

      class 1091074 "EnumSetIterator"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends "Enum<E>"
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3537154 // <realization>
	  relation 3537154 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3537154 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	attribute 2069250 "unseen"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A bit vector representing the elements in the set not yet
returned by this iterator.

"
	end

	attribute 2069378 "lastReturned"
	  package explicit_type "long"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The bit representing the last element returned by this iterator
but not removed, or zero if no such element exists.

"
	end

	operation 8881666 "EnumSetIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8881794 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8881922 "next"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 8882050 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8882178 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this set.

@return the number of elements in this set
"
      end

      operation 8882306 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains no elements.

@return <tt>true</tt> if this set contains no elements
"
      end

      operation 8882434 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this set contains the specified element.

@param e element to be checked for containment in this collection
@return <tt>true</tt> if this set contains the specified element
"
      end

      operation 8882562 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modification Operations

Adds the specified element to this set if it is not already present.

@param e element to be added to this set
@return <tt>true</tt> if the set changed as a result of the call

@throws NullPointerException if <tt>e</tt> is null
"
      end

      operation 8882690 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified element from this set if it is present.

@param e element to be removed from this set, if present
@return <tt>true</tt> if the set contained the specified element
"
      end

      operation 8882818 "containsAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bulk Operations

Returns <tt>true</tt> if this set contains all of the elements
in the specified collection.

@param c collection to be checked for containment in this set
@return <tt>true</tt> if this set contains all of the elements
       in the specified collection
@throws NullPointerException if the specified collection is null
"
      end

      operation 8882946 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this set.

@param c collection whose elements are to be added to this set
@return <tt>true</tt> if this set changed as a result of the call
@throws NullPointerException if the specified collection or any
    of its elements are null
"
      end

      operation 8883074 "removeAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from this set all of its elements that are contained in
the specified collection.

@param c elements to be removed from this set
@return <tt>true</tt> if this set changed as a result of the call
@throws NullPointerException if the specified collection is null
"
      end

      operation 8883202 "retainAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retains only the elements in this set that are contained in the
specified collection.

@param c elements to be retained in this set
@return <tt>true</tt> if this set changed as a result of the call
@throws NullPointerException if the specified collection is null
"
      end

      operation 8883330 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this set.
"
      end

      operation 8883458 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified object with this set for equality.  Returns
<tt>true</tt> if the given object is also a set, the two sets have
the same size, and every member of the given set is contained in
this set.

@param o object to be compared for equality with this set
@return <tt>true</tt> if the specified object is equal to this set
"
      end
    end

    class 1091202 "Scanner"
      visibility public 
      nactuals 1
      actual class class_ref 132994 // Iterator
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple text scanner which can parse primitive types and strings using
regular expressions.

<p>A <code>Scanner</code> breaks its input into tokens using a
delimiter pattern, which by default matches whitespace. The resulting
tokens may then be converted into values of different types using the
various <tt>next</tt> methods.

<p>For example, this code allows a user to read a number from
<tt>System.in</tt>:
<blockquote><pre>{@code
    Scanner sc = new Scanner(System.in);
    int i = sc.nextInt();
}</pre></blockquote>

<p>As another example, this code allows <code>long</code> types to be
assigned from entries in a file <code>myNumbers</code>:
<blockquote><pre>{@code
     Scanner sc = new Scanner(new File(\"myNumbers\"));
     while (sc.hasNextLong()) {
         long aLong = sc.nextLong();
     }
}</pre></blockquote>

<p>The scanner can also use delimiters other than whitespace. This
example reads several items in from a string:
<blockquote><pre>{@code
    String input = \"1 fish 2 fish red fish blue fish\";
    Scanner s = new Scanner(input).useDelimiter(\"\\\\s*fish\\\\s*\");
    System.out.println(s.nextInt());
    System.out.println(s.nextInt());
    System.out.println(s.next());
    System.out.println(s.next());
    s.close();
}</pre></blockquote>
<p>
prints the following output:
<blockquote><pre>{@code
    1
    2
    red
    blue
}</pre></blockquote>

<p>The same output can be generated with this code, which uses a regular
expression to parse all four tokens at once:
<blockquote><pre>{@code
    String input = \"1 fish 2 fish red fish blue fish\";
    Scanner s = new Scanner(input);
    s.findInLine(\"(\\\\d+) fish (\\\\d+) fish (\\\\w+) fish (\\\\w+)\");
    MatchResult result = s.match();
    for (int i=1; i<=result.groupCount(); i++)
        System.out.println(result.group(i));
    s.close();
}</pre></blockquote>

<p>The <a name=\"default-delimiter\">default whitespace delimiter</a> used
by a scanner is as recognized by {@link java.lang.Character}.{@link
java.lang.Character#isWhitespace(char) isWhitespace}. The {@link #reset}
method will reset the value of the scanner's delimiter to the default
whitespace delimiter regardless of whether it was previously changed.

<p>A scanning operation may block waiting for input.

<p>The {@link #next} and {@link #hasNext} methods and their
primitive-type companion methods (such as {@link #nextInt} and
{@link #hasNextInt}) first skip any input that matches the delimiter
pattern, and then attempt to return the next token. Both <tt>hasNext</tt>
and <tt>next</tt> methods may block waiting for further input.  Whether a
<tt>hasNext</tt> method blocks has no connection to whether or not its
associated <tt>next</tt> method will block.

<p> The {@link #findInLine}, {@link #findWithinHorizon}, and {@link #skip}
methods operate independently of the delimiter pattern. These methods will
attempt to match the specified pattern with no regard to delimiters in the
input and thus can be used in special circumstances where delimiters are
not relevant. These methods may block waiting for more input.

<p>When a scanner throws an {@link InputMismatchException}, the scanner
will not pass the token that caused the exception, so that it may be
retrieved or skipped via some other method.

<p>Depending upon the type of delimiting pattern, empty tokens may be
returned. For example, the pattern <tt>\"\\\\s+\"</tt> will return no empty
tokens since it matches multiple instances of the delimiter. The delimiting
pattern <tt>\"\\\\s\"</tt> could return empty tokens since it only passes one
space at a time.

<p> A scanner can read text from any object which implements the {@link
java.lang.Readable} interface.  If an invocation of the underlying
readable's {@link java.lang.Readable#read} method throws an {@link
java.io.IOException} then the scanner assumes that the end of the input
has been reached.  The most recent <tt>IOException</tt> thrown by the
underlying readable can be retrieved via the {@link #ioException} method.

<p>When a <code>Scanner</code> is closed, it will close its input source
if the source implements the {@link java.io.Closeable} interface.

<p>A <code>Scanner</code> is not safe for multithreaded use without
external synchronization.

<p>Unless otherwise mentioned, passing a <code>null</code> parameter into
any method of a <code>Scanner</code> will cause a
<code>NullPointerException</code> to be thrown.

<p>A scanner will default to interpreting numbers as decimal unless a
different radix has been set by using the {@link #useRadix} method. The
{@link #reset} method will reset the value of the scanner's radix to
<code>10</code> regardless of whether it was previously changed.

<h3> <a name=\"localized-numbers\">Localized numbers</a> </h3>

<p> An instance of this class is capable of scanning numbers in the standard
formats as well as in the formats of the scanner's locale. A scanner's
<a name=\"initial-locale\">initial locale </a>is the value returned by the {@link
java.util.Locale#getDefault(Locale.Category)
Locale.getDefault(Locale.Category.FORMAT)} method; it may be changed via the {@link
#useLocale} method. The {@link #reset} method will reset the value of the
scanner's locale to the initial locale regardless of whether it was
previously changed.

<p>The localized formats are defined in terms of the following parameters,
which for a particular locale are taken from that locale's {@link
java.text.DecimalFormat DecimalFormat} object, <tt>df</tt>, and its and
{@link java.text.DecimalFormatSymbols DecimalFormatSymbols} object,
<tt>dfs</tt>.

<blockquote><dl>
    <dt><i>LocalGroupSeparator&nbsp;&nbsp;</i>
        <dd>The character used to separate thousands groups,
        <i>i.e.,</i>&nbsp;<tt>dfs.</tt>{@link
        java.text.DecimalFormatSymbols#getGroupingSeparator
        getGroupingSeparator()}
    <dt><i>LocalDecimalSeparator&nbsp;&nbsp;</i>
        <dd>The character used for the decimal point,
    <i>i.e.,</i>&nbsp;<tt>dfs.</tt>{@link
    java.text.DecimalFormatSymbols#getDecimalSeparator
    getDecimalSeparator()}
    <dt><i>LocalPositivePrefix&nbsp;&nbsp;</i>
        <dd>The string that appears before a positive number (may
        be empty), <i>i.e.,</i>&nbsp;<tt>df.</tt>{@link
        java.text.DecimalFormat#getPositivePrefix
        getPositivePrefix()}
    <dt><i>LocalPositiveSuffix&nbsp;&nbsp;</i>
        <dd>The string that appears after a positive number (may be
        empty), <i>i.e.,</i>&nbsp;<tt>df.</tt>{@link
        java.text.DecimalFormat#getPositiveSuffix
        getPositiveSuffix()}
    <dt><i>LocalNegativePrefix&nbsp;&nbsp;</i>
        <dd>The string that appears before a negative number (may
        be empty), <i>i.e.,</i>&nbsp;<tt>df.</tt>{@link
        java.text.DecimalFormat#getNegativePrefix
        getNegativePrefix()}
    <dt><i>LocalNegativeSuffix&nbsp;&nbsp;</i>
        <dd>The string that appears after a negative number (may be
        empty), <i>i.e.,</i>&nbsp;<tt>df.</tt>{@link
    java.text.DecimalFormat#getNegativeSuffix
    getNegativeSuffix()}
    <dt><i>LocalNaN&nbsp;&nbsp;</i>
        <dd>The string that represents not-a-number for
        floating-point values,
        <i>i.e.,</i>&nbsp;<tt>dfs.</tt>{@link
        java.text.DecimalFormatSymbols#getNaN
        getNaN()}
    <dt><i>LocalInfinity&nbsp;&nbsp;</i>
        <dd>The string that represents infinity for floating-point
        values, <i>i.e.,</i>&nbsp;<tt>dfs.</tt>{@link
        java.text.DecimalFormatSymbols#getInfinity
        getInfinity()}
</dl></blockquote>

<h4> <a name=\"number-syntax\">Number syntax</a> </h4>

<p> The strings that can be parsed as numbers by an instance of this class
are specified in terms of the following regular-expression grammar, where
Rmax is the highest digit in the radix being used (for example, Rmax is 9 in base 10).

<dl>
  <dt><i>NonAsciiDigit</i>:
      <dd>A non-ASCII character c for which
           {@link java.lang.Character#isDigit Character.isDigit}<tt>(c)</tt>
                       returns&nbsp;true

  <dt><i>Non0Digit</i>:
      <dd><tt>[1-</tt><i>Rmax</i><tt>] | </tt><i>NonASCIIDigit</i>

  <dt><i>Digit</i>:
      <dd><tt>[0-</tt><i>Rmax</i><tt>] | </tt><i>NonASCIIDigit</i>

  <dt><i>GroupedNumeral</i>:
      <dd><tt>(&nbsp;</tt><i>Non0Digit</i>
                  <i>Digit</i><tt>?
                  </tt><i>Digit</i><tt>?</tt>
      <dd>&nbsp;&nbsp;&nbsp;&nbsp;<tt>(&nbsp;</tt><i>LocalGroupSeparator</i>
                        <i>Digit</i>
                        <i>Digit</i>
                        <i>Digit</i><tt> )+ )</tt>

  <dt><i>Numeral</i>:
      <dd><tt>( ( </tt><i>Digit</i><tt>+ )
              | </tt><i>GroupedNumeral</i><tt> )</tt>

  <dt><a name=\"Integer-regex\"><i>Integer</i>:</a>
      <dd><tt>( [-+]? ( </tt><i>Numeral</i><tt>
                              ) )</tt>
      <dd><tt>| </tt><i>LocalPositivePrefix</i> <i>Numeral</i>
                     <i>LocalPositiveSuffix</i>
      <dd><tt>| </tt><i>LocalNegativePrefix</i> <i>Numeral</i>
                <i>LocalNegativeSuffix</i>

  <dt><i>DecimalNumeral</i>:
      <dd><i>Numeral</i>
      <dd><tt>| </tt><i>Numeral</i>
                <i>LocalDecimalSeparator</i>
                <i>Digit</i><tt>*</tt>
      <dd><tt>| </tt><i>LocalDecimalSeparator</i>
                <i>Digit</i><tt>+</tt>

  <dt><i>Exponent</i>:
      <dd><tt>( [eE] [+-]? </tt><i>Digit</i><tt>+ )</tt>

  <dt><a name=\"Decimal-regex\"><i>Decimal</i>:</a>
      <dd><tt>( [-+]? </tt><i>DecimalNumeral</i>
                        <i>Exponent</i><tt>? )</tt>
      <dd><tt>| </tt><i>LocalPositivePrefix</i>
                <i>DecimalNumeral</i>
                <i>LocalPositiveSuffix</i>
                <i>Exponent</i><tt>?</tt>
      <dd><tt>| </tt><i>LocalNegativePrefix</i>
                <i>DecimalNumeral</i>
                <i>LocalNegativeSuffix</i>
                <i>Exponent</i><tt>?</tt>

  <dt><i>HexFloat</i>:
      <dd><tt>[-+]? 0[xX][0-9a-fA-F]*\\.[0-9a-fA-F]+
                ([pP][-+]?[0-9]+)?</tt>

  <dt><i>NonNumber</i>:
      <dd><tt>NaN
                         | </tt><i>LocalNan</i><tt>
                         | Infinity
                         | </tt><i>LocalInfinity</i>

  <dt><i>SignedNonNumber</i>:
      <dd><tt>( [-+]? </tt><i>NonNumber</i><tt> )</tt>
      <dd><tt>| </tt><i>LocalPositivePrefix</i>
                <i>NonNumber</i>
                <i>LocalPositiveSuffix</i>
      <dd><tt>| </tt><i>LocalNegativePrefix</i>
                <i>NonNumber</i>
                <i>LocalNegativeSuffix</i>

  <dt><a name=\"Float-regex\"><i>Float</i></a>:
      <dd><i>Decimal</i>
          <tt>| </tt><i>HexFloat</i>
          <tt>| </tt><i>SignedNonNumber</i>

</dl>
<p>Whitespace is not significant in the above regular expressions.

@since   1.5
"
      classrelation 3537282 // <realization>
	relation 3537282 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3537282 // <realization>
	  b parent class_ref 132994 // Iterator
      end

      classrelation 3537410 // <realization>
	relation 3537410 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3537410 // <realization>
	  b parent class_ref 146562 // Closeable
      end

      classrelation 3537538 // buf (<unidirectional association>)
	relation 3537538 --->
	  a role_name "buf" private
	    comment " Internal buffer used to hold input
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3537538 // buf (<unidirectional association>)
	  b parent class_ref 548482 // CharBuffer
      end

      attribute 2069506 "BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of internal character buffer
 change to 1024;"
      end

      attribute 2069634 "position"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The index into the buffer currently held by the Scanner
"
      end

      classrelation 3537666 // matcher (<unidirectional association>)
	relation 3537666 --->
	  a role_name "matcher" private
	    comment " Internal matcher used for finding delimiters
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3537666 // matcher (<unidirectional association>)
	  b parent class_ref 834690 // Matcher
      end

      classrelation 3537794 // delimPattern (<unidirectional association>)
	relation 3537794 --->
	  a role_name "delimPattern" private
	    comment " Pattern used to delimit tokens
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3537794 // delimPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3537922 // hasNextPattern (<unidirectional association>)
	relation 3537922 --->
	  a role_name "hasNextPattern" private
	    comment " Pattern found in last hasNext operation
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3537922 // hasNextPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      attribute 2069762 "hasNextPosition"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Position after last hasNext operation
"
      end

      classrelation 3538050 // hasNextResult (<unidirectional association>)
	relation 3538050 --->
	  a role_name "hasNextResult" private
	    comment " Result after last hasNext operation
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538050 // hasNextResult (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3538178 // source (<unidirectional association>)
	relation 3538178 --->
	  a role_name "source" private
	    comment " The input source
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538178 // source (<unidirectional association>)
	  b parent class_ref 548354 // Readable
      end

      attribute 2069890 "sourceClosed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean is true if source is done
"
      end

      attribute 2070018 "needInput"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean indicating more input is required
"
      end

      attribute 2070146 "skipped"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean indicating if a delim has been skipped this operation
"
      end

      attribute 2070274 "savedScannerPosition"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A store of a position that the scanner may fall back to
"
      end

      classrelation 3538306 // typeCache (<unidirectional association>)
	relation 3538306 --->
	  a role_name "typeCache" init_value " null" private
	    comment " A cache of the last primitive type scanned
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538306 // typeCache (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2070402 "matchValid"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean indicating if a match result is available
"
      end

      attribute 2070530 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean indicating if this scanner has been closed
"
      end

      attribute 2070658 "radix"
	private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current radix used by this scanner
"
      end

      attribute 2070786 "defaultRadix"
	private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The default radix for this scanner
"
      end

      classrelation 3538434 // locale (<unidirectional association>)
	relation 3538434 --->
	  a role_name "locale" init_value " null" private
	    comment " The locale used by this scanner
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538434 // locale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 3538562 // patternCache (<unidirectional association>)
	relation 3538562 --->
	  stereotype "LRUCache"
	  a role_name "patternCache" init_value "
    new LRUCache<String,Pattern>(7) {
        protected Pattern create(String s) {
            return Pattern.compile(s);
        }
        protected boolean hasName(Pattern p, String s) {
            return p.pattern().equals(s);
        }
    }" private
	    comment " A cache of the last few recently used Patterns
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type},Pattern> ${name}${value};
"
	    classrelation_ref 3538562 // patternCache (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3538690 // lastException (<unidirectional association>)
	relation 3538690 --->
	  a role_name "lastException" private
	    comment " A holder of the last IOException encountered
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538690 // lastException (<unidirectional association>)
	  b parent class_ref 146818 // IOException
      end

      classrelation 3538818 // WHITESPACE_PATTERN (<unidirectional association>)
	relation 3538818 --->
	  a role_name "WHITESPACE_PATTERN" init_value " Pattern.compile(
                                                \"\\\\p{javaWhitespace}+\")" class_relation private
	    comment " A pattern for java whitespace
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538818 // WHITESPACE_PATTERN (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3538946 // FIND_ANY_PATTERN (<unidirectional association>)
	relation 3538946 --->
	  a role_name "FIND_ANY_PATTERN" init_value " Pattern.compile(\"(?s).*\")" class_relation private
	    comment " A pattern for any token
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3538946 // FIND_ANY_PATTERN (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3539074 // NON_ASCII_DIGIT (<unidirectional association>)
	relation 3539074 --->
	  a role_name "NON_ASCII_DIGIT" init_value " Pattern.compile(
        \"[\\\\p{javaDigit}&&[^0-9]]\")" class_relation private
	    comment " A pattern for non-ASCII digits
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539074 // NON_ASCII_DIGIT (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3539202 // groupSeparator (<unidirectional association>)
	relation 3539202 --->
	  a role_name "groupSeparator" init_value " \"\\\\,\"" private
	    comment " Fields and methods to support scanning primitive types

Locale dependent values used to scan numbers

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539202 // groupSeparator (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3539330 // decimalSeparator (<unidirectional association>)
	relation 3539330 --->
	  a role_name "decimalSeparator" init_value " \"\\\\.\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539330 // decimalSeparator (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3539458 // nanString (<unidirectional association>)
	relation 3539458 --->
	  a role_name "nanString" init_value " \"NaN\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539458 // nanString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3539586 // infinityString (<unidirectional association>)
	relation 3539586 --->
	  a role_name "infinityString" init_value " \"Infinity\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539586 // infinityString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3539714 // positivePrefix (<unidirectional association>)
	relation 3539714 --->
	  a role_name "positivePrefix" init_value " \"\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539714 // positivePrefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3539842 // negativePrefix (<unidirectional association>)
	relation 3539842 --->
	  a role_name "negativePrefix" init_value " \"\\\\-\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539842 // negativePrefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3539970 // positiveSuffix (<unidirectional association>)
	relation 3539970 --->
	  a role_name "positiveSuffix" init_value " \"\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3539970 // positiveSuffix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3540098 // negativeSuffix (<unidirectional association>)
	relation 3540098 --->
	  a role_name "negativeSuffix" init_value " \"\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540098 // negativeSuffix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3540226 // boolPattern (<unidirectional association>)
	relation 3540226 --->
	  a role_name "boolPattern" class_relation volatile private
	    comment "
Fields and an accessor method to match booleans

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540226 // boolPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3540354 // BOOLEAN_PATTERN (<unidirectional association>)
	relation 3540354 --->
	  a role_name "BOOLEAN_PATTERN" init_value " \"true|false\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540354 // BOOLEAN_PATTERN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8883586 "boolPattern"
	class_operation private return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3540482 // integerPattern (<unidirectional association>)
	relation 3540482 --->
	  a role_name "integerPattern" private
	    comment "
Fields and methods to match bytes, shorts, ints, and longs

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540482 // integerPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3540610 // digits (<unidirectional association>)
	relation 3540610 --->
	  a role_name "digits" init_value " \"0123456789abcdefghijklmnopqrstuvwxyz\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540610 // digits (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3540738 // non0Digit (<unidirectional association>)
	relation 3540738 --->
	  a role_name "non0Digit" init_value " \"[\\\\p{javaDigit}&&[^0]]\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540738 // non0Digit (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2070914 "SIMPLE_GROUP_INDEX"
	private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8883714 "buildIntegerPatternString"
	private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8883842 "integerPattern"
	private return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3540866 // separatorPattern (<unidirectional association>)
	relation 3540866 --->
	  a role_name "separatorPattern" class_relation volatile private
	    comment "
Fields and an accessor method to match line separators

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540866 // separatorPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3540994 // linePattern (<unidirectional association>)
	relation 3540994 --->
	  a role_name "linePattern" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3540994 // linePattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3541122 // LINE_SEPARATOR_PATTERN (<unidirectional association>)
	relation 3541122 --->
	  a role_name "LINE_SEPARATOR_PATTERN" init_value "
                                           \"\\r\\n|[\\n\\r\\u2028\\u2029\\u0085]\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3541122 // LINE_SEPARATOR_PATTERN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3541250 // LINE_PATTERN (<unidirectional association>)
	relation 3541250 --->
	  a role_name "LINE_PATTERN" init_value " \".*(\"+LINE_SEPARATOR_PATTERN+\")|.+$\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3541250 // LINE_PATTERN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8883970 "separatorPattern"
	class_operation private return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8884098 "linePattern"
	class_operation private return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3541378 // floatPattern (<unidirectional association>)
	relation 3541378 --->
	  a role_name "floatPattern" private
	    comment "
Fields and methods to match floats and doubles

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3541378 // floatPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      classrelation 3541506 // decimalPattern (<unidirectional association>)
	relation 3541506 --->
	  a role_name "decimalPattern" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3541506 // decimalPattern (<unidirectional association>)
	  b parent class_ref 417154 // Pattern
      end

      operation 8884226 "buildFloatAndDecimalPattern"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8884354 "floatPattern"
	private return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8884482 "decimalPattern"
	private return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8884610 "Scanner"
	private explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 548354 // Readable
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

Constructs a <code>Scanner</code> that returns values scanned
from the specified source delimited by the specified pattern.

@param source A character source implementing the Readable interface
@param pattern A delimiting pattern
"
      end

      operation 8884738 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 548354 // Readable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified source.

@param  source A character source implementing the {@link Readable}
        interface
"
      end

      operation 8884866 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified input stream. Bytes from the stream are converted
into characters using the underlying platform's
{@linkplain java.nio.charset.Charset#defaultCharset() default charset}.

@param  source An input stream to be scanned
"
      end

      operation 8884994 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 146434 // InputStream
	  param inout name "charsetName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified input stream. Bytes from the stream are converted
into characters using the specified charset.

@param  source An input stream to be scanned
@param charsetName The encoding type used to convert bytes from the
       stream into characters to be scanned
@throws IllegalArgumentException if the specified character set
        does not exist
"
      end

      operation 8885122 "toCharset"
	class_operation private return_type class_ref 853634 // Charset
	nparams 1
	  param inout name "csn" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a charset object for the given charset name.
@throws NullPointerException          is csn is null
@throws IllegalArgumentException      if the charset is not supported
"
      end

      operation 8885250 "makeReadable"
	class_operation private return_type class_ref 548354 // Readable
	nparams 2
	  param inout name "source" type class_ref 146434 // InputStream
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8885378 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified file. Bytes from the file are converted into
characters using the underlying platform's
{@linkplain java.nio.charset.Charset#defaultCharset() default charset}.

@param  source A file to be scanned
@throws FileNotFoundException if source is not found
"
      end

      operation 8885506 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 131970 // File
	  param inout name "charsetName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified file. Bytes from the file are converted into
characters using the specified charset.

@param  source A file to be scanned
@param charsetName The encoding type used to convert bytes from the file
       into characters to be scanned
@throws FileNotFoundException if source is not found
@throws IllegalArgumentException if the specified encoding is
        not found
"
      end

      operation 8885634 "Scanner"
	private explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 131970 // File
	  param inout name "dec" type class_ref 167554 // CharsetDecoder
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8885762 "toDecoder"
	class_operation private return_type class_ref 167554 // CharsetDecoder
	nparams 1
	  param inout name "charsetName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8885890 "makeReadable"
	class_operation private return_type class_ref 548354 // Readable
	nparams 2
	  param inout name "source" type class_ref 986498 // ReadableByteChannel
	  param inout name "dec" type class_ref 167554 // CharsetDecoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8886018 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 923650 // Path
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified file. Bytes from the file are converted into
characters using the underlying platform's
{@linkplain java.nio.charset.Charset#defaultCharset() default charset}.

@param   source
         the path to the file to be scanned
@throws  IOException
         if an I/O error occurs opening source

@since   1.7
"
      end

      operation 8886146 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 923650 // Path
	  param inout name "charsetName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified file. Bytes from the file are converted into
characters using the specified charset.

@param   source
         the path to the file to be scanned
@param   charsetName
         The encoding type used to convert bytes from the file
         into characters to be scanned
@throws  IOException
         if an I/O error occurs opening source
@throws  IllegalArgumentException
         if the specified encoding is not found
@since   1.7
"
      end

      operation 8886274 "Scanner"
	private explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 923650 // Path
	  param inout name "charset" type class_ref 853634 // Charset
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8886402 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified string.

@param  source A string to scan
"
      end

      operation 8886530 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 986498 // ReadableByteChannel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified channel. Bytes from the source are converted into
characters using the underlying platform's
{@linkplain java.nio.charset.Charset#defaultCharset() default charset}.

@param  source A channel to scan
"
      end

      operation 8886658 "makeReadable"
	class_operation private return_type class_ref 548354 // Readable
	nparams 1
	  param inout name "source" type class_ref 986498 // ReadableByteChannel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8886786 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 986498 // ReadableByteChannel
	  param inout name "charsetName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Scanner</code> that produces values scanned
from the specified channel. Bytes from the source are converted into
characters using the specified charset.

@param  source A channel to scan
@param charsetName The encoding type used to convert bytes from the
       channel into characters to be scanned
@throws IllegalArgumentException if the specified character set
        does not exist
"
      end

      operation 8886914 "saveState"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private primitives used to support scanning"
      end

      operation 8887042 "revertState"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8887170 "revertState"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8887298 "cacheResult"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8887426 "cacheResult"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8887554 "clearCaches"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clears both regular cache and type cache"
      end

      operation 8887682 "getCachedResult"
	private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Also clears both the regular cache and the type cache"
      end

      operation 8887810 "useTypeCache"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Also clears both the regular cache and the type cache"
      end

      operation 8887938 "readInput"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tries to read more input. May block."
      end

      operation 8888066 "makeSpace"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " After this method is called there will either be an exception
 or else there will be space in the buffer"
      end

      operation 8888194 "translateSavedIndexes"
	private explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " When a buffer compaction/reallocation occurs the saved indexes must
 be modified appropriately"
      end

      operation 8888322 "throwFor"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If we are at the end of input then NoSuchElement;
 If there is still input left then InputMismatch"
      end

      operation 8888450 "hasTokenInBuffer"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if a complete token or partial token is in the buffer.
 It is not necessary to find a complete token since a partial token
 means that there will be another token with or without more input."
      end

      operation 8888578 "getCompleteTokenInBuffer"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a \"complete token\" that matches the specified pattern

A token is complete if surrounded by delims; a partial token
is prefixed by delims but not postfixed by them

The position is advanced to the end of that complete token

Pattern == null means accept any token at all

Triple return:
1. valid string means it was found
2. null with needInput=false means we won't ever find it
3. null with needInput=true means try again after readInput
"
      end

      operation 8888706 "findPatternInBuffer"
	private return_type class_ref 128130 // String
	nparams 2
	  param inout name "pattern" type class_ref 417154 // Pattern
	  param in name "horizon" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finds the specified pattern in the buffer up to horizon.
 Returns a match for the specified input pattern."
      end

      operation 8888834 "matchPatternInBuffer"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a match for the specified input pattern anchored at
 the current position"
      end

      operation 8888962 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Throws if the scanner is closed"
      end

      operation 8889090 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

Closes this scanner.

<p> If this scanner has not yet been closed then if its underlying
{@linkplain java.lang.Readable readable} also implements the {@link
java.io.Closeable} interface then the readable's <tt>close</tt> method
will be invoked.  If this scanner is already closed then invoking this
method will have no effect.

<p>Attempting to perform search operations after a scanner has
been closed will result in an {@link IllegalStateException}.

"
      end

      operation 8889218 "ioException"
	public return_type class_ref 146818 // IOException
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>IOException</code> last thrown by this
<code>Scanner</code>'s underlying <code>Readable</code>. This method
returns <code>null</code> if no such exception exists.

@return the last exception thrown by this scanner's readable
"
      end

      operation 8889346 "delimiter"
	public return_type class_ref 417154 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Pattern</code> this <code>Scanner</code> is currently
using to match delimiters.

@return this scanner's delimiting pattern.
"
      end

      operation 8889474 "useDelimiter"
	public return_type class_ref 1091202 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this scanner's delimiting pattern to the specified pattern.

@param pattern A delimiting pattern
@return this scanner
"
      end

      operation 8889602 "useDelimiter"
	public return_type class_ref 1091202 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this scanner's delimiting pattern to a pattern constructed from
the specified <code>String</code>.

<p> An invocation of this method of the form
<tt>useDelimiter(pattern)</tt> behaves in exactly the same way as the
invocation <tt>useDelimiter(Pattern.compile(pattern))</tt>.

<p> Invoking the {@link #reset} method will set the scanner's delimiter
to the <a href= \"#default-delimiter\">default</a>.

@param pattern A string specifying a delimiting pattern
@return this scanner
"
      end

      operation 8889730 "locale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this scanner's locale.

<p>A scanner's locale affects many elements of its default
primitive matching regular expressions; see
<a href= \"#localized-numbers\">localized numbers</a> above.

@return this scanner's locale
"
      end

      operation 8889858 "useLocale"
	public return_type class_ref 1091202 // Scanner
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this scanner's locale to the specified locale.

<p>A scanner's locale affects many elements of its default
primitive matching regular expressions; see
<a href= \"#localized-numbers\">localized numbers</a> above.

<p>Invoking the {@link #reset} method will set the scanner's locale to
the <a href= \"#initial-locale\">initial locale</a>.

@param locale A string specifying the locale to use
@return this scanner
"
      end

      operation 8889986 "radix"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this scanner's default radix.

<p>A scanner's radix affects elements of its default
number matching regular expressions; see
<a href= \"#localized-numbers\">localized numbers</a> above.

@return the default radix of this scanner
"
      end

      operation 8890114 "useRadix"
	public return_type class_ref 1091202 // Scanner
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this scanner's default radix to the specified radix.

<p>A scanner's radix affects elements of its default
number matching regular expressions; see
<a href= \"#localized-numbers\">localized numbers</a> above.

<p>If the radix is less than <code>Character.MIN_RADIX</code>
or greater than <code>Character.MAX_RADIX</code>, then an
<code>IllegalArgumentException</code> is thrown.

<p>Invoking the {@link #reset} method will set the scanner's radix to
<code>10</code>.

@param radix The radix to use when scanning numbers
@return this scanner
@throws IllegalArgumentException if radix is out of range
"
      end

      operation 8890242 "setRadix"
	private explicit_return_type "void"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The next operation should occur in the specified radix but
 the default is left untouched."
      end

      operation 8890370 "match"
	public return_type class_ref 1091330 // MatchResult
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the match result of the last scanning operation performed
by this scanner. This method throws <code>IllegalStateException</code>
if no match has been performed, or if the last match was
not successful.

<p>The various <code>next</code>methods of <code>Scanner</code>
make a match result available if they complete without throwing an
exception. For instance, after an invocation of the {@link #nextInt}
method that returned an int, this method returns a
<code>MatchResult</code> for the search of the
<a href=\"#Integer-regex\"><i>Integer</i></a> regular expression
defined above. Similarly the {@link #findInLine},
{@link #findWithinHorizon}, and {@link #skip} methods will make a
match available if they succeed.

@return a match result for the last match operation
@throws IllegalStateException  If no match result is available
"
      end

      operation 8890498 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the string representation of this <code>Scanner</code>. The
string representation of a <code>Scanner</code> contains information
that may be useful for debugging. The exact format is unspecified.

@return  The string representation of this scanner
"
      end

      operation 8890626 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this scanner has another token in its input.
This method may block while waiting for input to scan.
The scanner does not advance past any input.

@return true if and only if this scanner has another token
@throws IllegalStateException if this scanner is closed
@see java.util.Iterator
"
      end

      operation 8890754 "next"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds and returns the next complete token from this scanner.
A complete token is preceded and followed by input that matches
the delimiter pattern. This method may block while waiting for input
to scan, even if a previous invocation of {@link #hasNext} returned
<code>true</code>.

@return the next token
@throws NoSuchElementException if no more tokens are available
@throws IllegalStateException if this scanner is closed
@see java.util.Iterator
"
      end

      operation 8890882 "remove"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The remove operation is not supported by this implementation of
<code>Iterator</code>.

@throws UnsupportedOperationException if this method is invoked.
@see java.util.Iterator
"
      end

      operation 8891010 "hasNext"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "pattern" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token matches the pattern constructed from the
specified string. The scanner does not advance past any input.

<p> An invocation of this method of the form <tt>hasNext(pattern)</tt>
behaves in exactly the same way as the invocation
<tt>hasNext(Pattern.compile(pattern))</tt>.

@param pattern a string specifying the pattern to scan
@return true if and only if this scanner has another token matching
        the specified pattern
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891138 "next"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "pattern" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token if it matches the pattern constructed from the
specified string.  If the match is successful, the scanner advances
past the input that matched the pattern.

<p> An invocation of this method of the form <tt>next(pattern)</tt>
behaves in exactly the same way as the invocation
<tt>next(Pattern.compile(pattern))</tt>.

@param pattern a string specifying the pattern to scan
@return the next token
@throws NoSuchElementException if no such tokens are available
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891266 "hasNext"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next complete token matches the specified pattern.
A complete token is prefixed and postfixed by input that matches
the delimiter pattern. This method may block while waiting for input.
The scanner does not advance past any input.

@param pattern the pattern to scan for
@return true if and only if this scanner has another token matching
        the specified pattern
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891394 "next"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token if it matches the specified pattern. This
method may block while waiting for input to scan, even if a previous
invocation of {@link #hasNext(Pattern)} returned <code>true</code>.
If the match is successful, the scanner advances past the input that
matched the pattern.

@param pattern the pattern to scan for
@return the next token
@throws NoSuchElementException if no more tokens are available
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891522 "hasNextLine"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is another line in the input of this scanner.
This method may block while waiting for input. The scanner does not
advance past any input.

@return true if and only if this scanner has another line of input
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891650 "nextLine"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Advances this scanner past the current line and returns the input
that was skipped.

This method returns the rest of the current line, excluding any line
separator at the end. The position is set to the beginning of the next
line.

<p>Since this method continues to search through the input looking
for a line separator, it may buffer all of the input searching for
the line to skip if no line separators are present.

@return the line that was skipped
@throws NoSuchElementException if no line was found
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891778 "findInLine"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "pattern" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods that ignore delimiters

Attempts to find the next occurrence of a pattern constructed from the
specified string, ignoring delimiters.

<p>An invocation of this method of the form <tt>findInLine(pattern)</tt>
behaves in exactly the same way as the invocation
<tt>findInLine(Pattern.compile(pattern))</tt>.

@param pattern a string specifying the pattern to search for
@return the text that matched the specified pattern
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8891906 "findInLine"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to find the next occurrence of the specified pattern ignoring
delimiters. If the pattern is found before the next line separator, the
scanner advances past the input that matched and returns the string that
matched the pattern.
If no such pattern is detected in the input up to the next line
separator, then <code>null</code> is returned and the scanner's
position is unchanged. This method may block waiting for input that
matches the pattern.

<p>Since this method continues to search through the input looking
for the specified pattern, it may buffer all of the input searching for
the desired token if no line separators are present.

@param pattern the pattern to scan for
@return the text that matched the specified pattern
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8892034 "findWithinHorizon"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "pattern" type class_ref 128130 // String
	  param in name "horizon" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to find the next occurrence of a pattern constructed from the
specified string, ignoring delimiters.

<p>An invocation of this method of the form
<tt>findWithinHorizon(pattern)</tt> behaves in exactly the same way as
the invocation
<tt>findWithinHorizon(Pattern.compile(pattern, horizon))</tt>.

@param pattern a string specifying the pattern to search for
@param horizon the search horizon
@return the text that matched the specified pattern
@throws IllegalStateException if this scanner is closed
@throws IllegalArgumentException if horizon is negative
"
      end

      operation 8892162 "findWithinHorizon"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "pattern" type class_ref 417154 // Pattern
	  param in name "horizon" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to find the next occurrence of the specified pattern.

<p>This method searches through the input up to the specified
search horizon, ignoring delimiters. If the pattern is found the
scanner advances past the input that matched and returns the string
that matched the pattern. If no such pattern is detected then the
null is returned and the scanner's position remains unchanged. This
method may block waiting for input that matches the pattern.

<p>A scanner will never search more than <code>horizon</code> code
points beyond its current position. Note that a match may be clipped
by the horizon; that is, an arbitrary match result may have been
different if the horizon had been larger. The scanner treats the
horizon as a transparent, non-anchoring bound (see {@link
Matcher#useTransparentBounds} and {@link Matcher#useAnchoringBounds}).

<p>If horizon is <code>0</code>, then the horizon is ignored and
this method continues to search through the input looking for the
specified pattern without bound. In this case it may buffer all of
the input searching for the pattern.

<p>If horizon is negative, then an IllegalArgumentException is
thrown.

@param pattern the pattern to scan for
@param horizon the search horizon
@return the text that matched the specified pattern
@throws IllegalStateException if this scanner is closed
@throws IllegalArgumentException if horizon is negative
"
      end

      operation 8892290 "skip"
	public return_type class_ref 1091202 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 417154 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips input that matches the specified pattern, ignoring delimiters.
This method will skip input if an anchored match of the specified
pattern succeeds.

<p>If a match to the specified pattern is not found at the
current position, then no input is skipped and a
<tt>NoSuchElementException</tt> is thrown.

<p>Since this method seeks to match the specified pattern starting at
the scanner's current position, patterns that can match a lot of
input (\".*\", for example) may cause the scanner to buffer a large
amount of input.

<p>Note that it is possible to skip something without risking a
<code>NoSuchElementException</code> by using a pattern that can
match nothing, e.g., <code>sc.skip(\"[ \\t]*\")</code>.

@param pattern a string specifying the pattern to skip over
@return this scanner
@throws NoSuchElementException if the specified pattern is not found
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8892418 "skip"
	public return_type class_ref 1091202 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips input that matches a pattern constructed from the specified
string.

<p> An invocation of this method of the form <tt>skip(pattern)</tt>
behaves in exactly the same way as the invocation
<tt>skip(Pattern.compile(pattern))</tt>.

@param pattern a string specifying the pattern to skip over
@return this scanner
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8892546 "hasNextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience methods for scanning primitives

Returns true if the next token in this scanner's input can be
interpreted as a boolean value using a case insensitive pattern
created from the string \"true|false\".  The scanner does not
advance past the input that matched.

@return true if and only if this scanner's next token is a valid
        boolean value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8892674 "nextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input into a boolean value and returns
that value. This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid boolean value.
If the match is successful, the scanner advances past the input that
matched.

@return the boolean scanned from the input
@throws InputMismatchException if the next token is not a valid boolean
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8892802 "hasNextByte"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a byte value in the default radix using the
{@link #nextByte} method. The scanner does not advance past any input.

@return true if and only if this scanner's next token is a valid
        byte value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8892930 "hasNextByte"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a byte value in the specified radix using the
{@link #nextByte} method. The scanner does not advance past any input.

@param radix the radix used to interpret the token as a byte value
@return true if and only if this scanner's next token is a valid
        byte value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893058 "nextByte"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>byte</tt>.

<p> An invocation of this method of the form
<tt>nextByte()</tt> behaves in exactly the same way as the
invocation <tt>nextByte(radix)</tt>, where <code>radix</code>
is the default radix of this scanner.

@return the <tt>byte</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893186 "nextByte"
	public explicit_return_type "byte"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>byte</tt>.
This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid byte value as
described below. If the translation is successful, the scanner advances
past the input that matched.

<p> If the next token matches the <a
href=\"#Integer-regex\"><i>Integer</i></a> regular expression defined
above then the token is converted into a <tt>byte</tt> value as if by
removing all locale specific prefixes, group separators, and locale
specific suffixes, then mapping non-ASCII digits into ASCII
digits via {@link Character#digit Character.digit}, prepending a
negative sign (-) if the locale specific negative prefixes and suffixes
were present, and passing the resulting string to
{@link Byte#parseByte(String, int) Byte.parseByte} with the
specified radix.

@param radix the radix used to interpret the token as a byte value
@return the <tt>byte</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893314 "hasNextShort"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a short value in the default radix using the
{@link #nextShort} method. The scanner does not advance past any input.

@return true if and only if this scanner's next token is a valid
        short value in the default radix
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893442 "hasNextShort"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a short value in the specified radix using the
{@link #nextShort} method. The scanner does not advance past any input.

@param radix the radix used to interpret the token as a short value
@return true if and only if this scanner's next token is a valid
        short value in the specified radix
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893570 "nextShort"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>short</tt>.

<p> An invocation of this method of the form
<tt>nextShort()</tt> behaves in exactly the same way as the
invocation <tt>nextShort(radix)</tt>, where <code>radix</code>
is the default radix of this scanner.

@return the <tt>short</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893698 "nextShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>short</tt>.
This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid short value as
described below. If the translation is successful, the scanner advances
past the input that matched.

<p> If the next token matches the <a
href=\"#Integer-regex\"><i>Integer</i></a> regular expression defined
above then the token is converted into a <tt>short</tt> value as if by
removing all locale specific prefixes, group separators, and locale
specific suffixes, then mapping non-ASCII digits into ASCII
digits via {@link Character#digit Character.digit}, prepending a
negative sign (-) if the locale specific negative prefixes and suffixes
were present, and passing the resulting string to
{@link Short#parseShort(String, int) Short.parseShort} with the
specified radix.

@param radix the radix used to interpret the token as a short value
@return the <tt>short</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893826 "hasNextInt"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as an int value in the default radix using the
{@link #nextInt} method. The scanner does not advance past any input.

@return true if and only if this scanner's next token is a valid
        int value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8893954 "hasNextInt"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as an int value in the specified radix using the
{@link #nextInt} method. The scanner does not advance past any input.

@param radix the radix used to interpret the token as an int value
@return true if and only if this scanner's next token is a valid
        int value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894082 "processIntegerToken"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "token" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The integer token must be stripped of prefixes, group separators,
and suffixes, non ascii digits must be converted into ascii digits
before parse will accept it.
"
      end

      operation 8894210 "nextInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as an <tt>int</tt>.

<p> An invocation of this method of the form
<tt>nextInt()</tt> behaves in exactly the same way as the
invocation <tt>nextInt(radix)</tt>, where <code>radix</code>
is the default radix of this scanner.

@return the <tt>int</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894338 "nextInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as an <tt>int</tt>.
This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid int value as
described below. If the translation is successful, the scanner advances
past the input that matched.

<p> If the next token matches the <a
href=\"#Integer-regex\"><i>Integer</i></a> regular expression defined
above then the token is converted into an <tt>int</tt> value as if by
removing all locale specific prefixes, group separators, and locale
specific suffixes, then mapping non-ASCII digits into ASCII
digits via {@link Character#digit Character.digit}, prepending a
negative sign (-) if the locale specific negative prefixes and suffixes
were present, and passing the resulting string to
{@link Integer#parseInt(String, int) Integer.parseInt} with the
specified radix.

@param radix the radix used to interpret the token as an int value
@return the <tt>int</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894466 "hasNextLong"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a long value in the default radix using the
{@link #nextLong} method. The scanner does not advance past any input.

@return true if and only if this scanner's next token is a valid
        long value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894594 "hasNextLong"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a long value in the specified radix using the
{@link #nextLong} method. The scanner does not advance past any input.

@param radix the radix used to interpret the token as a long value
@return true if and only if this scanner's next token is a valid
        long value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894722 "nextLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>long</tt>.

<p> An invocation of this method of the form
<tt>nextLong()</tt> behaves in exactly the same way as the
invocation <tt>nextLong(radix)</tt>, where <code>radix</code>
is the default radix of this scanner.

@return the <tt>long</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894850 "nextLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>long</tt>.
This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid long value as
described below. If the translation is successful, the scanner advances
past the input that matched.

<p> If the next token matches the <a
href=\"#Integer-regex\"><i>Integer</i></a> regular expression defined
above then the token is converted into a <tt>long</tt> value as if by
removing all locale specific prefixes, group separators, and locale
specific suffixes, then mapping non-ASCII digits into ASCII
digits via {@link Character#digit Character.digit}, prepending a
negative sign (-) if the locale specific negative prefixes and suffixes
were present, and passing the resulting string to
{@link Long#parseLong(String, int) Long.parseLong} with the
specified radix.

@param radix the radix used to interpret the token as an int value
@return the <tt>long</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8894978 "processFloatToken"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "token" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The float token must be stripped of prefixes, group separators,
and suffixes, non ascii digits must be converted into ascii digits
before parseFloat will accept it.

If there are non-ascii digits in the token these digits must
be processed before the token is passed to parseFloat.
"
      end

      operation 8895106 "hasNextFloat"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a float value using the {@link #nextFloat}
method. The scanner does not advance past any input.

@return true if and only if this scanner's next token is a valid
        float value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8895234 "nextFloat"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>float</tt>.
This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid float value as
described below. If the translation is successful, the scanner advances
past the input that matched.

<p> If the next token matches the <a
href=\"#Float-regex\"><i>Float</i></a> regular expression defined above
then the token is converted into a <tt>float</tt> value as if by
removing all locale specific prefixes, group separators, and locale
specific suffixes, then mapping non-ASCII digits into ASCII
digits via {@link Character#digit Character.digit}, prepending a
negative sign (-) if the locale specific negative prefixes and suffixes
were present, and passing the resulting string to
{@link Float#parseFloat Float.parseFloat}. If the token matches
the localized NaN or infinity strings, then either \"Nan\" or \"Infinity\"
is passed to {@link Float#parseFloat(String) Float.parseFloat} as
appropriate.

@return the <tt>float</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Float</i>
        regular expression, or is out of range
@throws NoSuchElementException if input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8895362 "hasNextDouble"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a double value using the {@link #nextDouble}
method. The scanner does not advance past any input.

@return true if and only if this scanner's next token is a valid
        double value
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8895490 "nextDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a <tt>double</tt>.
This method will throw <code>InputMismatchException</code>
if the next token cannot be translated into a valid double value.
If the translation is successful, the scanner advances past the input
that matched.

<p> If the next token matches the <a
href=\"#Float-regex\"><i>Float</i></a> regular expression defined above
then the token is converted into a <tt>double</tt> value as if by
removing all locale specific prefixes, group separators, and locale
specific suffixes, then mapping non-ASCII digits into ASCII
digits via {@link Character#digit Character.digit}, prepending a
negative sign (-) if the locale specific negative prefixes and suffixes
were present, and passing the resulting string to
{@link Double#parseDouble Double.parseDouble}. If the token matches
the localized NaN or infinity strings, then either \"Nan\" or \"Infinity\"
is passed to {@link Double#parseDouble(String) Double.parseDouble} as
appropriate.

@return the <tt>double</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Float</i>
        regular expression, or is out of range
@throws NoSuchElementException if the input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8895618 "hasNextBigInteger"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience methods for scanning multi precision numbers

Returns true if the next token in this scanner's input can be
interpreted as a <code>BigInteger</code> in the default radix using the
{@link #nextBigInteger} method. The scanner does not advance past any
input.

@return true if and only if this scanner's next token is a valid
        <code>BigInteger</code>
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8895746 "hasNextBigInteger"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a <code>BigInteger</code> in the specified radix using
the {@link #nextBigInteger} method. The scanner does not advance past
any input.

@param radix the radix used to interpret the token as an integer
@return true if and only if this scanner's next token is a valid
        <code>BigInteger</code>
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8895874 "nextBigInteger"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a {@link java.math.BigInteger
BigInteger}.

<p> An invocation of this method of the form
<tt>nextBigInteger()</tt> behaves in exactly the same way as the
invocation <tt>nextBigInteger(radix)</tt>, where <code>radix</code>
is the default radix of this scanner.

@return the <tt>BigInteger</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if the input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8896002 "nextBigInteger"
	public return_type class_ref 686338 // BigInteger
	nparams 1
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a {@link java.math.BigInteger
BigInteger}.

<p> If the next token matches the <a
href=\"#Integer-regex\"><i>Integer</i></a> regular expression defined
above then the token is converted into a <tt>BigInteger</tt> value as if
by removing all group separators, mapping non-ASCII digits into ASCII
digits via the {@link Character#digit Character.digit}, and passing the
resulting string to the {@link
java.math.BigInteger#BigInteger(java.lang.String)
BigInteger(String, int)} constructor with the specified radix.

@param radix the radix used to interpret the token
@return the <tt>BigInteger</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Integer</i>
        regular expression, or is out of range
@throws NoSuchElementException if the input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8896130 "hasNextBigDecimal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the next token in this scanner's input can be
interpreted as a <code>BigDecimal</code> using the
{@link #nextBigDecimal} method. The scanner does not advance past any
input.

@return true if and only if this scanner's next token is a valid
        <code>BigDecimal</code>
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8896258 "nextBigDecimal"
	public return_type class_ref 145794 // BigDecimal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scans the next token of the input as a {@link java.math.BigDecimal
BigDecimal}.

<p> If the next token matches the <a
href=\"#Decimal-regex\"><i>Decimal</i></a> regular expression defined
above then the token is converted into a <tt>BigDecimal</tt> value as if
by removing all group separators, mapping non-ASCII digits into ASCII
digits via the {@link Character#digit Character.digit}, and passing the
resulting string to the {@link
java.math.BigDecimal#BigDecimal(java.lang.String) BigDecimal(String)}
constructor.

@return the <tt>BigDecimal</tt> scanned from the input
@throws InputMismatchException
        if the next token does not match the <i>Decimal</i>
        regular expression, or is out of range
@throws NoSuchElementException if the input is exhausted
@throws IllegalStateException if this scanner is closed
"
      end

      operation 8896386 "reset"
	public return_type class_ref 1091202 // Scanner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this scanner.

<p> Resetting a scanner discards all of its explicit state
information which may have been changed by invocations of {@link
#useDelimiter}, {@link #useLocale}, or {@link #useRadix}.

<p> An invocation of this method of the form
<tt>scanner.reset()</tt> behaves in exactly the same way as the
invocation

<blockquote><pre>{@code
  scanner.useDelimiter(\"\\\\p{javaWhitespace}+\")
         .useLocale(Locale.getDefault(Locale.Category.FORMAT))
         .useRadix(10);
}</pre></blockquote>

@return this scanner

@since 1.6
"
      end
    end

    class 1091458 "ServiceConfigurationError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Error thrown when something goes wrong while loading a service provider.

<p> This error will be thrown in the following situations:

<ul>

  <li> The format of a provider-configuration file violates the <a
  href=\"ServiceLoader.html#format\">specification</a>; </li>

  <li> An {@link java.io.IOException IOException} occurs while reading a
  provider-configuration file; </li>

  <li> A concrete provider class named in a provider-configuration file
  cannot be found; </li>

  <li> A concrete provider class is not a subclass of the service class;
  </li>

  <li> A concrete provider class cannot be instantiated; or

  <li> Some other kind of error occurs. </li>

</ul>


@author Mark Reinhold
@since 1.6
"
      classrelation 3541634 // <generalisation>
	relation 3541634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3541634 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 2071042 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 74132770414881L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8896514 "ServiceConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the specified message.

@param  msg  The message, or <tt>null</tt> if there is no message

"
      end

      operation 8896642 "ServiceConfigurationError"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the specified message and cause.

@param  msg  The message, or <tt>null</tt> if there is no message

@param  cause  The cause, or <tt>null</tt> if the cause is nonexistent
               or unknown
"
      end
    end

    class 1091586 "ServiceLoader"
      visibility public 
      nformals 1
      formal name "S" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184322 // Iterable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple service-provider loading facility.

<p> A <i>service</i> is a well-known set of interfaces and (usually
abstract) classes.  A <i>service provider</i> is a specific implementation
of a service.  The classes in a provider typically implement the interfaces
and subclass the classes defined in the service itself.  Service providers
can be installed in an implementation of the Java platform in the form of
extensions, that is, jar files placed into any of the usual extension
directories.  Providers can also be made available by adding them to the
application's class path or by some other platform-specific means.

<p> For the purpose of loading, a service is represented by a single type,
that is, a single interface or abstract class.  (A concrete class can be
used, but this is not recommended.)  A provider of a given service contains
one or more concrete classes that extend this <i>service type</i> with data
and code specific to the provider.  The <i>provider class</i> is typically
not the entire provider itself but rather a proxy which contains enough
information to decide whether the provider is able to satisfy a particular
request together with code that can create the actual provider on demand.
The details of provider classes tend to be highly service-specific; no
single class or interface could possibly unify them, so no such type is
defined here.  The only requirement enforced by this facility is that
provider classes must have a zero-argument constructor so that they can be
instantiated during loading.

<p><a name=\"format\"> A service provider is identified by placing a
<i>provider-configuration file</i> in the resource directory
<tt>META-INF/services</tt>.</a>  The file's name is the fully-qualified <a
href=\"../lang/ClassLoader.html#name\">binary name</a> of the service's type.
The file contains a list of fully-qualified binary names of concrete
provider classes, one per line.  Space and tab characters surrounding each
name, as well as blank lines, are ignored.  The comment character is
<tt>'#'</tt> (<tt>'&#92;u0023'</tt>,
<font style=\"font-size:smaller;\">NUMBER SIGN</font>); on
each line all characters following the first comment character are ignored.
The file must be encoded in UTF-8.

<p> If a particular concrete provider class is named in more than one
configuration file, or is named in the same configuration file more than
once, then the duplicates are ignored.  The configuration file naming a
particular provider need not be in the same jar file or other distribution
unit as the provider itself.  The provider must be accessible from the same
class loader that was initially queried to locate the configuration file;
note that this is not necessarily the class loader from which the file was
actually loaded.

<p> Providers are located and instantiated lazily, that is, on demand.  A
service loader maintains a cache of the providers that have been loaded so
far.  Each invocation of the {@link #iterator iterator} method returns an
iterator that first yields all of the elements of the cache, in
instantiation order, and then lazily locates and instantiates any remaining
providers, adding each one to the cache in turn.  The cache can be cleared
via the {@link #reload reload} method.

<p> Service loaders always execute in the security context of the caller.
Trusted system code should typically invoke the methods in this class, and
the methods of the iterators which they return, from within a privileged
security context.

<p> Instances of this class are not safe for use by multiple concurrent
threads.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method in this class will cause a {@link NullPointerException} to be thrown.


<p><span style=\"font-weight: bold; padding-right: 1em\">Example</span>
Suppose we have a service type <tt>com.example.CodecSet</tt> which is
intended to represent sets of encoder/decoder pairs for some protocol.  In
this case it is an abstract class with two abstract methods:

<blockquote><pre>
public abstract Encoder getEncoder(String encodingName);
public abstract Decoder getDecoder(String encodingName);</pre></blockquote>

Each method returns an appropriate object or <tt>null</tt> if the provider
does not support the given encoding.  Typical providers support more than
one encoding.

<p> If <tt>com.example.impl.StandardCodecs</tt> is an implementation of the
<tt>CodecSet</tt> service then its jar file also contains a file named

<blockquote><pre>
META-INF/services/com.example.CodecSet</pre></blockquote>

<p> This file contains the single line:

<blockquote><pre>
com.example.impl.StandardCodecs    # Standard codecs</pre></blockquote>

<p> The <tt>CodecSet</tt> class creates and saves a single service instance
at initialization:

<blockquote><pre>
private static ServiceLoader&lt;CodecSet&gt; codecSetLoader
    = ServiceLoader.load(CodecSet.class);</pre></blockquote>

<p> To locate an encoder for a given encoding name it defines a static
factory method which iterates through the known and available providers,
returning only when it has located a suitable encoder or has run out of
providers.

<blockquote><pre>
public static Encoder getEncoder(String encodingName) {
    for (CodecSet cp : codecSetLoader) {
        Encoder enc = cp.getEncoder(encodingName);
        if (enc != null)
            return enc;
    }
    return null;
}</pre></blockquote>

<p> A <tt>getDecoder</tt> method is defined similarly.


<p><span style=\"font-weight: bold; padding-right: 1em\">Usage Note</span> If
the class path of a class loader that is used for provider loading includes
remote network URLs then those URLs will be dereferenced in the process of
searching for provider-configuration files.

<p> This activity is normal, although it may cause puzzling entries to be
created in web-server logs.  If a web server is not configured correctly,
however, then this activity may cause the provider-loading algorithm to fail
spuriously.

<p> A web server should return an HTTP 404 (Not Found) response when a
requested resource does not exist.  Sometimes, however, web servers are
erroneously configured to return an HTTP 200 (OK) response along with a
helpful HTML error page in such cases.  This will cause a {@link
ServiceConfigurationError} to be thrown when this class attempts to parse
the HTML page as a provider-configuration file.  The best solution to this
problem is to fix the misconfigured web server to return the correct
response code (HTTP 404) along with the HTML error page.

@param  <S>
        The type of the service to be loaded by this loader

@author Mark Reinhold
@since 1.6
"
      classrelation 3541762 // <realization>
	relation 3541762 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3541762 // <realization>
	  b parent class_ref 184322 // Iterable
      end

      classrelation 3541890 // PREFIX (<unidirectional association>)
	relation 3541890 --->
	  a role_name "PREFIX" init_value " \"META-INF/services/\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3541890 // PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3542018 // service (<unidirectional association>)
	relation 3542018 --->
	  a role_name "service" const_relation private
	    comment " The class or interface representing the service being loaded
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<S> ${name}${value};
"
	    classrelation_ref 3542018 // service (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3542146 // loader (<unidirectional association>)
	relation 3542146 --->
	  a role_name "loader" const_relation private
	    comment " The class loader used to locate, load, and instantiate providers
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3542146 // loader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3542274 // acc (<unidirectional association>)
	relation 3542274 --->
	  a role_name "acc" const_relation private
	    comment " The access control context taken when the ServiceLoader is created
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3542274 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      classrelation 3542402 // providers (<unidirectional association>)
	relation 3542402 --->
	  a role_name "providers" init_value " new LinkedHashMap<>()" private
	    comment " Cached providers, in instantiation order
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,S> ${name}${value};
"
	    classrelation_ref 3542402 // providers (<unidirectional association>)
	  b parent class_ref 377858 // LinkedHashMap
      end

      class 1091714 "LazyIterator"
	visibility private 
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3542658 // <realization>
	  relation 3542658 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3542658 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	classrelation 3542786 // service (<unidirectional association>)
	  relation 3542786 --->
	    a role_name "service" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<S> ${name}${value};
"
	      classrelation_ref 3542786 // service (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 3542914 // loader (<unidirectional association>)
	  relation 3542914 --->
	    a role_name "loader" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3542914 // loader (<unidirectional association>)
	    b parent class_ref 129026 // ClassLoader
	end

	classrelation 3543042 // configs (<unidirectional association>)
	  relation 3543042 --->
	    a role_name "configs" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	      classrelation_ref 3543042 // configs (<unidirectional association>)
	    b parent class_ref 185986 // Enumeration
	end

	classrelation 3543170 // pending (<unidirectional association>)
	  relation 3543170 --->
	    a role_name "pending" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 3543170 // pending (<unidirectional association>)
	    b parent class_ref 132994 // Iterator
	end

	classrelation 3543298 // nextName (<unidirectional association>)
	  relation 3543298 --->
	    a role_name "nextName" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3543298 // nextName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 8897666 "LazyIterator"
	  cpp_inline private explicit_return_type ""
	  nparams 2
	    param inout name "service" type class_ref 130818 // Class
	    param inout name "loader" type class_ref 129026 // ClassLoader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<S> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8897794 "hasNextService"
	  cpp_inline private explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8897922 "nextService"
	  cpp_inline private explicit_return_type "S"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8898050 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8898178 "next"
	  cpp_inline public explicit_return_type "S"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8898306 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3542530 // lookupIterator (<unidirectional association>)
	relation 3542530 --->
	  a role_name "lookupIterator" private
	    comment " The current lazy-lookup iterator
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3542530 // lookupIterator (<unidirectional association>)
	  b parent class_ref 1091714 // LazyIterator
      end

      operation 8896770 "reload"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear this loader's provider cache so that all providers will be
reloaded.

<p> After invoking this method, subsequent invocations of the {@link
#iterator() iterator} method will lazily look up and instantiate
providers from scratch, just as is done by a newly-created loader.

<p> This method is intended for use in situations in which new providers
can be installed into a running Java virtual machine.
"
      end

      operation 8896898 "ServiceLoader"
	cpp_inline private explicit_return_type ""
	nparams 2
	  param inout name "svc" type class_ref 130818 // Class
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<S> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8897026 "fail"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 3
	  param inout name "service" type class_ref 130818 // Class
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	nexceptions 1
	  exception class_ref 1091458 // ServiceConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8897154 "fail"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "service" type class_ref 130818 // Class
	  param inout name "msg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1091458 // ServiceConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8897282 "fail"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 4
	  param inout name "service" type class_ref 130818 // Class
	  param inout name "u" type class_ref 243458 // URL
	  param in name "line" explicit_type "int"
	  param inout name "msg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1091458 // ServiceConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8897410 "parseLine"
	cpp_inline private explicit_return_type "int"
	nparams 5
	  param inout name "service" type class_ref 130818 // Class
	  param inout name "u" type class_ref 243458 // URL
	  param inout name "r" type class_ref 141314 // BufferedReader
	  param in name "lc" explicit_type "int"
	  param inout name "names" type class_ref 175362 // List
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 1091458 // ServiceConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parse a single line from the given configuration file, adding the name
 on the line to the names list.
"
      end

      operation 8897538 "parse"
	cpp_inline private return_type class_ref 132994 // Iterator
	nparams 2
	  param inout name "service" type class_ref 130818 // Class
	  param inout name "u" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 1091458 // ServiceConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parse the content of the given URL as a provider-configuration file.

 @param  service
         The service type for which providers are being sought;
         used to construct error detail strings

 @param  u
         The URL naming the configuration file to be parsed

 @return A (possibly empty) iterator that will yield the provider-class
         names in the given configuration file that are not yet members
         of the returned set

 @throws ServiceConfigurationError
         If an I/O error occurs while reading from the given URL, or
         if a configuration-file format error is detected
"
      end

      operation 8898434 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<S> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lazily loads the available providers of this loader's service.

<p> The iterator returned by this method first yields all of the
elements of the provider cache, in instantiation order.  It then lazily
loads and instantiates any remaining providers, adding each one to the
cache in turn.

<p> To achieve laziness the actual work of parsing the available
provider-configuration files and instantiating providers must be done by
the iterator itself.  Its {@link java.util.Iterator#hasNext hasNext} and
{@link java.util.Iterator#next next} methods can therefore throw a
{@link ServiceConfigurationError} if a provider-configuration file
violates the specified format, or if it names a provider class that
cannot be found and instantiated, or if the result of instantiating the
class is not assignable to the service type, or if any other kind of
exception or error is thrown as the next provider is located and
instantiated.  To write robust code it is only necessary to catch {@link
ServiceConfigurationError} when using a service iterator.

<p> If such an error is thrown then subsequent invocations of the
iterator will make a best effort to locate and instantiate the next
available provider, but in general such recovery cannot be guaranteed.

<blockquote style=\"font-size: smaller; line-height: 1.2\"><span
style=\"padding-right: 1em; font-weight: bold\">Design Note</span>
Throwing an error in these cases may seem extreme.  The rationale for
this behavior is that a malformed provider-configuration file, like a
malformed class file, indicates a serious problem with the way the Java
virtual machine is configured or is being used.  As such it is
preferable to throw an error rather than try to recover or, even worse,
fail silently.</blockquote>

<p> The iterator returned by this method does not support removal.
Invoking its {@link java.util.Iterator#remove() remove} method will
cause an {@link UnsupportedOperationException} to be thrown.

@implNote When adding providers to the cache, the {@link #iterator
Iterator} processes resources in the order that the {@link
java.lang.ClassLoader#getResources(java.lang.String)
ClassLoader.getResources(String)} method finds the service configuration
files.

@return  An iterator that lazily loads providers for this loader's
         service
"
      end

      operation 8898562 "load"
	class_operation cpp_inline public return_type class_ref 1091586 // ServiceLoader
	nparams 2
	  param inout name "service" type class_ref 130818 // Class
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<S> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new service loader for the given service type and class
loader.

@param  <S> the class of the service type

@param  service
        The interface or abstract class representing the service

@param  loader
        The class loader to be used to load provider-configuration files
        and provider classes, or <tt>null</tt> if the system class
        loader (or, failing that, the bootstrap class loader) is to be
        used

@return A new service loader
"
      end

      operation 8898690 "load"
	class_operation cpp_inline public return_type class_ref 1091586 // ServiceLoader
	nparams 1
	  param inout name "service" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new service loader for the given service type, using the
current thread's {@linkplain java.lang.Thread#getContextClassLoader
context class loader}.

<p> An invocation of this convenience method of the form

<blockquote><pre>
ServiceLoader.load(<i>service</i>)</pre></blockquote>

is equivalent to

<blockquote><pre>
ServiceLoader.load(<i>service</i>,
                   Thread.currentThread().getContextClassLoader())</pre></blockquote>

@param  <S> the class of the service type

@param  service
        The interface or abstract class representing the service

@return A new service loader
"
      end

      operation 8898818 "loadInstalled"
	class_operation cpp_inline public return_type class_ref 1091586 // ServiceLoader
	nparams 1
	  param inout name "service" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new service loader for the given service type, using the
extension class loader.

<p> This convenience method simply locates the extension class loader,
call it <tt><i>extClassLoader</i></tt>, and then returns

<blockquote><pre>
ServiceLoader.load(<i>service</i>, <i>extClassLoader</i>)</pre></blockquote>

<p> If the extension class loader cannot be found then the system class
loader is used; if there is no system class loader then the bootstrap
class loader is used.

<p> This method is intended for use when only installed providers are
desired.  The resulting service will only find and load providers that
have been installed into the current Java virtual machine; providers on
the application's class path will be ignored.

@param  <S> the class of the service type

@param  service
        The interface or abstract class representing the service

@return A new service loader
"
      end

      operation 8898946 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this service.

@return  A descriptive string
"
      end
    end

    class 1091842 "SimpleTimeZone"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>SimpleTimeZone</code> is a concrete subclass of <code>TimeZone</code>
that represents a time zone for use with a Gregorian calendar.
The class holds an offset from GMT, called <em>raw offset</em>, and start
and end rules for a daylight saving time schedule.  Since it only holds
single values for each, it cannot handle historical changes in the offset
from GMT and the daylight saving schedule, except that the {@link
#setStartYear setStartYear} method can specify the year when the daylight
saving time schedule starts in effect.
<p>
To construct a <code>SimpleTimeZone</code> with a daylight saving time
schedule, the schedule can be described with a set of rules,
<em>start-rule</em> and <em>end-rule</em>. A day when daylight saving time
starts or ends is specified by a combination of <em>month</em>,
<em>day-of-month</em>, and <em>day-of-week</em> values. The <em>month</em>
value is represented by a Calendar {@link Calendar#MONTH MONTH} field
value, such as {@link Calendar#MARCH}. The <em>day-of-week</em> value is
represented by a Calendar {@link Calendar#DAY_OF_WEEK DAY_OF_WEEK} value,
such as {@link Calendar#SUNDAY SUNDAY}. The meanings of value combinations
are as follows.

<ul>
<li><b>Exact day of month</b><br>
To specify an exact day of month, set the <em>month</em> and
<em>day-of-month</em> to an exact value, and <em>day-of-week</em> to zero. For
example, to specify March 1, set the <em>month</em> to {@link Calendar#MARCH
MARCH}, <em>day-of-month</em> to 1, and <em>day-of-week</em> to 0.</li>

<li><b>Day of week on or after day of month</b><br>
To specify a day of week on or after an exact day of month, set the
<em>month</em> to an exact month value, <em>day-of-month</em> to the day on
or after which the rule is applied, and <em>day-of-week</em> to a negative {@link
Calendar#DAY_OF_WEEK DAY_OF_WEEK} field value. For example, to specify the
second Sunday of April, set <em>month</em> to {@link Calendar#APRIL APRIL},
<em>day-of-month</em> to 8, and <em>day-of-week</em> to <code>-</code>{@link
Calendar#SUNDAY SUNDAY}.</li>

<li><b>Day of week on or before day of month</b><br>
To specify a day of the week on or before an exact day of the month, set
<em>day-of-month</em> and <em>day-of-week</em> to a negative value. For
example, to specify the last Wednesday on or before the 21st of March, set
<em>month</em> to {@link Calendar#MARCH MARCH}, <em>day-of-month</em> is -21
and <em>day-of-week</em> is <code>-</code>{@link Calendar#WEDNESDAY WEDNESDAY}. </li>

<li><b>Last day-of-week of month</b><br>
To specify, the last day-of-week of the month, set <em>day-of-week</em> to a
{@link Calendar#DAY_OF_WEEK DAY_OF_WEEK} value and <em>day-of-month</em> to
-1. For example, to specify the last Sunday of October, set <em>month</em>
to {@link Calendar#OCTOBER OCTOBER}, <em>day-of-week</em> to {@link
Calendar#SUNDAY SUNDAY} and <em>day-of-month</em> to -1.  </li>

</ul>
The time of the day at which daylight saving time starts or ends is
specified by a millisecond value within the day. There are three kinds of
<em>mode</em>s to specify the time: {@link #WALL_TIME}, {@link
#STANDARD_TIME} and {@link #UTC_TIME}. For example, if daylight
saving time ends
at 2:00 am in the wall clock time, it can be specified by 7200000
milliseconds in the {@link #WALL_TIME} mode. In this case, the wall clock time
for an <em>end-rule</em> means the same thing as the daylight time.
<p>
The following are examples of parameters for constructing time zone objects.
<pre><code>
     // Base GMT offset: -8:00
     // DST starts:      at 2:00am in standard time
     //                  on the first Sunday in April
     // DST ends:        at 2:00am in daylight time
     //                  on the last Sunday in October
     // Save:            1 hour
     SimpleTimeZone(-28800000,
                    \"America/Los_Angeles\",
                    Calendar.APRIL, 1, -Calendar.SUNDAY,
                    7200000,
                    Calendar.OCTOBER, -1, Calendar.SUNDAY,
                    7200000,
                    3600000)

     // Base GMT offset: +1:00
     // DST starts:      at 1:00am in UTC time
     //                  on the last Sunday in March
     // DST ends:        at 1:00am in UTC time
     //                  on the last Sunday in October
     // Save:            1 hour
     SimpleTimeZone(3600000,
                    \"Europe/Paris\",
                    Calendar.MARCH, -1, Calendar.SUNDAY,
                    3600000, SimpleTimeZone.UTC_TIME,
                    Calendar.OCTOBER, -1, Calendar.SUNDAY,
                    3600000, SimpleTimeZone.UTC_TIME,
                    3600000)
</code></pre>
These parameter rules are also applicable to the set rule methods, such as
<code>setStartRule</code>.

@since 1.1
@see      Calendar
@see      GregorianCalendar
@see      TimeZone
@author   David Goldsmith, Mark Davis, Chen-Lieh Huang, Alan Liu
"
      classrelation 3544322 // <generalisation>
	relation 3544322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3544322 // <generalisation>
	  b parent class_ref 723970 // TimeZone
      end

      operation 8903170 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 2
	  param in name "rawOffset" explicit_type "int"
	  param inout name "ID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SimpleTimeZone with the given base time zone offset from GMT
and time zone ID with no daylight saving time schedule.

@param rawOffset  The base time zone offset in milliseconds to GMT.
@param ID         The time zone name that is given to this instance.
"
      end

      operation 8903298 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 10
	  param in name "rawOffset" explicit_type "int"
	  param inout name "ID" type class_ref 128130 // String
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SimpleTimeZone with the given base time zone offset from
GMT, time zone ID, and rules for starting and ending the daylight
time.
Both <code>startTime</code> and <code>endTime</code> are specified to be
represented in the wall clock time. The amount of daylight saving is
assumed to be 3600000 milliseconds (i.e., one hour). This constructor is
equivalent to:
<pre><code>
    SimpleTimeZone(rawOffset,
                   ID,
                   startMonth,
                   startDay,
                   startDayOfWeek,
                   startTime,
                   SimpleTimeZone.{@link #WALL_TIME},
                   endMonth,
                   endDay,
                   endDayOfWeek,
                   endTime,
                   SimpleTimeZone.{@link #WALL_TIME},
                   3600000)
</code></pre>

@param rawOffset       The given base time zone offset from GMT.
@param ID              The time zone ID which is given to this object.
@param startMonth      The daylight saving time starting month. Month is
                       a {@link Calendar#MONTH MONTH} field value (0-based. e.g., 0
                       for January).
@param startDay        The day of the month on which the daylight saving time starts.
                       See the class description for the special cases of this parameter.
@param startDayOfWeek  The daylight saving time starting day-of-week.
                       See the class description for the special cases of this parameter.
@param startTime       The daylight saving time starting time in local wall clock
                       time (in milliseconds within the day), which is local
                       standard time in this case.
@param endMonth        The daylight saving time ending month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 9 for October).
@param endDay          The day of the month on which the daylight saving time ends.
                       See the class description for the special cases of this parameter.
@param endDayOfWeek    The daylight saving time ending day-of-week.
                       See the class description for the special cases of this parameter.
@param endTime         The daylight saving ending time in local wall clock time,
                       (in milliseconds within the day) which is local daylight
                       time in this case.
@exception IllegalArgumentException if the month, day, dayOfWeek, or time
parameters are out of range for the start or end rule
"
      end

      operation 8903426 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 11
	  param in name "rawOffset" explicit_type "int"
	  param inout name "ID" type class_ref 128130 // String
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	  param in name "dstSavings" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SimpleTimeZone with the given base time zone offset from
GMT, time zone ID, and rules for starting and ending the daylight
time.
Both <code>startTime</code> and <code>endTime</code> are assumed to be
represented in the wall clock time. This constructor is equivalent to:
<pre><code>
    SimpleTimeZone(rawOffset,
                   ID,
                   startMonth,
                   startDay,
                   startDayOfWeek,
                   startTime,
                   SimpleTimeZone.{@link #WALL_TIME},
                   endMonth,
                   endDay,
                   endDayOfWeek,
                   endTime,
                   SimpleTimeZone.{@link #WALL_TIME},
                   dstSavings)
</code></pre>

@param rawOffset       The given base time zone offset from GMT.
@param ID              The time zone ID which is given to this object.
@param startMonth      The daylight saving time starting month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 0 for January).
@param startDay        The day of the month on which the daylight saving time starts.
                       See the class description for the special cases of this parameter.
@param startDayOfWeek  The daylight saving time starting day-of-week.
                       See the class description for the special cases of this parameter.
@param startTime       The daylight saving time starting time in local wall clock
                       time, which is local standard time in this case.
@param endMonth        The daylight saving time ending month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 9 for October).
@param endDay          The day of the month on which the daylight saving time ends.
                       See the class description for the special cases of this parameter.
@param endDayOfWeek    The daylight saving time ending day-of-week.
                       See the class description for the special cases of this parameter.
@param endTime         The daylight saving ending time in local wall clock time,
                       which is local daylight time in this case.
@param dstSavings      The amount of time in milliseconds saved during
                       daylight saving time.
@exception IllegalArgumentException if the month, day, dayOfWeek, or time
parameters are out of range for the start or end rule
@since 1.2
"
      end

      operation 8903554 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 13
	  param in name "rawOffset" explicit_type "int"
	  param inout name "ID" type class_ref 128130 // String
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param in name "startTimeMode" explicit_type "int"
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	  param in name "endTimeMode" explicit_type "int"
	  param in name "dstSavings" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SimpleTimeZone with the given base time zone offset from
GMT, time zone ID, and rules for starting and ending the daylight
time.
This constructor takes the full set of the start and end rules
parameters, including modes of <code>startTime</code> and
<code>endTime</code>. The mode specifies either {@link #WALL_TIME wall
time} or {@link #STANDARD_TIME standard time} or {@link #UTC_TIME UTC
time}.

@param rawOffset       The given base time zone offset from GMT.
@param ID              The time zone ID which is given to this object.
@param startMonth      The daylight saving time starting month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 0 for January).
@param startDay        The day of the month on which the daylight saving time starts.
                       See the class description for the special cases of this parameter.
@param startDayOfWeek  The daylight saving time starting day-of-week.
                       See the class description for the special cases of this parameter.
@param startTime       The daylight saving time starting time in the time mode
                       specified by <code>startTimeMode</code>.
@param startTimeMode   The mode of the start time specified by startTime.
@param endMonth        The daylight saving time ending month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 9 for October).
@param endDay          The day of the month on which the daylight saving time ends.
                       See the class description for the special cases of this parameter.
@param endDayOfWeek    The daylight saving time ending day-of-week.
                       See the class description for the special cases of this parameter.
@param endTime         The daylight saving ending time in time time mode
                       specified by <code>endTimeMode</code>.
@param endTimeMode     The mode of the end time specified by endTime
@param dstSavings      The amount of time in milliseconds saved during
                       daylight saving time.

@exception IllegalArgumentException if the month, day, dayOfWeek, time more, or
time parameters are out of range for the start or end rule, or if a time mode
value is invalid.

@see #WALL_TIME
@see #STANDARD_TIME
@see #UTC_TIME

@since 1.4
"
      end

      operation 8903682 "setStartYear"
	public explicit_return_type "void"
	nparams 1
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time starting year.

@param year  The daylight saving starting year.
"
      end

      operation 8903810 "setStartRule"
	public explicit_return_type "void"
	nparams 4
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time start rule. For example, if daylight saving
time starts on the first Sunday in April at 2 am in local wall clock
time, you can set the start rule by calling:
<pre><code>setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2*60*60*1000);</code></pre>

@param startMonth      The daylight saving time starting month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 0 for January).
@param startDay        The day of the month on which the daylight saving time starts.
                       See the class description for the special cases of this parameter.
@param startDayOfWeek  The daylight saving time starting day-of-week.
                       See the class description for the special cases of this parameter.
@param startTime       The daylight saving time starting time in local wall clock
                       time, which is local standard time in this case.
@exception IllegalArgumentException if the <code>startMonth</code>, <code>startDay</code>,
<code>startDayOfWeek</code>, or <code>startTime</code> parameters are out of range
"
      end

      operation 8903938 "setStartRule"
	public explicit_return_type "void"
	nparams 3
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time start rule to a fixed date within a month.
This method is equivalent to:
<pre><code>setStartRule(startMonth, startDay, 0, startTime)</code></pre>

@param startMonth      The daylight saving time starting month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 0 for January).
@param startDay        The day of the month on which the daylight saving time starts.
@param startTime       The daylight saving time starting time in local wall clock
                       time, which is local standard time in this case.
                       See the class description for the special cases of this parameter.
@exception IllegalArgumentException if the <code>startMonth</code>,
<code>startDayOfMonth</code>, or <code>startTime</code> parameters are out of range
@since 1.2
"
      end

      operation 8904066 "setStartRule"
	public explicit_return_type "void"
	nparams 5
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param inout name "after" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time start rule to a weekday before or after the given date within
a month, e.g., the first Monday on or after the 8th.

@param startMonth      The daylight saving time starting month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 0 for January).
@param startDay        The day of the month on which the daylight saving time starts.
@param startDayOfWeek  The daylight saving time starting day-of-week.
@param startTime       The daylight saving time starting time in local wall clock
                       time, which is local standard time in this case.
@param after           If true, this rule selects the first <code>dayOfWeek</code> on or
                       <em>after</em> <code>dayOfMonth</code>.  If false, this rule
                       selects the last <code>dayOfWeek</code> on or <em>before</em>
                       <code>dayOfMonth</code>.
@exception IllegalArgumentException if the <code>startMonth</code>, <code>startDay</code>,
<code>startDayOfWeek</code>, or <code>startTime</code> parameters are out of range
@since 1.2
"
      end

      operation 8904194 "setEndRule"
	public explicit_return_type "void"
	nparams 4
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time end rule. For example, if daylight saving time
ends on the last Sunday in October at 2 am in wall clock time,
you can set the end rule by calling:
<code>setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2*60*60*1000);</code>

@param endMonth        The daylight saving time ending month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 9 for October).
@param endDay          The day of the month on which the daylight saving time ends.
                       See the class description for the special cases of this parameter.
@param endDayOfWeek    The daylight saving time ending day-of-week.
                       See the class description for the special cases of this parameter.
@param endTime         The daylight saving ending time in local wall clock time,
                       (in milliseconds within the day) which is local daylight
                       time in this case.
@exception IllegalArgumentException if the <code>endMonth</code>, <code>endDay</code>,
<code>endDayOfWeek</code>, or <code>endTime</code> parameters are out of range
"
      end

      operation 8904322 "setEndRule"
	public explicit_return_type "void"
	nparams 3
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time end rule to a fixed date within a month.
This method is equivalent to:
<pre><code>setEndRule(endMonth, endDay, 0, endTime)</code></pre>

@param endMonth        The daylight saving time ending month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 9 for October).
@param endDay          The day of the month on which the daylight saving time ends.
@param endTime         The daylight saving ending time in local wall clock time,
                       (in milliseconds within the day) which is local daylight
                       time in this case.
@exception IllegalArgumentException the <code>endMonth</code>, <code>endDay</code>,
or <code>endTime</code> parameters are out of range
@since 1.2
"
      end

      operation 8904450 "setEndRule"
	public explicit_return_type "void"
	nparams 5
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	  param inout name "after" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight saving time end rule to a weekday before or after the given date within
a month, e.g., the first Monday on or after the 8th.

@param endMonth        The daylight saving time ending month. Month is
                       a {@link Calendar#MONTH MONTH} field
                       value (0-based. e.g., 9 for October).
@param endDay          The day of the month on which the daylight saving time ends.
@param endDayOfWeek    The daylight saving time ending day-of-week.
@param endTime         The daylight saving ending time in local wall clock time,
                       (in milliseconds within the day) which is local daylight
                       time in this case.
@param after           If true, this rule selects the first <code>endDayOfWeek</code> on
                       or <em>after</em> <code>endDay</code>.  If false, this rule
                       selects the last <code>endDayOfWeek</code> on or before
                       <code>endDay</code> of the month.
@exception IllegalArgumentException the <code>endMonth</code>, <code>endDay</code>,
<code>endDayOfWeek</code>, or <code>endTime</code> parameters are out of range
@since 1.2
"
      end

      operation 8904578 "getOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "date" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset of this time zone from UTC at the given
time. If daylight saving time is in effect at the given time,
the offset value is adjusted with the amount of daylight
saving.

@param date the time at which the time zone offset is found
@return the amount of time in milliseconds to add to UTC to get
local time.
@since 1.4
"
      end

      operation 8904706 "getOffsets"
	package explicit_return_type "int"
	nparams 2
	  param in name "date" explicit_type "long"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see TimeZone#getOffsets
"
      end

      operation 8904834 "getOffset"
	public explicit_return_type "int"
	nparams 6
	  param in name "era" explicit_type "int"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "millis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the difference in milliseconds between local time and
UTC, taking into account both the raw offset and the effect of
daylight saving, for the specified date and time.  This method
assumes that the start and end month are distinct.  It also
uses a default {@link GregorianCalendar} object as its
underlying calendar, such as for determining leap years.  Do
not use the result of this method with a calendar other than a
default <code>GregorianCalendar</code>.

<p><em>Note:  In general, clients should use
<code>Calendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET)</code>
instead of calling this method.</em>

@param era       The era of the given date.
@param year      The year in the given date.
@param month     The month in the given date. Month is 0-based. e.g.,
                 0 for January.
@param day       The day-in-month of the given date.
@param dayOfWeek The day-of-week of the given date.
@param millis    The milliseconds in day in <em>standard</em> local time.
@return          The milliseconds to add to UTC to get local time.
@exception       IllegalArgumentException the <code>era</code>,
                 <code>month</code>, <code>day</code>, <code>dayOfWeek</code>,
                 or <code>millis</code> parameters are out of range
"
      end

      operation 8904962 "getOffset"
	private explicit_return_type "int"
	nparams 4
	  param inout name "cal" explicit_type "BaseCalendar"
	  param inout name "cdate" explicit_type "BaseCalendar.Date"
	  param in name "year" explicit_type "int"
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8905090 "getStart"
	private explicit_return_type "long"
	nparams 3
	  param inout name "cal" explicit_type "BaseCalendar"
	  param inout name "cdate" explicit_type "BaseCalendar.Date"
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8905218 "getEnd"
	private explicit_return_type "long"
	nparams 3
	  param inout name "cal" explicit_type "BaseCalendar"
	  param inout name "cdate" explicit_type "BaseCalendar.Date"
	  param in name "year" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8905346 "getTransition"
	private explicit_return_type "long"
	nparams 8
	  param inout name "cal" explicit_type "BaseCalendar"
	  param inout name "cdate" explicit_type "BaseCalendar.Date"
	  param in name "mode" explicit_type "int"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "timeOfDay" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8905474 "getRawOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the GMT offset for this time zone.
@return the GMT offset value in milliseconds
@see #setRawOffset
"
      end

      operation 8905602 "setRawOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "offsetMillis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the base time zone offset to GMT.
This is the offset to add to UTC to get local time.
@see #getRawOffset
"
      end

      operation 8905730 "setDSTSavings"
	public explicit_return_type "void"
	nparams 1
	  param in name "millisSavedDuringDST" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the amount of time in milliseconds that the clock is advanced
during daylight saving time.
@param millisSavedDuringDST the number of milliseconds the time is
advanced with respect to standard time when the daylight saving time rules
are in effect. A positive number, typically one hour (3600000).
@see #getDSTSavings
@since 1.2
"
      end

      operation 8905858 "getDSTSavings"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of time in milliseconds that the clock is
advanced during daylight saving time.

@return the number of milliseconds the time is advanced with
respect to standard time when the daylight saving rules are in
effect, or 0 (zero) if this time zone doesn't observe daylight
saving time.

@see #setDSTSavings
@since 1.2
"
      end

      operation 8905986 "useDaylightTime"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries if this time zone uses daylight saving time.
@return true if this time zone uses daylight saving time;
false otherwise.
"
      end

      operation 8906114 "observesDaylightTime"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns {@code true} if this {@code SimpleTimeZone} observes
Daylight Saving Time. This method is equivalent to {@link
#useDaylightTime()}.

@return {@code true} if this {@code SimpleTimeZone} observes
Daylight Saving Time; {@code false} otherwise.
@since 1.7
"
      end

      operation 8906242 "inDaylightTime"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "date" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries if the given date is in daylight saving time.
@return true if daylight saving time is in effective at the
given date; false otherwise.
"
      end

      operation 8906370 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this <code>SimpleTimeZone</code> instance.
@return a clone of this instance.
"
      end

      operation 8906498 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the hash code for the SimpleDateFormat object.
@return the hash code for this object
"
      end

      operation 8906626 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the equality of two <code>SimpleTimeZone</code> objects.

@param obj  The <code>SimpleTimeZone</code> object to be compared with.
@return     True if the given <code>obj</code> is the same as this
            <code>SimpleTimeZone</code> object; false otherwise.
"
      end

      operation 8906754 "hasSameRules"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 723970 // TimeZone
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this zone has the same rules and offset as another zone.
@param other the TimeZone object to be compared with
@return <code>true</code> if the given zone is a SimpleTimeZone and has the
same rules and offset as this one
@since 1.2
"
      end

      operation 8906882 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this time zone.
@return a string representation of this time zone.
"
      end

      attribute 2072066 "startMonth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " =======================privates===============================

The month in which daylight saving time starts.  This value must be
between <code>Calendar.JANUARY</code> and
<code>Calendar.DECEMBER</code> inclusive.  This value must not equal
<code>endMonth</code>.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2072194 "startDay"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field has two possible interpretations:
<dl>
<dt><code>startMode == DOW_IN_MONTH</code></dt>
<dd>
<code>startDay</code> indicates the day of the month of
<code>startMonth</code> on which daylight
saving time starts, from 1 to 28, 30, or 31, depending on the
<code>startMonth</code>.
</dd>
<dt><code>startMode != DOW_IN_MONTH</code></dt>
<dd>
<code>startDay</code> indicates which <code>startDayOfWeek</code> in the
month <code>startMonth</code> daylight
saving time starts on.  For example, a value of +1 and a
<code>startDayOfWeek</code> of <code>Calendar.SUNDAY</code> indicates the
first Sunday of <code>startMonth</code>.  Likewise, +2 would indicate the
second Sunday, and -1 the last Sunday.  A value of 0 is illegal.
</dd>
</dl>
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2072322 "startDayOfWeek"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The day of the week on which daylight saving time starts.  This value
must be between <code>Calendar.SUNDAY</code> and
<code>Calendar.SATURDAY</code> inclusive.
<p>If <code>useDaylight</code> is false or
<code>startMode == DAY_OF_MONTH</code>, this value is ignored.
@serial

"
      end

      attribute 2072450 "startTime"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The time in milliseconds after midnight at which daylight saving
time starts.  This value is expressed as wall time, standard time,
or UTC time, depending on the setting of <code>startTimeMode</code>.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2072578 "startTimeMode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The format of startTime, either WALL_TIME, STANDARD_TIME, or UTC_TIME.
@serial
@since 1.3

"
      end

      attribute 2072706 "endMonth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The month in which daylight saving time ends.  This value must be
between <code>Calendar.JANUARY</code> and
<code>Calendar.UNDECIMBER</code>.  This value must not equal
<code>startMonth</code>.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2072834 "endDay"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field has two possible interpretations:
<dl>
<dt><code>endMode == DOW_IN_MONTH</code></dt>
<dd>
<code>endDay</code> indicates the day of the month of
<code>endMonth</code> on which daylight
saving time ends, from 1 to 28, 30, or 31, depending on the
<code>endMonth</code>.
</dd>
<dt><code>endMode != DOW_IN_MONTH</code></dt>
<dd>
<code>endDay</code> indicates which <code>endDayOfWeek</code> in th
month <code>endMonth</code> daylight
saving time ends on.  For example, a value of +1 and a
<code>endDayOfWeek</code> of <code>Calendar.SUNDAY</code> indicates the
first Sunday of <code>endMonth</code>.  Likewise, +2 would indicate the
second Sunday, and -1 the last Sunday.  A value of 0 is illegal.
</dd>
</dl>
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2072962 "endDayOfWeek"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The day of the week on which daylight saving time ends.  This value
must be between <code>Calendar.SUNDAY</code> and
<code>Calendar.SATURDAY</code> inclusive.
<p>If <code>useDaylight</code> is false or
<code>endMode == DAY_OF_MONTH</code>, this value is ignored.
@serial

"
      end

      attribute 2073090 "endTime"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The time in milliseconds after midnight at which daylight saving
time ends.  This value is expressed as wall time, standard time,
or UTC time, depending on the setting of <code>endTimeMode</code>.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2073218 "endTimeMode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The format of endTime, either <code>WALL_TIME</code>,
<code>STANDARD_TIME</code>, or <code>UTC_TIME</code>.
@serial
@since 1.3

"
      end

      attribute 2073346 "startYear"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The year in which daylight saving time is first observed.  This is an {@link GregorianCalendar#AD AD}
value.  If this value is less than 1 then daylight saving time is observed
for all <code>AD</code> years.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial

"
      end

      attribute 2073474 "rawOffset"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The offset in milliseconds between this zone and GMT.  Negative offsets
are to the west of Greenwich.  To obtain local <em>standard</em> time,
add the offset to GMT time.  To obtain local wall time it may also be
necessary to add <code>dstSavings</code>.
@serial

"
      end

      attribute 2073602 "useDaylight"
	private explicit_type "boolean"
	init_value "false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A boolean value which is true if and only if this zone uses daylight
saving time.  If this value is false, several other fields are ignored.
@serial

 indicate if this time zone uses DST"
      end

      attribute 2073730 "millisPerHour"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60*60*1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2073858 "millisPerDay"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24*millisPerHour"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2073986 "monthLength"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " staticMonthLength"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field was serialized in JDK 1.1, so we have to keep it that way
to maintain serialization compatibility. However, there's no need to
recreate the array each time we create a new time zone.
@serial An array of bytes containing the values {31, 28, 31, 30, 31, 30,
31, 31, 30, 31, 30, 31}.  This is ignored as of the Java 2 platform v1.2, however, it must
be streamed out for compatibility with JDK 1.1.

"
      end

      attribute 2074114 "staticMonthLength"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " {31,28,31,30,31,30,31,31,30,31,30,31}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2074242 "staticLeapMonthLength"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " {31,29,31,30,31,30,31,31,30,31,30,31}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2074370 "startMode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Variables specifying the mode of the start rule.  Takes the following
values:
<dl>
<dt><code>DOM_MODE</code></dt>
<dd>
Exact day of week; e.g., March 1.
</dd>
<dt><code>DOW_IN_MONTH_MODE</code></dt>
<dd>
Day of week in month; e.g., last Sunday in March.
</dd>
<dt><code>DOW_GE_DOM_MODE</code></dt>
<dd>
Day of week after day of month; e.g., Sunday on or after March 15.
</dd>
<dt><code>DOW_LE_DOM_MODE</code></dt>
<dd>
Day of week before day of month; e.g., Sunday on or before March 15.
</dd>
</dl>
The setting of this field affects the interpretation of the
<code>startDay</code> field.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial
@since 1.1.4

"
      end

      attribute 2074498 "endMode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Variables specifying the mode of the end rule.  Takes the following
values:
<dl>
<dt><code>DOM_MODE</code></dt>
<dd>
Exact day of week; e.g., March 1.
</dd>
<dt><code>DOW_IN_MONTH_MODE</code></dt>
<dd>
Day of week in month; e.g., last Sunday in March.
</dd>
<dt><code>DOW_GE_DOM_MODE</code></dt>
<dd>
Day of week after day of month; e.g., Sunday on or after March 15.
</dd>
<dt><code>DOW_LE_DOM_MODE</code></dt>
<dd>
Day of week before day of month; e.g., Sunday on or before March 15.
</dd>
</dl>
The setting of this field affects the interpretation of the
<code>endDay</code> field.
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial
@since 1.1.4

"
      end

      attribute 2074626 "dstSavings"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A positive value indicating the amount of time saved during DST in
milliseconds.
Typically one hour (3600000); sometimes 30 minutes (1800000).
<p>If <code>useDaylight</code> is false, this value is ignored.
@serial
@since 1.1.4

"
      end

      attribute 2074754 "gcal"
	class_attribute const_attribute private explicit_type "Gregorian"
	init_value " CalendarSystem.getGregorianCalendar()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2074882 "cacheYear"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Cache values representing a single period of daylight saving
time. When the cache values are valid, cacheStart is the start
time (inclusive) of daylight saving time and cacheEnd is the
end time (exclusive).

cacheYear has a year value if both cacheStart and cacheEnd are
in the same year. cacheYear is set to startYear - 1 if
cacheStart and cacheEnd are in different years. cacheStart is 0
if the cache values are void. cacheYear is a long to support
Integer.MIN_VALUE - 1 (JCK requirement).

"
      end

      attribute 2075010 "cacheStart"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2075138 "cacheEnd"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2075266 "DOM_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constants specifying values of startMode and endMode.

 Exact day of month, \"Mar 1\""
      end

      attribute 2075394 "DOW_IN_MONTH_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Day of week in month, \"lastSun\""
      end

      attribute 2075522 "DOW_GE_DOM_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Day of week after day of month, \"Sun>=15\""
      end

      attribute 2075650 "DOW_LE_DOM_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Day of week before day of month, \"Sun<=21\""
      end

      attribute 2075778 "WALL_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant for a mode of start or end time specified as wall clock
time.  Wall clock time is standard time for the onset rule, and
daylight time for the end rule.
@since 1.4

 Zero for backward compatibility"
      end

      attribute 2075906 "STANDARD_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant for a mode of start or end time specified as standard time.
@since 1.4

"
      end

      attribute 2076034 "UTC_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant for a mode of start or end time specified as UTC. European
Union rules are specified as UTC time, for example.
@since 1.4

"
      end

      attribute 2076162 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -403250971215465050L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Proclaim compatibility with 1.1
"
      end

      attribute 2076290 "currentSerialVersion"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the internal serial version which says which version was written
 - 0 (default) for version up to JDK 1.1.3
 - 1 for version from JDK 1.1.4, which includes 3 new fields
 - 2 for JDK 1.3, which includes 2 new fields
"
      end

      attribute 2076418 "serialVersionOnStream"
	private explicit_type "int"
	init_value " currentSerialVersion"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The version of the serialized data on the stream.  Possible values:
<dl>
<dt><b>0</b> or not present on stream</dt>
<dd>
JDK 1.1.3 or earlier.
</dd>
<dt><b>1</b></dt>
<dd>
JDK 1.1.4 or later.  Includes three new fields: <code>startMode</code>,
<code>endMode</code>, and <code>dstSavings</code>.
</dd>
<dt><b>2</b></dt>
<dd>
JDK 1.3 or later.  Includes two new fields: <code>startTimeMode</code>
and <code>endTimeMode</code>.
</dd>
</dl>
When streaming out this class, the most recent format
and the highest allowable <code>serialVersionOnStream</code>
is written.
@serial
@since 1.1.4

"
      end

      operation 8907010 "invalidateCache"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8907138 "decodeRules"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------
 Rule representation

 We represent the following flavors of rules:
       5        the fifth of the month
       lastSun  the last Sunday in the month
       lastMon  the last Monday in the month
       Sun>=8   first Sunday on or after the eighth
       Sun<=25  last Sunday on or before the 25th
 This is further complicated by the fact that we need to remain
 backward compatible with the 1.1 FCS.  Finally, we need to minimize
 API changes.  In order to satisfy these requirements, we support
 three representation systems, and we translate between them.

 INTERNAL REPRESENTATION
 This is the format SimpleTimeZone objects take after construction or
 streaming in is complete.  Rules are represented directly, using an
 unencoded format.  We will discuss the start rule only below; the end
 rule is analogous.
   startMode      Takes on enumerated values DAY_OF_MONTH,
                  DOW_IN_MONTH, DOW_AFTER_DOM, or DOW_BEFORE_DOM.
   startDay       The day of the month, or for DOW_IN_MONTH mode, a
                  value indicating which DOW, such as +1 for first,
                  +2 for second, -1 for last, etc.
   startDayOfWeek The day of the week.  Ignored for DAY_OF_MONTH.

 ENCODED REPRESENTATION
 This is the format accepted by the constructor and by setStartRule()
 and setEndRule().  It uses various combinations of positive, negative,
 and zero values to encode the different rules.  This representation
 allows us to specify all the different rule flavors without altering
 the API.
   MODE              startMonth    startDay    startDayOfWeek
   DOW_IN_MONTH_MODE >=0           !=0         >0
   DOM_MODE          >=0           >0          ==0
   DOW_GE_DOM_MODE   >=0           >0          <0
   DOW_LE_DOM_MODE   >=0           <0          <0
   (no DST)          don't care    ==0         don't care

 STREAMED REPRESENTATION
 We must retain binary compatibility with the 1.1 FCS.  The 1.1 code only
 handles DOW_IN_MONTH_MODE and non-DST mode, the latter indicated by the
 flag useDaylight.  When we stream an object out, we translate into an
 approximate DOW_IN_MONTH_MODE representation so the object can be parsed
 and used by 1.1 code.  Following that, we write out the full
 representation separately so that contemporary code can recognize and
 parse it.  The full representation is written in a \"packed\" format,
 consisting of a version number, a length, and an array of bytes.  Future
 versions of this class may specify different versions.  If they wish to
 include additional data, they should do so by storing them after the
 packed representation below.
----------------------------------------------------------------------

Given a set of encoded rules in startDay and startDayOfMonth, decode
them and set the startMode appropriately.  Do the same for endDay and
endDayOfMonth.  Upon entry, the day of week variables may be zero or
negative, in order to indicate special modes.  The day of month
variables may also be negative.  Upon exit, the mode variables will be
set, and the day of week and day of month variables will be positive.
This method also recognizes a startDay or endDay of zero as indicating
no DST.
"
      end

      operation 8907266 "decodeStartRule"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decode the start rule and validate the parameters.  The parameters are
expected to be in encoded form, which represents the various rule modes
by negating or zeroing certain values.  Representation formats are:
<p>
<pre>
           DOW_IN_MONTH  DOM    DOW>=DOM  DOW<=DOM  no DST
           ------------  -----  --------  --------  ----------
month       0..11        same    same      same     don't care
day        -5..5         1..31   1..31    -1..-31   0
dayOfWeek   1..7         0      -1..-7    -1..-7    don't care
time        0..ONEDAY    same    same      same     don't care
</pre>
The range for month does not include UNDECIMBER since this class is
really specific to GregorianCalendar, which does not use that month.
The range for time includes ONEDAY (vs. ending at ONEDAY-1) because the
end rule is an exclusive limit point.  That is, the range of times that
are in DST include those >= the start and < the end.  For this reason,
it should be possible to specify an end of ONEDAY in order to include the
entire day.  Although this is equivalent to time 0 of the following day,
it's not always possible to specify that, for example, on December 31.
While arguably the start range should still be 0..ONEDAY-1, we keep
the start and end ranges the same for consistency.
"
      end

      operation 8907394 "decodeEndRule"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decode the end rule and validate the parameters.  This method is exactly
analogous to decodeStartRule().
@see decodeStartRule
"
      end

      operation 8907522 "makeRulesCompatible"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make rules compatible to 1.1 FCS code.  Since 1.1 FCS code only understands
day-of-week-in-month rules, we must modify other modes of rules to their
approximate equivalent in 1.1 FCS terms.  This method is used when streaming
out objects of this class.  After it is called, the rules will be modified,
with a possible loss of information.  startMode and endMode will NOT be
altered, even though semantically they should be set to DOW_IN_MONTH_MODE,
since the rule modification is only intended to be temporary.
"
      end

      operation 8907650 "packRules"
	private explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pack the start and end rules into an array of bytes.  Only pack
data which is not preserved by makeRulesCompatible.
"
      end

      operation 8907778 "unpackRules"
	private explicit_return_type "void"
	nparams 1
	  param inout name "rules" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an array of bytes produced by packRules, interpret them
as the start and end rules.
"
      end

      operation 8907906 "packTimes"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pack the start and end times into an array of bytes.  This is required
as of serial version 2.
"
      end

      operation 8908034 "unpackTimes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "times" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unpack the start and end times from an array of bytes.  This is required
as of serial version 2.
"
      end

      operation 8908162 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of this object to a stream (i.e., serialize it).

@serialData We write out two formats, a JDK 1.1 compatible format, using
<code>DOW_IN_MONTH_MODE</code> rules, in the required section, followed
by the full rules, in packed format, in the optional section.  The
optional section will be ignored by JDK 1.1 code upon stream in.
<p> Contents of the optional section: The length of a byte array is
emitted (int); this is 4 as of this release. The byte array of the given
length is emitted. The contents of the byte array are the true values of
the fields <code>startDay</code>, <code>startDayOfWeek</code>,
<code>endDay</code>, and <code>endDayOfWeek</code>.  The values of these
fields in the required section are approximate values suited to the rule
mode <code>DOW_IN_MONTH_MODE</code>, which is the only mode recognized by
JDK 1.1.
"
      end

      operation 8908290 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute this object from a stream (i.e., deserialize it).

We handle both JDK 1.1
binary formats and full formats with a packed byte array.
"
      end
    end

    class 1091970 "Spliterators"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Static classes and methods for operating on or creating instances of
{@link Spliterator} and its primitive specializations
{@link Spliterator.OfInt}, {@link Spliterator.OfLong}, and
{@link Spliterator.OfDouble}.

@see Spliterator
@since 1.8
"
      operation 8908418 "Spliterators"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suppresses default constructor, ensuring non-instantiability."
      end

      operation 8908546 "emptySpliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Empty spliterators

Creates an empty {@code Spliterator}

<p>The empty spliterator reports {@link Spliterator#SIZED} and
{@link Spliterator#SUBSIZED}.  Calls to
{@link java.util.Spliterator#trySplit()} always return {@code null}.

@param <T> Type of elements
@return An empty spliterator
"
      end

      classrelation 3544450 // EMPTY_SPLITERATOR (<unidirectional association>)
	relation 3544450 --->
	  a role_name "EMPTY_SPLITERATOR" init_value "
            new EmptySpliterator.OfRef<>()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 3544450 // EMPTY_SPLITERATOR (<unidirectional association>)
	  b parent class_ref 184450 // Spliterator
      end

      operation 8908674 "emptyIntSpliterator"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty {@code Spliterator.OfInt}

<p>The empty spliterator reports {@link Spliterator#SIZED} and
{@link Spliterator#SUBSIZED}.  Calls to
{@link java.util.Spliterator#trySplit()} always return {@code null}.

@return An empty spliterator
"
      end

      classrelation 3544578 // EMPTY_INT_SPLITERATOR (<unidirectional association>)
	relation 3544578 --->
	  a role_name "EMPTY_INT_SPLITERATOR" init_value "
            new EmptySpliterator.OfInt()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3544578 // EMPTY_INT_SPLITERATOR (<unidirectional association>)
	  b parent class_ref 376578 // OfInt
      end

      operation 8908802 "emptyLongSpliterator"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty {@code Spliterator.OfLong}

<p>The empty spliterator reports {@link Spliterator#SIZED} and
{@link Spliterator#SUBSIZED}.  Calls to
{@link java.util.Spliterator#trySplit()} always return {@code null}.

@return An empty spliterator
"
      end

      classrelation 3544706 // EMPTY_LONG_SPLITERATOR (<unidirectional association>)
	relation 3544706 --->
	  a role_name "EMPTY_LONG_SPLITERATOR" init_value "
            new EmptySpliterator.OfLong()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3544706 // EMPTY_LONG_SPLITERATOR (<unidirectional association>)
	  b parent class_ref 376834 // OfLong
      end

      operation 8908930 "emptyDoubleSpliterator"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty {@code Spliterator.OfDouble}

<p>The empty spliterator reports {@link Spliterator#SIZED} and
{@link Spliterator#SUBSIZED}.  Calls to
{@link java.util.Spliterator#trySplit()} always return {@code null}.

@return An empty spliterator
"
      end

      classrelation 3544834 // EMPTY_DOUBLE_SPLITERATOR (<unidirectional association>)
	relation 3544834 --->
	  a role_name "EMPTY_DOUBLE_SPLITERATOR" init_value "
            new EmptySpliterator.OfDouble()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3544834 // EMPTY_DOUBLE_SPLITERATOR (<unidirectional association>)
	  b parent class_ref 377090 // OfDouble
      end

      operation 8909058 "spliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 2
	  param inout name "array" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Array-based spliterators

Creates a {@code Spliterator} covering the elements of a given array,
using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(Object[])}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report; it is common to
additionally specify {@code IMMUTABLE} and {@code ORDERED}.

@param <T> Type of elements
@param array The array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@see Arrays#spliterator(Object[])
"
      end

      operation 8909186 "spliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 4
	  param inout name "array" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator} covering a range of elements of a given
array, using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(Object[])}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report; it is common to
additionally specify {@code IMMUTABLE} and {@code ORDERED}.

@param <T> Type of elements
@param array The array, assumed to be unmodified during use
@param fromIndex The least index (inclusive) to cover
@param toIndex One past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@throws ArrayIndexOutOfBoundsException if {@code fromIndex} is negative,
        {@code toIndex} is less than {@code fromIndex}, or
        {@code toIndex} is greater than the array size
@see Arrays#spliterator(Object[], int, int)
"
      end

      operation 8909314 "spliterator"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfInt} covering the elements of a given array,
using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(int[])}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report; it is common to
additionally specify {@code IMMUTABLE} and {@code ORDERED}.

@param array The array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@see Arrays#spliterator(int[])
"
      end

      operation 8909442 "spliterator"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 4
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfInt} covering a range of elements of a
given array, using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(int[], int, int)}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report; it is common to
additionally specify {@code IMMUTABLE} and {@code ORDERED}.

@param array The array, assumed to be unmodified during use
@param fromIndex The least index (inclusive) to cover
@param toIndex One past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@throws ArrayIndexOutOfBoundsException if {@code fromIndex} is negative,
        {@code toIndex} is less than {@code fromIndex}, or
        {@code toIndex} is greater than the array size
@see Arrays#spliterator(int[], int, int)
"
      end

      operation 8909570 "spliterator"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 2
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfLong} covering the elements of a given array,
using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(long[])}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report; it is common to
additionally specify {@code IMMUTABLE} and {@code ORDERED}.

@param array The array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@see Arrays#spliterator(long[])
"
      end

      operation 8909698 "spliterator"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 4
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfLong} covering a range of elements of a
given array, using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(long[], int, int)}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report.  (For example, if it is
known the array will not be further modified, specify {@code IMMUTABLE};
if the array data is considered to have an an encounter order, specify
{@code ORDERED}).  The method {@link Arrays#spliterator(long[], int, int)} can
often be used instead, which returns a spliterator that reports
{@code SIZED}, {@code SUBSIZED}, {@code IMMUTABLE}, and {@code ORDERED}.

@param array The array, assumed to be unmodified during use
@param fromIndex The least index (inclusive) to cover
@param toIndex One past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@throws ArrayIndexOutOfBoundsException if {@code fromIndex} is negative,
        {@code toIndex} is less than {@code fromIndex}, or
        {@code toIndex} is greater than the array size
@see Arrays#spliterator(long[], int, int)
"
      end

      operation 8909826 "spliterator"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 2
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfDouble} covering the elements of a given array,
using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(double[])}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report; it is common to
additionally specify {@code IMMUTABLE} and {@code ORDERED}.

@param array The array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@see Arrays#spliterator(double[])
"
      end

      operation 8909954 "spliterator"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 4
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param in name "additionalCharacteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfDouble} covering a range of elements of a
given array, using a customized set of spliterator characteristics.

<p>This method is provided as an implementation convenience for
Spliterators which store portions of their elements in arrays, and need
fine control over Spliterator characteristics.  Most other situations in
which a Spliterator for an array is needed should use
{@link Arrays#spliterator(double[], int, int)}.

<p>The returned spliterator always reports the characteristics
{@code SIZED} and {@code SUBSIZED}.  The caller may provide additional
characteristics for the spliterator to report.  (For example, if it is
known the array will not be further modified, specify {@code IMMUTABLE};
if the array data is considered to have an an encounter order, specify
{@code ORDERED}).  The method {@link Arrays#spliterator(long[], int, int)} can
often be used instead, which returns a spliterator that reports
{@code SIZED}, {@code SUBSIZED}, {@code IMMUTABLE}, and {@code ORDERED}.

@param array The array, assumed to be unmodified during use
@param fromIndex The least index (inclusive) to cover
@param toIndex One past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
@return A spliterator for an array
@throws NullPointerException if the given array is {@code null}
@throws ArrayIndexOutOfBoundsException if {@code fromIndex} is negative,
        {@code toIndex} is less than {@code fromIndex}, or
        {@code toIndex} is greater than the array size
@see Arrays#spliterator(double[], int, int)
"
      end

      operation 8910082 "checkFromToBounds"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "arrayLength" explicit_type "int"
	  param in name "origin" explicit_type "int"
	  param in name "fence" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate inclusive start index and exclusive end index against the length
of an array.
@param arrayLength The length of the array
@param origin The inclusive start index
@param fence The exclusive end index
@throws ArrayIndexOutOfBoundsException if the start index is greater than
the end index, if the start index is negative, or the end index is
greater than the array length
"
      end

      operation 8910210 "spliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterator-based spliterators

Creates a {@code Spliterator} using the given collection's
{@link java.util.Collection#iterator()} as the source of elements, and
reporting its {@link java.util.Collection#size()} as its initial size.

<p>The spliterator is
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the collection's iterator, and
implements {@code trySplit} to permit limited parallelism.

@param <T> Type of elements
@param c The collection
@param characteristics Characteristics of this spliterator's source or
       elements.  The characteristics {@code SIZED} and {@code SUBSIZED}
       are additionally reported unless {@code CONCURRENT} is supplied.
@return A spliterator from an iterator
@throws NullPointerException if the given collection is {@code null}
"
      end

      operation 8910338 "spliterator"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 3
	  param inout name "iterator" type class_ref 132994 // Iterator
	  param in name "size" explicit_type "long"
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator} using a given {@code Iterator}
as the source of elements, and with a given initially reported size.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned, or the initially reported
size is not equal to the actual number of elements in the source.

@param <T> Type of elements
@param iterator The iterator for the source
@param size The number of elements in the source, to be reported as
       initial {@code estimateSize}
@param characteristics Characteristics of this spliterator's source or
       elements.  The characteristics {@code SIZED} and {@code SUBSIZED}
       are additionally reported unless {@code CONCURRENT} is supplied.
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8910466 "spliteratorUnknownSize"
	class_operation public return_type class_ref 184450 // Spliterator
	nparams 2
	  param inout name "iterator" type class_ref 132994 // Iterator
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator} using a given {@code Iterator}
as the source of elements, with no initial size estimate.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned.

@param <T> Type of elements
@param iterator The iterator for the source
@param characteristics Characteristics of this spliterator's source
       or elements ({@code SIZED} and {@code SUBSIZED}, if supplied, are
       ignored and are not reported.)
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8910594 "spliterator"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 3
	  param inout name "iterator" type class_ref 1089794 // OfInt
	  param in name "size" explicit_type "long"
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfInt} using a given
{@code IntStream.IntIterator} as the source of elements, and with a given
initially reported size.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned, or the initially reported
size is not equal to the actual number of elements in the source.

@param iterator The iterator for the source
@param size The number of elements in the source, to be reported as
       initial {@code estimateSize}.
@param characteristics Characteristics of this spliterator's source or
       elements.  The characteristics {@code SIZED} and {@code SUBSIZED}
       are additionally reported unless {@code CONCURRENT} is supplied.
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8910722 "spliteratorUnknownSize"
	class_operation public return_type class_ref 376578 // OfInt
	nparams 2
	  param inout name "iterator" type class_ref 1089794 // OfInt
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfInt} using a given
{@code IntStream.IntIterator} as the source of elements, with no initial
size estimate.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned.

@param iterator The iterator for the source
@param characteristics Characteristics of this spliterator's source
       or elements ({@code SIZED} and {@code SUBSIZED}, if supplied, are
       ignored and are not reported.)
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8910850 "spliterator"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 3
	  param inout name "iterator" type class_ref 1089922 // OfLong
	  param in name "size" explicit_type "long"
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfLong} using a given
{@code LongStream.LongIterator} as the source of elements, and with a
given initially reported size.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned, or the initially reported
size is not equal to the actual number of elements in the source.

@param iterator The iterator for the source
@param size The number of elements in the source, to be reported as
       initial {@code estimateSize}.
@param characteristics Characteristics of this spliterator's source or
       elements.  The characteristics {@code SIZED} and {@code SUBSIZED}
       are additionally reported unless {@code CONCURRENT} is supplied.
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8910978 "spliteratorUnknownSize"
	class_operation public return_type class_ref 376834 // OfLong
	nparams 2
	  param inout name "iterator" type class_ref 1089922 // OfLong
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfLong} using a given
{@code LongStream.LongIterator} as the source of elements, with no
initial size estimate.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned.

@param iterator The iterator for the source
@param characteristics Characteristics of this spliterator's source
       or elements ({@code SIZED} and {@code SUBSIZED}, if supplied, are
       ignored and are not reported.)
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8911106 "spliterator"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 3
	  param inout name "iterator" type class_ref 1090050 // OfDouble
	  param in name "size" explicit_type "long"
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfDouble} using a given
{@code DoubleStream.DoubleIterator} as the source of elements, and with a
given initially reported size.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned, or the initially reported
size is not equal to the actual number of elements in the source.

@param iterator The iterator for the source
@param size The number of elements in the source, to be reported as
       initial {@code estimateSize}
@param characteristics Characteristics of this spliterator's source or
       elements.  The characteristics {@code SIZED} and {@code SUBSIZED}
       are additionally reported unless {@code CONCURRENT} is supplied.
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8911234 "spliteratorUnknownSize"
	class_operation public return_type class_ref 377090 // OfDouble
	nparams 2
	  param inout name "iterator" type class_ref 1090050 // OfDouble
	  param in name "characteristics" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Spliterator.OfDouble} using a given
{@code DoubleStream.DoubleIterator} as the source of elements, with no
initial size estimate.

<p>The spliterator is not
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits
the <em>fail-fast</em> properties of the iterator, and implements
{@code trySplit} to permit limited parallelism.

<p>Traversal of elements should be accomplished through the spliterator.
The behaviour of splitting and traversal is undefined if the iterator is
operated on after the spliterator is returned.

@param iterator The iterator for the source
@param characteristics Characteristics of this spliterator's source
       or elements ({@code SIZED} and {@code SUBSIZED}, if supplied, are
       ignored and are not reported.)
@return A spliterator from an iterator
@throws NullPointerException if the given iterator is {@code null}
"
      end

      operation 8911362 "iterator"
	class_operation public return_type class_ref 132994 // Iterator
	nparams 1
	  param inout name "spliterator" type class_ref 184450 // Spliterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterators from Spliterators

Creates an {@code Iterator} from a {@code Spliterator}.

<p>Traversal of elements should be accomplished through the iterator.
The behaviour of traversal is undefined if the spliterator is operated
after the iterator is returned.

@param <T> Type of elements
@param spliterator The spliterator
@return An iterator
@throws NullPointerException if the given spliterator is {@code null}
"
      end

      operation 8911490 "iterator"
	class_operation public return_type class_ref 1089794 // OfInt
	nparams 1
	  param inout name "spliterator" type class_ref 376578 // OfInt
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code PrimitiveIterator.OfInt} from a
{@code Spliterator.OfInt}.

<p>Traversal of elements should be accomplished through the iterator.
The behaviour of traversal is undefined if the spliterator is operated
after the iterator is returned.

@param spliterator The spliterator
@return An iterator
@throws NullPointerException if the given spliterator is {@code null}
"
      end

      operation 8911618 "iterator"
	class_operation public return_type class_ref 1089922 // OfLong
	nparams 1
	  param inout name "spliterator" type class_ref 376834 // OfLong
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code PrimitiveIterator.OfLong} from a
{@code Spliterator.OfLong}.

<p>Traversal of elements should be accomplished through the iterator.
The behaviour of traversal is undefined if the spliterator is operated
after the iterator is returned.

@param spliterator The spliterator
@return An iterator
@throws NullPointerException if the given spliterator is {@code null}
"
      end

      operation 8911746 "iterator"
	class_operation public return_type class_ref 1090050 // OfDouble
	nparams 1
	  param inout name "spliterator" type class_ref 377090 // OfDouble
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code PrimitiveIterator.OfDouble} from a
{@code Spliterator.OfDouble}.

<p>Traversal of elements should be accomplished through the iterator.
The behaviour of traversal is undefined if the spliterator is operated
after the iterator is returned.

@param spliterator The spliterator
@return An iterator
@throws NullPointerException if the given spliterator is {@code null}
"
      end

      class 1092098 "EmptySpliterator"
	abstract visibility private 
	nformals 3
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "S" type "" explicit_default_value ""
	  explicit_extends "Spliterator<T>"
	formal name "C" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 8911874 "EmptySpliterator"
	  cpp_inline package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8912002 "trySplit"
	  cpp_inline public explicit_return_type "S"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8912130 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" explicit_type "C"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8912258 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" explicit_type "C"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8912386 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8912514 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1092226 "OfRef"
	  visibility private 
	  nformals 1
	  formal name "T" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 4
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 0 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 1 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 2 explicit_value ""
	  actual class class_ref 184450 // Spliterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3544962 // <realization>
	    relation 3544962 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3544962 // <realization>
	      b parent class_ref 1092098 // EmptySpliterator
	  end

	  classrelation 3545090 // <realization>
	    relation 3545090 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3545090 // <realization>
	      b parent class_ref 184450 // Spliterator
	  end

	  operation 8912642 "OfRef"
	    cpp_inline package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1092354 "OfInt"
	  visibility private 
	  nactuals 4
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 0 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 1 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 2 explicit_value ""
	  actual class class_ref 184450 // Spliterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3545218 // <realization>
	    relation 3545218 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3545218 // <realization>
	      b parent class_ref 1092098 // EmptySpliterator
	  end

	  classrelation 3545346 // <realization>
	    relation 3545346 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3545346 // <realization>
	      b parent class_ref 376578 // OfInt
	  end

	  operation 8912770 "OfInt"
	    cpp_inline package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1092482 "OfLong"
	  visibility private 
	  nactuals 4
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 0 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 1 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 2 explicit_value ""
	  actual class class_ref 184450 // Spliterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3545474 // <realization>
	    relation 3545474 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3545474 // <realization>
	      b parent class_ref 1092098 // EmptySpliterator
	  end

	  classrelation 3545602 // <realization>
	    relation 3545602 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3545602 // <realization>
	      b parent class_ref 376834 // OfLong
	  end

	  operation 8912898 "OfLong"
	    cpp_inline package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1092610 "OfDouble"
	  visibility private 
	  nactuals 4
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 0 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 1 explicit_value ""
	  actual class class_ref 1092098 // EmptySpliterator
	    rank 2 explicit_value ""
	  actual class class_ref 184450 // Spliterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3545730 // <realization>
	    relation 3545730 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3545730 // <realization>
	      b parent class_ref 1092098 // EmptySpliterator
	  end

	  classrelation 3545858 // <realization>
	    relation 3545858 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3545858 // <realization>
	      b parent class_ref 377090 // OfDouble
	  end

	  operation 8913026 "OfDouble"
	    cpp_inline package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1092738 "ArraySpliterator"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3545986 // <realization>
	  relation 3545986 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3545986 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	classrelation 3546114 // array (<unidirectional association>)
	  relation 3546114 --->
	    a role_name "array" multiplicity "[]" const_relation private
	      comment "
The array, explicitly typed as Object[]. Unlike in some other
classes (see for example CR 6260652), we do not need to
screen arguments to ensure they are exactly of type Object[]
so long as no methods write into the array or serialize it,
which we ensure here by defining this class as final.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3546114 // array (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	attribute 2076546 "index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 2076674 "fence"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " one past last index"
	end

	attribute 2076802 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8913154 "ArraySpliterator"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param inout name "array" type class_ref 129538 // Object
	  multiplicity "[]"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering all of the given array.
@param array the array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
of this spliterator's source or elements beyond {@code SIZED} and
{@code SUBSIZED} which are are always reported
"
	end

	operation 8913282 "ArraySpliterator"
	  cpp_inline public explicit_return_type ""
	  nparams 4
	    param inout name "array" type class_ref 129538 // Object
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering the given array and range
@param array the array, assumed to be unmodified during use
@param origin the least index (inclusive) to cover
@param fence one past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
of this spliterator's source or elements beyond {@code SIZED} and
{@code SUBSIZED} which are are always reported
"
	end

	operation 8913410 "trySplit"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8913538 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	  
	  
	  
	end

	operation 8913666 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8913794 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8913922 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8914050 "getComparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1092866 "IntArraySpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3546242 // <realization>
	  relation 3546242 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3546242 // <realization>
	    b parent class_ref 376578 // OfInt
	end

	attribute 2076930 "array"
	  const_attribute private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2077058 "index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 2077186 "fence"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " one past last index"
	end

	attribute 2077314 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8914178 "IntArraySpliterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "array" explicit_type "int"
	  multiplicity "[]"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering all of the given array.
@param array the array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
"
	end

	operation 8914306 "IntArraySpliterator"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "array" explicit_type "int"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering the given array and range
@param array the array, assumed to be unmodified during use
@param origin the least index (inclusive) to cover
@param fence one past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
"
	end

	operation 8914434 "trySplit"
	  public return_type class_ref 376578 // OfInt
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8914562 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8914690 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8914818 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8914946 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8915074 "getComparator"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1092994 "LongArraySpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3546370 // <realization>
	  relation 3546370 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3546370 // <realization>
	    b parent class_ref 376834 // OfLong
	end

	attribute 2077442 "array"
	  const_attribute private explicit_type "long"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2077570 "index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 2077698 "fence"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " one past last index"
	end

	attribute 2077826 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8915202 "LongArraySpliterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "array" explicit_type "long"
	  multiplicity "[]"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering all of the given array.
@param array the array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
"
	end

	operation 8915330 "LongArraySpliterator"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "array" explicit_type "long"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering the given array and range
@param array the array, assumed to be unmodified during use
@param origin the least index (inclusive) to cover
@param fence one past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
"
	end

	operation 8915458 "trySplit"
	  public return_type class_ref 376834 // OfLong
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8915586 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8915714 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8915842 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8915970 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8916098 "getComparator"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Long> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1093122 "DoubleArraySpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3546498 // <realization>
	  relation 3546498 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3546498 // <realization>
	    b parent class_ref 377090 // OfDouble
	end

	attribute 2077954 "array"
	  const_attribute private explicit_type "double"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2078082 "index"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " current index, modified on advance/split"
	end

	attribute 2078210 "fence"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " one past last index"
	end

	attribute 2078338 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8916226 "DoubleArraySpliterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "array" explicit_type "double"
	  multiplicity "[]"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering all of the given array.
@param array the array, assumed to be unmodified during use
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
"
	end

	operation 8916354 "DoubleArraySpliterator"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "array" explicit_type "double"
	  multiplicity "[]"
	    param in name "origin" explicit_type "int"
	    param in name "fence" explicit_type "int"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator covering the given array and range
@param array the array, assumed to be unmodified during use
@param origin the least index (inclusive) to cover
@param fence one past the greatest index to cover
@param additionalCharacteristics Additional spliterator characteristics
       of this spliterator's source or elements beyond {@code SIZED} and
       {@code SUBSIZED} which are are always reported
"
	end

	operation 8916482 "trySplit"
	  public return_type class_ref 377090 // OfDouble
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8916610 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8916738 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8916866 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8916994 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8917122 "getComparator"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Double> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1093250 "AbstractSpliterator"
	abstract visibility public 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3546626 // <realization>
	  relation 3546626 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3546626 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	attribute 2078466 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch array size increment"
	end

	attribute 2078594 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 25"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " max batch array size;"
	end

	attribute 2078722 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2078850 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2078978 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8917250 "AbstractSpliterator"
	  cpp_inline protected explicit_return_type ""
	  nparams 2
	    param in name "est" explicit_type "long"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator reporting the given estimated size and
additionalCharacteristics.

@param est the estimated size of this spliterator if known, otherwise
       {@code Long.MAX_VALUE}.
@param additionalCharacteristics properties of this spliterator's
       source or elements.  If {@code SIZED} is reported then this
       spliterator will additionally report {@code SUBSIZED}.
"
	end

	class 1093378 "HoldingConsumer"
	  visibility package 
	  nformals 1
	  formal name "T" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 163458 // Consumer
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3546754 // <realization>
	    relation 3546754 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3546754 // <realization>
	      b parent class_ref 163458 // Consumer
	  end

	  classrelation 3546882 // value (<unidirectional association>)
	    relation 3546882 --->
	      a role_name "value" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 3546882 // value (<unidirectional association>)
	      b parent class_ref 129538 // Object
	  end

	  operation 8917634 "accept"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "value" explicit_type "T"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	operation 8917762 "trySplit"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

This implementation permits limited parallelism.
"
	end

	operation 8917890 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the estimated size as reported when
created and, if the estimate size is known, decreases in size when
split.
"
	end

	operation 8918018 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the characteristics as reported when
created.
"
	end
      end

      class 1093506 "AbstractIntSpliterator"
	abstract visibility public 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3547010 // <realization>
	  relation 3547010 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3547010 // <realization>
	    b parent class_ref 376578 // OfInt
	end

	attribute 2079106 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " AbstractSpliterator.MAX_BATCH"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2079234 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " AbstractSpliterator.BATCH_UNIT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2079362 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2079490 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2079618 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8918146 "AbstractIntSpliterator"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "est" explicit_type "long"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator reporting the given estimated size and
characteristics.

@param est the estimated size of this spliterator if known, otherwise
       {@code Long.MAX_VALUE}.
@param additionalCharacteristics properties of this spliterator's
       source or elements.  If {@code SIZED} is reported then this
       spliterator will additionally report {@code SUBSIZED}.
"
	end

	class 1093634 "HoldingIntConsumer"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3547138 // <realization>
	    relation 3547138 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3547138 // <realization>
	      b parent class_ref 376706 // IntConsumer
	  end

	  attribute 2079746 "value"
	    package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8918274 "accept"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "value" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	operation 8918402 "trySplit"
	  public return_type class_ref 376578 // OfInt
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

This implementation permits limited parallelism.
"
	end

	operation 8918530 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the estimated size as reported when
created and, if the estimate size is known, decreases in size when
split.
"
	end

	operation 8918658 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the characteristics as reported when
created.
"
	end
      end

      class 1093762 "AbstractLongSpliterator"
	abstract visibility public 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3547266 // <realization>
	  relation 3547266 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3547266 // <realization>
	    b parent class_ref 376834 // OfLong
	end

	attribute 2079874 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " AbstractSpliterator.MAX_BATCH"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2080002 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " AbstractSpliterator.BATCH_UNIT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2080130 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2080258 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2080386 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8918786 "AbstractLongSpliterator"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "est" explicit_type "long"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator reporting the given estimated size and
characteristics.

@param est the estimated size of this spliterator if known, otherwise
       {@code Long.MAX_VALUE}.
@param additionalCharacteristics properties of this spliterator's
       source or elements.  If {@code SIZED} is reported then this
       spliterator will additionally report {@code SUBSIZED}.
"
	end

	class 1093890 "HoldingLongConsumer"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3547394 // <realization>
	    relation 3547394 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3547394 // <realization>
	      b parent class_ref 376962 // LongConsumer
	  end

	  attribute 2080514 "value"
	    package explicit_type "long"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8918914 "accept"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "value" explicit_type "long"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	operation 8919042 "trySplit"
	  public return_type class_ref 376834 // OfLong
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

This implementation permits limited parallelism.
"
	end

	operation 8919170 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the estimated size as reported when
created and, if the estimate size is known, decreases in size when
split.
"
	end

	operation 8919298 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the characteristics as reported when
created.
"
	end
      end

      class 1094018 "AbstractDoubleSpliterator"
	abstract visibility public 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3547522 // <realization>
	  relation 3547522 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3547522 // <realization>
	    b parent class_ref 377090 // OfDouble
	end

	attribute 2080642 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " AbstractSpliterator.MAX_BATCH"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2080770 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " AbstractSpliterator.BATCH_UNIT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2080898 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2081026 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2081154 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8919426 "AbstractDoubleSpliterator"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "est" explicit_type "long"
	    param in name "additionalCharacteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator reporting the given estimated size and
characteristics.

@param est the estimated size of this spliterator if known, otherwise
       {@code Long.MAX_VALUE}.
@param additionalCharacteristics properties of this spliterator's
       source or elements.  If {@code SIZED} is reported then this
       spliterator will additionally report {@code SUBSIZED}.
"
	end

	class 1094146 "HoldingDoubleConsumer"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3547650 // <realization>
	    relation 3547650 -_-|>
	      a public
		java "${type}"
		classrelation_ref 3547650 // <realization>
	      b parent class_ref 377346 // DoubleConsumer
	  end

	  attribute 2081282 "value"
	    package explicit_type "double"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8919554 "accept"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "value" explicit_type "double"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	operation 8919682 "trySplit"
	  public return_type class_ref 377090 // OfDouble
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

This implementation permits limited parallelism.
"
	end

	operation 8919810 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the estimated size as reported when
created and, if the estimate size is known, decreases in size when
split.
"
	end

	operation 8919938 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "{@inheritDoc}

@implSpec
This implementation returns the characteristics as reported when
created.
"
	end
      end

      class 1094274 "IteratorSpliterator"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3547778 // <realization>
	  relation 3547778 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3547778 // <realization>
	    b parent class_ref 184450 // Spliterator
	end

	attribute 2081410 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch array size increment"
	end

	attribute 2081538 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 25"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " max batch array size;"
	end

	classrelation 3547906 // collection (<unidirectional association>)
	  relation 3547906 --->
	    a role_name "collection" const_relation private
	      comment " null OK"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends T> ${name}${value};
"
	      classrelation_ref 3547906 // collection (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	classrelation 3548034 // it (<unidirectional association>)
	  relation 3548034 --->
	    a role_name "it" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends T> ${name}${value};
"
	      classrelation_ref 3548034 // it (<unidirectional association>)
	    b parent class_ref 132994 // Iterator
	end

	attribute 2081666 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2081794 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2081922 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8920066 "IteratorSpliterator"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param inout name "collection" type class_ref 184194 // Collection
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given given
collection's {@link java.util.Collection#iterator()) for traversal,
and reporting its {@link java.util.Collection#size()) as its initial
size.

@param c the collection
@param characteristics properties of this spliterator's
       source or elements.
"
	end

	operation 8920194 "IteratorSpliterator"
	  cpp_inline public explicit_return_type ""
	  nparams 3
	    param inout name "iterator" type class_ref 132994 // Iterator
	    param in name "size" explicit_type "long"
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator
for traversal, and reporting the given initial size
and characteristics.

@param iterator the iterator for the source
@param size the number of elements in the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8920322 "IteratorSpliterator"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param inout name "iterator" type class_ref 132994 // Iterator
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator
for traversal, and reporting the given initial size
and characteristics.

@param iterator the iterator for the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8920450 "trySplit"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8920578 "forEachRemaining"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8920706 "tryAdvance"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 163458 // Consumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8920834 "estimateSize"
	  cpp_inline public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8920962 "characteristics"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8921090 "getComparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1094402 "IntIteratorSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3548162 // <realization>
	  relation 3548162 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3548162 // <realization>
	    b parent class_ref 376578 // OfInt
	end

	attribute 2082050 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " IteratorSpliterator.BATCH_UNIT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2082178 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " IteratorSpliterator.MAX_BATCH"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3548290 // it (<unidirectional association>)
	  relation 3548290 --->
	    a role_name "it" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3548290 // it (<unidirectional association>)
	    b parent class_ref 1089794 // OfInt
	end

	attribute 2082306 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2082434 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2082562 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8921218 "IntIteratorSpliterator"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "iterator" type class_ref 1089794 // OfInt
	    param in name "size" explicit_type "long"
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator
for traversal, and reporting the given initial size
and characteristics.

@param iterator the iterator for the source
@param size the number of elements in the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8921346 "IntIteratorSpliterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "iterator" type class_ref 1089794 // OfInt
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator for a
source of unknown size, reporting the given
characteristics.

@param iterator the iterator for the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8921474 "trySplit"
	  public return_type class_ref 376578 // OfInt
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8921602 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8921730 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8921858 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8921986 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8922114 "getComparator"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1094530 "LongIteratorSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3548418 // <realization>
	  relation 3548418 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3548418 // <realization>
	    b parent class_ref 376834 // OfLong
	end

	attribute 2082690 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " IteratorSpliterator.BATCH_UNIT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2082818 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " IteratorSpliterator.MAX_BATCH"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3548546 // it (<unidirectional association>)
	  relation 3548546 --->
	    a role_name "it" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3548546 // it (<unidirectional association>)
	    b parent class_ref 1089922 // OfLong
	end

	attribute 2082946 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2083074 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2083202 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8922242 "LongIteratorSpliterator"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "iterator" type class_ref 1089922 // OfLong
	    param in name "size" explicit_type "long"
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator
for traversal, and reporting the given initial size
and characteristics.

@param iterator the iterator for the source
@param size the number of elements in the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8922370 "LongIteratorSpliterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "iterator" type class_ref 1089922 // OfLong
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator for a
source of unknown size, reporting the given
characteristics.

@param iterator the iterator for the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8922498 "trySplit"
	  public return_type class_ref 376834 // OfLong
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8922626 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8922754 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8922882 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8923010 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8923138 "getComparator"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Long> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1094658 "DoubleIteratorSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3548674 // <realization>
	  relation 3548674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3548674 // <realization>
	    b parent class_ref 377090 // OfDouble
	end

	attribute 2083330 "BATCH_UNIT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " IteratorSpliterator.BATCH_UNIT"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2083458 "MAX_BATCH"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " IteratorSpliterator.MAX_BATCH"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3548802 // it (<unidirectional association>)
	  relation 3548802 --->
	    a role_name "it" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3548802 // it (<unidirectional association>)
	    b parent class_ref 1090050 // OfDouble
	end

	attribute 2083586 "characteristics"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2083714 "est"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " size estimate"
	end

	attribute 2083842 "batch"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " batch size for splits"
	end

	operation 8923266 "DoubleIteratorSpliterator"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "iterator" type class_ref 1090050 // OfDouble
	    param in name "size" explicit_type "long"
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator
for traversal, and reporting the given initial size
and characteristics.

@param iterator the iterator for the source
@param size the number of elements in the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8923394 "DoubleIteratorSpliterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "iterator" type class_ref 1090050 // OfDouble
	    param in name "characteristics" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a spliterator using the given iterator for a
source of unknown size, reporting the given
characteristics.

@param iterator the iterator for the source
@param characteristics properties of this spliterator's
source or elements.
"
	end

	operation 8923522 "trySplit"
	  public return_type class_ref 377090 // OfDouble
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8923650 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8923778 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8923906 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8924034 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 8924162 "getComparator"
	  public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Double> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1094786 "SplittableRandom"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generator of uniform pseudorandom values applicable for use in
(among other contexts) isolated parallel computations that may
generate subtasks. Class {@code SplittableRandom} supports methods for
producing pseudorandom numbers of type {@code int}, {@code long},
and {@code double} with similar usages as for class
{@link java.util.Random} but differs in the following ways:

<ul>

<li>Series of generated values pass the DieHarder suite testing
independence and uniformity properties of random number generators.
(Most recently validated with <a
href=\"http://www.phy.duke.edu/~rgb/General/dieharder.php\"> version
3.31.1</a>.) These tests validate only the methods for certain
types and ranges, but similar properties are expected to hold, at
least approximately, for others as well. The <em>period</em>
(length of any series of generated values before it repeats) is at
least 2<sup>64</sup>. </li>

<li> Method {@link #split} constructs and returns a new
SplittableRandom instance that shares no mutable state with the
current instance. However, with very high probability, the
values collectively generated by the two objects have the same
statistical properties as if the same quantity of values were
generated by a single thread using a single {@code
SplittableRandom} object.  </li>

<li>Instances of SplittableRandom are <em>not</em> thread-safe.
They are designed to be split, not shared, across threads. For
example, a {@link java.util.concurrent.ForkJoinTask
fork/join-style} computation using random numbers might include a
construction of the form {@code new
Subtask(aSplittableRandom.split()).fork()}.

<li>This class provides additional methods for generating random
streams, that employ the above techniques when used in {@code
stream.parallel()} mode.</li>

</ul>

<p>Instances of {@code SplittableRandom} are not cryptographically
secure.  Consider instead using {@link java.security.SecureRandom}
in security-sensitive applications. Additionally,
default-constructed instances do not use a cryptographically random
seed unless the {@linkplain System#getProperty system property}
{@code java.util.secureRandomSeed} is set to {@code true}.

@author  Guy Steele
@author  Doug Lea
@since   1.8
"
      attribute 2083970 "GOLDEN_GAMMA"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0x9e3779b97f4a7c15L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Implementation Overview.

This algorithm was inspired by the \"DotMix\" algorithm by
Leiserson, Schardl, and Sukha \"Deterministic Parallel
Random-Number Generation for Dynamic-Multithreading Platforms\",
PPoPP 2012, as well as those in \"Parallel random numbers: as
easy as 1, 2, 3\" by Salmon, Morae, Dror, and Shaw, SC 2011.  It
differs mainly in simplifying and cheapening operations.

The primary update step (method nextSeed()) is to add a
constant (\"gamma\") to the current (64 bit) seed, forming a
simple sequence.  The seed and the gamma values for any two
SplittableRandom instances are highly likely to be different.

Methods nextLong, nextInt, and derivatives do not return the
sequence (seed) values, but instead a hash-like bit-mix of
their bits, producing more independently distributed sequences.
For nextLong, the mix64 function is based on David Stafford's
(http://zimbry.blogspot.com/2011/09/better-bit-mixing-improving-on.html)
\"Mix13\" variant of the \"64-bit finalizer\" function in Austin
Appleby's MurmurHash3 algorithm (see
http://code.google.com/p/smhasher/wiki/MurmurHash3). The mix32
function is based on Stafford's Mix04 mix function, but returns
the upper 32 bits cast as int.

The split operation uses the current generator to form the seed
and gamma for another SplittableRandom.  To conservatively
avoid potential correlations between seed and value generation,
gamma selection (method mixGamma) uses different
(Murmurhash3's) mix constants.  To avoid potential weaknesses
in bit-mixing transformations, we restrict gammas to odd values
with at least 24 0-1 or 1-0 bit transitions.  Rather than
rejecting candidates with too few or too many bits set, method
mixGamma flips some bits (which has the effect of mapping at
most 4 to any given gamma value).  This reduces the effective
set of 64bit odd gamma values by about 2%, and serves as an
automated screening for sequence constant selection that is
left as an empirical decision in some other hashing and crypto
algorithms.

The resulting generator thus transforms a sequence in which
(typically) many bits change on each step, with an inexpensive
mixer with good (but less than cryptographically secure)
avalanching.

The default (no-argument) constructor, in essence, invokes
split() for a common \"defaultGen\" SplittableRandom.  Unlike
other cases, this split must be performed in a thread-safe
manner, so we use an AtomicLong to represent the seed rather
than use an explicit SplittableRandom. To bootstrap the
defaultGen, we start off using a seed based on current time
unless the java.util.secureRandomSeed property is set. This
serves as a slimmed-down (and insecure) variant of SecureRandom
that also avoids stalls that may occur when using /dev/random.

It is a relatively simple matter to apply the basic design here
to use 128 bit seeds. However, emulating 128bit arithmetic and
carrying around twice the state add more overhead than appears
warranted for current usages.

File organization: First the non-public methods that constitute
the main algorithm, then the main public methods, followed by
some custom spliterator classes needed for stream methods.


The golden ratio scaled to 64bits, used as the initial gamma
value for (unsplit) SplittableRandoms.

"
      end

      attribute 2084098 "DOUBLE_UNIT"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0x1.0p-53"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The least non-zero value returned by nextDouble(). This value
is scaled by a random value of 53 bits to produce a result.

 1.0 / (1L << 53);"
      end

      attribute 2084226 "seed"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The seed. Updated only via method nextSeed.

"
      end

      attribute 2084354 "gamma"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The step value.

"
      end

      operation 8924290 "SplittableRandom"
	private explicit_return_type ""
	nparams 2
	  param in name "seed" explicit_type "long"
	  param in name "gamma" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal constructor used by all others except default constructor.
"
      end

      operation 8924418 "mix64"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "z" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes Stafford variant 13 of 64bit mix function.
"
      end

      operation 8924546 "mix32"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "z" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the 32 high bits of Stafford variant 4 mix64 function as int.
"
      end

      operation 8924674 "mixGamma"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "z" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the gamma value to use for a new split instance.
"
      end

      operation 8924802 "nextSeed"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds gamma to seed.
"
      end

      classrelation 3548930 // defaultGen (<unidirectional association>)
	relation 3548930 --->
	  a role_name "defaultGen" init_value " new AtomicLong(initialSeed())" class_relation const_relation private
	    comment "
The seed generator for default constructors.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3548930 // defaultGen (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      operation 8924930 "initialSeed"
	class_operation private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3549058 // BadBound (<unidirectional association>)
	relation 3549058 --->
	  a role_name "BadBound" init_value " \"bound must be positive\"" class_relation const_relation package
	    comment " IllegalArgumentException messages
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3549058 // BadBound (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3549186 // BadRange (<unidirectional association>)
	relation 3549186 --->
	  a role_name "BadRange" init_value " \"bound must be greater than origin\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3549186 // BadRange (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3549314 // BadSize (<unidirectional association>)
	relation 3549314 --->
	  a role_name "BadSize" init_value " \"size must be non-negative\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3549314 // BadSize (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8925058 "internalNextLong"
	package explicit_return_type "long"
	nparams 2
	  param in name "origin" explicit_type "long"
	  param in name "bound" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal versions of nextX methods used by streams, as well as
the public nextX(origin, bound) methods.  These exist mainly to
avoid the need for multiple versions of stream spliterators
across the different exported forms of streams.


The form of nextLong used by LongStream Spliterators.  If
origin is greater than bound, acts as unbounded form of
nextLong, else as bounded form.

@param origin the least value, unless greater than bound
@param bound the upper bound (exclusive), must not equal origin
@return a pseudorandom value
"
      end

      operation 8925186 "internalNextInt"
	package explicit_return_type "int"
	nparams 2
	  param in name "origin" explicit_type "int"
	  param in name "bound" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The form of nextInt used by IntStream Spliterators.
Exactly the same as long version, except for types.

@param origin the least value, unless greater than bound
@param bound the upper bound (exclusive), must not equal origin
@return a pseudorandom value
"
      end

      operation 8925314 "internalNextDouble"
	package explicit_return_type "double"
	nparams 2
	  param in name "origin" explicit_type "double"
	  param in name "bound" explicit_type "double"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The form of nextDouble used by DoubleStream Spliterators.

@param origin the least value, unless greater than bound
@param bound the upper bound (exclusive), must not equal origin
@return a pseudorandom value
"
      end

      operation 8925442 "SplittableRandom"
	public explicit_return_type ""
	nparams 1
	  param in name "seed" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------- public methods ---------------- 

Creates a new SplittableRandom instance using the specified
initial seed. SplittableRandom instances created with the same
seed in the same program generate identical sequences of values.

@param seed the initial seed
"
      end

      operation 8925570 "SplittableRandom"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SplittableRandom instance that is likely to
generate sequences of values that are statistically independent
of those of any other instances in the current program; and
may, and typically does, vary across program invocations.
"
      end

      operation 8925698 "split"
	public return_type class_ref 1094786 // SplittableRandom
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and returns a new SplittableRandom instance that
shares no mutable state with this instance. However, with very
high probability, the set of values collectively generated by
the two objects has the same statistical properties as if the
same quantity of values were generated by a single thread using
a single SplittableRandom object.  Either or both of the two
objects may be further split using the {@code split()} method,
and the same expected statistical properties apply to the
entire set of generators constructed by such recursive
splitting.

@return the new SplittableRandom instance
"
      end

      operation 8925826 "nextInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code int} value.

@return a pseudorandom {@code int} value
"
      end

      operation 8925954 "nextInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "bound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code int} value between zero (inclusive)
and the specified bound (exclusive).

@param bound the upper bound (exclusive).  Must be positive.
@return a pseudorandom {@code int} value between zero
        (inclusive) and the bound (exclusive)
@throws IllegalArgumentException if {@code bound} is not positive
"
      end

      operation 8926082 "nextInt"
	public explicit_return_type "int"
	nparams 2
	  param in name "origin" explicit_type "int"
	  param in name "bound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code int} value between the specified
origin (inclusive) and the specified bound (exclusive).

@param origin the least value returned
@param bound the upper bound (exclusive)
@return a pseudorandom {@code int} value between the origin
        (inclusive) and the bound (exclusive)
@throws IllegalArgumentException if {@code origin} is greater than
        or equal to {@code bound}
"
      end

      operation 8926210 "nextLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code long} value.

@return a pseudorandom {@code long} value
"
      end

      operation 8926338 "nextLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "bound" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code long} value between zero (inclusive)
and the specified bound (exclusive).

@param bound the upper bound (exclusive).  Must be positive.
@return a pseudorandom {@code long} value between zero
        (inclusive) and the bound (exclusive)
@throws IllegalArgumentException if {@code bound} is not positive
"
      end

      operation 8926466 "nextLong"
	public explicit_return_type "long"
	nparams 2
	  param in name "origin" explicit_type "long"
	  param in name "bound" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code long} value between the specified
origin (inclusive) and the specified bound (exclusive).

@param origin the least value returned
@param bound the upper bound (exclusive)
@return a pseudorandom {@code long} value between the origin
        (inclusive) and the bound (exclusive)
@throws IllegalArgumentException if {@code origin} is greater than
        or equal to {@code bound}
"
      end

      operation 8926594 "nextDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code double} value between zero
(inclusive) and one (exclusive).

@return a pseudorandom {@code double} value between zero
        (inclusive) and one (exclusive)
"
      end

      operation 8926722 "nextDouble"
	public explicit_return_type "double"
	nparams 1
	  param in name "bound" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code double} value between 0.0
(inclusive) and the specified bound (exclusive).

@param bound the upper bound (exclusive).  Must be positive.
@return a pseudorandom {@code double} value between zero
        (inclusive) and the bound (exclusive)
@throws IllegalArgumentException if {@code bound} is not positive
"
      end

      operation 8926850 "nextDouble"
	public explicit_return_type "double"
	nparams 2
	  param in name "origin" explicit_type "double"
	  param in name "bound" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code double} value between the specified
origin (inclusive) and bound (exclusive).

@param origin the least value returned
@param bound the upper bound (exclusive)
@return a pseudorandom {@code double} value between the origin
        (inclusive) and the bound (exclusive)
@throws IllegalArgumentException if {@code origin} is greater than
        or equal to {@code bound}
"
      end

      operation 8926978 "nextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudorandom {@code boolean} value.

@return a pseudorandom {@code boolean} value
"
      end

      operation 8927106 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 1
	  param in name "streamSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " stream methods, coded in a way intended to better isolate for
 maintenance purposes the small differences across forms.

Returns a stream producing the given {@code streamSize} number
of pseudorandom {@code int} values from this generator and/or
one split from it.

@param streamSize the number of values to generate
@return a stream of pseudorandom {@code int} values
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
"
      end

      operation 8927234 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code int}
values from this generator and/or one split from it.

@implNote This method is implemented to be equivalent to {@code
ints(Long.MAX_VALUE)}.

@return a stream of pseudorandom {@code int} values
"
      end

      operation 8927362 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 3
	  param in name "streamSize" explicit_type "long"
	  param in name "randomNumberOrigin" explicit_type "int"
	  param in name "randomNumberBound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number
of pseudorandom {@code int} values from this generator and/or one split
from it; each value conforms to the given origin (inclusive) and bound
(exclusive).

@param streamSize the number of values to generate
@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code int} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code streamSize} is
        less than zero, or {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
"
      end

      operation 8927490 "ints"
	public return_type class_ref 429570 // IntStream
	nparams 2
	  param in name "randomNumberOrigin" explicit_type "int"
	  param in name "randomNumberBound" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
int} values from this generator and/or one split from it; each value
conforms to the given origin (inclusive) and bound (exclusive).

@implNote This method is implemented to be equivalent to {@code
ints(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)}.

@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code int} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
"
      end

      operation 8927618 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 1
	  param in name "streamSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number
of pseudorandom {@code long} values from this generator and/or
one split from it.

@param streamSize the number of values to generate
@return a stream of pseudorandom {@code long} values
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
"
      end

      operation 8927746 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
long} values from this generator and/or one split from it.

@implNote This method is implemented to be equivalent to {@code
longs(Long.MAX_VALUE)}.

@return a stream of pseudorandom {@code long} values
"
      end

      operation 8927874 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 3
	  param in name "streamSize" explicit_type "long"
	  param in name "randomNumberOrigin" explicit_type "long"
	  param in name "randomNumberBound" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code long} values from this generator and/or one split
from it; each value conforms to the given origin (inclusive) and bound
(exclusive).

@param streamSize the number of values to generate
@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code long} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code streamSize} is
        less than zero, or {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
"
      end

      operation 8928002 "longs"
	public return_type class_ref 1023490 // LongStream
	nparams 2
	  param in name "randomNumberOrigin" explicit_type "long"
	  param in name "randomNumberBound" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
long} values from this generator and/or one split from it; each value
conforms to the given origin (inclusive) and bound (exclusive).

@implNote This method is implemented to be equivalent to {@code
longs(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)}.

@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code long} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
"
      end

      operation 8928130 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 1
	  param in name "streamSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code double} values from this generator and/or one split
from it; each value is between zero (inclusive) and one (exclusive).

@param streamSize the number of values to generate
@return a stream of {@code double} values
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
"
      end

      operation 8928258 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
double} values from this generator and/or one split from it; each value
is between zero (inclusive) and one (exclusive).

@implNote This method is implemented to be equivalent to {@code
doubles(Long.MAX_VALUE)}.

@return a stream of pseudorandom {@code double} values
"
      end

      operation 8928386 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 3
	  param in name "streamSize" explicit_type "long"
	  param in name "randomNumberOrigin" explicit_type "double"
	  param in name "randomNumberBound" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream producing the given {@code streamSize} number of
pseudorandom {@code double} values from this generator and/or one split
from it; each value conforms to the given origin (inclusive) and bound
(exclusive).

@param streamSize the number of values to generate
@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code double} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code streamSize} is
        less than zero
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
"
      end

      operation 8928514 "doubles"
	public return_type class_ref 1023618 // DoubleStream
	nparams 2
	  param in name "randomNumberOrigin" explicit_type "double"
	  param in name "randomNumberBound" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an effectively unlimited stream of pseudorandom {@code
double} values from this generator and/or one split from it; each value
conforms to the given origin (inclusive) and bound (exclusive).

@implNote This method is implemented to be equivalent to {@code
doubles(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)}.

@param randomNumberOrigin the origin (inclusive) of each random value
@param randomNumberBound the bound (exclusive) of each random value
@return a stream of pseudorandom {@code double} values,
        each with the given origin (inclusive) and bound (exclusive)
@throws IllegalArgumentException if {@code randomNumberOrigin}
        is greater than or equal to {@code randomNumberBound}
"
      end

      class 1094914 "RandomIntsSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3549442 // <realization>
	  relation 3549442 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3549442 // <realization>
	    b parent class_ref 376578 // OfInt
	end

	classrelation 3549570 // rng (<unidirectional association>)
	  relation 3549570 --->
	    a role_name "rng" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3549570 // rng (<unidirectional association>)
	    b parent class_ref 1094786 // SplittableRandom
	end

	attribute 2084482 "index"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2084610 "fence"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2084738 "origin"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2084866 "bound"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8928642 "RandomIntsSpliterator"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "rng" type class_ref 1094786 // SplittableRandom
	    param in name "index" explicit_type "long"
	    param in name "fence" explicit_type "long"
	    param in name "origin" explicit_type "int"
	    param in name "bound" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8928770 "trySplit"
	  public return_type class_ref 1094914 // RandomIntsSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8928898 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929026 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929154 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929282 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 376706 // IntConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1095042 "RandomLongsSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3549698 // <realization>
	  relation 3549698 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3549698 // <realization>
	    b parent class_ref 376834 // OfLong
	end

	classrelation 3549826 // rng (<unidirectional association>)
	  relation 3549826 --->
	    a role_name "rng" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3549826 // rng (<unidirectional association>)
	    b parent class_ref 1094786 // SplittableRandom
	end

	attribute 2084994 "index"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2085122 "fence"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2085250 "origin"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2085378 "bound"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8929410 "RandomLongsSpliterator"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "rng" type class_ref 1094786 // SplittableRandom
	    param in name "index" explicit_type "long"
	    param in name "fence" explicit_type "long"
	    param in name "origin" explicit_type "long"
	    param in name "bound" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929538 "trySplit"
	  public return_type class_ref 1095042 // RandomLongsSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929666 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929794 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8929922 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8930050 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 376962 // LongConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1095170 "RandomDoublesSpliterator"
	visibility package 
	nactuals 1
	actual class class_ref 184450 // Spliterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3549954 // <realization>
	  relation 3549954 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3549954 // <realization>
	    b parent class_ref 377090 // OfDouble
	end

	classrelation 3550082 // rng (<unidirectional association>)
	  relation 3550082 --->
	    a role_name "rng" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3550082 // rng (<unidirectional association>)
	    b parent class_ref 1094786 // SplittableRandom
	end

	attribute 2085506 "index"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2085634 "fence"
	  const_attribute package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2085762 "origin"
	  const_attribute package explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2085890 "bound"
	  const_attribute package explicit_type "double"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8930178 "RandomDoublesSpliterator"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "rng" type class_ref 1094786 // SplittableRandom
	    param in name "index" explicit_type "long"
	    param in name "fence" explicit_type "long"
	    param in name "origin" explicit_type "double"
	    param in name "bound" explicit_type "double"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8930306 "trySplit"
	  public return_type class_ref 1095170 // RandomDoublesSpliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8930434 "estimateSize"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8930562 "characteristics"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8930690 "tryAdvance"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "consumer" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8930818 "forEachRemaining"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "consumer" type class_ref 377346 // DoubleConsumer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1095298 "StringJoiner"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code StringJoiner} is used to construct a sequence of characters separated
by a delimiter and optionally starting with a supplied prefix
and ending with a supplied suffix.
<p>
Prior to adding something to the {@code StringJoiner}, its
{@code sj.toString()} method will, by default, return {@code prefix + suffix}.
However, if the {@code setEmptyValue} method is called, the {@code emptyValue}
supplied will be returned instead. This can be used, for example, when
creating a string using set notation to indicate an empty set, i.e.
<code>\"{}\"</code>, where the {@code prefix} is <code>\"{\"</code>, the
{@code suffix} is <code>\"}\"</code> and nothing has been added to the
{@code StringJoiner}.

@apiNote
<p>The String {@code \"[George:Sally:Fred]\"} may be constructed as follows:

<pre> {@code
StringJoiner sj = new StringJoiner(\":\", \"[\", \"]\");
sj.add(\"George\").add(\"Sally\").add(\"Fred\");
String desiredString = sj.toString();
}</pre>
<p>
A {@code StringJoiner} may be employed to create formatted output from a
{@link java.util.stream.Stream} using
{@link java.util.stream.Collectors#joining(CharSequence)}. For example:

<pre> {@code
List<Integer> numbers = Arrays.asList(1, 2, 3, 4);
String commaSeparatedNumbers = numbers.stream()
    .map(i -> i.toString())
    .collect(Collectors.joining(\", \"));
}</pre>

@see java.util.stream.Collectors#joining(CharSequence)
@see java.util.stream.Collectors#joining(CharSequence, CharSequence, CharSequence)
@since  1.8
"
      classrelation 3550210 // prefix (<unidirectional association>)
	relation 3550210 --->
	  a role_name "prefix" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550210 // prefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3550338 // delimiter (<unidirectional association>)
	relation 3550338 --->
	  a role_name "delimiter" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550338 // delimiter (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3550466 // suffix (<unidirectional association>)
	relation 3550466 --->
	  a role_name "suffix" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550466 // suffix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3550594 // value (<unidirectional association>)
	relation 3550594 --->
	  a role_name "value" private
	    comment "
StringBuilder value -- at any time, the characters constructed from the
prefix, the added element separated by the delimiter, but without the
suffix, so that we can more easily add elements without having to jigger
the suffix each time.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550594 // value (<unidirectional association>)
	  b parent class_ref 173058 // StringBuilder
      end

      classrelation 3550722 // emptyValue (<unidirectional association>)
	relation 3550722 --->
	  a role_name "emptyValue" private
	    comment "
By default, the string consisting of prefix+suffix, returned by
toString(), or properties of value, when no elements have yet been added,
i.e. when it is empty.  This may be overridden by the user to be some
other value including the empty String.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3550722 // emptyValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8930946 "StringJoiner"
	public explicit_return_type ""
	nparams 1
	  param inout name "delimiter" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code StringJoiner} with no characters in it, with no
{@code prefix} or {@code suffix}, and a copy of the supplied
{@code delimiter}.
If no characters are added to the {@code StringJoiner} and methods
accessing the value of it are invoked, it will not return a
{@code prefix} or {@code suffix} (or properties thereof) in the result,
unless {@code setEmptyValue} has first been called.

@param  delimiter the sequence of characters to be used between each
        element added to the {@code StringJoiner} value
@throws NullPointerException if {@code delimiter} is {@code null}
"
      end

      operation 8931074 "StringJoiner"
	public explicit_return_type ""
	nparams 3
	  param inout name "delimiter" type class_ref 429442 // CharSequence
	  param inout name "prefix" type class_ref 429442 // CharSequence
	  param inout name "suffix" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code StringJoiner} with no characters in it using copies
of the supplied {@code prefix}, {@code delimiter} and {@code suffix}.
If no characters are added to the {@code StringJoiner} and methods
accessing the string value of it are invoked, it will return the
{@code prefix + suffix} (or properties thereof) in the result, unless
{@code setEmptyValue} has first been called.

@param  delimiter the sequence of characters to be used between each
        element added to the {@code StringJoiner}
@param  prefix the sequence of characters to be used at the beginning
@param  suffix the sequence of characters to be used at the end
@throws NullPointerException if {@code prefix}, {@code delimiter}, or
        {@code suffix} is {@code null}
"
      end

      operation 8931202 "setEmptyValue"
	public return_type class_ref 1095298 // StringJoiner
	nparams 1
	  param inout name "emptyValue" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the sequence of characters to be used when determining the string
representation of this {@code StringJoiner} and no elements have been
added yet, that is, when it is empty.  A copy of the {@code emptyValue}
parameter is made for this purpose. Note that once an add method has been
called, the {@code StringJoiner} is no longer considered empty, even if
the element(s) added correspond to the empty {@code String}.

@param  emptyValue the characters to return as the value of an empty
        {@code StringJoiner}
@return this {@code StringJoiner} itself so the calls may be chained
@throws NullPointerException when the {@code emptyValue} parameter is
        {@code null}
"
      end

      operation 8931330 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the current value, consisting of the {@code prefix}, the values
added so far separated by the {@code delimiter}, and the {@code suffix},
unless no elements have been added in which case, the
{@code prefix + suffix} or the {@code emptyValue} characters are returned

@return the string representation of this {@code StringJoiner}
"
      end

      operation 8931458 "add"
	public return_type class_ref 1095298 // StringJoiner
	nparams 1
	  param inout name "newElement" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a copy of the given {@code CharSequence} value as the next
element of the {@code StringJoiner} value. If {@code newElement} is
{@code null}, then {@code \"null\"} is added.

@param  newElement The element to add
@return a reference to this {@code StringJoiner}
"
      end

      operation 8931586 "merge"
	public return_type class_ref 1095298 // StringJoiner
	nparams 1
	  param inout name "other" type class_ref 1095298 // StringJoiner
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the contents of the given {@code StringJoiner} without prefix and
suffix as the next element if it is non-empty. If the given {@code
StringJoiner} is empty, the call has no effect.

<p>A {@code StringJoiner} is empty if {@link #add(CharSequence) add()}
has never been called, and if {@code merge()} has never been called
with a non-empty {@code StringJoiner} argument.

<p>If the other {@code StringJoiner} is using a different delimiter,
then elements from the other {@code StringJoiner} are concatenated with
that delimiter and the result is appended to this {@code StringJoiner}
as a single element.

@param other The {@code StringJoiner} whose contents should be merged
             into this one
@throws NullPointerException if the other {@code StringJoiner} is null
@return This {@code StringJoiner}
"
      end

      operation 8931714 "prepareBuilder"
	private return_type class_ref 173058 // StringBuilder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8931842 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the {@code String} representation
of this {@code StringJoiner}. Note that if
no add methods have been called, then the length of the {@code String}
representation (either {@code prefix + suffix} or {@code emptyValue})
will be returned. The value should be equivalent to
{@code toString().length()}.

@return the length of the current value of {@code StringJoiner}
"
      end
    end

    class 1095426 "TaskQueue"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a timer task queue: a priority queue of TimerTasks,
ordered on nextExecutionTime.  Each Timer object has one of these, which it
shares with its TimerThread.  Internally this class uses a heap, which
offers log(n) performance for the add, removeMin and rescheduleMin
operations, and constant time performance for the getMin operation.
"
      classrelation 3551618 // queue (<unidirectional association>)
	relation 3551618 --->
	  a role_name "queue" multiplicity "[]" init_value " new TimerTask[128]" private
	    comment "
Priority queue represented as a balanced binary heap: the two children
of queue[n] are queue[2*n] and queue[2*n+1].  The priority queue is
ordered on the nextExecutionTime field: The TimerTask with the lowest
nextExecutionTime is in queue[1] (assuming the queue is nonempty).  For
each node n in the heap, and each descendant of n, d,
n.nextExecutionTime <= d.nextExecutionTime.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3551618 // queue (<unidirectional association>)
	  b parent class_ref 882818 // TimerTask
      end

      attribute 2086146 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of tasks in the priority queue.  (The tasks are stored in
queue[1] up to queue[size]).

"
      end

      operation 8934146 "size"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of tasks currently on the queue.
"
      end

      operation 8934274 "add"
	package explicit_return_type "void"
	nparams 1
	  param inout name "task" type class_ref 882818 // TimerTask
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new task to the priority queue.
"
      end

      operation 8934402 "getMin"
	package return_type class_ref 882818 // TimerTask
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the \"head task\" of the priority queue.  (The head task is an
task with the lowest nextExecutionTime.)
"
      end

      operation 8934530 "get"
	package return_type class_ref 882818 // TimerTask
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ith task in the priority queue, where i ranges from 1 (the
head task, which is returned by getMin) to the number of tasks on the
queue, inclusive.
"
      end

      operation 8934658 "removeMin"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the head task from the priority queue.
"
      end

      operation 8934786 "quickRemove"
	package explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the ith element from queue without regard for maintaining
the heap invariant.  Recall that queue is one-based, so
1 <= i <= size.
"
      end

      operation 8934914 "rescheduleMin"
	package explicit_return_type "void"
	nparams 1
	  param in name "newTime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the nextExecutionTime associated with the head task to the
specified value, and adjusts priority queue accordingly.
"
      end

      operation 8935042 "isEmpty"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the priority queue contains no elements.
"
      end

      operation 8935170 "clear"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from the priority queue.
"
      end

      operation 8935298 "fixUp"
	private explicit_return_type "void"
	nparams 1
	  param in name "k" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes the heap invariant (described above) assuming the heap
satisfies the invariant except possibly for the leaf-node indexed by k
(which may have a nextExecutionTime less than its parent's).

This method functions by \"promoting\" queue[k] up the hierarchy
(by swapping it with its parent) repeatedly until queue[k]'s
nextExecutionTime is greater than or equal to that of its parent.
"
      end

      operation 8935426 "fixDown"
	private explicit_return_type "void"
	nparams 1
	  param in name "k" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes the heap invariant (described above) in the subtree
rooted at k, which is assumed to satisfy the heap invariant except
possibly for node k itself (which may have a nextExecutionTime greater
than its children's).

This method functions by \"demoting\" queue[k] down the hierarchy
(by swapping it with its smaller child) repeatedly until queue[k]'s
nextExecutionTime is less than or equal to those of its children.
"
      end

      operation 8935554 "heapify"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes the heap invariant (described above) in the entire tree,
assuming nothing about the order of the elements prior to the call.
"
      end
    end

    class 1095554 "TimerThread"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This \"helper class\" implements the timer's task execution thread, which
waits for tasks on the timer queue, executions them when they fire,
reschedules repeating tasks, and removes cancelled tasks and spent
non-repeating tasks from the queue.
"
      classrelation 3551362 // <generalisation>
	relation 3551362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3551362 // <generalisation>
	  b parent class_ref 128642 // Thread
      end

      attribute 2086018 "newTasksMayBeScheduled"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag is set to false by the reaper to inform us that there
are no more live references to our Timer object.  Once this flag
is true and there are no more tasks in our queue, there is no
work left for us to do, so we terminate gracefully.  Note that
this field is protected by queue's monitor!

"
      end

      classrelation 3551490 // queue (<unidirectional association>)
	relation 3551490 --->
	  a role_name "queue" private
	    comment "
Our Timer's queue.  We store this reference in preference to
a reference to the Timer so the reference graph remains acyclic.
Otherwise, the Timer would never be garbage-collected and this
thread would never go away.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3551490 // queue (<unidirectional association>)
	  b parent class_ref 1095426 // TaskQueue
      end

      operation 8933762 "TimerThread"
	package explicit_return_type ""
	nparams 1
	  param inout name "queue" type class_ref 1095426 // TaskQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8933890 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8934018 "mainLoop"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The main timer loop.  (See class comment.)
"
      end
    end

    class 1095682 "TimSort"
      visibility package 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A stable, adaptive, iterative mergesort that requires far fewer than
n lg(n) comparisons when running on partially sorted arrays, while
offering performance comparable to a traditional mergesort when run
on random arrays.  Like all proper mergesorts, this sort is stable and
runs O(n log n) time (worst case).  In the worst case, this sort requires
temporary storage space for n/2 object references; in the best case,
it requires only a small constant amount of space.

This implementation was adapted from Tim Peters's list sort for
Python, which is described in detail here:

  http://svn.python.org/projects/python/trunk/Objects/listsort.txt

Tim's C code may be found here:

  http://svn.python.org/projects/python/trunk/Objects/listobject.c

The underlying techniques are described in this paper (and may have
even earlier origins):

 \"Optimistic Sorting and Information Theoretic Complexity\"
 Peter McIlroy
 SODA (Fourth Annual ACM-SIAM Symposium on Discrete Algorithms),
 pp 467-474, Austin, Texas, 25-27 January 1993.

While the API to this class consists solely of static methods, it is
(privately) instantiable; a TimSort instance holds the state of an ongoing
sort, assuming the input array is large enough to warrant the full-blown
TimSort. Small arrays are sorted in place, using a binary insertion sort.

@author Josh Bloch
"
      attribute 2087170 "MIN_MERGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the minimum sized sequence that will be merged.  Shorter
sequences will be lengthened by calling binarySort.  If the entire
array is less than this length, no merges will be performed.

This constant should be a power of two.  It was 64 in Tim Peter's C
implementation, but 32 was empirically determined to work better in
this implementation.  In the unlikely event that you set this constant
to be a number that's not a power of two, you'll need to change the
{@link #minRunLength} computation.

If you decrease this constant, you must change the stackLen
computation in the TimSort constructor, or you risk an
ArrayOutOfBounds exception.  See listsort.txt for a discussion
of the minimum stack length required as a function of the length
of the array being sorted and the minimum merge sequence length.

"
      end

      attribute 2087298 "a"
	const_attribute private explicit_type "T"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array being sorted.

"
      end

      classrelation 3552002 // c (<unidirectional association>)
	relation 3552002 --->
	  a role_name "c" const_relation private
	    comment "
The comparator for this sort.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super T> ${name}${value};
"
	    classrelation_ref 3552002 // c (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      attribute 2087426 "MIN_GALLOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When we get into galloping mode, we stay there until both runs win less
often than MIN_GALLOP consecutive times.

"
      end

      attribute 2087554 "minGallop"
	private explicit_type "int"
	init_value " MIN_GALLOP"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This controls when we get *into* galloping mode.  It is initialized
to MIN_GALLOP.  The mergeLo and mergeHi methods nudge it higher for
random data, and lower for highly structured data.

"
      end

      attribute 2087682 "INITIAL_TMP_STORAGE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximum initial size of tmp array, which is used for merging.  The array
can grow to accommodate demand.

Unlike Tim's original C version, we do not allocate this much storage
when sorting smaller arrays.  This change was required for performance.

"
      end

      attribute 2087810 "tmp"
	private explicit_type "T"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temp storage for merges. A workspace array may optionally be
provided in constructor, and if so will be used as long as it
is big enough.

"
      end

      attribute 2087938 "tmpBase"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " base of tmp array slice"
      end

      attribute 2088066 "tmpLen"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " length of tmp array slice"
      end

      attribute 2088194 "stackSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A stack of pending runs yet to be merged.  Run i starts at
address base[i] and extends for len[i] elements.  It's always
true (so long as the indices are in bounds) that:

    runBase[i] + runLen[i] == runBase[i + 1]

so we could cut the storage for this, but it's a minor amount,
and keeping all the info explicit simplifies the code.

 Number of pending runs on stack"
      end

      attribute 2088322 "runBase"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2088450 "runLen"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 8936194 "TimSort"
	cpp_inline private explicit_return_type ""
	nparams 5
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param inout name "c" type class_ref 184962 // Comparator
	  param inout name "work" explicit_type "T"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TimSort instance to maintain the state of an ongoing sort.

@param a the array to be sorted
@param c the comparator to determine the order of the sort
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
"
      end

      operation 8936322 "sort"
	class_operation cpp_inline package explicit_return_type "void"
	nparams 7
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	  param inout name "work" explicit_type "T"
	multiplicity "[]"
	  param in name "workBase" explicit_type "int"
	  param in name "workLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The next method (package private and static) constitutes the
entire API of this class.


Sorts the given range, using the given workspace array slice
for temp storage when possible. This method is designed to be
invoked from public methods (in class Arrays) after performing
any necessary array bounds checks and expanding parameters into
the required forms.

@param a the array to be sorted
@param lo the index of the first element, inclusive, to be sorted
@param hi the index of the last element, exclusive, to be sorted
@param c the comparator to use
@param work a workspace array (slice)
@param workBase origin of usable space in work array
@param workLen usable size of work array
@since 1.8
"
      end

      operation 8936450 "binarySort"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 5
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? super T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
	comment "Sorts the specified portion of the specified array using a binary
insertion sort.  This is the best method for sorting small numbers
of elements.  It requires O(n log n) compares, but O(n^2) data
movement (worst case).

If the initial part of the specified range is already sorted,
this method can take advantage of it: the method assumes that the
elements from index {@code lo}, inclusive, to {@code start},
exclusive are already sorted.

@param a the array in which a range is to be sorted
@param lo the index of the first element in the range to be sorted
@param hi the index after the last element in the range to be sorted
@param start the index of the first element in the range that is
       not already known to be sorted ({@code lo <= start <= hi})
@param c comparator to used for the sort
"
      end

      operation 8936578 "countRunAndMakeAscending"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the run beginning at the specified position in
the specified array and reverses the run if it is descending (ensuring
that the run will always be ascending when the method returns).

A run is the longest ascending sequence with:

   a[lo] <= a[lo + 1] <= a[lo + 2] <= ...

or the longest descending sequence with:

   a[lo] >  a[lo + 1] >  a[lo + 2] >  ...

For its intended use in a stable mergesort, the strictness of the
definition of \"descending\" is needed so that the call can safely
reverse a descending sequence without violating stability.

@param a the array in which a run is to be counted and possibly reversed
@param lo index of the first element in the run
@param hi index after the last element that may be contained in the run.
It is required that {@code lo < hi}.
@param c the comparator to used for the sort
@return  the length of the run beginning at the specified position in
         the specified array
"
      end

      operation 8936706 "reverseRange"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverse the specified range of the specified array.

@param a the array in which a range is to be reversed
@param lo the index of the first element in the range to be reversed
@param hi the index after the last element in the range to be reversed
"
      end

      operation 8936834 "minRunLength"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum acceptable run length for an array of the specified
length. Natural runs shorter than this will be extended with
{@link #binarySort}.

Roughly speaking, the computation is:

 If n < MIN_MERGE, return n (it's too small to bother with fancy stuff).
 Else if n is an exact power of 2, return MIN_MERGE/2.
 Else return an int k, MIN_MERGE/2 <= k <= MIN_MERGE, such that n/k
  is close to, but strictly less than, an exact power of 2.

For the rationale, see listsort.txt.

@param n the length of the array to be sorted
@return the length of the minimum run to be merged
"
      end

      operation 8936962 "pushRun"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "runBase" explicit_type "int"
	  param in name "runLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes the specified run onto the pending-run stack.

@param runBase index of the first element in the run
@param runLen  the number of elements in the run
"
      end

      operation 8937090 "mergeCollapse"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examines the stack of runs waiting to be merged and merges adjacent runs
until the stack invariants are reestablished:

    1. runLen[i - 3] > runLen[i - 2] + runLen[i - 1]
    2. runLen[i - 2] > runLen[i - 1]

This method is called each time a new run is pushed onto the stack,
so the invariants are guaranteed to hold for i < stackSize upon
entry to the method.
"
      end

      operation 8937218 "mergeForceCollapse"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges all runs on the stack until only one remains.  This method is
called once, to complete the sort.
"
      end

      operation 8937346 "mergeAt"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges the two runs at stack indices i and i+1.  Run i must be
the penultimate or antepenultimate run on the stack.  In other words,
i must be equal to stackSize-2 or stackSize-3.

@param i stack index of the first of the two runs to merge
"
      end

      operation 8937474 "gallopLeft"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 6
	  param inout name "key" explicit_type "T"
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<? super T> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the position at which to insert the specified key into the
specified sorted range; if the range contains an element equal to key,
returns the index of the leftmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@param c the comparator used to order the range, and to search
@return the int k,  0 <= k <= n such that a[b + k - 1] < key <= a[b + k],
   pretending that a[b - 1] is minus infinity and a[b + n] is infinity.
   In other words, key belongs at index b + k; or in other words,
   the first k elements of a should precede key, and the last n - k
   should follow it.
"
      end

      operation 8937602 "gallopRight"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 6
	  param inout name "key" explicit_type "T"
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<? super T> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like gallopLeft, except that if the range contains an element equal to
key, gallopRight returns the index after the rightmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@param c the comparator used to order the range, and to search
@return the int k,  0 <= k <= n such that a[b + k - 1] <= key < a[b + k]
"
      end

      operation 8937730 "mergeLo"
	cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges two adjacent runs in place, in a stable fashion.  The first
element of the first run must be greater than the first element of the
second run (a[base1] > a[base2]), and the last element of the first run
(a[base1 + len1-1]) must be greater than all elements of the second run.

For performance, this method should be called only when len1 <= len2;
its twin, mergeHi should be called if len1 >= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)
"
      end

      operation 8937858 "mergeHi"
	cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like mergeLo, except that this method should be called only if
len1 >= len2; mergeLo should be called if len1 <= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)
"
      end

      operation 8937986 "ensureCapacity"
	cpp_inline private explicit_return_type "T"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the external array tmp has at least the specified
number of elements, increasing its size if necessary.  The size
increases exponentially to ensure amortized linear time complexity.

@param minCapacity the minimum required capacity of the tmp array
@return tmp, whether or not it grew
"
      end
    end

    class 1095810 "TreeMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 192130 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 192130 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 1063426 // NavigableMap
        rank 0 explicit_value ""
      actual class class_ref 1063426 // NavigableMap
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Red-Black tree based {@link NavigableMap} implementation.
The map is sorted according to the {@linkplain Comparable natural
ordering} of its keys, or by a {@link Comparator} provided at map
creation time, depending on which constructor is used.

<p>This implementation provides guaranteed log(n) time cost for the
{@code containsKey}, {@code get}, {@code put} and {@code remove}
operations.  Algorithms are adaptations of those in Cormen, Leiserson, and
Rivest's <em>Introduction to Algorithms</em>.

<p>Note that the ordering maintained by a tree map, like any sorted map, and
whether or not an explicit comparator is provided, must be <em>consistent
with {@code equals}</em> if this sorted map is to correctly implement the
{@code Map} interface.  (See {@code Comparable} or {@code Comparator} for a
precise definition of <em>consistent with equals</em>.)  This is so because
the {@code Map} interface is defined in terms of the {@code equals}
operation, but a sorted map performs all key comparisons using its {@code
compareTo} (or {@code compare}) method, so two keys that are deemed equal by
this method are, from the standpoint of the sorted map, equal.  The behavior
of a sorted map <em>is</em> well-defined even if its ordering is
inconsistent with {@code equals}; it just fails to obey the general contract
of the {@code Map} interface.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a map concurrently, and at least one of the
threads modifies the map structurally, it <em>must</em> be synchronized
externally.  (A structural modification is any operation that adds or
deletes one or more mappings; merely changing the value associated
with an existing key is not a structural modification.)  This is
typically accomplished by synchronizing on some object that naturally
encapsulates the map.
If no such object exists, the map should be \"wrapped\" using the
{@link Collections#synchronizedSortedMap Collections.synchronizedSortedMap}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the map: <pre>
  SortedMap m = Collections.synchronizedSortedMap(new TreeMap(...));</pre>

<p>The iterators returned by the {@code iterator} method of the collections
returned by all of this class's \"collection view methods\" are
<em>fail-fast</em>: if the map is structurally modified at any time after
the iterator is created, in any way except through the iterator's own
{@code remove} method, the iterator will throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:   <em>the fail-fast behavior of iterators
should be used only to detect bugs.</em>

<p>All {@code Map.Entry} pairs returned by methods in this class
and its views represent snapshots of mappings at the time they were
produced. They do <strong>not</strong> support the {@code Entry.setValue}
method. (Note however that it is possible to change mappings in the
associated map using {@code put}.)

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values

@author  Josh Bloch and Doug Lea
@see Map
@see HashMap
@see Hashtable
@see Comparable
@see Comparator
@see Collection
@since 1.2
"
      classrelation 3552258 // <realization>
	relation 3552258 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3552258 // <realization>
	  b parent class_ref 192130 // AbstractMap
      end

      classrelation 3552386 // <realization>
	relation 3552386 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3552386 // <realization>
	  b parent class_ref 1063426 // NavigableMap
      end

      classrelation 3552514 // <realization>
	relation 3552514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3552514 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3552642 // <realization>
	relation 3552642 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3552642 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3552770 // comparator (<unidirectional association>)
	relation 3552770 --->
	  a role_name "comparator" const_relation private
	    comment "
The comparator used to maintain order in this tree map, or
null if it uses the natural ordering of its keys.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super K> ${name}${value};
"
	    classrelation_ref 3552770 // comparator (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      classrelation 3552898 // root (<unidirectional association>)
	relation 3552898 --->
	  a role_name "root" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	    classrelation_ref 3552898 // root (<unidirectional association>)
	  b parent class_ref 192386 // Entry
      end

      attribute 2088706 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of entries in the tree

"
      end

      attribute 2088834 "modCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of structural modifications to the tree.

"
      end

      operation 8938370 "TreeMap"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty tree map, using the natural ordering of its
keys.  All keys inserted into the map must implement the {@link
Comparable} interface.  Furthermore, all such keys must be
<em>mutually comparable</em>: {@code k1.compareTo(k2)} must not throw
a {@code ClassCastException} for any keys {@code k1} and
{@code k2} in the map.  If the user attempts to put a key into the
map that violates this constraint (for example, the user attempts to
put a string key into a map whose keys are integers), the
{@code put(Object key, Object value)} call will throw a
{@code ClassCastException}.
"
      end

      operation 8938498 "TreeMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty tree map, ordered according to the given
comparator.  All keys inserted into the map must be <em>mutually
comparable</em> by the given comparator: {@code comparator.compare(k1,
k2)} must not throw a {@code ClassCastException} for any keys
{@code k1} and {@code k2} in the map.  If the user attempts to put
a key into the map that violates this constraint, the {@code put(Object
key, Object value)} call will throw a
{@code ClassCastException}.

@param comparator the comparator that will be used to order this map.
       If {@code null}, the {@linkplain Comparable natural
       ordering} of the keys will be used.
"
      end

      operation 8938626 "TreeMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new tree map containing the same mappings as the given
map, ordered according to the <em>natural ordering</em> of its keys.
All keys inserted into the new map must implement the {@link
Comparable} interface.  Furthermore, all such keys must be
<em>mutually comparable</em>: {@code k1.compareTo(k2)} must not throw
a {@code ClassCastException} for any keys {@code k1} and
{@code k2} in the map.  This method runs in n*log(n) time.

@param  m the map whose mappings are to be placed in this map
@throws ClassCastException if the keys in m are not {@link Comparable},
        or are not mutually comparable
@throws NullPointerException if the specified map is null
"
      end

      operation 8938754 "TreeMap"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 500354 // SortedMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new tree map containing the same mappings and
using the same ordering as the specified sorted map.  This
method runs in linear time.

@param  m the sorted map whose mappings are to be placed in this map,
        and whose comparator is to be used to sort this map
@throws NullPointerException if the specified map is null
"
      end

      operation 8938882 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Query Operations

Returns the number of key-value mappings in this map.

@return the number of key-value mappings in this map
"
      end

      operation 8939010 "containsKey"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this map contains a mapping for the specified
key.

@param key key whose presence in this map is to be tested
@return {@code true} if this map contains a mapping for the
        specified key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
"
      end

      operation 8939138 "containsValue"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this map maps one or more keys to the
specified value.  More formally, returns {@code true} if and only if
this map contains at least one mapping to a value {@code v} such
that {@code (value==null ? v==null : value.equals(v))}.  This
operation will probably require time linear in the map size for
most implementations.

@param value value whose presence in this map is to be tested
@return {@code true} if a mapping to {@code value} exists;
        {@code false} otherwise
@since 1.2
"
      end

      operation 8939266 "get"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the specified key is mapped,
or {@code null} if this map contains no mapping for the key.

<p>More formally, if this map contains a mapping from a key
{@code k} to a value {@code v} such that {@code key} compares
equal to {@code k} according to the map's ordering, then this
method returns {@code v}; otherwise it returns {@code null}.
(There can be at most one such mapping.)

<p>A return value of {@code null} does not <em>necessarily</em>
indicate that the map contains no mapping for the key; it's also
possible that the map explicitly maps the key to {@code null}.
The {@link #containsKey containsKey} operation may be used to
distinguish these two cases.

@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
"
      end

      operation 8939394 "comparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8939522 "firstKey"
	cpp_inline public explicit_return_type "K"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8939650 "lastKey"
	cpp_inline public explicit_return_type "K"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8939778 "putAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified map to this map.
These mappings replace any mappings that this map had for any
of the keys currently in the specified map.

@param  map mappings to be stored in this map
@throws ClassCastException if the class of a key or value in
        the specified map prevents it from being stored in this map
@throws NullPointerException if the specified map is null or
        the specified map contains a null key and this map does not
        permit null keys
"
      end

      operation 8939906 "getEntry"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this map's entry for the given key, or {@code null} if the map
does not contain an entry for the key.

@return this map's entry for the given key, or {@code null} if the map
        does not contain an entry for the key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
"
      end

      operation 8940034 "getEntryUsingComparator"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of getEntry using comparator. Split off from getEntry
for performance. (This is not worth doing for most methods,
that are less dependent on comparator performance, but is
worthwhile here.)
"
      end

      operation 8940162 "getCeilingEntry"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the entry corresponding to the specified key; if no such entry
exists, returns the entry for the least key greater than the specified
key; if no such entry exists (i.e., the greatest key in the Tree is less
than the specified key), returns {@code null}.
"
      end

      operation 8940290 "getFloorEntry"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the entry corresponding to the specified key; if no such entry
exists, returns the entry for the greatest key less than the specified
key; if no such entry exists, returns {@code null}.
"
      end

      operation 8940418 "getHigherEntry"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the entry for the least key greater than the specified
key; if no such entry exists, returns the entry for the least
key greater than the specified key; if no such entry exists
returns {@code null}.
"
      end

      operation 8940546 "getLowerEntry"
	cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the entry for the greatest key less than the specified key; if
no such entry exists (i.e., the least key in the Tree is greater than
the specified key), returns {@code null}.
"
      end

      operation 8940674 "put"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified key in this map.
If the map previously contained a mapping for the key, the old
value is replaced.

@param key key with which the specified value is to be associated
@param value value to be associated with the specified key

@return the previous value associated with {@code key}, or
        {@code null} if there was no mapping for {@code key}.
        (A {@code null} return can also indicate that the map
        previously associated {@code null} with {@code key}.)
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
"
      end

      operation 8940802 "remove"
	cpp_inline public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping for this key from this TreeMap if present.

@param  key key for which mapping should be removed
@return the previous value associated with {@code key}, or
        {@code null} if there was no mapping for {@code key}.
        (A {@code null} return can also indicate that the map
        previously associated {@code null} with {@code key}.)
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
"
      end

      operation 8940930 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the mappings from this map.
The map will be empty after this call returns.
"
      end

      operation 8941058 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shallow copy of this {@code TreeMap} instance. (The keys and
values themselves are not cloned.)

@return a shallow copy of this map
"
      end

      operation 8941186 "firstEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NavigableMap API methods

@since 1.6
"
      end

      operation 8941314 "lastEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8941442 "pollFirstEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8941570 "pollLastEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8941698 "lowerEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8941826 "lowerKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8941954 "floorEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8942082 "floorKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8942210 "ceilingEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8942338 "ceilingKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8942466 "higherEntry"
	cpp_inline public return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      operation 8942594 "higherKey"
	cpp_inline public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified key is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@since 1.6
"
      end

      class 1095938 "EntrySet"
	visibility package 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3553538 // <realization>
	  relation 3553538 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3553538 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	operation 8945538 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945666 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945794 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945922 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8946050 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8946178 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3553026 // entrySet (<unidirectional association>)
	relation 3553026 --->
	  a role_name "entrySet" private
	    comment " Views

Fields initialized to contain an instance of the entry set view
the first time this view is requested.  Views are stateless, so
there's no reason to create more than one.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3553026 // entrySet (<unidirectional association>)
	  b parent class_ref 1095938 // EntrySet
      end

      class 1096066 "KeySet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	actual class class_ref 1073538 // NavigableSet
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3553666 // <realization>
	  relation 3553666 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3553666 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 3553794 // <realization>
	  relation 3553794 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3553794 // <realization>
	    b parent class_ref 1073538 // NavigableSet
	end

	classrelation 3553922 // m (<unidirectional association>)
	  relation 3553922 --->
	    a role_name "m" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E, ?> ${name}${value};
"
	      classrelation_ref 3553922 // m (<unidirectional association>)
	    b parent class_ref 1063426 // NavigableMap
	end

	operation 8946562 "KeySet"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 1063426 // NavigableMap
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8946690 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8946818 "descendingIterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8946946 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947074 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947202 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947330 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947458 "lower"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947586 "floor"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947714 "ceiling"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947842 "higher"
	  cpp_inline public explicit_return_type "E"
	  nparams 1
	    param inout name "e" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8947970 "first"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948098 "last"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948226 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948354 "pollFirst"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948482 "pollLast"
	  cpp_inline public explicit_return_type "E"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948610 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948738 "subSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 4
	    param inout name "fromElement" explicit_type "E"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toElement" explicit_type "E"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948866 "headSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "toElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8948994 "tailSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8949122 "subSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8949250 "headSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8949378 "tailSet"
	  cpp_inline public return_type class_ref 511874 // SortedSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8949506 "descendingSet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8949634 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3553154 // navigableKeySet (<unidirectional association>)
	relation 3553154 --->
	  a role_name "navigableKeySet" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 3553154 // navigableKeySet (<unidirectional association>)
	  b parent class_ref 1096066 // KeySet
      end

      classrelation 3553282 // descendingMap (<unidirectional association>)
	relation 3553282 --->
	  a role_name "descendingMap" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	    classrelation_ref 3553282 // descendingMap (<unidirectional association>)
	  b parent class_ref 1063426 // NavigableMap
      end

      operation 8942722 "keySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the keys contained in this map.

<p>The set's iterator returns the keys in ascending order.
The set's spliterator is
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>,
<em>fail-fast</em>, and additionally reports {@link Spliterator#SORTED}
and {@link Spliterator#ORDERED} with an encounter order that is ascending
key order.  The spliterator's comparator (see
{@link java.util.Spliterator#getComparator()}) is {@code null} if
the tree map's comparator (see {@link #comparator()}) is {@code null}.
Otherwise, the spliterator's comparator is the same as or imposes the
same total ordering as the tree map's comparator.

<p>The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own {@code remove} operation), the results of
the iteration are undefined.  The set supports element removal,
which removes the corresponding mapping from the map, via the
{@code Iterator.remove}, {@code Set.remove},
{@code removeAll}, {@code retainAll}, and {@code clear}
operations.  It does not support the {@code add} or {@code addAll}
operations.
"
      end

      operation 8942850 "navigableKeySet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8942978 "descendingKeySet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8943106 "values"
	cpp_inline public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Collection} view of the values contained in this map.

<p>The collection's iterator returns the values in ascending order
of the corresponding keys. The collection's spliterator is
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>,
<em>fail-fast</em>, and additionally reports {@link Spliterator#ORDERED}
with an encounter order that is ascending order of the corresponding
keys.

<p>The collection is backed by the map, so changes to the map are
reflected in the collection, and vice-versa.  If the map is
modified while an iteration over the collection is in progress
(except through the iterator's own {@code remove} operation),
the results of the iteration are undefined.  The collection
supports element removal, which removes the corresponding
mapping from the map, via the {@code Iterator.remove},
{@code Collection.remove}, {@code removeAll},
{@code retainAll} and {@code clear} operations.  It does not
support the {@code add} or {@code addAll} operations.
"
      end

      operation 8943234 "entrySet"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Set} view of the mappings contained in this map.

<p>The set's iterator returns the entries in ascending key order. The
sets's spliterator is
<em><a href=\"Spliterator.html#binding\">late-binding</a></em>,
<em>fail-fast</em>, and additionally reports {@link Spliterator#SORTED} and
{@link Spliterator#ORDERED} with an encounter order that is ascending key
order.

<p>The set is backed by the map, so changes to the map are
reflected in the set, and vice-versa.  If the map is modified
while an iteration over the set is in progress (except through
the iterator's own {@code remove} operation, or through the
{@code setValue} operation on a map entry returned by the
iterator) the results of the iteration are undefined.  The set
supports element removal, which removes the corresponding
mapping from the map, via the {@code Iterator.remove},
{@code Set.remove}, {@code removeAll}, {@code retainAll} and
{@code clear} operations.  It does not support the
{@code add} or {@code addAll} operations.
"
      end

      operation 8943362 "descendingMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8943490 "subMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 4
	  param inout name "fromKey" explicit_type "K"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "toKey" explicit_type "K"
	  param inout name "toInclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException       {@inheritDoc}
@throws NullPointerException if {@code fromKey} or {@code toKey} is
        null and this map uses natural ordering, or its comparator
        does not permit null keys
@throws IllegalArgumentException {@inheritDoc}
@since 1.6
"
      end

      operation 8943618 "headMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 2
	  param inout name "toKey" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException       {@inheritDoc}
@throws NullPointerException if {@code toKey} is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@throws IllegalArgumentException {@inheritDoc}
@since 1.6
"
      end

      operation 8943746 "tailMap"
	cpp_inline public return_type class_ref 1063426 // NavigableMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException       {@inheritDoc}
@throws NullPointerException if {@code fromKey} is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@throws IllegalArgumentException {@inheritDoc}
@since 1.6
"
      end

      operation 8943874 "subMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "toKey" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException       {@inheritDoc}
@throws NullPointerException if {@code fromKey} or {@code toKey} is
        null and this map uses natural ordering, or its comparator
        does not permit null keys
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8944002 "headMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "toKey" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException       {@inheritDoc}
@throws NullPointerException if {@code toKey} is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8944130 "tailMap"
	cpp_inline public return_type class_ref 500354 // SortedMap
	nparams 1
	  param inout name "fromKey" explicit_type "K"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException       {@inheritDoc}
@throws NullPointerException if {@code fromKey} is null
        and this map uses natural ordering, or its comparator
        does not permit null keys
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8944258 "replace"
	cpp_inline public explicit_return_type "boolean"
	nparams 3
	  param inout name "key" explicit_type "K"
	  param inout name "oldValue" explicit_type "V"
	  param inout name "newValue" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8944386 "replace"
	cpp_inline public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8944514 "forEach"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 192514 // BiConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8944642 "replaceAll"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "function" type class_ref 192642 // BiFunction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K, ? super V, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1096194 "Values"
	visibility package 
	nactuals 1
	actual class class_ref 184066 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3553410 // <realization>
	  relation 3553410 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3553410 // <realization>
	    b parent class_ref 184066 // AbstractCollection
	end

	operation 8944770 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8944898 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945026 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945154 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945282 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8945410 "spliterator"
	  cpp_inline public return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8946306 "keyIterator"
	cpp_inline package return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unlike Values and EntrySet, the KeySet class is static,
delegating to a NavigableMap to allow use by SubMaps, which
outweighs the ugliness of needing type-tests for the following
Iterator methods that are defined appropriately in main versus
submap classes.
"
      end

      operation 8946434 "descendingKeyIterator"
	cpp_inline package return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1096322 "PrivateEntryIterator"
	abstract visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 132994 // Iterator
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3554050 // <realization>
	  relation 3554050 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3554050 // <realization>
	    b parent class_ref 132994 // Iterator
	end

	classrelation 3554178 // next (<unidirectional association>)
	  relation 3554178 --->
	    a role_name "next" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3554178 // next (<unidirectional association>)
	    b parent class_ref 192386 // Entry
	end

	classrelation 3554306 // lastReturned (<unidirectional association>)
	  relation 3554306 --->
	    a role_name "lastReturned" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3554306 // lastReturned (<unidirectional association>)
	    b parent class_ref 192386 // Entry
	end

	attribute 2088962 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8949762 "PrivateEntryIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "first" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8949890 "hasNext"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8950018 "nextEntry"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8950146 "prevEntry"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8950274 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1096450 "EntryIterator"
	visibility package 
	nactuals 3
	actual class class_ref 1095810 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 1095810 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 1096322 // PrivateEntryIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3554434 // <realization>
	  relation 3554434 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3554434 // <realization>
	    b parent class_ref 1096322 // PrivateEntryIterator
	end

	operation 8950402 "EntryIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "first" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8950530 "next"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1096578 "ValueIterator"
	visibility package 
	nactuals 3
	actual class class_ref 1095810 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 1095810 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 1096322 // PrivateEntryIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3554562 // <realization>
	  relation 3554562 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3554562 // <realization>
	    b parent class_ref 1096322 // PrivateEntryIterator
	end

	operation 8950658 "ValueIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "first" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8950786 "next"
	  cpp_inline public explicit_return_type "V"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1096706 "KeyIterator"
	visibility package 
	nactuals 3
	actual class class_ref 1095810 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 1095810 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 1096322 // PrivateEntryIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3554690 // <realization>
	  relation 3554690 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3554690 // <realization>
	    b parent class_ref 1096322 // PrivateEntryIterator
	end

	operation 8950914 "KeyIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "first" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8951042 "next"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1096834 "DescendingKeyIterator"
	visibility package 
	nactuals 3
	actual class class_ref 1095810 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 1095810 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 1096322 // PrivateEntryIterator
	  rank 0 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3554818 // <realization>
	  relation 3554818 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3554818 // <realization>
	    b parent class_ref 1096322 // PrivateEntryIterator
	end

	operation 8951170 "DescendingKeyIterator"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "first" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8951298 "next"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8951426 "remove"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8951554 "compare"
	cpp_inline package explicit_return_type "int"
	nparams 2
	  param inout name "k1" type class_ref 129538 // Object
	  param inout name "k2" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Little utilities

Compares two keys using the correct comparison method for this TreeMap.
"
      end

      operation 8951682 "valEquals"
	class_operation cpp_inline package explicit_return_type "boolean"
	nparams 2
	  param inout name "o1" type class_ref 129538 // Object
	  param inout name "o2" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test two values for equality.  Differs from o1.equals(o2) only in
that it copes with {@code null} o1 properly.
"
      end

      operation 8951810 "exportEntry"
	class_operation cpp_inline package return_type class_ref 192386 // Entry
	nparams 1
	  param inout name "e" type class_ref 192386 // Entry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type}<K,V> ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return SimpleImmutableEntry for entry, or null if null
"
      end

      operation 8951938 "keyOrNull"
	class_operation cpp_inline package explicit_return_type "K"
	nparams 1
	  param inout name "e" type class_ref 192386 // Entry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K,V> ${type} ${name}${(}${t0}<K,V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return key for entry, or null if null
"
      end

      operation 8952066 "key"
	class_operation cpp_inline package explicit_return_type "K"
	nparams 1
	  param inout name "e" type class_ref 192386 // Entry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K> ${type} ${name}${(}${t0}<K,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key corresponding to the specified Entry.
@throws NoSuchElementException if the Entry is null
"
      end

      classrelation 3554946 // UNBOUNDED (<unidirectional association>)
	relation 3554946 --->
	  a role_name "UNBOUNDED" init_value " new Object()" class_relation const_relation private
	    comment " SubMaps

Dummy value serving as unmatchable fence key for unbounded
SubMapIterators

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3554946 // UNBOUNDED (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      class 1096962 "NavigableSubMap"
	abstract visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 192130 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 192130 // AbstractMap
	  rank 1 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 0 explicit_value ""
	actual class class_ref 1063426 // NavigableMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3555074 // <realization>
	  relation 3555074 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3555074 // <realization>
	    b parent class_ref 192130 // AbstractMap
	end

	classrelation 3555202 // <realization>
	  relation 3555202 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3555202 // <realization>
	    b parent class_ref 1063426 // NavigableMap
	end

	classrelation 3555330 // <realization>
	  relation 3555330 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3555330 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2089090 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2102997345730753016L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3555458 // m (<unidirectional association>)
	  relation 3555458 --->
	    a role_name "m" const_relation package
	      comment "
The backing map.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3555458 // m (<unidirectional association>)
	    b parent class_ref 1095810 // TreeMap
	end

	attribute 2089218 "lo"
	  const_attribute package explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Endpoints are represented as triples (fromStart, lo,
loInclusive) and (toEnd, hi, hiInclusive). If fromStart is
true, then the low (absolute) bound is the start of the
backing map, and the other values are ignored. Otherwise,
if loInclusive is true, lo is the inclusive bound, else lo
is the exclusive bound. Similarly for the upper bound.

"
	end

	attribute 2089346 "hi"
	  const_attribute package explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Endpoints are represented as triples (fromStart, lo,
loInclusive) and (toEnd, hi, hiInclusive). If fromStart is
true, then the low (absolute) bound is the start of the
backing map, and the other values are ignored. Otherwise,
if loInclusive is true, lo is the inclusive bound, else lo
is the exclusive bound. Similarly for the upper bound.

"
	end

	attribute 2089474 "fromStart"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2089602 "toEnd"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2089730 "loInclusive"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2089858 "hiInclusive"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8952194 "NavigableSubMap"
	  cpp_inline package explicit_return_type ""
	  nparams 7
	    param inout name "m" type class_ref 1095810 // TreeMap
	    param inout name "fromStart" explicit_type "boolean"
	    param inout name "lo" explicit_type "K"
	    param inout name "loInclusive" explicit_type "boolean"
	    param inout name "toEnd" explicit_type "boolean"
	    param inout name "hi" explicit_type "K"
	    param inout name "hiInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8952322 "tooLow"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " internal utilities"
	end

	operation 8952450 "tooHigh"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8952578 "inRange"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8952706 "inClosedRange"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8952834 "inRange"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8952962 "absLowest"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Absolute versions of relation operations.
Subclasses map to these using like-named \"sub\"
versions that invert senses for descending maps
"
	end

	operation 8953090 "absHighest"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8953218 "absCeiling"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8953346 "absHigher"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8953474 "absFloor"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8953602 "absLower"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8953730 "absHighFence"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the absolute high fence for ascending traversal "
	end

	operation 8953858 "absLowFence"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Return the absolute low fence for descending traversal  "
	end

	operation 8953986 "subLowest"
	  abstract cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Abstract methods defined in ascending vs descending classes
 These relay to the appropriate absolute versions"
	end

	operation 8954114 "subHighest"
	  abstract cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8954242 "subCeiling"
	  abstract cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8954370 "subHigher"
	  abstract cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8954498 "subFloor"
	  abstract cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8954626 "subLower"
	  abstract cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8954754 "keyIterator"
	  abstract cpp_inline package return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns ascending iterator from the perspective of this submap "
	end

	operation 8954882 "keySpliterator"
	  abstract cpp_inline package return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8955010 "descendingKeyIterator"
	  abstract cpp_inline package return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns descending iterator from the perspective of this submap "
	end

	operation 8955138 "isEmpty"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " public methods"
	end

	operation 8955266 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8955394 "containsKey"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8955522 "put"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8955650 "get"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8955778 "remove"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8955906 "ceilingEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956034 "ceilingKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956162 "higherEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956290 "higherKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956418 "floorEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956546 "floorKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956674 "lowerEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956802 "lowerKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8956930 "firstKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957058 "lastKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957186 "firstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957314 "lastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957442 "pollFirstEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957570 "pollLastEntry"
	  cpp_inline public return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3555586 // descendingMapView (<unidirectional association>)
	  relation 3555586 --->
	    a role_name "descendingMapView" package
	      comment " Views
"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 3555586 // descendingMapView (<unidirectional association>)
	    b parent class_ref 1063426 // NavigableMap
	end

	class 1097090 "EntrySetView"
	  abstract visibility package 
	  nactuals 1
	  actual class class_ref 255618 // AbstractSet
	    rank 0 explicit_value ""
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3555970 // <realization>
	    relation 3555970 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3555970 // <realization>
	      b parent class_ref 255618 // AbstractSet
	  end

	  attribute 2089986 "size"
	    private explicit_type "int"
	    init_value " -1"
	    cpp_decl ""
	    transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2090114 "sizeModCount"
	    private explicit_type "int"
	    cpp_decl ""
	    transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8958466 "size"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8958594 "isEmpty"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8958722 "contains"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8958850 "remove"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 3555714 // entrySetView (<unidirectional association>)
	  relation 3555714 --->
	    a role_name "entrySetView" package
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3555714 // entrySetView (<unidirectional association>)
	    b parent class_ref 1097090 // EntrySetView
	end

	classrelation 3555842 // navigableKeySetView (<unidirectional association>)
	  relation 3555842 --->
	    a role_name "navigableKeySetView" package
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 3555842 // navigableKeySetView (<unidirectional association>)
	    b parent class_ref 1096066 // KeySet
	end

	operation 8957698 "navigableKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957826 "keySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8957954 "descendingKeySet"
	  cpp_inline public return_type class_ref 1073538 // NavigableSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8958082 "subMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8958210 "headMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8958338 "tailMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1097218 "SubMapIterator"
	  abstract visibility package 
	  nformals 1
	  formal name "T" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 132994 // Iterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3556098 // <realization>
	    relation 3556098 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3556098 // <realization>
	      b parent class_ref 132994 // Iterator
	  end

	  classrelation 3556226 // lastReturned (<unidirectional association>)
	    relation 3556226 --->
	      a role_name "lastReturned" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
		classrelation_ref 3556226 // lastReturned (<unidirectional association>)
	      b parent class_ref 192386 // Entry
	  end

	  classrelation 3556354 // next (<unidirectional association>)
	    relation 3556354 --->
	      a role_name "next" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
		classrelation_ref 3556354 // next (<unidirectional association>)
	      b parent class_ref 192386 // Entry
	  end

	  classrelation 3556482 // fenceKey (<unidirectional association>)
	    relation 3556482 --->
	      a role_name "fenceKey" const_relation package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 3556482 // fenceKey (<unidirectional association>)
	      b parent class_ref 129538 // Object
	  end

	  attribute 2090242 "expectedModCount"
	    package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 8958978 "SubMapIterator"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "first" type class_ref 192386 // Entry
	      param inout name "fence" type class_ref 192386 // Entry
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8959106 "hasNext"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8959234 "nextEntry"
	    cpp_inline package return_type class_ref 192386 // Entry
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8959362 "prevEntry"
	    cpp_inline package return_type class_ref 192386 // Entry
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8959490 "removeAscending"
	    cpp_inline package explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8959618 "removeDescending"
	    cpp_inline package explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1097346 "SubMapEntryIterator"
	  visibility package 
	  nactuals 5
	  actual class class_ref 1095810 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 1095810 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 0 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 1 explicit_value ""
	  actual class class_ref 1097218 // SubMapIterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3556610 // <realization>
	    relation 3556610 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3556610 // <realization>
	      b parent class_ref 1097218 // SubMapIterator
	  end

	  operation 8959746 "SubMapEntryIterator"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "first" type class_ref 192386 // Entry
	      param inout name "fence" type class_ref 192386 // Entry
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8959874 "next"
	    cpp_inline public return_type class_ref 192386 // Entry
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8960002 "remove"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1097474 "DescendingSubMapEntryIterator"
	  visibility package 
	  nactuals 5
	  actual class class_ref 1095810 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 1095810 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 0 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 1 explicit_value ""
	  actual class class_ref 1097218 // SubMapIterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3556738 // <realization>
	    relation 3556738 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3556738 // <realization>
	      b parent class_ref 1097218 // SubMapIterator
	  end

	  operation 8960130 "DescendingSubMapEntryIterator"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "last" type class_ref 192386 // Entry
	      param inout name "fence" type class_ref 192386 // Entry
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8960258 "next"
	    cpp_inline public return_type class_ref 192386 // Entry
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8960386 "remove"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1097602 "SubMapKeyIterator"
	  visibility package 
	  nactuals 6
	  actual class class_ref 1095810 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 1095810 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 0 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 1 explicit_value ""
	  actual class class_ref 1097218 // SubMapIterator
	    rank 0 explicit_value ""
	  actual class class_ref 184450 // Spliterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3556866 // <realization>
	    relation 3556866 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3556866 // <realization>
	      b parent class_ref 1097218 // SubMapIterator
	  end

	  classrelation 3556994 // <realization>
	    relation 3556994 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3556994 // <realization>
	      b parent class_ref 184450 // Spliterator
	  end

	  operation 8960514 "SubMapKeyIterator"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "first" type class_ref 192386 // Entry
	      param inout name "fence" type class_ref 192386 // Entry
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8960642 "next"
	    cpp_inline public explicit_return_type "K"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8960770 "remove"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8960898 "trySplit"
	    cpp_inline public return_type class_ref 184450 // Spliterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961026 "forEachRemaining"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "action" type class_ref 163458 // Consumer
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961154 "tryAdvance"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "action" type class_ref 163458 // Consumer
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961282 "estimateSize"
	    cpp_inline public explicit_return_type "long"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961410 "characteristics"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961538 "getComparator"
	    cpp_inline public return_type class_ref 184962 // Comparator
	    nparams 0
	    
	    preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 1097730 "DescendingSubMapKeyIterator"
	  visibility package 
	  nactuals 6
	  actual class class_ref 1095810 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 1095810 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 0 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 1 explicit_value ""
	  actual class class_ref 1097218 // SubMapIterator
	    rank 0 explicit_value ""
	  actual class class_ref 184450 // Spliterator
	    rank 0 explicit_value ""
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3557122 // <realization>
	    relation 3557122 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3557122 // <realization>
	      b parent class_ref 1097218 // SubMapIterator
	  end

	  classrelation 3557250 // <realization>
	    relation 3557250 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3557250 // <realization>
	      b parent class_ref 184450 // Spliterator
	  end

	  operation 8961666 "DescendingSubMapKeyIterator"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "last" type class_ref 192386 // Entry
	      param inout name "fence" type class_ref 192386 // Entry
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1}<K,V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961794 "next"
	    cpp_inline public explicit_return_type "K"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8961922 "remove"
	    cpp_inline public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8962050 "trySplit"
	    cpp_inline public return_type class_ref 184450 // Spliterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8962178 "forEachRemaining"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "action" type class_ref 163458 // Consumer
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8962306 "tryAdvance"
	    cpp_inline public explicit_return_type "boolean"
	    nparams 1
	      param inout name "action" type class_ref 163458 // Consumer
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8962434 "estimateSize"
	    cpp_inline public explicit_return_type "long"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 8962562 "characteristics"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 1097858 "AscendingSubMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1095810 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 1095810 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 1096962 // NavigableSubMap
	  rank 0 explicit_value ""
	actual class class_ref 1096962 // NavigableSubMap
	  rank 1 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3557378 // <realization>
	  relation 3557378 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3557378 // <realization>
	    b parent class_ref 1096962 // NavigableSubMap
	end

	attribute 2090370 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 912986545866124060L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8962690 "AscendingSubMap"
	  cpp_inline package explicit_return_type ""
	  nparams 7
	    param inout name "m" type class_ref 1095810 // TreeMap
	    param inout name "fromStart" explicit_type "boolean"
	    param inout name "lo" explicit_type "K"
	    param inout name "loInclusive" explicit_type "boolean"
	    param inout name "toEnd" explicit_type "boolean"
	    param inout name "hi" explicit_type "K"
	    param inout name "hiInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8962818 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8962946 "subMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 4
	    param inout name "fromKey" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toKey" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8963074 "headMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "toKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8963202 "tailMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8963330 "descendingMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8963458 "keyIterator"
	  cpp_inline package return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8963586 "keySpliterator"
	  cpp_inline package return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8963714 "descendingKeyIterator"
	  cpp_inline package return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1097986 "AscendingEntrySetView"
	  visibility package 
	  nactuals 4
	  actual class class_ref 1095810 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 1095810 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 0 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 1 explicit_value ""
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3557506 // <generalisation>
	    relation 3557506 ---|>
	      a public
		java "${type}"
		classrelation_ref 3557506 // <generalisation>
	      b parent class_ref 1097090 // EntrySetView
	  end

	  operation 8963842 "iterator"
	    cpp_inline public return_type class_ref 132994 // Iterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 8963970 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8964098 "subLowest"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8964226 "subHighest"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8964354 "subCeiling"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8964482 "subHigher"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8964610 "subFloor"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8964738 "subLower"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1098114 "DescendingSubMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1095810 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 1095810 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 1096962 // NavigableSubMap
	  rank 0 explicit_value ""
	actual class class_ref 1096962 // NavigableSubMap
	  rank 1 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3557634 // <realization>
	  relation 3557634 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3557634 // <realization>
	    b parent class_ref 1096962 // NavigableSubMap
	end

	attribute 2090498 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 912986545866120460L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8964866 "DescendingSubMap"
	  cpp_inline package explicit_return_type ""
	  nparams 7
	    param inout name "m" type class_ref 1095810 // TreeMap
	    param inout name "fromStart" explicit_type "boolean"
	    param inout name "lo" explicit_type "K"
	    param inout name "loInclusive" explicit_type "boolean"
	    param inout name "toEnd" explicit_type "boolean"
	    param inout name "hi" explicit_type "K"
	    param inout name "hiInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3557762 // reverseComparator (<unidirectional association>)
	  relation 3557762 --->
	    a role_name "reverseComparator" init_value "
            Collections.reverseOrder(m.comparator)" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super K> ${name}${value};
"
	      classrelation_ref 3557762 // reverseComparator (<unidirectional association>)
	    b parent class_ref 184962 // Comparator
	end

	operation 8964994 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965122 "subMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 4
	    param inout name "fromKey" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "toKey" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965250 "headMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "toKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965378 "tailMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965506 "descendingMap"
	  cpp_inline public return_type class_ref 1063426 // NavigableMap
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965634 "keyIterator"
	  cpp_inline package return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965762 "keySpliterator"
	  cpp_inline package return_type class_ref 184450 // Spliterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8965890 "descendingKeyIterator"
	  cpp_inline package return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1098242 "DescendingEntrySetView"
	  visibility package 
	  nactuals 4
	  actual class class_ref 1095810 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 1095810 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 0 explicit_value ""
	  actual class class_ref 1096962 // NavigableSubMap
	    rank 1 explicit_value ""
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3557890 // <generalisation>
	    relation 3557890 ---|>
	      a public
		java "${type}"
		classrelation_ref 3557890 // <generalisation>
	      b parent class_ref 1097090 // EntrySetView
	  end

	  operation 8966018 "iterator"
	    cpp_inline public return_type class_ref 132994 // Iterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 8966146 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8966274 "subLowest"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8966402 "subHighest"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8966530 "subCeiling"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8966658 "subHigher"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8966786 "subFloor"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8966914 "subLower"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1098370 "SubMap"
	visibility private 
	nactuals 4
	actual class class_ref 192130 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 192130 // AbstractMap
	  rank 1 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 500354 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3558018 // <realization>
	  relation 3558018 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3558018 // <realization>
	    b parent class_ref 192130 // AbstractMap
	end

	classrelation 3558146 // <realization>
	  relation 3558146 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3558146 // <realization>
	    b parent class_ref 500354 // SortedMap
	end

	classrelation 3558274 // <realization>
	  relation 3558274 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3558274 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2090626 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6520786458950516097L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2090754 "fromStart"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2090882 "toEnd"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2091010 "fromKey"
	  private explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2091138 "toKey"
	  private explicit_type "K"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8967042 "readResolve"
	  cpp_inline private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967170 "entrySet"
	  cpp_inline public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967298 "lastKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967426 "firstKey"
	  cpp_inline public explicit_return_type "K"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967554 "subMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967682 "headMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967810 "tailMap"
	  cpp_inline public return_type class_ref 500354 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8967938 "comparator"
	  cpp_inline public return_type class_ref 184962 // Comparator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 2091266 "RED"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Red-black mechanics
"
      end

      attribute 2091394 "BLACK"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1098498 "TreeSet"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 255618 // AbstractSet
        rank 0 explicit_value ""
      actual class class_ref 1073538 // NavigableSet
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link NavigableSet} implementation based on a {@link TreeMap}.
The elements are ordered using their {@linkplain Comparable natural
ordering}, or by a {@link Comparator} provided at set creation
time, depending on which constructor is used.

<p>This implementation provides guaranteed log(n) time cost for the basic
operations ({@code add}, {@code remove} and {@code contains}).

<p>Note that the ordering maintained by a set (whether or not an explicit
comparator is provided) must be <i>consistent with equals</i> if it is to
correctly implement the {@code Set} interface.  (See {@code Comparable}
or {@code Comparator} for a precise definition of <i>consistent with
equals</i>.)  This is so because the {@code Set} interface is defined in
terms of the {@code equals} operation, but a {@code TreeSet} instance
performs all element comparisons using its {@code compareTo} (or
{@code compare}) method, so two elements that are deemed equal by this method
are, from the standpoint of the set, equal.  The behavior of a set
<i>is</i> well-defined even if its ordering is inconsistent with equals; it
just fails to obey the general contract of the {@code Set} interface.

<p><strong>Note that this implementation is not synchronized.</strong>
If multiple threads access a tree set concurrently, and at least one
of the threads modifies the set, it <i>must</i> be synchronized
externally.  This is typically accomplished by synchronizing on some
object that naturally encapsulates the set.
If no such object exists, the set should be \"wrapped\" using the
{@link Collections#synchronizedSortedSet Collections.synchronizedSortedSet}
method.  This is best done at creation time, to prevent accidental
unsynchronized access to the set: <pre>
  SortedSet s = Collections.synchronizedSortedSet(new TreeSet(...));</pre>

<p>The iterators returned by this class's {@code iterator} method are
<i>fail-fast</i>: if the set is modified at any time after the iterator is
created, in any way except through the iterator's own {@code remove}
method, the iterator will throw a {@link ConcurrentModificationException}.
Thus, in the face of concurrent modification, the iterator fails quickly
and cleanly, rather than risking arbitrary, non-deterministic behavior at
an undetermined time in the future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw {@code ConcurrentModificationException} on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness:   <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <E> the type of elements maintained by this set

@author  Josh Bloch
@see     Collection
@see     Set
@see     HashSet
@see     Comparable
@see     Comparator
@see     TreeMap
@since   1.2
"
      classrelation 3558402 // <realization>
	relation 3558402 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3558402 // <realization>
	  b parent class_ref 255618 // AbstractSet
      end

      classrelation 3558530 // <realization>
	relation 3558530 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3558530 // <realization>
	  b parent class_ref 1073538 // NavigableSet
      end

      classrelation 3558658 // <realization>
	relation 3558658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3558658 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 3558786 // <realization>
	relation 3558786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3558786 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3558914 // m (<unidirectional association>)
	relation 3558914 --->
	  a role_name "m" private
	    comment "
The backing map.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E,Object> ${name}${value};
"
	    classrelation_ref 3558914 // m (<unidirectional association>)
	  b parent class_ref 1063426 // NavigableMap
      end

      classrelation 3559042 // PRESENT (<unidirectional association>)
	relation 3559042 --->
	  a role_name "PRESENT" init_value " new Object()" class_relation const_relation private
	    comment " Dummy value to associate with an Object in the backing Map
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3559042 // PRESENT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 8968066 "TreeSet"
	cpp_inline package explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 1063426 // NavigableMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E,Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a set backed by the specified navigable map.
"
      end

      operation 8968194 "TreeSet"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty tree set, sorted according to the
natural ordering of its elements.  All elements inserted into
the set must implement the {@link Comparable} interface.
Furthermore, all such elements must be <i>mutually
comparable</i>: {@code e1.compareTo(e2)} must not throw a
{@code ClassCastException} for any elements {@code e1} and
{@code e2} in the set.  If the user attempts to add an element
to the set that violates this constraint (for example, the user
attempts to add a string element to a set whose elements are
integers), the {@code add} call will throw a
{@code ClassCastException}.
"
      end

      operation 8968322 "TreeSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty tree set, sorted according to the specified
comparator.  All elements inserted into the set must be <i>mutually
comparable</i> by the specified comparator: {@code comparator.compare(e1,
e2)} must not throw a {@code ClassCastException} for any elements
{@code e1} and {@code e2} in the set.  If the user attempts to add
an element to the set that violates this constraint, the
{@code add} call will throw a {@code ClassCastException}.

@param comparator the comparator that will be used to order this set.
       If {@code null}, the {@linkplain Comparable natural
       ordering} of the elements will be used.
"
      end

      operation 8968450 "TreeSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new tree set containing the elements in the specified
collection, sorted according to the <i>natural ordering</i> of its
elements.  All elements inserted into the set must implement the
{@link Comparable} interface.  Furthermore, all such elements must be
<i>mutually comparable</i>: {@code e1.compareTo(e2)} must not throw a
{@code ClassCastException} for any elements {@code e1} and
{@code e2} in the set.

@param c collection whose elements will comprise the new set
@throws ClassCastException if the elements in {@code c} are
        not {@link Comparable}, or are not mutually comparable
@throws NullPointerException if the specified collection is null
"
      end

      operation 8968578 "TreeSet"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 511874 // SortedSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new tree set containing the same elements and
using the same ordering as the specified sorted set.

@param s sorted set whose elements will comprise the new set
@throws NullPointerException if the specified sorted set is null
"
      end

      operation 8968706 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set in ascending order.

@return an iterator over the elements in this set in ascending order
"
      end

      operation 8968834 "descendingIterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set in descending order.

@return an iterator over the elements in this set in descending order
@since 1.6
"
      end

      operation 8968962 "descendingSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8969090 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this set (its cardinality).

@return the number of elements in this set (its cardinality)
"
      end

      operation 8969218 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this set contains no elements.

@return {@code true} if this set contains no elements
"
      end

      operation 8969346 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this set contains the specified element.
More formally, returns {@code true} if and only if this set
contains an element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o object to be checked for containment in this set
@return {@code true} if this set contains the specified element
@throws ClassCastException if the specified object cannot be compared
        with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
"
      end

      operation 8969474 "add"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified element to this set if it is not already present.
More formally, adds the specified element {@code e} to this set if
the set contains no element {@code e2} such that
<tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>.
If this set already contains the element, the call leaves the set
unchanged and returns {@code false}.

@param e element to be added to this set
@return {@code true} if this set did not already contain the specified
        element
@throws ClassCastException if the specified object cannot be compared
        with the elements currently in this set
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
"
      end

      operation 8969602 "remove"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified element from this set if it is present.
More formally, removes an element {@code e} such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>,
if this set contains such an element.  Returns {@code true} if
this set contained the element (or equivalently, if this set
changed as a result of the call).  (This set will not contain the
element once the call returns.)

@param o object to be removed from this set, if present
@return {@code true} if this set contained the specified element
@throws ClassCastException if the specified object cannot be compared
        with the elements currently in this set
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
"
      end

      operation 8969730 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this set.
The set will be empty after this call returns.
"
      end

      operation 8969858 "addAll"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 184194 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this set.

@param c collection containing elements to be added to this set
@return {@code true} if this set changed as a result of the call
@throws ClassCastException if the elements provided cannot be compared
        with the elements currently in the set
@throws NullPointerException if the specified collection is null or
        if any element is null and this set uses natural ordering, or
        its comparator does not permit null elements
"
      end

      operation 8969986 "subSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 4
	  param inout name "fromElement" explicit_type "E"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "toElement" explicit_type "E"
	  param inout name "toInclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if {@code fromElement} or {@code toElement}
        is null and this set uses natural ordering, or its comparator
        does not permit null elements
@throws IllegalArgumentException {@inheritDoc}
@since 1.6
"
      end

      operation 8970114 "headSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 2
	  param inout name "toElement" explicit_type "E"
	  param inout name "inclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if {@code toElement} is null and
        this set uses natural ordering, or its comparator does
        not permit null elements
@throws IllegalArgumentException {@inheritDoc}
@since 1.6
"
      end

      operation 8970242 "tailSet"
	cpp_inline public return_type class_ref 1073538 // NavigableSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "inclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if {@code fromElement} is null and
        this set uses natural ordering, or its comparator does
        not permit null elements
@throws IllegalArgumentException {@inheritDoc}
@since 1.6
"
      end

      operation 8970370 "subSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "toElement" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if {@code fromElement} or
        {@code toElement} is null and this set uses natural ordering,
        or its comparator does not permit null elements
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8970498 "headSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "toElement" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if {@code toElement} is null
        and this set uses natural ordering, or its comparator does
        not permit null elements
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8970626 "tailSet"
	cpp_inline public return_type class_ref 511874 // SortedSet
	nparams 1
	  param inout name "fromElement" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if {@code fromElement} is null
        and this set uses natural ordering, or its comparator does
        not permit null elements
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 8970754 "comparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8970882 "first"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8971010 "last"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}
"
      end

      operation 8971138 "lower"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NavigableSet API methods

@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
@since 1.6
"
      end

      operation 8971266 "floor"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
@since 1.6
"
      end

      operation 8971394 "ceiling"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
@since 1.6
"
      end

      operation 8971522 "higher"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws ClassCastException {@inheritDoc}
@throws NullPointerException if the specified element is null
        and this set uses natural ordering, or its comparator
        does not permit null elements
@since 1.6
"
      end

      operation 8971650 "pollFirst"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8971778 "pollLast"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.6
"
      end

      operation 8971906 "clone"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a shallow copy of this {@code TreeSet} instance. (The elements
themselves are not cloned.)

@return a shallow copy of this set
"
      end

      operation 8972034 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the {@code TreeSet} instance to a stream (that is,
serialize it).

@serialData Emits the comparator used to order this set, or
            {@code null} if it obeys its elements' natural ordering
            (Object), followed by the size of the set (the number of
            elements it contains) (int), followed by all of its
            elements (each an Object) in order (as determined by the
            set's Comparator, or by the elements' natural ordering if
            the set has no Comparator).
"
      end

      operation 8972162 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitute the {@code TreeSet} instance from a stream (that is,
deserialize it).
"
      end

      operation 8972290 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <em><a href=\"Spliterator.html#binding\">late-binding</a></em>
and <em>fail-fast</em> {@link Spliterator} over the elements in this
set.

<p>The {@code Spliterator} reports {@link Spliterator#SIZED},
{@link Spliterator#DISTINCT}, {@link Spliterator#SORTED}, and
{@link Spliterator#ORDERED}.  Overriding implementations should document
the reporting of additional characteristic values.

<p>The spliterator's comparator (see
{@link java.util.Spliterator#getComparator()}) is {@code null} if
the tree set's comparator (see {@link #comparator()}) is {@code null}.
Otherwise, the spliterator's comparator is the same as or imposes the
same total ordering as the tree set's comparator.

@return a {@code Spliterator} over the elements in this set
@since 1.8
"
      end

      attribute 2091522 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2479143000061671589L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1098626 "Tripwire"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for detecting inadvertent uses of boxing in
{@code java.util} classes.  The detection is turned on or off based on
whether the system property {@code org.openjdk.java.util.stream.tripwire} is
considered {@code true} according to {@link Boolean#getBoolean(String)}.
This should normally be turned off for production use.

@apiNote
Typical usage would be for boxing code to do:
<pre>{@code
    if (Tripwire.ENABLED)
        Tripwire.trip(getClass(), \"{0} calling PrimitiveIterator.OfInt.nextInt()\");
}</pre>

@since 1.8
"
      classrelation 3559170 // TRIPWIRE_PROPERTY (<unidirectional association>)
	relation 3559170 --->
	  a role_name "TRIPWIRE_PROPERTY" init_value " \"org.openjdk.java.util.stream.tripwire\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3559170 // TRIPWIRE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2091650 "ENABLED"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " AccessController.doPrivileged(
            (PrivilegedAction<Boolean>) () -> Boolean.getBoolean(TRIPWIRE_PROPERTY))"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Should debugging checks be enabled? 
"
      end

      operation 8972418 "Tripwire"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8972546 "trip"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "trippingClass" type class_ref 130818 // Class
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produces a log warning, using {@code PlatformLogger.getLogger(className)},
using the supplied message.  The class name of {@code trippingClass} will
be used as the first parameter to the message.

@param trippingClass Name of the class generating the message
@param msg A message format string of the type expected by
{@link PlatformLogger}
"
      end
    end

    class 1098754 "UnknownFormatConversionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when an unknown conversion is given.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to
any method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3559298 // <generalisation>
	relation 3559298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3559298 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2091778 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19060418L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3559426 // s (<unidirectional association>)
	relation 3559426 --->
	  a role_name "s" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3559426 // s (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8972674 "UnknownFormatConversionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the unknown conversion.

@param  s
        Unknown conversion
"
      end

      operation 8972802 "getConversion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unknown conversion.

@return  The unknown conversion.
"
      end

      operation 8972930 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " javadoc inherited from Throwable.java"
      end
    end

    class 1098882 "UnknownFormatFlagsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when an unknown flag is given.

<p> Unless otherwise specified, passing a <tt>null</tt> argument to any
method or constructor in this class will cause a {@link
NullPointerException} to be thrown.

@since 1.5
"
      classrelation 3559554 // <generalisation>
	relation 3559554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3559554 // <generalisation>
	  b parent class_ref 1080834 // IllegalFormatException
      end

      attribute 2091906 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19370506L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3559682 // flags (<unidirectional association>)
	relation 3559682 --->
	  a role_name "flags" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3559682 // flags (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 8973058 "UnknownFormatFlagsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class with the specified flags.

@param  f
        The set of format flags which contain an unknown flag
"
      end

      operation 8973186 "getFlags"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of flags which contains an unknown flag.

@return  The flags
"
      end

      operation 8973314 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " javadoc inherited from Throwable.java"
      end
    end

    class 1099010 "UUID"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that represents an immutable universally unique identifier (UUID).
A UUID represents a 128-bit value.

<p> There exist different variants of these global identifiers.  The methods
of this class are for manipulating the Leach-Salz variant, although the
constructors allow the creation of any variant of UUID (described below).

<p> The layout of a variant 2 (Leach-Salz) UUID is as follows:

The most significant long consists of the following unsigned fields:
<pre>
0xFFFFFFFF00000000 time_low
0x00000000FFFF0000 time_mid
0x000000000000F000 version
0x0000000000000FFF time_hi
</pre>
The least significant long consists of the following unsigned fields:
<pre>
0xC000000000000000 variant
0x3FFF000000000000 clock_seq
0x0000FFFFFFFFFFFF node
</pre>

<p> The variant field contains a value which identifies the layout of the
{@code UUID}.  The bit layout described above is valid only for a {@code
UUID} with a variant value of 2, which indicates the Leach-Salz variant.

<p> The version field holds a value that describes the type of this {@code
UUID}.  There are four different basic types of UUIDs: time-based, DCE
security, name-based, and randomly generated UUIDs.  These types have a
version value of 1, 2, 3 and 4, respectively.

<p> For more information including algorithms used to create {@code UUID}s,
see <a href=\"http://www.ietf.org/rfc/rfc4122.txt\"> <i>RFC&nbsp;4122: A
Universally Unique IDentifier (UUID) URN Namespace</i></a>, section 4.2
&quot;Algorithms for Creating a Time-Based UUID&quot;.

@since   1.5
"
      classrelation 3559810 // <realization>
	relation 3559810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3559810 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3559938 // <realization>
	relation 3559938 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3559938 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 2092034 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4856846361193249489L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Explicit serialVersionUID for interoperability.

"
      end

      attribute 2092162 "mostSigBits"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The most significant 64 bits of this UUID.

@serial

"
      end

      attribute 2092290 "leastSigBits"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The least significant 64 bits of this UUID.

@serial

"
      end

      class 1099138 "Holder"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3560066 // numberGenerator (<unidirectional association>)
	  relation 3560066 --->
	    a role_name "numberGenerator" init_value " new SecureRandom()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3560066 // numberGenerator (<unidirectional association>)
	    b parent class_ref 753154 // SecureRandom
	end
      end

      operation 8973442 "UUID"
	private explicit_return_type ""
	nparams 1
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors and Factories

Private constructor which uses a byte array to construct the new UUID.
"
      end

      operation 8973570 "UUID"
	public explicit_return_type ""
	nparams 2
	  param in name "mostSigBits" explicit_type "long"
	  param in name "leastSigBits" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UUID} using the specified data.  {@code
mostSigBits} is used for the most significant 64 bits of the {@code
UUID} and {@code leastSigBits} becomes the least significant 64 bits of
the {@code UUID}.

@param  mostSigBits
        The most significant bits of the {@code UUID}

@param  leastSigBits
        The least significant bits of the {@code UUID}
"
      end

      operation 8973698 "randomUUID"
	class_operation public return_type class_ref 1099010 // UUID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Static factory to retrieve a type 4 (pseudo randomly generated) UUID.

The {@code UUID} is generated using a cryptographically strong pseudo
random number generator.

@return  A randomly generated {@code UUID}
"
      end

      operation 8973826 "nameUUIDFromBytes"
	class_operation public return_type class_ref 1099010 // UUID
	nparams 1
	  param inout name "name" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Static factory to retrieve a type 3 (name based) {@code UUID} based on
the specified byte array.

@param  name
        A byte array to be used to construct a {@code UUID}

@return  A {@code UUID} generated from the specified array
"
      end

      operation 8973954 "fromString"
	class_operation public return_type class_ref 1099010 // UUID
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code UUID} from the string standard representation as
described in the {@link #toString} method.

@param  name
        A string that specifies a {@code UUID}

@return  A {@code UUID} with the specified value

@throws  IllegalArgumentException
         If name does not conform to the string representation as
         described in {@link #toString}

"
      end

      operation 8974082 "getLeastSignificantBits"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Field Accessor Methods

Returns the least significant 64 bits of this UUID's 128 bit value.

@return  The least significant 64 bits of this UUID's 128 bit value
"
      end

      operation 8974210 "getMostSignificantBits"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most significant 64 bits of this UUID's 128 bit value.

@return  The most significant 64 bits of this UUID's 128 bit value
"
      end

      operation 8974338 "version"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The version number associated with this {@code UUID}.  The version
number describes how this {@code UUID} was generated.

The version number has the following meaning:
<ul>
<li>1    Time-based UUID
<li>2    DCE security UUID
<li>3    Name-based UUID
<li>4    Randomly generated UUID
</ul>

@return  The version number of this {@code UUID}
"
      end

      operation 8974466 "variant"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The variant number associated with this {@code UUID}.  The variant
number describes the layout of the {@code UUID}.

The variant number has the following meaning:
<ul>
<li>0    Reserved for NCS backward compatibility
<li>2    <a href=\"http://www.ietf.org/rfc/rfc4122.txt\">IETF&nbsp;RFC&nbsp;4122</a>
(Leach-Salz), used by this class
<li>6    Reserved, Microsoft Corporation backward compatibility
<li>7    Reserved for future definition
</ul>

@return  The variant number of this {@code UUID}
"
      end

      operation 8974594 "timestamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The timestamp value associated with this UUID.

<p> The 60 bit timestamp value is constructed from the time_low,
time_mid, and time_hi fields of this {@code UUID}.  The resulting
timestamp is measured in 100-nanosecond units since midnight,
October 15, 1582 UTC.

<p> The timestamp value is only meaningful in a time-based UUID, which
has version type 1.  If this {@code UUID} is not a time-based UUID then
this method throws UnsupportedOperationException.

@throws UnsupportedOperationException
        If this UUID is not a version 1 UUID
@return The timestamp of this {@code UUID}.
"
      end

      operation 8974722 "clockSequence"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The clock sequence value associated with this UUID.

<p> The 14 bit clock sequence value is constructed from the clock
sequence field of this UUID.  The clock sequence field is used to
guarantee temporal uniqueness in a time-based UUID.

<p> The {@code clockSequence} value is only meaningful in a time-based
UUID, which has version type 1.  If this UUID is not a time-based UUID
then this method throws UnsupportedOperationException.

@return  The clock sequence of this {@code UUID}

@throws  UnsupportedOperationException
         If this UUID is not a version 1 UUID
"
      end

      operation 8974850 "node"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The node value associated with this UUID.

<p> The 48 bit node value is constructed from the node field of this
UUID.  This field is intended to hold the IEEE 802 address of the machine
that generated this UUID to guarantee spatial uniqueness.

<p> The node value is only meaningful in a time-based UUID, which has
version type 1.  If this UUID is not a time-based UUID then this method
throws UnsupportedOperationException.

@return  The node value of this {@code UUID}

@throws  UnsupportedOperationException
         If this UUID is not a version 1 UUID
"
      end

      operation 8974978 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object Inherited Methods

Returns a {@code String} object representing this {@code UUID}.

<p> The UUID string representation is as described by this BNF:
<blockquote><pre>
{@code
UUID                   = <time_low> \"-\" <time_mid> \"-\"
                         <time_high_and_version> \"-\"
                         <variant_and_sequence> \"-\"
                         <node>
time_low               = 4*<hexOctet>
time_mid               = 2*<hexOctet>
time_high_and_version  = 2*<hexOctet>
variant_and_sequence   = 2*<hexOctet>
node                   = 6*<hexOctet>
hexOctet               = <hexDigit><hexDigit>
hexDigit               =
      \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"
      | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\"
      | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\"
}</pre></blockquote>

@return  A string representation of this {@code UUID}
"
      end

      operation 8975106 "digits"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param in name "val" explicit_type "long"
	  param in name "digits" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns val represented by the specified number of hex digits. "
      end

      operation 8975234 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this {@code UUID}.

@return  A hash code value for this {@code UUID}
"
      end

      operation 8975362 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified object.  The result is {@code
true} if and only if the argument is not {@code null}, is a {@code UUID}
object, has the same variant, and contains the same value, bit for bit,
as this {@code UUID}.

@param  obj
        The object to be compared

@return  {@code true} if the objects are the same; {@code false}
         otherwise
"
      end

      operation 8975490 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "val" type class_ref 1099010 // UUID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Comparison Operations

Compares this UUID with the specified UUID.

<p> The first of two UUIDs is greater than the second if the most
significant field in which the UUIDs differ is greater for the first
UUID.

@param  val
        {@code UUID} to which this {@code UUID} is to be compared

@return  -1, 0 or 1 as this {@code UUID} is less than, equal to, or
         greater than {@code val}

"
      end
    end
  end

  package_ref 129922 // concurrent

  package_ref 134402 // function

  deploymentview 129922 "util"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 145026 "Iterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Consumer;
${definition}"
      associated_elems
	class_ref 132994 // Iterator
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 153986 "Collection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Predicate;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 184194 // Collection
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154114 "AbstractCollection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 184066 // AbstractCollection
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154242 "List"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.UnaryOperator;
${definition}"
      associated_elems
	class_ref 175362 // List
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154370 "ListIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 185090 // ListIterator
      end
      comment "Copyright (c) 1997, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154498 "AbstractList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 183938 // AbstractList
	class_ref 185474 // SubList
	class_ref 185602 // RandomAccessSubList
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154626 "RandomAccess"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 185730 // RandomAccess
      end
      comment "Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154882 "Stack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 183810 // Stack
      end
      comment "Copyright (c) 1994, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 156546 "Map"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 130178 // Map
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 156674 "AbstractMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map.Entry;
${definition}"
      associated_elems
	class_ref 192130 // AbstractMap
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 156930 "Comparator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.function.Function;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToDoubleFunction;
import java.util.Comparators;
${definition}"
      associated_elems
	class_ref 184962 // Comparator
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 198146 "Set"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 192258 // Set
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 198402 "AbstractSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 255618 // AbstractSet
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 218882 "Dictionary"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 275970 // Dictionary
      end
      comment "Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 219266 "Enumeration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 185986 // Enumeration
      end
      comment "Copyright (c) 1994, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 256898 "EventListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 314882 // EventListener
      end
      comment "Copyright (c) 1996, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 259714 "ResourceBundle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.lang.ref.ReferenceQueue;
import java.lang.ref.SoftReference;
import java.lang.ref.WeakReference;
import java.net.JarURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.jar.JarEntry;
import java.util.spi.ResourceBundleControlProvider;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
import sun.util.locale.BaseLocale;
import sun.util.locale.LocaleObjectCache;
${definition}"
      associated_elems
	class_ref 249858 // ResourceBundle
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996, 1997 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - 1999 - All Rights Reserved

The original version of this source code and documentation
is copyrighted and owned by Taligent, Inc., a wholly-owned
subsidiary of IBM. These materials are provided under terms
of a License Agreement between Taligent and Sun. This technology
is protected by multiple US and International patents.

This notice and attribution to Taligent may not be removed.
Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 259842 "ListResourceBundle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.util.ResourceBundleEnumeration;
${definition}"
      associated_elems
	class_ref 318722 // ListResourceBundle
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996, 1997 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - 1998 - All Rights Reserved

The original version of this source code and documentation
is copyrighted and owned by Taligent, Inc., a wholly-owned
subsidiary of IBM. These materials are provided under terms
of a License Agreement between Taligent and Sun. This technology
is protected by multiple US and International patents.

This notice and attribution to Taligent may not be removed.
Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 279426 "Spliterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Consumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
${definition}"
      associated_elems
	class_ref 184450 // Spliterator
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 279554 "HashMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.Serializable;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Function;
${definition}"
      associated_elems
	class_ref 132866 // HashMap
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 280834 "StringTokenizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.*;
${definition}"
      associated_elems
	class_ref 380418 // StringTokenizer
      end
      comment "Copyright (c) 1994, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 346754 "EventObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 525698 // EventObject
      end
      comment "Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 636674 "EventListenerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 886530 // EventListenerProxy
      end
      comment "Copyright (c) 2000, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 732802 "ConcurrentModificationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 994690 // ConcurrentModificationException
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 750850 "Properties"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.Reader;
import java.io.Writer;
import java.io.OutputStreamWriter;
import java.io.BufferedWriter;
import java.security.AccessController;
import java.security.PrivilegedAction;
import sun.util.spi.XmlPropertiesProvider;
${definition}"
      associated_elems
	class_ref 240130 // Properties
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 756482 "Random"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.concurrent.atomic.AtomicLong;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.StreamSupport;
import sun.misc.Unsafe;
${definition}"
      associated_elems
	class_ref 934914 // Random
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 772226 "Date"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.DateFormat;
import java.time.LocalDate;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.lang.ref.SoftReference;
import java.time.Instant;
import sun.util.calendar.BaseCalendar;
import sun.util.calendar.CalendarDate;
import sun.util.calendar.CalendarSystem;
import sun.util.calendar.CalendarUtils;
import sun.util.calendar.Era;
import sun.util.calendar.Gregorian;
import sun.util.calendar.ZoneInfo;
${definition}"
      associated_elems
	class_ref 521474 // Date
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 792322 "Queue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1064194 // Queue
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Written by Doug Lea with assistance from members of JCP JSR-166
Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/
"
    end

    artifact 792450 "AbstractQueue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1064066 // AbstractQueue
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Written by Doug Lea with assistance from members of JCP JSR-166
Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/
"
    end

    artifact 792578 "AbstractSequentialList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1064322 // AbstractSequentialList
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 792706 "Deque"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1064450 // Deque
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Written by Doug Lea and Josh Bloch with assistance from members of
JCP JSR-166 Expert Group and released to the public domain, as explained
at http://creativecommons.org/publicdomain/zero/1.0/
"
    end

    artifact 792834 "ArrayDeque"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.function.Consumer;
${definition}"
      associated_elems
	class_ref 998530 // ArrayDeque
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Written by Josh Bloch of Google Inc. and released to the public domain,
as explained at http://creativecommons.org/publicdomain/zero/1.0/.
"
    end

    artifact 793474 "ArrayPrefixHelpers"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.CountedCompleter;
import java.util.function.BinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleBinaryOperator;
${definition}"
      associated_elems
	class_ref 1064962 // ArrayPrefixHelpers
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 793602 "Arrays"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Array;
import java.util.concurrent.ForkJoinPool;
import java.util.function.BinaryOperator;
import java.util.function.Consumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.UnaryOperator;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 1067522 // Arrays
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 793730 "ArraysParallelSortHelpers"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.CountedCompleter;
${definition}"
      associated_elems
	class_ref 1068546 // ArraysParallelSortHelpers
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 793858 "Base64"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
${definition}"
      associated_elems
	class_ref 1072002 // Base64
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 793986 "BitSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.LongBuffer;
import java.util.stream.IntStream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 238082 // BitSet
      end
      comment "Copyright (c) 1995, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 794114 "Calendar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OptionalDataException;
import java.io.Serializable;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PermissionCollection;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.security.ProtectionDomain;
import java.text.DateFormat;
import java.text.DateFormatSymbols;
import java.time.Instant;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import sun.util.BuddhistCalendar;
import sun.util.calendar.ZoneInfo;
import sun.util.locale.provider.CalendarDataUtility;
import sun.util.locale.provider.LocaleProviderAdapter;
import sun.util.spi.CalendarProvider;
${definition}"
      associated_elems
	class_ref 723586 // Calendar
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996-1998 - All Rights Reserved
(C) Copyright IBM Corp. 1996-1998 - All Rights Reserved

  The original version of this source code and documentation is copyrighted
and owned by Taligent, Inc., a wholly-owned subsidiary of IBM. These
materials are provided under terms of a License Agreement between Taligent
and Sun. This technology is protected by multiple US and International
patents. This notice and attribution to Taligent may not be removed.
  Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 794242 "SortedSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 511874 // SortedSet
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 794370 "NavigableSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1073538 // NavigableSet
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Written by Doug Lea and Josh Bloch with assistance from members of JCP
JSR-166 Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/
"
    end

    artifact 794498 "SortedMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 500354 // SortedMap
      end
      comment "Copyright (c) 1998, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 794626 "NavigableMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1063426 // NavigableMap
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Written by Doug Lea and Josh Bloch with assistance from members of JCP
JSR-166 Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/
"
    end

    artifact 794754 "Collections"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 1073026 // Collections
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 794882 "ComparableTimSort"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1079554 // ComparableTimSort
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
Copyright 2009 Google Inc.  All Rights Reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795010 "Comparators"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.ToDoubleFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;
${definition}"
      associated_elems
	class_ref 1079682 // Comparators
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795138 "Currency"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.Serializable;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.spi.CurrencyNameProvider;
import sun.util.locale.provider.LocaleServiceProviderPool;
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 1046018 // Currency
      end
      comment "Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795394 "DoubleSummaryStatistics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.DoubleConsumer;
import java.util.stream.Collector;
${definition}"
      associated_elems
	class_ref 1080450 // DoubleSummaryStatistics
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795522 "DualPivotQuicksort"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1080578 // DualPivotQuicksort
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795650 "IllegalFormatException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1080834 // IllegalFormatException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795778 "DuplicateFormatFlagsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1080706 // DuplicateFormatFlagsException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 795906 "EmptyStackException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 865026 // EmptyStackException
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796034 "EnumMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map.Entry;
import sun.misc.SharedSecrets;
${definition}"
      associated_elems
	class_ref 458498 // EnumMap
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796162 "EnumSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.SharedSecrets;
${definition}"
      associated_elems
	class_ref 1081986 // EnumSet
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796290 "FormatFlagsConversionMismatchException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1082242 // FormatFlagsConversionMismatchException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796418 "Formattable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1082370 // Formattable
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796546 "FormattableFlags"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1082498 // FormattableFlags
      end
      comment "Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796674 "Formatter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.IOException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileNotFoundException;
import java.io.Flushable;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.math.RoundingMode;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.text.DateFormatSymbols;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.time.DateTimeException;
import java.time.Instant;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalAccessor;
import java.time.temporal.TemporalQueries;
import sun.misc.DoubleConsts;
import sun.misc.FormattedFloatingDecimal;
${definition}"
      associated_elems
	class_ref 922370 // Formatter
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796802 "FormatterClosedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1083650 // FormatterClosedException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 796930 "GregorianCalendar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.time.Instant;
import java.time.ZonedDateTime;
import java.time.temporal.ChronoField;
import sun.util.calendar.BaseCalendar;
import sun.util.calendar.CalendarDate;
import sun.util.calendar.CalendarSystem;
import sun.util.calendar.CalendarUtils;
import sun.util.calendar.Era;
import sun.util.calendar.Gregorian;
import sun.util.calendar.JulianCalendar;
import sun.util.calendar.ZoneInfo;
${definition}"
      associated_elems
	class_ref 723202 // GregorianCalendar
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996-1998 - All Rights Reserved
(C) Copyright IBM Corp. 1996-1998 - All Rights Reserved

  The original version of this source code and documentation is copyrighted
and owned by Taligent, Inc., a wholly-owned subsidiary of IBM. These
materials are provided under terms of a License Agreement between Taligent
and Sun. This technology is protected by multiple US and International
patents. This notice and attribution to Taligent may not be removed.
  Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 797058 "HashSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InvalidObjectException;
${definition}"
      associated_elems
	class_ref 388482 // HashSet
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797186 "IdentityHashMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Array;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Consumer;
${definition}"
      associated_elems
	class_ref 500226 // IdentityHashMap
      end
      comment "Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797314 "IllegalFormatCodePointException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1085314 // IllegalFormatCodePointException
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797442 "IllegalFormatConversionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1085442 // IllegalFormatConversionException
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797570 "IllegalFormatFlagsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1085570 // IllegalFormatFlagsException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797698 "IllegalFormatPrecisionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1085698 // IllegalFormatPrecisionException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797826 "IllegalFormatWidthException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1085826 // IllegalFormatWidthException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 797954 "IllformedLocaleException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1085954 // IllformedLocaleException
      end
      comment "Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















******************************************************************************
Copyright (C) 2009-2010, International Business Machines Corporation and    *
others. All Rights Reserved.                                                *
******************************************************************************
"
    end

    artifact 798082 "NoSuchElementException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 163842 // NoSuchElementException
      end
      comment "Copyright (c) 1994, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 798210 "InputMismatchException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1086082 // InputMismatchException
      end
      comment "Copyright (c) 2003, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 798466 "IntSummaryStatistics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.IntConsumer;
import java.util.stream.Collector;
${definition}"
      associated_elems
	class_ref 1086210 // IntSummaryStatistics
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 798594 "InvalidPropertiesFormatException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.NotSerializableException;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1014658 // InvalidPropertiesFormatException
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 798722 "JapaneseImperialCalendar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import sun.util.locale.provider.CalendarDataUtility;
import sun.util.calendar.BaseCalendar;
import sun.util.calendar.CalendarDate;
import sun.util.calendar.CalendarSystem;
import sun.util.calendar.CalendarUtils;
import sun.util.calendar.Era;
import sun.util.calendar.Gregorian;
import sun.util.calendar.LocalGregorianCalendar;
import sun.util.calendar.ZoneInfo;
${definition}"
      associated_elems
	class_ref 1086338 // JapaneseImperialCalendar
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 798850 "JumboEnumSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1086466 // JumboEnumSet
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 798978 "LinkedHashSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 884866 // LinkedHashSet
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 799106 "Locale"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.security.AccessController;
import java.text.MessageFormat;
import java.util.spi.LocaleNameProvider;
import sun.security.action.GetPropertyAction;
import sun.util.locale.BaseLocale;
import sun.util.locale.InternalLocaleBuilder;
import sun.util.locale.LanguageTag;
import sun.util.locale.LocaleExtensions;
import sun.util.locale.LocaleMatcher;
import sun.util.locale.LocaleObjectCache;
import sun.util.locale.LocaleSyntaxException;
import sun.util.locale.LocaleUtils;
import sun.util.locale.ParseStatus;
import sun.util.locale.provider.LocaleProviderAdapter;
import sun.util.locale.provider.LocaleResources;
import sun.util.locale.provider.LocaleServiceProviderPool;
import sun.util.locale.provider.ResourceBundleBasedAdapter;
${definition}"
      associated_elems
	class_ref 312962 // Locale
      end
      comment "Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996, 1997 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - 1998 - All Rights Reserved

The original version of this source code and documentation
is copyrighted and owned by Taligent, Inc., a wholly-owned
subsidiary of IBM. These materials are provided under terms
of a License Agreement between Taligent and Sun. This technology
is protected by multiple US and International patents.

This notice and attribution to Taligent may not be removed.
Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 799234 "LocaleISOData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1087874 // LocaleISOData
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 799490 "LongSummaryStatistics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.stream.Collector;
${definition}"
      associated_elems
	class_ref 1088002 // LongSummaryStatistics
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 799618 "MissingFormatArgumentException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1088130 // MissingFormatArgumentException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 799746 "MissingFormatWidthException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1088258 // MissingFormatWidthException
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 799874 "MissingResourceException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 660738 // MissingResourceException
      end
      comment "Copyright (c) 1996, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996, 1997 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - 1998 - All Rights Reserved

The original version of this source code and documentation
is copyrighted and owned by Taligent, Inc., a wholly-owned
subsidiary of IBM. These materials are provided under terms
of a License Agreement between Taligent and Sun. This technology
is protected by multiple US and International patents.

This notice and attribution to Taligent may not be removed.
Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 800002 "Objects"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Supplier;
${definition}"
      associated_elems
	class_ref 1088386 // Objects
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800130 "Observable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1088514 // Observable
      end
      comment "Copyright (c) 1994, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800258 "Observer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1088642 // Observer
      end
      comment "Copyright (c) 1994, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800386 "Optional"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Supplier;
${definition}"
      associated_elems
	class_ref 1088770 // Optional
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800514 "OptionalDouble"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.DoubleConsumer;
import java.util.function.DoubleSupplier;
import java.util.function.Supplier;
${definition}"
      associated_elems
	class_ref 1088898 // OptionalDouble
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800642 "OptionalInt"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.IntConsumer;
import java.util.function.IntSupplier;
import java.util.function.Supplier;
${definition}"
      associated_elems
	class_ref 1089154 // OptionalInt
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800770 "OptionalLong"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.LongConsumer;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
${definition}"
      associated_elems
	class_ref 1089410 // OptionalLong
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 800898 "PrimitiveIterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Consumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
${definition}"
      associated_elems
	class_ref 1089666 // PrimitiveIterator
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801026 "PriorityQueue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Consumer;
${definition}"
      associated_elems
	class_ref 1090178 // PriorityQueue
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801154 "PropertyPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.IOException;
import java.security.*;
import java.util.Map;
import java.util.HashMap;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Collections;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 1090562 // PropertyPermission
	class_ref 1090690 // PropertyPermissionCollection
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801282 "PropertyResourceBundle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.Reader;
import java.io.IOException;
import sun.util.ResourceBundleEnumeration;
${definition}"
      associated_elems
	class_ref 1090818 // PropertyResourceBundle
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996, 1997 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - 1998 - All Rights Reserved

The original version of this source code and documentation
is copyrighted and owned by Taligent, Inc., a wholly-owned
subsidiary of IBM. These materials are provided under terms
of a License Agreement between Taligent and Sun. This technology
is protected by multiple US and International patents.

This notice and attribution to Taligent may not be removed.
Taligent is a registered trademark of Taligent, Inc.
"
    end

    artifact 801410 "RegularEnumSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1090946 // RegularEnumSet
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801538 "Scanner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.file.Path;
import java.nio.file.Files;
import java.util.regex.*;
import java.io.*;
import java.math.*;
import java.nio.*;
import java.nio.channels.*;
import java.nio.charset.*;
import java.text.*;
import java.util.Locale;
import sun.misc.LRUCache;
${definition}"
      associated_elems
	class_ref 1091202 // Scanner
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801666 "ServiceConfigurationError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1091458 // ServiceConfigurationError
      end
      comment "Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801794 "ServiceLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.PrivilegedAction;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import java.util.NoSuchElementException;
${definition}"
      associated_elems
	class_ref 1091586 // ServiceLoader
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 801922 "TimeZone"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.time.ZoneId;
import sun.security.action.GetPropertyAction;
import sun.util.calendar.ZoneInfo;
import sun.util.calendar.ZoneInfoFile;
import sun.util.locale.provider.TimeZoneNameUtility;
${definition}"
      associated_elems
	class_ref 723970 // TimeZone
      end
      comment "Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - All Rights Reserved

  The original version of this source code and documentation is copyrighted
and owned by Taligent, Inc., a wholly-owned subsidiary of IBM. These
materials are provided under terms of a License Agreement between Taligent
and Sun. This technology is protected by multiple US and International
patents. This notice and attribution to Taligent may not be removed.
  Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 802050 "SimpleTimeZone"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.IOException;
import sun.util.calendar.CalendarSystem;
import sun.util.calendar.CalendarUtils;
import sun.util.calendar.BaseCalendar;
import sun.util.calendar.Gregorian;
${definition}"
      associated_elems
	class_ref 1091842 // SimpleTimeZone
      end
      comment "Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright Taligent, Inc. 1996 - All Rights Reserved
(C) Copyright IBM Corp. 1996 - All Rights Reserved

  The original version of this source code and documentation is copyrighted
and owned by Taligent, Inc., a wholly-owned subsidiary of IBM. These
materials are provided under terms of a License Agreement between Taligent
and Sun. This technology is protected by multiple US and International
patents. This notice and attribution to Taligent may not be removed.
  Taligent is a registered trademark of Taligent, Inc.

"
    end

    artifact 802306 "Spliterators"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.function.Consumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
${definition}"
      associated_elems
	class_ref 1091970 // Spliterators
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 802434 "SplittableRandom"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.concurrent.atomic.AtomicLong;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.stream.StreamSupport;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
${definition}"
      associated_elems
	class_ref 1094786 // SplittableRandom
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 802562 "StringJoiner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1095298 // StringJoiner
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 802690 "Timer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_elems
	class_ref 882690 // Timer
	class_ref 1095554 // TimerThread
	class_ref 1095426 // TaskQueue
      end
      comment "Copyright (c) 1999, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 802818 "TimerTask"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 882818 // TimerTask
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 802946 "TimSort"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1095682 // TimSort
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
Copyright 2009 Google Inc.  All Rights Reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 803074 "TooManyListenersException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 353922 // TooManyListenersException
      end
      comment "Copyright (c) 1996, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 803202 "TreeSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1098498 // TreeSet
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 803330 "Tripwire"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.util.logging.PlatformLogger;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_elems
	class_ref 1098626 // Tripwire
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 803458 "UnknownFormatConversionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1098754 // UnknownFormatConversionException
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 803586 "UnknownFormatFlagsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1098882 // UnknownFormatFlagsException
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 803714 "UUID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
${definition}"
      associated_elems
	class_ref 1099010 // UUID
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 137346 // stream

  package_ref 140034 // logging

  package_ref 148098 // spi

  package_ref 149250 // zip

  package_ref 154370 // regex

  package_ref 181378 // jar

  package_ref 184066 // prefs
end
